
/********************************************************
*                                                       *
*   Package generated using UEDumper by Spuckwaffel.    *
*                                                       *
********************************************************/

/// dependency: BlueprintContext
/// dependency: CommonInput
/// dependency: CommonUI
/// dependency: CommonUILegacy
/// dependency: CoreUObject
/// dependency: DynamicUI
/// dependency: Engine
/// dependency: EpicMediaBasePlayer
/// dependency: FortniteGame
/// dependency: GameFeatures
/// dependency: GameplayTags
/// dependency: ModelViewViewModel
/// dependency: MotdOverride
/// dependency: SocialUMG
/// dependency: UMG

/// Class /Script/FortniteUI.AthenaChallengeComponentWidget
/// Size: 0x0000 (0x0002C0 - 0x0002C0)
class UAthenaChallengeComponentWidget : public UUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 704;

public:
};

/// Class /Script/FortniteUI.AthenaChallengeListEntryContextInterface
/// Size: 0x0000 (0x000028 - 0x000028)
class UAthenaChallengeListEntryContextInterface : public UInterface
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 40;

public:
};

/// Class /Script/FortniteUI.FortHUDElementWidget
/// Size: 0x0040 (0x0002E8 - 0x000328)
class UFortHUDElementWidget : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 808;

public:
	SMember(FGameplayTag)                              ElementTag                                                  OFFSET(getStruct<T>, {0x2F0, 4, 0, 0})
	SMember(FGameplayTagContainer)                     HUDElementTag                                               OFFSET(getStruct<T>, {0x2F8, 32, 0, 0})
	CMember(ESlateVisibility)                          HiddenVisibility                                            OFFSET(get<T>, {0x318, 1, 0, 0})
	CMember(UTutorialHighlight*)                       TutorialHighlight                                           OFFSET(get<T>, {0x320, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortHUDElementWidget.OnVisibilitySetEvent
	// void OnVisibilitySetEvent(ESlateVisibility InVisibility);                                                                // [0x1d9241c] RequiredAPI|Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortHUDElementWidget.HasAnyTags
	// bool HasAnyTags(FGameplayTagContainer& InTags);                                                                          // [0x935f514] Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortHUDElementWidget.HandleOnHUDElementVisibilityChanged
	// void HandleOnHUDElementVisibilityChanged(FGameplayTagContainer& HiddenHUDElementTags);                                   // [0x935f144] RequiredAPI|Native|Protected|HasOutParms 
	// Function /Script/FortniteUI.FortHUDElementWidget.HandleGetHUDElementWidgetsForTags
	// void HandleGetHUDElementWidgetsForTags(FGameplayTagContainer& HUDElementTags, TArray<UFortHUDElementWidget*>& OutWidgets); // [0x935d420] Final|Native|Public|HasOutParms 
	// Function /Script/FortniteUI.FortHUDElementWidget.AppendHUDElementTags
	// void AppendHUDElementTags(FGameplayTagContainer& AdditionalTags);                                                        // [0x935a104] Final|Native|Public|HasOutParms|BlueprintCallable 
};

/// Class /Script/FortniteUI.FortMobileHUDElement
/// Size: 0x0028 (0x000328 - 0x000350)
class UFortMobileHUDElement : public UFortHUDElementWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 848;

public:
	SMember(FGameplayTag)                              SizePropertyTag                                             OFFSET(getStruct<T>, {0x328, 4, 0, 0})
	DMember(int32_t)                                   ForcedZOrder                                                OFFSET(get<int32_t>, {0x340, 4, 0, 0})
	CMember(UScaleBox*)                                ScaleBox_HUDWidgetScale                                     OFFSET(get<T>, {0x348, 8, 0, 0})
};

/// Class /Script/FortniteUI.BacchusHUDElement
/// Size: 0x0020 (0x000350 - 0x000370)
class UBacchusHUDElement : public UFortMobileHUDElement
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 880;

public:
	DMember(bool)                                      bHideWhenNotUsingTouch                                      OFFSET(get<bool>, {0x350, 1, 0, 0})
	DMember(bool)                                      bUpdatesWithHUDState                                        OFFSET(get<bool>, {0x351, 1, 0, 0})
	DMember(bool)                                      bAlwaysShow                                                 OFFSET(get<bool>, {0x352, 1, 0, 0})
	CMember(EBacchusHUDStateType)                      OnInBuildMode                                               OFFSET(get<T>, {0x353, 1, 0, 0})
	CMember(EBacchusHUDStateType)                      OnInCombatMode                                              OFFSET(get<T>, {0x354, 1, 0, 0})
	CMember(EBacchusHUDStateType)                      OnInEditMode                                                OFFSET(get<T>, {0x355, 1, 0, 0})
	CMember(EBacchusHUDStateType)                      OnInCreativeMode                                            OFFSET(get<T>, {0x356, 1, 0, 0})
	CMember(EBacchusHUDStateType)                      OnInBattleLabMode                                           OFFSET(get<T>, {0x357, 1, 0, 0})
	CMember(EBacchusHUDStateType)                      IsFreeFalling                                               OFFSET(get<T>, {0x358, 1, 0, 0})
	CMember(EBacchusHUDStateType)                      IsGliding                                                   OFFSET(get<T>, {0x359, 1, 0, 0})
	CMember(EBacchusHUDStateType)                      CanOpenChute                                                OFFSET(get<T>, {0x35A, 1, 0, 0})
	CMember(EBacchusHUDStateType)                      InLockedBus                                                 OFFSET(get<T>, {0x35B, 1, 0, 0})
	CMember(EBacchusHUDStateType)                      InUnlockedBus                                               OFFSET(get<T>, {0x35C, 1, 0, 0})
	CMember(EBacchusHUDStateType)                      OnTargeting                                                 OFFSET(get<T>, {0x35D, 1, 0, 0})
	CMember(EBacchusHUDStateType)                      OnUsingScopeTargeting                                       OFFSET(get<T>, {0x35E, 1, 0, 0})
	CMember(EBacchusHUDStateType)                      OnCanTarget                                                 OFFSET(get<T>, {0x35F, 1, 0, 0})
	CMember(EBacchusHUDStateType)                      OnCanUseScopeTargeting                                      OFFSET(get<T>, {0x360, 1, 0, 0})
	CMember(EBacchusHUDStateType)                      OnCrouching                                                 OFFSET(get<T>, {0x361, 1, 0, 0})
	CMember(EBacchusHUDStateType)                      OnCanUseSecondaryAbility                                    OFFSET(get<T>, {0x362, 1, 0, 0})
	CMember(EBacchusHUDStateType)                      OnDBNO                                                      OFFSET(get<T>, {0x363, 1, 0, 0})
	CMember(EBacchusHUDStateType)                      OnCarryingDBNO                                              OFFSET(get<T>, {0x364, 1, 0, 0})
	CMember(EBacchusHUDStateType)                      OnCarryingHeldObject                                        OFFSET(get<T>, {0x365, 1, 0, 0})
	CMember(EBacchusHUDStateType)                      OnImprovedDBNO                                              OFFSET(get<T>, {0x366, 1, 0, 0})
	CMember(EBacchusHUDStateType)                      OnControllingRCPawn                                         OFFSET(get<T>, {0x367, 1, 0, 0})
	CMember(EBacchusHUDStateType)                      OnInVehicle                                                 OFFSET(get<T>, {0x368, 1, 0, 0})
	CMember(EBacchusHUDStateType)                      OnDrivingVehicle                                            OFFSET(get<T>, {0x369, 1, 0, 0})
	CMember(EBacchusHUDStateType)                      OnZiplining                                                 OFFSET(get<T>, {0x36A, 1, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.BacchusHUDElement.ShowHighlight
	// void ShowHighlight(bool Show);                                                                                           // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.BacchusHUDElement.OnHUDStateUpdate
	// void OnHUDStateUpdate(FFortHUDState& NewState);                                                                          // [0x9134c8c] Native|Event|Protected|HasOutParms|BlueprintCallable|BlueprintEvent 
	// Function /Script/FortniteUI.BacchusHUDElement.HandleInputMethodChanged
	// void HandleInputMethodChanged(ECommonInputType CurrentInputType);                                                        // [0x9133cc4] Final|Native|Protected 
};

/// Class /Script/FortniteUI.AthenaEquippedItemBase
/// Size: 0x00A8 (0x000370 - 0x000418)
class UAthenaEquippedItemBase : public UBacchusHUDElement
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1048;

public:
	CMember(EEquippedWeaponDisplay)                    CurrentMode                                                 OFFSET(get<T>, {0x370, 1, 0, 0})
	DMember(int32_t)                                   AmountConsideredInfinite                                    OFFSET(get<int32_t>, {0x37C, 4, 0, 0})
	SMember(FText)                                     DefaultOutOfAmmoText                                        OFFSET(getStruct<T>, {0x380, 24, 0, 0})
	CMember(UCommonVisibilitySwitcher*)                Switcher_Content                                            OFFSET(get<T>, {0x398, 8, 0, 0})
	CMember(UPanelWidget*)                             Panel_ResourceContent                                       OFFSET(get<T>, {0x3A0, 8, 0, 0})
	CMember(UPanelWidget*)                             Panel_AmmoContent                                           OFFSET(get<T>, {0x3A8, 8, 0, 0})
	CMember(UPanelWidget*)                             Panel_UtilityContent                                        OFFSET(get<T>, {0x3B0, 8, 0, 0})
	CMember(UImage*)                                   Image_AmmoIcon                                              OFFSET(get<T>, {0x3B8, 8, 0, 0})
	CMember(UImage*)                                   Image_ResourceIcon                                          OFFSET(get<T>, {0x3C0, 8, 0, 0})
	CMember(UImage*)                                   Image_UtilityIcon                                           OFFSET(get<T>, {0x3C8, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_MagazineAmmoCount                                      OFFSET(get<T>, {0x3D0, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_SurplusAmmoCount                                       OFFSET(get<T>, {0x3D8, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_ResourceCount                                          OFFSET(get<T>, {0x3E0, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_UtilityAmmoCount                                       OFFSET(get<T>, {0x3E8, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_OutOfAmmo                                              OFFSET(get<T>, {0x3F0, 8, 0, 0})
	CMember(UScaleBox*)                                RootScaleBox                                                OFFSET(get<T>, {0x3F8, 8, 0, 0})
	CMember(ESlateVisibility)                          WeaponEquipVisibility                                       OFFSET(get<T>, {0x400, 1, 0, 0})
	CMember(TArray<FGameplayAttribute>)                TrackedAttributes                                           OFFSET(get<T>, {0x408, 16, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.AthenaEquippedItemBase.HandleWorldItemsChanged
	// void HandleWorldItemsChanged();                                                                                          // [0x8f74ae8] Final|Native|Protected 
	// Function /Script/FortniteUI.AthenaEquippedItemBase.HandleWeaponTargetingChanged
	// void HandleWeaponTargetingChanged(bool bIsTargeting);                                                                    // [0x8f74a68] Final|Native|Protected 
	// Function /Script/FortniteUI.AthenaEquippedItemBase.HandleWeaponReloadStarted
	// void HandleWeaponReloadStarted(float ReloadTime, EFortWeaponReloadType ReloadType);                                      // [0x8f749a4] Final|Native|Protected 
	// Function /Script/FortniteUI.AthenaEquippedItemBase.HandleWeaponReloadCancelled
	// void HandleWeaponReloadCancelled();                                                                                      // [0x8f74990] Final|Native|Protected 
	// Function /Script/FortniteUI.AthenaEquippedItemBase.HandleWeaponOverheatValueChanged
	// void HandleWeaponOverheatValueChanged(float CurrentValue, float MaxValue, EFortWeaponOverheatState State, bool bIsInCooldown); // [0x8f74850] Final|Native|Protected 
	// Function /Script/FortniteUI.AthenaEquippedItemBase.HandleWeaponEquipped
	// void HandleWeaponEquipped(AFortWeapon* NewWeapon, AFortWeapon* PrevWeapon);                                              // [0x8f7478c] Final|Native|Protected 
	// Function /Script/FortniteUI.AthenaEquippedItemBase.HandleViewTargetChanged
	// void HandleViewTargetChanged();                                                                                          // [0x8f74778] Final|Native|Protected 
	// Function /Script/FortniteUI.AthenaEquippedItemBase.HandleSecondaryFireReleased
	// void HandleSecondaryFireReleased(AFortWeapon* Weapon);                                                                   // [0x8f74288] Final|Native|Protected 
	// Function /Script/FortniteUI.AthenaEquippedItemBase.HandleSecondaryFirePressed
	// void HandleSecondaryFirePressed(AFortWeapon* Weapon);                                                                    // [0x8f74208] Final|Native|Protected 
	// Function /Script/FortniteUI.AthenaEquippedItemBase.HandleLocalAmmoChanged
	// void HandleLocalAmmoChanged(int32_t LocalCount, int32_t LocalRemaining);                                                 // [0x8f73e5c] Final|Native|Protected 
	// Function /Script/FortniteUI.AthenaEquippedItemBase.HandleBuildingMaterialChanged
	// void HandleBuildingMaterialChanged();                                                                                    // [0x8f73864] Final|Native|Protected 
	// Function /Script/FortniteUI.AthenaEquippedItemBase.BP_HandleWeaponTargetingChanged
	// void BP_HandleWeaponTargetingChanged(bool bIsTargeting);                                                                 // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaEquippedItemBase.BP_HandleWeaponReloadStarted
	// void BP_HandleWeaponReloadStarted(float ReloadTime, EFortWeaponReloadType ReloadType);                                   // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaEquippedItemBase.BP_HandleWeaponReloadCancelled
	// void BP_HandleWeaponReloadCancelled(AFortWeapon* Weapon);                                                                // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaEquippedItemBase.BP_HandleWeaponOverheatValueChanged
	// void BP_HandleWeaponOverheatValueChanged(float CurrentValue, float MaxValue, EFortWeaponOverheatState State, bool bIsInCooldown); // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaEquippedItemBase.BP_HandleWeaponModeChanged
	// void BP_HandleWeaponModeChanged(EEquippedWeaponDisplay Mode);                                                            // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaEquippedItemBase.BP_HandleWeaponEquipped
	// void BP_HandleWeaponEquipped(AFortWeapon* NewWeapon, AFortWeapon* PrevWeapon);                                           // [0x8f72230] Native|Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaEquippedItemBase.BP_HandleSecondaryFireReleased
	// void BP_HandleSecondaryFireReleased();                                                                                   // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaEquippedItemBase.BP_HandleSecondaryFirePressed
	// void BP_HandleSecondaryFirePressed();                                                                                    // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaEquippedItemBase.BP_HandleResourceTypeChanged
	// void BP_HandleResourceTypeChanged(UFortResourceItemDefinition* Item, int32_t ResourceCount);                             // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaEquippedItemBase.BP_HandleResourceCountChanged
	// void BP_HandleResourceCountChanged(int32_t ResourceCount);                                                               // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaEquippedItemBase.BP_HandleHideReserveAmmoChanged
	// void BP_HandleHideReserveAmmoChanged(bool bHideReserveAmmo);                                                             // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaEquippedItemBase.BP_HandleHasBulletsPerClipChanged
	// void BP_HandleHasBulletsPerClipChanged(bool bHasBulletsPerClip);                                                         // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaEquippedItemBase.BP_HandleHasAmmoChanged
	// void BP_HandleHasAmmoChanged(bool bHasAmmo);                                                                             // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaEquippedItemBase.BP_HandleAmmoCountChanged
	// void BP_HandleAmmoCountChanged(int32_t MagazineAmmoCount, int32_t SurplusAmmoCount, int32_t TotalRemaining);             // [0x1d9241c] Event|Protected|BlueprintEvent 
};

/// Class /Script/FortniteUI.AthenaEquippedItemReticleWidgetBase
/// Size: 0x0048 (0x000418 - 0x000460)
class UAthenaEquippedItemReticleWidgetBase : public UAthenaEquippedItemBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1120;

public:
	DMember(int32_t)                                   MaximumAmmo                                                 OFFSET(get<int32_t>, {0x418, 4, 0, 0})
	DMember(float)                                     CurrentAmmoPercentage                                       OFFSET(get<float>, {0x41C, 4, 0, 0})
	DMember(float)                                     LowAmmoPercentage                                           OFFSET(get<float>, {0x420, 4, 0, 0})
	CMember(UMaterialInstanceDynamic*)                 AmmoCounterMaterialInstanceDynamic                          OFFSET(get<T>, {0x428, 8, 0, 0})
	CMember(UCommonBorder*)                            AmmoCounter                                                 OFFSET(get<T>, {0x430, 8, 0, 0})
	CMember(AFortWeapon*)                              CurrentEquippedWeapon                                       OFFSET(get<T>, {0x438, 8, 0, 0})
	DMember(bool)                                      bShouldHideReticleAmmoCounterWhileTargeting                 OFFSET(get<bool>, {0x440, 1, 0, 0})
	DMember(bool)                                      bIsHoldingSecondaryFire                                     OFFSET(get<bool>, {0x441, 1, 0, 0})
	DMember(float)                                     TimeToOutroAnim                                             OFFSET(get<float>, {0x444, 4, 0, 0})
	SMember(FTimerHandle)                              FadeOutTimerHandle                                          OFFSET(getStruct<T>, {0x448, 8, 0, 0})
	DMember(bool)                                      bIsAmmoVisible                                              OFFSET(get<bool>, {0x450, 1, 0, 0})
	CMember(UWidgetAnimation*)                         FadeoutAnimation                                            OFFSET(get<T>, {0x458, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.AthenaEquippedItemReticleWidgetBase.FadeAmmoOut
	// void FadeAmmoOut(float PlaybackSpeed);                                                                                   // [0x8f2c5e0] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.AthenaEquippedItemReticleWidgetBase.FadeAmmoInOut
	// void FadeAmmoInOut();                                                                                                    // [0x8f2c5cc] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.AthenaEquippedItemReticleWidgetBase.FadeAmmoIn
	// void FadeAmmoIn();                                                                                                       // [0x8f2c5b8] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.AthenaEquippedItemReticleWidgetBase.DefaultFadeAmmoOut
	// void DefaultFadeAmmoOut();                                                                                               // [0x8f2c59c] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/FortniteUI.AthenaEquippedItemInfoWidget
/// Size: 0x0140 (0x000418 - 0x000558)
class UAthenaEquippedItemInfoWidget : public UAthenaEquippedItemBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1368;

public:
};

/// Class /Script/FortniteUI.AthenaEquippedItemWidgetBase
/// Size: 0x0030 (0x000558 - 0x000588)
class UAthenaEquippedItemWidgetBase : public UAthenaEquippedItemInfoWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1416;

public:
	DMember(float)                                     OutroDelayTime                                              OFFSET(get<float>, {0x560, 4, 0, 0})
	CMember(UVerticalBox*)                             SwitchPopup                                                 OFFSET(get<T>, {0x568, 8, 0, 0})
	CMember(UCommonTextBlock*)                         SwitchPopupText                                             OFFSET(get<T>, {0x570, 8, 0, 0})
	CMember(UWidgetAnimation*)                         NameIntro                                                   OFFSET(get<T>, {0x578, 8, 0, 0})
	CMember(UWidgetAnimation*)                         NameOutro                                                   OFFSET(get<T>, {0x580, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.AthenaEquippedItemWidgetBase.OnPopUpOnSwitchDone
	// void OnPopUpOnSwitchDone();                                                                                              // [0x8f2c8f4] Final|Native|Private|BlueprintCallable 
};

/// Class /Script/FortniteUI.AthenaFrontendFlowInterruptInterface
/// Size: 0x0000 (0x000028 - 0x000028)
class UAthenaFrontendFlowInterruptInterface : public UInterface
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 40;

public:
};

/// Class /Script/FortniteUI.AthenaFullScreenMapBrowsingControlsWidget
/// Size: 0x0058 (0x000400 - 0x000458)
class UAthenaFullScreenMapBrowsingControlsWidget : public UCommonActivatableWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1112;

public:
	CMember(UPanelWidget*)                             Panel_PanGroup                                              OFFSET(get<T>, {0x400, 8, 0, 0})
	CMember(UPanelWidget*)                             Panel_ZoomGroup                                             OFFSET(get<T>, {0x408, 8, 0, 0})
	CMember(USizeBox*)                                 SizeBox_PlaceMarker                                         OFFSET(get<T>, {0x410, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_PlaceMarker                                            OFFSET(get<T>, {0x418, 8, 0, 0})
	CMember(USizeBox*)                                 SizeBox_TeleportToMarker                                    OFFSET(get<T>, {0x420, 8, 0, 0})
	SMember(FText)                                     TextPlaceMarker                                             OFFSET(getStruct<T>, {0x428, 24, 0, 0})
	SMember(FText)                                     TextRemoveMarker                                            OFFSET(getStruct<T>, {0x440, 24, 0, 0})
};

/// Class /Script/FortniteUI.AthenaHUDFeedbackLine
/// Size: 0x0090 (0x000328 - 0x0003B8)
class UAthenaHUDFeedbackLine : public UFortHUDElementWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 952;

public:
	CMember(UFortKeybindWidget*)                       Keybind_Feedback                                            OFFSET(get<T>, {0x330, 8, 0, 0})
	CMember(UCommonRichTextBlock*)                     RichText_Feedback                                           OFFSET(get<T>, {0x338, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.AthenaHUDFeedbackLine.OnShowEnabledUpdated
	// void OnShowEnabledUpdated(bool bShowEnabled);                                                                            // [0x1d9241c] Event|Protected|BlueprintEvent 
};

/// Class /Script/FortniteUI.AthenaHUDFeedbackLineCooldown
/// Size: 0x0010 (0x0003B8 - 0x0003C8)
class UAthenaHUDFeedbackLineCooldown : public UAthenaHUDFeedbackLine
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 968;

public:
};

/// Class /Script/FortniteUI.FortPrimaryContentInterface
/// Size: 0x0000 (0x000028 - 0x000028)
class UFortPrimaryContentInterface : public UInterface
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 40;

public:
};

/// Class /Script/FortniteUI.AthenaHUDPrimaryContentInterface
/// Size: 0x0000 (0x000028 - 0x000028)
class UAthenaHUDPrimaryContentInterface : public UFortPrimaryContentInterface
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 40;

public:
};

/// Class /Script/FortniteUI.AthenaInventoryGroupBase
/// Size: 0x0028 (0x0002E8 - 0x000310)
class UAthenaInventoryGroupBase : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 784;

public:
	CMember(TWeakObjectPtr<UAthenaInventoryPanel*>)    ParentInventoryPanel                                        OFFSET(get<T>, {0x2E8, 8, 0, 0})
	CMember(UFortItemTileView*)                        ItemTileView                                                OFFSET(get<T>, {0x2F0, 8, 0, 0})
	CMember(TArray<EFortItemType>)                     FilteredItemTypes                                           OFFSET(get<T>, {0x2F8, 16, 0, 0})
	DMember(int32_t)                                   DefaultNumEntries                                           OFFSET(get<int32_t>, {0x308, 4, 0, 0})
	CMember(EInventoryContentSortType)                 InventoryContentSortType                                    OFFSET(get<T>, {0x30C, 1, 0, 0})
};

/// Class /Script/FortniteUI.AthenaInventoryGroupResources
/// Size: 0x0040 (0x000310 - 0x000350)
class UAthenaInventoryGroupResources : public UAthenaInventoryGroupBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 848;

public:
	SMember(FGameplayTagContainer)                     CurrencyItemTags                                            OFFSET(getStruct<T>, {0x310, 32, 0, 0})
	SMember(FGameplayTagContainer)                     IngredientItemTags                                          OFFSET(getStruct<T>, {0x330, 32, 0, 0})
};

/// Class /Script/FortniteUI.FortTabInterface
/// Size: 0x0000 (0x000028 - 0x000028)
class UFortTabInterface : public UInterface
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 40;

public:
};

/// Class /Script/FortniteUI.AthenaInventoryTabInterface
/// Size: 0x0000 (0x000028 - 0x000028)
class UAthenaInventoryTabInterface : public UFortTabInterface
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 40;

public:
};

/// Class /Script/FortniteUI.AthenaItemShopSectionInterface
/// Size: 0x0000 (0x000028 - 0x000028)
class UAthenaItemShopSectionInterface : public UInterface
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 40;

public:
};

/// Class /Script/FortniteUI.AthenaMapScreenAnalyticsInterface
/// Size: 0x0000 (0x000028 - 0x000028)
class UAthenaMapScreenAnalyticsInterface : public UInterface
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 40;

public:
};

/// Class /Script/FortniteUI.AthenaMapScreenContainerTabInterface
/// Size: 0x0000 (0x000028 - 0x000028)
class UAthenaMapScreenContainerTabInterface : public UInterface
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 40;

public:
};

/// Class /Script/FortniteUI.FortUIStateWidgetBase
/// Size: 0x0018 (0x000400 - 0x000418)
class UFortUIStateWidgetBase : public UCommonActivatableWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1048;

public:
	CMember(UCommonActivatableWidgetStack*)            WidgetStack_PrimaryContent                                  OFFSET(get<T>, {0x410, 8, 0, 0})
};

/// Class /Script/FortniteUI.AthenaHUDBase
/// Size: 0x0200 (0x000418 - 0x000618)
class UAthenaHUDBase : public UFortUIStateWidgetBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1560;

public:
	CMember(TArray<UUserWidget*>)                      MinigameWidgets                                             OFFSET(get<T>, {0x448, 16, 0, 0})
	CMember(UClass*)                                   KairosHUDLayerClass                                         OFFSET(get<T>, {0x458, 8, 0, 0})
	CMember(TArray<FMutatorAddedWidgets>)              MutatorAddedWidgets                                         OFFSET(get<T>, {0x460, 16, 0, 0})
	CMember(UAthenaMapScreenContainer*)                MapScreenContainer                                          OFFSET(get<T>, {0x530, 8, 0, 0})
	CMember(UAthenaHUDMenu*)                           AthenaHUDMenu                                               OFFSET(get<T>, {0x538, 8, 0, 0})
	CMember(UCommonActivatableWidget*)                 TitleBar                                                    OFFSET(get<T>, {0x540, 8, 0, 0})
	CMember(TSet<EUIExtensionSlot>)                    RelevantExtensionSlots                                      OFFSET(get<T>, {0x548, 80, 0, 0})
	CMember(TWeakObjectPtr<UClass*>)                   NewEmotePicker                                              OFFSET(get<T>, {0x598, 32, 0, 0})
	CMember(TWeakObjectPtr<UClass*>)                   SquadComsPickerClass                                        OFFSET(get<T>, {0x5B8, 32, 0, 0})
	CMember(TWeakObjectPtr<UClass*>)                   WeaponWheelClass                                            OFFSET(get<T>, {0x5D8, 32, 0, 0})
	CMember(TWeakObjectPtr<UClass*>)                   QuickWeaponClass                                            OFFSET(get<T>, {0x5F8, 32, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.AthenaHUDBase.SetZoneCompleted
	// void SetZoneCompleted(bool bValue);                                                                                      // [0x8fa8624] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.AthenaHUDBase.OnHUDScaleChanged
	// void OnHUDScaleChanged(float HUDScale);                                                                                  // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaHUDBase.OnExtensionWidgetRemoved
	// void OnExtensionWidgetRemoved(EUIExtensionSlot ExtensionSlot, UUserWidget* Widget);                                      // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaHUDBase.OnExtensionWidgetCreated
	// void OnExtensionWidgetCreated(EUIExtensionSlot ExtensionSlot, UUserWidget* Widget);                                      // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaHUDBase.HandleUpdateMinigameUIExtensions
	// void HandleUpdateMinigameUIExtensions(AFortMinigame* Minigame);                                                          // [0x8fa7ab0] Final|Native|Protected 
	// Function /Script/FortniteUI.AthenaHUDBase.HandleRecoverFromPostGame
	// void HandleRecoverFromPostGame();                                                                                        // [0x8fa78c4] Final|Native|Protected 
	// Function /Script/FortniteUI.AthenaHUDBase.HandlePickerOpenRequest
	// void HandlePickerOpenRequest(EFortPickerMode Mode, int32_t InitialOption, bool bIgnoreFirstAccept);                      // [0x8fa76d4] Final|Native|Protected 
	// Function /Script/FortniteUI.AthenaHUDBase.HandleOnMutatorRemoved
	// void HandleOnMutatorRemoved(AFortGameplayMutator* NewMutator);                                                           // [0x8fa755c] Final|Native|Protected 
	// Function /Script/FortniteUI.AthenaHUDBase.HandleOnMutatorAdded
	// void HandleOnMutatorAdded(AFortGameplayMutator* NewMutator);                                                             // [0x8fa74dc] Final|Native|Protected 
	// Function /Script/FortniteUI.AthenaHUDBase.HandleNewPanelFromMutator
	// void HandleNewPanelFromMutator(UClass* PanelClass);                                                                      // [0x8fa7310] Final|Native|Protected 
	// Function /Script/FortniteUI.AthenaHUDBase.HandleMinigamePlayModeChanged
	// void HandleMinigamePlayModeChanged(AFortMinigame* Minigame, bool bIsInPlayMode);                                         // [0x8fa71ac] Final|Native|Protected 
	// Function /Script/FortniteUI.AthenaHUDBase.HandleMinigameHideHUD
	// void HandleMinigameHideHUD(bool bLoading);                                                                               // [0x8fa712c] Final|Native|Protected 
	// Function /Script/FortniteUI.AthenaHUDBase.HandleCursorModeChanging
	// void HandleCursorModeChanging(bool bCursorModeEnabled, FName ActionName);                                                // [0x8fa6fac] Final|Native|Protected 
	// Function /Script/FortniteUI.AthenaHUDBase.HandleCursorModeChanged
	// void HandleCursorModeChanged(bool bCursorModeEnabled, FName ActionName, UUserWidget* CustomWidget);                      // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaHUDBase.GetZoneCompleted
	// bool GetZoneCompleted();                                                                                                 // [0x8fa6e60] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.AthenaHUDBase.BindVolumeEvents
	// void BindVolumeEvents();                                                                                                 // [0x7826848] Native|Protected     
};

/// Class /Script/FortniteUI.AthenaMobileHUD
/// Size: 0x0020 (0x000618 - 0x000638)
class UAthenaMobileHUD : public UAthenaHUDBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1592;

public:
	CMember(TArray<FUIExtension>)                      TournamentUIExtensions                                      OFFSET(get<T>, {0x618, 16, 0, 0})
	CMember(TArray<FUIExtension>)                      ArenaTournamentUIExtensions                                 OFFSET(get<T>, {0x628, 16, 0, 0})
};

/// Class /Script/FortniteUI.AthenaQuestCustomMapWidget
/// Size: 0x0008 (0x0002C0 - 0x0002C8)
class UAthenaQuestCustomMapWidget : public UUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 712;

public:
};

/// Class /Script/FortniteUI.AthenaNPCQuestRewardsPanel
/// Size: 0x0000 (0x0002C8 - 0x0002C8)
class UAthenaNPCQuestRewardsPanel : public UAthenaQuestCustomMapWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 712;

public:
};

/// Class /Script/FortniteUI.AthenaNPCQuestServicesPanel
/// Size: 0x0008 (0x0002C8 - 0x0002D0)
class UAthenaNPCQuestServicesPanel : public UAthenaQuestCustomMapWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 720;

public:
	CMember(UCollectionNPCServiceContainer*)           Services                                                    OFFSET(get<T>, {0x2C8, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.AthenaNPCQuestServicesPanel.BP_Show
	// void BP_Show(FText& NPCTitle, TWeakObjectPtr<UObject*>& NPCPicture);                                                     // [0x1d9241c] Event|Protected|HasOutParms|BlueprintEvent 
};

/// Class /Script/FortniteUI.AthenaPlayerInfoBaseWidgetInterface
/// Size: 0x0000 (0x000028 - 0x000028)
class UAthenaPlayerInfoBaseWidgetInterface : public UInterface
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 40;

public:
};

/// Class /Script/FortniteUI.AthenaPostMatchScreenContainerTabInterface
/// Size: 0x0000 (0x000028 - 0x000028)
class UAthenaPostMatchScreenContainerTabInterface : public UInterface
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 40;

public:
};

/// Class /Script/FortniteUI.AthenaQuestCategoryCompletedTracker
/// Size: 0x0030 (0x0002C0 - 0x0002F0)
class UAthenaQuestCategoryCompletedTracker : public UUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 752;

public:
	SMember(FText)                                     MoreInTimerCompletionText                                   OFFSET(getStruct<T>, {0x2C8, 24, 0, 0})
	DMember(bool)                                      bShowCompletionTextUpperCase                                OFFSET(get<bool>, {0x2E0, 1, 0, 0})
	CMember(UAthenaChallengeDateTimeTextBlock*)        DateTimeText_MoreQuestsLater                                OFFSET(get<T>, {0x2E8, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.AthenaQuestCategoryCompletedTracker.GetIsProgressBarEnabled
	// bool GetIsProgressBarEnabled();                                                                                          // [0x8f2c660] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/FortniteUI.AthenaReplayActionFeedRowProxyInstance
/// Size: 0x0158 (0x000028 - 0x000180)
class UAthenaReplayActionFeedRowProxyInstance : public UObject
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 384;

public:
	SMember(FReplayEliminationEventInfo)               RowData                                                     OFFSET(getStruct<T>, {0x30, 336, 0, 0})
};

/// Class /Script/FortniteUI.AthenaReplayBrowserRowProxyInstance
/// Size: 0x0040 (0x000028 - 0x000068)
class UAthenaReplayBrowserRowProxyInstance : public UObject
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 104;

public:
};

/// Class /Script/FortniteUI.AthenaVariantPickerConfig
/// Size: 0x0050 (0x000030 - 0x000080)
class UAthenaVariantPickerConfig : public UDataAsset
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 128;

public:
	CMember(TMap<FGameplayTag, FAthenaVariantFilterSet>) FilterSets                                                OFFSET(get<T>, {0x30, 80, 0, 0})
};

/// Class /Script/FortniteUI.BacchusRadialDisplayBase
/// Size: 0x0008 (0x000328 - 0x000330)
class UBacchusRadialDisplayBase : public UFortHUDElementWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 816;

public:
	SMember(FGameplayTag)                              TrackedCueTag                                               OFFSET(getStruct<T>, {0x328, 4, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.BacchusRadialDisplayBase.OnUpdateRadialCounterEvent_Blueprint
	// void OnUpdateRadialCounterEvent_Blueprint(float NewCounterFillPercent);                                                  // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.BacchusRadialDisplayBase.HandleUIGameplayCue
	// void HandleUIGameplayCue(FName CueName, TEnumAsByte<EGameplayCueEvent> EventType, FGameplayCueParameters& Parameters);   // [0x8f2dfbc] Final|Native|Private|HasOutParms 
};

/// Class /Script/FortniteUI.BattlePassInputData
/// Size: 0x0000 (0x000028 - 0x000028)
class UBattlePassInputData : public UObject
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 40;

public:
};

/// Class /Script/FortniteUI.BattlePassEnabledInputData
/// Size: 0x0008 (0x000028 - 0x000030)
class UBattlePassEnabledInputData : public UBattlePassInputData
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 48;

public:
};

/// Class /Script/FortniteUI.BattlePassBulkBuyInputData
/// Size: 0x0010 (0x000028 - 0x000038)
class UBattlePassBulkBuyInputData : public UBattlePassInputData
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 56;

public:
};

/// Class /Script/FortniteUI.CheckDismissableActivatableWidget
/// Size: 0x0000 (0x000028 - 0x000028)
class UCheckDismissableActivatableWidget : public UInterface
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 40;

public:
};

/// Class /Script/FortniteUI.CreativeContentBrowserTab_CreationCondition
/// Size: 0x0000 (0x000028 - 0x000028)
class UCreativeContentBrowserTab_CreationCondition : public UObject
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 40;

public:
};

/// Class /Script/FortniteUI.DonutChallengeIdleGame
/// Size: 0x0948 (0x0002E8 - 0x000C30)
class UDonutChallengeIdleGame : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 3120;

public:
	SMember(FMulticastInlineDelegate)                  OnNewHighScore                                              OFFSET(getStruct<T>, {0x2E8, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnDistanceScoreChanged                                      OFFSET(getStruct<T>, {0x2F8, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnSpeedScoreChanged                                         OFFSET(getStruct<T>, {0x308, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnStyleScoreChanged                                         OFFSET(getStruct<T>, {0x318, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnEndMatchScore                                             OFFSET(getStruct<T>, {0x328, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnDayNightCycleChanged                                      OFFSET(getStruct<T>, {0x338, 16, 0, 0})
	SMember(FLinearColor)                              BoundsColor                                                 OFFSET(getStruct<T>, {0x488, 16, 0, 0})
	DMember(float)                                     DayNightCycleTime                                           OFFSET(get<float>, {0x498, 4, 0, 0})
	DMember(float)                                     PlayerTopSpeed                                              OFFSET(get<float>, {0x49C, 4, 0, 0})
	DMember(float)                                     BumpyRideSpeedReduction                                     OFFSET(get<float>, {0x4A0, 4, 0, 0})
	SMember(FVector2D)                                 MapSize                                                     OFFSET(getStruct<T>, {0x4A8, 16, 0, 0})
	SMember(FVector2D)                                 PlayerCollisionOffset                                       OFFSET(getStruct<T>, {0x4B8, 16, 0, 0})
	SMember(FVector2D)                                 PlayerCollisionSize                                         OFFSET(getStruct<T>, {0x4C8, 16, 0, 0})
	DMember(float)                                     MapScale                                                    OFFSET(get<float>, {0x4D8, 4, 0, 0})
	DMember(float)                                     MaxNumLevels                                                OFFSET(get<float>, {0x4DC, 4, 0, 0})
	DMember(float)                                     ObjectSpawnPlacementRadius                                  OFFSET(get<float>, {0x4E0, 4, 0, 0})
	DMember(int32_t)                                   NumOfTreeSpawnAttempts                                      OFFSET(get<int32_t>, {0x4E4, 4, 0, 0})
	DMember(int32_t)                                   NumOfRockSpawnAttempts                                      OFFSET(get<int32_t>, {0x4E8, 4, 0, 0})
	DMember(int32_t)                                   NumOfBigRockSpawnAttempts                                   OFFSET(get<int32_t>, {0x4EC, 4, 0, 0})
	DMember(int32_t)                                   NumOfJumpPadSpawnAttempts                                   OFFSET(get<int32_t>, {0x4F0, 4, 0, 0})
	CMember(UCurveFloat*)                              Curve_BonusSpawn_Trees                                      OFFSET(get<T>, {0x4F8, 8, 0, 0})
	CMember(UCurveFloat*)                              Curve_BonusSpawn_SmallBumps                                 OFFSET(get<T>, {0x500, 8, 0, 0})
	CMember(UCurveFloat*)                              Curve_BonusSpawn_Bumps                                      OFFSET(get<T>, {0x508, 8, 0, 0})
	CMember(UCurveFloat*)                              Curve_BonusSpawn_JumpPads                                   OFFSET(get<T>, {0x510, 8, 0, 0})
	SMember(FName)                                     Param_Player_Direction                                      OFFSET(getStruct<T>, {0x518, 4, 0, 0})
	SMember(FName)                                     Param_Player_FacingLeft                                     OFFSET(getStruct<T>, {0x51C, 4, 0, 0})
	SMember(FSlateBrush)                               PlayerBrush                                                 OFFSET(getStruct<T>, {0x520, 192, 0, 0})
	SMember(FSlateBrush)                               TreeBrush                                                   OFFSET(getStruct<T>, {0x5E0, 192, 0, 0})
	SMember(FSlateBrush)                               RockBrush                                                   OFFSET(getStruct<T>, {0x6A0, 192, 0, 0})
	SMember(FSlateBrush)                               BigRockBrush                                                OFFSET(getStruct<T>, {0x760, 192, 0, 0})
	SMember(FSlateBrush)                               JumpPadBrush                                                OFFSET(getStruct<T>, {0x820, 192, 0, 0})
	SMember(FSlateBrush)                               TorchBrush                                                  OFFSET(getStruct<T>, {0x8E0, 192, 0, 0})
	SMember(FSlateBrush)                               MonsterBrush                                                OFFSET(getStruct<T>, {0x9A0, 192, 0, 0})
	SMember(FSlateBrush)                               ChimiBrush                                                  OFFSET(getStruct<T>, {0xA60, 192, 0, 0})
	SMember(FSlateBrush)                               ArmBrush                                                    OFFSET(getStruct<T>, {0xB20, 192, 0, 0})
	CMember(UWidgetAnimation*)                         Anim_Jump                                                   OFFSET(get<T>, {0xBE0, 8, 0, 0})
	CMember(UWidgetAnimation*)                         Anim_MediumJump                                             OFFSET(get<T>, {0xBE8, 8, 0, 0})
	CMember(UWidgetAnimation*)                         Anim_SuperJump                                              OFFSET(get<T>, {0xBF0, 8, 0, 0})
	CMember(UWidgetAnimation*)                         Anim_BumpyRide                                              OFFSET(get<T>, {0xBF8, 8, 0, 0})
	CMember(UImage*)                                   Image_Player                                                OFFSET(get<T>, {0xC00, 8, 0, 0})
	CMember(UImage*)                                   Image_MobileInput                                           OFFSET(get<T>, {0xC08, 8, 0, 0})
	CMember(UImage*)                                   Image_MobileInput_Background                                OFFSET(get<T>, {0xC10, 8, 0, 0})
	CMember(UCommonButtonLegacy*)                      Button_Jump                                                 OFFSET(get<T>, {0xC18, 8, 0, 0})
	CMember(UCommonButtonLegacy*)                      Button_MobileJump                                           OFFSET(get<T>, {0xC20, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.DonutChallengeIdleGame.TryJump
	// void TryJump();                                                                                                          // [0x8f2e210] Final|Native|Private 
	// Function /Script/FortniteUI.DonutChallengeIdleGame.StartGame
	// void StartGame();                                                                                                        // [0x8f2e1a8] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.DonutChallengeIdleGame.EndSuperJump
	// void EndSuperJump();                                                                                                     // [0x8f2d768] Final|Native|Private 
	// Function /Script/FortniteUI.DonutChallengeIdleGame.EndJump
	// void EndJump();                                                                                                          // [0x8f2d750] Final|Native|Private 
	// Function /Script/FortniteUI.DonutChallengeIdleGame.EndBumpyRide
	// void EndBumpyRide();                                                                                                     // [0x8f2d72c] Final|Native|Private 
	// Function /Script/FortniteUI.DonutChallengeIdleGame.DebugBPFloat
	// void DebugBPFloat(float InFloat);                                                                                        // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.DonutChallengeIdleGame.BPUpdateStyle
	// void BPUpdateStyle(int32_t NewStyle);                                                                                    // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.DonutChallengeIdleGame.BPUpdateSpeed
	// void BPUpdateSpeed(int32_t NewSpeed);                                                                                    // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.DonutChallengeIdleGame.BPUpdateDistance
	// void BPUpdateDistance(int32_t NewDistance);                                                                              // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.DonutChallengeIdleGame.BPShowHighScore
	// void BPShowHighScore(int32_t inNewHighScore);                                                                            // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.DonutChallengeIdleGame.BPOnSpeedUpdated
	// void BPOnSpeedUpdated(int32_t NewCurSpeed);                                                                              // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.DonutChallengeIdleGame.BPOnNextLevelReached
	// void BPOnNextLevelReached();                                                                                             // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.DonutChallengeIdleGame.BPOnMonsterNearChanged
	// void BPOnMonsterNearChanged(bool bIsNearLevelMonster);                                                                   // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.DonutChallengeIdleGame.BPOnJump
	// void BPOnJump();                                                                                                         // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.DonutChallengeIdleGame.BPOnGameInitialized
	// void BPOnGameInitialized();                                                                                              // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.DonutChallengeIdleGame.BPOnFailedJumpPress
	// void BPOnFailedJumpPress();                                                                                              // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.DonutChallengeIdleGame.BPOnFacingDirectionChanged
	// void BPOnFacingDirectionChanged(bool bIsLeftFacing);                                                                     // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.DonutChallengeIdleGame.BPOnCrash
	// void BPOnCrash();                                                                                                        // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.DonutChallengeIdleGame.BPOnCollision
	// void BPOnCollision(TEnumAsByte<EFortDonutIdleGameObject> ObjectType);                                                    // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.DonutChallengeIdleGame.BPGameOver
	// void BPGameOver();                                                                                                       // [0x1d9241c] Event|Protected|BlueprintEvent 
};

/// Class /Script/FortniteUI.FortActivatablePanel
/// Size: 0x0038 (0x000538 - 0x000570)
class UFortActivatablePanel : public UCommonActivatablePanelLegacy
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1392;

public:
	DMember(bool)                                      bIsPushedOnToContentPanelStack                              OFFSET(get<bool>, {0x540, 1, 0, 0})
	DMember(bool)                                      bIsAlreadyOnContentPanelStack                               OFFSET(get<bool>, {0x541, 1, 0, 0})
	CMember(EInputPriority)                            InputPriority                                               OFFSET(get<T>, {0x542, 1, 0, 0})
	DMember(bool)                                      bIsClosableByPlayerInput                                    OFFSET(get<bool>, {0x543, 1, 0, 0})
	SMember(FPrimaryContentSetup)                      PrimaryContentSetup                                         OFFSET(getStruct<T>, {0x544, 3, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortActivatablePanel.RestoreScrollWidget
	// void RestoreScrollWidget(UWidget* FallbackWidget);                                                                       // [0x96afee4] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortActivatablePanel.RestoreCenterWidget
	// void RestoreCenterWidget(UWidget* FallbackWidget);                                                                       // [0x96afe64] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortActivatablePanel.AsyncPlaySound2D
	// void AsyncPlaySound2D(UObject* WorldContextObject, TWeakObjectPtr<USoundBase*> SoundToLoad, float VolumeMultiplier, float PitchMultiplier, float StartTime); // [0x931a058] Final|BlueprintCosmetic|Native|Public|BlueprintCallable 
};

/// Class /Script/FortniteUI.DonutIdleGameScreen
/// Size: 0x0010 (0x000570 - 0x000580)
class UDonutIdleGameScreen : public UFortActivatablePanel
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1408;

public:
	CMember(UWidgetAnimation*)                         Anim_Intro                                                  OFFSET(get<T>, {0x570, 8, 0, 0})
	CMember(UDonutChallengeIdleGame*)                  Widget_GameLayer                                            OFFSET(get<T>, {0x578, 8, 0, 0})
};

/// Class /Script/FortniteUI.FortFireModeStreamingVideo
/// Size: 0x0000 (0x000178 - 0x000178)
class UFortFireModeStreamingVideo : public UFortBaseStreamingVideo
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 376;

public:
};

/// Class /Script/FortniteUI.FortActivityBrowserAttributionsModal
/// Size: 0x0068 (0x000400 - 0x000468)
class UFortActivityBrowserAttributionsModal : public UCommonActivatableWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1128;

public:
	CMember(UCommonButtonBase*)                        Button_Back                                                 OFFSET(get<T>, {0x410, 8, 0, 0})
	CMember(UCommonButtonBase*)                        Button_OpenLink                                             OFFSET(get<T>, {0x418, 8, 0, 0})
	CMember(UCommonRichTextBlock*)                     RichText_Description                                        OFFSET(get<T>, {0x420, 8, 0, 0})
	CMember(UScrollBox*)                               ScrollBox_Details                                           OFFSET(get<T>, {0x428, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_ActivityName                                           OFFSET(get<T>, {0x430, 8, 0, 0})
	CMember(UCommonRichTextBlock*)                     Text_ActivityOrigin                                         OFFSET(get<T>, {0x438, 8, 0, 0})
	CMember(UCommonRichTextBlock*)                     Text_LinkCode                                               OFFSET(get<T>, {0x440, 8, 0, 0})
	DMember(float)                                     ScrollAmount                                                OFFSET(get<float>, {0x448, 4, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortActivityBrowserAttributionsModal.OnCreditsModalInitialized
	// void OnCreditsModalInitialized();                                                                                        // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortActivityBrowserAttributionsModal.OnAttributionsModalInitialized
	// void OnAttributionsModalInitialized();                                                                                   // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortActivityBrowserAttributionsModal.GetLinkCodeTextFormat
	// FText GetLinkCodeTextFormat(FText& LinkCode);                                                                            // [0x8f2dd68] Native|Event|Protected|HasOutParms|BlueprintEvent 
	// Function /Script/FortniteUI.FortActivityBrowserAttributionsModal.GetCreatorTextFormat
	// FText GetCreatorTextFormat(FText& CreatorName);                                                                          // [0x8f2d9c8] Native|Event|Protected|HasOutParms|BlueprintEvent 
	// Function /Script/FortniteUI.FortActivityBrowserAttributionsModal.GetAttributionsTextFormat
	// FText GetAttributionsTextFormat(FText& Title, FText& Author, FText& License);                                            // [0x8f2d820] Native|Event|Protected|HasOutParms|BlueprintEvent 
};

/// Class /Script/FortniteUI.FortActivityModeSetSelectionModalBase
/// Size: 0x0018 (0x000400 - 0x000418)
class UFortActivityModeSetSelectionModalBase : public UCommonActivatableWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1048;

public:
};

/// Class /Script/FortniteUI.FortActivityViewModel
/// Size: 0x0110 (0x000068 - 0x000178)
class UFortActivityViewModel : public UMVVMViewModelBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 376;

public:
	DMember(bool)                                      bIsLeader                                                   OFFSET(get<bool>, {0x68, 1, 0, 0})
	DMember(int32_t)                                   PartySize                                                   OFFSET(get<int32_t>, {0x6C, 4, 0, 0})
	DMember(bool)                                      bIsCurrentActivity                                          OFFSET(get<bool>, {0x70, 1, 0, 0})
	CMember(EFortInvalidActivityReason)                InvalidActivityReason                                       OFFSET(get<T>, {0x71, 1, 0, 0})
	CMember(UFortGameActivity*)                        AssignedGameActivity                                        OFFSET(get<T>, {0xF0, 8, 0, 0})
	CMember(TMap<uint32_t, ECreativeLinkPreviewSize>)  MinColumnSizeToImageSize                                    OFFSET(get<T>, {0xF8, 80, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortActivityViewModel.StopVisibilityImpression
	// void StopVisibilityImpression();                                                                                         // [0x8f2e1f4] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortActivityViewModel.StopActiveImpression
	// void StopActiveImpression();                                                                                             // [0x8f2e1d8] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortActivityViewModel.StartVisibilityImpression
	// void StartVisibilityImpression();                                                                                        // [0x8f2e1bc] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortActivityViewModel.StartActiveImpression
	// void StartActiveImpression();                                                                                            // [0x34720d4] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortActivityViewModel.ResetAnalytics
	// void ResetAnalytics();                                                                                                   // [0x8f2e194] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortActivityViewModel.IsRatingRefused
	// bool IsRatingRefused();                                                                                                  // [0x8f2e170] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortActivityViewModel.IsRatingNotApplicable
	// bool IsRatingNotApplicable();                                                                                            // [0x8f2e14c] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortActivityViewModel.IsFavorite
	// bool IsFavorite();                                                                                                       // [0x2fab9ac] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortActivityViewModel.IsEpicOriginalCreated
	// bool IsEpicOriginalCreated();                                                                                            // [0x8f2e128] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortActivityViewModel.IsEpicLabsCreated
	// bool IsEpicLabsCreated();                                                                                                // [0x8f2e104] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortActivityViewModel.IsEpicCreated
	// bool IsEpicCreated();                                                                                                    // [0x2cef814] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortActivityViewModel.IsActivityLocked
	// bool IsActivityLocked();                                                                                                 // [0x15ecc60] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortActivityViewModel.HasAgeRating
	// bool HasAgeRating();                                                                                                     // [0x8f2e0e0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortActivityViewModel.GetTeamSizeRangeMin
	// int32_t GetTeamSizeRangeMin();                                                                                           // [0x8f2df98] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortActivityViewModel.GetTeamSizeRangeMax
	// int32_t GetTeamSizeRangeMax();                                                                                           // [0x8f2df74] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortActivityViewModel.GetReferenceSurfaceName
	// FName GetReferenceSurfaceName();                                                                                         // [0x8f2df48] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortActivityViewModel.GetReferencePanelName
	// FName GetReferencePanelName();                                                                                           // [0x8f2df1c] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortActivityViewModel.GetRatingInteractiveElements
	// TArray<FText> GetRatingInteractiveElements();                                                                            // [0x8f2dee0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortActivityViewModel.GetRatingDescriptors
	// TArray<FText> GetRatingDescriptors();                                                                                    // [0x8f2dea4] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortActivityViewModel.GetNumFriendsPlaying
	// int32_t GetNumFriendsPlaying();                                                                                          // [0x15ebea8] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortActivityViewModel.GetMaxTeamSize
	// int32_t GetMaxTeamSize();                                                                                                // [0x8f2de80] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortActivityViewModel.GetMaxPlayersRangeMin
	// int32_t GetMaxPlayersRangeMin();                                                                                         // [0x8f2de5c] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortActivityViewModel.GetMaxPlayersRangeMax
	// int32_t GetMaxPlayersRangeMax();                                                                                         // [0x8f2de38] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortActivityViewModel.GetIslandCreatorName
	// FString GetIslandCreatorName();                                                                                          // [0x8f2dd28] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortActivityViewModel.GetImageTexture
	// UTexture* GetImageTexture();                                                                                             // [0x2701084] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortActivityViewModel.GetImageLoadingState
	// EActivityImageLoadingState GetImageLoadingState();                                                                       // [0x2eb6f1c] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortActivityViewModel.GetDisplaySubName
	// FText GetDisplaySubName();                                                                                               // [0x8f2dce4] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortActivityViewModel.GetDisplayName
	// FText GetDisplayName();                                                                                                  // [0x15ebd40] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortActivityViewModel.GetDescription
	// FText GetDescription();                                                                                                  // [0x8f2dca0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortActivityViewModel.GetCCUCount
	// int32_t GetCCUCount();                                                                                                   // [0x15ec000] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortActivityViewModel.GetAgeRatingTexture
	// UTexture2DDynamic* GetAgeRatingTexture();                                                                                // [0x8f2d7fc] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortActivityViewModel.GetAgeRatingText
	// FText GetAgeRatingText();                                                                                                // [0x8f2d7c0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortActivityViewModel.GetAgeRatingShortText
	// FText GetAgeRatingShortText();                                                                                           // [0x8f2d784] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortActivityViewModel.DoesActivityRequirePurchase
	// bool DoesActivityRequirePurchase();                                                                                      // [0x15ecbe4] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/FortniteUI.FortAthenaSurvivorTierBadge
/// Size: 0x0010 (0x0002C0 - 0x0002D0)
class UFortAthenaSurvivorTierBadge : public UUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 720;

public:
	CMember(EFortAthenaSurvivorTierBadgeSize)          BadgeSize                                                   OFFSET(get<T>, {0x2C0, 1, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortAthenaSurvivorTierBadge.SetBadgeSize
	// void SetBadgeSize(EFortAthenaSurvivorTierBadgeSize InBadgeSize);                                                         // [0x8f30730] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortAthenaSurvivorTierBadge.OverrideTierAndPrestigeLevel
	// void OverrideTierAndPrestigeLevel(int32_t CustomTier, int32_t CustomPrestigeLvl);                                        // [0x8f30670] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortAthenaSurvivorTierBadge.HandlePostMatchVisibility
	// void HandlePostMatchVisibility();                                                                                        // [0x8f303a4] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortAthenaSurvivorTierBadge.BP_OnSurvivorTierStateChanged
	// void BP_OnSurvivorTierStateChanged(int32_t Tier, int32_t PrestigeLevel);                                                 // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortAthenaSurvivorTierBadge.BP_OnPresentAnimation
	// void BP_OnPresentAnimation(int32_t BeforeTier, int32_t BeforePrestigeLevel, int32_t AfterTier, int32_t AfterPrestigeLevel); // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortAthenaSurvivorTierBadge.BP_OnBadgeSizeChanged
	// void BP_OnBadgeSizeChanged();                                                                                            // [0x1d9241c] Event|Protected|BlueprintEvent 
};

/// Class /Script/FortniteUI.FortAthenaSurvivorTiersQuestRewardsPanel
/// Size: 0x0000 (0x0002C0 - 0x0002C0)
class UFortAthenaSurvivorTiersQuestRewardsPanel : public UUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 704;

public:
};

/// Class /Script/FortniteUI.FortMobileHUDElementProxy
/// Size: 0x0080 (0x000350 - 0x0003D0)
class UFortMobileHUDElementProxy : public UFortMobileHUDElement
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 976;

public:
	SMember(FText)                                     WidgetName                                                  OFFSET(getStruct<T>, {0x350, 24, 0, 0})
	DMember(bool)                                      AppendWidgetAndBehaviorNames                                OFFSET(get<bool>, {0x368, 1, 0, 0})
	SMember(FLinearColor)                              InBoundsHighlightColor                                      OFFSET(getStruct<T>, {0x36C, 16, 0, 0})
	SMember(FLinearColor)                              OutOfBoundsProxyHighlightColor                              OFFSET(getStruct<T>, {0x37C, 16, 0, 0})
	CMember(UImage*)                                   Image_SelectionHighlight                                    OFFSET(get<T>, {0x3C0, 8, 0, 0})
	CMember(UImage*)                                   Image_OutOfBoundsIndicator                                  OFFSET(get<T>, {0x3C8, 8, 0, 0})
};

/// Class /Script/FortniteUI.FortAutorunLockHUDElementProxy
/// Size: 0x0008 (0x0003D0 - 0x0003D8)
class UFortAutorunLockHUDElementProxy : public UFortMobileHUDElementProxy
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 984;

public:
	CMember(UOverlay*)                                 Overlay_AutorunLockZone                                     OFFSET(get<T>, {0x3D0, 8, 0, 0})
};

/// Class /Script/FortniteUI.FortAutorunLockZoneButton
/// Size: 0x0008 (0x000370 - 0x000378)
class UFortAutorunLockZoneButton : public UBacchusHUDElement
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 888;

public:
	CMember(UFortAutorunLockZone*)                     AutorunLockZone                                             OFFSET(get<T>, {0x370, 8, 0, 0})
};

/// Class /Script/FortniteUI.FortBangWrapperContentInterface
/// Size: 0x0000 (0x000028 - 0x000028)
class UFortBangWrapperContentInterface : public UInterface
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 40;

public:
};

/// Class /Script/FortniteUI.FortBladeWidget
/// Size: 0x0000 (0x0002E8 - 0x0002E8)
class UFortBladeWidget : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 744;

public:
};

/// Class /Script/FortniteUI.FortCabinEmailManagementWidget
/// Size: 0x0098 (0x0002C0 - 0x000358)
class UFortCabinEmailManagementWidget : public UUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 856;

public:
	CMember(UOverlay*)                                 Overlay_EmailEntry                                          OFFSET(get<T>, {0x2C0, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_Warning                                                OFFSET(get<T>, {0x2C8, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_MainDescription                                        OFFSET(get<T>, {0x2D0, 8, 0, 0})
	CMember(UCommonButtonBase*)                        Button_Done                                                 OFFSET(get<T>, {0x2D8, 8, 0, 0})
	CMember(UCommonButtonBase*)                        Button_Cancel                                               OFFSET(get<T>, {0x2E0, 8, 0, 0})
	CMember(UFortCTAButton*)                           Button_ResendEmail                                          OFFSET(get<T>, {0x2E8, 8, 0, 0})
	CMember(UFortCTAButton*)                           Button_EditEmail                                            OFFSET(get<T>, {0x2F0, 8, 0, 0})
	CMember(UFortInputField*)                          InputField_Email                                            OFFSET(get<T>, {0x2F8, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_Email                                                  OFFSET(get<T>, {0x300, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortCabinEmailManagementWidget.OnShowFailureReason
	// void OnShowFailureReason(FText& ErrorText);                                                                              // [0x1d9241c] Event|Public|HasOutParms|BlueprintEvent 
	// Function /Script/FortniteUI.FortCabinEmailManagementWidget.OnScreenStateChange
	// void OnScreenStateChange(ECabinEmailViewState NewState);                                                                 // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.FortCabinEmailManagementWidget.OnChangeEmailEditMode
	// void OnChangeEmailEditMode(bool bIsInEditMode);                                                                          // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.FortCabinEmailManagementWidget.HandleConfirmEmail
	// void HandleConfirmEmail(FText& NewText, TEnumAsByte<ETextCommit> CommitInfo);                                            // [0x8f2f360] Final|Native|Protected|HasOutParms 
};

/// Class /Script/FortniteUI.FortColorPickerConfiguration
/// Size: 0x0008 (0x000030 - 0x000038)
class UFortColorPickerConfiguration : public UDataAsset
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 56;

public:
	DMember(bool)                                      bNoColorOptionAvailable                                     OFFSET(get<bool>, {0x30, 1, 0, 0})
	CMember(EColorPickerType)                          ColorPickerType                                             OFFSET(get<T>, {0x31, 1, 0, 0})
	DMember(bool)                                      bInitializeCustomColorFromSelectedSwatch                    OFFSET(get<bool>, {0x32, 1, 0, 0})
	CMember(EColorPickerColorRepresentation)           CustomColorRepresentation                                   OFFSET(get<T>, {0x33, 1, 0, 0})
};

/// Class /Script/FortniteUI.FortContentGatingIntroModal
/// Size: 0x0000 (0x000400 - 0x000400)
class UFortContentGatingIntroModal : public UCommonActivatableWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1024;

public:
};

/// Class /Script/FortniteUI.FortCreativeCreateBuildModal
/// Size: 0x00A0 (0x000400 - 0x0004A0)
class UFortCreativeCreateBuildModal : public UCommonActivatableWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1184;

public:
	CMember(UCommonAnimatedSwitcher*)                  Switcher_Content                                            OFFSET(get<T>, {0x400, 8, 0, 0})
	CMember(UPanelWidget*)                             Panel_CreateBuild                                           OFFSET(get<T>, {0x408, 8, 0, 0})
	CMember(UPanelWidget*)                             Panel_CreateBuildInProgress                                 OFFSET(get<T>, {0x410, 8, 0, 0})
	CMember(UPanelWidget*)                             Panel_CreateBuildSucceeded                                  OFFSET(get<T>, {0x418, 8, 0, 0})
	CMember(UPanelWidget*)                             Panel_CreateBuildFailed                                     OFFSET(get<T>, {0x420, 8, 0, 0})
	CMember(UCommonButtonBase*)                        Button_PrimaryFunction                                      OFFSET(get<T>, {0x428, 8, 0, 0})
	CMember(UCommonButtonBase*)                        Button_CloseTouch                                           OFFSET(get<T>, {0x430, 8, 0, 0})
	CMember(UCommonButtonBase*)                        Button_CopyMnemonic                                         OFFSET(get<T>, {0x438, 8, 0, 0})
	CMember(UButton*)                                  Button_CreatorPortalUrl                                     OFFSET(get<T>, {0x440, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_CreatorPortalUrl                                       OFFSET(get<T>, {0x448, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_Mnemonic                                               OFFSET(get<T>, {0x450, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_CreateBuildError                                       OFFSET(get<T>, {0x458, 8, 0, 0})
	CMember(UFortLazyImage*)                           LazyImage_CreatorPortalQrCode                               OFFSET(get<T>, {0x460, 8, 0, 0})
	DMember(bool)                                      bCreateBuildInProgress                                      OFFSET(get<bool>, {0x468, 1, 0, 0})
	DMember(bool)                                      bClearPersistentData                                        OFFSET(get<bool>, {0x469, 1, 0, 0})
	SMember(FString)                                   CreatedMnemonic                                             OFFSET(getStruct<T>, {0x470, 16, 0, 0})
	SMember(FDataTableRowHandle)                       ClearPersistentDataInputRowHandle                           OFFSET(getStruct<T>, {0x480, 16, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortCreativeCreateBuildModal.SetClearPersistentDataInputEnabled
	// void SetClearPersistentDataInputEnabled(bool bEnabled);                                                                  // [0x8f3083c] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.FortCreativeCreateBuildModal.SetClearPersistentData
	// void SetClearPersistentData(bool bInClearPersistentData);                                                                // [0x8f307bc] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.FortCreativeCreateBuildModal.OnQrCodeImageUpdated
	// void OnQrCodeImageUpdated();                                                                                             // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortCreativeCreateBuildModal.OnMnemonicCopied
	// void OnMnemonicCopied();                                                                                                 // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortCreativeCreateBuildModal.OnCreateBuildSucceeded
	// void OnCreateBuildSucceeded();                                                                                           // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortCreativeCreateBuildModal.OnCreateBuildStarted
	// void OnCreateBuildStarted();                                                                                             // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortCreativeCreateBuildModal.OnCreateBuildFailed
	// void OnCreateBuildFailed(FString ErrorCode);                                                                             // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortCreativeCreateBuildModal.OnContentSwitcherTransitioningChanged
	// void OnContentSwitcherTransitioningChanged(bool bIsTransitioning);                                                       // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortCreativeCreateBuildModal.OnContentSwitcherActiveWidgetChanged
	// void OnContentSwitcherActiveWidgetChanged(UWidget* ActiveWidget);                                                        // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortCreativeCreateBuildModal.OnClearPersistentDataSet
	// void OnClearPersistentDataSet();                                                                                         // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortCreativeCreateBuildModal.HandleCreatorPortalUrlButtonClicked
	// void HandleCreatorPortalUrlButtonClicked();                                                                              // [0x8f2f4a0] Final|Native|Private 
	// Function /Script/FortniteUI.FortCreativeCreateBuildModal.BP_Reset
	// void BP_Reset();                                                                                                         // [0x1d9241c] Event|Protected|BlueprintEvent 
};

/// Class /Script/FortniteUI.FortCreativeCreatorAttributions
/// Size: 0x0158 (0x000400 - 0x000558)
class UFortCreativeCreatorAttributions : public UCommonActivatableWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1368;

public:
	CMember(UFortDynamicEntryBox*)                     DynamicEntryBox_CreditsContainer                            OFFSET(get<T>, {0x400, 8, 0, 0})
	SMember(FText)                                     CreatorTitle                                                OFFSET(getStruct<T>, {0x408, 24, 0, 0})
	SMember(FText)                                     AttributionsTitle                                           OFFSET(getStruct<T>, {0x420, 24, 0, 0})
	CMember(UUserWidget*)                              AttributionsTitleWidget                                     OFFSET(get<T>, {0x438, 8, 0, 0})
	SMember(FText)                                     CreditsTitle                                                OFFSET(getStruct<T>, {0x440, 24, 0, 0})
	CMember(UUserWidget*)                              CreditsTitleWidget                                          OFFSET(get<T>, {0x458, 8, 0, 0})
	SMember(FText)                                     AttributionsTextFormat                                      OFFSET(getStruct<T>, {0x460, 24, 0, 0})
	CMember(UClass*)                                   CreditsTeamTitleCardClass                                   OFFSET(get<T>, {0x478, 8, 0, 0})
	CMember(UClass*)                                   CreditsCreatorAttributionsClass                             OFFSET(get<T>, {0x480, 8, 0, 0})
	CMember(TWeakObjectPtr<UClass*>)                   CreditsAttributionsModalClass                               OFFSET(get<T>, {0x488, 32, 0, 0})
	CMember(UFortCreativeCreditsTeamTitleCard*)        Button_CreditsTeamTitleCard                                 OFFSET(get<T>, {0x4A8, 8, 0, 0})
	CMember(UFortCreativeCreditsAttributions*)         Button_CreditsAttributions                                  OFFSET(get<T>, {0x4B0, 8, 0, 0})
	CMember(UFortCreativeCreditsAttributions*)         Button_Credits                                              OFFSET(get<T>, {0x4B8, 8, 0, 0})
	SMember(FMargin)                                   SectionTitlePadding                                         OFFSET(getStruct<T>, {0x4C0, 16, 0, 0})
	SMember(FMargin)                                   TitleCardButtonPadding                                      OFFSET(getStruct<T>, {0x4D0, 16, 0, 0})
	SMember(FMargin)                                   TeamMemberButtonPadding                                     OFFSET(getStruct<T>, {0x4E0, 16, 0, 0})
	SMember(FMargin)                                   AttributionsButtonPadding                                   OFFSET(getStruct<T>, {0x4F0, 16, 0, 0})
	SMember(FMargin)                                   CreditsButtonPadding                                        OFFSET(getStruct<T>, {0x500, 16, 0, 0})
	CMember(UFortGameActivity*)                        CurrentGameActivity                                         OFFSET(get<T>, {0x510, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortCreativeCreatorAttributions.OnTitleCardButtonCreated
	// void OnTitleCardButtonCreated();                                                                                         // [0x1d9241c] Event|Protected|BlueprintEvent|Const 
	// Function /Script/FortniteUI.FortCreativeCreatorAttributions.OnTeamMemberTitleCardButtonCreated
	// void OnTeamMemberTitleCardButtonCreated(UFortCreativeCreditsTeamTitleCard* TeamMemberButton);                            // [0x1d9241c] Event|Protected|BlueprintEvent|Const 
	// Function /Script/FortniteUI.FortCreativeCreatorAttributions.OnSectionTitleCreated
	// void OnSectionTitleCreated(UFortCreativeCreditsSectionTitle* SectionTitle);                                              // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortCreativeCreatorAttributions.OnCreditsButtonCreated
	// void OnCreditsButtonCreated();                                                                                           // [0x1d9241c] Event|Protected|BlueprintEvent|Const 
	// Function /Script/FortniteUI.FortCreativeCreatorAttributions.OnAttributionsButtonCreated
	// void OnAttributionsButtonCreated();                                                                                      // [0x1d9241c] Event|Protected|BlueprintEvent|Const 
};

/// Class /Script/FortniteUI.FortCreativeCreditsAttributions
/// Size: 0x0020 (0x001490 - 0x0014B0)
class UFortCreativeCreditsAttributions : public UCommonButtonBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 5296;

public:
	CMember(UTimelineComponent*)                       HoverAnimationTimeline                                      OFFSET(get<T>, {0x1490, 8, 0, 0})
	CMember(UCommonRichTextBlock*)                     RichText_CreditsAttributionsShortDescription                OFFSET(get<T>, {0x1498, 8, 0, 0})
	DMember(int32_t)                                   AttributionsPreviewTextWordLimit                            OFFSET(get<int32_t>, {0x14A0, 4, 0, 0})
	CMember(UCurveLinearColor*)                        HoverAnimationCurve                                         OFFSET(get<T>, {0x14A8, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortCreativeCreditsAttributions.OnAnimationUpdate
	// void OnAnimationUpdate(FLinearColor Color);                                                                              // [0x8f30420] Final|Native|Private|HasDefaults|Const 
	// Function /Script/FortniteUI.FortCreativeCreditsAttributions.GetHoverAnimationLength
	// float GetHoverAnimationLength();                                                                                         // [0x1d9241c] Event|Protected|BlueprintEvent 
};

/// Class /Script/FortniteUI.FortCreativeCreditsSectionTitle
/// Size: 0x0008 (0x0002E8 - 0x0002F0)
class UFortCreativeCreditsSectionTitle : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 752;

public:
	CMember(UCommonTextBlock*)                         Text_Title                                                  OFFSET(get<T>, {0x2E8, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortCreativeCreditsSectionTitle.SetTitleText
	// void SetTitleText(FText& TitleText);                                                                                     // [0x8f30990] Final|Native|Public|HasOutParms|Const 
};

/// Class /Script/FortniteUI.FortCreativeCreditsTeamTitleCard
/// Size: 0x0020 (0x001490 - 0x0014B0)
class UFortCreativeCreditsTeamTitleCard : public UCommonButtonBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 5296;

public:
	CMember(UCommonTextBlock*)                         Text_CreatorTitle                                           OFFSET(get<T>, {0x1490, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_CreatorName                                            OFFSET(get<T>, {0x1498, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_CreatorDescription                                     OFFSET(get<T>, {0x14A0, 8, 0, 0})
};

/// Class /Script/FortniteUI.FortCreativeIslandInfoViewModel
/// Size: 0x0080 (0x000068 - 0x0000E8)
class UFortCreativeIslandInfoViewModel : public UMVVMViewModelBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 232;

public:
	SMember(FMulticastInlineDelegate)                  OnIslandMetaDataUpdateComplete                              OFFSET(getStruct<T>, {0x68, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnFailedToUpdateCreativePlotData                            OFFSET(getStruct<T>, {0x78, 16, 0, 0})
	CMember(TArray<FText>)                             IslandIntroduction                                          OFFSET(get<T>, {0x88, 16, 0, 0})
	CMember(EDynamicXpCalibrationPhase)                XpCalibrationPhase                                          OFFSET(get<T>, {0x98, 1, 0, 0})
	CMember(UTexture2DDynamic*)                        ThumbnailTexture                                            OFFSET(get<T>, {0xA0, 8, 0, 0})
	SMember(FString)                                   PublishedCreatorName                                        OFFSET(getStruct<T>, {0xA8, 16, 0, 0})
	DMember(bool)                                      bIsUpdatingIslandMetaData                                   OFFSET(get<bool>, {0xB8, 1, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortCreativeIslandInfoViewModel.UpdateCreativePlotData
	// void UpdateCreativePlotData(FString NewIslandTitle, TArray<FString>& NewIslandIntroductions);                            // [0x8f30a40] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/FortniteUI.FortCreativeIslandInfoViewModel.UnbindViewModel
	// void UnbindViewModel();                                                                                                  // [0x8f30a2c] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortCreativeIslandInfoViewModel.SetIslandDescriptionTags
	// void SetIslandDescriptionTags(TArray<FCreativeIslandDescriptionTag>& IslandDescriptionTags);                             // [0x8f308f8] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/FortniteUI.FortCreativeIslandInfoViewModel.OnIslandMetaDataUpdateComplete__DelegateSignature
	// void OnIslandMetaDataUpdateComplete__DelegateSignature(FString Error);                                                   // [0x1d9241c] MulticastDelegate|Public|Delegate 
	// Function /Script/FortniteUI.FortCreativeIslandInfoViewModel.OnFailedToUpdateCreativePlotData__DelegateSignature
	// void OnFailedToUpdateCreativePlotData__DelegateSignature(FCreativeIslandInfo& IslandInfo);                               // [0x1d9241c] MulticastDelegate|Public|Delegate|HasOutParms 
	// Function /Script/FortniteUI.FortCreativeIslandInfoViewModel.IsPlayerInAnExperienceTheyOwn
	// bool IsPlayerInAnExperienceTheyOwn();                                                                                    // [0x8f303cc] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortCreativeIslandInfoViewModel.InitializeViewModel
	// void InitializeViewModel();                                                                                              // [0x8f303b8] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortCreativeIslandInfoViewModel.HandleLinkDataQueryComplete
	// void HandleLinkDataQueryComplete(bool bSuccess, FString ErrorMessage, FCreativeLoadedLinkData& LinkData);                // [0x8f2fc2c] Final|Native|Private|HasOutParms 
	// Function /Script/FortniteUI.FortCreativeIslandInfoViewModel.HandleIslandMetaDataUpdateComplete
	// void HandleIslandMetaDataUpdateComplete(FString Error);                                                                  // [0x8f2f578] Final|Native|Private 
	// Function /Script/FortniteUI.FortCreativeIslandInfoViewModel.HandleDownloadThumbnailComplete
	// void HandleDownloadThumbnailComplete(bool bSuccess, UTexture2DDynamic* InThumbnailTexture);                              // [0x8f2f4b4] Final|Native|Private 
	// Function /Script/FortniteUI.FortCreativeIslandInfoViewModel.GetIslandTitle
	// FText GetIslandTitle();                                                                                                  // [0x8f2f2b0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortCreativeIslandInfoViewModel.GetIslandDescriptionTags
	// TArray<FCreativeIslandDescriptionTag> GetIslandDescriptionTags();                                                        // [0x8f2f274] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortCreativeIslandInfoViewModel.GetIslandCode
	// FText GetIslandCode();                                                                                                   // [0x8f2f1c4] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/FortniteUI.FortMatchmakingKnobsModal
/// Size: 0x02A8 (0x000400 - 0x0006A8)
class UFortMatchmakingKnobsModal : public UCommonActivatableWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1704;

public:
	DMember(float)                                     MobileOptionListEntrySpacing                                OFFSET(get<float>, {0x400, 4, 0, 0})
	CMember(TArray<FString>)                           ScrolledOffWhitelistedPlayers                               OFFSET(get<T>, {0x408, 16, 0, 0})
	DMember(bool)                                      bInitializeDataInNativeConstruct                            OFFSET(get<bool>, {0x418, 1, 0, 0})
	CMember(UPlaylistUserOptions*)                     OptionsAsset                                                OFFSET(get<T>, {0x440, 8, 0, 0})
	CMember(TArray<UObject*>)                          OptionDataProviders                                         OFFSET(get<T>, {0x448, 16, 0, 0})
	CMember(TMap<FString, FString>)                    LoadedOptionValues                                          OFFSET(get<T>, {0x468, 80, 0, 0})
	CMember(UCommonListView*)                          OptionsList                                                 OFFSET(get<T>, {0x4F0, 8, 0, 0})
	CMember(UCommonTextBlock*)                         TextBlock_TitleText                                         OFFSET(get<T>, {0x4F8, 8, 0, 0})
	CMember(UCommonTextBlock*)                         TextBlock_DescriptionText                                   OFFSET(get<T>, {0x500, 8, 0, 0})
	CMember(UImage*)                                   Image_DisplayImage                                          OFFSET(get<T>, {0x508, 8, 0, 0})
	SMember(FDataTableRowHandle)                       RestoreDefaultsInputRowHandle                               OFFSET(getStruct<T>, {0x510, 16, 0, 0})
	CMember(UClass*)                                   SubcategoryHeaderWidgetClass                                OFFSET(get<T>, {0x520, 8, 0, 0})
	DMember(bool)                                      bBindToOnLoadedOptionsChanged                               OFFSET(get<bool>, {0x528, 1, 0, 0})
	CMember(TMap<FGameplayTag, UFortCreativePropertySubcategoryHeaderListItem*>) SubcategoryHeaderTagToListItems   OFFSET(get<T>, {0x530, 80, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortMatchmakingKnobsModal.SetSearchString
	// void SetSearchString(FString InSearchString);                                                                            // [0x939d760] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortMatchmakingKnobsModal.SetOptionCategoryTagFilter
	// void SetOptionCategoryTagFilter(FGameplayTagContainer& InOptionCategoryTagFilter);                                       // [0x939d514] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/FortniteUI.FortMatchmakingKnobsModal.SetListDataSource
	// void SetListDataSource(TEnumAsByte<UFortMatchmakingKnobsDataSource> ListType);                                           // [0x939cd94] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortMatchmakingKnobsModal.RestoreOptionsToDefault
	// void RestoreOptionsToDefault(bool bRestoreAllOptions);                                                                   // [0x939aab4] Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.FortMatchmakingKnobsModal.OnSetInGameMode
	// void OnSetInGameMode();                                                                                                  // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.FortMatchmakingKnobsModal.OnSelectionUpdated
	// void OnSelectionUpdated(UFortMatchmakingKnobsSpinnerButton* CurrentSelection);                                           // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.FortMatchmakingKnobsModal.OnOptionsFiltered
	// void OnOptionsFiltered();                                                                                                // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortMatchmakingKnobsModal.OnInitForUserOptionValues
	// void OnInitForUserOptionValues(TScriptInterface<Class>& UserOptionValues);                                               // [0x1d9241c] Event|Protected|HasOutParms|BlueprintEvent 
	// Function /Script/FortniteUI.FortMatchmakingKnobsModal.OnInitForOptionsComponent
	// void OnInitForOptionsComponent(UFortActorOptionsComponent* OptionsComponent);                                            // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortMatchmakingKnobsModal.OnHoveredItemChanged
	// void OnHoveredItemChanged(UObject* Item, bool bIsHovered);                                                               // [0x93982c0] Final|Native|Private 
	// Function /Script/FortniteUI.FortMatchmakingKnobsModal.OnHandleRestoreDefaultsInput
	// bool OnHandleRestoreDefaultsInput();                                                                                     // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortMatchmakingKnobsModal.OnDataInitialized
	// void OnDataInitialized();                                                                                                // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortMatchmakingKnobsModal.OnCurrentItemSelectionChanged
	// void OnCurrentItemSelectionChanged(UObject* Item);                                                                       // [0x9398148] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortMatchmakingKnobsModal.OnAcceptAnimationComplete
	// void OnAcceptAnimationComplete(bool bApplyAllOptions);                                                                   // [0x9397dbc] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortMatchmakingKnobsModal.InitializeData
	// void InitializeData();                                                                                                   // [0x6665e78] Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortMatchmakingKnobsModal.InitForToyOptionsActor
	// void InitForToyOptionsActor(AActor* InActor);                                                                            // [0x836d954] Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortMatchmakingKnobsModal.HasNonEventProperties
	// bool HasNonEventProperties();                                                                                            // [0x9397784] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortMatchmakingKnobsModal.HasMatchingTags
	// bool HasMatchingTags(UObject* Option, FGameplayTagContainer& CategoryTags, FGameplayTagContainer& ContextTags);          // [0x9397484] Final|Native|Static|Protected|HasOutParms|BlueprintCallable 
	// Function /Script/FortniteUI.FortMatchmakingKnobsModal.HasEventFunctionProperty
	// bool HasEventFunctionProperty();                                                                                         // [0x93973f0] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortMatchmakingKnobsModal.HasEventDescriptorProperty
	// bool HasEventDescriptorProperty();                                                                                       // [0x939735c] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortMatchmakingKnobsModal.HandleRestorePropertiesClicked
	// void HandleRestorePropertiesClicked();                                                                                   // [0x766dac8] Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.FortMatchmakingKnobsModal.HandleRestoreFunctionsClicked
	// void HandleRestoreFunctionsClicked();                                                                                    // [0x7827f60] Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.FortMatchmakingKnobsModal.HandleRestoreEventsClicked
	// void HandleRestoreEventsClicked();                                                                                       // [0x6c63f94] Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.FortMatchmakingKnobsModal.HandleLeaveIsland
	// void HandleLeaveIsland(AFortPlayerPawn* PlayerPawn);                                                                     // [0x9396c60] Final|Native|Private 
	// Function /Script/FortniteUI.FortMatchmakingKnobsModal.HandleForcedOffIsland
	// void HandleForcedOffIsland();                                                                                            // [0x9396b50] Final|Native|Private 
	// Function /Script/FortniteUI.FortMatchmakingKnobsModal.HandleCancelClicked
	// void HandleCancelClicked();                                                                                              // [0x2ee9a3c] Native|Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.FortMatchmakingKnobsModal.GetSpinnerModificationStatus
	// EFortModifiedStatus GetSpinnerModificationStatus(UFortMatchmakingKnobsSpinnerButton* SpinnerButton);                     // [0x93965d8] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortMatchmakingKnobsModal.GetSearchStringFilteredOptionCategoryTags
	// void GetSearchStringFilteredOptionCategoryTags(FGameplayTagContainer& OutSearchStringFilteredOptionCategoryTags);        // [0x9396520] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/FortniteUI.FortMatchmakingKnobsModal.GetSearchString
	// FString GetSearchString();                                                                                               // [0x9396504] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortMatchmakingKnobsModal.GetScrolledOffWhitelistedPlayers
	// TArray<FString> GetScrolledOffWhitelistedPlayers();                                                                      // [0x93964c8] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortMatchmakingKnobsModal.GetModificationStatus
	// EFortModifiedStatus GetModificationStatus(UObject* Option);                                                              // [0x9396060] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortMatchmakingKnobsModal.DoesContainString
	// bool DoesContainString(UObject* Option, FString String);                                                                 // [0x9394f24] Final|Native|Static|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.FortMatchmakingKnobsModal.BP_GetUserOptionValuesInterface
	// TScriptInterface<Class> BP_GetUserOptionValuesInterface();                                                               // [0x9394e48] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortMatchmakingKnobsModal.BP_GetOptionsComponent
	// UFortActorOptionsComponent* BP_GetOptionsComponent();                                                                    // [0x9394e20] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortMatchmakingKnobsModal.BP_GetLabelOverrideInterface
	// TScriptInterface<Class> BP_GetLabelOverrideInterface();                                                                  // [0x9394dbc] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortMatchmakingKnobsModal.ApplyChanges
	// void ApplyChanges(bool bApplySettingsFromCachedData, bool bApplyAllOptions);                                             // [0x9394cf4] Native|Protected|BlueprintCallable 
};

/// Class /Script/FortniteUI.FortCreativeMyIslandContentDebugPanel
/// Size: 0x0018 (0x0006A8 - 0x0006C0)
class UFortCreativeMyIslandContentDebugPanel : public UFortMatchmakingKnobsModal
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1728;

public:
	CMember(TArray<FString>)                           OwnerPermissionAllowList                                    OFFSET(get<T>, {0x6B0, 16, 0, 0})
};

/// Class /Script/FortniteUI.FortCreativeMyIslandContentKnobsPanel
/// Size: 0x0008 (0x0006A8 - 0x0006B0)
class UFortCreativeMyIslandContentKnobsPanel : public UFortMatchmakingKnobsModal
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1712;

public:
};

/// Class /Script/FortniteUI.FortCreativeMyIslandContentPanelInterface
/// Size: 0x0000 (0x000028 - 0x000028)
class UFortCreativeMyIslandContentPanelInterface : public UInterface
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 40;

public:
};

/// Class /Script/FortniteUI.FortCreativeSettingsFlow
/// Size: 0x01D0 (0x000400 - 0x0005D0)
class UFortCreativeSettingsFlow : public UCommonActivatableWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1488;

public:
	CMember(UWidgetSwitcher*)                          Switcher_EditorConnected                                    OFFSET(get<T>, {0x408, 8, 0, 0})
	SMember(FName)                                     TabNameID                                                   OFFSET(getStruct<T>, {0x410, 4, 0, 0})
	SMember(FFortTabButtonLabelInfo)                   TabButtonLabelInfo                                          OFFSET(getStruct<T>, {0x420, 240, 0, 0})
	SMember(FDataTableRowHandle)                       ChannelBrowserInputRowHandle                                OFFSET(getStruct<T>, {0x510, 16, 0, 0})
	CMember(TWeakObjectPtr<UClass*>)                   SoftChannelBrowserClass                                     OFFSET(get<T>, {0x520, 32, 0, 0})
	SMember(FDataTableRowHandle)                       DeviceBrowserInputRowHandle                                 OFFSET(getStruct<T>, {0x540, 16, 0, 0})
	CMember(TWeakObjectPtr<UClass*>)                   SoftDeviceBrowserClass                                      OFFSET(get<T>, {0x550, 32, 0, 0})
};

/// Class /Script/FortniteUI.FortCreativeMyIslandPanel
/// Size: 0x0100 (0x0005D0 - 0x0006D0)
class UFortCreativeMyIslandPanel : public UFortCreativeSettingsFlow
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1744;

public:
	CMember(UFortTabListWidgetBase*)                   TabList_MainContent                                         OFFSET(get<T>, {0x5F0, 8, 0, 0})
	CMember(UCommonAnimatedSwitcher*)                  Switcher_MainContent                                        OFFSET(get<T>, {0x5F8, 8, 0, 0})
	SMember(FAthenaMapScreenContainerTabInfo)          MapScreenContainerTabInfo                                   OFFSET(getStruct<T>, {0x600, 72, 0, 0})
	DMember(bool)                                      bLinkTabListToSwitcher                                      OFFSET(get<bool>, {0x648, 1, 0, 0})
	DMember(bool)                                      bBindToMinigame                                             OFFSET(get<bool>, {0x649, 1, 0, 0})
	DMember(bool)                                      bIsDefaultMyIslandInfo                                      OFFSET(get<bool>, {0x64A, 1, 0, 0})
	DMember(bool)                                      bIsOverriddenMyIslandInfo                                   OFFSET(get<bool>, {0x64B, 1, 0, 0})
	SMember(FDataTableRowHandle)                       StartEndMinigameInputRowHandle                              OFFSET(getStruct<T>, {0x650, 16, 0, 0})
	SMember(FText)                                     StartMinigameText                                           OFFSET(getStruct<T>, {0x660, 24, 0, 0})
	SMember(FText)                                     EndMinigameText                                             OFFSET(getStruct<T>, {0x678, 24, 0, 0})
	CMember(TArray<FName>)                             BlockedTabNames                                             OFFSET(get<T>, {0x690, 16, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortCreativeMyIslandPanel.UpdateStartEndMinigameInput
	// void UpdateStartEndMinigameInput(AFortMinigame* Minigame);                                                               // [0x8f3281c] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.FortCreativeMyIslandPanel.ShouldShowTab
	// void ShouldShowTab(bool& bOutShouldShowTab, FName TabID, EFortMinigameState MinigameState, bool bIsInReadOnlyExperience, bool bIsOwnerOfCurrentExperience); // [0x1d9241c] Event|Protected|HasOutParms|BlueprintEvent 
	// Function /Script/FortniteUI.FortCreativeMyIslandPanel.OnTabVisibilitiesUpdated
	// void OnTabVisibilitiesUpdated();                                                                                         // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortCreativeMyIslandPanel.OnStartEndMinigameInput
	// void OnStartEndMinigameInput();                                                                                          // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortCreativeMyIslandPanel.OnMinigameStateChanged
	// void OnMinigameStateChanged(EFortMinigameState MinigameState);                                                           // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortCreativeMyIslandPanel.OnMinigameSettingsChanged
	// void OnMinigameSettingsChanged(AFortMinigameSettingsBuilding* MinigameSettings);                                         // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortCreativeMyIslandPanel.OnActiveMainContentWidgetChanged
	// void OnActiveMainContentWidgetChanged(UWidget* ActiveWidget, int32_t ActiveWidgetIndex);                                 // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortCreativeMyIslandPanel.IsOwnerOfCurrentExperience
	// bool IsOwnerOfCurrentExperience();                                                                                       // [0x8f31f10] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortCreativeMyIslandPanel.HandleMinigameStateChanged
	// void HandleMinigameStateChanged(AFortMinigame* Minigame, EFortMinigameState MinigameState);                              // [0x8f31d00] Final|Native|Private 
	// Function /Script/FortniteUI.FortCreativeMyIslandPanel.HandleMinigameSettingsMachineChanged
	// void HandleMinigameSettingsMachineChanged(UFortMinigameVolumeComponent* MinigameVolumeComponent, AFortMinigameSettingsBuilding* MinigameSettings); // [0x8f31c3c] Final|Native|Private 
	// Function /Script/FortniteUI.FortCreativeMyIslandPanel.HandleCreativePermissionsChanged
	// void HandleCreativePermissionsChanged();                                                                                 // [0x8f31c28] Final|Native|Private 
	// Function /Script/FortniteUI.FortCreativeMyIslandPanel.GetMinigameVolumeComponent
	// UFortMinigameVolumeComponent* GetMinigameVolumeComponent();                                                              // [0x8f31bd4] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortCreativeMyIslandPanel.GetMinigameSettingsMachine
	// AFortMinigameSettingsBuilding* GetMinigameSettingsMachine();                                                             // [0x8f31bac] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/FortniteUI.FortCreativePropertyCategoryTagToTextMap
/// Size: 0x0050 (0x000030 - 0x000080)
class UFortCreativePropertyCategoryTagToTextMap : public UDataAsset
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 128;

public:
	CMember(TMap<FGameplayTag, FText>)                 CategoryTagToTextMap                                        OFFSET(get<T>, {0x30, 80, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortCreativePropertyCategoryTagToTextMap.GetDisplayName
	// FText GetDisplayName(FGameplayTag& CategoryTag);                                                                         // [0x8f31ac4] Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/FortniteUI.FortCreativePropertySubcategoryHeaderListItem
/// Size: 0x0040 (0x000028 - 0x000068)
class UFortCreativePropertySubcategoryHeaderListItem : public UObject
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 104;

public:
	SMember(FMulticastInlineDelegate)                  OnIsExpandedChangedDynamicDelegate                          OFFSET(getStruct<T>, {0x28, 16, 0, 0})
	CMember(TArray<UObject*>)                          Options                                                     OFFSET(get<T>, {0x38, 16, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortCreativePropertySubcategoryHeaderListItem.SetIsExpanded
	// void SetIsExpanded(bool bInIsExpanded);                                                                                  // [0x8f324c4] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortCreativePropertySubcategoryHeaderListItem.OnIsExpandedChangedDynamic__DelegateSignature
	// void OnIsExpandedChangedDynamic__DelegateSignature(bool bIsExpanded);                                                    // [0x1d9241c] MulticastDelegate|Public|Delegate 
	// Function /Script/FortniteUI.FortCreativePropertySubcategoryHeaderListItem.IsExpanded
	// bool IsExpanded();                                                                                                       // [0x8f31efc] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortCreativePropertySubcategoryHeaderListItem.GetSubcategoryTag
	// FGameplayTag GetSubcategoryTag();                                                                                        // [0x32c2980] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/FortniteUI.FortCreativeScoreboardPanel
/// Size: 0x0010 (0x000538 - 0x000548)
class UFortCreativeScoreboardPanel : public UCommonActivatablePanelLegacy
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1352;

public:
	SMember(FDataTableRowHandle)                       MainMenuInputRowHandle                                      OFFSET(getStruct<T>, {0x538, 16, 0, 0})
};

/// Class /Script/FortniteUI.FortDiscoverSurfaceViewModel
/// Size: 0x0048 (0x000068 - 0x0000B0)
class UFortDiscoverSurfaceViewModel : public UMVVMViewModelBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 176;

public:
	DMember(bool)                                      bQueryingPageInProgress                                     OFFSET(get<bool>, {0x68, 1, 0, 0})
	CMember(TArray<UFortDiscoverProviderViewModel*>)   Providers                                                   OFFSET(get<T>, {0x70, 16, 0, 0})
	SMember(FName)                                     SurfaceName                                                 OFFSET(getStruct<T>, {0x80, 4, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortDiscoverSurfaceViewModel.UpdateCachedSurfaceData
	// void UpdateCachedSurfaceData(bool bShouldForceUpdate);                                                                   // [0x9323538] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortDiscoverSurfaceViewModel.StopVisibleImpressions
	// void StopVisibleImpressions();                                                                                           // [0x932185c] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortDiscoverSurfaceViewModel.StartVisibleImpressions
	// void StartVisibleImpressions();                                                                                          // [0x9321770] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortDiscoverSurfaceViewModel.StartAnalyticsImpressions
	// void StartAnalyticsImpressions();                                                                                        // [0x2b4dadc] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortDiscoverSurfaceViewModel.GetProviderIndexFromPanelName
	// int32_t GetProviderIndexFromPanelName(FName PanelName);                                                                  // [0x931bcb4] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortDiscoverSurfaceViewModel.FireExitedImpressionsFromSurface
	// void FireExitedImpressionsFromSurface();                                                                                 // [0x16da07c] Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortDiscoverSurfaceViewModel.FetchNextPageFromPanelName
	// void FetchNextPageFromPanelName(int32_t SelectionIndex, FName PanelName);                                                // [0x931a514] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortDiscoverSurfaceViewModel.FetchNextPageFromIndex
	// void FetchNextPageFromIndex(int32_t SelectionIndex, int32_t ProviderIndex);                                              // [0x931a454] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/FortniteUI.FortDiscoverBrowseViewModel
/// Size: 0x0050 (0x0000B0 - 0x000100)
class UFortDiscoverBrowseViewModel : public UFortDiscoverSurfaceViewModel
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 256;

public:
	CMember(TArray<UFortActivityViewModel*>)           FeaturedCategories                                          OFFSET(get<T>, {0xB0, 16, 0, 0})
	CMember(TArray<UFortActivityViewModel*>)           AllCategories                                               OFFSET(get<T>, {0xC0, 16, 0, 0})
	SMember(FText)                                     FeaturedCategoriesPanelDisplayName                          OFFSET(getStruct<T>, {0xD0, 24, 0, 0})
	SMember(FText)                                     AllCategoriesPanelDisplayName                               OFFSET(getStruct<T>, {0xE8, 24, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortDiscoverBrowseViewModel.SetDataFromProviders
	// void SetDataFromProviders();                                                                                             // [0x3411088] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortDiscoverBrowseViewModel.GetFeaturedCategoriesProviderViewModel
	// UFortDiscoverProviderViewModel* GetFeaturedCategoriesProviderViewModel();                                                // [0x8f31b7c] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortDiscoverBrowseViewModel.GetAllCategoriesProviderViewModel
	// UFortDiscoverProviderViewModel* GetAllCategoriesProviderViewModel();                                                     // [0x8f31a78] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/FortniteUI.FortDiscoverSearchViewModel
/// Size: 0x0108 (0x000068 - 0x000170)
class UFortDiscoverSearchViewModel : public UMVVMViewModelBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 368;

public:
	SMember(FString)                                   SearchTerm                                                  OFFSET(getStruct<T>, {0x68, 16, 0, 0})
	DMember(bool)                                      bIsSearchInProgress                                         OFFSET(get<bool>, {0x78, 1, 0, 0})
	DMember(bool)                                      bIsLinkCodeSearch                                           OFFSET(get<bool>, {0x79, 1, 0, 0})
	SMember(FString)                                   ResultsTerm                                                 OFFSET(getStruct<T>, {0x80, 16, 0, 0})
	CMember(TArray<UFortActivityViewModel*>)           SearchResults                                               OFFSET(get<T>, {0x90, 16, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortDiscoverSearchViewModel.StopAnalyticsVisibilityImpressions
	// void StopAnalyticsVisibilityImpressions();                                                                               // [0x8f32800] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortDiscoverSearchViewModel.StartAnalyticsVisibilityImpressions
	// void StartAnalyticsVisibilityImpressions();                                                                              // [0x8f327e4] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortDiscoverSearchViewModel.StartAnalyticsSession
	// void StartAnalyticsSession();                                                                                            // [0x8f327d0] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortDiscoverSearchViewModel.StartAnalyticsImpressions
	// void StartAnalyticsImpressions();                                                                                        // [0x8f327bc] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortDiscoverSearchViewModel.IsAnySearchActiveOrInProgress
	// bool IsAnySearchActiveOrInProgress();                                                                                    // [0x312d520] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortDiscoverSearchViewModel.GetIslandResultCount
	// int32_t GetIslandResultCount();                                                                                          // [0x350fcd8] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortDiscoverSearchViewModel.FireAnalyticsForBrowseAndSearch
	// void FireAnalyticsForBrowseAndSearch(UFortDiscoverBrowseViewModel* BrowseViewModel);                                     // [0x8f319f8] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortDiscoverSearchViewModel.ClearSearch
	// void ClearSearch();                                                                                                      // [0x8f319e4] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortDiscoverSearchViewModel.ActionSearch
	// void ActionSearch();                                                                                                     // [0x8f31860] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/FortniteUI.FortDynamicMotdFullscreenTile
/// Size: 0x0008 (0x0002E8 - 0x0002F0)
class UFortDynamicMotdFullscreenTile : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 752;

public:
	CMember(UMotdViewModel*)                           Motd                                                        OFFSET(get<T>, {0x2E8, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortDynamicMotdFullscreenTile.SetMotd
	// void SetMotd(UMotdViewModel* InMotd);                                                                                    // [0x3fd3750] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortDynamicMotdFullscreenTile.OnButtonPressed
	// void OnButtonPressed(UMotdActionBase* Action, EMotdButtonStyle style);                                                   // [0x3fd35c0] Final|Native|Protected|BlueprintCallable 
};

/// Class /Script/FortniteUI.FortDynamicMotdFullscreenWidget
/// Size: 0x0008 (0x000418 - 0x000420)
class UFortDynamicMotdFullscreenWidget : public UMotdWidgetBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1056;

public:
	CMember(UMotdViewModel*)                           CurrentMotd                                                 OFFSET(get<T>, {0x418, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortDynamicMotdFullscreenWidget.SetCurrentMotd
	// void SetCurrentMotd(int32_t Index);                                                                                      // [0x8f320a8] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.FortDynamicMotdFullscreenWidget.OnMotdShown
	// void OnMotdShown();                                                                                                      // [0x8f31f34] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.FortDynamicMotdFullscreenWidget.OnButtonPressed
	// void OnButtonPressed(EButtonAction ButtonPressed);                                                                       // [0x3fd36b0] Final|Native|Protected|BlueprintCallable 
};

/// Class /Script/FortniteUI.FortDynamicMotdTeaserWidget
/// Size: 0x0008 (0x000418 - 0x000420)
class UFortDynamicMotdTeaserWidget : public UMotdWidgetBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1056;

public:
	CMember(UMotdViewModel*)                           CurrentMotd                                                 OFFSET(get<T>, {0x418, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortDynamicMotdTeaserWidget.SetCurrentMotd
	// void SetCurrentMotd(int32_t Index);                                                                                      // [0x1cdb7a4] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.FortDynamicMotdTeaserWidget.OnMotdShown
	// void OnMotdShown();                                                                                                      // [0x1cdb790] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.FortDynamicMotdTeaserWidget.AddFullScreenWidget
	// UMotdWidgetBase* AddFullScreenWidget(UClass* FullScreenWidget);                                                          // [0x8f31874] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/FortniteUI.FortEventDateTimeTextBlock
/// Size: 0x0050 (0x000380 - 0x0003D0)
class UFortEventDateTimeTextBlock : public UCommonTextBlock
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 976;

public:
};

/// Class /Script/FortniteUI.FortEventLevelData
/// Size: 0x0060 (0x000030 - 0x000090)
class UFortEventLevelData : public UDataAsset
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 144;

public:
	SMember(FString)                                   EventLevelStoreFrontName                                    OFFSET(getStruct<T>, {0x30, 16, 0, 0})
	CMember(TWeakObjectPtr<UAthenaRewardEventGraph*>)  EventLevelRewards                                           OFFSET(get<T>, {0x40, 32, 0, 0})
	CMember(UClass*)                                   CinematicMovieWidget                                        OFFSET(get<T>, {0x60, 8, 0, 0})
	CMember(UFortStreamMediaSource*)                   ElectraMediaSource                                          OFFSET(get<T>, {0x68, 8, 0, 0})
	CMember(UMediaPlayer*)                             StreamedMediaPlayer                                         OFFSET(get<T>, {0x70, 8, 0, 0})
	SMember(FName)                                     CinematicVideoName                                          OFFSET(getStruct<T>, {0x78, 4, 0, 0})
	SMember(FDataTableRowHandle)                       InteractionHandle                                           OFFSET(getStruct<T>, {0x80, 16, 0, 0})
};

/// Class /Script/FortniteUI.FortEditableFilteredCountedTextBox
/// Size: 0x0150 (0x0002C0 - 0x000410)
class UFortEditableFilteredCountedTextBox : public UUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1040;

public:
	DMember(int32_t)                                   EntryCharLimit                                              OFFSET(get<int32_t>, {0x2C0, 4, 0, 0})
	CMember(EVirtualKeyboardTrigger)                   VirtualKeyboardTrigger                                      OFFSET(get<T>, {0x2C4, 1, 0, 0})
	DMember(int32_t)                                   EnforcedEntryCharLimit                                      OFFSET(get<int32_t>, {0x2C8, 4, 0, 0})
	SMember(FText)                                     SuggestionText                                              OFFSET(getStruct<T>, {0x2D0, 24, 0, 0})
	DMember(bool)                                      bUseChatSanitizer                                           OFFSET(get<bool>, {0x2E9, 1, 0, 0})
	DMember(bool)                                      bShouldValidatePersistentID                                 OFFSET(get<bool>, {0x2EA, 1, 0, 0})
	DMember(bool)                                      bAllowLineBreaks                                            OFFSET(get<bool>, {0x2EB, 1, 0, 0})
	DMember(bool)                                      bAllowStyleEditing                                          OFFSET(get<bool>, {0x2EC, 1, 0, 0})
	DMember(bool)                                      bIgnoreCharLimitValidation                                  OFFSET(get<bool>, {0x2ED, 1, 0, 0})
	SMember(FCharRangeList)                            AllowedCharacters                                           OFFSET(getStruct<T>, {0x2F0, 16, 0, 0})
	DMember(bool)                                      bReplaceUserTextWithSanitizedString                         OFFSET(get<bool>, {0x300, 1, 0, 0})
	DMember(bool)                                      bAllowSanitizedStrings                                      OFFSET(get<bool>, {0x301, 1, 0, 0})
	SMember(FText)                                     DefaultSanitizationErrorText                                OFFSET(getStruct<T>, {0x308, 24, 0, 0})
	SMember(FText)                                     AdditionalValidationErrorText                               OFFSET(getStruct<T>, {0x320, 24, 0, 0})
	DMember(bool)                                      bCurrentlyValid                                             OFFSET(get<bool>, {0x338, 1, 0, 0})
	CMember(UEditableTextBox*)                         EditText                                                    OFFSET(get<T>, {0x340, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_CharCount                                              OFFSET(get<T>, {0x408, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortEditableFilteredCountedTextBox.ValidatePersistentID
	// void ValidatePersistentID(FText& Text);                                                                                  // [0x1d9241c] Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// Function /Script/FortniteUI.FortEditableFilteredCountedTextBox.UpdateCharacterCount
	// void UpdateCharacterCount();                                                                                             // [0x939e364] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortEditableFilteredCountedTextBox.SetTextWithForcedSanitization
	// void SetTextWithForcedSanitization(FText& Text);                                                                         // [0x939e0b8] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/FortniteUI.FortEditableFilteredCountedTextBox.SetEntryCharLimit
	// void SetEntryCharLimit(int32_t InCharLimit);                                                                             // [0x92a27a4] Native|Event|Public|BlueprintCallable|BlueprintEvent 
	// Function /Script/FortniteUI.FortEditableFilteredCountedTextBox.OnDirtyTextAttempted
	// void OnDirtyTextAttempted(bool bIsBadText, bool bAdditionalValidationFailed);                                            // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.FortEditableFilteredCountedTextBox.HandleTextCommitted
	// void HandleTextCommitted(FText& Text, TEnumAsByte<ETextCommit> CommitMethod);                                            // [0x9397208] Final|Native|Private|HasOutParms 
	// Function /Script/FortniteUI.FortEditableFilteredCountedTextBox.HandleTextChanged
	// void HandleTextChanged(FText& Text);                                                                                     // [0x939716c] Final|Native|Private|HasOutParms 
	// Function /Script/FortniteUI.FortEditableFilteredCountedTextBox.GetIgnoreCharLimitValidation
	// bool GetIgnoreCharLimitValidation();                                                                                     // [0x9395fb0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortEditableFilteredCountedTextBox.GetEntryCharLimit
	// int32_t GetEntryCharLimit();                                                                                             // [0x8f39554] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortEditableFilteredCountedTextBox.GetAllowStyleEditing
	// bool GetAllowStyleEditing();                                                                                             // [0x7e4ffcc] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortEditableFilteredCountedTextBox.GetAllowLineBreaks
	// bool GetAllowLineBreaks();                                                                                               // [0x9395d60] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortEditableFilteredCountedTextBox.GetAllowedCharactersAsString
	// FString GetAllowedCharactersAsString();                                                                                  // [0x9395d78] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortEditableFilteredCountedTextBox.ForceSetText
	// void ForceSetText(FText& Text);                                                                                          // [0x9395cac] Final|Native|Public|HasOutParms|BlueprintCallable 
};

/// Class /Script/FortniteUI.FortFilteredNameEntryWidget
/// Size: 0x0030 (0x000410 - 0x000440)
class UFortFilteredNameEntryWidget : public UFortEditableFilteredCountedTextBox
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1088;

public:
	CMember(TEnumAsByte<ETextCommit>)                  LastTextCommittedType                                       OFFSET(get<T>, {0x410, 1, 0, 0})
	CMember(UCommonButtonBase*)                        Button_RenameInputButton                                    OFFSET(get<T>, {0x418, 8, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnTextCommitByEnter                                         OFFSET(getStruct<T>, {0x420, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnRenameInput                                               OFFSET(getStruct<T>, {0x430, 16, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortFilteredNameEntryWidget.HandleOnTextCommitted
	// void HandleOnTextCommitted(FText& Text, TEnumAsByte<ETextCommit> CommitMethod);                                          // [0x8f31dc4] Final|Native|Private|HasOutParms 
};

/// Class /Script/FortniteUI.FortFrontendOverlayInterface
/// Size: 0x0000 (0x000028 - 0x000028)
class UFortFrontendOverlayInterface : public UInterface
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 40;

public:
};

/// Class /Script/FortniteUI.FortFrontendSurvivorTier
/// Size: 0x0010 (0x0002C0 - 0x0002D0)
class UFortFrontendSurvivorTier : public UUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 720;

public:
	SMember(FGameplayTag)                              AssociatedQuestCategory                                     OFFSET(getStruct<T>, {0x2C0, 4, 0, 0})
	CMember(UCommonButtonBase*)                        Button_GoToQuests                                           OFFSET(get<T>, {0x2C8, 8, 0, 0})
};

/// Class /Script/FortniteUI.FortGameSettingRegistryExtension
/// Size: 0x0000 (0x000028 - 0x000028)
class UFortGameSettingRegistryExtension : public UFortGameSettingRegistryExtensionBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 40;

public:
};

/// Class /Script/FortniteUI.FortGlobalActionDetailsDataSource
/// Size: 0x0000 (0x000028 - 0x000028)
class UFortGlobalActionDetailsDataSource : public UInterface
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 40;

public:
};

/// Class /Script/FortniteUI.FortGlobalVMResolver
/// Size: 0x0000 (0x000028 - 0x000028)
class UFortGlobalVMResolver : public UMVVMViewModelContextResolver
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 40;

public:
};

/// Class /Script/FortniteUI.FortHabaneroInfoEntry
/// Size: 0x0008 (0x000400 - 0x000408)
class UFortHabaneroInfoEntry : public UCommonActivatableWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1032;

public:
	CMember(UFortHabaneroDisplayData*)                 HabaneroDisplayData                                         OFFSET(get<T>, {0x400, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortHabaneroInfoEntry.OnSetGameMode
	// void OnSetGameMode(FString GameMode);                                                                                    // [0x1d9241c] Event|Protected|BlueprintEvent 
};

/// Class /Script/FortniteUI.FortHabaneroInfoModal
/// Size: 0x0050 (0x000400 - 0x000450)
class UFortHabaneroInfoModal : public UCommonActivatableWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1104;

public:
	CMember(UVerticalBox*)                             Vbox_Panels                                                 OFFSET(get<T>, {0x400, 8, 0, 0})
	CMember(UCommonButtonBase*)                        Button_Close                                                OFFSET(get<T>, {0x408, 8, 0, 0})
	CMember(UCommonButtonBase*)                        Button_Close_Alt                                            OFFSET(get<T>, {0x410, 8, 0, 0})
	CMember(UCommonButtonBase*)                        Button_CloseTouch                                           OFFSET(get<T>, {0x418, 8, 0, 0})
	CMember(UAthenaScrollBox*)                         ScrollBox_Panels                                            OFFSET(get<T>, {0x420, 8, 0, 0})
	DMember(bool)                                      bIsHabaneroTimerEnabled                                     OFFSET(get<bool>, {0x438, 1, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortHabaneroInfoModal.SetTimerVisibility
	// void SetTimerVisibility(ESlateVisibility TimerVisibility);                                                               // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortHabaneroInfoModal.SetTimerText
	// void SetTimerText(FTimespan& Timespan);                                                                                  // [0x1d9241c] Event|Protected|HasOutParms|HasDefaults|BlueprintEvent 
	// Function /Script/FortniteUI.FortHabaneroInfoModal.SetProgress
	// void SetProgress(FString ProgressKey, int32_t CurrentHabanero, int32_t CurrentPosition, float ProgressPercent);          // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortHabaneroInfoModal.SetGameType
	// void SetGameType(FString GameMode);                                                                                      // [0x8f33948] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortHabaneroInfoModal.BP_OnScrollCompleted
	// void BP_OnScrollCompleted(bool bScrolledDown);                                                                           // [0x1d9241c] Event|Protected|BlueprintEvent 
};

/// Class /Script/FortniteUI.FortHabaneroTierWidget
/// Size: 0x0030 (0x000400 - 0x000430)
class UFortHabaneroTierWidget : public UCommonActivatableWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1072;

public:
	CMember(UFortHabaneroDisplayData*)                 HabaneroDisplayData                                         OFFSET(get<T>, {0x420, 8, 0, 0})
	DMember(bool)                                      bInitializeToRepresentLocalUser                             OFFSET(get<bool>, {0x428, 1, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortHabaneroTierWidget.UpdateWidgetDisplay
	// void UpdateWidgetDisplay(FFortHabaneroTier& DisplayData);                                                                // [0x1d9241c] Event|Protected|HasOutParms|BlueprintEvent 
	// Function /Script/FortniteUI.FortHabaneroTierWidget.StartQueryForRank
	// void StartQueryForRank();                                                                                                // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortHabaneroTierWidget.FailedToFindRank
	// void FailedToFindRank();                                                                                                 // [0x1d9241c] Event|Protected|BlueprintEvent 
};

/// Class /Script/FortniteUI.FortHabaneroLobbyWidget
/// Size: 0x0018 (0x000430 - 0x000448)
class UFortHabaneroLobbyWidget : public UFortHabaneroTierWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1096;

public:
	CMember(UCommonButtonBase*)                        Button_Info                                                 OFFSET(get<T>, {0x430, 8, 0, 0})
	SMember(FGameplayTag)                              RankedInfoBangTag                                           OFFSET(getStruct<T>, {0x438, 4, 0, 0})
	CMember(UClass*)                                   InfoModalClass                                              OFFSET(get<T>, {0x440, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortHabaneroLobbyWidget.UpdateProgressToNextHabanero
	// void UpdateProgressToNextHabanero(int32_t UnrealRankPlayerPosition, float ProgressPercent);                              // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortHabaneroLobbyWidget.SetBangVisible
	// void SetBangVisible(bool bIsVisible);                                                                                    // [0x1d9241c] Event|Protected|BlueprintEvent 
};

/// Class /Script/FortniteUI.FortHUDVisibilityData
/// Size: 0x0040 (0x000030 - 0x000070)
class UFortHUDVisibilityData : public UDataAsset
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 112;

public:
	SMember(FGameplayTag)                              HUDVisibilityGameplayTag                                    OFFSET(getStruct<T>, {0x30, 4, 0, 0})
	SMember(FText)                                     DisplayText                                                 OFFSET(getStruct<T>, {0x38, 24, 0, 0})
	SMember(FText)                                     ToolTipText                                                 OFFSET(getStruct<T>, {0x50, 24, 0, 0})
	DMember(bool)                                      Visible                                                     OFFSET(get<bool>, {0x68, 1, 0, 0})
};

/// Class /Script/FortniteUI.FortSetting
/// Size: 0x0158 (0x000028 - 0x000180)
class UFortSetting : public UObject
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 384;

public:
	CMember(UFortLocalPlayer*)                         LocalPlayer                                                 OFFSET(get<T>, {0x70, 8, 0, 0})
	CMember(UFortSetting*)                             SettingParent                                               OFFSET(get<T>, {0x78, 8, 0, 0})
	CMember(UFortSettingRegistry*)                     OwningRegistry                                              OFFSET(get<T>, {0x80, 8, 0, 0})
	SMember(FFortSettingNameExtensions)                CustomExtensions                                            OFFSET(getStruct<T>, {0xE8, 24, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortSetting.GetWarningRichText
	// FText GetWarningRichText();                                                                                              // [0x95ef908] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortSetting.GetDynamicDetails
	// FText GetDynamicDetails();                                                                                               // [0x95ef534] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortSetting.GetDisplayNameVisibility
	// ESlateVisibility GetDisplayNameVisibility();                                                                             // [0x6f362d8] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortSetting.GetDisplayName
	// FText GetDisplayName();                                                                                                  // [0x95ef4f0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortSetting.GetDevName
	// FString GetDevName();                                                                                                    // [0x95ef378] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortSetting.GetDescriptionRichText
	// FText GetDescriptionRichText();                                                                                          // [0x8aaca04] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/FortniteUI.FortSettingValue
/// Size: 0x0000 (0x000180 - 0x000180)
class UFortSettingValue : public UFortSetting
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 384;

public:
};

/// Class /Script/FortniteUI.FortInputSettingBase
/// Size: 0x0008 (0x000180 - 0x000188)
class UFortInputSettingBase : public UFortSettingValue
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 392;

public:
};

/// Class /Script/FortniteUI.FortItemManagementMulchPanel
/// Size: 0x0000 (0x000028 - 0x000028)
class UFortItemManagementMulchPanel : public UInterface
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 40;

public:
};

/// Class /Script/FortniteUI.FortFrontendInventoryFilterFunctionLibrary
/// Size: 0x0000 (0x000028 - 0x000028)
class UFortFrontendInventoryFilterFunctionLibrary : public UBlueprintFunctionLibrary
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 40;

public:
};

/// Class /Script/FortniteUI.FortPresentationItemLootInfo
/// Size: 0x00C8 (0x000028 - 0x0000F0)
class UFortPresentationItemLootInfo : public UObject
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 240;

public:
	SMember(FFortReceivedItemLootInfo)                 ItemReceivedInfo                                            OFFSET(getStruct<T>, {0x28, 200, 0, 0})
};

/// Class /Script/FortniteUI.ItemReceivedHeaderBase
/// Size: 0x0018 (0x0002C0 - 0x0002D8)
class UItemReceivedHeaderBase : public UUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 728;

public:
	CMember(UFortGiftBoxItem*)                         GiftBoxItem                                                 OFFSET(get<T>, {0x2C0, 8, 0, 0})
	SMember(FString)                                   FromUsername                                                OFFSET(getStruct<T>, {0x2C8, 16, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.ItemReceivedHeaderBase.SetBlueprintGiftBoxItem
	// void SetBlueprintGiftBoxItem(UFortGiftBoxItem* GiftBox, FString FromUser, TArray<FFortReceivedItemLootInfo>& ItemDefs, bool bSelfGift); // [0x1d9241c] Event|Public|HasOutParms|BlueprintEvent 
	// Function /Script/FortniteUI.ItemReceivedHeaderBase.InitFromGiftBoxItem_BP
	// void InitFromGiftBoxItem_BP();                                                                                           // [0x1d9241c] Event|Public|BlueprintCallable|BlueprintEvent 
};

/// Class /Script/FortniteUI.FortLevelSaveComponentViewModel
/// Size: 0x0030 (0x000068 - 0x000098)
class UFortLevelSaveComponentViewModel : public UMVVMViewModelBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 152;

public:
	CMember(EBackupSaveState)                          CachedBackupSaveState                                       OFFSET(get<T>, {0x68, 1, 0, 0})
	CMember(EBackupSaveState)                          CachedBackupRestoreState                                    OFFSET(get<T>, {0x69, 1, 0, 0})
	DMember(bool)                                      bCachedIsOnPublishedIsland                                  OFFSET(get<bool>, {0x6A, 1, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortLevelSaveComponentViewModel.UnbindViewModel
	// void UnbindViewModel();                                                                                                  // [0x8f35904] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortLevelSaveComponentViewModel.RestoreIslandFromBackup
	// void RestoreIslandFromBackup();                                                                                          // [0x8f357e8] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortLevelSaveComponentViewModel.ResetIsland
	// void ResetIsland();                                                                                                      // [0x8f357a4] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortLevelSaveComponentViewModel.IsPublishingEnabled
	// bool IsPublishingEnabled();                                                                                              // [0x8f35700] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortLevelSaveComponentViewModel.IsLastCheckpointDateSet
	// bool IsLastCheckpointDateSet();                                                                                          // [0x8f356e8] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortLevelSaveComponentViewModel.InitializeViewModel
	// void InitializeViewModel();                                                                                              // [0x8f35548] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortLevelSaveComponentViewModel.HandleCheckpointDateChanged
	// void HandleCheckpointDateChanged(FDateTime CheckpointDate);                                                              // [0x8f35260] Final|Native|Private|HasDefaults 
	// Function /Script/FortniteUI.FortLevelSaveComponentViewModel.HandleBackupSaveStateChanged
	// void HandleBackupSaveStateChanged(EBackupSaveState SaveState);                                                           // [0x8f351e0] Final|Native|Private 
	// Function /Script/FortniteUI.FortLevelSaveComponentViewModel.HandleBackupRestoreStateChanged
	// void HandleBackupRestoreStateChanged(EBackupSaveState RestoreState);                                                     // [0x8f35160] Final|Native|Private 
	// Function /Script/FortniteUI.FortLevelSaveComponentViewModel.GetTimeSinceLastCheckpoint
	// FTimespan GetTimeSinceLastCheckpoint();                                                                                  // [0x8f350f8] Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortLevelSaveComponentViewModel.CanResetIsland
	// bool CanResetIsland();                                                                                                   // [0x8f3500c] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortLevelSaveComponentViewModel.CanBackupAndRestoreIsland
	// bool CanBackupAndRestoreIsland();                                                                                        // [0x8f34fe8] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortLevelSaveComponentViewModel.BackupIsland
	// void BackupIsland();                                                                                                     // [0x8f34f80] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/FortniteUI.FortLoadingScreenCustomWidgetInterface
/// Size: 0x0000 (0x000028 - 0x000028)
class UFortLoadingScreenCustomWidgetInterface : public UInterface
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 40;

public:
};

/// Class /Script/FortniteUI.FortMatchmakingSuggestionWidget
/// Size: 0x0020 (0x0002E8 - 0x000308)
class UFortMatchmakingSuggestionWidget : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 776;

public:
	CMember(UWidget*)                                  SharedDataTestVoting_Container                              OFFSET(get<T>, {0x2E8, 8, 0, 0})
	CMember(UCommonButtonBase*)                        Button_SharedDataTest_Accept                                OFFSET(get<T>, {0x2F0, 8, 0, 0})
	CMember(UCommonButtonBase*)                        Button_SharedDataTest_Reject                                OFFSET(get<T>, {0x2F8, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_RequestedTextChange                                    OFFSET(get<T>, {0x300, 8, 0, 0})
};

/// Class /Script/FortniteUI.FortMatchmakingWidgetExtensionInterface
/// Size: 0x0000 (0x000028 - 0x000028)
class UFortMatchmakingWidgetExtensionInterface : public UInterface
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 40;

public:
};

/// Class /Script/FortniteUI.FortMinigameInfoViewModel
/// Size: 0x0028 (0x000068 - 0x000090)
class UFortMinigameInfoViewModel : public UMVVMViewModelBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 144;

public:
};

/// Class /Script/FortniteUI.FortMobileButtonBehaviorComponent
/// Size: 0x0020 (0x000028 - 0x000048)
class UFortMobileButtonBehaviorComponent : public UObject
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 72;

public:
	CMember(UFortMobileActionButtonBehavior*)          ButtonBehavior                                              OFFSET(get<T>, {0x28, 8, 0, 0})
	CMember(TArray<UFortButtonBehaviorComponentOverride*>) ButtonBehaviorComponentOverrides                        OFFSET(get<T>, {0x30, 16, 0, 0})
};

/// Class /Script/FortniteUI.FortMobileButtonBehaviorComponent_IconPicker
/// Size: 0x0000 (0x000048 - 0x000048)
class UFortMobileButtonBehaviorComponent_IconPicker : public UFortMobileButtonBehaviorComponent
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 72;

public:
};

/// Class /Script/FortniteUI.FortMobileButtonBehaviorComboComponent_IconPicker
/// Size: 0x0010 (0x000048 - 0x000058)
class UFortMobileButtonBehaviorComboComponent_IconPicker : public UFortMobileButtonBehaviorComponent_IconPicker
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 88;

public:
	CMember(TArray<FQueriedResultIconAssignment>)      IconAssignementQueries                                      OFFSET(get<T>, {0x48, 16, 0, 0})
};

/// Class /Script/FortniteUI.FortMobileButtonBehaviorComponent_Visibility
/// Size: 0x0000 (0x000048 - 0x000048)
class UFortMobileButtonBehaviorComponent_Visibility : public UFortMobileButtonBehaviorComponent
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 72;

public:
};

/// Class /Script/FortniteUI.FortMobileButtonBehaviorComboComponent_Visibility
/// Size: 0x0010 (0x000048 - 0x000058)
class UFortMobileButtonBehaviorComboComponent_Visibility : public UFortMobileButtonBehaviorComponent_Visibility
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 88;

public:
	CMember(TArray<FQueriedResultVisibilityAssignment>) VisibilityAssignementQueries                               OFFSET(get<T>, {0x48, 16, 0, 0})
};

/// Class /Script/FortniteUI.FortMobileButtonBehaviorComponent_Color
/// Size: 0x0000 (0x000048 - 0x000048)
class UFortMobileButtonBehaviorComponent_Color : public UFortMobileButtonBehaviorComponent
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 72;

public:
};

/// Class /Script/FortniteUI.FortMobileButtonBehaviorComponent_AbilityTagColor
/// Size: 0x0018 (0x000048 - 0x000060)
class UFortMobileButtonBehaviorComponent_AbilityTagColor : public UFortMobileButtonBehaviorComponent_Color
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 96;

public:
	CMember(TArray<FTagColor>)                         ColorOverrides                                              OFFSET(get<T>, {0x48, 16, 0, 0})
	CMember(UAbilitySystemComponent*)                  AbilitySystemComponent                                      OFFSET(get<T>, {0x58, 8, 0, 0})
};

/// Class /Script/FortniteUI.FortMobileEasyLootGrid
/// Size: 0x0058 (0x000350 - 0x0003A8)
class UFortMobileEasyLootGrid : public UFortMobileHUDElement
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 936;

public:
	CMember(UButton*)                                  Button_AutoPickUp                                           OFFSET(get<T>, {0x350, 8, 0, 0})
	CMember(UButton*)                                  Button_CollapsedList                                        OFFSET(get<T>, {0x358, 8, 0, 0})
	CMember(UVerticalBox*)                             LootGridListBox                                             OFFSET(get<T>, {0x360, 8, 0, 0})
	CMember(UImage*)                                   Panel_Background                                            OFFSET(get<T>, {0x368, 8, 0, 0})
	CMember(UCommonListView*)                          ListView_Items                                              OFFSET(get<T>, {0x370, 8, 0, 0})
	CMember(UOverlay*)                                 Overlay_FullBackpack                                        OFFSET(get<T>, {0x378, 8, 0, 0})
	CMember(TWeakObjectPtr<UFortControllerComponent_Interaction*>) InteractionComponent                            OFFSET(get<T>, {0x380, 8, 0, 0})
	CMember(TArray<UFortMobileEasyLootGridItemEntry*>) LootGridListItems                                           OFFSET(get<T>, {0x390, 16, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortMobileEasyLootGrid.UpdateListPostAnimation
	// void UpdateListPostAnimation();                                                                                          // [0x8f3592c] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortMobileEasyLootGrid.OnLootFeedBack
	// void OnLootFeedBack(bool bEnable);                                                                                       // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortMobileEasyLootGrid.OnCollapsedListPressed
	// void OnCollapsedListPressed(bool bShouldCollapseList);                                                                   // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortMobileEasyLootGrid.OnBackpackFullChanged
	// void OnBackpackFullChanged(bool bFull);                                                                                  // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortMobileEasyLootGrid.OnAutoPickupPressed
	// void OnAutoPickupPressed(bool bEnable);                                                                                  // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortMobileEasyLootGrid.IsEasyLootGridEnabledForActor
	// bool IsEasyLootGridEnabledForActor(AFortPlayerController* FortPC, AActor* PickUpItem);                                   // [0x8f355f0] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/FortniteUI.FortMobileEasyLootGrid.IsEasyLootGridEnabled
	// bool IsEasyLootGridEnabled(AFortPlayerController* FortPC);                                                               // [0x8f35570] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/FortniteUI.FortMobileEasyLootGrid.HandleCollapsedListPressed
	// void HandleCollapsedListPressed();                                                                                       // [0x8f353b4] Final|Native|Private 
	// Function /Script/FortniteUI.FortMobileEasyLootGrid.HandleAutoPickUpPressed
	// void HandleAutoPickUpPressed();                                                                                          // [0x8f3514c] Final|Native|Private 
};

/// Class /Script/FortniteUI.FortMobileEasyLootGridItemEntry
/// Size: 0x0010 (0x000028 - 0x000038)
class UFortMobileEasyLootGridItemEntry : public UObject
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 56;

public:
	CMember(TWeakObjectPtr<AActor*>)                   LootGridItem                                                OFFSET(get<T>, {0x28, 8, 0, 0})
};

/// Class /Script/FortniteUI.FortMobileEasyLootGridListEntry
/// Size: 0x0048 (0x0002C0 - 0x000308)
class UFortMobileEasyLootGridListEntry : public UUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 776;

public:
	CMember(UCommonButtonBase*)                        Button_PickUp                                               OFFSET(get<T>, {0x2C8, 8, 0, 0})
	CMember(UCommonButtonBase*)                        Button_Consume                                              OFFSET(get<T>, {0x2D0, 8, 0, 0})
	CMember(USizeBox*)                                 Box_SecondaryAbility                                        OFFSET(get<T>, {0x2D8, 8, 0, 0})
	CMember(UTextBlock*)                               Text_WeaponName                                             OFFSET(get<T>, {0x2E0, 8, 0, 0})
	CMember(UTextBlock*)                               Text_WeaponRarity                                           OFFSET(get<T>, {0x2E8, 8, 0, 0})
	CMember(UAthenaItemIcon*)                          ItemIcon                                                    OFFSET(get<T>, {0x2F0, 8, 0, 0})
	CMember(TWeakObjectPtr<UFortMobileEasyLootGridItemEntry*>) LootGridItemEntry                                   OFFSET(get<T>, {0x2F8, 8, 0, 0})
	DMember(bool)                                      bAnimItemAdded                                              OFFSET(get<bool>, {0x300, 1, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortMobileEasyLootGridListEntry.SecondaryButtonClicked
	// void SecondaryButtonClicked();                                                                                           // [0x8f35850] Final|Native|Private 
	// Function /Script/FortniteUI.FortMobileEasyLootGridListEntry.PrimaryButtonClicked
	// void PrimaryButtonClicked();                                                                                             // [0x8f35790] Final|Native|Private 
	// Function /Script/FortniteUI.FortMobileEasyLootGridListEntry.OnItemRemoved
	// void OnItemRemoved(UFortMobileEasyLootGrid* List);                                                                       // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.FortMobileEasyLootGridListEntry.OnItemAdded
	// void OnItemAdded();                                                                                                      // [0x1d9241c] Event|Public|BlueprintEvent 
};

/// Class /Script/FortniteUI.FortMobileHudWidgetContentComponent_Active_Visibility
/// Size: 0x0018 (0x000028 - 0x000040)
class UFortMobileHudWidgetContentComponent_Active_Visibility : public UObject
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 64;

public:
	CMember(UFortMobileHudWidgetContentComponent_Active*) WidgetComponent                                          OFFSET(get<T>, {0x28, 8, 0, 0})
	CMember(TArray<FTagVisibility>)                    TagVisibilities                                             OFFSET(get<T>, {0x30, 16, 0, 0})
};

/// Class /Script/FortniteUI.FortMobileHudWidgetContentComponent_Active_PlayerTagVisibility
/// Size: 0x0008 (0x000040 - 0x000048)
class UFortMobileHudWidgetContentComponent_Active_PlayerTagVisibility : public UFortMobileHudWidgetContentComponent_Active_Visibility
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 72;

public:
	CMember(UAbilitySystemComponent*)                  AbilitySystemComponent                                      OFFSET(get<T>, {0x40, 8, 0, 0})
};

/// Class /Script/FortniteUI.FortMobileHUDWidgetCustomPropertyModel
/// Size: 0x0038 (0x000028 - 0x000060)
class UFortMobileHUDWidgetCustomPropertyModel : public UObject
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 96;

public:
	DMember(bool)                                      bIsVisibleToTheUser                                         OFFSET(get<bool>, {0x28, 1, 0, 0})
	SMember(FString)                                   PropertyDevName                                             OFFSET(getStruct<T>, {0x30, 16, 0, 0})
	SMember(FText)                                     PropertyDisplayName                                         OFFSET(getStruct<T>, {0x40, 24, 0, 0})
	SMember(FGameplayTag)                              PropertyTag                                                 OFFSET(getStruct<T>, {0x58, 4, 0, 0})
};

/// Class /Script/FortniteUI.FortMobileHUDWidgetCustomPropertyModel_Bool
/// Size: 0x0008 (0x000060 - 0x000068)
class UFortMobileHUDWidgetCustomPropertyModel_Bool : public UFortMobileHUDWidgetCustomPropertyModel
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 104;

public:
	DMember(bool)                                      DefaultValue                                                OFFSET(get<bool>, {0x60, 1, 0, 0})
};

/// Class /Script/FortniteUI.FortMobileHUDWidgetCustomPropertyModel_AutorunPreference
/// Size: 0x0000 (0x000068 - 0x000068)
class UFortMobileHUDWidgetCustomPropertyModel_AutorunPreference : public UFortMobileHUDWidgetCustomPropertyModel_Bool
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 104;

public:
};

/// Class /Script/FortniteUI.FortModalContainerData
/// Size: 0x0010 (0x000030 - 0x000040)
class UFortModalContainerData : public UDataAsset
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 64;

public:
	CMember(TArray<FFortModalContainerSizeEntry>)      Entries                                                     OFFSET(get<T>, {0x30, 16, 0, 0})
};

/// Class /Script/FortniteUI.FortMoveStickHUDElementProxy
/// Size: 0x0030 (0x0003D0 - 0x000400)
class UFortMoveStickHUDElementProxy : public UFortMobileHUDElementProxy
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1024;

public:
	CMember(UOverlay*)                                 Overlay_Highlights                                          OFFSET(get<T>, {0x3D0, 8, 0, 0})
	CMember(USizeBox*)                                 SizeBox_AutorunLockZoneHidden                               OFFSET(get<T>, {0x3D8, 8, 0, 0})
	CMember(USizeBox*)                                 SizeBox_AutorunLockZoneSize                                 OFFSET(get<T>, {0x3E0, 8, 0, 0})
	CMember(USizeBox*)                                 SizeBox_AutorunDirectionArrowSpaceSize                      OFFSET(get<T>, {0x3E8, 8, 0, 0})
	SMember(FGameplayTag)                              AutorunLockZoneSizePropertyTag                              OFFSET(getStruct<T>, {0x3F0, 4, 0, 0})
	DMember(float)                                     DefaultAutorunLockZoneSize                                  OFFSET(get<float>, {0x3F4, 4, 0, 0})
	DMember(float)                                     DefaultAutorunLockZoneTopPadding                            OFFSET(get<float>, {0x3F8, 4, 0, 0})
};

/// Class /Script/FortniteUI.FortMPItemShopRow
/// Size: 0x0028 (0x0002C0 - 0x0002E8)
class UFortMPItemShopRow : public UUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 744;

public:
	SMember(FMulticastInlineDelegate)                  OnOfferTileFocusedEvent                                     OFFSET(getStruct<T>, {0x2C0, 16, 0, 0})
	SMember(FString)                                   FocusedOfferId                                              OFFSET(getStruct<T>, {0x2D0, 16, 0, 0})
	CMember(UFortDynamicEntryBox*)                     FortDynamicEntryBox_Row                                     OFFSET(get<T>, {0x2E0, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortMPItemShopRow.OnOfferTileFocused__DelegateSignature
	// void OnOfferTileFocused__DelegateSignature(FString OfferId);                                                             // [0x1d9241c] MulticastDelegate|Public|Delegate 
	// Function /Script/FortniteUI.FortMPItemShopRow.CreateEntryTile
	// UCommonButtonBase* CreateEntryTile(UFortItemShopOfferVM* OfferVM, UClass* TileEntryWidgetClass);                         // [0x8f369c8] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/FortniteUI.FortMPLobbyOnboardingModal
/// Size: 0x0008 (0x000400 - 0x000408)
class UFortMPLobbyOnboardingModal : public UCommonActivatableWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1032;

public:
	CMember(UCommonButtonBase*)                        Button_GetStarted                                           OFFSET(get<T>, {0x400, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortMPLobbyOnboardingModal.ExitModal
	// void ExitModal();                                                                                                        // [0x34111d4] Final|Native|Protected|BlueprintCallable 
};

/// Class /Script/FortniteUI.FortNodeCanvasEntityInterface
/// Size: 0x0000 (0x000028 - 0x000028)
class UFortNodeCanvasEntityInterface : public UInterface
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 40;

public:
};

/// Class /Script/FortniteUI.FortNullHUD
/// Size: 0x0008 (0x000418 - 0x000420)
class UFortNullHUD : public UFortUIStateWidgetBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1056;

public:
	CMember(UCommonUserWidget*)                        ActionBar_BottomBar                                         OFFSET(get<T>, {0x418, 8, 0, 0})
};

/// Class /Script/FortniteUI.FortSocialUserViewModel
/// Size: 0x0008 (0x000068 - 0x000070)
class UFortSocialUserViewModel : public UMVVMViewModelBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 112;

public:
	CMember(TWeakObjectPtr<UFortSocialUser*>)          SocialUser                                                  OFFSET(get<T>, {0x68, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortSocialUserViewModel.SetSocialUser
	// void SetSocialUser(UFortSocialUser* InSocialUser);                                                                       // [0x15e9f58] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortSocialUserViewModel.GetSocialUser
	// UFortSocialUser* GetSocialUser();                                                                                        // [0x8f3748c] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/FortniteUI.FortOnlineStatusViewModel
/// Size: 0x0008 (0x000070 - 0x000078)
class UFortOnlineStatusViewModel : public UFortSocialUserViewModel
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 120;

public:
	CMember(EPresenceIndicatorState)                   OnlineStatus                                                OFFSET(get<T>, {0x70, 1, 0, 0})
	DMember(bool)                                      bHideStatus                                                 OFFSET(get<bool>, {0x71, 1, 0, 0})
};

/// Class /Script/FortniteUI.FortOptionsCategoryHeader
/// Size: 0x0018 (0x000028 - 0x000040)
class UFortOptionsCategoryHeader : public UObject
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 64;

public:
	SMember(FText)                                     DisplayText                                                 OFFSET(getStruct<T>, {0x28, 24, 0, 0})
};

/// Class /Script/FortniteUI.FortOptionsMenuInputData
/// Size: 0x00D8 (0x000030 - 0x000108)
class UFortOptionsMenuInputData : public UDataAsset
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 264;

public:
	SMember(FName)                                     ActionName                                                  OFFSET(getStruct<T>, {0x30, 4, 0, 0})
	SMember(FText)                                     DisplayText                                                 OFFSET(getStruct<T>, {0x38, 24, 0, 0})
	SMember(FText)                                     PrimaryText                                                 OFFSET(getStruct<T>, {0x50, 24, 0, 0})
	SMember(FText)                                     SecondaryText                                               OFFSET(getStruct<T>, {0x68, 24, 0, 0})
	DMember(int32_t)                                   ElementNumber                                               OFFSET(get<int32_t>, {0x80, 4, 0, 0})
	CMember(UCommonTextBlock*)                         TabText                                                     OFFSET(get<T>, {0x88, 8, 0, 0})
	SMember(FFortActionKeyMapping)                     ActionKeyMapping                                            OFFSET(getStruct<T>, {0x90, 120, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortOptionsMenuInputData.GetInputScale
	// float GetInputScale();                                                                                                   // [0x581c614] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortOptionsMenuInputData.GetInputActionGroup
	// EFortInputActionGroup GetInputActionGroup();                                                                             // [0x8f36ae0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/FortniteUI.FortPassLevelViewModel
/// Size: 0x0038 (0x000068 - 0x0000A0)
class UFortPassLevelViewModel : public UMVVMViewModelBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 160;

public:
	CMember(UFortMcpProfileAthena*)                    AthenaProfile                                               OFFSET(get<T>, {0x68, 8, 0, 0})
	SMember(FString)                                   CurrentChapter                                              OFFSET(getStruct<T>, {0x70, 16, 0, 0})
	SMember(FString)                                   CurrentSeason                                               OFFSET(getStruct<T>, {0x80, 16, 0, 0})
	DMember(int32_t)                                   NumBattleStars                                              OFFSET(get<int32_t>, {0x90, 4, 0, 0})
	DMember(int32_t)                                   CurrentLevel                                                OFFSET(get<int32_t>, {0x94, 4, 0, 0})
	DMember(int32_t)                                   CurrentXP                                                   OFFSET(get<int32_t>, {0x98, 4, 0, 0})
	DMember(int32_t)                                   XpToNextLevel                                               OFFSET(get<int32_t>, {0x9C, 4, 0, 0})
};

/// Class /Script/FortniteUI.FortPersistentTabObject
/// Size: 0x0000 (0x000028 - 0x000028)
class UFortPersistentTabObject : public UObject
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 40;

public:
};

/// Class /Script/FortniteUI.FortPinScreen
/// Size: 0x0010 (0x000538 - 0x000548)
class UFortPinScreen : public UCommonActivatablePanelLegacy
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1352;

public:
};

/// Class /Script/FortniteUI.FortPlayerAvatar
/// Size: 0x0000 (0x0002C0 - 0x0002C0)
class UFortPlayerAvatar : public UUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 704;

public:
};

/// Class /Script/FortniteUI.FortPlayerAvatarViewModel
/// Size: 0x0030 (0x000070 - 0x0000A0)
class UFortPlayerAvatarViewModel : public UFortSocialUserViewModel
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 160;

public:
	DMember(bool)                                      bUseLargeImage                                              OFFSET(get<bool>, {0x70, 1, 0, 0})
	CMember(UTexture2D*)                               AvatarTexture                                               OFFSET(get<T>, {0x78, 8, 0, 0})
	DMember(bool)                                      bLoading                                                    OFFSET(get<bool>, {0x80, 1, 0, 0})
	SMember(FColor)                                    BackgroundColor                                             OFFSET(getStruct<T>, {0x84, 4, 0, 0})
	SMember(FColor)                                    HighlightColor                                              OFFSET(getStruct<T>, {0x88, 4, 0, 0})
};

/// Class /Script/FortniteUI.FortPlayerSurveyResponseChoiceBase
/// Size: 0x0010 (0x001490 - 0x0014A0)
class UFortPlayerSurveyResponseChoiceBase : public UCommonButtonBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 5280;

public:
	CMember(UCommonTextBlock*)                         Text_Response                                               OFFSET(get<T>, {0x1490, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortPlayerSurveyResponseChoiceBase.SetChoiceType
	// void SetChoiceType(TEnumAsByte<EFortPlayerSurveyResponseChoiceType> Type);                                               // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.FortPlayerSurveyResponseChoiceBase.OnSurveyResetChoice
	// void OnSurveyResetChoice();                                                                                              // [0x1d9241c] Event|Protected|BlueprintEvent 
};

/// Class /Script/FortniteUI.FortPlayerSurveyResponseWidget
/// Size: 0x0030 (0x000400 - 0x000430)
class UFortPlayerSurveyResponseWidget : public UCommonActivatableWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1072;

public:
};

/// Class /Script/FortniteUI.FortPopupModal
/// Size: 0x0010 (0x0002C0 - 0x0002D0)
class UFortPopupModal : public UUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 720;

public:
	CMember(UCommonButtonBase*)                        IconTextButton_Close                                        OFFSET(get<T>, {0x2C0, 8, 0, 0})
	CMember(UCommonButtonBase*)                        Button_CloseTouch                                           OFFSET(get<T>, {0x2C8, 8, 0, 0})
};

/// Class /Script/FortniteUI.FortRankedViewModel
/// Size: 0x0030 (0x000068 - 0x000098)
class UFortRankedViewModel : public UMVVMViewModelBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 152;

public:
	CMember(UFortSocialUser*)                          SocialUser                                                  OFFSET(get<T>, {0x68, 8, 0, 0})
	DMember(bool)                                      bIsIslandRanked                                             OFFSET(get<bool>, {0x70, 1, 0, 0})
	DMember(bool)                                      bIsPlayerRanked                                             OFFSET(get<bool>, {0x71, 1, 0, 0})
	SMember(FString)                                   RankType                                                    OFFSET(getStruct<T>, {0x78, 16, 0, 0})
	DMember(int32_t)                                   CurrentRank                                                 OFFSET(get<int32_t>, {0x88, 4, 0, 0})
	DMember(int32_t)                                   HighestRank                                                 OFFSET(get<int32_t>, {0x8C, 4, 0, 0})
	DMember(int32_t)                                   CurrentPlayerPosition                                       OFFSET(get<int32_t>, {0x90, 4, 0, 0})
	DMember(float)                                     Progress                                                    OFFSET(get<float>, {0x94, 4, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortRankedViewModel.SetSocialUserAsLocalUser
	// void SetSocialUserAsLocalUser();                                                                                         // [0x2163970] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/FortniteUI.FortRichTextTextureDecorator
/// Size: 0x0008 (0x000028 - 0x000030)
class UFortRichTextTextureDecorator : public URichTextBlockDecorator
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 48;

public:
	CMember(UObject*)                                  LoadedResourceObject                                        OFFSET(get<T>, {0x28, 8, 0, 0})
};

/// Class /Script/FortniteUI.FortRichTextTextureDecoratorHelpers
/// Size: 0x0000 (0x000028 - 0x000028)
class UFortRichTextTextureDecoratorHelpers : public UBlueprintFunctionLibrary
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 40;

public:
};

/// Class /Script/FortniteUI.FortServerBrowserActionData
/// Size: 0x0100 (0x000030 - 0x000130)
class UFortServerBrowserActionData : public UPrimaryDataAsset
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 304;

public:
	CMember(EFortServerBrowserAction)                  ActionType                                                  OFFSET(get<T>, {0x30, 1, 0, 0})
	SMember(FText)                                     Title                                                       OFFSET(getStruct<T>, {0x38, 24, 0, 0})
	SMember(FText)                                     Description                                                 OFFSET(getStruct<T>, {0x50, 24, 0, 0})
	SMember(FSlateBrush)                               TileImage                                                   OFFSET(getStruct<T>, {0x70, 192, 0, 0})
};

/// Class /Script/FortniteUI.FortServerBrowserActionDataPopup
/// Size: 0x0020 (0x000130 - 0x000150)
class UFortServerBrowserActionDataPopup : public UFortServerBrowserActionData
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 336;

public:
	CMember(TWeakObjectPtr<UClass*>)                   PopupClass                                                  OFFSET(get<T>, {0x130, 32, 0, 0})
};

/// Class /Script/FortniteUI.FortSettingValueDiscrete
/// Size: 0x0000 (0x000180 - 0x000180)
class UFortSettingValueDiscrete : public UFortSettingValue
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 384;

public:
};

/// Class /Script/FortniteUI.FortSettingValueDiscreteDynamic
/// Size: 0x0068 (0x000180 - 0x0001E8)
class UFortSettingValueDiscreteDynamic : public UFortSettingValueDiscrete
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 488;

public:
};

/// Class /Script/FortniteUI.FortSettingValueDiscreteDynamic_Vector2D
/// Size: 0x0000 (0x0001E8 - 0x0001E8)
class UFortSettingValueDiscreteDynamic_Vector2D : public UFortSettingValueDiscreteDynamic
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 488;

public:
};

/// Class /Script/FortniteUI.FortSettingValueDiscreteDynamic_Anchors
/// Size: 0x0000 (0x0001E8 - 0x0001E8)
class UFortSettingValueDiscreteDynamic_Anchors : public UFortSettingValueDiscreteDynamic_Vector2D
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 488;

public:
};

/// Class /Script/FortniteUI.FortSocialPanelContainerInterface
/// Size: 0x0000 (0x000028 - 0x000028)
class UFortSocialPanelContainerInterface : public UInterface
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 40;

public:
};

/// Class /Script/FortniteUI.FortSocialSidebarPanelInterface
/// Size: 0x0000 (0x000028 - 0x000028)
class UFortSocialSidebarPanelInterface : public UInterface
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 40;

public:
};

/// Class /Script/FortniteUI.FortSocialStyle
/// Size: 0x9A60 (0x000030 - 0x009A90)
class UFortSocialStyle : public UDataAsset
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 39568;

public:
	SMember(FSocialStyle)                              style                                                       OFFSET(getStruct<T>, {0x30, 39504, 0, 0})
	CMember(USocialStyleDataAsset*)                    OverrideStyle                                               OFFSET(get<T>, {0x9A80, 8, 0, 0})
};

/// Class /Script/FortniteUI.FortSqueegeeWidgetInjectionSlot
/// Size: 0x0070 (0x0002C0 - 0x000330)
class UFortSqueegeeWidgetInjectionSlot : public UUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 816;

public:
	CMember(ESqueegeeWidgetInjection)                  DesiredInjection                                            OFFSET(get<T>, {0x2C0, 1, 0, 0})
	SMember(FSqueegeeStyleParams)                      StyleParams                                                 OFFSET(getStruct<T>, {0x2C8, 48, 0, 0})
	CMember(UNamedSlot*)                               InjectionSlot                                               OFFSET(get<T>, {0x2F8, 8, 0, 0})
	CMember(UFortSqueegeeWidget*)                      InjectedSqueegeeWidget                                      OFFSET(get<T>, {0x318, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortSqueegeeWidgetInjectionSlot.ShowActivityDataFromViewModel
	// void ShowActivityDataFromViewModel(UFortActivityViewModel* GameActivityViewModel);                                       // [0x15ec9b4] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortSqueegeeWidgetInjectionSlot.ShowActivityData
	// void ShowActivityData(UFortGameActivity* GameActivity);                                                                  // [0x8f37d38] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/FortniteUI.FortSqueegeeWidget
/// Size: 0x0018 (0x0002E8 - 0x000300)
class UFortSqueegeeWidget : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 768;

public:
};

/// Class /Script/FortniteUI.UIKitTabGroupViewModel
/// Size: 0x0010 (0x000068 - 0x000078)
class UUIKitTabGroupViewModel : public UMVVMViewModelBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 120;

public:
	CMember(TArray<UUIKitTabGroupButtonViewModel*>)    Tabs                                                        OFFSET(get<T>, {0x68, 16, 0, 0})
};

/// Class /Script/FortniteUI.FortTabGroupViewModel
/// Size: 0x0018 (0x000078 - 0x000090)
class UFortTabGroupViewModel : public UUIKitTabGroupViewModel
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 144;

public:
	CMember(TArray<UUIKitTabGroupButtonViewModel*>)    UnfilteredTabs                                              OFFSET(get<T>, {0x78, 16, 0, 0})
	DMember(bool)                                      bShowingGameGroup                                           OFFSET(get<bool>, {0x88, 1, 0, 0})
};

/// Class /Script/FortniteUI.UIKitSelectableButtonViewModel
/// Size: 0x0020 (0x000068 - 0x000088)
class UUIKitSelectableButtonViewModel : public UMVVMViewModelBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 136;

public:
	SMember(FText)                                     Label                                                       OFFSET(getStruct<T>, {0x68, 24, 0, 0})
	CMember(UTexture2D*)                               Icon                                                        OFFSET(get<T>, {0x80, 8, 0, 0})
};

/// Class /Script/FortniteUI.UIKitTabGroupButtonViewModel
/// Size: 0x0010 (0x000088 - 0x000098)
class UUIKitTabGroupButtonViewModel : public UUIKitSelectableButtonViewModel
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 152;

public:
	DMember(bool)                                      bEnableTabID                                                OFFSET(get<bool>, {0x88, 1, 0, 0})
	SMember(FName)                                     TabID                                                       OFFSET(getStruct<T>, {0x8C, 4, 0, 0})
	DMember(bool)                                      bEnableSubGroupID                                           OFFSET(get<bool>, {0x90, 1, 0, 0})
	SMember(FName)                                     SubGroupID                                                  OFFSET(getStruct<T>, {0x94, 4, 0, 0})
};

/// Class /Script/FortniteUI.FortTabViewModel
/// Size: 0x0148 (0x000098 - 0x0001E0)
class UFortTabViewModel : public UUIKitTabGroupButtonViewModel
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 480;

public:
	DMember(bool)                                      bEnabled                                                    OFFSET(get<bool>, {0x98, 1, 0, 0})
	DMember(bool)                                      bCollapsed                                                  OFFSET(get<bool>, {0x99, 1, 0, 0})
	SMember(FFortTopBarTabButtonInfo)                  TabInfo                                                     OFFSET(getStruct<T>, {0xA0, 320, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortTabViewModel.GetLinkedUIFeature
	// EFortUIFeature GetLinkedUIFeature();                                                                                     // [0x2cc2270] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortTabViewModel.GetButtonGroup
	// EFortTopBarTabButtonGroup GetButtonGroup();                                                                              // [0x2fce180] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortTabViewModel.GetBangType
	// EFortBangType GetBangType();                                                                                             // [0x303f3f8] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/FortniteUI.FortTimespanDataSource
/// Size: 0x0000 (0x000028 - 0x000028)
class UFortTimespanDataSource : public UInterface
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 40;

public:
};

/// Class /Script/FortniteUI.FortUIGameFeatureAction
/// Size: 0x0000 (0x000028 - 0x000028)
class UFortUIGameFeatureAction : public UGameFeatureAction
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 40;

public:
};

/// Class /Script/FortniteUI.FortUIGameFeatureAction_ExtendMatchmakingWidget
/// Size: 0x0060 (0x000028 - 0x000088)
class UFortUIGameFeatureAction_ExtendMatchmakingWidget : public UFortUIGameFeatureAction
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 136;

public:
	CMember(UClass*)                                   ExtensionClass                                              OFFSET(get<T>, {0x28, 8, 0, 0})
	CMember(UObject*)                                  ExtensionObject                                             OFFSET(get<T>, {0x30, 8, 0, 0})
};

/// Class /Script/FortniteUI.FortUIGameFeatureAction_SetLobbyData
/// Size: 0x0078 (0x000028 - 0x0000A0)
class UFortUIGameFeatureAction_SetLobbyData : public UFortUIGameFeatureAction
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 160;

public:
	SMember(FFrontendLobbyData)                        FrontendLobbyData                                           OFFSET(getStruct<T>, {0x28, 120, 0, 0})
};

/// Class /Script/FortniteUI.FortUISpecialEventSubsystem
/// Size: 0x0028 (0x000030 - 0x000058)
class UFortUISpecialEventSubsystem : public UGameInstanceSubsystem
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 88;

public:
	SMember(FMulticastInlineDelegate)                  OnNewUISpecialEventState                                    OFFSET(getStruct<T>, {0x30, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnTemporarySpecialUIEvent                                   OFFSET(getStruct<T>, {0x40, 16, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortUISpecialEventSubsystem.SpecialUIEventDelegate__DelegateSignature
	// void SpecialUIEventDelegate__DelegateSignature(TEnumAsByte<EFortUISpecialEvents> InEventName);                           // [0x1d9241c] MulticastDelegate|Public|Delegate 
	// Function /Script/FortniteUI.FortUISpecialEventSubsystem.SetCurrentUISpecialEventState
	// void SetCurrentUISpecialEventState(TEnumAsByte<EFortUISpecialEvents> InNewEventState);                                   // [0x8f37ca4] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortUISpecialEventSubsystem.GetCurrentUIEventState
	// TEnumAsByte<EFortUISpecialEvents> GetCurrentUIEventState();                                                              // [0x59654c4] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortUISpecialEventSubsystem.CallTemporarySpecialUIEvent
	// void CallTemporarySpecialUIEvent(TEnumAsByte<EFortUISpecialEvents> InNewTemporaryEvent);                                 // [0x8f37404] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/FortniteUI.FortUIStyleDefinitionAsset
/// Size: 0x0EC0 (0x000030 - 0x000EF0)
class UFortUIStyleDefinitionAsset : public UDataAsset
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 3824;

public:
	SMember(FFortUIStyleDefinition)                    StyleDefinition                                             OFFSET(getStruct<T>, {0x30, 3776, 0, 0})
};

/// Class /Script/FortniteUI.FortUserWidget
/// Size: 0x0010 (0x0002C0 - 0x0002D0)
class UFortUserWidget : public UUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 720;

public:
	DMember(bool)                                      bConsumePointerInput                                        OFFSET(get<bool>, {0x2C8, 1, 0, 0})
};

/// Class /Script/FortniteUI.FortUserChoiceWidget
/// Size: 0x0000 (0x0002D0 - 0x0002D0)
class UFortUserChoiceWidget : public UFortUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 720;

public:
};

/// Class /Script/FortniteUI.FortViewModelsManager
/// Size: 0x00F0 (0x000030 - 0x000120)
class UFortViewModelsManager : public UGameInstanceSubsystem
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 288;

public:
	CMember(TMap<UObject*, EFortViewModelsDestructionType>) ViewModelCache                                         OFFSET(get<T>, {0x30, 80, 0, 0})
};

/// Class /Script/FortniteUI.FortWeaponReticleRechargeStackBasePipBase
/// Size: 0x0008 (0x0002C0 - 0x0002C8)
class UFortWeaponReticleRechargeStackBasePipBase : public UUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 712;

public:
	CMember(UImage*)                                   ImagePip                                                    OFFSET(get<T>, {0x2C0, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortWeaponReticleRechargeStackBasePipBase.SetPipProgressColor
	// void SetPipProgressColor(FLinearColor Color, FName PipColorMatParamName);                                                // [0x8f39b90] Final|Native|Public|HasDefaults|BlueprintCallable 
	// Function /Script/FortniteUI.FortWeaponReticleRechargeStackBasePipBase.SetImagePip
	// void SetImagePip(UImage* Image);                                                                                         // [0x8f39634] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.FortWeaponReticleRechargeStackBasePipBase.SetFillPercent
	// void SetFillPercent(float FillPercent, FName PipPercentMatParamName);                                                    // [0x8f396b4] Native|Event|Public|BlueprintCallable|BlueprintEvent 
};

/// Class /Script/FortniteUI.FortWeaponReticleRechargeStackBasePipCollectionBase
/// Size: 0x0010 (0x0002C0 - 0x0002D0)
class UFortWeaponReticleRechargeStackBasePipCollectionBase : public UUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 720;

public:
	CMember(UDynamicEntryBox*)                         PipDynamicEntryBox                                          OFFSET(get<T>, {0x2C0, 8, 0, 0})
	DMember(int32_t)                                   CurrentCount                                                OFFSET(get<int32_t>, {0x2C8, 4, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortWeaponReticleRechargeStackBasePipCollectionBase.UpdateRemainingRechargeTimeAtIndex
	// void UpdateRemainingRechargeTimeAtIndex(float FillPercent, int32_t Index, FName PipPercentMatParamName, bool ShouldSetPipColor, FLinearColor NotReadyColor, FLinearColor ReadyColor, FName PipColorMatParamName); // [0x8f3a2b0] Final|Native|Protected|HasDefaults|BlueprintCallable 
	// Function /Script/FortniteUI.FortWeaponReticleRechargeStackBasePipCollectionBase.UpdateRemainingRechargeTime
	// void UpdateRemainingRechargeTime(float TimeRemaining, float TotalDuration, FName PipPercentMatParamName, bool ShouldSetPipColor, FLinearColor NotReadyColor, FLinearColor ReadyColor, FName PipColorMatParamName); // [0x8f39e1c] Final|Native|Protected|HasDefaults|BlueprintCallable 
	// Function /Script/FortniteUI.FortWeaponReticleRechargeStackBasePipCollectionBase.SetPipColor
	// void SetPipColor(float Progress, int32_t Index, FLinearColor NotReadyColor, FLinearColor ReadyColor, FName PipColorMatParamName); // [0x8f3977c] Final|Native|Protected|HasDefaults|BlueprintCallable 
	// Function /Script/FortniteUI.FortWeaponReticleRechargeStackBasePipCollectionBase.SetDynamicEntryBox
	// void SetDynamicEntryBox(UDynamicEntryBox* DynamicEntryBox);                                                              // [0x8f39634] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.FortWeaponReticleRechargeStackBasePipCollectionBase.GetDynamicEntryBox
	// UDynamicEntryBox* GetDynamicEntryBox();                                                                                  // [0x2a2e5c4] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortWeaponReticleRechargeStackBasePipCollectionBase.GetCurrentCount
	// int32_t GetCurrentCount();                                                                                               // [0x8f39554] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/FortniteUI.GamePhaseWidget
/// Size: 0x0008 (0x000328 - 0x000330)
class UGamePhaseWidget : public UFortHUDElementWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 816;

public:
};

/// Class /Script/FortniteUI.HudBindingCheckInterface
/// Size: 0x0000 (0x000028 - 0x000028)
class UHudBindingCheckInterface : public UInterface
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 40;

public:
};

/// Class /Script/FortniteUI.HUDLayoutToolV2_WidgetPreview
/// Size: 0x0048 (0x0002E8 - 0x000330)
class UHUDLayoutToolV2_WidgetPreview : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 816;

public:
	CMember(UCreateHUDWidgetDragDropOperation*)        CreateHUDWidgetOperation                                    OFFSET(get<T>, {0x2E8, 8, 0, 0})
	DMember(float)                                     DragDistanceThresholdMillimeters                            OFFSET(get<float>, {0x300, 4, 0, 0})
	CMember(UCommonTextBlock*)                         TextBlock_InstancesLeftCounter                              OFFSET(get<T>, {0x320, 8, 0, 0})
	CMember(UBorder*)                                  Border_Background                                           OFFSET(get<T>, {0x328, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.HUDLayoutToolV2_WidgetPreview.HandleOperationDrop
	// void HandleOperationDrop(UDragDropOperation* Operation);                                                                 // [0x91dd638] Final|Native|Private 
};

/// Class /Script/FortniteUI.HUDLayoutToolV2_AutorunPreview
/// Size: 0x0008 (0x000330 - 0x000338)
class UHUDLayoutToolV2_AutorunPreview : public UHUDLayoutToolV2_WidgetPreview
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 824;

public:
	CMember(UOverlay*)                                 Overlay_AutorunLockZone                                     OFFSET(get<T>, {0x330, 8, 0, 0})
};

/// Class /Script/FortniteUI.HUDLayoutToolV2_MoveStickPreview
/// Size: 0x0010 (0x000330 - 0x000340)
class UHUDLayoutToolV2_MoveStickPreview : public UHUDLayoutToolV2_WidgetPreview
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 832;

public:
	CMember(UOverlay*)                                 Overlay_ImprovedMoveStick                                   OFFSET(get<T>, {0x330, 8, 0, 0})
	CMember(UOverlay*)                                 Overlay_OriginalMoveStick                                   OFFSET(get<T>, {0x338, 8, 0, 0})
};

/// Class /Script/FortniteUI.MotdActionBase
/// Size: 0x0008 (0x000028 - 0x000030)
class UMotdActionBase : public UObject
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 48;

public:
};

/// Class /Script/FortniteUI.MotdListViewModel
/// Size: 0x0010 (0x000068 - 0x000078)
class UMotdListViewModel : public UMVVMViewModelBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 120;

public:
	CMember(TArray<UMotdViewModel*>)                   Motds                                                       OFFSET(get<T>, {0x68, 16, 0, 0})
};

/// Class /Script/FortniteUI.MotdViewModel
/// Size: 0x0110 (0x000068 - 0x000178)
class UMotdViewModel : public UMVVMViewModelBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 376;

public:
	SMember(FText)                                     FullScreenTitle                                             OFFSET(getStruct<T>, {0x68, 24, 0, 0})
	SMember(FText)                                     FullScreenBody                                              OFFSET(getStruct<T>, {0x80, 24, 0, 0})
	SMember(FText)                                     TeaserTitle                                                 OFFSET(getStruct<T>, {0x98, 24, 0, 0})
	SMember(FText)                                     FullScreenTabTitle                                          OFFSET(getStruct<T>, {0xB0, 24, 0, 0})
	SMember(FMotdBackground)                           FullScreenBackground                                        OFFSET(getStruct<T>, {0xC8, 64, 0, 0})
	SMember(FMotdBackground)                           TeaserBackground                                            OFFSET(getStruct<T>, {0x108, 64, 0, 0})
	CMember(TArray<FMotdButton>)                       Buttons                                                     OFFSET(get<T>, {0x148, 16, 0, 0})
};

/// Class /Script/FortniteUI.PrmPageBase
/// Size: 0x00C0 (0x000028 - 0x0000E8)
class UPrmPageBase : public UObject
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 232;

public:
};

/// Class /Script/FortniteUI.PrmMotdPage
/// Size: 0x0108 (0x0000E8 - 0x0001F0)
class UPrmMotdPage : public UPrmPageBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 496;

public:
};

/// Class /Script/FortniteUI.RebootRallyQRCode
/// Size: 0x0000 (0x001490 - 0x001490)
class URebootRallyQRCode : public UCommonButtonBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 5264;

public:
};

/// Class /Script/FortniteUI.ScrollableActivatableWidget
/// Size: 0x0020 (0x000400 - 0x000420)
class UScrollableActivatableWidget : public UCommonActivatableWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1056;

public:
};

/// Class /Script/FortniteUI.SidebarListEmptyPanelButton
/// Size: 0x0010 (0x001490 - 0x0014A0)
class USidebarListEmptyPanelButton : public UCommonButtonBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 5280;

public:
	CMember(UCommonTextBlock*)                         ButtonText                                                  OFFSET(get<T>, {0x1490, 8, 0, 0})
};

/// Class /Script/FortniteUI.AthenaSpatialStyleChallengeScreenData
/// Size: 0x0018 (0x000030 - 0x000048)
class UAthenaSpatialStyleChallengeScreenData : public UDataAsset
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 72;

public:
	CMember(TArray<FAthenaSpatialStyleCharacterData>)  CharacterStyleChallenges                                    OFFSET(get<T>, {0x30, 16, 0, 0})
	CMember(UFortChallengeBundleScheduleDefinition*)   CharacterStyleChallengesSchedule                            OFFSET(get<T>, {0x40, 8, 0, 0})
};

/// Class /Script/FortniteUI.SpatialWidgetInterface
/// Size: 0x0000 (0x000028 - 0x000028)
class USpatialWidgetInterface : public UInterface
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 40;

public:
};

/// Class /Script/FortniteUI.FortSubscriptionContentInterface
/// Size: 0x0000 (0x000028 - 0x000028)
class UFortSubscriptionContentInterface : public UInterface
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 40;

public:
};

/// Class /Script/FortniteUI.ThresholdScrollBox
/// Size: 0x0000 (0x000C10 - 0x000C10)
class UThresholdScrollBox : public UScrollBox
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 3088;

public:
};

/// Class /Script/FortniteUI.FortMobileHUDWidgetCustomPropertyModel_Scalar
/// Size: 0x0020 (0x000060 - 0x000080)
class UFortMobileHUDWidgetCustomPropertyModel_Scalar : public UFortMobileHUDWidgetCustomPropertyModel
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 128;

public:
	DMember(double)                                    DefaultValue                                                OFFSET(get<double>, {0x60, 8, 0, 0})
	DMember(double)                                    PropertyLowerBound                                          OFFSET(get<double>, {0x68, 8, 0, 0})
	DMember(double)                                    PropertyUpperBound                                          OFFSET(get<double>, {0x70, 8, 0, 0})
	DMember(double)                                    PropertyStepSize                                            OFFSET(get<double>, {0x78, 8, 0, 0})
};

/// Class /Script/FortniteUI.FortMobileHUDWidgetCustomPropertyModel_Scalar_AutorunPreference
/// Size: 0x0000 (0x000080 - 0x000080)
class UFortMobileHUDWidgetCustomPropertyModel_Scalar_AutorunPreference : public UFortMobileHUDWidgetCustomPropertyModel_Scalar
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 128;

public:
};

/// Class /Script/FortniteUI.UIKitBlock
/// Size: 0x0030 (0x0002C0 - 0x0002F0)
class UUIKitBlock : public UUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 752;

public:
	SMember(FUIKitBlockTiming)                         TransitionTiming                                            OFFSET(getStruct<T>, {0x2C0, 44, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.UIKitBlock.SetBlockTiming
	// void SetBlockTiming(FUIKitBlockTiming& Timing);                                                                          // [0x2725dec] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/FortniteUI.UIKitBlock.RequestTransition
	// void RequestTransition(EUIKitBlockVisualState State);                                                                    // [0x2910ff8] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.UIKitBlock.RequestInstantTransition
	// void RequestInstantTransition(EUIKitBlockInstantTransitionState State);                                                  // [0x8f3b6e4] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.UIKitBlock.PlayTransition
	// void PlayTransition(UWidgetAnimation* Animation, bool bPlayForward);                                                     // [0x2111d48] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.UIKitBlock.OnTransitionUnhoveredRequested
	// void OnTransitionUnhoveredRequested();                                                                                   // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.UIKitBlock.OnTransitionUnfocusedRequested
	// void OnTransitionUnfocusedRequested();                                                                                   // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.UIKitBlock.OnTransitionSelectedRequested
	// void OnTransitionSelectedRequested();                                                                                    // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.UIKitBlock.OnTransitionReleasedRequested
	// void OnTransitionReleasedRequested();                                                                                    // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.UIKitBlock.OnTransitionPressedRequested
	// void OnTransitionPressedRequested();                                                                                     // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.UIKitBlock.OnTransitionHoveredRequested
	// void OnTransitionHoveredRequested();                                                                                     // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.UIKitBlock.OnTransitionFocusedRequested
	// void OnTransitionFocusedRequested();                                                                                     // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.UIKitBlock.OnTransitionEnabledRequested
	// void OnTransitionEnabledRequested();                                                                                     // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.UIKitBlock.OnTransitionDisabledRequested
	// void OnTransitionDisabledRequested();                                                                                    // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.UIKitBlock.OnTransitionDeselectedIdleRequested
	// void OnTransitionDeselectedIdleRequested();                                                                              // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.UIKitBlock.OnTransitionDeselectedFocusedRequested
	// void OnTransitionDeselectedFocusedRequested();                                                                           // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.UIKitBlock.OnInstantTransitionToUnlocked
	// void OnInstantTransitionToUnlocked();                                                                                    // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.UIKitBlock.OnInstantTransitionToSelected
	// void OnInstantTransitionToSelected();                                                                                    // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.UIKitBlock.OnInstantTransitionToLocked
	// void OnInstantTransitionToLocked();                                                                                      // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.UIKitBlock.OnInstantTransitionToEnabled
	// void OnInstantTransitionToEnabled();                                                                                     // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.UIKitBlock.OnInstantTransitionToDisabled
	// void OnInstantTransitionToDisabled();                                                                                    // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.UIKitBlock.OnInstantTransitionToDeselected
	// void OnInstantTransitionToDeselected();                                                                                  // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.UIKitBlock.GetTransitionTime
	// float GetTransitionTime(EUIKitBlockVisualState State);                                                                   // [0x8f3b494] Final|Native|Public|BlueprintCallable|BlueprintPure 
};

/// Class /Script/FortniteUI.UIKitBlueprintFunctionLibrary
/// Size: 0x0000 (0x000028 - 0x000028)
class UUIKitBlueprintFunctionLibrary : public UBlueprintFunctionLibrary
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 40;

public:
};

/// Class /Script/FortniteUI.UIKitModularButton
/// Size: 0x0010 (0x001490 - 0x0014A0)
class UUIKitModularButton : public UCommonButtonBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 5280;

public:
	CMember(TArray<UUIKitBlock*>)                      ModularBlocks                                               OFFSET(get<T>, {0x1490, 16, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.UIKitModularButton.UnregisterModularBlock
	// void UnregisterModularBlock(UUIKitBlock* bLock);                                                                         // [0x25b9078] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.UIKitModularButton.UnregisterAllModularBlocks
	// void UnregisterAllModularBlocks();                                                                                       // [0x2b9a630] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.UIKitModularButton.SetBlocksTiming
	// void SetBlocksTiming(FUIKitBlockTiming& Timing);                                                                         // [0x2725e88] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/FortniteUI.UIKitModularButton.RequestTransitionOnBlocks
	// void RequestTransitionOnBlocks(EUIKitBlockVisualState State);                                                            // [0x2911078] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.UIKitModularButton.RequestInstantTransitionOnBlocks
	// void RequestInstantTransitionOnBlocks(EUIKitBlockInstantTransitionState State);                                          // [0x267ba00] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.UIKitModularButton.RegisterModularBlock
	// void RegisterModularBlock(UUIKitBlock* bLock);                                                                           // [0x25b915c] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/FortniteUI.UIKitTabGroup
/// Size: 0x0010 (0x0003D8 - 0x0003E8)
class UUIKitTabGroup : public UCommonTabListWidgetBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1000;

public:
	CMember(TArray<UUIKitTabGroupButtonViewModel*>)    LocalTabsViewModels                                         OFFSET(get<T>, {0x3D8, 16, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.UIKitTabGroup.SetInputActions
	// void SetInputActions(FDataTableRowHandle NextTab, FDataTableRowHandle PreviousTab);                                      // [0x1e0d0f4] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.UIKitTabGroup.SelectTabByIndex
	// bool SelectTabByIndex(int32_t Index, bool bSuppressClickFeedback);                                                       // [0x2712acc] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.UIKitTabGroup.IsTabViewModelValid
	// bool IsTabViewModelValid(UUIKitTabGroupButtonViewModel* TabVM);                                                          // [0x15690b0] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.UIKitTabGroup.GetTabViewModelByID
	// UUIKitTabGroupButtonViewModel* GetTabViewModelByID(FName TabNameID);                                                     // [0x2713b80] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.UIKitTabGroup.GetTabIndexByID
	// int32_t GetTabIndexByID(FName TabNameID);                                                                                // [0x2713760] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.UIKitTabGroup.GetSelectedTabIndex
	// int32_t GetSelectedTabIndex();                                                                                           // [0x350d68c] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.UIKitTabGroup.DeselectAll
	// void DeselectAll();                                                                                                      // [0x8f3b45c] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/FortniteUI.FortActiveFriendsViolator
/// Size: 0x0008 (0x0002E8 - 0x0002F0)
class UFortActiveFriendsViolator : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 752;

public:
	CMember(UCommonTextBlock*)                         Text_ActivePlayerCount                                      OFFSET(get<T>, {0x2E8, 8, 0, 0})
};

/// Class /Script/FortniteUI.FortServerBrowser
/// Size: 0x00B0 (0x000400 - 0x0004B0)
class UFortServerBrowser : public UCommonActivatableWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1200;

public:
	CMember(TArray<UFortServerBrowserActionData*>)     SupportedActions                                            OFFSET(get<T>, {0x410, 16, 0, 0})
	CMember(TArray<TWeakObjectPtr>)                    ExcludedSupportedActions                                    OFFSET(get<T>, {0x420, 16, 0, 0})
	CMember(TWeakObjectPtr<UFortServerBrowserActionData*>) DefaultSelectedAction                                   OFFSET(get<T>, {0x430, 32, 0, 0})
	CMember(UFortServerBrowserListView*)               ListView_ServerBrowser                                      OFFSET(get<T>, {0x450, 8, 0, 0})
	SMember(FDataTableRowHandle)                       NavigateLeftInputAction                                     OFFSET(getStruct<T>, {0x458, 16, 0, 0})
	SMember(FDataTableRowHandle)                       NavigateRightInputAction                                    OFFSET(getStruct<T>, {0x468, 16, 0, 0})
	CMember(UCommonButtonLegacy*)                      Button_Cancel                                               OFFSET(get<T>, {0x488, 8, 0, 0})
	CMember(UCommonButtonLegacy*)                      Button_CloseTouch                                           OFFSET(get<T>, {0x490, 8, 0, 0})
};

/// Class /Script/FortniteUI.FortServerBrowserCreative
/// Size: 0x0068 (0x0004B0 - 0x000518)
class UFortServerBrowserCreative : public UFortServerBrowser
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1304;

public:
	CMember(TWeakObjectPtr<UFortServerBrowserActionData*>) DefaultActionIfDiscoveryDisabled                        OFFSET(get<T>, {0x4B0, 32, 0, 0})
};

/// Class /Script/FortniteUI.FortServerBrowserHelper
/// Size: 0x0068 (0x000028 - 0x000090)
class UFortServerBrowserHelper : public UObject
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 144;

public:
};

/// Class /Script/FortniteUI.FortServerBrowserListView
/// Size: 0x0148 (0x000298 - 0x0003E0)
class UFortServerBrowserListView : public UListViewBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 992;

public:
	CMember(TEnumAsByte<EOrientation>)                 Orientation                                                 OFFSET(get<T>, {0x380, 1, 0, 0})
	DMember(float)                                     EntrySpacing                                                OFFSET(get<float>, {0x384, 4, 0, 0})
	CMember(UClass*)                                   CreativeServerInfoTileEntryClass                            OFFSET(get<T>, {0x3A0, 8, 0, 0})
	CMember(UClass*)                                   ServerActionTileEntryClass                                  OFFSET(get<T>, {0x3A8, 8, 0, 0})
	CMember(UClass*)                                   OwnServerActionTileEntryClass                               OFFSET(get<T>, {0x3B0, 8, 0, 0})
	CMember(UClass*)                                   PlaylistSelectionActionTileEntryClass                       OFFSET(get<T>, {0x3B8, 8, 0, 0})
};

/// Class /Script/FortniteUI.FortServerBrowserPlayground
/// Size: 0x0018 (0x0004B0 - 0x0004C8)
class UFortServerBrowserPlayground : public UFortServerBrowser
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1224;

public:
};

/// Class /Script/FortniteUI.FortServerInfoFriendEntry
/// Size: 0x0008 (0x0002E8 - 0x0002F0)
class UFortServerInfoFriendEntry : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 752;

public:
	CMember(UCommonTextBlock*)                         Text_FriendName                                             OFFSET(get<T>, {0x2E8, 8, 0, 0})
};

/// Class /Script/FortniteUI.FortServerTileBase
/// Size: 0x0050 (0x0014E0 - 0x001530)
class UFortServerTileBase : public UCommonButtonLegacy
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 5424;

public:
	CMember(UCommonTextBlock*)                         Text_ServerWarning                                          OFFSET(get<T>, {0x1518, 8, 0, 0})
	CMember(UCommonButtonLegacy*)                      Button_Launch                                               OFFSET(get<T>, {0x1520, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortServerTileBase.OnLaunchButtonEnableChanged
	// void OnLaunchButtonEnableChanged(bool bEnableValue);                                                                     // [0x1d9241c] Event|Protected|BlueprintEvent 
};

/// Class /Script/FortniteUI.FortServerActionTile
/// Size: 0x0000 (0x001530 - 0x001530)
class UFortServerActionTile : public UFortServerTileBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 5424;

public:
};

/// Class /Script/FortniteUI.FortNamedServerActionTile
/// Size: 0x0020 (0x001530 - 0x001550)
class UFortNamedServerActionTile : public UFortServerActionTile
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 5456;

public:
	CMember(UCommonTextBlock*)                         Text_ActionTitle                                            OFFSET(get<T>, {0x1530, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_ActionDescription                                      OFFSET(get<T>, {0x1538, 8, 0, 0})
	CMember(UImage*)                                   Image_Background                                            OFFSET(get<T>, {0x1540, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortNamedServerActionTile.UpdateButtonText
	// void UpdateButtonText();                                                                                                 // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortNamedServerActionTile.IsActionIslandSelectType
	// bool IsActionIslandSelectType();                                                                                         // [0x8f74ca0] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/FortniteUI.FortPlaylistSelectionActionTile
/// Size: 0x0000 (0x001550 - 0x001550)
class UFortPlaylistSelectionActionTile : public UFortNamedServerActionTile
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 5456;

public:
};

/// Class /Script/FortniteUI.FortServerInfoTileBase
/// Size: 0x0020 (0x001530 - 0x001550)
class UFortServerInfoTileBase : public UFortServerTileBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 5456;

public:
	CMember(UCommonTextBlock*)                         Text_PlayerCount                                            OFFSET(get<T>, {0x1528, 8, 0, 0})
	CMember(UDynamicEntryBox*)                         EntryBox_ServerFriendList                                   OFFSET(get<T>, {0x1530, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_OwnerName                                              OFFSET(get<T>, {0x1538, 8, 0, 0})
	CMember(UVerticalBox*)                             VerticalBox_Ownership                                       OFFSET(get<T>, {0x1540, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortServerInfoTileBase.RequestUpdateBackgroundImage
	// void RequestUpdateBackgroundImage(int32_t FriendListHash);                                                               // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortServerInfoTileBase.OnOwnerNameUpdated
	// void OnOwnerNameUpdated();                                                                                               // [0x1d9241c] Event|Protected|BlueprintEvent 
};

/// Class /Script/FortniteUI.FortCreativeServerInfoTile
/// Size: 0x0010 (0x001550 - 0x001560)
class UFortCreativeServerInfoTile : public UFortServerInfoTileBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 5472;

public:
	CMember(UCommonTextBlock*)                         Text_FriendsPlaying                                         OFFSET(get<T>, {0x1548, 8, 0, 0})
	CMember(URichTextBlock*)                           RichText_RemainingFriends                                   OFFSET(get<T>, {0x1550, 8, 0, 0})
};

/// Class /Script/FortniteUI.ApolloIntroShimBase
/// Size: 0x0020 (0x0002C0 - 0x0002E0)
class UApolloIntroShimBase : public UUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 736;

public:
};

/// Class /Script/FortniteUI.FortAsyncAction_CheckForStwMfaReward
/// Size: 0x0028 (0x000030 - 0x000058)
class UFortAsyncAction_CheckForStwMfaReward : public UBlueprintAsyncActionBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 88;

public:
	SMember(FMulticastInlineDelegate)                  OnCompleted                                                 OFFSET(getStruct<T>, {0x30, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnFailed                                                    OFFSET(getStruct<T>, {0x40, 16, 0, 0})
	CMember(AFortPlayerController*)                    PlayerController                                            OFFSET(get<T>, {0x50, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortAsyncAction_CheckForStwMfaReward.CheckForStwMfaReward
	// UFortAsyncAction_CheckForStwMfaReward* CheckForStwMfaReward(AFortPlayerController* PlayerController);                    // [0x8f723bc] Final|Native|Static|Public|BlueprintCallable 
};

/// Class /Script/FortniteUI.FortAsyncAction_CreateWidgetAsync
/// Size: 0x0070 (0x000030 - 0x0000A0)
class UFortAsyncAction_CreateWidgetAsync : public UBlueprintAsyncActionBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 160;

public:
	SMember(FMulticastInlineDelegate)                  OnComplete                                                  OFFSET(getStruct<T>, {0x40, 16, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortAsyncAction_CreateWidgetAsync.CreateWidgetAsync
	// UFortAsyncAction_CreateWidgetAsync* CreateWidgetAsync(UObject* WorldContextObject, TWeakObjectPtr<UClass*> UserWidgetSoftClass, APlayerController* OwningPlayer, bool bSuspendInputUntilComplete); // [0x220aaf8] Final|Native|Static|Public|BlueprintCallable 
};

/// Class /Script/FortniteUI.FortAsyncAction_LoadBannerAsset
/// Size: 0x0040 (0x000030 - 0x000070)
class UFortAsyncAction_LoadBannerAsset : public UBlueprintAsyncActionBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 112;

public:
	SMember(FMulticastInlineDelegate)                  BannerAssetLoadComplete                                     OFFSET(getStruct<T>, {0x30, 16, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortAsyncAction_LoadBannerAsset.AsyncLoadBannerAsset
	// UFortAsyncAction_LoadBannerAsset* AsyncLoadBannerAsset(UObject* WorldContextObject, TWeakObjectPtr<UObject*> AssetToLoad, UMaterialInstanceDynamic* MIDRef, FName BannerColorName); // [0x220b010] Final|Native|Static|Public|BlueprintCallable 
};

/// Class /Script/FortniteUI.FortAsyncAction_LoadCurrentSubgameProfiles
/// Size: 0x0028 (0x000030 - 0x000058)
class UFortAsyncAction_LoadCurrentSubgameProfiles : public UBlueprintAsyncActionBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 88;

public:
	SMember(FMulticastInlineDelegate)                  OnSuccess                                                   OFFSET(getStruct<T>, {0x30, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnFailure                                                   OFFSET(getStruct<T>, {0x40, 16, 0, 0})
	CMember(AFortPlayerController*)                    PlayerController                                            OFFSET(get<T>, {0x50, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortAsyncAction_LoadCurrentSubgameProfiles.LoadCurrentSubgameProfiles
	// UFortAsyncAction_LoadCurrentSubgameProfiles* LoadCurrentSubgameProfiles(AFortPlayerController* PlayerController);        // [0x8f74cec] Final|Native|Static|Public|BlueprintCallable 
};

/// Class /Script/FortniteUI.FortAsyncAction_ShowConfirmation_NUI
/// Size: 0x0190 (0x000030 - 0x0001C0)
class UFortAsyncAction_ShowConfirmation_NUI : public UBlueprintAsyncActionBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 448;

public:
	SMember(FMulticastInlineDelegate)                  DialogResult                                                OFFSET(getStruct<T>, {0x30, 16, 0, 0})
	CMember(UObject*)                                  WorldContextObject                                          OFFSET(get<T>, {0x40, 8, 0, 0})
	CMember(UFortLocalPlayer*)                         TargetLocalPlayer                                           OFFSET(get<T>, {0x48, 8, 0, 0})
	SMember(FFortDialogDescription_NUI)                Description                                                 OFFSET(getStruct<T>, {0x50, 352, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortAsyncAction_ShowConfirmation_NUI.ShowSimpleConfirmationDialog_NUI
	// UFortAsyncAction_ShowConfirmation_NUI* ShowSimpleConfirmationDialog_NUI(UObject* InWorldContextObject, FSlateBrush Icon, FText Title, FText Message, bool bShowConfirm, bool bShowDecline, UWidget* AdditionalContent, UWidget* LeftAdditionalContent, ULocalPlayer* TargetPlayer); // [0x8f78c2c] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortAsyncAction_ShowConfirmation_NUI.ShowSimpleConfirmationDialog_CustomInput
	// UFortAsyncAction_ShowConfirmation_NUI* ShowSimpleConfirmationDialog_CustomInput(UObject* InWorldContextObject, FSlateBrush Icon, FText Title, FText Message, FName ConfirmAction, FName DeclineAction, UWidget* AdditionalContent, UWidget* LeftAdditionalContent, bool Cancelable, ULocalPlayer* TargetPlayer); // [0x8f7815c] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortAsyncAction_ShowConfirmation_NUI.ShowConfirmationDialog_NUI
	// UFortAsyncAction_ShowConfirmation_NUI* ShowConfirmationDialog_NUI(UObject* InWorldContextObject, FSlateBrush Icon, FText Title, FText Message, TArray<FConfirmationDialogAction>& ConfirmButtonInputActions, FName& DeclineButtonInputAction, UWidget* AdditionalContent, UWidget* LeftAdditionalContent, ULocalPlayer* TargetPlayer); // [0x8f77760] Final|Native|Static|Public|HasOutParms|BlueprintCallable 
};

/// Class /Script/FortniteUI.FortAsyncAction_PushPrimaryContent
/// Size: 0x0040 (0x000030 - 0x000070)
class UFortAsyncAction_PushPrimaryContent : public UBlueprintAsyncActionBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 112;

public:
	SMember(FMulticastInlineDelegate)                  OnPrimaryContentPushed                                      OFFSET(getStruct<T>, {0x30, 16, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortAsyncAction_PushPrimaryContent.PushPrimaryContentSoftClassAsyncForPlayer
	// UFortAsyncAction_PushPrimaryContent* PushPrimaryContentSoftClassAsyncForPlayer(APlayerController* ContextPC, TWeakObjectPtr<UClass*> SoftWidgetClass); // [0x8f754c0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortAsyncAction_PushPrimaryContent.PushPrimaryContentSoftClassAsync
	// UFortAsyncAction_PushPrimaryContent* PushPrimaryContentSoftClassAsync(UUserWidget* ContextWidget, TWeakObjectPtr<UClass*> SoftWidgetClass); // [0x8f75394] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortAsyncAction_PushPrimaryContent.PushPrimaryContentClassAsyncForPlayer
	// UFortAsyncAction_PushPrimaryContent* PushPrimaryContentClassAsyncForPlayer(APlayerController* ContextPC, UClass* WidgetClass); // [0x8f752d0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortAsyncAction_PushPrimaryContent.PushPrimaryContentClassAsync
	// UFortAsyncAction_PushPrimaryContent* PushPrimaryContentClassAsync(UUserWidget* ContextWidget, UClass* WidgetClass);      // [0x8f7520c] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortAsyncAction_PushPrimaryContent.OnPrimaryContentPushed__DelegateSignature
	// void OnPrimaryContentPushed__DelegateSignature(UCommonActivatableWidget* ActivatableWidget);                             // [0x1d9241c] MulticastDelegate|Public|Delegate 
};

/// Class /Script/FortniteUI.FortAsyncAction_QueueModalWidget
/// Size: 0x0048 (0x000030 - 0x000078)
class UFortAsyncAction_QueueModalWidget : public UBlueprintAsyncActionBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 120;

public:
	SMember(FMulticastInlineDelegate)                  OnModalWidgetQueued                                         OFFSET(getStruct<T>, {0x30, 16, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortAsyncAction_QueueModalWidget.QueueModalWidgetSoftClassAsyncForPlayer
	// UFortAsyncAction_QueueModalWidget* QueueModalWidgetSoftClassAsyncForPlayer(APlayerController* PlayerController, TWeakObjectPtr<UClass*> SoftWidgetClass); // [0x8f75a90] Final|BlueprintCosmetic|Native|Static|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortAsyncAction_QueueModalWidget.QueueModalWidgetSoftClassAsyncForLocalPlayer
	// UFortAsyncAction_QueueModalWidget* QueueModalWidgetSoftClassAsyncForLocalPlayer(ULocalPlayer* LocalPlayer, TWeakObjectPtr<UClass*> SoftWidgetClass); // [0x8f75964] Final|BlueprintCosmetic|Native|Static|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortAsyncAction_QueueModalWidget.QueueModalWidgetSoftClassAsync
	// UFortAsyncAction_QueueModalWidget* QueueModalWidgetSoftClassAsync(UUserWidget* ContextWidget, TWeakObjectPtr<UClass*> SoftWidgetClass); // [0x8f75838] Final|BlueprintCosmetic|Native|Static|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortAsyncAction_QueueModalWidget.QueueModalWidgetClassAsyncForPlayer
	// UFortAsyncAction_QueueModalWidget* QueueModalWidgetClassAsyncForPlayer(APlayerController* PlayerController, UClass* WidgetClass); // [0x8f75774] Final|BlueprintCosmetic|Native|Static|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortAsyncAction_QueueModalWidget.QueueModalWidgetClassAsyncForLocalPlayer
	// UFortAsyncAction_QueueModalWidget* QueueModalWidgetClassAsyncForLocalPlayer(ULocalPlayer* LocalPlayer, UClass* WidgetClass); // [0x8f756b0] Final|BlueprintCosmetic|Native|Static|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortAsyncAction_QueueModalWidget.QueueModalWidgetClassAsync
	// UFortAsyncAction_QueueModalWidget* QueueModalWidgetClassAsync(UUserWidget* ContextWidget, UClass* WidgetClass);          // [0x8f755ec] Final|BlueprintCosmetic|Native|Static|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortAsyncAction_QueueModalWidget.OnModalWidgetQueued__DelegateSignature
	// void OnModalWidgetQueued__DelegateSignature(UCommonActivatableWidget* ActivatableWidget);                                // [0x1d9241c] MulticastDelegate|Public|Delegate 
};

/// Class /Script/FortniteUI.AthenaFPSBase
/// Size: 0x0020 (0x0002E8 - 0x000308)
class UAthenaFPSBase : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 776;

public:
	CMember(UCommonTextBlock*)                         FPS                                                         OFFSET(get<T>, {0x2E8, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.AthenaFPSBase.HandleShowFPSChanged
	// void HandleShowFPSChanged(bool bInShowFPS);                                                                              // [0x8f74414] Final|Native|Protected 
};

/// Class /Script/FortniteUI.AthenaMinimap
/// Size: 0x0010 (0x000178 - 0x000188)
class UAthenaMinimap : public UWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 392;

public:
	SMember(FVector2D)                                 DesiredSize                                                 OFFSET(getStruct<T>, {0x178, 16, 0, 0})
};

/// Class /Script/FortniteUI.AthenaRecordingBase
/// Size: 0x0000 (0x000328 - 0x000328)
class UAthenaRecordingBase : public UFortHUDElementWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 808;

public:
};

/// Class /Script/FortniteUI.AthenaTemperatureBase
/// Size: 0x0010 (0x0002E8 - 0x0002F8)
class UAthenaTemperatureBase : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 760;

public:
	CMember(UTextBlock*)                               Temperature                                                 OFFSET(get<T>, {0x2E8, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.AthenaTemperatureBase.StopTimer
	// void StopTimer();                                                                                                        // [0x8f7987c] Final|Native|Private|BlueprintCallable 
	// Function /Script/FortniteUI.AthenaTemperatureBase.StartTimer
	// void StartTimer();                                                                                                       // [0x8f79868] Final|Native|Private|BlueprintCallable 
};

/// Class /Script/FortniteUI.AthenaLoadingScreenPreviewPanelBase
/// Size: 0x0020 (0x000540 - 0x000560)
class UAthenaLoadingScreenPreviewPanelBase : public UAthenaLoadingScreenPreviewPanel
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1376;

public:
	CMember(UNativeWidgetHost*)                        LoadingScreenSlot                                           OFFSET(get<T>, {0x540, 8, 0, 0})
	CMember(UCommonButtonBase*)                        Button_Close                                                OFFSET(get<T>, {0x550, 8, 0, 0})
	CMember(UCommonButtonBase*)                        Button_CloseTouch                                           OFFSET(get<T>, {0x558, 8, 0, 0})
};

/// Class /Script/FortniteUI.ApolloIntroLoadingPanel
/// Size: 0x0008 (0x000560 - 0x000568)
class UApolloIntroLoadingPanel : public UAthenaLoadingScreenPreviewPanelBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1384;

public:
	CMember(UFortPlaylistAthena*)                      ApolloIntroPlaylist                                         OFFSET(get<T>, {0x560, 8, 0, 0})
};

/// Class /Script/FortniteUI.AthenaAIKillsBase
/// Size: 0x0018 (0x000328 - 0x000340)
class UAthenaAIKillsBase : public UFortHUDElementWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 832;

public:
	CMember(UTextBlock*)                               KillsText                                                   OFFSET(get<T>, {0x328, 8, 0, 0})
	CMember(UObject*)                                  KillsSource                                                 OFFSET(get<T>, {0x330, 8, 0, 0})
	DMember(bool)                                      bCustomKillSource                                           OFFSET(get<bool>, {0x338, 1, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.AthenaAIKillsBase.SetKillsSourcePlayerState
	// void SetKillsSourcePlayerState(AFortPlayerStateAthena* InPlayerState);                                                   // [0x8f775fc] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.AthenaAIKillsBase.SetKillsSourcePlayerController
	// void SetKillsSourcePlayerController(AFortPlayerControllerAthena* InPlayerController);                                    // [0x8f775fc] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/FortniteUI.AthenaAvailableSquadSlotsListBase
/// Size: 0x0020 (0x000328 - 0x000348)
class UAthenaAvailableSquadSlotsListBase : public UFortHUDElementWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 840;

public:
	DMember(int32_t)                                   MaxNumberOfAvailableSquadSlots                              OFFSET(get<int32_t>, {0x328, 4, 0, 0})
	DMember(bool)                                      bAlwaysDisplayTopEntryAsDetailed                            OFFSET(get<bool>, {0x32C, 1, 0, 0})
	CMember(UDynamicEntryBox*)                         EntryBox_AvailableSlotsList                                 OFFSET(get<T>, {0x338, 8, 0, 0})
	CMember(UAthenaPlayerViewModel*)                   CachedPlayerVM                                              OFFSET(get<T>, {0x340, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.AthenaAvailableSquadSlotsListBase.UpdateSquadFromMinigameOptionChange
	// void UpdateSquadFromMinigameOptionChange();                                                                              // [0x8f79c98] Final|Native|Private 
	// Function /Script/FortniteUI.AthenaAvailableSquadSlotsListBase.UpdateIsTeamMiniGameOnMinigameVolumeChanged
	// void UpdateIsTeamMiniGameOnMinigameVolumeChanged(AFortVolume* Volume);                                                   // [0x8f79968] Final|Native|Private 
	// Function /Script/FortniteUI.AthenaAvailableSquadSlotsListBase.UpdateIsTeamMiniGameOnGameStateChanged
	// void UpdateIsTeamMiniGameOnGameStateChanged(AFortMinigame* Minigame, EFortMinigameState MinigameState);                  // [0x8f798a4] Final|Native|Private 
	// Function /Script/FortniteUI.AthenaAvailableSquadSlotsListBase.HandleSquadMemberDisconnected
	// void HandleSquadMemberDisconnected(AFortPlayerStateAthena* Player);                                                      // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaAvailableSquadSlotsListBase.HandlePlayerUniqueIdReplicated
	// void HandlePlayerUniqueIdReplicated(FUniqueNetIdRepl& UniqueID);                                                         // [0x8f74144] Final|Native|Private|HasOutParms 
	// Function /Script/FortniteUI.AthenaAvailableSquadSlotsListBase.HandlePlayerExitVolume
	// void HandlePlayerExitVolume(APlayerState* ClientPlayerState, AFortVolume* Volume);                                       // [0x8f74080] Final|Native|Private 
	// Function /Script/FortniteUI.AthenaAvailableSquadSlotsListBase.HandlePlayerEnterVolume
	// void HandlePlayerEnterVolume(APlayerState* ClientPlayerState, AFortVolume* Volume);                                      // [0x8f73fbc] Final|Native|Private 
	// Function /Script/FortniteUI.AthenaAvailableSquadSlotsListBase.HandleGameMemberChanged
	// void HandleGameMemberChanged(char InSquadId, char InTeamIndex, AFortPlayerStateAthena* ChangedPS);                       // [0x8f73b60] Final|Native|Private 
};

/// Class /Script/FortniteUI.AthenaAvailableSquadSlotsListEntryBase
/// Size: 0x0008 (0x000328 - 0x000330)
class UAthenaAvailableSquadSlotsListEntryBase : public UFortHUDElementWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 816;

public:
	CMember(EAvailableSquadSlotsListEntryState)        CurrentEntryState                                           OFFSET(get<T>, {0x328, 1, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.AthenaAvailableSquadSlotsListEntryBase.BP_OnEntryStateUpdated
	// void BP_OnEntryStateUpdated(EAvailableSquadSlotsListEntryState NewEntryState);                                           // [0x1d9241c] Event|Protected|BlueprintEvent 
};

/// Class /Script/FortniteUI.AthenaCareerScreen
/// Size: 0x00A8 (0x000538 - 0x0005E0)
class UAthenaCareerScreen : public UCommonActivatablePanelLegacy
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1504;

public:
	CMember(TWeakObjectPtr<UClass*>)                   LeaderboardsScreenClass                                     OFFSET(get<T>, {0x538, 32, 0, 0})
	CMember(TWeakObjectPtr<UClass*>)                   ReplayBrowserScreenClass                                    OFFSET(get<T>, {0x558, 32, 0, 0})
	SMember(FDataTableRowHandle)                       BackToSocialTabInputActionRowHandle                         OFFSET(getStruct<T>, {0x578, 16, 0, 0})
	CMember(UCommonTextBlock*)                         Text_AccountLevel                                           OFFSET(get<T>, {0x588, 8, 0, 0})
	CMember(UCommonButtonBase*)                        Button_Leaderboards                                         OFFSET(get<T>, {0x590, 8, 0, 0})
	CMember(UCommonButtonBase*)                        Button_Replays                                              OFFSET(get<T>, {0x598, 8, 0, 0})
	CMember(UAthenaFeatTimelineListView*)              ListView_FeatTimeline                                       OFFSET(get<T>, {0x5A0, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_ChapterContext                                         OFFSET(get<T>, {0x5A8, 8, 0, 0})
	CMember(UBacchusCloseButton*)                      Button_TouchClose                                           OFFSET(get<T>, {0x5B0, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_MobileTabLabel                                         OFFSET(get<T>, {0x5B8, 8, 0, 0})
	CMember(UImage*)                                   Image_LeftFill                                              OFFSET(get<T>, {0x5C0, 8, 0, 0})
	CMember(UImage*)                                   Image_RightFill                                             OFFSET(get<T>, {0x5C8, 8, 0, 0})
	CMember(UImage*)                                   Image_Gradient                                              OFFSET(get<T>, {0x5D0, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.AthenaCareerScreen.ShowFeats
	// void ShowFeats(bool bHasCompletedFeats);                                                                                 // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaCareerScreen.RequestToUpdateSeasonStatsIfNeeded
	// void RequestToUpdateSeasonStatsIfNeeded(FString SeasonName);                                                             // [0x8f769ec] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.AthenaCareerScreen.RequestScreenData
	// FStatPageData RequestScreenData(FString SeasonName, bool bRanked, FString GameMode, FString SubMode);                    // [0x8f75c0c] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.AthenaCareerScreen.PopulateScreenData
	// void PopulateScreenData(FStatPageData Data);                                                                             // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaCareerScreen.OpenReplaysScreen
	// void OpenReplaysScreen();                                                                                                // [0x8f751dc] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.AthenaCareerScreen.HandleStatsLoaded
	// void HandleStatsLoaded(bool Success);                                                                                    // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaCareerScreen.GetSeasonNames
	// TArray<FString> GetSeasonNames();                                                                                        // [0x26694d0] Final|Native|Protected|BlueprintCallable|BlueprintPure 
};

/// Class /Script/FortniteUI.AthenaCareerStatsScreen
/// Size: 0x0060 (0x000538 - 0x000598)
class UAthenaCareerStatsScreen : public UCommonActivatablePanelLegacy
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1432;

public:
	CMember(TWeakObjectPtr<UClass*>)                   ReplayBrowserScreenClass                                    OFFSET(get<T>, {0x538, 32, 0, 0})
	SMember(FDataTableRowHandle)                       BackToSocialTabInputActionRowHandle                         OFFSET(getStruct<T>, {0x558, 16, 0, 0})
	CMember(UCommonTextBlock*)                         Text_AccountLevel                                           OFFSET(get<T>, {0x568, 8, 0, 0})
	CMember(UBacchusCloseButton*)                      Button_TouchClose                                           OFFSET(get<T>, {0x570, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_MobileTabLabel                                         OFFSET(get<T>, {0x578, 8, 0, 0})
	CMember(UFortHabaneroTierWidget*)                  WBP_Habanero_Icon                                           OFFSET(get<T>, {0x580, 8, 0, 0})
	CMember(UFortHabaneroDisplayData*)                 HabaneroDisplayData                                         OFFSET(get<T>, {0x590, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.AthenaCareerStatsScreen.RequestToUpdateSeasonStatsIfNeeded
	// void RequestToUpdateSeasonStatsIfNeeded(FString SeasonName);                                                             // [0x33f0944] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.AthenaCareerStatsScreen.OpenReplaysScreen
	// void OpenReplaysScreen();                                                                                                // [0x2ef9310] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.AthenaCareerStatsScreen.HandleStatsLoaded
	// void HandleStatsLoaded(bool Success);                                                                                    // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaCareerStatsScreen.HandleRanksLoaded
	// void HandleRanksLoaded(bool Success);                                                                                    // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaCareerStatsScreen.GetSeasonNames
	// TArray<FString> GetSeasonNames();                                                                                        // [0x26694d0] Final|Native|Protected|BlueprintCallable|BlueprintPure 
	// Function /Script/FortniteUI.AthenaCareerStatsScreen.GetReplaysButtonDesiredState
	// void GetReplaysButtonDesiredState(bool& bVisible, bool& bEnabled);                                                       // [0x27e3b1c] Final|Native|Private|HasOutParms|BlueprintCallable|BlueprintPure 
	// Function /Script/FortniteUI.AthenaCareerStatsScreen.GetRankDisplayData
	// FFortHabaneroTier GetRankDisplayData(FString HabaneroType, int32_t Habanero);                                            // [0x8f73084] Final|Native|Protected|BlueprintCallable|BlueprintPure 
	// Function /Script/FortniteUI.AthenaCareerStatsScreen.GetLoadedScreenData
	// void GetLoadedScreenData(FString SeasonName, bool bRanked, FString GameMode, FString SubMode, FStatPageData& StatPageData, bool& bSuccess); // [0x2ff0498] Final|Native|Protected|HasOutParms|BlueprintCallable 
	// Function /Script/FortniteUI.AthenaCareerStatsScreen.DisplayRankBadge
	// void DisplayRankBadge(FString HabaneroType, int32_t Habanero);                                                           // [0x8f72640] Final|Native|Protected|BlueprintCallable 
};

/// Class /Script/FortniteUI.AthenaChallengeEntry
/// Size: 0x0008 (0x0002C0 - 0x0002C8)
class UAthenaChallengeEntry : public UUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 712;

public:
	CMember(UCommonRichTextBlock*)                     Text_CurrentTask                                            OFFSET(get<T>, {0x2C0, 8, 0, 0})
};

/// Class /Script/FortniteUI.AthenaChallengesWidget
/// Size: 0x00A8 (0x000328 - 0x0003D0)
class UAthenaChallengesWidget : public UFortHUDElementWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 976;

public:
	CMember(UCommonTextBlock*)                         Text_Challenges                                             OFFSET(get<T>, {0x368, 8, 0, 0})
	CMember(UDynamicEntryBox*)                         DynamicEntryBox_ChallengeEntries                            OFFSET(get<T>, {0x370, 8, 0, 0})
	SMember(FFortPrioritizedWidgetData)                PrioritizedWidgetData                                       OFFSET(getStruct<T>, {0x3C8, 2, 0, 0})
	DMember(bool)                                      bXPSystemRequiredForChallenges                              OFFSET(get<bool>, {0x3CA, 1, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.AthenaChallengesWidget.IsXPSystemRequiredForChallenges
	// bool IsXPSystemRequiredForChallenges();                                                                                  // [0x8f74cd4] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.AthenaChallengesWidget.HandleDisplayDynamicQuestUpdate
	// void HandleDisplayDynamicQuestUpdate(UFortQuestObjectiveInfo* QuestObjective, bool DisplayStatusUpdate, bool DisplayAnnouncementUpdate); // [0x8f73a60] Native|Protected     
	// Function /Script/FortniteUI.AthenaChallengesWidget.BP_WidgetIsFinished
	// void BP_WidgetIsFinished();                                                                                              // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaChallengesWidget.BP_OnWidgetActivated
	// void BP_OnWidgetActivated();                                                                                             // [0x1d9241c] Event|Protected|BlueprintEvent 
};

/// Class /Script/FortniteUI.AthenaCollectionScreenContainer
/// Size: 0x0160 (0x000400 - 0x000560)
class UAthenaCollectionScreenContainer : public UCommonActivatableWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1376;

public:
	SMember(FAthenaMapScreenContainerTabInfo)          MapTabInfo                                                  OFFSET(getStruct<T>, {0x438, 72, 0, 0})
	CMember(UCommonVisibilitySwitcher*)                VisibilitySwitcher_Content                                  OFFSET(get<T>, {0x480, 8, 0, 0})
	CMember(TArray<FAthenaCollectionScreenContainerTabInfo>) TabInfos                                              OFFSET(get<T>, {0x488, 16, 0, 0})
	SMember(FDataTableRowHandle)                       NextTabInputAction                                          OFFSET(getStruct<T>, {0x498, 16, 0, 0})
	SMember(FDataTableRowHandle)                       PreviousTabInputAction                                      OFFSET(getStruct<T>, {0x4A8, 16, 0, 0})
	CMember(UDynamicEntryBox*)                         EntryBox_TabButtons                                         OFFSET(get<T>, {0x4B8, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_TabTitle                                               OFFSET(get<T>, {0x4C0, 8, 0, 0})
	CMember(TArray<FAthenaCollectionScreenContainerTabInfo>) ActiveTabInfos                                        OFFSET(get<T>, {0x4C8, 16, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.AthenaCollectionScreenContainer.EnableTabActions
	// void EnableTabActions();                                                                                                 // [0x8f72d14] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.AthenaCollectionScreenContainer.DisableTabActions
	// void DisableTabActions();                                                                                                // [0x8f7260c] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.AthenaCollectionScreenContainer.BP_OnShowTabsSet
	// void BP_OnShowTabsSet(bool bShowTabs);                                                                                   // [0x1d9241c] Event|Protected|BlueprintEvent 
};

/// Class /Script/FortniteUI.AthenaCollectionScreenContainerTabButton
/// Size: 0x0060 (0x0014E0 - 0x001540)
class UAthenaCollectionScreenContainerTabButton : public UCommonButtonLegacy
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 5440;

public:
	CMember(UCommonLazyImage*)                         LazyImage_Icon                                              OFFSET(get<T>, {0x14E0, 8, 0, 0})
	SMember(FString)                                   CollectionType                                              OFFSET(getStruct<T>, {0x14E8, 16, 0, 0})
	SMember(FVector2D)                                 ImageSize_Mobile                                            OFFSET(getStruct<T>, {0x14F8, 16, 0, 0})
	SMember(FText)                                     TabTitle                                                    OFFSET(getStruct<T>, {0x1508, 24, 0, 0})
	SMember(FGameplayTagContainer)                     CategoryTags                                                OFFSET(getStruct<T>, {0x1520, 32, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.AthenaCollectionScreenContainerTabButton.SetIcon
	// void SetIcon(TWeakObjectPtr<UObject*> LazyObject);                                                                       // [0x8f77508] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.AthenaCollectionScreenContainerTabButton.BP_ShowBang
	// void BP_ShowBang(bool bShow);                                                                                            // [0x1d9241c] Event|Public|BlueprintEvent 
};

/// Class /Script/FortniteUI.AthenaCommonPrioritizedWidget
/// Size: 0x0048 (0x000328 - 0x000370)
class UAthenaCommonPrioritizedWidget : public UFortHUDElementWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 880;

public:
	DMember(bool)                                      bAutoManagePriorityByVisibility                             OFFSET(get<bool>, {0x368, 1, 0, 0})
	SMember(FFortPrioritizedWidgetData)                PrioritizationData                                          OFFSET(getStruct<T>, {0x369, 2, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.AthenaCommonPrioritizedWidget.OnStompFailed
	// void OnStompFailed();                                                                                                    // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaCommonPrioritizedWidget.OnStompedByOtherWidget
	// void OnStompedByOtherWidget();                                                                                           // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaCommonPrioritizedWidget.K2_OnBecomeInactive
	// void K2_OnBecomeInactive();                                                                                              // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaCommonPrioritizedWidget.K2_OnBecomeActive
	// void K2_OnBecomeActive();                                                                                                // [0x1d9241c] Event|Protected|BlueprintEvent 
};

/// Class /Script/FortniteUI.AthenaCompassBase
/// Size: 0x0618 (0x000328 - 0x000940)
class UAthenaCompassBase : public UFortHUDElementWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 2368;

public:
	CMember(UMaterialInstanceDynamic*)                 CompassMaterial                                             OFFSET(get<T>, {0x328, 8, 0, 0})
	CMember(UImage*)                                   Image_Compass                                               OFFSET(get<T>, {0x330, 8, 0, 0})
	SMember(FSlateBrush)                               MarkerBrush                                                 OFFSET(getStruct<T>, {0x340, 192, 0, 0})
	SMember(FSlateBrush)                               HeadingIndicatorBrush                                       OFFSET(getStruct<T>, {0x400, 192, 0, 0})
	SMember(FSlateBrush)                               StormIndicatorBrush                                         OFFSET(getStruct<T>, {0x4C0, 192, 0, 0})
	DMember(float)                                     MarkerVerticalOffset                                        OFFSET(get<float>, {0x580, 4, 0, 0})
	DMember(float)                                     DistanceTextVerticalOffset                                  OFFSET(get<float>, {0x584, 4, 0, 0})
	DMember(float)                                     DistanceTextHorizontalOffset                                OFFSET(get<float>, {0x588, 4, 0, 0})
	SMember(FSlateFontInfo)                            HeadingFont                                                 OFFSET(getStruct<T>, {0x590, 88, 0, 0})
	SMember(FSlateFontInfo)                            DistanceTextFont                                            OFFSET(getStruct<T>, {0x5E8, 88, 0, 0})
	SMember(FSlateBrush)                               TeammateGunshotIndicatorBrush                               OFFSET(getStruct<T>, {0x640, 192, 0, 0})
	SMember(FSlateBrush)                               EnemyGunshotIndicatorBrush                                  OFFSET(getStruct<T>, {0x700, 192, 0, 0})
	DMember(float)                                     TimeToShowGunshotIndicators                                 OFFSET(get<float>, {0x7C0, 4, 0, 0})
	CMember(UCurveFloat*)                              GunshotIndicatorScaleOverTime                               OFFSET(get<T>, {0x7C8, 8, 0, 0})
	CMember(UCurveFloat*)                              GunshotIndicatorScaleByStrength                             OFFSET(get<T>, {0x7D0, 8, 0, 0})
	CMember(UCurveFloat*)                              GunshotIndicatorAlphaOverTime                               OFFSET(get<T>, {0x7D8, 8, 0, 0})
	CMember(UCurveFloat*)                              GunshotIndicatorAlphaByHeading                              OFFSET(get<T>, {0x7E0, 8, 0, 0})
	SMember(FSlateBrush)                               DefaultPinnedQuestIconBrush                                 OFFSET(getStruct<T>, {0x7F0, 192, 0, 0})
	DMember(float)                                     PinnedQuestAlphaRotCutoff                                   OFFSET(get<float>, {0x8B0, 4, 0, 0})
	DMember(float)                                     PinnedQuestDistanceRotCutoff                                OFFSET(get<float>, {0x8B4, 4, 0, 0})
	DMember(float)                                     PinnedQuestIconVerticalOffset                               OFFSET(get<float>, {0x8B8, 4, 0, 0})
	DMember(float)                                     PinnedQuestDistanceTextVerticalOffset                       OFFSET(get<float>, {0x8BC, 4, 0, 0})
	SMember(FSlateFontInfo)                            PinnedQuestDistanceTextFont                                 OFFSET(getStruct<T>, {0x8C0, 88, 0, 0})
};

/// Class /Script/FortniteUI.AthenaConfirmationWindow
/// Size: 0x0080 (0x000400 - 0x000480)
class UAthenaConfirmationWindow : public UCommonActivatableWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1152;

public:
	CMember(UCommonTextBlock*)                         Text_Title                                                  OFFSET(get<T>, {0x400, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_PostConfirmation                                       OFFSET(get<T>, {0x408, 8, 0, 0})
	CMember(UCommonRichTextBlock*)                     RichText_Description                                        OFFSET(get<T>, {0x410, 8, 0, 0})
	CMember(UFortLazyImage*)                           Image_MainIcon                                              OFFSET(get<T>, {0x418, 8, 0, 0})
	CMember(UDynamicEntryBox*)                         EntryBox_Buttons                                            OFFSET(get<T>, {0x420, 8, 0, 0})
	CMember(UBacchusCloseButton*)                      Button_CloseTouch                                           OFFSET(get<T>, {0x428, 8, 0, 0})
	CMember(UCommonBorder*)                            Border_TapToCloseZone                                       OFFSET(get<T>, {0x430, 8, 0, 0})
	CMember(UWidgetAnimation*)                         BoundAnim_PostConfirm                                       OFFSET(get<T>, {0x438, 8, 0, 0})
	SMember(FDataTableRowHandle)                       CancelAction                                                OFFSET(getStruct<T>, {0x440, 16, 0, 0})
	CMember(UClass*)                                   ConfirmButtonClass                                          OFFSET(get<T>, {0x450, 8, 0, 0})
	CMember(UClass*)                                   DeclineButtonClass                                          OFFSET(get<T>, {0x458, 8, 0, 0})
	CMember(UClass*)                                   CancelButtonClass                                           OFFSET(get<T>, {0x460, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.AthenaConfirmationWindow.OnShowConfirmationContent
	// void OnShowConfirmationContent();                                                                                        // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaConfirmationWindow.OnSetButtonText
	// void OnSetButtonText(UCommonButtonBase* Button, FText& Text);                                                            // [0x1d9241c] Event|Protected|HasOutParms|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaConfirmationWindow.HandleTapToCloseZoneMouseButtonDown
	// FEventReply HandleTapToCloseZoneMouseButtonDown(FGeometry MyGeometry, FPointerEvent& MouseEvent);                        // [0x8f74494] Final|Native|Private|HasOutParms 
};

/// Class /Script/FortniteUI.FortActorIndicatorWidget
/// Size: 0x00A8 (0x000328 - 0x0003D0)
class UFortActorIndicatorWidget : public UFortHUDElementWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 976;

public:
	CMember(AActor*)                                   IndicatedActor                                              OFFSET(get<T>, {0x330, 8, 0, 0})
	CMember(UPrimitiveComponent*)                      IndicatedActorComponent                                     OFFSET(get<T>, {0x338, 8, 0, 0})
	SMember(FVector)                                   RelativeLocation                                            OFFSET(getStruct<T>, {0x340, 24, 0, 0})
	DMember(float)                                     MaxDistance                                                 OFFSET(get<float>, {0x358, 4, 0, 0})
	DMember(bool)                                      bClampOnScreen                                              OFFSET(get<bool>, {0x35C, 1, 0, 0})
	DMember(bool)                                      bShowClampToScreenArrow                                     OFFSET(get<bool>, {0x35D, 1, 0, 0})
	SMember(FElevationArrowData)                       ElevationArrowData                                          OFFSET(getStruct<T>, {0x360, 28, 0, 0})
	DMember(bool)                                      bUseScreenSpacePosition                                     OFFSET(get<bool>, {0x37C, 1, 0, 0})
	SMember(FVector2D)                                 ScreenSpaceRelativeOffset                                   OFFSET(getStruct<T>, {0x380, 16, 0, 0})
	DMember(int32_t)                                   ScreenPriority                                              OFFSET(get<int32_t>, {0x390, 4, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortActorIndicatorWidget.SetIndicatedActor
	// void SetIndicatedActor(AActor* NewIndicatorActor);                                                                       // [0x6a22f88] Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortActorIndicatorWidget.OnTargetActorChanged
	// void OnTargetActorChanged(AActor* TargetedActor);                                                                        // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortActorIndicatorWidget.IsIndicatingActor
	// bool IsIndicatingActor(AActor* OtherActor);                                                                              // [0x931e48c] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortActorIndicatorWidget.Init
	// void Init(AActor* TargetedActor);                                                                                        // [0x931e148] Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortActorIndicatorWidget.Deinit
	// void Deinit();                                                                                                           // [0x931a38c] Native|Public|BlueprintCallable 
};

/// Class /Script/FortniteUI.AthenaMarkedActorIndicator
/// Size: 0x0270 (0x0003D0 - 0x000640)
class UAthenaMarkedActorIndicator : public UFortActorIndicatorWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1600;

public:
	SMember(FFortWorldMarkerData)                      MarkerData                                                  OFFSET(getStruct<T>, {0x400, 360, 0, 0})
	SMember(FMarkedActorDisplayInfo)                   MarkerDisplay                                               OFFSET(getStruct<T>, {0x568, 168, 0, 0})
	CMember(UFortMarkerDetailsTable*)                  DetailsTable                                                OFFSET(get<T>, {0x610, 8, 0, 0})
	DMember(float)                                     FreshLargeItemShowTime                                      OFFSET(get<float>, {0x618, 4, 0, 0})
	DMember(float)                                     IndicatorDotSizeThreshold                                   OFFSET(get<float>, {0x61C, 4, 0, 0})
	CMember(UWidgetSwitcher*)                          Switcher_IndicatorSize                                      OFFSET(get<T>, {0x620, 8, 0, 0})
	CMember(UPanelWidget*)                             Panel_SmallIndicator                                        OFFSET(get<T>, {0x628, 8, 0, 0})
	CMember(UPanelWidget*)                             Panel_LargeIndicator                                        OFFSET(get<T>, {0x630, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_Distance                                               OFFSET(get<T>, {0x638, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.AthenaMarkedActorIndicator.OnSetMarkerData
	// void OnSetMarkerData(FFortWorldMarkerData& FortWorldMarkerData);                                                         // [0x1d9241c] Event|Protected|HasOutParms|BlueprintEvent 
};

/// Class /Script/FortniteUI.AthenaContextTutorialIndicator
/// Size: 0x0040 (0x000640 - 0x000680)
class UAthenaContextTutorialIndicator : public UAthenaMarkedActorIndicator
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1664;

public:
	DMember(float)                                     OffscreenMaxTreshold                                        OFFSET(get<float>, {0x640, 4, 0, 0})
	CMember(UOverlay*)                                 Overlay_Icon                                                OFFSET(get<T>, {0x648, 8, 0, 0})
	DMember(float)                                     ScreenEdgePaddingSizePercent                                OFFSET(get<float>, {0x654, 4, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.AthenaContextTutorialIndicator.SwitchIndicatorSize
	// void SwitchIndicatorSize();                                                                                              // [0x8f79890] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.AthenaContextTutorialIndicator.SetScreenPercent
	// void SetScreenPercent(float Percent);                                                                                    // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaContextTutorialIndicator.SetIndicatorText
	// void SetIndicatorText(FText& Text);                                                                                      // [0x1d9241c] Event|Public|HasOutParms|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaContextTutorialIndicator.PlayOutAnimation
	// void PlayOutAnimation();                                                                                                 // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaContextTutorialIndicator.PlayInAnimation
	// void PlayInAnimation();                                                                                                  // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaContextTutorialIndicator.PlayBounceAnimation
	// void PlayBounceAnimation();                                                                                              // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaContextTutorialIndicator.GetMinTreshold
	// float GetMinTreshold();                                                                                                  // [0x8f72f60] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.AthenaContextTutorialIndicator.GetMaxTreshold
	// float GetMaxTreshold();                                                                                                  // [0x8e177d0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.AthenaContextTutorialIndicator.GetMaxOffscreenTreshold
	// float GetMaxOffscreenTreshold();                                                                                         // [0x3310474] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.AthenaContextTutorialIndicator.GetCurrentDotProduct
	// float GetCurrentDotProduct();                                                                                            // [0x33104ec] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/FortniteUI.AthenaContextualChallengesWidget
/// Size: 0x0000 (0x0003D0 - 0x0003D0)
class UAthenaContextualChallengesWidget : public UAthenaChallengesWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 976;

public:
};

/// Class /Script/FortniteUI.AthenaCosmeticUnlockingInfo
/// Size: 0x0058 (0x0002E8 - 0x000340)
class UAthenaCosmeticUnlockingInfo : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 832;

public:
	CMember(UCommonRichTextBlock*)                     RichText_StaticUnlockingText                                OFFSET(get<T>, {0x2E8, 8, 0, 0})
	CMember(UCommonRichTextBlock*)                     RichText_UnlockingText                                      OFFSET(get<T>, {0x2F0, 8, 0, 0})
	CMember(UProgressBar*)                             ProgressBar_StepsCompleted                                  OFFSET(get<T>, {0x2F8, 8, 0, 0})
	CMember(UCommonRichTextBlock*)                     RichText_ProgressCompletion                                 OFFSET(get<T>, {0x300, 8, 0, 0})
	SMember(FString)                                   EmphasisStyle                                               OFFSET(getStruct<T>, {0x308, 16, 0, 0})
	SMember(FString)                                   ProgressCompletionNumericStyle                              OFFSET(getStruct<T>, {0x318, 16, 0, 0})
	CMember(UAthenaCosmeticItemDefinition*)            CosmeticItemDef                                             OFFSET(get<T>, {0x328, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.AthenaCosmeticUnlockingInfo.ShowUnlockingInfoForCosmeticVariant
	// void ShowUnlockingInfoForCosmeticVariant(UAthenaCosmeticItemDefinition* InCosmeticItemDef, FGameplayTag& InVariantChannel, FGameplayTag& InVariant); // [0x8f79748] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/FortniteUI.AthenaCosmeticUnlockingInfo.ShowUnlockingInfoForCosmetic
	// void ShowUnlockingInfoForCosmetic(UAthenaCosmeticItemDefinition* InCosmeticItemDef);                                     // [0x8f796c8] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.AthenaCosmeticUnlockingInfo.ShowUnlockingInfo
	// void ShowUnlockingInfo(UAthenaCosmeticItemDefinition* UnlockItem, UFortItemDefinition* UnlockSource);                    // [0x8f795f0] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.AthenaCosmeticUnlockingInfo.ShowSeasonUnlockingInfo
	// void ShowSeasonUnlockingInfo(int32_t SeasonNumber, int32_t TierNumber);                                                  // [0x8f7809c] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.AthenaCosmeticUnlockingInfo.RequestUpdateAnim
	// void RequestUpdateAnim();                                                                                                // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaCosmeticUnlockingInfo.RequestOutroAnim
	// void RequestOutroAnim();                                                                                                 // [0x1d9241c] Event|Protected|BlueprintCallable|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaCosmeticUnlockingInfo.RequestIntroAnim
	// void RequestIntroAnim();                                                                                                 // [0x1d9241c] Event|Protected|BlueprintCallable|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaCosmeticUnlockingInfo.OutroAnimFinished
	// void OutroAnimFinished();                                                                                                // [0x8f751f0] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.AthenaCosmeticUnlockingInfo.OnUnlockingInfoSet
	// void OnUnlockingInfoSet(bool bShowProgression);                                                                          // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaCosmeticUnlockingInfo.HideUnlockingInfo
	// void HideUnlockingInfo();                                                                                                // [0x8f74c8c] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/FortniteUI.AthenaCountdownWidgetBase
/// Size: 0x0060 (0x000328 - 0x000388)
class UAthenaCountdownWidgetBase : public UFortHUDElementWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 904;

public:
	SMember(FFortPrioritizedWidgetData)                PrioritizationData                                          OFFSET(getStruct<T>, {0x368, 2, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.AthenaCountdownWidgetBase.OnDisplayWarningMessage
	// void OnDisplayWarningMessage(FText& FirstLineText, FText& SecondLineText);                                               // [0x1d9241c] Event|Protected|HasOutParms|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaCountdownWidgetBase.OnCountdownUpdate
	// void OnCountdownUpdate(int32_t TimeRemaining, FText& CountdownUpdateText);                                               // [0x1d9241c] Event|Protected|HasOutParms|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaCountdownWidgetBase.OnCountdownStopped
	// void OnCountdownStopped();                                                                                               // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaCountdownWidgetBase.OnCountdownStarted
	// void OnCountdownStarted(int32_t TimeRemaining, FText& CountdownIntroText);                                               // [0x1d9241c] Event|Protected|HasOutParms|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaCountdownWidgetBase.OnCountdownFinished
	// void OnCountdownFinished();                                                                                              // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaCountdownWidgetBase.HandleCountdownUpdate
	// void HandleCountdownUpdate(int32_t TimeRemaining);                                                                       // [0x8f73960] Final|Native|Protected 
	// Function /Script/FortniteUI.AthenaCountdownWidgetBase.HandleCountdownStopped
	// void HandleCountdownStopped();                                                                                           // [0x8f7394c] Final|Native|Protected 
	// Function /Script/FortniteUI.AthenaCountdownWidgetBase.HandleCountdownStarted
	// void HandleCountdownStarted(int32_t TimeRemaining);                                                                      // [0x8f738cc] Final|Native|Protected 
	// Function /Script/FortniteUI.AthenaCountdownWidgetBase.HandleCountdownFinished
	// void HandleCountdownFinished();                                                                                          // [0x8f738b8] Final|Native|Protected 
};

/// Class /Script/FortniteUI.AthenaCurieStatusWidget
/// Size: 0x0048 (0x000328 - 0x000370)
class UAthenaCurieStatusWidget : public UFortHUDElementWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 880;

public:
};

/// Class /Script/FortniteUI.FortItemPickerBase
/// Size: 0x0138 (0x0002E8 - 0x000420)
class UFortItemPickerBase : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1056;

public:
	SMember(FMulticastInlineDelegate)                  OnSelectionChangedEvent                                     OFFSET(getStruct<T>, {0x2E8, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnSelectionCommittedEvent                                   OFFSET(getStruct<T>, {0x310, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnItemHoveredEvent                                          OFFSET(getStruct<T>, {0x368, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnItemUnhovered                                             OFFSET(getStruct<T>, {0x390, 16, 0, 0})
	CMember(UFortItemTileView*)                        PickerTileView                                              OFFSET(get<T>, {0x3B8, 8, 0, 0})
	CMember(UListView*)                                ItemListViewWidget                                          OFFSET(get<T>, {0x3C0, 8, 0, 0})
	DMember(bool)                                      bConfirmSelectionIfAlreadySelectedAfterOneClick             OFFSET(get<bool>, {0x3D8, 1, 0, 0})
	CMember(TScriptInterface<Class>)                   ItemViewContext                                             OFFSET(get<T>, {0x3E0, 16, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortItemPickerBase.TryCommitSelectedItem
	// bool TryCommitSelectedItem();                                                                                            // [0x9505328] Final|RequiredAPI|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortItemPickerBase.SetSelectedItem
	// void SetSelectedItem(UFortItem* ItemToSelect);                                                                           // [0x9504e58] Final|RequiredAPI|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortItemPickerBase.SetSelectedIndex
	// bool SetSelectedIndex(int32_t Index);                                                                                    // [0x9504dcc] Final|RequiredAPI|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortItemPickerBase.OnItemSelectionScriptDelegate__DelegateSignature
	// void OnItemSelectionScriptDelegate__DelegateSignature(UFortItem* SelectedItem);                                          // [0x1d9241c] MulticastDelegate|Public|Delegate 
	// Function /Script/FortniteUI.FortItemPickerBase.IsNullItemExplicitlySelected
	// bool IsNullItemExplicitlySelected();                                                                                     // [0x9503dd8] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortItemPickerBase.GetSelectedItem
	// UFortItem* GetSelectedItem();                                                                                            // [0x94ff6a8] Final|RequiredAPI|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortItemPickerBase.GetListViewInterface
	// TScriptInterface<Class> GetListViewInterface();                                                                          // [0x94ff540] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.FortItemPickerBase.GetIndexForItem
	// int32_t GetIndexForItem(UFortItem* Item);                                                                                // [0x94ff360] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortItemPickerBase.ClearSelection
	// void ClearSelection();                                                                                                   // [0x94fdbc8] Final|RequiredAPI|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortItemPickerBase.CenterSelectedItemTileWidget
	// void CenterSelectedItemTileWidget();                                                                                     // [0x94fdba0] Final|RequiredAPI|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortItemPickerBase.CanItemBeComitted
	// bool CanItemBeComitted(UFortItem* ItemToCommit);                                                                         // [0x94fda8c] Final|RequiredAPI|Native|Public|BlueprintCallable 
};

/// Class /Script/FortniteUI.AthenaCustomizationPicker
/// Size: 0x0168 (0x000420 - 0x000588)
class UAthenaCustomizationPicker : public UFortItemPickerBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1416;

public:
	SMember(FMulticastInlineDelegate)                  OnCosmeticSelectionSaving                                   OFFSET(getStruct<T>, {0x420, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnCosmeticSelectionSaved                                    OFFSET(getStruct<T>, {0x430, 16, 0, 0})
	CMember(TMap<EInventoryContentSortType, FText>)    SortLabels                                                  OFFSET(get<T>, {0x440, 80, 0, 0})
	CMember(TArray<FFortAthenaItemManagementInventoryFilterTabLabelInfo>) FilterTabLabelInfoArray                  OFFSET(get<T>, {0x490, 16, 0, 0})
	CMember(UCommonButtonBase*)                        Button_JumpToTop                                            OFFSET(get<T>, {0x4A0, 8, 0, 0})
	CMember(UCommonButtonBase*)                        Button_TextSearch                                           OFFSET(get<T>, {0x4A8, 8, 0, 0})
	CMember(UCommonButtonBase*)                        Button_SortAndFilter                                        OFFSET(get<T>, {0x4B0, 8, 0, 0})
	SMember(FName)                                     CurrentFilterName                                           OFFSET(getStruct<T>, {0x4B8, 4, 0, 0})
	DMember(bool)                                      bArchiveFiltering                                           OFFSET(get<bool>, {0x4E2, 1, 0, 0})
	CMember(UCommonTextBlock*)                         Text_SortTag                                                OFFSET(get<T>, {0x4E8, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_FilterTag                                              OFFSET(get<T>, {0x4F0, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_NumArchived                                            OFFSET(get<T>, {0x4F8, 8, 0, 0})
	CMember(UWidget*)                                  Widget_ArchivedTag                                          OFFSET(get<T>, {0x500, 8, 0, 0})
	CMember(EAthenaCustomizationCategory)              CustomizeCategory                                           OFFSET(get<T>, {0x508, 1, 0, 0})
	DMember(int32_t)                                   SubslotIndex                                                OFFSET(get<int32_t>, {0x50C, 4, 0, 0})
	DMember(float)                                     ItemOffsetForJumpToTopButton                                OFFSET(get<float>, {0x510, 4, 0, 0})
	CMember(UAthenaCustomizationPickerSortAndFilterBlade*) Blade_SortAndFilter                                     OFFSET(get<T>, {0x518, 8, 0, 0})
	CMember(UUserWidget*)                              Tooltip_ArchiveFilter                                       OFFSET(get<T>, {0x520, 8, 0, 0})
	DMember(bool)                                      bAllowCommits                                               OFFSET(get<bool>, {0x528, 1, 0, 0})
	CMember(TArray<UObject*>)                          InitialPickerItems                                          OFFSET(get<T>, {0x540, 16, 0, 0})
	CMember(UFortItem*)                                ItemListeningTo                                             OFFSET(get<T>, {0x550, 8, 0, 0})
	CMember(UAthenaCosmeticAccountItem*)               LocalCampaignHeroItem                                       OFFSET(get<T>, {0x558, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.AthenaCustomizationPicker.SetFilter
	// void SetFilter(FName FilterName);                                                                                        // [0x8f77488] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.AthenaCustomizationPicker.SearchText
	// void SearchText(FText& Text);                                                                                            // [0x8f770ac] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/FortniteUI.AthenaCustomizationPicker.OnUpdateArchiveFilterTooltipText
	// void OnUpdateArchiveFilterTooltipText(FText& Text);                                                                      // [0x1d9241c] Event|Public|HasOutParms|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaCustomizationPicker.OnShowArchiveFilterTooltip
	// void OnShowArchiveFilterTooltip(bool bShowTooltip);                                                                      // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaCustomizationPicker.OnSearchEnabled
	// void OnSearchEnabled(bool bEnabled);                                                                                     // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaCustomizationPicker.OnNoItemsAvailableInFilter
	// void OnNoItemsAvailableInFilter(FText& EmptyDisplayText);                                                                // [0x1d9241c] Event|Public|HasOutParms|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaCustomizationPicker.OnItemsAvailableInFilter
	// void OnItemsAvailableInFilter();                                                                                         // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaCustomizationPicker.OnCosmeticChangeSaveEvent__DelegateSignature
	// void OnCosmeticChangeSaveEvent__DelegateSignature();                                                                     // [0x1d9241c] MulticastDelegate|Public|Delegate 
	// Function /Script/FortniteUI.AthenaCustomizationPicker.HasSelectableTile
	// bool HasSelectableTile();                                                                                                // [0x1d9241c] Event|Protected|BlueprintEvent|Const 
	// Function /Script/FortniteUI.AthenaCustomizationPicker.HandleSelectedItemHasChanged
	// void HandleSelectedItemHasChanged(bool ItemChanged, bool AmmoChanged, bool IngredientsChanged);                          // [0x8f74308] Final|Native|Protected 
	// Function /Script/FortniteUI.AthenaCustomizationPicker.HandleButtonTextSearchClicked
	// void HandleButtonTextSearchClicked();                                                                                    // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaCustomizationPicker.HandleArchiveFilterTooltipDismissed
	// void HandleArchiveFilterTooltipDismissed();                                                                              // [0x8f73828] Final|Native|Private|BlueprintCallable|Const 
	// Function /Script/FortniteUI.AthenaCustomizationPicker.GetQualifiedFilterDisplayName
	// FText GetQualifiedFilterDisplayName(EAthenaFilterDisplayType InTopFilterDisplaySetting);                                 // [0x8f72fd4] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.AthenaCustomizationPicker.EndCustomizationCategory
	// void EndCustomizationCategory();                                                                                         // [0x8f72d28] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.AthenaCustomizationPicker.BP_OnUpdateNumArchivedItems
	// void BP_OnUpdateNumArchivedItems(int32_t InNumArchivedItems);                                                            // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaCustomizationPicker.BeginCustomizationCategory
	// void BeginCustomizationCategory(EAthenaCustomizationCategory category, int32_t SubslotToEdit);                           // [0x8f722f8] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/FortniteUI.AthenaCustomizationPickerSortAndFilterBlade
/// Size: 0x0158 (0x0002E8 - 0x000440)
class UAthenaCustomizationPickerSortAndFilterBlade : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1088;

public:
	CMember(UWidget*)                                  Widget_Sorts                                                OFFSET(get<T>, {0x2E8, 8, 0, 0})
	CMember(UWidget*)                                  Widget_Filters                                              OFFSET(get<T>, {0x2F0, 8, 0, 0})
	CMember(UFortDynamicEntryBox*)                     DynamicEntryBox_SortButtons                                 OFFSET(get<T>, {0x2F8, 8, 0, 0})
	CMember(UFortDynamicEntryBox*)                     DynamicEntryBox_FilterButtons                               OFFSET(get<T>, {0x300, 8, 0, 0})
	CMember(UCommonButtonGroupBase*)                   ButtonGroup_Sorts                                           OFFSET(get<T>, {0x308, 8, 0, 0})
	CMember(UCommonButtonGroupBase*)                   ButtonGroup_Filters                                         OFFSET(get<T>, {0x310, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.AthenaCustomizationPickerSortAndFilterBlade.IsBladeOpen
	// bool IsBladeOpen();                                                                                                      // [0x8f74cb8] Final|RequiredAPI|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.AthenaCustomizationPickerSortAndFilterBlade.HandleCloseAnimationFinished
	// void HandleCloseAnimationFinished();                                                                                     // [0x8f73878] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.AthenaCustomizationPickerSortAndFilterBlade.GetSortButtonAtIndex
	// UCommonButtonBase* GetSortButtonAtIndex(int32_t DesiredIndex);                                                           // [0x8f73798] Final|RequiredAPI|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.AthenaCustomizationPickerSortAndFilterBlade.GetNumSorts
	// int32_t GetNumSorts();                                                                                                   // [0x8f72f98] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.AthenaCustomizationPickerSortAndFilterBlade.GetNumFilters
	// int32_t GetNumFilters();                                                                                                 // [0x8f72f78] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.AthenaCustomizationPickerSortAndFilterBlade.GetFilterButtonAtIndex
	// UCommonButtonBase* GetFilterButtonAtIndex(int32_t DesiredIndex);                                                         // [0x8f72ed0] Final|RequiredAPI|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.AthenaCustomizationPickerSortAndFilterBlade.GetAllSortAndFilterButtons
	// TArray<UUserWidget*> GetAllSortAndFilterButtons();                                                                       // [0x8f72d3c] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.AthenaCustomizationPickerSortAndFilterBlade.CloseBlade
	// void CloseBlade();                                                                                                       // [0x8f72448] Final|RequiredAPI|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.AthenaCustomizationPickerSortAndFilterBlade.BP_SetSortOrFilterButtonDisplayName
	// void BP_SetSortOrFilterButtonDisplayName(UCommonButtonBase* SortOrFilterButton, FText& DisplayName);                     // [0x1d9241c] Event|Protected|HasOutParms|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaCustomizationPickerSortAndFilterBlade.BP_OnSortOrFilterButtonCreated
	// void BP_OnSortOrFilterButtonCreated(UCommonButtonBase* NewButton);                                                       // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaCustomizationPickerSortAndFilterBlade.BP_OnBladeOpen
	// void BP_OnBladeOpen();                                                                                                   // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaCustomizationPickerSortAndFilterBlade.BP_OnBladeClose
	// void BP_OnBladeClose();                                                                                                  // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaCustomizationPickerSortAndFilterBlade.BP_OnArchiveFilteringSet
	// void BP_OnArchiveFilteringSet(bool bEnabled);                                                                            // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaCustomizationPickerSortAndFilterBlade.BP_HighlightSortOrFilterButton
	// void BP_HighlightSortOrFilterButton(UCommonButtonBase* SortOrFilterButton, bool bHighlight);                             // [0x1d9241c] Event|Protected|BlueprintEvent 
};

/// Class /Script/FortniteUI.FortCosmeticItemTileButton
/// Size: 0x0020 (0x0014E0 - 0x001500)
class UFortCosmeticItemTileButton : public UCommonButtonLegacy
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 5376;

public:
	CMember(UFortCosmeticItemCard*)                    ItemWidget                                                  OFFSET(get<T>, {0x14E8, 8, 0, 0})
	CMember(TWeakObjectPtr<UFortItem*>)                Item                                                        OFFSET(get<T>, {0x14F0, 8, 0, 0})
	DMember(float)                                     ItemCardWidth                                               OFFSET(get<float>, {0x14F8, 4, 0, 0})
	DMember(float)                                     MobileScalingFactor                                         OFFSET(get<float>, {0x14FC, 4, 0, 0})
};

/// Class /Script/FortniteUI.AthenaCustomizationPickerTileButton
/// Size: 0x0020 (0x001500 - 0x001520)
class UAthenaCustomizationPickerTileButton : public UFortCosmeticItemTileButton
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 5408;

public:
	CMember(UFortBangWrapper_NUI*)                     Bang                                                        OFFSET(get<T>, {0x1508, 8, 0, 0})
	CMember(UImage*)                                   Image_Favorite                                              OFFSET(get<T>, {0x1510, 8, 0, 0})
	CMember(UImage*)                                   Image_ClassIcon                                             OFFSET(get<T>, {0x1518, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.AthenaCustomizationPickerTileButton.OnUpdateExclusiveWarning
	// void OnUpdateExclusiveWarning(bool bShouldWarn);                                                                         // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaCustomizationPickerTileButton.OnChangeOwnedState
	// void OnChangeOwnedState(bool bOwned);                                                                                    // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaCustomizationPickerTileButton.OnArchivedStatusUpdated
	// void OnArchivedStatusUpdated(bool bShowAsArchived, bool bUseAnimations);                                                 // [0x1d9241c] Event|Protected|BlueprintEvent 
};

/// Class /Script/FortniteUI.FortItemPreviewScreen
/// Size: 0x01B0 (0x000570 - 0x000720)
class UFortItemPreviewScreen : public UFortActivatablePanel
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1824;

public:
	SMember(FDataTableRowHandle)                       ItemViewUnifiedSupportsCameraControlInputAction             OFFSET(getStruct<T>, {0x580, 16, 0, 0})
	SMember(FDataTableRowHandle)                       ItemViewUnifiedZoomInputAction                              OFFSET(getStruct<T>, {0x590, 16, 0, 0})
	SMember(FDataTableRowHandle)                       ItemViewZoomOutInputAction                                  OFFSET(getStruct<T>, {0x5A0, 16, 0, 0})
	SMember(FDataTableRowHandle)                       ItemViewZoomInInputAction                                   OFFSET(getStruct<T>, {0x5B0, 16, 0, 0})
	SMember(FDataTableRowHandle)                       ItemViewRotateInputAction                                   OFFSET(getStruct<T>, {0x5C0, 16, 0, 0})
	CMember(UWidgetAnimation*)                         AnimationToHideItemInfo                                     OFFSET(get<T>, {0x5D0, 8, 0, 0})
	DMember(bool)                                      bAutoShowDetails                                            OFFSET(get<bool>, {0x5D8, 1, 0, 0})
	DMember(bool)                                      bItemDetailsHidden                                          OFFSET(get<bool>, {0x5D9, 1, 0, 0})
	DMember(float)                                     HideItemInfoHeaderDurationSecs                              OFFSET(get<float>, {0x5DC, 4, 0, 0})
	DMember(bool)                                      bAllowItemRotation                                          OFFSET(get<bool>, {0x5E8, 1, 0, 0})
	DMember(bool)                                      bAllowItemZooming                                           OFFSET(get<bool>, {0x5E9, 1, 0, 0})
	CMember(EFrontEndCamera)                           FrontEndCamera                                              OFFSET(get<T>, {0x5EA, 1, 0, 0})
	SMember(FGameplayTag)                              PreviewSceneChangerTag                                      OFFSET(getStruct<T>, {0x5EC, 4, 0, 0})
	SMember(FGameplayTag)                              PreviewSceneChangerOverrideTag                              OFFSET(getStruct<T>, {0x5F0, 4, 0, 0})
	CMember(AFortItemPreviewSceneChanger*)             PreviewSceneChanger                                         OFFSET(get<T>, {0x5F8, 8, 0, 0})
	CMember(UFortItemView*)                            ItemViewObject                                              OFFSET(get<T>, {0x600, 8, 0, 0})
	DMember(float)                                     CameraEntryTransitionDuration                               OFFSET(get<float>, {0x608, 4, 0, 0})
	CMember(UCurveFloat*)                              CameraEntryTransitionCurve                                  OFFSET(get<T>, {0x610, 8, 0, 0})
	CMember(UWidget*)                                  Widget_CameraFrame                                          OFFSET(get<T>, {0x698, 8, 0, 0})
	CMember(UCommonButtonBase*)                        Button_PreviewAction                                        OFFSET(get<T>, {0x6A0, 8, 0, 0})
	CMember(UCommonButtonBase*)                        Button_PreviewAction1                                       OFFSET(get<T>, {0x6A8, 8, 0, 0})
	CMember(UCommonButtonBase*)                        Button_Camera                                               OFFSET(get<T>, {0x6B0, 8, 0, 0})
	CMember(TSet<UCommonButtonBase*>)                  PreviewActionButtons                                        OFFSET(get<T>, {0x6B8, 80, 0, 0})
	CMember(UCommonActivatableWidget*)                 OverrideFocusWidget                                         OFFSET(get<T>, {0x708, 8, 0, 0})
	CMember(UFortItemDownloadIndicator*)               ItemDownloadIndicator                                       OFFSET(get<T>, {0x710, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_DebugPreviewDetails                                    OFFSET(get<T>, {0x718, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortItemPreviewScreen.ShowItemDetails
	// void ShowItemDetails();                                                                                                  // [0x94030ec] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortItemPreviewScreen.OnPreviewActionButtonUpdated
	// void OnPreviewActionButtonUpdated(FText& RowDisplayName, UCommonButtonBase* Button);                                     // [0x1d9241c] Event|Protected|HasOutParms|BlueprintEvent 
	// Function /Script/FortniteUI.FortItemPreviewScreen.HideItemDetails
	// void HideItemDetails();                                                                                                  // [0x9402024] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/FortniteUI.AthenaCustomizationScreenBase
/// Size: 0x00D8 (0x000720 - 0x0007F8)
class UAthenaCustomizationScreenBase : public UFortItemPreviewScreen
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 2040;

public:
	DMember(bool)                                      bCustomizationSelectionBeingProcessed                       OFFSET(get<bool>, {0x720, 1, 0, 0})
	SMember(FAthenaCustomizationParams)                CustomizationParams                                         OFFSET(getStruct<T>, {0x724, 8, 0, 0})
	CMember(UClass*)                                   ItemSelectorScreenClass                                     OFFSET(get<T>, {0x750, 8, 0, 0})
	CMember(UClass*)                                   LoadoutSelectorScreenClass                                  OFFSET(get<T>, {0x758, 8, 0, 0})
	CMember(UClass*)                                   BannerSelectModalClass                                      OFFSET(get<T>, {0x760, 8, 0, 0})
	CMember(UClass*)                                   NameLoadoutPopupClass                                       OFFSET(get<T>, {0x768, 8, 0, 0})
	CMember(UCommonButtonBase*)                        LastHoveredSlot                                             OFFSET(get<T>, {0x770, 8, 0, 0})
	CMember(TArray<EAthenaCustomizationCategory>)      BuiltInEmoteCategoryPriorities                              OFFSET(get<T>, {0x778, 16, 0, 0})
	CMember(UWidgetAnimation*)                         BoundAnim_Outro                                             OFFSET(get<T>, {0x788, 8, 0, 0})
	CMember(UPanelWidget*)                             Panel_GearSlotRow                                           OFFSET(get<T>, {0x790, 8, 0, 0})
	CMember(UAthenaCustomizationSlotSelectorButton*)   Slot_Pickaxe                                                OFFSET(get<T>, {0x798, 8, 0, 0})
	CMember(UAthenaCustomizationSlotSelectorButton*)   Slot_Glider                                                 OFFSET(get<T>, {0x7A0, 8, 0, 0})
	CMember(UAthenaCustomizationSlotSelectorButton*)   Slot_Contrail                                               OFFSET(get<T>, {0x7A8, 8, 0, 0})
	CMember(UPanelWidget*)                             Panel_EmoteSlotRow                                          OFFSET(get<T>, {0x7B0, 8, 0, 0})
	CMember(UPanelWidget*)                             Panel_WrapSlotRow                                           OFFSET(get<T>, {0x7B8, 8, 0, 0})
	CMember(UPanelWidget*)                             Panel_AccountSlotRow                                        OFFSET(get<T>, {0x7C0, 8, 0, 0})
	CMember(UFortBannerSlotButton*)                    Banner_Button                                               OFFSET(get<T>, {0x7C8, 8, 0, 0})
	CMember(UAthenaLockerItemInfo*)                    ItemInfo_Display                                            OFFSET(get<T>, {0x7D0, 8, 0, 0})
	CMember(UCommonButtonBase*)                        Button_BackToGame                                           OFFSET(get<T>, {0x7D8, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.AthenaCustomizationScreenBase.ShowLockerSlot
	// void ShowLockerSlot(EAthenaCustomizationCategory CustomizationCategory, int32_t SlotIndex, bool bCanShowEmpty);          // [0x8f77f9c] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.AthenaCustomizationScreenBase.ShouldShowQuickSaveTooltip
	// bool ShouldShowQuickSaveTooltip();                                                                                       // [0x340d498] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.AthenaCustomizationScreenBase.ShouldShowActionBarTooltip
	// bool ShouldShowActionBarTooltip();                                                                                       // [0x340d4d4] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.AthenaCustomizationScreenBase.SetCustomizationSelectionBeingProcessed
	// void SetCustomizationSelectionBeingProcessed(bool bIsBeingProcessed);                                                    // [0x8f77304] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.AthenaCustomizationScreenBase.QuickSaveToolTipSeen
	// void QuickSaveToolTipSeen();                                                                                             // [0x8f75bd0] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.AthenaCustomizationScreenBase.QuickRenameClicked
	// void QuickRenameClicked();                                                                                               // [0x8f75bbc] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.AthenaCustomizationScreenBase.OnBeginPickingCustomizationSlot
	// void OnBeginPickingCustomizationSlot(UAthenaCustomizationSlotSelectorButton* SlotButton);                                // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaCustomizationScreenBase.HandleInventoryUpdated
	// void HandleInventoryUpdated(TSet<FString>& ItemChangeFlags, int64_t ProfileRevision);                                    // [0x8f73c58] Final|Native|Private|HasOutParms 
	// Function /Script/FortniteUI.AthenaCustomizationScreenBase.GetFavoriteItemForCategory
	// UFortItem* GetFavoriteItemForCategory(EAthenaCustomizationCategory CustomizationType, int32_t SubslotIndex);             // [0x8f72e0c] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.AthenaCustomizationScreenBase.ActionBarToolTipSeen
	// void ActionBarToolTipSeen();                                                                                             // [0x8f721f4] Final|Native|Protected|BlueprintCallable 
};

/// Class /Script/FortniteUI.AthenaCustomizationSlotSelectorButton
/// Size: 0x00C0 (0x0014E0 - 0x0015A0)
class UAthenaCustomizationSlotSelectorButton : public UCommonButtonLegacy
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 5536;

public:
	SMember(FText)                                     CategoryDisplayName                                         OFFSET(getStruct<T>, {0x14E0, 24, 0, 0})
	SMember(FText)                                     CategoryDescription                                         OFFSET(getStruct<T>, {0x14F8, 24, 0, 0})
	CMember(EAthenaCustomizationCategory)              CustomizationType                                           OFFSET(get<T>, {0x1510, 1, 0, 0})
	DMember(int32_t)                                   SubslotIndex                                                OFFSET(get<int32_t>, {0x1514, 4, 0, 0})
	CMember(EFortBangType)                             BangType                                                    OFFSET(get<T>, {0x1518, 1, 0, 0})
	CMember(UFortCosmeticItemCard*)                    ItemWidget                                                  OFFSET(get<T>, {0x1520, 8, 0, 0})
	SMember(FGameplayTag)                              RequiredSlotGameplayTag                                     OFFSET(getStruct<T>, {0x1528, 4, 0, 0})
	CMember(TWeakObjectPtr<UTexture2D*>)               DefaultEmptyTexture                                         OFFSET(get<T>, {0x1530, 32, 0, 0})
	DMember(float)                                     CardWidth                                                   OFFSET(get<float>, {0x1550, 4, 0, 0})
	CMember(UFortItem*)                                LocalCampaignHeroPartItem                                   OFFSET(get<T>, {0x1580, 8, 0, 0})
	CMember(UImage*)                                   Image_Favorite                                              OFFSET(get<T>, {0x1588, 8, 0, 0})
	CMember(UImage*)                                   Image_ClassIcon                                             OFFSET(get<T>, {0x1590, 8, 0, 0})
	CMember(UFortBangWrapper_NUI*)                     Bang_Wrapper                                                OFFSET(get<T>, {0x1598, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.AthenaCustomizationSlotSelectorButton.SetCustomizationType
	// void SetCustomizationType(EAthenaCustomizationCategory NewType, int32_t InSubslotIndex, FGameplayTag& RequiredSlotTag);  // [0x8f77384] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/FortniteUI.AthenaCustomizationSlotSelectorButton.SetCardDefaultImageAndWidth
	// void SetCardDefaultImageAndWidth(TWeakObjectPtr<UTexture2D*>& InDefaultImage, float InWidth);                            // [0x8f77148] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/FortniteUI.AthenaCustomizationSlotSelectorButton.OnUpdateExclusiveWarning
	// void OnUpdateExclusiveWarning(bool bShouldWarn);                                                                         // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaCustomizationSlotSelectorButton.OnModifiedStatusUpdated
	// void OnModifiedStatusUpdated(bool bIsModified);                                                                          // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaCustomizationSlotSelectorButton.OnCustomizationSlotActiveStateChanged
	// void OnCustomizationSlotActiveStateChanged(bool bInAttachableCosmeticAvailable, bool bInActive);                         // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaCustomizationSlotSelectorButton.OnCardImageAndWidthChanged
	// void OnCardImageAndWidthChanged(TWeakObjectPtr<UTexture2D*>& Image, float Width);                                        // [0x1d9241c] Event|Protected|HasOutParms|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaCustomizationSlotSelectorButton.OnArchivedStatusUpdated
	// void OnArchivedStatusUpdated(bool bArchived);                                                                            // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaCustomizationSlotSelectorButton.IsSlotFilled
	// bool IsSlotFilled();                                                                                                     // [0x1c1014c] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.AthenaCustomizationSlotSelectorButton.HandleDifferentHeroLoadoutActivated
	// void HandleDifferentHeroLoadoutActivated(UFortMcpProfileCampaign* Profile);                                              // [0x8f739e0] Final|Native|Private 
	// Function /Script/FortniteUI.AthenaCustomizationSlotSelectorButton.GetCustomizationSlotActiveState
	// void GetCustomizationSlotActiveState(bool& bOutAttachableCosmeticAvailable, bool& bOutActive);                           // [0x2d105ac] Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.AthenaCustomizationSlotSelectorButton.GetCampaignHeroPartItem
	// UFortItem* GetCampaignHeroPartItem();                                                                                    // [0x8f72df4] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/FortniteUI.AthenaDiscoverabilityBase
/// Size: 0x0058 (0x000328 - 0x000380)
class UAthenaDiscoverabilityBase : public UFortHUDElementWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 896;

public:
	SMember(FFortPrioritizedWidgetData)                PrioritizationData                                          OFFSET(getStruct<T>, {0x370, 2, 0, 0})
	CMember(UFortControllerComponent_MapDiscoverability*) AssociatedComponent                                      OFFSET(get<T>, {0x378, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.AthenaDiscoverabilityBase.OnStompFailed
	// void OnStompFailed();                                                                                                    // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaDiscoverabilityBase.OnStompedByOtherWidget
	// void OnStompedByOtherWidget();                                                                                           // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaDiscoverabilityBase.K2_OnBecomeInactive
	// void K2_OnBecomeInactive();                                                                                              // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaDiscoverabilityBase.K2_OnBecomeActive
	// void K2_OnBecomeActive();                                                                                                // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaDiscoverabilityBase.CommonVisitedEvent
	// void CommonVisitedEvent(FGameplayTag& NewTag);                                                                           // [0x8f7257c] Native|Protected|HasOutParms 
	// Function /Script/FortniteUI.AthenaDiscoverabilityBase.CommonDiscoveredEvent
	// void CommonDiscoveredEvent(FGameplayTag& NewTag);                                                                        // [0x8f724ec] Native|Protected|HasOutParms 
	// Function /Script/FortniteUI.AthenaDiscoverabilityBase.CommonArrivalEvent
	// void CommonArrivalEvent(FGameplayTag& NewTag);                                                                           // [0x8f7245c] Native|Protected|HasOutParms 
};

/// Class /Script/FortniteUI.AthenaDiscoverabilityDisplay_Extension
/// Size: 0x0008 (0x000370 - 0x000378)
class UAthenaDiscoverabilityDisplay_Extension : public UAthenaCommonPrioritizedWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 888;

public:
	DMember(bool)                                      bShouldHandleLastPOITag                                     OFFSET(get<bool>, {0x370, 1, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.AthenaDiscoverabilityDisplay_Extension.OnCommonArrivalEvent
	// void OnCommonArrivalEvent(FGameplayTag& NewTag);                                                                         // [0x1d9241c] Event|Public|HasOutParms|BlueprintEvent 
};

/// Class /Script/FortniteUI.AthenaDiscoveredAreaOverlay
/// Size: 0x0140 (0x000380 - 0x0004C0)
class UAthenaDiscoveredAreaOverlay : public UAthenaDiscoverabilityBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1216;

public:
};

/// Class /Script/FortniteUI.AthenaEliminationIndicator
/// Size: 0x0008 (0x000640 - 0x000648)
class UAthenaEliminationIndicator : public UAthenaMarkedActorIndicator
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1608;

public:
};

/// Class /Script/FortniteUI.AthenaEliminationOverlayBase
/// Size: 0x0000 (0x0002C0 - 0x0002C0)
class UAthenaEliminationOverlayBase : public UUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 704;

public:
};

/// Class /Script/FortniteUI.AthenaEventGamesBase
/// Size: 0x0000 (0x000570 - 0x000570)
class UAthenaEventGamesBase : public UFortActivatablePanel
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1392;

public:
};

/// Class /Script/FortniteUI.AthenaGamePhaseWidgetBase
/// Size: 0x0068 (0x000330 - 0x000398)
class UAthenaGamePhaseWidgetBase : public UGamePhaseWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 920;

public:
	CMember(UTextBlock*)                               Text_RemainingTime                                          OFFSET(get<T>, {0x330, 8, 0, 0})
	CMember(UMaterialInterface*)                       StormComingFontMaterial                                     OFFSET(get<T>, {0x338, 8, 0, 0})
	DMember(float)                                     StormComingWarningTime                                      OFFSET(get<float>, {0x340, 4, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.AthenaGamePhaseWidgetBase.OnUpdateGamePhaseIcon
	// void OnUpdateGamePhaseIcon(EAthenaGamePhaseStep GamePhaseStep);                                                          // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaGamePhaseWidgetBase.HandleCountdownUpdate
	// void HandleCountdownUpdate(int32_t TimeRemaining);                                                                       // [0x8fa6f2c] Final|Native|Private 
};

/// Class /Script/FortniteUI.AthenaGenericHUDTimerWidgetBase
/// Size: 0x0040 (0x000328 - 0x000368)
class UAthenaGenericHUDTimerWidgetBase : public UFortHUDElementWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 872;

public:
	CMember(UTextBlock*)                               TimeText                                                    OFFSET(get<T>, {0x338, 8, 0, 0})
};

/// Class /Script/FortniteUI.AthenaGlobalCurrencyWidget
/// Size: 0x0008 (0x0002E8 - 0x0002F0)
class UAthenaGlobalCurrencyWidget : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 752;

public:
	CMember(UCommonNumericTextBlock*)                  CurrencyTotalText                                           OFFSET(get<T>, {0x2E8, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.AthenaGlobalCurrencyWidget.HandleOnItemCountChanged
	// void HandleOnItemCountChanged(UFortItemDefinition* Definition, int32_t Delta);                                           // [0x8fa7390] Final|Native|Protected 
};

/// Class /Script/FortniteUI.AthenaHUDGamePhaseChangingBase
/// Size: 0x01D8 (0x000330 - 0x000508)
class UAthenaHUDGamePhaseChangingBase : public UGamePhaseWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1288;

public:
	SMember(FFortPrioritizedWidgetData)                PrioritizationData                                          OFFSET(getStruct<T>, {0x370, 2, 0, 0})
	CMember(USoundMix*)                                LaunchingSoundMix                                           OFFSET(get<T>, {0x378, 8, 0, 0})
	CMember(TMap<EAthenaGamePhaseStep, UMaterialInterface*>) IconMaterials                                         OFFSET(get<T>, {0x380, 80, 0, 0})
	SMember(FText)                                     PlayersText                                                 OFFSET(getStruct<T>, {0x3D0, 24, 0, 0})
	SMember(FText)                                     DeployingInText                                             OFFSET(getStruct<T>, {0x3E8, 24, 0, 0})
	CMember(EAthenaGamePhaseStep)                      CurrentPhase                                                OFFSET(get<T>, {0x400, 1, 0, 0})
	SMember(FVector2D)                                 MessageTranslationTop                                       OFFSET(getStruct<T>, {0x408, 16, 0, 0})
	SMember(FVector2D)                                 MessageTranslationBottom                                    OFFSET(getStruct<T>, {0x418, 16, 0, 0})
	SMember(FText)                                     BusStateMessageGetReady                                     OFFSET(getStruct<T>, {0x428, 24, 0, 0})
	SMember(FText)                                     BusStateMessageBusLocked                                    OFFSET(getStruct<T>, {0x440, 24, 0, 0})
	SMember(FText)                                     BusStateMessageBusFlying                                    OFFSET(getStruct<T>, {0x458, 24, 0, 0})
	CMember(UCommonVisibilitySwitcher*)                Switcher_AlertType                                          OFFSET(get<T>, {0x478, 8, 0, 0})
	CMember(UCommonVisibilitySwitcher*)                Switcher_BusIconState                                       OFFSET(get<T>, {0x480, 8, 0, 0})
	CMember(UOverlay*)                                 Overlay_BPVisibility                                        OFFSET(get<T>, {0x488, 8, 0, 0})
	CMember(UCommonTextBlock*)                         TimeText                                                    OFFSET(get<T>, {0x490, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Message                                                     OFFSET(get<T>, {0x498, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_BusTimer                                               OFFSET(get<T>, {0x4A0, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_BusLine1                                               OFFSET(get<T>, {0x4A8, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_BusLine2                                               OFFSET(get<T>, {0x4B0, 8, 0, 0})
	CMember(UImage*)                                   Icon                                                        OFFSET(get<T>, {0x4B8, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.AthenaHUDGamePhaseChangingBase.UpdateActiveWidgetIndex
	// void UpdateActiveWidgetIndex(EAthenaGamePhaseStep Index);                                                                // [0x8fa86a4] Final|Native|Private|BlueprintCallable 
	// Function /Script/FortniteUI.AthenaHUDGamePhaseChangingBase.ToggleCompass
	// void ToggleCompass(bool bHide);                                                                                          // [0x1d9241c] Event|Protected|BlueprintCallable|BlueprintEvent|Const 
	// Function /Script/FortniteUI.AthenaHUDGamePhaseChangingBase.PlayIntroAnimation
	// void PlayIntroAnimation(EAthenaGamePhaseStep Step);                                                                      // [0x1d9241c] Event|Protected|BlueprintCallable|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaHUDGamePhaseChangingBase.PlayGamePhaseAlertSound
	// void PlayGamePhaseAlertSound(EAthenaGamePhaseStep Step);                                                                 // [0x1d9241c] Event|Protected|BlueprintCallable|BlueprintEvent|Const 
	// Function /Script/FortniteUI.AthenaHUDGamePhaseChangingBase.PlayCountdownAudio
	// void PlayCountdownAudio(FText& NewTimeText, EAthenaGamePhaseStep Step);                                                  // [0x1d9241c] Event|Protected|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure|Const 
	// Function /Script/FortniteUI.AthenaHUDGamePhaseChangingBase.IsRiftSpawning
	// bool IsRiftSpawning();                                                                                                   // [0x1d9241c] Event|Protected|BlueprintCallable|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaHUDGamePhaseChangingBase.IsGamePhaseStepNotificationWidgetVisible
	// bool IsGamePhaseStepNotificationWidgetVisible(EAthenaGamePhaseStep PhaseStepType);                                       // [0x8fa7be0] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.AthenaHUDGamePhaseChangingBase.GetSpawnOverrideComponent
	// UActorComponent* GetSpawnOverrideComponent();                                                                            // [0x8fa6e3c] Final|Native|Private|BlueprintCallable 
	// Function /Script/FortniteUI.AthenaHUDGamePhaseChangingBase.GetShowRankedProgressCvar
	// bool GetShowRankedProgressCvar();                                                                                        // [0x2b77c50] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.AthenaHUDGamePhaseChangingBase.DoesMinigamePreventUpdatesAtPhase
	// bool DoesMinigamePreventUpdatesAtPhase(char Value);                                                                      // [0x1d9241c] Event|Protected|BlueprintCallable|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaHUDGamePhaseChangingBase.BP_UpdateMessaging
	// void BP_UpdateMessaging(EAthenaGamePhaseStep Step, FText& NewMessage, FText& NewTimeText);                               // [0x8fa6c24] Native|Event|Protected|HasOutParms|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaHUDGamePhaseChangingBase.BP_SetRankedProgress
	// void BP_SetRankedProgress(FString ProgressKey, int32_t RankedTier, int32_t RankedPosition, float RankedPercent);         // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaHUDGamePhaseChangingBase.BP_SetPlaylistName
	// void BP_SetPlaylistName(FText& PlaylistName);                                                                            // [0x1d9241c] Event|Protected|HasOutParms|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaHUDGamePhaseChangingBase.BP_SetIsRanked
	// void BP_SetIsRanked(bool bIsRanked);                                                                                     // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaHUDGamePhaseChangingBase.BP_HandleGamePhaseStepChanged
	// void BP_HandleGamePhaseStepChanged(EAthenaGamePhaseStep Step);                                                           // [0x8fa6ba0] Native|Event|Protected|BlueprintEvent 
};

/// Class /Script/FortniteUI.AthenaHUDPlayerActionAlertBase
/// Size: 0x0028 (0x000328 - 0x000350)
class UAthenaHUDPlayerActionAlertBase : public UFortHUDElementWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 848;

public:
	SMember(FGameplayTag)                              HideStormAlertTag                                           OFFSET(getStruct<T>, {0x328, 4, 0, 0})
	SMember(FGameplayTag)                              PlayerBotTag                                                OFFSET(getStruct<T>, {0x32C, 4, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.AthenaHUDPlayerActionAlertBase.RequestNextAlert
	// void RequestNextAlert();                                                                                                 // [0x1d89a74] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.AthenaHUDPlayerActionAlertBase.BP_ShowAlert
	// void BP_ShowAlert(EAthenaPlayerActionAlert Alert, FText& DetailText, FRankedProgressReplicatedData& RankedProgress);     // [0x1d9241c] Event|Protected|HasOutParms|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaHUDPlayerActionAlertBase.BP_OnAlertsCleared
	// void BP_OnAlertsCleared();                                                                                               // [0x1d9241c] Event|Protected|BlueprintEvent 
};

/// Class /Script/FortniteUI.AthenaIndicatorLayerBase
/// Size: 0x00D0 (0x000328 - 0x0003F8)
class UAthenaIndicatorLayerBase : public UFortHUDElementWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1016;

public:
	CMember(UFortActorCanvas*)                         GeneralIndicators                                           OFFSET(get<T>, {0x328, 8, 0, 0})
	CMember(UFortActorCanvas*)                         NameIndicators                                              OFFSET(get<T>, {0x330, 8, 0, 0})
	CMember(UClass*)                                   PlayerIndicatorClass                                        OFFSET(get<T>, {0x338, 8, 0, 0})
	DMember(int32_t)                                   PlayerIndicatorPoolSize                                     OFFSET(get<int32_t>, {0x340, 4, 0, 0})
	SMember(FUserWidgetPool)                           PlayerIndicatorWidgetPool                                   OFFSET(getStruct<T>, {0x348, 136, 0, 0})
	CMember(UAthenaPlayerViewModel*)                   PlayerVM                                                    OFFSET(get<T>, {0x3D0, 8, 0, 0})
	CMember(USlateVectorArtData*)                      TeamIndicatorMesh                                           OFFSET(get<T>, {0x3D8, 8, 0, 0})
	DMember(bool)                                      bWasTargeting                                               OFFSET(get<bool>, {0x3E0, 1, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.AthenaIndicatorLayerBase.OnTargetingChanged
	// void OnTargetingChanged(bool bTargeting);                                                                                // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaIndicatorLayerBase.OnTargetChangedNative
	// void OnTargetChangedNative(bool bTargeting);                                                                             // [0x262adc0] Final|Native|Protected 
	// Function /Script/FortniteUI.AthenaIndicatorLayerBase.HandleIndicatorModeChanged
	// void HandleIndicatorModeChanged(bool bIndicatorsEnabled);                                                                // [0x8f74414] Final|Native|Protected 
};

/// Class /Script/FortniteUI.AthenaInventoryEquipButtonBase
/// Size: 0x0030 (0x0014E0 - 0x001510)
class UAthenaInventoryEquipButtonBase : public UCommonButtonLegacy
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 5392;

public:
	CMember(UFortMultiSizeItemCard*)                   ItemWidget                                                  OFFSET(get<T>, {0x14E0, 8, 0, 0})
	CMember(UWidget*)                                  EmptyImage                                                  OFFSET(get<T>, {0x14E8, 8, 0, 0})
	DMember(int32_t)                                   SlotIndex                                                   OFFSET(get<int32_t>, {0x14F0, 4, 0, 0})
	CMember(TArray<FVector2D>)                         ButtonSizeBySlotUsage                                       OFFSET(get<T>, {0x14F8, 16, 0, 0})
};

/// Class /Script/FortniteUI.AthenaInventoryItemTileButton
/// Size: 0x0020 (0x0014E0 - 0x001500)
class UAthenaInventoryItemTileButton : public UCommonButtonLegacy
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 5376;

public:
	CMember(UAthenaItemIcon*)                          ItemIcon                                                    OFFSET(get<T>, {0x14E8, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.AthenaInventoryItemTileButton.OnItemChanged
	// void OnItemChanged(UFortItem* Item);                                                                                     // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaInventoryItemTileButton.GetItemToRepresent
	// UFortItem* GetItemToRepresent();                                                                                         // [0x8fa6e14] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/FortniteUI.AthenaItemSelectorScreenBase
/// Size: 0x0310 (0x000720 - 0x000A30)
class UAthenaItemSelectorScreenBase : public UFortItemPreviewScreen
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 2608;

public:
	DMember(float)                                     PendingItemPreviewDelay                                     OFFSET(get<float>, {0x72C, 4, 0, 0})
	CMember(UClass*)                                   TabButtonType                                               OFFSET(get<T>, {0x730, 8, 0, 0})
	CMember(TMap<EAthenaCustomizationCategory, FFortTabButtonLabelInfo>) ItemCategoryButtonLabelInfo               OFFSET(get<T>, {0x738, 80, 0, 0})
	SMember(FFortTabButtonLabelInfo)                   VariantButtonLabelInfo                                      OFFSET(getStruct<T>, {0x790, 240, 0, 0})
	CMember(UCommonButtonBase*)                        Button_ConfirmSelection                                     OFFSET(get<T>, {0x880, 8, 0, 0})
	CMember(UCommonButtonBase*)                        Button_EditStyle                                            OFFSET(get<T>, {0x888, 8, 0, 0})
	CMember(UCommonButtonBase*)                        Button_ConfirmStyle                                         OFFSET(get<T>, {0x890, 8, 0, 0})
	CMember(UCommonButtonBase*)                        Button_CommitArchiveChange                                  OFFSET(get<T>, {0x898, 8, 0, 0})
	CMember(UCommonButtonBase*)                        Button_ApplyToAll                                           OFFSET(get<T>, {0x8A0, 8, 0, 0})
	CMember(UCommonButtonBase*)                        Button_CloseSortAndFilterBlade                              OFFSET(get<T>, {0x8A8, 8, 0, 0})
	CMember(UCommonButtonBase*)                        Button_Back                                                 OFFSET(get<T>, {0x8B0, 8, 0, 0})
	CMember(UCommonButtonBase*)                        Button_Favorite                                             OFFSET(get<T>, {0x8B8, 8, 0, 0})
	CMember(UCommonButtonBase*)                        Button_Unfavorite                                           OFFSET(get<T>, {0x8C0, 8, 0, 0})
	CMember(UWidget*)                                  Widget_ArchiveModeButtonContainer                           OFFSET(get<T>, {0x8C8, 8, 0, 0})
	CMember(UFortCTAButton*)                           Button_ArchiveMode                                          OFFSET(get<T>, {0x8D0, 8, 0, 0})
	CMember(UFortCTAButton*)                           Button_UnarchiveMode                                        OFFSET(get<T>, {0x8D8, 8, 0, 0})
	CMember(UFortCTAButton*)                           Button_ViewInBattlePass                                     OFFSET(get<T>, {0x8E0, 8, 0, 0})
	CMember(UWidget*)                                  Widget_ShowArchivedItemsButtonContainer                     OFFSET(get<T>, {0x8E8, 8, 0, 0})
	CMember(UCommonButtonBase*)                        Button_ShowArchivedItems                                    OFFSET(get<T>, {0x8F0, 8, 0, 0})
	CMember(UCommonButtonBase*)                        Button_HideArchivedItems                                    OFFSET(get<T>, {0x8F8, 8, 0, 0})
	CMember(UCommonButtonBase*)                        Button_CloseTouch                                           OFFSET(get<T>, {0x900, 8, 0, 0})
	CMember(UDynamicEntryBox*)                         EntryBox_CustomBottomBarActions                             OFFSET(get<T>, {0x908, 8, 0, 0})
	CMember(UAthenaCustomizationPicker*)               Picker_ItemSelector                                         OFFSET(get<T>, {0x910, 8, 0, 0})
	CMember(UAthenaCustomizationPickerSortAndFilterBlade*) Blade_SortAndFilter                                     OFFSET(get<T>, {0x918, 8, 0, 0})
	CMember(UVerticalBox*)                             ItemInfo                                                    OFFSET(get<T>, {0x920, 8, 0, 0})
	CMember(UFortItemBaseWidget*)                      Item_HeaderInfo                                             OFFSET(get<T>, {0x928, 8, 0, 0})
	DMember(bool)                                      bVariantZoomUsesSnap                                        OFFSET(get<bool>, {0x930, 1, 0, 0})
	CMember(UFortItem*)                                CurrentPreviewItem                                          OFFSET(get<T>, {0x938, 8, 0, 0})
	CMember(UAthenaCosmeticItemDefinition*)            CurrentPreviewItemDef                                       OFFSET(get<T>, {0x940, 8, 0, 0})
	CMember(TArray<FMcpVariantChannelInfo>)            CurrentPreviewVariantChannels                               OFFSET(get<T>, {0x948, 16, 0, 0})
	CMember(TArray<FMcpVariantChannelInfo>)            CachedVariantChannels                                       OFFSET(get<T>, {0x958, 16, 0, 0})
	CMember(ELockerScreenState)                        LockerState                                                 OFFSET(get<T>, {0x969, 1, 0, 0})
	CMember(UFortVariantPicker*)                       Picker_VariantSelector                                      OFFSET(get<T>, {0x970, 8, 0, 0})
	CMember(UAthenaCosmeticUnlockingInfo*)             UnlockingInfo                                               OFFSET(get<T>, {0x978, 8, 0, 0})
	CMember(EAthenaCustomizationCategory)              CustomizeCategory                                           OFFSET(get<T>, {0x9B1, 1, 0, 0})
	CMember(TWeakObjectPtr<UClass*>)                   LockerConfirmationModalClass                                OFFSET(get<T>, {0x9B8, 32, 0, 0})
	SMember(FName)                                     ArchiveMaterialParameterName                                OFFSET(getStruct<T>, {0x9D8, 4, 0, 0})
	DMember(float)                                     ArchiveMaterialParameterEquippingValue                      OFFSET(get<float>, {0x9DC, 4, 0, 0})
	DMember(float)                                     ArchiveMaterialParameterArchivingValue                      OFFSET(get<float>, {0x9E0, 4, 0, 0})
	DMember(int32_t)                                   SubslotIndex                                                OFFSET(get<int32_t>, {0xA20, 4, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.AthenaItemSelectorScreenBase.SaveAndExit
	// void SaveAndExit(bool bApplyToAllSlots);                                                                                 // [0x8fa8264] Final|Native|Protected 
	// Function /Script/FortniteUI.AthenaItemSelectorScreenBase.OnUpdateLockerArchivingCleanupTooltipText
	// void OnUpdateLockerArchivingCleanupTooltipText(FText& Text);                                                             // [0x1d9241c] Event|Protected|HasOutParms|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaItemSelectorScreenBase.OnUpdateExclusiveItemCallout
	// void OnUpdateExclusiveItemCallout(bool bShouldShow, FText& CalloutText);                                                 // [0x1d9241c] Event|Public|HasOutParms|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaItemSelectorScreenBase.OnUpdateArchiveModeTooltipText
	// void OnUpdateArchiveModeTooltipText(FText& Text);                                                                        // [0x1d9241c] Event|Protected|HasOutParms|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaItemSelectorScreenBase.OnUpdateArchivedItemsTooltipText
	// void OnUpdateArchivedItemsTooltipText(FText& Text);                                                                      // [0x1d9241c] Event|Protected|HasOutParms|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaItemSelectorScreenBase.OnTabSelectionChanged
	// void OnTabSelectionChanged(bool bShowingVariants);                                                                       // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaItemSelectorScreenBase.OnShowLockerArchivingCleanupTooltip
	// void OnShowLockerArchivingCleanupTooltip(bool bShowTooltip);                                                             // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaItemSelectorScreenBase.OnShowArchiveModeTooltip
	// void OnShowArchiveModeTooltip(bool bShowTooltip);                                                                        // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaItemSelectorScreenBase.OnShowArchivedItemsTooltip
	// void OnShowArchivedItemsTooltip(bool bShowTooltip);                                                                      // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaItemSelectorScreenBase.OnLockerScreenStateChanged
	// void OnLockerScreenStateChanged();                                                                                       // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaItemSelectorScreenBase.OnItemSelectionCommited
	// void OnItemSelectionCommited(UFortItem* SelectedItem);                                                                   // [0x8fa7ecc] Final|Native|Protected 
	// Function /Script/FortniteUI.AthenaItemSelectorScreenBase.OnItemSelectedChanged
	// void OnItemSelectedChanged(UFortItem* SelectedItem);                                                                     // [0x8fa7e4c] Final|Native|Protected 
	// Function /Script/FortniteUI.AthenaItemSelectorScreenBase.OnHideItemInfoHeader
	// void OnHideItemInfoHeader(bool bShouldHide);                                                                             // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaItemSelectorScreenBase.OnFinishedItemSetup
	// void OnFinishedItemSetup();                                                                                              // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaItemSelectorScreenBase.OnFinishedItemSave
	// void OnFinishedItemSave();                                                                                               // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaItemSelectorScreenBase.OnCurrentItemChanged
	// void OnCurrentItemChanged(UFortItem* SelectedItem);                                                                      // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaItemSelectorScreenBase.IsItemOwned
	// bool IsItemOwned(UFortItem* Item);                                                                                       // [0x8fa7c6c] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.AthenaItemSelectorScreenBase.IsAlternateActionHovered
	// void IsAlternateActionHovered(bool bAlternateActionHovered);                                                             // [0x8fa7b48] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.AthenaItemSelectorScreenBase.HandleShowArchivedItemsTooltipDismissed
	// void HandleShowArchivedItemsTooltipDismissed();                                                                          // [0x8fa79f4] Final|Native|Private|BlueprintCallable|Const 
	// Function /Script/FortniteUI.AthenaItemSelectorScreenBase.HandleSearchTextChanged
	// void HandleSearchTextChanged(FText& NewText);                                                                            // [0x8fa7958] Final|Native|Protected|HasOutParms|BlueprintCallable 
	// Function /Script/FortniteUI.AthenaItemSelectorScreenBase.HandleScreenAnalytics
	// void HandleScreenAnalytics(bool bItemChanged);                                                                           // [0x8fa78dc] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.AthenaItemSelectorScreenBase.HandlePickerMarkedItemsChanged
	// void HandlePickerMarkedItemsChanged(int32_t MarkedCount);                                                                // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaItemSelectorScreenBase.HandleLockerArchivingCleanupTooltipDismissed
	// void HandleLockerArchivingCleanupTooltipDismissed();                                                                     // [0x8fa70f0] Final|Native|Private|BlueprintCallable|Const 
	// Function /Script/FortniteUI.AthenaItemSelectorScreenBase.HandleCommitArchiveChangeClicked
	// void HandleCommitArchiveChangeClicked();                                                                                 // [0x8fa6f18] Final|Native|Protected 
	// Function /Script/FortniteUI.AthenaItemSelectorScreenBase.HandleArchiveModeTooltipDismissed
	// void HandleArchiveModeTooltipDismissed();                                                                                // [0x8fa6ea4] Final|Native|Private|BlueprintCallable|Const 
	// Function /Script/FortniteUI.AthenaItemSelectorScreenBase.HandleAboutToClose
	// void HandleAboutToClose();                                                                                               // [0x8fa6e78] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.AthenaItemSelectorScreenBase.ExitEditStyle
	// void ExitEditStyle();                                                                                                    // [0x8fa6dd8] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.AthenaItemSelectorScreenBase.EnterEditStyle
	// void EnterEditStyle();                                                                                                   // [0x8fa6dc4] Final|Native|Protected 
	// Function /Script/FortniteUI.AthenaItemSelectorScreenBase.BP_HandleBack
	// void BP_HandleBack();                                                                                                    // [0x1d9241c] Event|Protected|BlueprintEvent 
};

/// Class /Script/FortniteUI.AthenaLeaderboardScreenBase
/// Size: 0x0238 (0x000570 - 0x0007A8)
class UAthenaLeaderboardScreenBase : public UFortActivatablePanel
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1960;

public:
	CMember(UFortTabListWidgetBase_Legacy*)            LeaderboardTabList                                          OFFSET(get<T>, {0x570, 8, 0, 0})
	CMember(UCommonRotator*)                           MatchRotator                                                OFFSET(get<T>, {0x578, 8, 0, 0})
	CMember(UCommonRotator*)                           LeaderboardTypeRotator                                      OFFSET(get<T>, {0x580, 8, 0, 0})
	CMember(UCommonTextBlock*)                         RefreshTimeText                                             OFFSET(get<T>, {0x588, 8, 0, 0})
	CMember(UCommonTextBlock*)                         NoDataMessageText                                           OFFSET(get<T>, {0x590, 8, 0, 0})
	CMember(UCommonBorder*)                            BorderLocalUserFocus                                        OFFSET(get<T>, {0x598, 8, 0, 0})
	CMember(UWidget*)                                  Widget_ProfileStats                                         OFFSET(get<T>, {0x5A0, 8, 0, 0})
	CMember(UFortProfileStatsRow*)                     AthenaStats_Wins                                            OFFSET(get<T>, {0x5A8, 8, 0, 0})
	CMember(UFortProfileStatsRow*)                     AthenaStats_SecondTierFinishes                              OFFSET(get<T>, {0x5B0, 8, 0, 0})
	CMember(UFortProfileStatsRow*)                     AthenaStats_ThirdTierFinishes                               OFFSET(get<T>, {0x5B8, 8, 0, 0})
	CMember(UFortProfileStatsRow*)                     AthenaStats_Eliminations                                    OFFSET(get<T>, {0x5C0, 8, 0, 0})
	CMember(UFortProfileStatsRow*)                     AthenaStats_MatchesPlayer                                   OFFSET(get<T>, {0x5C8, 8, 0, 0})
	SMember(FName)                                     LTMPlaylistDefaultName                                      OFFSET(getStruct<T>, {0x5D0, 4, 0, 0})
	CMember(TMap<FName, UFortProfileStatsRow*>)        ActiveProfileRows                                           OFFSET(get<T>, {0x5D8, 80, 0, 0})
	CMember(UDataTable*)                               PlaylistsData                                               OFFSET(get<T>, {0x6B8, 8, 0, 0})
	CMember(TMap<FName, UCommonButtonBase*>)           ActiveTabButtons                                            OFFSET(get<T>, {0x6C0, 80, 0, 0})
	CMember(TArray<UFortLeaderboardRowProxyInstance*>) RowProxies                                                  OFFSET(get<T>, {0x710, 16, 0, 0})
	CMember(UFortLeaderboardRowProxyInstance*)         LocalUserRowProxy                                           OFFSET(get<T>, {0x720, 8, 0, 0})
	SMember(FLeaderboardFilter)                        CurrentLeaderboardFilter                                    OFFSET(getStruct<T>, {0x728, 24, 0, 0})
	SMember(FDataTableRowHandle)                       BackAction                                                  OFFSET(getStruct<T>, {0x790, 16, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.AthenaLeaderboardScreenBase.OnUpdateTabButtonText
	// void OnUpdateTabButtonText(UCommonButtonBase* Button, FAthenaPlaylistLeaderboardData& PlaylistTabData);                  // [0x1d9241c] Event|Protected|HasOutParms|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaLeaderboardScreenBase.OnUpdateListHeader
	// void OnUpdateListHeader(FAthenaPlaylistLeaderboardData& PlaylistTabData);                                                // [0x1d9241c] Event|Protected|HasOutParms|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaLeaderboardScreenBase.OnUpdateLeaderboardListUI
	// void OnUpdateLeaderboardListUI(bool bWasSuccessful, UFortLeaderboardRowProxyInstance* LocalUserRow, FText& QueryErrorStr); // [0x1d9241c] Event|Protected|HasOutParms|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaLeaderboardScreenBase.OnQueryStarted
	// void OnQueryStarted();                                                                                                   // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaLeaderboardScreenBase.OnQueryFinished
	// void OnQueryFinished();                                                                                                  // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaLeaderboardScreenBase.OnPlaylistChanged
	// void OnPlaylistChanged(FName NewPlaylistName, ECommonInputType NewInputType);                                            // [0x8fa8120] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.AthenaLeaderboardScreenBase.OnMatchTypeChanged
	// void OnMatchTypeChanged(int32_t MatchTypeIndex);                                                                         // [0x8fa8044] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.AthenaLeaderboardScreenBase.OnFriendsFilterChanged
	// void OnFriendsFilterChanged(int32_t FriendsFilterIndex);                                                                 // [0x8fa7dc8] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.AthenaLeaderboardScreenBase.OnActiveLeaderboardTabChanged
	// void OnActiveLeaderboardTabChanged(int32_t ActiveWidgetIndex);                                                           // [0x8fa7d34] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.AthenaLeaderboardScreenBase.CanShowFriendsOnlyLeaderboard
	// bool CanShowFriendsOnlyLeaderboard();                                                                                    // [0x2c6cedc] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/FortniteUI.AthenaLevelBarBase
/// Size: 0x0000 (0x0003D0 - 0x0003D0)
class UAthenaLevelBarBase : public UFortActorIndicatorWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 976;

public:
};

/// Class /Script/FortniteUI.AthenaLoadoutEntryWidget
/// Size: 0x0010 (0x0002E8 - 0x0002F8)
class UAthenaLoadoutEntryWidget : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 760;

public:
	CMember(UFortAthenaInventoryLoadout*)              SelectedLoadout                                             OFFSET(get<T>, {0x2E8, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.AthenaLoadoutEntryWidget.SetLoadout
	// void SetLoadout(UFortAthenaInventoryLoadout* NewLoadout);                                                                // [0x6cb5f9c] Native|Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaLoadoutEntryWidget.OnLoadoutPicked
	// void OnLoadoutPicked();                                                                                                  // [0x8fa7fd0] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/FortniteUI.AthenaLoadoutWidget
/// Size: 0x0020 (0x000570 - 0x000590)
class UAthenaLoadoutWidget : public UFortActivatablePanel
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1424;

public:
	CMember(TArray<UAthenaLoadoutEntryWidget*>)        EntryWidgets                                                OFFSET(get<T>, {0x570, 16, 0, 0})
	CMember(UClass*)                                   EntryWidgetClass                                            OFFSET(get<T>, {0x580, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.AthenaLoadoutWidget.OnLoadoutChosen
	// void OnLoadoutChosen(UFortAthenaInventoryLoadout* SelectedLoadout);                                                      // [0x8fa7f4c] Native|Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaLoadoutWidget.AddEntryWidget
	// void AddEntryWidget(UAthenaLoadoutEntryWidget* NewWidget);                                                               // [0x1d9241c] Event|Protected|BlueprintEvent 
};

/// Class /Script/FortniteUI.FortLobbyWidget
/// Size: 0x0088 (0x000570 - 0x0005F8)
class UFortLobbyWidget : public UFortActivatablePanel
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1528;

public:
	CMember(AAthenaSquadPedestalGroup*)                SquadPedestalGroup                                          OFFSET(get<T>, {0x580, 8, 0, 0})
	CMember(TArray<AFortTeamMemberPedestal*>)          VisualOrderedPedestals                                      OFFSET(get<T>, {0x588, 16, 0, 0})
	CMember(UFortRadialPicker*)                        Radial_EmotePicker                                          OFFSET(get<T>, {0x5D8, 8, 0, 0})
	CMember(UFortLobbyPlayerPanel*)                    PlayerPanel_PlayerOptions                                   OFFSET(get<T>, {0x5E0, 8, 0, 0})
	SMember(FDataTableRowHandle)                       EmoteInputAction                                            OFFSET(getStruct<T>, {0x5E8, 16, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortLobbyWidget.OnPlayerPanelHidden
	// void OnPlayerPanelHidden();                                                                                              // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.FortLobbyWidget.OnPlayerClicked
	// void OnPlayerClicked();                                                                                                  // [0x1d9241c] Event|Public|BlueprintCallable|BlueprintEvent 
	// Function /Script/FortniteUI.FortLobbyWidget.IsAnyFauxModelOpen
	// bool IsAnyFauxModelOpen();                                                                                               // [0x940226c] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortLobbyWidget.HandleEmoteClicked
	// void HandleEmoteClicked(bool& bPassThrough);                                                                             // [0x940180c] Native|Protected|HasOutParms 
	// Function /Script/FortniteUI.FortLobbyWidget.DynamicHandleLoadingScreenVisibilityChanged
	// void DynamicHandleLoadingScreenVisibilityChanged(bool IsVisible);                                                        // [0x30780f0] Final|Native|Protected 
};

/// Class /Script/FortniteUI.AthenaLobbyBase
/// Size: 0x02C8 (0x0005F8 - 0x0008C0)
class UAthenaLobbyBase : public UFortLobbyWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 2240;

public:
	CMember(UContentWidget*)                           Content_MatchmakingWidget                                   OFFSET(get<T>, {0x740, 8, 0, 0})
	CMember(UEmergencyNoticeBase*)                     Notice_Emergency                                            OFFSET(get<T>, {0x748, 8, 0, 0})
	CMember(UContentWidget*)                           Content_MotdTeaserWidget                                    OFFSET(get<T>, {0x750, 8, 0, 0})
	CMember(UCommonBorder*)                            LobbyDetails_Default                                        OFFSET(get<T>, {0x758, 8, 0, 0})
	CMember(UFortTournamentLobbyPanel*)                LobbyDetails_Tournament                                     OFFSET(get<T>, {0x760, 8, 0, 0})
	CMember(UFortDivisionLobbyPanel*)                  LobbyDetails_ShowdownDivision                               OFFSET(get<T>, {0x768, 8, 0, 0})
	CMember(UCommonWidgetSwitcherLegacy*)              Switcher_LobbyDetailsMode                                   OFFSET(get<T>, {0x770, 8, 0, 0})
	CMember(UCommonButtonBase*)                        Button_GenericLink                                          OFFSET(get<T>, {0x778, 8, 0, 0})
	CMember(UCommonButtonBase*)                        Button_Quests                                               OFFSET(get<T>, {0x780, 8, 0, 0})
	CMember(UCommonButtonBase*)                        Button_ShadowPlayHighlights                                 OFFSET(get<T>, {0x788, 8, 0, 0})
	CMember(UVerticalBox*)                             VerticalBox_LobbyDetails                                    OFFSET(get<T>, {0x790, 8, 0, 0})
	CMember(UVerticalBox*)                             VerticalBox_LobbyDetails_ExtensionHolder                    OFFSET(get<T>, {0x798, 8, 0, 0})
	CMember(UOverlay*)                                 Overlay_DynamicExtensions                                   OFFSET(get<T>, {0x7A0, 8, 0, 0})
	CMember(UOverlay*)                                 Overlay_Discover                                            OFFSET(get<T>, {0x7A8, 8, 0, 0})
	CMember(TWeakObjectPtr<UClass*>)                   NewEmotePicker                                              OFFSET(get<T>, {0x7B0, 32, 0, 0})
	CMember(UCatalogMessaging*)                        CatalogMessaging                                            OFFSET(get<T>, {0x7D0, 8, 0, 0})
	SMember(FDataTableRowHandle)                       SquadFormationInputAction                                   OFFSET(getStruct<T>, {0x7D8, 16, 0, 0})
	CMember(UClass*)                                   SquadFormationClass                                         OFFSET(get<T>, {0x7E8, 8, 0, 0})
	CMember(UClass*)                                   MotdTeaserWidgetClass                                       OFFSET(get<T>, {0x7F0, 8, 0, 0})
	CMember(UClass*)                                   DefaultMatchmakingWidgetClass                               OFFSET(get<T>, {0x7F8, 8, 0, 0})
	CMember(UFortAthenaMatchmakingWidgetLegacy*)       MatchmakingWidget                                           OFFSET(get<T>, {0x800, 8, 0, 0})
	CMember(UFortGlobalSeasonResourceWidget*)          SeasonalResources                                           OFFSET(get<T>, {0x808, 8, 0, 0})
	CMember(UFortHabaneroLobbyWidget*)                 HabaneroDisplayWidget                                       OFFSET(get<T>, {0x830, 8, 0, 0})
	CMember(UCommonActivatableWidget*)                 Discover                                                    OFFSET(get<T>, {0x838, 8, 0, 0})
	DMember(bool)                                      bEnableNavigationRight                                      OFFSET(get<bool>, {0x840, 1, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.AthenaLobbyBase.UpdateGenericLinkText
	// void UpdateGenericLinkText(FText& NewText);                                                                              // [0x1d9241c] Event|Protected|HasOutParms|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaLobbyBase.ShouldShowHomeBarOnActivated
	// bool ShouldShowHomeBarOnActivated();                                                                                     // [0x300efec] Final|Native|Private|BlueprintCallable 
	// Function /Script/FortniteUI.AthenaLobbyBase.SetHomeBarShownOnActivated
	// void SetHomeBarShownOnActivated();                                                                                       // [0x37503dc] Final|Native|Private|BlueprintCallable 
	// Function /Script/FortniteUI.AthenaLobbyBase.OnRankedProgressDisplayUpdated
	// void OnRankedProgressDisplayUpdated(bool bPlayingRanked);                                                                // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaLobbyBase.OnQuestsButtonVisibilityChanged
	// void OnQuestsButtonVisibilityChanged(ESlateVisibility NewVisibility);                                                    // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaLobbyBase.OnPlaylistChanged
	// void OnPlaylistChanged(EFortLobbyType LobbyType, UFortPlaylistAthena* PlaylistData);                                     // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaLobbyBase.OnNavigateUpOnPedestalRight
	// void OnNavigateUpOnPedestalRight(AFortPlayerController* FortPC);                                                         // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaLobbyBase.OnNavigateRightFromPedestal
	// void OnNavigateRightFromPedestal(AFortPlayerController* FortPC);                                                         // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaLobbyBase.OnNavigateDownOnPedestalRight
	// bool OnNavigateDownOnPedestalRight(AFortPlayerController* FortPC);                                                       // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaLobbyBase.OnMatchmakingWidgetChanged
	// void OnMatchmakingWidgetChanged();                                                                                       // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaLobbyBase.OnLobbyChanged
	// void OnLobbyChanged(EFortLobbyType LobbyType);                                                                           // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaLobbyBase.NavigateToDiscover
	// bool NavigateToDiscover();                                                                                               // [0x33aac1c] Final|Native|Private|BlueprintCallable 
	// Function /Script/FortniteUI.AthenaLobbyBase.HasUnseenQuests
	// bool HasUnseenQuests();                                                                                                  // [0x8fa7b30] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.AthenaLobbyBase.HandleUnseenQuestsChanged
	// void HandleUnseenQuestsChanged(bool bHasUnseenQuests);                                                                   // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaLobbyBase.HandleToggleFullscreenMap
	// void HandleToggleFullscreenMap(bool bVisible);                                                                           // [0x8fa7a30] Final|Native|Private 
	// Function /Script/FortniteUI.AthenaLobbyBase.HandlePickerOpenRequest
	// void HandlePickerOpenRequest(EFortPickerMode Mode, int32_t InitialOption, bool bIgnoreFirstAccept);                      // [0x8fa77cc] Final|Native|Private 
	// Function /Script/FortniteUI.AthenaLobbyBase.HandleHideLobbySeasonResources
	// void HandleHideLobbySeasonResources(bool bShouldHide);                                                                   // [0x8fa7070] Final|Native|Private 
	// Function /Script/FortniteUI.AthenaLobbyBase.HandleActiveWidgetChanged
	// void HandleActiveWidgetChanged(UWidget* NewActiveWidget, int32_t WidgetIndex);                                           // [0x33ed9d0] Final|Native|Private 
	// Function /Script/FortniteUI.AthenaLobbyBase.GetSurvivorTierWidgetAllowed
	// bool GetSurvivorTierWidgetAllowed();                                                                                     // [0x3471ae8] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.AthenaLobbyBase.GetMotdTeaserClass
	// TWeakObjectPtr<UClass*> GetMotdTeaserClass();                                                                            // [0x1cd9c28] Final|Native|Private|BlueprintCallable 
	// Function /Script/FortniteUI.AthenaLobbyBase.GetIsRightSideFocused
	// bool GetIsRightSideFocused(AFortPlayerController* FortPC);                                                               // [0x1d9241c] Event|Protected|BlueprintCallable|BlueprintEvent|BlueprintPure|Const 
	// Function /Script/FortniteUI.AthenaLobbyBase.DisplayStoreUpdated
	// void DisplayStoreUpdated(UStoreToastRequest* StoreUpdatedRequest);                                                       // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaLobbyBase.DisplayGlyphQuestUpdated
	// void DisplayGlyphQuestUpdated(int32_t NewGlyphs);                                                                        // [0x1d9241c] Event|Protected|BlueprintEvent 
};

/// Class /Script/FortniteUI.AthenaLockerItemInfo
/// Size: 0x0020 (0x0002E8 - 0x000308)
class UAthenaLockerItemInfo : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 776;

public:
	CMember(UCommonTextBlock*)                         Text_ItemType                                               OFFSET(get<T>, {0x2E8, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_ItemRarity                                             OFFSET(get<T>, {0x2F0, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_ItemName                                               OFFSET(get<T>, {0x2F8, 8, 0, 0})
	CMember(UCommonRichTextBlock*)                     RichText_Description                                        OFFSET(get<T>, {0x300, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.AthenaLockerItemInfo.SetItemDefinition
	// void SetItemDefinition(UFortItemDefinition* ItemDefinition, FText ItemDefinitionTitleOverride);                          // [0x8fa82e4] Final|RequiredAPI|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.AthenaLockerItemInfo.OnUpdateAccessRestrictionWarning
	// void OnUpdateAccessRestrictionWarning(bool bShouldShow, FText& WarningText, EAthenaLockerInfoRestrictionWarning WarningType); // [0x1d9241c] Event|Protected|HasOutParms|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaLockerItemInfo.OnNoItemSet
	// void OnNoItemSet();                                                                                                      // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaLockerItemInfo.OnItemDefinitionSet
	// void OnItemDefinitionSet(UFortItemDefinition* ItemDefinition);                                                           // [0x1d9241c] Event|Protected|BlueprintEvent 
};

/// Class /Script/FortniteUI.AthenaLootStoreScreenBase
/// Size: 0x0000 (0x000570 - 0x000570)
class UAthenaLootStoreScreenBase : public UFortActivatablePanel
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1392;

public:
};

/// Class /Script/FortniteUI.AthenaMapLayer
/// Size: 0x0028 (0x000178 - 0x0001A0)
class UAthenaMapLayer : public UWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 416;

public:
	CMember(ULocalPlayer*)                             LocalPlayer                                                 OFFSET(get<T>, {0x190, 8, 0, 0})
	CMember(UWidget*)                                  QuestContent                                                OFFSET(get<T>, {0x198, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.AthenaMapLayer.SetLocalPlayer
	// void SetLocalPlayer(ULocalPlayer* LocalPlayer);                                                                          // [0x8fa859c] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.AthenaMapLayer.FlashPlayerIcon
	// void FlashPlayerIcon();                                                                                                  // [0x8fa6dec] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.AthenaMapLayer.ClearTouches
	// void ClearTouches();                                                                                                     // [0x8fa6d64] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/FortniteUI.AthenaMapLayerContainer
/// Size: 0x0040 (0x000538 - 0x000578)
class UAthenaMapLayerContainer : public UCommonActivatablePanelLegacy
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1400;

public:
	SMember(FVector2D)                                 NormalizedMapWidgetPosition                                 OFFSET(getStruct<T>, {0x538, 16, 0, 0})
	CMember(UAthenaMapLayer*)                          AthenaMapLayer                                              OFFSET(get<T>, {0x548, 8, 0, 0})
	CMember(UAthenaFullScreenMapBrowsingControlsWidget*) MapBrowsingControlsPanel                                  OFFSET(get<T>, {0x550, 8, 0, 0})
	CMember(UAthenaInGameMapIconsOverlay*)             AthenaMapIconsOverlay_Main                                  OFFSET(get<T>, {0x558, 8, 0, 0})
	CMember(UAthenaMapChallengeListView*)              ListView_NonLocationIconsBelowMap                           OFFSET(get<T>, {0x560, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_CreativeTeleportCountdown                              OFFSET(get<T>, {0x568, 8, 0, 0})
	DMember(bool)                                      bConsumePointerOnTouchInteraction                           OFFSET(get<bool>, {0x570, 1, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.AthenaMapLayerContainer.OnTeleportToMarkerTimeChanged
	// void OnTeleportToMarkerTimeChanged(float TimeLeftBeforeTeleport);                                                        // [0x8fa81e4] Final|Native|Protected 
	// Function /Script/FortniteUI.AthenaMapLayerContainer.HandleNewContextualObjectives
	// void HandleNewContextualObjectives(TArray<UFortQuestItem*>& ContextualQuests);                                           // [0x8fa7274] Final|Native|Protected|HasOutParms 
};

/// Class /Script/FortniteUI.AthenaMapScreenContainer
/// Size: 0x0338 (0x000400 - 0x000738)
class UAthenaMapScreenContainer : public UCommonActivatableWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1848;

public:
	SMember(FGameplayTagContainer)                     HideWithMapTags                                             OFFSET(getStruct<T>, {0x548, 32, 0, 0})
	CMember(TArray<TWeakObjectPtr>)                    DefaultTabs                                                 OFFSET(get<T>, {0x568, 16, 0, 0})
	CMember(TArray<FString>)                           DisabledTabs                                                OFFSET(get<T>, {0x578, 16, 0, 0})
	DMember(bool)                                      bHideTabs                                                   OFFSET(get<bool>, {0x588, 1, 0, 0})
	SMember(FDataTableRowHandle)                       BackInputAction                                             OFFSET(getStruct<T>, {0x590, 16, 0, 0})
	SMember(FDataTableRowHandle)                       NextTabInputAction                                          OFFSET(getStruct<T>, {0x5A0, 16, 0, 0})
	SMember(FDataTableRowHandle)                       PreviousTabInputAction                                      OFFSET(getStruct<T>, {0x5B0, 16, 0, 0})
	CMember(UCommonVisibilitySwitcher*)                VisibilitySwitcher_Content                                  OFFSET(get<T>, {0x5C0, 8, 0, 0})
	CMember(UCommonButtonBase*)                        Button_TouchClose                                           OFFSET(get<T>, {0x5C8, 8, 0, 0})
	CMember(UPanelWidget*)                             Panel_PlayerProfile                                         OFFSET(get<T>, {0x5D0, 8, 0, 0})
	CMember(UFortSocialAvatarIcon*)                    SocialAvatarIcon                                            OFFSET(get<T>, {0x5D8, 8, 0, 0})
	CMember(UFortAutoRunNotificationWidget*)           Widget_AutoRunNotification                                  OFFSET(get<T>, {0x5E0, 8, 0, 0})
	CMember(UPanelWidget*)                             Panel_TabButtonsContainer                                   OFFSET(get<T>, {0x5E8, 8, 0, 0})
	CMember(UClass*)                                   TabButtonClass                                              OFFSET(get<T>, {0x5F0, 8, 0, 0})
	CMember(UInputComponent*)                          MapPanelInputComp                                           OFFSET(get<T>, {0x5F8, 8, 0, 0})
	CMember(UCommonButtonGroupBase*)                   VisibleTabButtonGroup                                       OFFSET(get<T>, {0x600, 8, 0, 0})
	CMember(TMap<FName, UCommonButtonBase*>)           AllTabIDsToTabButtons                                       OFFSET(get<T>, {0x608, 80, 0, 0})
	CMember(TMap<FName, UCommonButtonBase*>)           VisibleTabIDsToTabButtons                                   OFFSET(get<T>, {0x658, 80, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.AthenaMapScreenContainer.OnDamageReceived
	// void OnDamageReceived();                                                                                                 // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaMapScreenContainer.IsQuestsTabActive
	// bool IsQuestsTabActive();                                                                                                // [0x8fa7d10] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.AthenaMapScreenContainer.BP_OnShowTabsSet
	// void BP_OnShowTabsSet(bool bShowTabs);                                                                                   // [0x1d9241c] Event|Protected|BlueprintEvent 
};

/// Class /Script/FortniteUI.AthenaMapScreenContainerTabButton
/// Size: 0x0020 (0x0014E0 - 0x001500)
class UAthenaMapScreenContainerTabButton : public UCommonButtonLegacy
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 5376;

public:
	CMember(UCommonLazyImage*)                         LazyImage_Icon                                              OFFSET(get<T>, {0x14E0, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_Title                                                  OFFSET(get<T>, {0x14E8, 8, 0, 0})
	SMember(FVector2D)                                 ImageSize_Mobile                                            OFFSET(getStruct<T>, {0x14F0, 16, 0, 0})
};

/// Class /Script/FortniteUI.AthenaMapScreenTabBase
/// Size: 0x0070 (0x000400 - 0x000470)
class UAthenaMapScreenTabBase : public UCommonActivatableWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1136;

public:
	SMember(FAthenaMapScreenContainerTabInfo)          MapTabInfo                                                  OFFSET(getStruct<T>, {0x428, 72, 0, 0})
};

/// Class /Script/FortniteUI.AthenaMarkerDetails
/// Size: 0x0018 (0x000328 - 0x000340)
class UAthenaMarkerDetails : public UFortHUDElementWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 832;

public:
	CMember(UAthenaMarkerPointer*)                     MarkerPointer                                               OFFSET(get<T>, {0x328, 8, 0, 0})
	CMember(UFortMarkerDetailsTable*)                  DetailsTable                                                OFFSET(get<T>, {0x330, 8, 0, 0})
	CMember(UFortWorldMarker*)                         FortWorldMarker                                             OFFSET(get<T>, {0x338, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.AthenaMarkerDetails.UpdateMarkerData
	// void UpdateMarkerData(FFortWorldMarkerData& MarkerData);                                                                 // [0x1d9241c] Event|Protected|HasOutParms|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaMarkerDetails.UpdateMarkerAction
	// void UpdateMarkerAction(EFortMarkerActions MarkerAction);                                                                // [0x1d9241c] Event|Protected|BlueprintEvent 
};

/// Class /Script/FortniteUI.AthenaMarkerPointer
/// Size: 0x0028 (0x000178 - 0x0001A0)
class UAthenaMarkerPointer : public UWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 416;

public:
	CMember(UMaterialInterface*)                       LineMeshMaterial                                            OFFSET(get<T>, {0x178, 8, 0, 0})
	SMember(FVector2D)                                 TargetScreenPosition                                        OFFSET(getStruct<T>, {0x180, 16, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.AthenaMarkerPointer.SetTargetScreenPosition
	// void SetTargetScreenPosition(FVector2D InTargetScreenPosition);                                                          // [0x8fdc640] Final|Native|Public|HasDefaults|BlueprintCallable 
	// Function /Script/FortniteUI.AthenaMarkerPointer.SetLineMeshMaterial
	// void SetLineMeshMaterial(UMaterialInterface* Material);                                                                  // [0x8fdc538] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/FortniteUI.AthenaMatchmakingViolator
/// Size: 0x0068 (0x0002E8 - 0x000350)
class UAthenaMatchmakingViolator : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 848;

public:
	CMember(UCommonTextBlock*)                         Text_MainText                                               OFFSET(get<T>, {0x2E8, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_SubText                                                OFFSET(get<T>, {0x2F0, 8, 0, 0})
	SMember(FName)                                     FirstTimeUser_DialogName                                    OFFSET(getStruct<T>, {0x2F8, 4, 0, 0})
	SMember(FText)                                     FirstTimeUser_MainText                                      OFFSET(getStruct<T>, {0x300, 24, 0, 0})
	SMember(FText)                                     FirstTimeUser_SubText                                       OFFSET(getStruct<T>, {0x318, 24, 0, 0})
};

/// Class /Script/FortniteUI.AthenaMatchReadyDesktopPopup
/// Size: 0x0018 (0x0002C0 - 0x0002D8)
class UAthenaMatchReadyDesktopPopup : public UUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 728;

public:
};

/// Class /Script/FortniteUI.AthenaPlayerHitPointBarBase
/// Size: 0x0178 (0x0002C0 - 0x000438)
class UAthenaPlayerHitPointBarBase : public UUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1080;

public:
	CMember(UAthenaPlayerViewModel*)                   PlayerVM                                                    OFFSET(get<T>, {0x410, 8, 0, 0})
	CMember(EHealthBarType)                            BarType                                                     OFFSET(get<T>, {0x418, 1, 0, 0})
	DMember(float)                                     ValueCurrent                                                OFFSET(get<float>, {0x41C, 4, 0, 0})
	DMember(float)                                     BeginDeltaInterpDelayMin                                    OFFSET(get<float>, {0x420, 4, 0, 0})
	DMember(float)                                     BeginDeltaInterpDelayMax                                    OFFSET(get<float>, {0x424, 4, 0, 0})
	DMember(float)                                     ValueLast                                                   OFFSET(get<float>, {0x428, 4, 0, 0})
	DMember(float)                                     ValueMax                                                    OFFSET(get<float>, {0x42C, 4, 0, 0})
	DMember(float)                                     LastToCurrentUpdateRate                                     OFFSET(get<float>, {0x430, 4, 0, 0})
	DMember(bool)                                      bShouldDisplayShieldBar                                     OFFSET(get<bool>, {0x434, 1, 0, 0})
	DMember(bool)                                      bCanAddExtensionWidgets                                     OFFSET(get<bool>, {0x435, 1, 0, 0})
	CMember(EUIExtensionSlot)                          ExtensionSlotToUse                                          OFFSET(get<T>, {0x436, 1, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.AthenaPlayerHitPointBarBase.SetProgressBarFillColors
	// void SetProgressBarFillColors(FLinearColor ColorA, FLinearColor ColorB);                                                 // [0x1d9241c] Event|Protected|HasDefaults|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaPlayerHitPointBarBase.OnValueChangedWithReason
	// void OnValueChangedWithReason(float Value, EFortHitPointModificationReason Reason);                                      // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaPlayerHitPointBarBase.OnMaxValueChanged
	// void OnMaxValueChanged(float Value);                                                                                     // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaPlayerHitPointBarBase.OnExtensionWidgetAdded
	// void OnExtensionWidgetAdded(EUIExtensionSlot ExtensionSlot, UUserWidget* ExtensionWidget);                               // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaPlayerHitPointBarBase.OnDeltaChanged
	// void OnDeltaChanged();                                                                                                   // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaPlayerHitPointBarBase.OnDBNOStateChanged
	// void OnDBNOStateChanged(bool IsDBNO);                                                                                    // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaPlayerHitPointBarBase.IsShieldSegmented
	// bool IsShieldSegmented();                                                                                                // [0x8fda300] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.AthenaPlayerHitPointBarBase.GetLastValuePercentage
	// float GetLastValuePercentage();                                                                                          // [0x8fd8d9c] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.AthenaPlayerHitPointBarBase.GetCurrentValuePercentage
	// float GetCurrentValuePercentage();                                                                                       // [0x8fd8d30] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/FortniteUI.AthenaPlayerHitPointInfo
/// Size: 0x0008 (0x000328 - 0x000330)
class UAthenaPlayerHitPointInfo : public UFortHUDElementWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 816;

public:
	DMember(bool)                                      bUseLargeFormat                                             OFFSET(get<bool>, {0x328, 1, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.AthenaPlayerHitPointInfo.HandleTetherChanged
	// void HandleTetherChanged(bool bTethered);                                                                                // [0x8fda074] Final|Native|Private 
	// Function /Script/FortniteUI.AthenaPlayerHitPointInfo.HandleExitVehicle
	// void HandleExitVehicle();                                                                                                // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaPlayerHitPointInfo.HandleEnterVehicle
	// void HandleEnterVehicle();                                                                                               // [0x1d9241c] Event|Protected|BlueprintEvent 
};

/// Class /Script/FortniteUI.AthenaPlayerIndicatorBase
/// Size: 0x01B0 (0x0003D0 - 0x000580)
class UAthenaPlayerIndicatorBase : public UFortActorIndicatorWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1408;

public:
	SMember(FVector2D)                                 MinMaxSizeDistance                                          OFFSET(getStruct<T>, {0x510, 16, 0, 0})
	SMember(FVector2D)                                 MinMaxScale                                                 OFFSET(getStruct<T>, {0x520, 16, 0, 0})
	DMember(float)                                     FarAwayScaleMultiplier                                      OFFSET(get<float>, {0x530, 4, 0, 0})
	SMember(FVector)                                   RelativeLocationWhenDBNO                                    OFFSET(getStruct<T>, {0x538, 24, 0, 0})
	SMember(FVector)                                   RelativeLocationWhenNotDBNO                                 OFFSET(getStruct<T>, {0x550, 24, 0, 0})
	SMember(FVector2D)                                 UnscaledScreenSpaceRelativeOffset                           OFFSET(getStruct<T>, {0x568, 16, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.AthenaPlayerIndicatorBase.OnExtensionWidgetCreated
	// void OnExtensionWidgetCreated(UUserWidget* Widget, EUIExtensionSlot SlotType);                                           // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaPlayerIndicatorBase.HandleCurrentPawnChanged
	// void HandleCurrentPawnChanged();                                                                                         // [0x3091728] Final|Native|Private 
	// Function /Script/FortniteUI.AthenaPlayerIndicatorBase.BP_UpdateWorldNameVisibility
	// void BP_UpdateWorldNameVisibility(bool bDisplayWorldName);                                                               // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaPlayerIndicatorBase.BP_OnHandleTeamMemberStateChanged
	// void BP_OnHandleTeamMemberStateChanged(ETeamMemberState TeamMemberState);                                                // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaPlayerIndicatorBase.BP_OnHandleTalkingStateChanged
	// void BP_OnHandleTalkingStateChanged(bool bIsTalking);                                                                    // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaPlayerIndicatorBase.BP_OnHandlePlayerStateSet
	// void BP_OnHandlePlayerStateSet(AFortPlayerStateAthena* PlayerStateAthena);                                               // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaPlayerIndicatorBase.BP_OnHandlePlayerNameReplicated
	// void BP_OnHandlePlayerNameReplicated(FString PlayerName);                                                                // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaPlayerIndicatorBase.BP_OnHandlePinColorChanged
	// void BP_OnHandlePinColorChanged(FLinearColor& PinColor);                                                                 // [0x1d9241c] Event|Protected|HasOutParms|HasDefaults|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaPlayerIndicatorBase.BP_OnHandleDBNOStateChanged
	// void BP_OnHandleDBNOStateChanged(bool bIsDBNO);                                                                          // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaPlayerIndicatorBase.BP_OnHandleBeingRevivedStateChanged
	// void BP_OnHandleBeingRevivedStateChanged(bool bIsBeingRevived, float MaxReviveTime);                                     // [0x1d9241c] Event|Protected|BlueprintEvent 
};

/// Class /Script/FortniteUI.AthenaPlayerIndicatorExtensionInterface
/// Size: 0x0000 (0x000028 - 0x000028)
class UAthenaPlayerIndicatorExtensionInterface : public UInterface
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 40;

public:
};

/// Class /Script/FortniteUI.AthenaPlayerInfoBase
/// Size: 0x0258 (0x000328 - 0x000580)
class UAthenaPlayerInfoBase : public UFortHUDElementWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1408;

public:
	CMember(TWeakObjectPtr<AFortPlayerStateAthena*>)   WeakPSA                                                     OFFSET(get<T>, {0x468, 8, 0, 0})
	DMember(bool)                                      bIsLocalPlayer                                              OFFSET(get<bool>, {0x470, 1, 0, 0})
	SMember(FSlateColor)                               Color_PlayerNameAlive                                       OFFSET(getStruct<T>, {0x474, 20, 0, 0})
	SMember(FSlateColor)                               Color_PlayerNameDead                                        OFFSET(getStruct<T>, {0x488, 20, 0, 0})
	SMember(FSlateColor)                               Color_PlayerNameDisconnected                                OFFSET(getStruct<T>, {0x49C, 20, 0, 0})
	CMember(UOverlay*)                                 Overlay_TeamMemberInfo                                      OFFSET(get<T>, {0x4B0, 8, 0, 0})
	CMember(UImage*)                                   Image_HealthBar                                             OFFSET(get<T>, {0x4B8, 8, 0, 0})
	CMember(UImage*)                                   Image_ShieldBar                                             OFFSET(get<T>, {0x4C0, 8, 0, 0})
	CMember(UContentWidget*)                           Content_StormCN                                             OFFSET(get<T>, {0x4C8, 8, 0, 0})
	CMember(UImage*)                                   Image_StormCN                                               OFFSET(get<T>, {0x4D0, 8, 0, 0})
	CMember(UImage*)                                   Image_DBNOBar                                               OFFSET(get<T>, {0x4D8, 8, 0, 0})
	CMember(UImage*)                                   Image_PlatformIcon                                          OFFSET(get<T>, {0x4E0, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_PlayerName                                             OFFSET(get<T>, {0x4E8, 8, 0, 0})
	CMember(UImage*)                                   Image_Marker                                                OFFSET(get<T>, {0x4F0, 8, 0, 0})
	CMember(UAthenaTeamMemberDBNOState*)               DBNOStateWidget                                             OFFSET(get<T>, {0x4F8, 8, 0, 0})
	CMember(UImage*)                                   Image_DeadIndicator                                         OFFSET(get<T>, {0x500, 8, 0, 0})
	CMember(UImage*)                                   Image_DisconnectedIndicator                                 OFFSET(get<T>, {0x508, 8, 0, 0})
	CMember(UImage*)                                   Image_ResurrectChip                                         OFFSET(get<T>, {0x510, 8, 0, 0})
	CMember(UImage*)                                   Image_ResurrectionChipExpirationBar                         OFFSET(get<T>, {0x518, 8, 0, 0})
	CMember(UCommonWidgetSwitcherLegacy*)              WidgetSwitcher_Avatar                                       OFFSET(get<T>, {0x520, 8, 0, 0})
	CMember(UFortSocialAvatarIcon*)                    Icon_AvatarSocial                                           OFFSET(get<T>, {0x528, 8, 0, 0})
	CMember(UImage*)                                   Image_AvatarOverride                                        OFFSET(get<T>, {0x530, 8, 0, 0})
	CMember(UFortVoiceChatStatusIconProxyAnim*)        SpeakerWidgetAnim                                           OFFSET(get<T>, {0x538, 8, 0, 0})
	CMember(UAthenaLevelEffects*)                      LevelEffects                                                OFFSET(get<T>, {0x540, 8, 0, 0})
	CMember(UOverlay*)                                 Overlay_HealthAndShieldInfo                                 OFFSET(get<T>, {0x548, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.AthenaPlayerInfoBase.SetPlayerState
	// void SetPlayerState(AFortPlayerStateAthena* InPlayerState);                                                              // [0x8fdc5c0] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.AthenaPlayerInfoBase.HandlePlaylistLoaded
	// void HandlePlaylistLoaded(FName PlaylistName, FGameplayTagContainer& PlaylistContextTags);                               // [0x8fd9b88] Final|Native|Protected|HasOutParms 
	// Function /Script/FortniteUI.AthenaPlayerInfoBase.HandlePlayerMutatorDataChanged
	// void HandlePlayerMutatorDataChanged();                                                                                   // [0x8fd9a68] Final|Native|Protected 
	// Function /Script/FortniteUI.AthenaPlayerInfoBase.BP_HandleTalkingVisualDisplayChanged
	// void BP_HandleTalkingVisualDisplayChanged(bool bTalkingVisualsActive);                                                   // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaPlayerInfoBase.BP_HandleTalkingStateChanged
	// void BP_HandleTalkingStateChanged(bool bIsTalking);                                                                      // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaPlayerInfoBase.BP_HandleSeasonLevelUIDisplayChanged
	// void BP_HandleSeasonLevelUIDisplayChanged(int32_t Level);                                                                // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaPlayerInfoBase.BP_HandleResurrectionStateChanged
	// void BP_HandleResurrectionStateChanged(FFortResurrectionUIData& ResurrectionStateData);                                  // [0x1d9241c] Event|Protected|HasOutParms|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaPlayerInfoBase.BP_HandlePlaylistLoaded
	// void BP_HandlePlaylistLoaded(FName PlaylistName, FGameplayTagContainer& PlaylistContextTags);                            // [0x1d9241c] Event|Protected|HasOutParms|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaPlayerInfoBase.BP_HandlePlaylistExtensionWidgetCreated
	// void BP_HandlePlaylistExtensionWidgetCreated(UUserWidget* Widget, EUIExtensionSlot SlotType);                            // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaPlayerInfoBase.BP_HandlePlayerNameReplicated
	// void BP_HandlePlayerNameReplicated(FString PlayerName);                                                                  // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaPlayerInfoBase.BP_HandleMutedStateChanged
	// void BP_HandleMutedStateChanged(bool bIsMuted);                                                                          // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaPlayerInfoBase.BP_HandleIsBeingRevivedStateChanged
	// void BP_HandleIsBeingRevivedStateChanged(bool bIsTalking);                                                               // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaPlayerInfoBase.BP_HandleGameModeIconChanged
	// void BP_HandleGameModeIconChanged(UTexture2D* GameModeIcon);                                                             // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaPlayerInfoBase.BP_HandleDBNOStateChanged
	// void BP_HandleDBNOStateChanged(bool bDBNO);                                                                              // [0x1d9241c] Event|Protected|BlueprintEvent 
};

/// Class /Script/FortniteUI.AthenaPlayerKillsBase
/// Size: 0x0018 (0x000328 - 0x000340)
class UAthenaPlayerKillsBase : public UFortHUDElementWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 832;

public:
	CMember(UTextBlock*)                               KillsText                                                   OFFSET(get<T>, {0x328, 8, 0, 0})
	CMember(UObject*)                                  KillsSource                                                 OFFSET(get<T>, {0x330, 8, 0, 0})
	DMember(bool)                                      bCustomKillSource                                           OFFSET(get<bool>, {0x338, 1, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.AthenaPlayerKillsBase.SetKillsSourcePlayerState
	// void SetKillsSourcePlayerState(AFortPlayerStateAthena* InPlayerState);                                                   // [0x2b3d4b4] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.AthenaPlayerKillsBase.SetKillsSourcePlayerController
	// void SetKillsSourcePlayerController(AFortPlayerControllerAthena* InPlayerController);                                    // [0x8fdc378] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.AthenaPlayerKillsBase.HandlePlayerViewTargetChanged
	// void HandlePlayerViewTargetChanged();                                                                                    // [0x8fd9b4c] Final|Native|Protected 
};

/// Class /Script/FortniteUI.FortAccountWidgetBase
/// Size: 0x0038 (0x0002E8 - 0x000320)
class UFortAccountWidgetBase : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 800;

public:
};

/// Class /Script/FortniteUI.AthenaPlayerLevelDisplay
/// Size: 0x0010 (0x000320 - 0x000330)
class UAthenaPlayerLevelDisplay : public UFortAccountWidgetBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 816;

public:
	CMember(UCommonTextBlock*)                         Text_Level                                                  OFFSET(get<T>, {0x320, 8, 0, 0})
	CMember(UAthenaSeasonItemRewardIcon*)              RewardIcon                                                  OFFSET(get<T>, {0x328, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.AthenaPlayerLevelDisplay.UpdateBPStatus
	// void UpdateBPStatus(EBPStatus Status);                                                                                   // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaPlayerLevelDisplay.OnUpdateXpBar
	// void OnUpdateXpBar(float Progress, bool bIsMaxLevel);                                                                    // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaPlayerLevelDisplay.OnUpdateRewardIcon
	// void OnUpdateRewardIcon(UFortItem* RewardItem, TWeakObjectPtr<UTexture2D*>& RewardTexture, bool bHasAdditionalStylesToDisplay, int32_t RewardLevel, bool bRequiresBattlePass); // [0x1d9241c] Event|Protected|HasOutParms|BlueprintEvent 
};

/// Class /Script/FortniteUI.AthenaPlayersLeftBase
/// Size: 0x0010 (0x000328 - 0x000338)
class UAthenaPlayersLeftBase : public UFortHUDElementWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 824;

public:
};

/// Class /Script/FortniteUI.AthenaPlayerTeamKillsBase
/// Size: 0x0018 (0x000328 - 0x000340)
class UAthenaPlayerTeamKillsBase : public UFortHUDElementWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 832;

public:
	CMember(UTextBlock*)                               KillsText                                                   OFFSET(get<T>, {0x328, 8, 0, 0})
	CMember(UAthenaPlayerViewModel*)                   PlayerVM                                                    OFFSET(get<T>, {0x330, 8, 0, 0})
	CMember(AFortPlayerStateAthena*)                   SourcePlayerState                                           OFFSET(get<T>, {0x338, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.AthenaPlayerTeamKillsBase.HandlePlayerViewTargetChanged
	// void HandlePlayerViewTargetChanged();                                                                                    // [0x8fd9b60] Final|Native|Protected 
};

/// Class /Script/FortniteUI.AthenaPlayerVitalityBarBase
/// Size: 0x0008 (0x0002C0 - 0x0002C8)
class UAthenaPlayerVitalityBarBase : public UUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 712;

public:
	CMember(UAthenaPlayerViewModel*)                   PlayerVM                                                    OFFSET(get<T>, {0x2C0, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.AthenaPlayerVitalityBarBase.SetDataSource
	// void SetDataSource(UAthenaPlayerViewModel* PlayerViewModel);                                                             // [0x8f39634] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/FortniteUI.AthenaQuestActorIndicator
/// Size: 0x0018 (0x0003D0 - 0x0003E8)
class UAthenaQuestActorIndicator : public UFortActorIndicatorWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1000;

public:
	CMember(UImage*)                                   Image_QuestActorBrush                                       OFFSET(get<T>, {0x3D0, 8, 0, 0})
	CMember(UFortQuestIconComponent*)                  QuestIconComponent                                          OFFSET(get<T>, {0x3D8, 8, 0, 0})
};

/// Class /Script/FortniteUI.AthenaQuickbarEditorBase
/// Size: 0x0028 (0x0002E8 - 0x000310)
class UAthenaQuickbarEditorBase : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 784;

public:
	CMember(UCommonButtonGroupBase*)                   EquipButtonGroup                                            OFFSET(get<T>, {0x2E8, 8, 0, 0})
	DMember(bool)                                      bCheckVisibilityBasedOffInventoryCapacity                   OFFSET(get<bool>, {0x2F0, 1, 0, 0})
	CMember(EFortQuickBars)                            QuickbarIndex                                               OFFSET(get<T>, {0x2F1, 1, 0, 0})
	CMember(UClass*)                                   QuickBarSlotButtonClass                                     OFFSET(get<T>, {0x2F8, 8, 0, 0})
	DMember(int32_t)                                   FirstQuickBarSlotIndex                                      OFFSET(get<int32_t>, {0x300, 4, 0, 0})
	DMember(int32_t)                                   NumQuickBarSlots                                            OFFSET(get<int32_t>, {0x304, 4, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.AthenaQuickbarEditorBase.SelectPreviousQuickBarSlot
	// void SelectPreviousQuickBarSlot(bool bSetFocus);                                                                         // [0x8fdb758] Final|RequiredAPI|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.AthenaQuickbarEditorBase.SelectNextQuickBarSlot
	// void SelectNextQuickBarSlot(bool bSetFocus);                                                                             // [0x8fdb6b0] Final|RequiredAPI|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.AthenaQuickbarEditorBase.OnQuickBarSlotButtonCreated
	// void OnQuickBarSlotButtonCreated(UAthenaQuickBarSlotButtonBase* QuickBarSlotButton);                                     // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaQuickbarEditorBase.GetFirstEquipSlotButton
	// UWidget* GetFirstEquipSlotButton();                                                                                      // [0x8fd8d78] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/FortniteUI.AthenaRebootCardIndicator
/// Size: 0x0030 (0x000640 - 0x000670)
class UAthenaRebootCardIndicator : public UAthenaMarkedActorIndicator
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1648;

public:
	CMember(UCommonTextBlock*)                         Text_PlayerName                                             OFFSET(get<T>, {0x640, 8, 0, 0})
	CMember(UImage*)                                   Image_PlayerMarker                                          OFFSET(get<T>, {0x648, 8, 0, 0})
	CMember(UTextBlock*)                               TimeText                                                    OFFSET(get<T>, {0x650, 8, 0, 0})
	CMember(UWidgetAnimation*)                         UpdateTime                                                  OFFSET(get<T>, {0x658, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.AthenaRebootCardIndicator.HandleDisplayForSelf
	// void HandleDisplayForSelf(bool bSelf);                                                                                   // [0x1d9241c] Event|Protected|BlueprintEvent 
};

/// Class /Script/FortniteUI.AthenaRebootChipDirective
/// Size: 0x0020 (0x000328 - 0x000348)
class UAthenaRebootChipDirective : public UFortHUDElementWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 840;

public:
	CMember(UAthenaPlayerViewModel*)                   PlayerVM                                                    OFFSET(get<T>, {0x328, 8, 0, 0})
	CMember(TArray<AFortPlayerStateAthena*>)           RebootableAllies                                            OFFSET(get<T>, {0x330, 16, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.AthenaRebootChipDirective.UpdateSquadListDisplay
	// void UpdateSquadListDisplay(EAthenaSquadListUpdateType UpdateType, AFortPlayerStateAthena* PS);                          // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaRebootChipDirective.HandleLocalPlayerDied
	// void HandleLocalPlayerDied(FFortPlayerDeathReport& DeathReport);                                                         // [0x8fd957c] Final|Native|Protected|HasOutParms 
};

/// Class /Script/FortniteUI.AthenaRebootVanIndicator
/// Size: 0x0010 (0x000640 - 0x000650)
class UAthenaRebootVanIndicator : public UAthenaMarkedActorIndicator
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1616;

public:
	DMember(int32_t)                                   SpawnMachineIndex                                           OFFSET(get<int32_t>, {0x640, 4, 0, 0})
	CMember(ESpawnMachineState)                        SpawnMachineState                                           OFFSET(get<T>, {0x644, 1, 0, 0})
	DMember(float)                                     SpawnMachineCooldownStartTime                               OFFSET(get<float>, {0x648, 4, 0, 0})
	DMember(float)                                     SpawnMachineCooldownEndTime                                 OFFSET(get<float>, {0x64C, 4, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.AthenaRebootVanIndicator.OnSpawnMachineStateChanged
	// void OnSpawnMachineStateChanged();                                                                                       // [0x1d9241c] Event|Protected|BlueprintEvent 
};

/// Class /Script/FortniteUI.AthenaRespawnBase
/// Size: 0x0030 (0x000328 - 0x000358)
class UAthenaRespawnBase : public UFortHUDElementWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 856;

public:
	CMember(ERespawnUIState)                           RespawnState                                                OFFSET(get<T>, {0x328, 1, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.AthenaRespawnBase.UpdateAllUI
	// void UpdateAllUI();                                                                                                      // [0x8fdc9dc] Final|Native|Protected 
	// Function /Script/FortniteUI.AthenaRespawnBase.OnUpdateRespawnState
	// void OnUpdateRespawnState(bool bEnabled);                                                                                // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaRespawnBase.OnUpdateLives
	// void OnUpdateLives(int32_t Lives);                                                                                       // [0x1d9241c] Event|Protected|BlueprintEvent 
};

/// Class /Script/FortniteUI.AthenaScorePopWidgetBase
/// Size: 0x0000 (0x000328 - 0x000328)
class UAthenaScorePopWidgetBase : public UFortHUDElementWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 808;

public:
};

/// Class /Script/FortniteUI.AthenaScrollBox
/// Size: 0x0020 (0x000C10 - 0x000C30)
class UAthenaScrollBox : public UScrollBox
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 3120;

public:
	DMember(bool)                                      bEnableFixedPageOffset                                      OFFSET(get<bool>, {0xC28, 1, 0, 0})
	DMember(bool)                                      bEnableClickThrough                                         OFFSET(get<bool>, {0xC29, 1, 0, 0})
};

/// Class /Script/FortniteUI.AthenaSeasonStatusWidget
/// Size: 0x0000 (0x0002E8 - 0x0002E8)
class UAthenaSeasonStatusWidget : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 744;

public:
};

/// Class /Script/FortniteUI.AthenaSkewedTabButton
/// Size: 0x0030 (0x0014E0 - 0x001510)
class UAthenaSkewedTabButton : public UCommonButtonLegacy
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 5392;

public:
	CMember(UCommonLazyImage*)                         LazyImage_Icon                                              OFFSET(get<T>, {0x14E0, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_Title                                                  OFFSET(get<T>, {0x14E8, 8, 0, 0})
	CMember(UWidget*)                                  Widget_Bang                                                 OFFSET(get<T>, {0x14F0, 8, 0, 0})
	SMember(FVector2D)                                 ImageSize_Mobile                                            OFFSET(getStruct<T>, {0x14F8, 16, 0, 0})
	DMember(bool)                                      bUseMobileSize                                              OFFSET(get<bool>, {0x1508, 1, 0, 0})
};

/// Class /Script/FortniteUI.AthenaSkydivingInformation
/// Size: 0x0028 (0x000328 - 0x000350)
class UAthenaSkydivingInformation : public UFortHUDElementWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 848;

public:
};

/// Class /Script/FortniteUI.AthenaSocialScreen
/// Size: 0x0008 (0x000538 - 0x000540)
class UAthenaSocialScreen : public UCommonActivatablePanelLegacy
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1344;

public:
	CMember(UCommonButtonBase*)                        Button_ViewCareer                                           OFFSET(get<T>, {0x538, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.AthenaSocialScreen.ShowCareerScreen
	// void ShowCareerScreen();                                                                                                 // [0x8fdc9c8] Final|Native|Private|BlueprintCallable 
};

/// Class /Script/FortniteUI.AthenaSquadIndicator
/// Size: 0x0170 (0x000640 - 0x0007B0)
class UAthenaSquadIndicator : public UAthenaMarkedActorIndicator
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1968;

public:
	DMember(float)                                     IndicatorWorldOffsetProperty                                OFFSET(get<float>, {0x644, 4, 0, 0})
	DMember(float)                                     IndicatorItemOffset                                         OFFSET(get<float>, {0x648, 4, 0, 0})
	DMember(float)                                     IndicatorSpecialServerOffset                                OFFSET(get<float>, {0x64C, 4, 0, 0})
	SMember(FVector2D)                                 SmallIndicatorScale                                         OFFSET(getStruct<T>, {0x650, 16, 0, 0})
	DMember(float)                                     WorldOffsetInterpValue                                      OFFSET(get<float>, {0x660, 4, 0, 0})
	SMember(FName)                                     MIDParam_LocationColor                                      OFFSET(getStruct<T>, {0x664, 4, 0, 0})
	SMember(FName)                                     MIDParam_ItemIcon                                           OFFSET(getStruct<T>, {0x668, 4, 0, 0})
	SMember(FName)                                     MIDParam_ItemRarityColor                                    OFFSET(getStruct<T>, {0x66C, 4, 0, 0})
	SMember(FName)                                     MIDParam_SquadCommsPingIcon                                 OFFSET(getStruct<T>, {0x670, 4, 0, 0})
	SMember(FName)                                     MIDParam_NPCCommandPingIconCrop                             OFFSET(getStruct<T>, {0x674, 4, 0, 0})
	CMember(UTexture2D*)                               LoadingPlaceholder                                          OFFSET(get<T>, {0x678, 8, 0, 0})
	SMember(FMarkerLargeIndicatorType)                 LocationMarker                                              OFFSET(getStruct<T>, {0x680, 24, 0, 0})
	SMember(FMarkerLargeIndicatorType)                 ItemMarker                                                  OFFSET(getStruct<T>, {0x698, 24, 0, 0})
	SMember(FMarkerLargeIndicatorType)                 DangerMarker                                                OFFSET(getStruct<T>, {0x6B0, 24, 0, 0})
	SMember(FMarkerLargeIndicatorType)                 SpecialLocalMarker                                          OFFSET(getStruct<T>, {0x6C8, 24, 0, 0})
	SMember(FMarkerLargeIndicatorType)                 SpecialServerMarker                                         OFFSET(getStruct<T>, {0x6E0, 24, 0, 0})
	SMember(FMarkerLargeIndicatorType)                 SquadCommsMarker                                            OFFSET(getStruct<T>, {0x6F8, 24, 0, 0})
	CMember(UMaterialInterface*)                       DefaultIconMaterial                                         OFFSET(get<T>, {0x710, 8, 0, 0})
	CMember(UMaterialInterface*)                       SquadCommsPingMaterial                                      OFFSET(get<T>, {0x718, 8, 0, 0})
	CMember(UImage*)                                   Image_SmallIndicator                                        OFFSET(get<T>, {0x748, 8, 0, 0})
	CMember(UImage*)                                   Image_LocationFlare                                         OFFSET(get<T>, {0x750, 8, 0, 0})
	CMember(UImage*)                                   Image_LargeIndicator                                        OFFSET(get<T>, {0x758, 8, 0, 0})
	CMember(UWidgetAnimation*)                         Anim_LocationPlaced                                         OFFSET(get<T>, {0x760, 8, 0, 0})
	CMember(UWidgetAnimation*)                         Anim_DangerPlaced                                           OFFSET(get<T>, {0x768, 8, 0, 0})
	CMember(UWidgetAnimation*)                         Anim_ItemPlaced                                             OFFSET(get<T>, {0x770, 8, 0, 0})
	CMember(UWidgetAnimation*)                         Anim_Hovered                                                OFFSET(get<T>, {0x778, 8, 0, 0})
	CMember(UImage*)                                   Image_TrajectoryLargeIndicator                              OFFSET(get<T>, {0x780, 8, 0, 0})
	CMember(UImage*)                                   Image_TrajectorySmallIndicator                              OFFSET(get<T>, {0x788, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.AthenaSquadIndicator.OnItemIconSet
	// void OnItemIconSet(UTexture2D* NewIcon);                                                                                 // [0x1d9241c] Event|Protected|BlueprintEvent 
};

/// Class /Script/FortniteUI.AthenaSquadListBase
/// Size: 0x0078 (0x000328 - 0x0003A0)
class UAthenaSquadListBase : public UFortHUDElementWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 928;

public:
	CMember(ESlateVisibility)                          LocalPlayerVisibility                                       OFFSET(get<T>, {0x328, 1, 0, 0})
	CMember(UAthenaPlayerInfoBase*)                    LocalPlayerInfo                                             OFFSET(get<T>, {0x338, 8, 0, 0})
	CMember(UDynamicEntryBox*)                         EntryBox_SquadList                                          OFFSET(get<T>, {0x340, 8, 0, 0})
	CMember(UAthenaPlayerViewModel*)                   CachedPlayerVM                                              OFFSET(get<T>, {0x348, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.AthenaSquadListBase.UpdateSquadFromMinigameOptionChange
	// void UpdateSquadFromMinigameOptionChange();                                                                              // [0x8fdcd48] Final|Native|Private 
	// Function /Script/FortniteUI.AthenaSquadListBase.UpdateIsTeamMiniGameOnMinigameVolumeChanged
	// void UpdateIsTeamMiniGameOnMinigameVolumeChanged(AFortVolume* Volume);                                                   // [0x8fdca7c] Final|Native|Private 
	// Function /Script/FortniteUI.AthenaSquadListBase.OnExtensionWidgetRemoved
	// void OnExtensionWidgetRemoved(UUserWidget* Widget);                                                                      // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaSquadListBase.OnExtensionWidgetAdded
	// void OnExtensionWidgetAdded(EUIExtensionSlot SlotType, UUserWidget* Widget);                                             // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaSquadListBase.HandleSquadMemberDisconnected
	// void HandleSquadMemberDisconnected(AFortPlayerStateAthena* Player);                                                      // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaSquadListBase.HandlePlayerUniqueIdReplicated
	// void HandlePlayerUniqueIdReplicated(FUniqueNetIdRepl& UniqueID);                                                         // [0x8fd9a7c] Final|Native|Private|HasOutParms 
	// Function /Script/FortniteUI.AthenaSquadListBase.HandlePlayerExitVolume
	// void HandlePlayerExitVolume(APlayerState* Client, AFortVolume* Volume);                                                  // [0x8fd99a4] Final|Native|Private 
	// Function /Script/FortniteUI.AthenaSquadListBase.HandlePlayerEnterVolume
	// void HandlePlayerEnterVolume(APlayerState* Client, AFortVolume* Volume);                                                 // [0x8fd98e0] Final|Native|Private 
	// Function /Script/FortniteUI.AthenaSquadListBase.HandleGameMemberChanged
	// void HandleGameMemberChanged(char InSquadId, char InTeamIndex, AFortPlayerStateAthena* ChangedPS);                       // [0x8fd9404] Final|Native|Private 
};

/// Class /Script/FortniteUI.AthenaStatsScreenBase
/// Size: 0x01C8 (0x000570 - 0x000738)
class UAthenaStatsScreenBase : public UFortActivatablePanel
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1848;

public:
	CMember(UCommonTabListWidgetBase*)                 StatsTabList                                                OFFSET(get<T>, {0x570, 8, 0, 0})
	CMember(UFortProfileStatsMainTile*)                WinsTile                                                    OFFSET(get<T>, {0x578, 8, 0, 0})
	CMember(UFortProfileStatsMainTile*)                SecondTierTile                                              OFFSET(get<T>, {0x580, 8, 0, 0})
	CMember(UFortProfileStatsMainTile*)                ThirdTierTile                                               OFFSET(get<T>, {0x588, 8, 0, 0})
	CMember(UFortProfileStatsRow*)                     KillsRow                                                    OFFSET(get<T>, {0x590, 8, 0, 0})
	CMember(UFortProfileStatsRow*)                     MatchesPlayedRow                                            OFFSET(get<T>, {0x598, 8, 0, 0})
	CMember(UCommonTextBlock*)                         LastUpdatedTime                                             OFFSET(get<T>, {0x5A0, 8, 0, 0})
	CMember(UCommonTextBlock*)                         PlayerName                                                  OFFSET(get<T>, {0x5A8, 8, 0, 0})
	CMember(UWidget*)                                  SeasonContainer                                             OFFSET(get<T>, {0x5B0, 8, 0, 0})
	CMember(UWidget*)                                  AccountContainer                                            OFFSET(get<T>, {0x5B8, 8, 0, 0})
	CMember(UWidget*)                                  MainStatsContainer                                          OFFSET(get<T>, {0x5C0, 8, 0, 0})
	CMember(UCommonButtonBase*)                        PlatformButton                                              OFFSET(get<T>, {0x5C8, 8, 0, 0})
	CMember(UImage*)                                   Image_PlatformIcon                                          OFFSET(get<T>, {0x5D0, 8, 0, 0})
	CMember(UCommonTextBlock*)                         LTM_Disclaimer                                              OFFSET(get<T>, {0x5D8, 8, 0, 0})
	CMember(UCommonButtonBase*)                        Button_ChangeFlag                                           OFFSET(get<T>, {0x5E0, 8, 0, 0})
	CMember(UFortFlagImage*)                           Image_YourFlag                                              OFFSET(get<T>, {0x5E8, 8, 0, 0})
	CMember(UFortFlagImage*)                           Image_OtherUserFlag                                         OFFSET(get<T>, {0x5F0, 8, 0, 0})
	CMember(UWidgetSwitcher*)                          Switcher_FlagDisplay                                        OFFSET(get<T>, {0x5F8, 8, 0, 0})
	DMember(bool)                                      bWasLastQuerySuccessful                                     OFFSET(get<bool>, {0x600, 1, 0, 0})
	CMember(UDataTable*)                               PlaylistsData                                               OFFSET(get<T>, {0x608, 8, 0, 0})
	SMember(FName)                                     LTMPlaylistDefaultName                                      OFFSET(getStruct<T>, {0x610, 4, 0, 0})
	CMember(UClass*)                                   FortFlagSelectionModalClass                                 OFFSET(get<T>, {0x618, 8, 0, 0})
	SMember(FText)                                     PlatformButtonDisplayText                                   OFFSET(getStruct<T>, {0x620, 24, 0, 0})
	CMember(USocialUser*)                              QueriedSocialUser                                           OFFSET(get<T>, {0x708, 8, 0, 0})
	SMember(FDataTableRowHandle)                       BackAction                                                  OFFSET(getStruct<T>, {0x720, 16, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.AthenaStatsScreenBase.SetPlatformButtonText
	// void SetPlatformButtonText(FText& PlatformButtonText);                                                                   // [0x1d9241c] Event|Public|HasOutParms|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaStatsScreenBase.SetDisplayName
	// void SetDisplayName(FText InDisplayName);                                                                                // [0x8fdc2dc] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.AthenaStatsScreenBase.SetAccountIdToQueryFromString
	// void SetAccountIdToQueryFromString(FString InAccountId);                                                                 // [0x8fdb800] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.AthenaStatsScreenBase.OnTabSelected
	// void OnTabSelected(FName TabName);                                                                                       // [0x8fdad1c] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.AthenaStatsScreenBase.OnQueryStarted
	// void OnQueryStarted();                                                                                                   // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaStatsScreenBase.OnQueryFinished
	// void OnQueryFinished(bool bWasSuccessful, bool bHasStatsToDisplay);                                                      // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaStatsScreenBase.DisplayQueriedUserPlatformProfile
	// void DisplayQueriedUserPlatformProfile();                                                                                // [0x8fd8af8] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/FortniteUI.AthenaStormSurgeWarningBase
/// Size: 0x0060 (0x000328 - 0x000388)
class UAthenaStormSurgeWarningBase : public UFortHUDElementWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 904;

public:
	SMember(FFortPrioritizedWidgetData)                PrioritizationData                                          OFFSET(getStruct<T>, {0x368, 2, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.AthenaStormSurgeWarningBase.OnStopDisplaying
	// void OnStopDisplaying();                                                                                                 // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaStormSurgeWarningBase.OnStartDisplaying
	// void OnStartDisplaying(FText& TitleText, FText& SubTitleText, bool bDisplaySubtitle, bool bPlayDamageActiveSound);       // [0x1d9241c] Event|Protected|HasOutParms|BlueprintEvent 
};

/// Class /Script/FortniteUI.AthenaStormSurgeWidgetBase
/// Size: 0x0038 (0x000328 - 0x000360)
class UAthenaStormSurgeWidgetBase : public UFortHUDElementWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 864;

public:
};

/// Class /Script/FortniteUI.AthenaTeamAliveCountBase
/// Size: 0x0018 (0x000328 - 0x000340)
class UAthenaTeamAliveCountBase : public UFortHUDElementWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 832;

public:
};

/// Class /Script/FortniteUI.AthenaTeamScoreWidgetBase
/// Size: 0x0028 (0x000328 - 0x000350)
class UAthenaTeamScoreWidgetBase : public UFortHUDElementWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 848;

public:
	CMember(AFortPlayerStateAthena*)                   CurrPlayerState                                             OFFSET(get<T>, {0x328, 8, 0, 0})
	DMember(int32_t)                                   GoalScore                                                   OFFSET(get<int32_t>, {0x330, 4, 0, 0})
	DMember(int32_t)                                   PreviousScore                                               OFFSET(get<int32_t>, {0x334, 4, 0, 0})
	DMember(int32_t)                                   PreviousScorePlacement                                      OFFSET(get<int32_t>, {0x338, 4, 0, 0})
	DMember(int32_t)                                   PreviousDeltaScore                                          OFFSET(get<int32_t>, {0x33C, 4, 0, 0})
	DMember(bool)                                      bPreviousIsWinner                                           OFFSET(get<bool>, {0x340, 1, 0, 0})
	DMember(bool)                                      bPreviousHasScore                                           OFFSET(get<bool>, {0x341, 1, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.AthenaTeamScoreWidgetBase.OnScoreChanged
	// void OnScoreChanged(int32_t Score);                                                                                      // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaTeamScoreWidgetBase.OnPlacementChanged
	// void OnPlacementChanged(int32_t Placement);                                                                              // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaTeamScoreWidgetBase.OnLeaderboardChanged
	// void OnLeaderboardChanged(int32_t ScoreDelta, bool bIsWinner, bool bHasScore);                                           // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaTeamScoreWidgetBase.HandleUpdate
	// void HandleUpdate();                                                                                                     // [0x8fda22c] Final|Native|Protected 
	// Function /Script/FortniteUI.AthenaTeamScoreWidgetBase.HandleSpectatingChanged
	// void HandleSpectatingChanged(AFortPlayerStateZone* SpectatingTarget);                                                    // [0x8fd9f74] Final|Native|Protected 
	// Function /Script/FortniteUI.AthenaTeamScoreWidgetBase.HandleScoreChanged
	// void HandleScoreChanged(int32_t Score);                                                                                  // [0x8fd9d1c] Final|Native|Protected 
};

/// Class /Script/FortniteUI.AthenaTimeWidgetBase
/// Size: 0x0060 (0x000328 - 0x000388)
class UAthenaTimeWidgetBase : public UFortHUDElementWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 904;

public:
	SMember(FTimerHandle)                              UpdateTimerHandle                                           OFFSET(getStruct<T>, {0x328, 8, 0, 0})
	SMember(FText)                                     CachedDisplayText                                           OFFSET(getStruct<T>, {0x330, 24, 0, 0})
	SMember(FName)                                     CachedDisplayTextStyle                                      OFFSET(getStruct<T>, {0x348, 4, 0, 0})
	DMember(bool)                                      bIsDisplaying                                               OFFSET(get<bool>, {0x34C, 1, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.AthenaTimeWidgetBase.UpdateTimeText
	// void UpdateTimeText();                                                                                                   // [0x8fdcd5c] Final|Native|Protected 
	// Function /Script/FortniteUI.AthenaTimeWidgetBase.UpdateDisplay
	// void UpdateDisplay(FText& DisplayText, FName& DisplayTextStyle);                                                         // [0x1d9241c] Event|Protected|HasOutParms|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaTimeWidgetBase.OnTimerWidgetActorUpdated
	// void OnTimerWidgetActorUpdated(AActor* TimerWidgetActor);                                                                // [0x8fdad9c] Final|Native|Protected 
	// Function /Script/FortniteUI.AthenaTimeWidgetBase.OnStopTimeDisplay
	// void OnStopTimeDisplay();                                                                                                // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaTimeWidgetBase.OnStartTimeDisplay
	// void OnStartTimeDisplay();                                                                                               // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaTimeWidgetBase.OnMinigameStarted
	// void OnMinigameStarted();                                                                                                // [0x2f57a8c] Native|Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaTimeWidgetBase.OnMinigameEnded
	// void OnMinigameEnded();                                                                                                  // [0x7cea14c] Native|Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaTimeWidgetBase.IsTextStyleValid
	// bool IsTextStyleValid(FName& DisplayTextStyle);                                                                          // [0x8fda374] Native|Event|Protected|HasOutParms|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaTimeWidgetBase.ClientEnteredVolume
	// void ClientEnteredVolume(APlayerState* PlayerState, AFortVolume* FortVolume);                                            // [0x8fd8990] Final|Native|Protected 
};

/// Class /Script/FortniteUI.AthenaTravelLogFormatting
/// Size: 0x0000 (0x000028 - 0x000028)
class UAthenaTravelLogFormatting : public UBlueprintFunctionLibrary
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 40;

public:
};

/// Class /Script/FortniteUI.AthenaTrickFeedBase
/// Size: 0x0028 (0x000328 - 0x000350)
class UAthenaTrickFeedBase : public UFortHUDElementWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 848;

public:
};

/// Class /Script/FortniteUI.AthenaViewStreamingReplayModalBase
/// Size: 0x0008 (0x000570 - 0x000578)
class UAthenaViewStreamingReplayModalBase : public UFortActivatablePanel
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1400;

public:
	CMember(UEditableText*)                            EditableText_SessionSearch                                  OFFSET(get<T>, {0x570, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.AthenaViewStreamingReplayModalBase.PlayStreamingDSSReplay
	// void PlayStreamingDSSReplay(FString GameSessionId);                                                                      // [0x8fdafe8] Final|Native|Protected|BlueprintCallable|Const 
	// Function /Script/FortniteUI.AthenaViewStreamingReplayModalBase.IsValidGameSessionId
	// bool IsValidGameSessionId(FString GameSessionId);                                                                        // [0x8fda438] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/FortniteUI.AthenaVisitedAreaDisplay
/// Size: 0x0150 (0x000380 - 0x0004D0)
class UAthenaVisitedAreaDisplay : public UAthenaDiscoverabilityBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1232;

public:
	CMember(UCommonTextBlock*)                         CommonTextBlock_AvailableChallenges                         OFFSET(get<T>, {0x4C0, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.AthenaVisitedAreaDisplay.OnNewVisited
	// void OnNewVisited(FText& LocalizedLocationName, TWeakObjectPtr<USoundCue*>& DiscoveredSoundCue, bool bIsNamedLocation, bool bIsDiscovered); // [0x1d9241c] Event|Protected|HasOutParms|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaVisitedAreaDisplay.HandleNewContextualObjectives
	// void HandleNewContextualObjectives(TArray<UFortQuestItem*>& ContextualQuests);                                           // [0x8fd9634] Final|Native|Protected|HasOutParms 
	// Function /Script/FortniteUI.AthenaVisitedAreaDisplay.HandleContextualObjectivesInvalidated
	// void HandleContextualObjectivesInvalidated();                                                                            // [0x8fd90b0] Final|Native|Protected 
	// Function /Script/FortniteUI.AthenaVisitedAreaDisplay.BP_HandlePlaylistExtensionWidgetCreated
	// void BP_HandlePlaylistExtensionWidgetCreated(UUserWidget* Widget, EUIExtensionSlot SlotType);                            // [0x1d9241c] Event|Protected|BlueprintEvent 
};

/// Class /Script/FortniteUI.AthenaWatchers
/// Size: 0x0010 (0x000328 - 0x000338)
class UAthenaWatchers : public UFortHUDElementWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 824;

public:
	CMember(UTextBlock*)                               Text_Watchers                                               OFFSET(get<T>, {0x328, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.AthenaWatchers.SpectatorsEnded
	// void SpectatorsEnded();                                                                                                  // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaWatchers.SpectatorsBegan
	// void SpectatorsBegan(bool bBigGroup);                                                                                    // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaWatchers.SpectatorsAdded
	// void SpectatorsAdded(bool bBigGroup);                                                                                    // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaWatchers.SpectatorRemoved
	// void SpectatorRemoved();                                                                                                 // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaWatchers.SpectatorCountChanged_BP
	// void SpectatorCountChanged_BP(int32_t NewCount);                                                                         // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaWatchers.HandleSpectatorCountChanged
	// void HandleSpectatorCountChanged(int32_t NewSpectatorCount);                                                             // [0x8fd9ff4] Final|Native|Protected 
};

/// Class /Script/FortniteUI.AthenaWidgetLibrary
/// Size: 0x0000 (0x000028 - 0x000028)
class UAthenaWidgetLibrary : public UBlueprintFunctionLibrary
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 40;

public:
};

/// Class /Script/FortniteUI.AthenaWinConditionMsgBase
/// Size: 0x00B8 (0x000328 - 0x0003E0)
class UAthenaWinConditionMsgBase : public UFortHUDElementWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 992;

public:
	SMember(FFortPrioritizedWidgetData)                PrioritizedWidgetData                                       OFFSET(getStruct<T>, {0x3D8, 2, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.AthenaWinConditionMsgBase.OnShowHUDMessage
	// void OnShowHUDMessage(FHUDMessageData MessageData);                                                                      // [0x8fdab9c] Final|Native|Protected 
	// Function /Script/FortniteUI.AthenaWinConditionMsgBase.HandleSpatialLoadingStateChanged
	// void HandleSpatialLoadingStateChanged(ESpatialLoadingState NewState, AFortVolume* Volume);                               // [0x8fd9d98] Final|Native|Protected 
	// Function /Script/FortniteUI.AthenaWinConditionMsgBase.HandlePlaylistInitialized
	// void HandlePlaylistInitialized();                                                                                        // [0x8fd9b74] Final|Native|Protected 
	// Function /Script/FortniteUI.AthenaWinConditionMsgBase.HandleMinigameEnded
	// void HandleMinigameEnded();                                                                                              // [0x8fd9620] Final|Native|Protected 
	// Function /Script/FortniteUI.AthenaWinConditionMsgBase.HandleGameStateInitialized
	// void HandleGameStateInitialized(AFortGameState* GameState);                                                              // [0x8fd94fc] Final|Native|Protected 
	// Function /Script/FortniteUI.AthenaWinConditionMsgBase.HandleExitVolume
	// void HandleExitVolume(APlayerState* ClientState, AFortVolume* Volume);                                                   // [0x8fd9264] Final|Native|Protected 
	// Function /Script/FortniteUI.AthenaWinConditionMsgBase.HandleEnteredVolume
	// void HandleEnteredVolume(APlayerState* ClientState, AFortVolume* Volume);                                                // [0x8fd90c4] Final|Native|Protected 
	// Function /Script/FortniteUI.AthenaWinConditionMsgBase.GetTextFillColor
	// FSlateColor GetTextFillColor(FRichTextStyleRow& Row);                                                                    // [0x8fd8eec] Final|Native|Protected|HasOutParms|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.AthenaWinConditionMsgBase.BP_OnShowHUDMessage
	// void BP_OnShowHUDMessage(FHUDMessageData MessageData);                                                                   // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaWinConditionMsgBase.BP_OnMinigameEnded
	// void BP_OnMinigameEnded();                                                                                               // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaWinConditionMsgBase.BP_OnGameStateInitialized
	// void BP_OnGameStateInitialized(AFortGameState* GameState);                                                               // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaWinConditionMsgBase.BindVolumeManagerEvents
	// void BindVolumeManagerEvents();                                                                                          // [0x8fd897c] Final|Native|Protected 
};

/// Class /Script/FortniteUI.AthenaWinnerDialogCN
/// Size: 0x0000 (0x0002E8 - 0x0002E8)
class UAthenaWinnerDialogCN : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 744;

public:
};

/// Class /Script/FortniteUI.AthenaZebulonDroneWidgetBase
/// Size: 0x0020 (0x000328 - 0x000348)
class UAthenaZebulonDroneWidgetBase : public UFortHUDElementWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 840;

public:
};

/// Class /Script/FortniteUI.AthenaChallengeCountdownDisplay
/// Size: 0x0120 (0x0002C0 - 0x0003E0)
class UAthenaChallengeCountdownDisplay : public UUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 992;

public:
	SMember(FDateTime)                                 UnlockTime                                                  OFFSET(getStruct<T>, {0x2D0, 8, 0, 0})
	CMember(ECountdownDisplay)                         DisplayType                                                 OFFSET(get<T>, {0x2D8, 1, 0, 0})
	SMember(FTimerDisplayData)                         DisplayData                                                 OFFSET(getStruct<T>, {0x2E0, 224, 0, 0})
	CMember(UCommonTextBlock*)                         Text_TimeRemaining                                          OFFSET(get<T>, {0x3D8, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.AthenaChallengeCountdownDisplay.OnChallengeSet
	// void OnChallengeSet(FTimerDisplayData& DisplayStyle);                                                                    // [0x1d9241c] Event|Public|HasOutParms|BlueprintEvent 
};

/// Class /Script/FortniteUI.AthenaChallengeDateTimeRichTextBlock
/// Size: 0x0070 (0x000870 - 0x0008E0)
class UAthenaChallengeDateTimeRichTextBlock : public UCommonRichTextBlock
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 2272;

public:
	SMember(FText)                                     LabelFormat                                                 OFFSET(getStruct<T>, {0x868, 24, 0, 0})
	DMember(bool)                                      bShowUpperCase                                              OFFSET(get<bool>, {0x880, 1, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.AthenaChallengeDateTimeRichTextBlock.SetTimespanValue
	// void SetTimespanValue(FTimespan InTimespan);                                                                             // [0x8fdc79c] Final|Native|Public|HasDefaults|BlueprintCallable 
	// Function /Script/FortniteUI.AthenaChallengeDateTimeRichTextBlock.SetLabelFormat
	// void SetLabelFormat(FText& InLabelFormat);                                                                               // [0x8fdc3f8] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/FortniteUI.AthenaChallengeDateTimeRichTextBlock.SetDateTimeValue
	// void SetDateTimeValue(FDateTime InDateTime, bool bShowAsCountdown, float InRefreshDelay);                                // [0x8fdbf50] Final|Native|Public|HasDefaults|BlueprintCallable 
	// Function /Script/FortniteUI.AthenaChallengeDateTimeRichTextBlock.SetCountDownCompletionText
	// void SetCountDownCompletionText(FText InCompletionText);                                                                 // [0x8fdbeb4] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.AthenaChallengeDateTimeRichTextBlock.GetDateTime
	// FDateTime GetDateTime();                                                                                                 // [0x8fd8d60] Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/FortniteUI.AthenaChallengeDateTimeTextBlock
/// Size: 0x0020 (0x0003D0 - 0x0003F0)
class UAthenaChallengeDateTimeTextBlock : public UCommonDateTimeTextBlock
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1008;

public:
	SMember(FText)                                     LabelFormat                                                 OFFSET(getStruct<T>, {0x3D0, 24, 0, 0})
	DMember(bool)                                      bShowUpperCase                                              OFFSET(get<bool>, {0x3E8, 1, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.AthenaChallengeDateTimeTextBlock.SetLabelFormat
	// void SetLabelFormat(FText& InLabelFormat);                                                                               // [0x8fdc498] Final|Native|Public|HasOutParms|BlueprintCallable 
};

/// Class /Script/FortniteUI.AthenaChallengeDetailBase
/// Size: 0x0010 (0x0002E8 - 0x0002F8)
class UAthenaChallengeDetailBase : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 760;

public:
	CMember(UFortItemBaseWidget*)                      ItemInfo_PreviewedItem                                      OFFSET(get<T>, {0x2E8, 8, 0, 0})
	CMember(USizeBox*)                                 SB_MainContent                                              OFFSET(get<T>, {0x2F0, 8, 0, 0})
};

/// Class /Script/FortniteUI.AthenaChallengeDisplayData
/// Size: 0x0178 (0x000030 - 0x0001A8)
class UAthenaChallengeDisplayData : public UDataAsset
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 424;

public:
	DMember(int32_t)                                   SoonDisplayMinuteThreshold                                  OFFSET(get<int32_t>, {0x30, 4, 0, 0})
	SMember(FLinearColor)                              PartyAssistFontColor                                        OFFSET(getStruct<T>, {0x34, 16, 0, 0})
	SMember(FLinearColor)                              DifficultChallengeFontColor                                 OFFSET(getStruct<T>, {0x44, 16, 0, 0})
	CMember(UTexture2D*)                               PartyAssistIcon                                             OFFSET(get<T>, {0x58, 8, 0, 0})
	CMember(UTexture2D*)                               ExternalPartyAssistIcon                                     OFFSET(get<T>, {0x60, 8, 0, 0})
	SMember(FFortChallengeSetStyle)                    DefaultChallengeStyle                                       OFFSET(getStruct<T>, {0x68, 144, 0, 0})
	SMember(FFortChallengeSetStyle)                    DailyChallengeStyle                                         OFFSET(getStruct<T>, {0xF8, 144, 0, 0})
	CMember(TArray<FGameplayTagContainer>)             PunchCardSortOrder                                          OFFSET(get<T>, {0x188, 16, 0, 0})
	CMember(TArray<FFortChallengePunchCardStyles>)     ChallengePunchCardStyles                                    OFFSET(get<T>, {0x198, 16, 0, 0})
};

/// Class /Script/FortniteUI.AthenaChallengeDisplayLibrary
/// Size: 0x0000 (0x000028 - 0x000028)
class UAthenaChallengeDisplayLibrary : public UBlueprintFunctionLibrary
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 40;

public:
};

/// Class /Script/FortniteUI.ImageGridObject
/// Size: 0x0018 (0x000028 - 0x000040)
class UImageGridObject : public UObject
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 64;

public:
	DMember(int32_t)                                   GridLocation                                                OFFSET(get<int32_t>, {0x28, 4, 0, 0})
	CMember(UFortChallengeBundleItemDefinition*)       BundleData                                                  OFFSET(get<T>, {0x30, 8, 0, 0})
	CMember(UFortQuestItem*)                           QuestItem                                                   OFFSET(get<T>, {0x38, 8, 0, 0})
};

/// Class /Script/FortniteUI.AthenaChallengeImageGridEntry
/// Size: 0x0050 (0x0014E0 - 0x001530)
class UAthenaChallengeImageGridEntry : public UCommonButtonLegacy
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 5424;

public:
	CMember(UCommonLazyImage*)                         Image_Brush                                                 OFFSET(get<T>, {0x14F8, 8, 0, 0})
	DMember(bool)                                      bSelected                                                   OFFSET(get<bool>, {0x1500, 1, 0, 0})
	DMember(int32_t)                                   GridLocation                                                OFFSET(get<int32_t>, {0x1504, 4, 0, 0})
	DMember(int32_t)                                   Column                                                      OFFSET(get<int32_t>, {0x1508, 4, 0, 0})
	DMember(int32_t)                                   Row                                                         OFFSET(get<int32_t>, {0x150C, 4, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.AthenaChallengeImageGridEntry.TransitionFromOwnedToCompletedState
	// void TransitionFromOwnedToCompletedState();                                                                              // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaChallengeImageGridEntry.TransitionFromLockedToOwnedState
	// void TransitionFromLockedToOwnedState();                                                                                 // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaChallengeImageGridEntry.SetupLockedToOwnState
	// void SetupLockedToOwnState();                                                                                            // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaChallengeImageGridEntry.OnChallengeSet
	// void OnChallengeSet(bool bIsComplete, bool bIsLocked);                                                                   // [0x1d9241c] Event|Public|BlueprintEvent 
};

/// Class /Script/FortniteUI.AthenaChallengeInviteFriendPrompt
/// Size: 0x0008 (0x0002C0 - 0x0002C8)
class UAthenaChallengeInviteFriendPrompt : public UUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 712;

public:
	CMember(URichTextBlock*)                           RichText_InviteFriendMessage                                OFFSET(get<T>, {0x2C0, 8, 0, 0})
};

/// Class /Script/FortniteUI.AthenaChallengeRewardDisplayEntry
/// Size: 0x0010 (0x0002C0 - 0x0002D0)
class UAthenaChallengeRewardDisplayEntry : public UUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 720;

public:
	CMember(UFortLazyImage*)                           LazyImage_RewardIcon                                        OFFSET(get<T>, {0x2C0, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_RewardQuantity                                         OFFSET(get<T>, {0x2C8, 8, 0, 0})
};

/// Class /Script/FortniteUI.AthenaChallengeRewardDisplay
/// Size: 0x0010 (0x0002C0 - 0x0002D0)
class UAthenaChallengeRewardDisplay : public UUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 720;

public:
	CMember(UDynamicEntryBox*)                         EntryBox_Rewards                                            OFFSET(get<T>, {0x2C0, 8, 0, 0})
	CMember(UImage*)                                   Image_CompletionIcon                                        OFFSET(get<T>, {0x2C8, 8, 0, 0})
};

/// Class /Script/FortniteUI.AthenaChallengeListEntryBase
/// Size: 0x0040 (0x0002E8 - 0x000328)
class UAthenaChallengeListEntryBase : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 808;

public:
	CMember(TScriptInterface<Class>)                   EntryContext                                                OFFSET(get<T>, {0x300, 16, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.AthenaChallengeListEntryBase.StartHighlight
	// void StartHighlight();                                                                                                   // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaChallengeListEntryBase.EndHighlight
	// void EndHighlight();                                                                                                     // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaChallengeListEntryBase.BP_OnChallengeInfoSet
	// void BP_OnChallengeInfoSet(bool bDisabled);                                                                              // [0x1d9241c] Event|Public|BlueprintEvent 
};

/// Class /Script/FortniteUI.AthenaChallengeTreeEntry_ChallengeSet
/// Size: 0x0028 (0x000328 - 0x000350)
class UAthenaChallengeTreeEntry_ChallengeSet : public UAthenaChallengeListEntryBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 848;

public:
	CMember(UCommonTextBlock*)                         Text_ChallengeSetName                                       OFFSET(get<T>, {0x338, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_ChallengeSetContext                                    OFFSET(get<T>, {0x340, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_PercentComplete                                        OFFSET(get<T>, {0x348, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.AthenaChallengeTreeEntry_ChallengeSet.OnChallengeSetEstablished
	// void OnChallengeSetEstablished(FFortChallengeSetStyle& DisplayStyle);                                                    // [0x1d9241c] Event|Protected|HasOutParms|BlueprintEvent 
};

/// Class /Script/FortniteUI.AthenaChallengeListEntry_Challenge
/// Size: 0x0028 (0x000328 - 0x000350)
class UAthenaChallengeListEntry_Challenge : public UAthenaChallengeListEntryBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 848;

public:
	DMember(bool)                                      bHideProgressBar                                            OFFSET(get<bool>, {0x338, 1, 0, 0})
	CMember(UCommonRichTextBlock*)                     RichText_ChallengeDesc                                      OFFSET(get<T>, {0x340, 8, 0, 0})
	CMember(UAthenaChallengeProgressBar*)              ChallengeProgress_ObjectivesCompleted                       OFFSET(get<T>, {0x348, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.AthenaChallengeListEntry_Challenge.OnPartyAssistEnabledChanged
	// void OnPartyAssistEnabledChanged(bool bIsPartyAssistEnabled);                                                            // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaChallengeListEntry_Challenge.OnChallengeInfoSet
	// void OnChallengeInfoSet(bool bIsComplete, bool bIsLocked, bool bIsGroupChallenge, bool bCompact, bool HideRewards);      // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaChallengeListEntry_Challenge.GetChallengeWeight
	// int32_t GetChallengeWeight();                                                                                            // [0x8fd8ce0] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.AthenaChallengeListEntry_Challenge.BP_HandleIsTrackedChallengeChanged
	// void BP_HandleIsTrackedChallengeChanged(bool bIsTrackedChallenge);                                                       // [0x1d9241c] Event|Protected|BlueprintEvent 
};

/// Class /Script/FortniteUI.AthenaChallengeListEntry_DetailedChallenge
/// Size: 0x0068 (0x000350 - 0x0003B8)
class UAthenaChallengeListEntry_DetailedChallenge : public UAthenaChallengeListEntry_Challenge
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 952;

public:
	DMember(bool)                                      bHasAnyOptionsAvailable                                     OFFSET(get<bool>, {0x360, 1, 0, 0})
	DMember(bool)                                      bIsDisplayingChallengeActions                               OFFSET(get<bool>, {0x361, 1, 0, 0})
	SMember(FDataTableRowHandle)                       BackAction                                                  OFFSET(getStruct<T>, {0x368, 16, 0, 0})
	SMember(FDataTableRowHandle)                       CloseChallengeOptionsAction                                 OFFSET(getStruct<T>, {0x378, 16, 0, 0})
	CMember(UWidgetAnimation*)                         BoundAnim_ShowChallengeOptions                              OFFSET(get<T>, {0x388, 8, 0, 0})
	CMember(UButton*)                                  SimpleButton_TopClickArea                                   OFFSET(get<T>, {0x390, 8, 0, 0})
	CMember(UAthenaChallengeRewardDisplay*)            Reward_QuestReward                                          OFFSET(get<T>, {0x398, 8, 0, 0})
	CMember(UCommonButtonLegacy*)                      Button_PartyAssist                                          OFFSET(get<T>, {0x3A0, 8, 0, 0})
	CMember(UCommonButtonLegacy*)                      Button_ReplaceChallenge                                     OFFSET(get<T>, {0x3A8, 8, 0, 0})
	CMember(UCommonRichTextBlock*)                     RichText_ActionInfo                                         OFFSET(get<T>, {0x3B0, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.AthenaChallengeListEntry_DetailedChallenge.HandleUpperAreaClicked
	// void HandleUpperAreaClicked();                                                                                           // [0x8fda240] Final|Native|Private 
	// Function /Script/FortniteUI.AthenaChallengeListEntry_DetailedChallenge.HandleCloseChallengeOptionsInputAction
	// void HandleCloseChallengeOptionsInputAction(bool& bPassThrough);                                                         // [0x8fd9024] Final|Native|Private|HasOutParms 
};

/// Class /Script/FortniteUI.AthenaChallengeListEntry_Header
/// Size: 0x0008 (0x000328 - 0x000330)
class UAthenaChallengeListEntry_Header : public UAthenaChallengeListEntryBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 816;

public:
	CMember(UCommonTextBlock*)                         Text_SectionTitle                                           OFFSET(get<T>, {0x328, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.AthenaChallengeListEntry_Header.OnSectionTypeSet
	// void OnSectionTypeSet(EChallengeListSection SectionType);                                                                // [0x1d9241c] Event|Protected|BlueprintEvent 
};

/// Class /Script/FortniteUI.AthenaChallengeListEntry_CompletionReward
/// Size: 0x0018 (0x000328 - 0x000340)
class UAthenaChallengeListEntry_CompletionReward : public UAthenaChallengeListEntryBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 832;

public:
	CMember(UAthenaChallengeRewardDisplay*)            Reward_CompletionReward                                     OFFSET(get<T>, {0x328, 8, 0, 0})
	CMember(UCommonRichTextBlock*)                     RichText_Description                                        OFFSET(get<T>, {0x330, 8, 0, 0})
	CMember(UAthenaChallengeProgressBar*)              ChallengeProgress_ObjectivesCompleted                       OFFSET(get<T>, {0x338, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.AthenaChallengeListEntry_CompletionReward.OnRewardInfoSet
	// void OnRewardInfoSet(bool bIsCompleted, FFortChallengeSetStyle& DisplayStyle);                                           // [0x1d9241c] Event|Protected|HasOutParms|BlueprintEvent 
};

/// Class /Script/FortniteUI.AthenaChallengeListEntry_StoreOffer
/// Size: 0x0040 (0x000328 - 0x000368)
class UAthenaChallengeListEntry_StoreOffer : public UAthenaChallengeListEntryBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 872;

public:
	CMember(TWeakObjectPtr<UClass*>)                   OfferDetailsWidgetClass                                     OFFSET(get<T>, {0x328, 32, 0, 0})
	CMember(UFortStoreFrontOfferInfo*)                 OfferInfo                                                   OFFSET(get<T>, {0x348, 8, 0, 0})
	CMember(UButton*)                                  SimpleButton_ClickArea                                      OFFSET(get<T>, {0x350, 8, 0, 0})
	CMember(UCommonRichTextBlock*)                     RichText_Description                                        OFFSET(get<T>, {0x358, 8, 0, 0})
	CMember(UFortLazyImage*)                           LazyImage_SpecialOffer                                      OFFSET(get<T>, {0x360, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.AthenaChallengeListEntry_StoreOffer.OnOfferSet
	// void OnOfferSet();                                                                                                       // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaChallengeListEntry_StoreOffer.HandleClicked
	// void HandleClicked();                                                                                                    // [0x8fd9010] Final|Native|Protected 
};

/// Class /Script/FortniteUI.AthenaChallengeListEntryControls
/// Size: 0x0018 (0x0002E8 - 0x000300)
class UAthenaChallengeListEntryControls : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 768;

public:
	CMember(UFortCTAButton*)                           Button_ViewPlaylist                                         OFFSET(get<T>, {0x2F8, 8, 0, 0})
};

/// Class /Script/FortniteUI.AthenaChallengeListEntry_Custom
/// Size: 0x0008 (0x000328 - 0x000330)
class UAthenaChallengeListEntry_Custom : public UAthenaChallengeListEntryBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 816;

public:
	CMember(URichTextBlock*)                           RichTextBlock_DisplayText                                   OFFSET(get<T>, {0x328, 8, 0, 0})
};

/// Class /Script/FortniteUI.AthenaChallengeListEntry_PartyUp
/// Size: 0x0000 (0x000328 - 0x000328)
class UAthenaChallengeListEntry_PartyUp : public UAthenaChallengeListEntryBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 808;

public:
};

/// Class /Script/FortniteUI.AthenaChallengeListEntry_AllQuestsComplete
/// Size: 0x0000 (0x000328 - 0x000328)
class UAthenaChallengeListEntry_AllQuestsComplete : public UAthenaChallengeListEntryBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 808;

public:
};

/// Class /Script/FortniteUI.AthenaChallengeListEntry_GoalCard
/// Size: 0x0008 (0x000328 - 0x000330)
class UAthenaChallengeListEntry_GoalCard : public UAthenaChallengeListEntryBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 816;

public:
	CMember(UAthenaGoalsPageQuestCard*)                GoalCard                                                    OFFSET(get<T>, {0x328, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.AthenaChallengeListEntry_GoalCard.OnChallengeDataSet
	// void OnChallengeDataSet(bool bDisabled);                                                                                 // [0x1d9241c] Event|Protected|BlueprintEvent 
};

/// Class /Script/FortniteUI.AthenaChallengeListEntry_LockedQuest
/// Size: 0x0150 (0x000328 - 0x000478)
class UAthenaChallengeListEntry_LockedQuest : public UAthenaChallengeListEntryBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1144;

public:
	CMember(UAthenaChallengeDateTimeRichTextBlock*)    DateTimeRichText_TimeUntilQuestUnlocks                      OFFSET(get<T>, {0x328, 8, 0, 0})
	CMember(URichTextBlock*)                           RichTextBlock_ChallengesUntilUnlocked                       OFFSET(get<T>, {0x330, 8, 0, 0})
	CMember(URichTextBlock*)                           RichTextBlock_TimeUntilUnlocked                             OFFSET(get<T>, {0x338, 8, 0, 0})
	CMember(UAthenaChallengeRewards*)                  UserWidget_Rewards                                          OFFSET(get<T>, {0x340, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_SourceObject                                           OFFSET(get<T>, {0x348, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_RepresentedObject                                      OFFSET(get<T>, {0x350, 8, 0, 0})
	SMember(FText)                                     TimeUntilQuestUnlockCompletionText                          OFFSET(getStruct<T>, {0x358, 24, 0, 0})
	SMember(FLockedQuestRuntimeData)                   LockedQuestData                                             OFFSET(getStruct<T>, {0x370, 256, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.AthenaChallengeListEntry_LockedQuest.OnRewardsPopulated
	// void OnRewardsPopulated(bool bHasRewards);                                                                               // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaChallengeListEntry_LockedQuest.OnInitDisplayText
	// void OnInitDisplayText(ELockedWidgetUnlockType& InUnlockType);                                                           // [0x1d9241c] Event|Protected|HasOutParms|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaChallengeListEntry_LockedQuest.GetTimeSinceEventStart
	// FTimespan GetTimeSinceEventStart();                                                                                      // [0x8fd8f98] Final|Native|Protected|HasDefaults|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.AthenaChallengeListEntry_LockedQuest.GetStartingUnlockTime
	// FTimespan GetStartingUnlockTime();                                                                                       // [0x8fd8ed4] Final|Native|Protected|HasDefaults|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/FortniteUI.AthenaChallengeListEntry_NpcQuest
/// Size: 0x0140 (0x000328 - 0x000468)
class UAthenaChallengeListEntry_NpcQuest : public UAthenaChallengeListEntryBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1128;

public:
	CMember(URichTextBlock*)                           RichText_ChallengeDesc                                      OFFSET(get<T>, {0x330, 8, 0, 0})
	CMember(URichTextBlock*)                           RichText_ObjectivesCompletedSelected                        OFFSET(get<T>, {0x338, 8, 0, 0})
	CMember(URichTextBlock*)                           RichText_ObjectivesCompletedUnselected                      OFFSET(get<T>, {0x340, 8, 0, 0})
	CMember(URichTextBlock*)                           RichText_FlavorText                                         OFFSET(get<T>, {0x348, 8, 0, 0})
	CMember(UAthenaChallengeDateTimeTextBlock*)        DateTimeText_TimeRemaining                                  OFFSET(get<T>, {0x350, 8, 0, 0})
	CMember(USizeBox*)                                 SizeBox_CornerUL                                            OFFSET(get<T>, {0x358, 8, 0, 0})
	CMember(UFortLazyImage*)                           LazyImage_IconUL                                            OFFSET(get<T>, {0x360, 8, 0, 0})
	CMember(UAthenaChallengeRewards*)                  UserWidget_Rewards                                          OFFSET(get<T>, {0x368, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_QuestID                                                OFFSET(get<T>, {0x370, 8, 0, 0})
	CMember(USizeBox*)                                 SizeBox_StyleSize                                           OFFSET(get<T>, {0x378, 8, 0, 0})
	CMember(USizeBox*)                                 SizeBox_PlayerLeftMatch                                     OFFSET(get<T>, {0x380, 8, 0, 0})
	CMember(UAthenaChallengeListEntryControls*)        Panel_ChallengeControls                                     OFFSET(get<T>, {0x388, 8, 0, 0})
	SMember(FText)                                     TextExpiredQuest                                            OFFSET(getStruct<T>, {0x390, 24, 0, 0})
	SMember(FText)                                     TextExpiredQuestFrontEnd                                    OFFSET(getStruct<T>, {0x3A8, 24, 0, 0})
	CMember(TWeakObjectPtr<UObject*>)                  DefaultPortraitDisplayAsset                                 OFFSET(get<T>, {0x3C0, 32, 0, 0})
	CMember(TWeakObjectPtr<UObject*>)                  PinnedQuestIcon                                             OFFSET(get<T>, {0x3E0, 32, 0, 0})
	CMember(TWeakObjectPtr<UObject*>)                  SharedQuestIcon                                             OFFSET(get<T>, {0x400, 32, 0, 0})
	CMember(UHorizontalBox*)                           HorizontalBox_DefaultWidgetsRoot                            OFFSET(get<T>, {0x438, 8, 0, 0})
	CMember(EChallengeListEntryType)                   EntryType                                                   OFFSET(get<T>, {0x440, 1, 0, 0})
	DMember(bool)                                      bBangsOnUnseenSuppressed                                    OFFSET(get<bool>, {0x460, 1, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.AthenaChallengeListEntry_NpcQuest.UpdateIconUL
	// void UpdateIconUL(FAthenaPinnedQuestData& PinnedQuestData);                                                              // [0x8fdc9f0] Final|Native|Private|HasOutParms 
	// Function /Script/FortniteUI.AthenaChallengeListEntry_NpcQuest.OnSetState
	// void OnSetState(bool bIsCompleted, bool bIsLocked, bool bIsPartyAssisted);                                               // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaChallengeListEntry_NpcQuest.IsSelected
	// bool IsSelected();                                                                                                       // [0x81facf8] Final|Native|Private|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.AthenaChallengeListEntry_NpcQuest.IsChallengeRefreshingDaily
	// bool IsChallengeRefreshingDaily();                                                                                       // [0x157163c] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.AthenaChallengeListEntry_NpcQuest.HasVisibleRewards
	// bool HasVisibleRewards();                                                                                                // [0x2ebac18] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.AthenaChallengeListEntry_NpcQuest.HandleViewPlaylistButtonClicked
	// void HandleViewPlaylistButtonClicked();                                                                                  // [0x8fda254] Final|Native|Private 
	// Function /Script/FortniteUI.AthenaChallengeListEntry_NpcQuest.HandleQuestSeen
	// void HandleQuestSeen(UFortAccountItem* AccountItem);                                                                     // [0x8fd9c84] Final|Native|Private 
	// Function /Script/FortniteUI.AthenaChallengeListEntry_NpcQuest.HandleObjectiveUpdate
	// void HandleObjectiveUpdate(UFortQuestItem* QuestItem, FName Objective, int32_t AchievedCount, int32_t GoalCount);        // [0x8fd9794] Final|Native|Private 
	// Function /Script/FortniteUI.AthenaChallengeListEntry_NpcQuest.GetIsCompleted
	// bool GetIsCompleted();                                                                                                   // [0x308e37c] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.AthenaChallengeListEntry_NpcQuest.BP_OnTimerSet
	// void BP_OnTimerSet(EAthenaChallengeTimerState TimerState);                                                               // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaChallengeListEntry_NpcQuest.BP_OnSelectedForQuestReplacing
	// void BP_OnSelectedForQuestReplacing(bool bSelected);                                                                     // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaChallengeListEntry_NpcQuest.BP_OnRaritySet
	// void BP_OnRaritySet(EFortRarity Rarity);                                                                                 // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaChallengeListEntry_NpcQuest.BP_OnQuestGiverIconSet
	// void BP_OnQuestGiverIconSet(UObject* QuestIcon);                                                                         // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaChallengeListEntry_NpcQuest.BP_OnChallengeSeenChanged
	// void BP_OnChallengeSeenChanged(bool bChallengeSeen);                                                                     // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaChallengeListEntry_NpcQuest.BP_FormatForChallengeOwnerLeftGame
	// void BP_FormatForChallengeOwnerLeftGame(bool bHasOwnerLeftGame);                                                         // [0x1d9241c] Event|Protected|BlueprintEvent 
};

/// Class /Script/FortniteUI.AthenaChallengeListViewBase
/// Size: 0x0118 (0x000298 - 0x0003B0)
class UAthenaChallengeListViewBase : public UListViewBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 944;

public:
	CMember(UAthenaQuestEntryVisualData*)              VisualData                                                  OFFSET(get<T>, {0x380, 8, 0, 0})
	DMember(float)                                     EntrySpacing                                                OFFSET(get<float>, {0x3A8, 4, 0, 0})
};

/// Class /Script/FortniteUI.AthenaChallengeNpcQuestCounter
/// Size: 0x0070 (0x0002C0 - 0x000330)
class UAthenaChallengeNpcQuestCounter : public UUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 816;

public:
	SMember(FGameplayTagContainer)                     ExcludedTabs                                                OFFSET(getStruct<T>, {0x2C0, 32, 0, 0})
	SMember(FText)                                     Text_PartyTab                                               OFFSET(getStruct<T>, {0x2E0, 24, 0, 0})
	SMember(FText)                                     Text_PersonalTab                                            OFFSET(getStruct<T>, {0x2F8, 24, 0, 0})
	CMember(URichTextBlock*)                           RichText_HeaderDesc                                         OFFSET(get<T>, {0x318, 8, 0, 0})
	CMember(URichTextBlock*)                           RichText_MaxQuests                                          OFFSET(get<T>, {0x320, 8, 0, 0})
	CMember(URichTextBlock*)                           RichText_NumActiveQuests                                    OFFSET(get<T>, {0x328, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.AthenaChallengeNpcQuestCounter.UpdateVisibility
	// void UpdateVisibility(FGameplayTag& CurrentTabTag);                                                                      // [0x902c95c] Final|Native|Public|HasOutParms 
	// Function /Script/FortniteUI.AthenaChallengeNpcQuestCounter.HandleTransientQuestStarted
	// void HandleTransientQuestStarted(UFortQuestItem* QuestItem, UFortQuestItemDefinition_Athena* PreceedingQuestDefAthena);  // [0x902ac74] Final|Native|Private 
	// Function /Script/FortniteUI.AthenaChallengeNpcQuestCounter.HandleTransientQuestRemoved
	// void HandleTransientQuestRemoved(UFortQuestItem* QuestItem);                                                             // [0x902abf4] Final|Native|Private 
	// Function /Script/FortniteUI.AthenaChallengeNpcQuestCounter.HandleQuestUpdate
	// void HandleQuestUpdate(UFortQuestObjectiveInfo* QuestObjective, bool bDisplayStatusUpdate, bool bDisplayAnnouncementUpdate); // [0x902a6dc] Final|Native|Private 
};

/// Class /Script/FortniteUI.AthenaChallengeNpcQuestListView
/// Size: 0x0030 (0x0003B0 - 0x0003E0)
class UAthenaChallengeNpcQuestListView : public UAthenaChallengeListViewBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 992;

public:
};

/// Class /Script/FortniteUI.AthenaChallengeProgressBar
/// Size: 0x0018 (0x0002C0 - 0x0002D8)
class UAthenaChallengeProgressBar : public UUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 728;

public:
	DMember(bool)                                      bHideProgressBar                                            OFFSET(get<bool>, {0x2C0, 1, 0, 0})
	CMember(UProgressBar*)                             ProgressBar_StepsCompleted                                  OFFSET(get<T>, {0x2C8, 8, 0, 0})
	CMember(UCommonRichTextBlock*)                     RichText_Progress                                           OFFSET(get<T>, {0x2D0, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.AthenaChallengeProgressBar.SetPercentValueForMaterialNumber
	// void SetPercentValueForMaterialNumber(int32_t PercentValue);                                                             // [0x1d9241c] Event|Public|BlueprintEvent 
};

/// Class /Script/FortniteUI.AthenaChallengePunchCard
/// Size: 0x0068 (0x0002E8 - 0x000350)
class UAthenaChallengePunchCard : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 848;

public:
	DMember(int32_t)                                   MaxPunchesAllowed                                           OFFSET(get<int32_t>, {0x2E8, 4, 0, 0})
	CMember(UDynamicEntryBox*)                         Box_PunchSlots                                              OFFSET(get<T>, {0x2F0, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_Title                                                  OFFSET(get<T>, {0x2F8, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_Description                                            OFFSET(get<T>, {0x300, 8, 0, 0})
	DMember(bool)                                      bInitializedWidgetPool                                      OFFSET(get<bool>, {0x338, 1, 0, 0})
	DMember(bool)                                      bBundleIsKnown                                              OFFSET(get<bool>, {0x339, 1, 0, 0})
	DMember(bool)                                      bBangShown                                                  OFFSET(get<bool>, {0x33A, 1, 0, 0})
	CMember(TWeakObjectPtr<UFortChallengeBundleItemDefinition*>) WeakBundleDef                                     OFFSET(get<T>, {0x33C, 8, 0, 0})
	SMember(FDateTime)                                 MostRecentPunch                                             OFFSET(getStruct<T>, {0x348, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.AthenaChallengePunchCard.UpdateChallengePunchCard
	// void UpdateChallengePunchCard(UFortChallengeBundleItem* Bundle, UFortQuestItem* CopmpletedQuest);                        // [0x902c898] Final|Native|Public  
	// Function /Script/FortniteUI.AthenaChallengePunchCard.UnfocusPunchCard
	// void UnfocusPunchCard();                                                                                                 // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaChallengePunchCard.TryToClearBangState
	// void TryToClearBangState();                                                                                              // [0x902c804] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.AthenaChallengePunchCard.ShowWidget
	// void ShowWidget();                                                                                                       // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaChallengePunchCard.SetUpEncodedName
	// void SetUpEncodedName(FString Name, int32_t Count);                                                                      // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaChallengePunchCard.SetUnkownState
	// void SetUnkownState(bool bKnown);                                                                                        // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaChallengePunchCard.SetStyle
	// void SetStyle(FFortChallengePunchCardStyles& PunchStyle);                                                                // [0x1d9241c] Event|Public|HasOutParms|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaChallengePunchCard.SetProgressCount
	// void SetProgressCount(int32_t AchivedCount, int32_t GoalCount);                                                          // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaChallengePunchCard.SetBangState
	// void SetBangState(bool bShowBang);                                                                                       // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaChallengePunchCard.HideProgressCount
	// void HideProgressCount(bool bBundleCompleted);                                                                           // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaChallengePunchCard.FocusPunchCard
	// void FocusPunchCard();                                                                                                   // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaChallengePunchCard.FinishedPunchingCard
	// void FinishedPunchingCard(bool bPlayOutro);                                                                              // [0x1d9241c] Event|Public|BlueprintEvent 
};

/// Class /Script/FortniteUI.AthenaChallengePunchCardEntry
/// Size: 0x0040 (0x0002E8 - 0x000328)
class UAthenaChallengePunchCardEntry : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 808;

public:
	SMember(FName)                                     IconParamName                                               OFFSET(getStruct<T>, {0x2E8, 4, 0, 0})
	DMember(int32_t)                                   SlotIndex                                                   OFFSET(get<int32_t>, {0x2EC, 4, 0, 0})
	DMember(bool)                                      bIsBeingPlaced                                              OFFSET(get<bool>, {0x2F0, 1, 0, 0})
	CMember(UCommonTextBlock*)                         Text_RewardQuantity                                         OFFSET(get<T>, {0x310, 8, 0, 0})
	CMember(UCommonRichTextBlock*)                     Text_UnlockDate                                             OFFSET(get<T>, {0x318, 8, 0, 0})
	CMember(UFortLazyImage*)                           LazyImage_Stamp                                             OFFSET(get<T>, {0x320, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.AthenaChallengePunchCardEntry.SetToDefaultSlot
	// void SetToDefaultSlot();                                                                                                 // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaChallengePunchCardEntry.SetStyle
	// void SetStyle(FFortChallengePunchCardStyles& PunchStyle);                                                                // [0x1d9241c] Event|Public|HasOutParms|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaChallengePunchCardEntry.SetIsNonsequentialSlot
	// void SetIsNonsequentialSlot();                                                                                           // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaChallengePunchCardEntry.SetIsLastSlot
	// void SetIsLastSlot();                                                                                                    // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaChallengePunchCardEntry.SetIsFirstSlot
	// void SetIsFirstSlot();                                                                                                   // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaChallengePunchCardEntry.OnPlacedEntry
	// void OnPlacedEntry();                                                                                                    // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaChallengePunchCardEntry.OnFinishedPlacingEntry
	// void OnFinishedPlacingEntry();                                                                                           // [0x902b3c0] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/FortniteUI.AthenaChallengeRecapEntry
/// Size: 0x0060 (0x0002E8 - 0x000348)
class UAthenaChallengeRecapEntry : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 840;

public:
	CMember(UCommonTextBlock*)                         Text_QuestObjective                                         OFFSET(get<T>, {0x330, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_CompletionCount                                        OFFSET(get<T>, {0x338, 8, 0, 0})
	CMember(UWidgetSwitcher*)                          Switcher_Progression                                        OFFSET(get<T>, {0x340, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.AthenaChallengeRecapEntry.UpdateProgressBar
	// void UpdateProgressBar(float StartingPercent, float EndingPercent);                                                      // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaChallengeRecapEntry.StartOutroAnim
	// void StartOutroAnim();                                                                                                   // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaChallengeRecapEntry.StartIntroAnim
	// void StartIntroAnim();                                                                                                   // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaChallengeRecapEntry.OutroFinished
	// void OutroFinished();                                                                                                    // [0x902bd58] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.AthenaChallengeRecapEntry.IntroFinished
	// void IntroFinished();                                                                                                    // [0x902ad4c] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/FortniteUI.AthenaChallengeRewardItem
/// Size: 0x0020 (0x0002C0 - 0x0002E0)
class UAthenaChallengeRewardItem : public UUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 736;

public:
	CMember(UFortLazyImage*)                           LazyImage_RewardIcon                                        OFFSET(get<T>, {0x2C0, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_RewardCount                                            OFFSET(get<T>, {0x2C8, 8, 0, 0})
	CMember(UImage*)                                   Image_RewardBacking                                         OFFSET(get<T>, {0x2D0, 8, 0, 0})
	CMember(UPanelWidget*)                             Panel_Lock                                                  OFFSET(get<T>, {0x2D8, 8, 0, 0})
};

/// Class /Script/FortniteUI.AthenaChallengeRewards
/// Size: 0x0138 (0x0002C0 - 0x0003F8)
class UAthenaChallengeRewards : public UUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1016;

public:
	DMember(bool)                                      bEnableRewardCountText                                      OFFSET(get<bool>, {0x2C8, 1, 0, 0})
	CMember(ESlateVisibility)                          DisabledVisibility                                          OFFSET(get<T>, {0x2C9, 1, 0, 0})
	CMember(TWeakObjectPtr<UClass*>)                   ItemRewardWidgetClass                                       OFFSET(get<T>, {0x2D0, 32, 0, 0})
	CMember(TMap<UClass*, TWeakObjectPtr>)             CustomRewardWidgetClassesDictionary                         OFFSET(get<T>, {0x2F0, 80, 0, 0})
	CMember(UOverlay*)                                 ItemContainer                                               OFFSET(get<T>, {0x340, 8, 0, 0})
	CMember(UFortDynamicEntryBox*)                     DynamicBox_MultiMarkers                                     OFFSET(get<T>, {0x348, 8, 0, 0})
	CMember(TArray<UUserWidget*>)                      CarouselWidgets                                             OFFSET(get<T>, {0x358, 16, 0, 0})
	SMember(FUserWidgetPool)                           RewardWidgetsPool                                           OFFSET(getStruct<T>, {0x368, 136, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.AthenaChallengeRewards.SetIsSelected
	// void SetIsSelected(bool bIsSelected);                                                                                    // [0x902c46c] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/FortniteUI.AthenaChallengeRewardsMultiMarker
/// Size: 0x0000 (0x0002C0 - 0x0002C0)
class UAthenaChallengeRewardsMultiMarker : public UUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 704;

public:
};

/// Class /Script/FortniteUI.AthenaChallengeRewardSurvivorBadge
/// Size: 0x0008 (0x0002C0 - 0x0002C8)
class UAthenaChallengeRewardSurvivorBadge : public UAthenaChallengeComponentWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 712;

public:
	CMember(UFortAthenaSurvivorTierBadge*)             SurvivorTierBadge                                           OFFSET(get<T>, {0x2C0, 8, 0, 0})
};

/// Class /Script/FortniteUI.AthenaChallengeRewardTrackEntry
/// Size: 0x0060 (0x0002E8 - 0x000348)
class UAthenaChallengeRewardTrackEntry : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 840;

public:
	SMember(FName)                                     MissionRewardParamName                                      OFFSET(getStruct<T>, {0x2E8, 4, 0, 0})
	CMember(TWeakObjectPtr<UFortItemDefinition*>)      RewardToRepresent                                           OFFSET(get<T>, {0x2F0, 32, 0, 0})
	DMember(int32_t)                                   BundleRewardIndex                                           OFFSET(get<int32_t>, {0x310, 4, 0, 0})
	CMember(UImage*)                                   Image_ConnectorLeft                                         OFFSET(get<T>, {0x318, 8, 0, 0})
	CMember(UImage*)                                   Image_ConnectorRight                                        OFFSET(get<T>, {0x320, 8, 0, 0})
	CMember(UAthenaChallengeRewardDisplayEntry*)       MissionReward                                               OFFSET(get<T>, {0x328, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.AthenaChallengeRewardTrackEntry.StyleChange
	// void StyleChange(bool bViewingPrestige);                                                                                 // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaChallengeRewardTrackEntry.SetToDefaultState
	// void SetToDefaultState();                                                                                                // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaChallengeRewardTrackEntry.SetLastNodeInTrack
	// void SetLastNodeInTrack(bool bIsLast);                                                                                   // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaChallengeRewardTrackEntry.SetAsCurrentPreviewItem
	// void SetAsCurrentPreviewItem();                                                                                          // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaChallengeRewardTrackEntry.NextRewardToEarn
	// void NextRewardToEarn(bool bNext);                                                                                       // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaChallengeRewardTrackEntry.CompletedNextNode
	// void CompletedNextNode(bool bAnimate);                                                                                   // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaChallengeRewardTrackEntry.CompletedCurrentNode
	// void CompletedCurrentNode(bool bAnimate, bool LastReward);                                                               // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaChallengeRewardTrackEntry.ClearPreviewSelection
	// void ClearPreviewSelection();                                                                                            // [0x1d9241c] Event|Public|BlueprintEvent 
};

/// Class /Script/FortniteUI.AthenaChallengeSetListView
/// Size: 0x0058 (0x0003B0 - 0x000408)
class UAthenaChallengeSetListView : public UAthenaChallengeListViewBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1032;

public:
	SMember(FAthenaChallengeListVisualOptions)         ListVisualOptions                                           OFFSET(getStruct<T>, {0x3B0, 12, 0, 0})
	DMember(bool)                                      bHideHeaders                                                OFFSET(get<bool>, {0x3BC, 1, 0, 0})
	DMember(bool)                                      bHideCompletionRewards                                      OFFSET(get<bool>, {0x3BD, 1, 0, 0})
	DMember(bool)                                      bHideQuestRewards                                           OFFSET(get<bool>, {0x3BE, 1, 0, 0})
	DMember(bool)                                      bUseCompactActionInfo                                       OFFSET(get<bool>, {0x3BF, 1, 0, 0})
	DMember(bool)                                      bAllowFocus                                                 OFFSET(get<bool>, {0x3C0, 1, 0, 0})
	CMember(UClass*)                                   SectionHeaderEntryClass                                     OFFSET(get<T>, {0x3F0, 8, 0, 0})
	CMember(UClass*)                                   CompletionRewardEntryClass                                  OFFSET(get<T>, {0x3F8, 8, 0, 0})
	CMember(UClass*)                                   SpecialOfferEntryClass                                      OFFSET(get<T>, {0x400, 8, 0, 0})
};

/// Class /Script/FortniteUI.AthenaChallengeTreeView
/// Size: 0x0080 (0x0003B0 - 0x000430)
class UAthenaChallengeTreeView : public UAthenaChallengeListViewBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1072;

public:
	CMember(UClass*)                                   SetHeaderEntryClass                                         OFFSET(get<T>, {0x420, 8, 0, 0})
	DMember(bool)                                      bReturnFocusToSelection                                     OFFSET(get<bool>, {0x428, 1, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.AthenaChallengeTreeView.HandleQuestsUpdated
	// void HandleQuestsUpdated();                                                                                              // [0x902a7cc] Final|Native|Private 
};

/// Class /Script/FortniteUI.AthenaGroupChallengeTag
/// Size: 0x0008 (0x0002C0 - 0x0002C8)
class UAthenaGroupChallengeTag : public UUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 712;

public:
	CMember(UWidgetAnimation*)                         Anim_Flash                                                  OFFSET(get<T>, {0x2C0, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.AthenaGroupChallengeTag.HandleOnToggleFullScreenMap
	// void HandleOnToggleFullScreenMap(bool bIsMapVisible);                                                                    // [0x902a65c] Final|Native|Private 
};

/// Class /Script/FortniteUI.AthenaMiniChallengeEntry
/// Size: 0x0068 (0x0002E8 - 0x000350)
class UAthenaMiniChallengeEntry : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 848;

public:
	CMember(UFortLazyImage*)                           QuestIcon                                                   OFFSET(get<T>, {0x2E8, 8, 0, 0})
	CMember(UFortQuestItemDefinition*)                 QuestDef                                                    OFFSET(get<T>, {0x2F0, 8, 0, 0})
	CMember(UFortQuestItemDefinition*)                 PendingQuestDef                                             OFFSET(get<T>, {0x2F8, 8, 0, 0})
	DMember(int32_t)                                   DisplayGoal                                                 OFFSET(get<int32_t>, {0x300, 4, 0, 0})
	DMember(int32_t)                                   DisplayAchivedCount                                         OFFSET(get<int32_t>, {0x304, 4, 0, 0})
	DMember(int32_t)                                   PendingGoalCount                                            OFFSET(get<int32_t>, {0x308, 4, 0, 0})
	DMember(int32_t)                                   PendingLastKnown                                            OFFSET(get<int32_t>, {0x30C, 4, 0, 0})
	DMember(int32_t)                                   PendingAchivedCount                                         OFFSET(get<int32_t>, {0x310, 4, 0, 0})
	DMember(int32_t)                                   PendingXpValue                                              OFFSET(get<int32_t>, {0x314, 4, 0, 0})
	DMember(bool)                                      bPendingUpdate                                              OFFSET(get<bool>, {0x318, 1, 0, 0})
	DMember(bool)                                      bIsFirstTimeBoosted                                         OFFSET(get<bool>, {0x319, 1, 0, 0})
	SMember(FName)                                     ParamName                                                   OFFSET(getStruct<T>, {0x31C, 4, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.AthenaMiniChallengeEntry.UpdateQuestDescription
	// void UpdateQuestDescription(FText& Description);                                                                         // [0x1d9241c] Event|Public|HasOutParms|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaMiniChallengeEntry.UpdateProgressBar
	// void UpdateProgressBar(int32_t LastKnownCount, int32_t AchivedCount, int32_t GoalCount);                                 // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaMiniChallengeEntry.TriggerNewQuestGranted
	// void TriggerNewQuestGranted();                                                                                           // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaMiniChallengeEntry.SetXpValue
	// void SetXpValue(int32_t XpRewardValue);                                                                                  // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaMiniChallengeEntry.RefeshWithNewQuest
	// void RefeshWithNewQuest();                                                                                               // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaMiniChallengeEntry.QuestCompletedFinishFill
	// void QuestCompletedFinishFill();                                                                                         // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaMiniChallengeEntry.FinishedQuestUpdate
	// void FinishedQuestUpdate();                                                                                              // [0x90292f8] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/FortniteUI.AthenaMiniChallenges
/// Size: 0x0030 (0x000400 - 0x000430)
class UAthenaMiniChallenges : public UCommonActivatableWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1072;

public:
	CMember(UDynamicEntryBox*)                         EntryBox_MiniChallenges                                     OFFSET(get<T>, {0x400, 8, 0, 0})
	DMember(bool)                                      bPlacedAtEndOfMatch                                         OFFSET(get<bool>, {0x408, 1, 0, 0})
	DMember(int32_t)                                   UpdatingWidgets                                             OFFSET(get<int32_t>, {0x428, 4, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.AthenaMiniChallenges.InspectModeEnabled
	// void InspectModeEnabled(bool bEnabled);                                                                                  // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaMiniChallenges.ClearQuestDescriptions
	// void ClearQuestDescriptions();                                                                                           // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaMiniChallenges.AddQuestDetails
	// void AddQuestDetails(FText& QuestDescription, int32_t AchivedCount, int32_t GoalCount);                                  // [0x1d9241c] Event|Public|HasOutParms|BlueprintEvent 
};

/// Class /Script/FortniteUI.AthenaQuestEntryVisualData
/// Size: 0x0050 (0x000030 - 0x000080)
class UAthenaQuestEntryVisualData : public UDataAsset
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 128;

public:
	CMember(TMap<EChallengeListEntryType, FQuestEntryVisualData>) EntryWidgetData                                  OFFSET(get<T>, {0x30, 80, 0, 0})
};

/// Class /Script/FortniteUI.EndOfMatchQuestCategoryWidget
/// Size: 0x0050 (0x0002E8 - 0x000338)
class UEndOfMatchQuestCategoryWidget : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 824;

public:
	CMember(UWidgetSwitcher*)                          Switcher_CategoryType                                       OFFSET(get<T>, {0x2F8, 8, 0, 0})
	CMember(USizeBox*)                                 EntryBox_SizeBox                                            OFFSET(get<T>, {0x300, 8, 0, 0})
	CMember(UDynamicEntryBox*)                         EntryBox_QuestUpdates                                       OFFSET(get<T>, {0x308, 8, 0, 0})
	CMember(TArray<UEndOfMatchQuestEntryWidget*>)      QuestWidgetsToShow                                          OFFSET(get<T>, {0x310, 16, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.EndOfMatchQuestCategoryWidget.StartMoveEntriesDown
	// void StartMoveEntriesDown(UEndOfMatchQuestEntryWidget* NextWidget);                                                      // [0x902c680] Final|Native|Private 
	// Function /Script/FortniteUI.EndOfMatchQuestCategoryWidget.StartFirstEntryIntro
	// void StartFirstEntryIntro();                                                                                             // [0x902c66c] Final|Native|Private 
	// Function /Script/FortniteUI.EndOfMatchQuestCategoryWidget.ShowNextUpdate
	// void ShowNextUpdate();                                                                                                   // [0x902c5b8] Final|Native|Private 
	// Function /Script/FortniteUI.EndOfMatchQuestCategoryWidget.MoveAllEntriesDown
	// void MoveAllEntriesDown();                                                                                               // [0x902af18] Final|Native|Private 
};

/// Class /Script/FortniteUI.EndOfMatchQuestEntryWidget
/// Size: 0x0040 (0x0002E8 - 0x000328)
class UEndOfMatchQuestEntryWidget : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 808;

public:
	SMember(FMulticastInlineDelegate)                  OnEndOfMatchQuestIntroFinishedDelegate                      OFFSET(getStruct<T>, {0x2E8, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnEndOfMatchQuestMoveDownFinishedDelegate                   OFFSET(getStruct<T>, {0x2F8, 16, 0, 0})
	DMember(float)                                     MoveDownDuration                                            OFFSET(get<float>, {0x308, 4, 0, 0})
	CMember(UFortNotificationEntry_Quest*)             QuestNotification                                           OFFSET(get<T>, {0x310, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.EndOfMatchQuestEntryWidget.OnEndOfMatchQuestMoveDownFinished__DelegateSignature
	// void OnEndOfMatchQuestMoveDownFinished__DelegateSignature();                                                             // [0x1d9241c] MulticastDelegate|Public|Delegate 
	// Function /Script/FortniteUI.EndOfMatchQuestEntryWidget.OnEndOfMatchQuestCreateFinished__DelegateSignature
	// void OnEndOfMatchQuestCreateFinished__DelegateSignature();                                                               // [0x1d9241c] MulticastDelegate|Public|Delegate 
	// Function /Script/FortniteUI.EndOfMatchQuestEntryWidget.HandleNotificationDisplayed
	// void HandleNotificationDisplayed();                                                                                      // [0x902a648] Final|Native|Private 
	// Function /Script/FortniteUI.EndOfMatchQuestEntryWidget.HandleMoveDownFinished
	// void HandleMoveDownFinished();                                                                                           // [0x902a62c] Final|Native|Protected|BlueprintCallable 
};

/// Class /Script/FortniteUI.EndOfMatchQuestUpdateWidget
/// Size: 0x00D8 (0x0002E8 - 0x0003C0)
class UEndOfMatchQuestUpdateWidget : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 960;

public:
	CMember(TArray<FQuestRecapData>)                   QuestUpdates                                                OFFSET(get<T>, {0x300, 16, 0, 0})
	CMember(TArray<UEndOfMatchQuestCategoryWidget*>)   CreatedWidgets                                              OFFSET(get<T>, {0x310, 16, 0, 0})
	DMember(int32_t)                                   MaxNumQuestWidgets                                          OFFSET(get<int32_t>, {0x320, 4, 0, 0})
	SMember(FGameplayTagContainer)                     InclusiveFilterTags                                         OFFSET(getStruct<T>, {0x328, 32, 0, 0})
	SMember(FGameplayTagContainer)                     ExclusiveFilterTags                                         OFFSET(getStruct<T>, {0x348, 32, 0, 0})
	CMember(UDynamicEntryBox*)                         EntryBox_QuestUpdates                                       OFFSET(get<T>, {0x368, 8, 0, 0})
	CMember(UScrollBox*)                               ScrollBox_Quest                                             OFFSET(get<T>, {0x370, 8, 0, 0})
	CMember(UEndOfMatchQuestCategoryWidget*)           InProgressCategoryEntryWidget                               OFFSET(get<T>, {0x3B0, 8, 0, 0})
	CMember(UEndOfMatchQuestCategoryWidget*)           CompletedCategoryEntryWidget                                OFFSET(get<T>, {0x3B8, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.EndOfMatchQuestUpdateWidget.TryToShowNextQuestUpdate
	// void TryToShowNextQuestUpdate(bool bShouldStartShowingQuests);                                                           // [0x902c818] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.EndOfMatchQuestUpdateWidget.TryPlayCreatedWidgets
	// void TryPlayCreatedWidgets();                                                                                            // [0x902c7f0] Final|Native|Protected 
	// Function /Script/FortniteUI.EndOfMatchQuestUpdateWidget.StartCategoryPlay
	// void StartCategoryPlay(UEndOfMatchQuestCategoryWidget* CategoryWidget);                                                  // [0x902c5cc] Final|Native|Private 
	// Function /Script/FortniteUI.EndOfMatchQuestUpdateWidget.RunIntroAnim
	// void RunIntroAnim();                                                                                                     // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.EndOfMatchQuestUpdateWidget.QuestUpdated
	// void QuestUpdated(UFortQuestItem* InUpdateData);                                                                         // [0x902c074] Final|Native|Public  
	// Function /Script/FortniteUI.EndOfMatchQuestUpdateWidget.QuestUpdateCompleted
	// void QuestUpdateCompleted(UAthenaChallengeRecapEntry* EntryWidget);                                                      // [0x902bd74] Final|Native|Protected 
	// Function /Script/FortniteUI.EndOfMatchQuestUpdateWidget.HandleTileFocused
	// void HandleTileFocused(UCommonUserWidget* QuestEntry);                                                                   // [0x902ab60] Final|Native|Protected 
	// Function /Script/FortniteUI.EndOfMatchQuestUpdateWidget.FinishedUpdateingQuests
	// void FinishedUpdateingQuests();                                                                                          // [0x1d9241c] Event|Public|BlueprintEvent 
};

/// Class /Script/FortniteUI.FortInGameChallengeScreen
/// Size: 0x0008 (0x000538 - 0x000540)
class UFortInGameChallengeScreen : public UCommonActivatablePanelLegacy
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1344;

public:
	CMember(UAthenaChallengeTreeView*)                 TreeView_Challenges                                         OFFSET(get<T>, {0x538, 8, 0, 0})
};

/// Class /Script/FortniteUI.AthenaCollectionLeaderboard
/// Size: 0x0038 (0x000400 - 0x000438)
class UAthenaCollectionLeaderboard : public UCommonActivatableWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1080;

public:
	DMember(float)                                     LeaderboardScrollSpeed                                      OFFSET(get<float>, {0x400, 4, 0, 0})
	DMember(float)                                     LeaderboardScrollInitialDelay                               OFFSET(get<float>, {0x404, 4, 0, 0})
	CMember(UScrollBox*)                               ScrollBox_Leaderboard                                       OFFSET(get<T>, {0x408, 8, 0, 0})
	CMember(UDynamicEntryBox*)                         EntryBox_Leaderboard                                        OFFSET(get<T>, {0x410, 8, 0, 0})
};

/// Class /Script/FortniteUI.AthenaCollectionOverlayEntry
/// Size: 0x0020 (0x0002E8 - 0x000308)
class UAthenaCollectionOverlayEntry : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 776;

public:
	SMember(FText)                                     EmptyDisplayNameText                                        OFFSET(getStruct<T>, {0x2E8, 24, 0, 0})
	CMember(UCommonTextBlock*)                         Text_DisplayName                                            OFFSET(get<T>, {0x300, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.AthenaCollectionOverlayEntry.BP_OnDisplayNameSet
	// void BP_OnDisplayNameSet(FString DisplayName);                                                                           // [0x1d9241c] Event|Public|BlueprintEvent 
};

/// Class /Script/FortniteUI.AthenaCollectionLeaderboardEntry
/// Size: 0x0040 (0x000308 - 0x000348)
class UAthenaCollectionLeaderboardEntry : public UAthenaCollectionOverlayEntry
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 840;

public:
	SMember(FText)                                     ValueTextFormat                                             OFFSET(getStruct<T>, {0x308, 24, 0, 0})
	DMember(int32_t)                                   ValueMinimumFractionalDigits                                OFFSET(get<int32_t>, {0x320, 4, 0, 0})
	DMember(int32_t)                                   ValueMaximumFractionalDigits                                OFFSET(get<int32_t>, {0x324, 4, 0, 0})
	DMember(bool)                                      bValueIsFloat                                               OFFSET(get<bool>, {0x328, 1, 0, 0})
	CMember(UCommonTextBlock*)                         Text_Placement                                              OFFSET(get<T>, {0x330, 8, 0, 0})
	CMember(UCommonRichTextBlock*)                     RichText_Value                                              OFFSET(get<T>, {0x338, 8, 0, 0})
	CMember(UFortSocialAvatarIcon*)                    AvatarIcon                                                  OFFSET(get<T>, {0x340, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.AthenaCollectionLeaderboardEntry.BP_OnValueSet
	// void BP_OnValueSet(float Value);                                                                                         // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaCollectionLeaderboardEntry.BP_OnPlacementSet
	// void BP_OnPlacementSet(int32_t Placement);                                                                               // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaCollectionLeaderboardEntry.BP_OnLeaderboardEntryReset
	// void BP_OnLeaderboardEntryReset();                                                                                       // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaCollectionLeaderboardEntry.BP_OnLeaderboardEntryInitialized
	// void BP_OnLeaderboardEntryInitialized(bool bIsLocalPlayer);                                                              // [0x1d9241c] Event|Protected|BlueprintEvent 
};

/// Class /Script/FortniteUI.AthenaCollectionLeaderboardEntryFishing
/// Size: 0x0010 (0x000348 - 0x000358)
class UAthenaCollectionLeaderboardEntryFishing : public UAthenaCollectionLeaderboardEntry
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 856;

public:
	SMember(FName)                                     ParamName_Has2Stars                                         OFFSET(getStruct<T>, {0x348, 4, 0, 0})
	SMember(FName)                                     ParamName_Has3Stars                                         OFFSET(getStruct<T>, {0x34C, 4, 0, 0})
	CMember(UImage*)                                   Image_Stars                                                 OFFSET(get<T>, {0x350, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.AthenaCollectionLeaderboardEntryFishing.BP_OnStarRatingSet
	// void BP_OnStarRatingSet(int32_t StarRating);                                                                             // [0x1d9241c] Event|Protected|BlueprintEvent 
};

/// Class /Script/FortniteUI.AthenaCollectionListEntry
/// Size: 0x0090 (0x0014E0 - 0x001570)
class UAthenaCollectionListEntry : public UCommonButtonLegacy
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 5488;

public:
	CMember(UImage*)                                   Image_Icon                                                  OFFSET(get<T>, {0x14F0, 8, 0, 0})
	CMember(UImage*)                                   Image_SecondaryIcon                                         OFFSET(get<T>, {0x14F8, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_Number                                                 OFFSET(get<T>, {0x1508, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_ItemName                                               OFFSET(get<T>, {0x1510, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.AthenaCollectionListEntry.BP_OnEntryReset
	// void BP_OnEntryReset();                                                                                                  // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaCollectionListEntry.BP_OnEntryImageSet
	// void BP_OnEntryImageSet();                                                                                               // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaCollectionListEntry.BP_OnEntryIconLoaded
	// void BP_OnEntryIconLoaded(UObject* EntryIcon);                                                                           // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaCollectionListEntry.BP_OnCollectionStateSet
	// void BP_OnCollectionStateSet(EFortCollectedState CollectedState);                                                        // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaCollectionListEntry.BP_OnCollectedByFriendSet
	// void BP_OnCollectedByFriendSet(bool bCollectedByFriend);                                                                 // [0x1d9241c] Event|Protected|BlueprintEvent 
};

/// Class /Script/FortniteUI.AthenaCollectionListEntryCharacter
/// Size: 0x0020 (0x001570 - 0x001590)
class UAthenaCollectionListEntryCharacter : public UAthenaCollectionListEntry
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 5520;

public:
	CMember(UImage*)                                   Image_Background                                            OFFSET(get<T>, {0x1570, 8, 0, 0})
	SMember(FName)                                     ParamName_ItemIcon                                          OFFSET(getStruct<T>, {0x1578, 4, 0, 0})
	SMember(FName)                                     ParamName_IsDiscovered                                      OFFSET(getStruct<T>, {0x157C, 4, 0, 0})
	SMember(FName)                                     ParamName_IsComplete                                        OFFSET(getStruct<T>, {0x1580, 4, 0, 0})
	SMember(FName)                                     ParamName_SecondaryIcon                                     OFFSET(getStruct<T>, {0x1584, 4, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.AthenaCollectionListEntryCharacter.BP_OnLocationsFoundSet
	// void BP_OnLocationsFoundSet(int32_t NumFound, int32_t NumAvailable, bool bAllFound);                                     // [0x1d9241c] Event|Protected|BlueprintEvent 
};

/// Class /Script/FortniteUI.AthenaCollectionListEntryFishing
/// Size: 0x0020 (0x001570 - 0x001590)
class UAthenaCollectionListEntryFishing : public UAthenaCollectionListEntry
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 5520;

public:
	SMember(FName)                                     ParamName_ItemIcon                                          OFFSET(getStruct<T>, {0x1570, 4, 0, 0})
	SMember(FName)                                     ParamName_IsDiscovered                                      OFFSET(getStruct<T>, {0x1574, 4, 0, 0})
	SMember(FName)                                     ParamName_ItemSize                                          OFFSET(getStruct<T>, {0x1578, 4, 0, 0})
	SMember(FName)                                     ParamName_Has2Stars                                         OFFSET(getStruct<T>, {0x157C, 4, 0, 0})
	SMember(FName)                                     ParamName_Has3Stars                                         OFFSET(getStruct<T>, {0x1580, 4, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.AthenaCollectionListEntryFishing.BP_OnStarRatingSet
	// void BP_OnStarRatingSet(int32_t StarRating);                                                                             // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaCollectionListEntryFishing.BP_OnNormalizedLengthSet
	// void BP_OnNormalizedLengthSet(float NormalizedLength, float NormalizedMinLength, float NormalizedMaxLength);             // [0x1d9241c] Event|Protected|BlueprintEvent 
};

/// Class /Script/FortniteUI.AthenaCollectionListGroupEntry
/// Size: 0x0088 (0x0002E8 - 0x000370)
class UAthenaCollectionListGroupEntry : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 880;

public:
	CMember(UDynamicEntryBox*)                         EntryBox_ListEntries                                        OFFSET(get<T>, {0x2F0, 8, 0, 0})
};

/// Class /Script/FortniteUI.AthenaCollectionListView
/// Size: 0x01B8 (0x000298 - 0x000450)
class UAthenaCollectionListView : public UListViewBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1104;

public:
	DMember(float)                                     EntrySpacing                                                OFFSET(get<float>, {0x3B8, 4, 0, 0})
	DMember(float)                                     FinalEntrySpacing                                           OFFSET(get<float>, {0x3BC, 4, 0, 0})
	CMember(TEnumAsByte<EOrientation>)                 Orientation                                                 OFFSET(get<T>, {0x3C0, 1, 0, 0})
	DMember(int32_t)                                   NumRows                                                     OFFSET(get<int32_t>, {0x3C4, 4, 0, 0})
	DMember(bool)                                      bOverrideNumRowsMobile                                      OFFSET(get<bool>, {0x3C8, 1, 0, 0})
	DMember(int32_t)                                   NumRowsMobile                                               OFFSET(get<int32_t>, {0x3CC, 4, 0, 0})
	DMember(int32_t)                                   NumColumns                                                  OFFSET(get<int32_t>, {0x3D0, 4, 0, 0})
	DMember(bool)                                      bOverrideNumColumnsMobile                                   OFFSET(get<bool>, {0x3D4, 1, 0, 0})
	DMember(int32_t)                                   NumColumnsMobile                                            OFFSET(get<int32_t>, {0x3D8, 4, 0, 0})
	DMember(bool)                                      bSelectEntryOnFocusForTouch                                 OFFSET(get<bool>, {0x448, 1, 0, 0})
};

/// Class /Script/FortniteUI.AthenaCollectionLocationEntry
/// Size: 0x0000 (0x000308 - 0x000308)
class UAthenaCollectionLocationEntry : public UAthenaCollectionOverlayEntry
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 776;

public:
};

/// Class /Script/FortniteUI.AthenaCollectionPlayerProgress
/// Size: 0x0020 (0x0002E8 - 0x000308)
class UAthenaCollectionPlayerProgress : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 776;

public:
	CMember(UCommonTextBlock*)                         Text_PlayerName                                             OFFSET(get<T>, {0x2E8, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_Progress                                               OFFSET(get<T>, {0x2F0, 8, 0, 0})
	CMember(UFortSocialAvatarIcon*)                    AvatarIcon                                                  OFFSET(get<T>, {0x2F8, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.AthenaCollectionPlayerProgress.IsLocalPlayer
	// bool IsLocalPlayer();                                                                                                    // [0x902add4] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.AthenaCollectionPlayerProgress.GetNumCollected
	// int32_t GetNumCollected();                                                                                               // [0x90293f0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.AthenaCollectionPlayerProgress.BP_OnShowPlayerInfoSet
	// void BP_OnShowPlayerInfoSet(bool bShowPlayerInfo);                                                                       // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaCollectionPlayerProgress.BP_OnPlayerProgressInitialized
	// void BP_OnPlayerProgressInitialized(bool bIsLocalPlayer, int32_t NumCollected, int32_t NumToCollect);                    // [0x1d9241c] Event|Protected|BlueprintEvent 
};

/// Class /Script/FortniteUI.AthenaCollectionPlayerProgressContainer
/// Size: 0x0040 (0x0002E8 - 0x000328)
class UAthenaCollectionPlayerProgressContainer : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 808;

public:
	CMember(UClass*)                                   PlayerProgressClass                                         OFFSET(get<T>, {0x2E8, 8, 0, 0})
	DMember(float)                                     CycleDelay                                                  OFFSET(get<float>, {0x2F0, 4, 0, 0})
	DMember(int32_t)                                   ShowLocalPlayerAfterNumEntries                              OFFSET(get<int32_t>, {0x2F4, 4, 0, 0})
	CMember(TArray<UAthenaCollectionPlayerProgress*>)  CachedPlayerProgressEntries                                 OFFSET(get<T>, {0x2F8, 16, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.AthenaCollectionPlayerProgressContainer.BP_OnPlayerProgressEntriesCreated
	// void BP_OnPlayerProgressEntriesCreated(TArray<UAthenaCollectionPlayerProgress*>& PlayerProgressEntries, int32_t NumToCollect); // [0x1d9241c] Event|Protected|HasOutParms|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaCollectionPlayerProgressContainer.BP_OnPlayerProgressContainerReset
	// void BP_OnPlayerProgressContainerReset();                                                                                // [0x1d9241c] Event|Protected|BlueprintEvent 
};

/// Class /Script/FortniteUI.AthenaCollectionScreenBase
/// Size: 0x0260 (0x000400 - 0x000660)
class UAthenaCollectionScreenBase : public UCommonActivatableWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1632;

public:
	SMember(FAthenaMapScreenContainerTabInfo)          MapTabInfo                                                  OFFSET(getStruct<T>, {0x430, 72, 0, 0})
	DMember(bool)                                      bUseMcpProfileData                                          OFFSET(get<bool>, {0x478, 1, 0, 0})
	SMember(FText)                                     CollectionName                                              OFFSET(getStruct<T>, {0x480, 24, 0, 0})
	SMember(FString)                                   CollectionType                                              OFFSET(getStruct<T>, {0x498, 16, 0, 0})
	SMember(FString)                                   CollectionCategory                                          OFFSET(getStruct<T>, {0x4A8, 16, 0, 0})
	SMember(FText)                                     UnknownText                                                 OFFSET(getStruct<T>, {0x4B8, 24, 0, 0})
	SMember(FText)                                     UnknownDescription                                          OFFSET(getStruct<T>, {0x4D0, 24, 0, 0})
	CMember(TWeakObjectPtr<UObject*>)                  KnownEntryImage                                             OFFSET(get<T>, {0x4E8, 32, 0, 0})
	CMember(TWeakObjectPtr<UObject*>)                  UnknownEntryImage                                           OFFSET(get<T>, {0x508, 32, 0, 0})
	CMember(TWeakObjectPtr<UObject*>)                  KnownOverlayImage                                           OFFSET(get<T>, {0x528, 32, 0, 0})
	CMember(TWeakObjectPtr<UObject*>)                  UnknownOverlayImage                                         OFFSET(get<T>, {0x548, 32, 0, 0})
	CMember(TWeakObjectPtr<UObject*>)                  SecondaryIconImage                                          OFFSET(get<T>, {0x568, 32, 0, 0})
	SMember(FText)                                     PersonalBestTextFormat                                      OFFSET(getStruct<T>, {0x588, 24, 0, 0})
	DMember(char)                                      PersonalBestMinimumFractionalDigits                         OFFSET(get<char>, {0x5A0, 1, 0, 0})
	DMember(char)                                      PersonalBestMaximumFractionalDigits                         OFFSET(get<char>, {0x5A1, 1, 0, 0})
	CMember(TWeakObjectPtr<UClass*>)                   SoftInfoOverlayClass                                        OFFSET(get<T>, {0x5A8, 32, 0, 0})
	CMember(UScrollBox*)                               ScrollBox_List                                              OFFSET(get<T>, {0x5C8, 8, 0, 0})
	CMember(UAthenaCollectionListView*)                CollectionListView                                          OFFSET(get<T>, {0x5D0, 8, 0, 0})
	CMember(UContentWidget*)                           Content_InfoOverlayContainer                                OFFSET(get<T>, {0x5D8, 8, 0, 0})
	CMember(UCommonButtonLegacy*)                      Button_ToggleInfoOverlay                                    OFFSET(get<T>, {0x5E0, 8, 0, 0})
	CMember(UCommonButtonLegacy*)                      Button_Back                                                 OFFSET(get<T>, {0x5E8, 8, 0, 0})
	CMember(UAthenaCollectionPlayerProgressContainer*) PlayerProgressContainer                                     OFFSET(get<T>, {0x5F0, 8, 0, 0})
	DMember(bool)                                      bWantsToShowInfoOverlay                                     OFFSET(get<bool>, {0x5F8, 1, 0, 0})
	DMember(bool)                                      bForceOverlayToggleMobile                                   OFFSET(get<bool>, {0x5F9, 1, 0, 0})
	CMember(UAthenaCollectionScreenInfoOverlay*)       InfoOverlay                                                 OFFSET(get<T>, {0x600, 8, 0, 0})
	CMember(UFortCollectionsDataTable*)                CollectionsDataTable                                        OFFSET(get<T>, {0x608, 8, 0, 0})
	CMember(UFortCollectionData*)                      CollectionData                                              OFFSET(get<T>, {0x610, 8, 0, 0})
	SMember(FGameplayTagContainer)                     CategoryTags                                                OFFSET(getStruct<T>, {0x628, 32, 0, 0})
	SMember(FText)                                     CategoryTitle                                               OFFSET(getStruct<T>, {0x648, 24, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.AthenaCollectionScreenBase.SetListViewColumnCount
	// void SetListViewColumnCount(int32_t InColumnCount);                                                                      // [0x902c4ec] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.AthenaCollectionScreenBase.CenterSelectedEntry
	// void CenterSelectedEntry();                                                                                              // [0x9028b38] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.AthenaCollectionScreenBase.BP_OnStartedLoading
	// void BP_OnStartedLoading();                                                                                              // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaCollectionScreenBase.BP_OnInfoOverlayDeactivated
	// void BP_OnInfoOverlayDeactivated();                                                                                      // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaCollectionScreenBase.BP_OnInfoOverlayActivated
	// void BP_OnInfoOverlayActivated();                                                                                        // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaCollectionScreenBase.BP_OnHandleSelectedEntryChanged
	// void BP_OnHandleSelectedEntryChanged(UAthenaCollectionListEntry* SelectedEntry);                                         // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaCollectionScreenBase.BP_OnFinishedLoading
	// void BP_OnFinishedLoading();                                                                                             // [0x1d9241c] Event|Protected|BlueprintEvent 
};

/// Class /Script/FortniteUI.AthenaCollectionScreenCharacter
/// Size: 0x0000 (0x000660 - 0x000660)
class UAthenaCollectionScreenCharacter : public UAthenaCollectionScreenBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1632;

public:
};

/// Class /Script/FortniteUI.AthenaCollectionScreenFishing
/// Size: 0x0018 (0x000660 - 0x000678)
class UAthenaCollectionScreenFishing : public UAthenaCollectionScreenBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1656;

public:
	SMember(FText)                                     RequiresProFishingRodText                                   OFFSET(getStruct<T>, {0x660, 24, 0, 0})
};

/// Class /Script/FortniteUI.AthenaCollectionScreenInfoOverlay
/// Size: 0x00C8 (0x000400 - 0x0004C8)
class UAthenaCollectionScreenInfoOverlay : public UCommonActivatableWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1224;

public:
	SMember(FName)                                     ParamName_ItemIcon                                          OFFSET(getStruct<T>, {0x408, 4, 0, 0})
	SMember(FName)                                     ParamName_IsDiscovered                                      OFFSET(getStruct<T>, {0x40C, 4, 0, 0})
	CMember(UCommonRichTextBlock*)                     RichText_AdditionalInfo                                     OFFSET(get<T>, {0x410, 8, 0, 0})
	CMember(UImage*)                                   Image_ItemImage                                             OFFSET(get<T>, {0x418, 8, 0, 0})
	SMember(FText)                                     NumCollectedTextFormat                                      OFFSET(getStruct<T>, {0x420, 24, 0, 0})
	SMember(FText)                                     EmptyDisplayNameText                                        OFFSET(getStruct<T>, {0x438, 24, 0, 0})
	SMember(FDataTableRowHandle)                       ToggleLeaderboardRowHandle                                  OFFSET(getStruct<T>, {0x450, 16, 0, 0})
	CMember(UCommonTextBlock*)                         Text_ItemType                                               OFFSET(get<T>, {0x460, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_ItemName                                               OFFSET(get<T>, {0x468, 8, 0, 0})
	CMember(UCommonRichTextBlock*)                     RichText_Description                                        OFFSET(get<T>, {0x470, 8, 0, 0})
	CMember(UCommonRichTextBlock*)                     RichText_AdditionalDescription                              OFFSET(get<T>, {0x478, 8, 0, 0})
	CMember(UPanelWidget*)                             Panel_FriendScores                                          OFFSET(get<T>, {0x480, 8, 0, 0})
	CMember(UCommonRichTextBlock*)                     RichText_NumCollected                                       OFFSET(get<T>, {0x488, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_ItemNumber                                             OFFSET(get<T>, {0x490, 8, 0, 0})
	CMember(UCommonButtonBase*)                        Button_Close                                                OFFSET(get<T>, {0x498, 8, 0, 0})
	CMember(UFortDynamicEntryBox*)                     EntryBox_InfoOverlay                                        OFFSET(get<T>, {0x4A0, 8, 0, 0})
	CMember(UAthenaCollectionLeaderboard*)             FriendLeaderboard                                           OFFSET(get<T>, {0x4A8, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.AthenaCollectionScreenInfoOverlay.BP_OnShowLeaderboard
	// void BP_OnShowLeaderboard();                                                                                             // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaCollectionScreenInfoOverlay.BP_OnItemIconLoaded
	// void BP_OnItemIconLoaded(UObject* ItemIcon);                                                                             // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaCollectionScreenInfoOverlay.BP_OnInfoOverlayReset
	// void BP_OnInfoOverlayReset();                                                                                            // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaCollectionScreenInfoOverlay.BP_OnHideLeaderboard
	// void BP_OnHideLeaderboard();                                                                                             // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaCollectionScreenInfoOverlay.BP_OnHasAdditionalInfoSet
	// void BP_OnHasAdditionalInfoSet(bool bHasAdditionalInfo);                                                                 // [0x1d9241c] RequiredAPI|Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaCollectionScreenInfoOverlay.BP_OnFriendScoresUpdated
	// void BP_OnFriendScoresUpdated(int32_t NumFriendScores);                                                                  // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaCollectionScreenInfoOverlay.BP_OnFriendLeaderboardDeactivated
	// void BP_OnFriendLeaderboardDeactivated();                                                                                // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaCollectionScreenInfoOverlay.BP_OnFriendLeaderboardActivated
	// void BP_OnFriendLeaderboardActivated();                                                                                  // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaCollectionScreenInfoOverlay.BP_OnContextTagsUpdated
	// void BP_OnContextTagsUpdated(int32_t NumContextTags);                                                                    // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaCollectionScreenInfoOverlay.BP_OnCollectedStateSet
	// void BP_OnCollectedStateSet(EFortCollectedState CollectedState);                                                         // [0x1d9241c] Event|Protected|BlueprintEvent 
};

/// Class /Script/FortniteUI.AthenaCollectionScreenInfoOverlayCharacter
/// Size: 0x0008 (0x0004C8 - 0x0004D0)
class UAthenaCollectionScreenInfoOverlayCharacter : public UAthenaCollectionScreenInfoOverlay
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1232;

public:
	SMember(FName)                                     ParamName_Progress                                          OFFSET(getStruct<T>, {0x4C8, 4, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.AthenaCollectionScreenInfoOverlayCharacter.BP_OnLocationsFoundSet
	// void BP_OnLocationsFoundSet(int32_t NumFound, int32_t NumAvailable, bool bAllFound);                                     // [0x1d9241c] Event|Protected|BlueprintEvent 
};

/// Class /Script/FortniteUI.AthenaCollectionScreenInfoOverlayFishing
/// Size: 0x0048 (0x0004C8 - 0x000510)
class UAthenaCollectionScreenInfoOverlayFishing : public UAthenaCollectionScreenInfoOverlay
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1296;

public:
	DMember(bool)                                      bNeedsProFishingRod                                         OFFSET(get<bool>, {0x4C8, 1, 0, 0})
	SMember(FText)                                     NoneText                                                    OFFSET(getStruct<T>, {0x4D0, 24, 0, 0})
	CMember(UCommonRichTextBlock*)                     RichText_PersonalBest                                       OFFSET(get<T>, {0x4E8, 8, 0, 0})
	SMember(FText)                                     ScaleRangeTextFormat                                        OFFSET(getStruct<T>, {0x4F0, 24, 0, 0})
	CMember(UCommonRichTextBlock*)                     RichText_ScaleRange                                         OFFSET(get<T>, {0x508, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.AthenaCollectionScreenInfoOverlayFishing.BP_OnStarRatingSet
	// void BP_OnStarRatingSet(int32_t NumStars);                                                                               // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaCollectionScreenInfoOverlayFishing.BP_OnNormalizedLengthSet
	// void BP_OnNormalizedLengthSet(float NormalizedLength, float NormalizedMinLength, float NormalizedMaxLength);             // [0x1d9241c] Event|Protected|BlueprintEvent 
};

/// Class /Script/FortniteUI.CreativePublishWatermark
/// Size: 0x0038 (0x000328 - 0x000360)
class UCreativePublishWatermark : public UFortHUDElementWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 864;

public:
	CMember(UCommonTextBlock*)                         Text_CreatorName                                            OFFSET(get<T>, {0x328, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_Mnemonic                                               OFFSET(get<T>, {0x330, 8, 0, 0})
	SMember(FText)                                     MnemonicVersionFormat                                       OFFSET(getStruct<T>, {0x338, 24, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.CreativePublishWatermark.OnPublishedIslandCodeDisplayChanged
	// void OnPublishedIslandCodeDisplayChanged(ECreativePublishedIslandCodeDisplay PublishedIslandCodeDisplay);                // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.CreativePublishWatermark.OnIsPlaytestLinkChanged
	// void OnIsPlaytestLinkChanged(bool bIsPlaytestLink);                                                                      // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.CreativePublishWatermark.IsModerator
	// bool IsModerator();                                                                                                      // [0x902adec] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.CreativePublishWatermark.HandleLinkDataQueryComplete
	// void HandleLinkDataQueryComplete(bool bSuccess, FString ErrorMessage, FCreativeLoadedLinkData& LinkData);                // [0x9029eb4] Final|Native|Private|HasOutParms 
	// Function /Script/FortniteUI.CreativePublishWatermark.HandleCreativePlotLinkedVolumeChanged
	// void HandleCreativePlotLinkedVolumeChanged(AFortVolume* CreativeLinkedVolume);                                           // [0x9029450] Final|Native|Private 
};

/// Class /Script/FortniteUI.AthenaCreativeItemEntryObjectWrapper
/// Size: 0x01A0 (0x000028 - 0x0001C8)
class UAthenaCreativeItemEntryObjectWrapper : public UObject
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 456;

public:
	SMember(FFortItemEntry)                            ItemEntry                                                   OFFSET(getStruct<T>, {0x28, 408, 0, 0})
	DMember(bool)                                      bIsDownloading                                              OFFSET(get<bool>, {0x1C0, 1, 0, 0})
};

/// Class /Script/FortniteUI.AthenaCreativeItemTileButton
/// Size: 0x01B0 (0x0014E0 - 0x001690)
class UAthenaCreativeItemTileButton : public UCommonButtonLegacy
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 5776;

public:
	CMember(UAthenaCreativeItemTileView*)              ParentView                                                  OFFSET(get<T>, {0x14E8, 8, 0, 0})
	CMember(UFortItemDefinition*)                      ItemDefinition                                              OFFSET(get<T>, {0x14F0, 8, 0, 0})
	SMember(FFortItemEntry)                            ItemEntry                                                   OFFSET(getStruct<T>, {0x14F8, 408, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.AthenaCreativeItemTileButton.OnLoadedItem
	// void OnLoadedItem();                                                                                                     // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaCreativeItemTileButton.OnEntryClick
	// void OnEntryClick(UAthenaCreativeItemTileButton* Entry);                                                                 // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaCreativeItemTileButton.MakeFortItemEntryObjectWrapper
	// UAthenaCreativeItemEntryObjectWrapper* MakeFortItemEntryObjectWrapper(UObject* Target, FFortItemEntry& InItemEntry);     // [0x902ae10] Final|RequiredAPI|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure 
	// Function /Script/FortniteUI.AthenaCreativeItemTileButton.GetItemTypeCount
	// int32_t GetItemTypeCount();                                                                                              // [0x90293cc] Final|Native|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/FortniteUI.AthenaCreativeItemTileButton.CompareToItemEntry
	// bool CompareToItemEntry(FFortItemEntry& InItemEntry);                                                                    // [0x9028b4c] Final|RequiredAPI|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure 
};

/// Class /Script/FortniteUI.AthenaCreativeItemTileView
/// Size: 0x0010 (0x000C00 - 0x000C10)
class UAthenaCreativeItemTileView : public UCommonTileView
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 3088;

public:
	CMember(UFortOptionsTab*)                          ParentTab                                                   OFFSET(get<T>, {0xBF8, 8, 0, 0})
	CMember(UFortItem*)                                CurrentlyFocusedItem                                        OFFSET(get<T>, {0xC00, 8, 0, 0})
};

/// Class /Script/FortniteUI.LevelInstanceEntryObjectWrapper
/// Size: 0x0038 (0x000028 - 0x000060)
class ULevelInstanceEntryObjectWrapper : public UObject
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 96;

public:
	SMember(FLevelInstanceListElement)                 LevelInstanceListElement                                    OFFSET(getStruct<T>, {0x28, 56, 0, 0})
};

/// Class /Script/FortniteUI.LevelManagementListEntry
/// Size: 0x0070 (0x001490 - 0x001500)
class ULevelManagementListEntry : public UCommonButtonBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 5376;

public:
	CMember(ULevelManagementListView*)                 ParentView                                                  OFFSET(get<T>, {0x1498, 8, 0, 0})
	SMember(FLevelInstanceListElement)                 LevelInstanceListElementEntry                               OFFSET(getStruct<T>, {0x14A0, 56, 0, 0})
	CMember(UCommonTextBlock*)                         Text_LevelName                                              OFFSET(get<T>, {0x14D8, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_NumPortals                                             OFFSET(get<T>, {0x14E0, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_NumRefs                                                OFFSET(get<T>, {0x14E8, 8, 0, 0})
	CMember(UWidgetSwitcher*)                          WidgetSwitcher_TerrainType                                  OFFSET(get<T>, {0x14F0, 8, 0, 0})
	CMember(UCommonButtonBase*)                        IconTextButton_Delete                                       OFFSET(get<T>, {0x14F8, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.LevelManagementListEntry.UpdateSelected
	// void UpdateSelected(bool bEntrySelected);                                                                                // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.LevelManagementListEntry.HandleLevelDeleteClicked
	// void HandleLevelDeleteClicked();                                                                                         // [0x90297c0] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.LevelManagementListEntry.CompareToLevelInstanceInfoEntry
	// bool CompareToLevelInstanceInfoEntry(FLevelInstanceListElement& InLevelInstanceInfoEntry);                               // [0x9028c18] Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure 
};

/// Class /Script/FortniteUI.LevelManagementListView
/// Size: 0x0010 (0x000BD0 - 0x000BE0)
class ULevelManagementListView : public UCommonListView
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 3040;

public:
	SMember(FMulticastInlineDelegate)                  OnLevelEntryDeleteClicked                                   OFFSET(getStruct<T>, {0xBD0, 16, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.LevelManagementListView.HandleLevelEntryDeleteClicked
	// void HandleLevelEntryDeleteClicked(FLevelInstanceListElement& LevelInstanceListElement);                                 // [0x90297f8] Final|Native|Public|HasOutParms|BlueprintCallable 
};

/// Class /Script/FortniteUI.CreativeMinigameProgressWidget
/// Size: 0x0058 (0x0002E8 - 0x000340)
class UCreativeMinigameProgressWidget : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 832;

public:
	CMember(TWeakObjectPtr<AFortPlayerStateAthena*>)   CurrentPlayerState                                          OFFSET(get<T>, {0x2E8, 8, 0, 0})
	SMember(FScalableFloat)                            bEnabled                                                    OFFSET(getStruct<T>, {0x2F0, 40, 0, 0})
	DMember(bool)                                      bMinigameActive                                             OFFSET(get<bool>, {0x318, 1, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.CreativeMinigameProgressWidget.OnPlayerStatUpdate
	// void OnPlayerStatUpdate(int32_t CurrentPlayerTeamScore, int32_t CurrentPlayerTeamPlacement, int32_t GoalScore, TArray<int32_t>& SortedTeamStats); // [0x1d9241c] Event|Protected|HasOutParms|BlueprintEvent 
	// Function /Script/FortniteUI.CreativeMinigameProgressWidget.OnPlayerScoringUpdate
	// void OnPlayerScoringUpdate(int32_t CurrentPlayerTeamScore, int32_t PreviousPlayerTeamScore, int32_t CurrentPlayerTeamPlacement, int32_t PreviousPlayerTeamPlacement, int32_t GoalScore, TArray<int32_t>& SortedTeamScores); // [0x1d9241c] Event|Protected|HasOutParms|BlueprintEvent 
	// Function /Script/FortniteUI.CreativeMinigameProgressWidget.BP_OnHandleMinigameStarted
	// void BP_OnHandleMinigameStarted(FMinigameActivityStartedData& StartData);                                                // [0x1d9241c] Event|Protected|HasOutParms|BlueprintEvent 
	// Function /Script/FortniteUI.CreativeMinigameProgressWidget.BP_OnHandleMinigameEnded
	// void BP_OnHandleMinigameEnded(FMinigameActivityEndedData& EndData);                                                      // [0x1d9241c] Event|Protected|HasOutParms|BlueprintEvent 
};

/// Class /Script/FortniteUI.CreativePerformanceHUDBase
/// Size: 0x01D8 (0x000328 - 0x000500)
class UCreativePerformanceHUDBase : public UFortHUDElementWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1280;

public:
};

/// Class /Script/FortniteUI.CreativePerformanceHUDHeatmapControlWidget
/// Size: 0x0008 (0x000328 - 0x000330)
class UCreativePerformanceHUDHeatmapControlWidget : public UFortHUDElementWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 816;

public:
};

/// Class /Script/FortniteUI.CreativePerformanceHUDRunTimeStatsWidget
/// Size: 0x0018 (0x000328 - 0x000340)
class UCreativePerformanceHUDRunTimeStatsWidget : public UFortHUDElementWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 832;

public:
};

/// Class /Script/FortniteUI.ValkyriePerformanceHUDBase
/// Size: 0x0148 (0x000328 - 0x000470)
class UValkyriePerformanceHUDBase : public UFortHUDElementWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1136;

public:
	SMember(FScalableFloat)                            ThermometerMemoryThreshold                                  OFFSET(getStruct<T>, {0x328, 40, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.ValkyriePerformanceHUDBase.SetUIMetrics
	// void SetUIMetrics(FVolumePerformanceMetrics& VolumePerformanceMetrics);                                                  // [0x1d9241c] Event|Protected|HasOutParms|BlueprintEvent 
	// Function /Script/FortniteUI.ValkyriePerformanceHUDBase.OnPlayspaceMemoryValueUpdated
	// void OnPlayspaceMemoryValueUpdated(int32_t MemoryValue);                                                                 // [0x902bb4c] Final|Native|Protected 
	// Function /Script/FortniteUI.ValkyriePerformanceHUDBase.OnPlayerExitedSpatialGameplayActor
	// void OnPlayerExitedSpatialGameplayActor(FEventMessageTag Channel, FPlayerExitSpatialActorContext& PlayerExitSpatialActorContext); // [0x902b978] Final|Native|Protected|HasOutParms 
	// Function /Script/FortniteUI.ValkyriePerformanceHUDBase.OnPlayerEnteredSpatialGameplayActor
	// void OnPlayerEnteredSpatialGameplayActor(FEventMessageTag Channel, FPlayerEnterSpatialActorContext& PlayerEnterSpatialActorContext); // [0x902b7b8] Final|Native|Protected|HasOutParms 
	// Function /Script/FortniteUI.ValkyriePerformanceHUDBase.OnMinigamePlayModeChanged
	// void OnMinigamePlayModeChanged(AFortMinigame* Minigame, bool bIsInPlayMode);                                             // [0x902b4a0] Final|Native|Private 
	// Function /Script/FortniteUI.ValkyriePerformanceHUDBase.HideUIMetrics
	// void HideUIMetrics();                                                                                                    // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.ValkyriePerformanceHUDBase.HandleSpatialLoadingStateChanged
	// void HandleSpatialLoadingStateChanged(FEventMessageTag Channel, FSpatialGamePlayActorLoadingStateUpdatedContext& StateContext); // [0x902a9a0] Final|Native|Protected|HasOutParms 
	// Function /Script/FortniteUI.ValkyriePerformanceHUDBase.HandleGameStateInitialized
	// void HandleGameStateInitialized(AFortGameState* GameState);                                                              // [0x9029550] Final|Native|Protected 
	// Function /Script/FortniteUI.ValkyriePerformanceHUDBase.BP_OnClientEnterSpatialGameplayActor
	// void BP_OnClientEnterSpatialGameplayActor(APlayerState* ClientPlayerState);                                              // [0x1d9241c] Event|Protected|BlueprintEvent 
};

/// Class /Script/FortniteUI.StoreToastRequest
/// Size: 0x00C8 (0x000028 - 0x0000F0)
class UStoreToastRequest : public UObject
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 240;

public:
	CMember(UCatalogMessaging*)                        CatalogMessaging                                            OFFSET(get<T>, {0x38, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.StoreToastRequest.SkipRequest
	// void SkipRequest();                                                                                                      // [0x21a1844] Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.StoreToastRequest.ShouldBeginRequest
	// bool ShouldBeginRequest();                                                                                               // [0x21b84d8] Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.StoreToastRequest.IsRequestReady
	// bool IsRequestReady();                                                                                                   // [0x2de5e28] Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.StoreToastRequest.GetToast
	// FStoreCallout GetToast();                                                                                                // [0x9029408] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.StoreToastRequest.CompleteRequest
	// void CompleteRequest();                                                                                                  // [0x1b49bcc] Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.StoreToastRequest.BeginRequest
	// void BeginRequest();                                                                                                     // [0x179a734] Native|Public|BlueprintCallable 
};

/// Class /Script/FortniteUI.GuidedTutorialLoadingScreen
/// Size: 0x0008 (0x000560 - 0x000568)
class UGuidedTutorialLoadingScreen : public UAthenaLoadingScreenPreviewPanelBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1384;

public:
	CMember(UFortPlaylistAthena*)                      GuidedTutorialPlaylist                                      OFFSET(get<T>, {0x560, 8, 0, 0})
};

/// Class /Script/FortniteUI.AthenaFeatTimelineListEntry
/// Size: 0x0060 (0x0002E8 - 0x000348)
class UAthenaFeatTimelineListEntry : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 840;

public:
	CMember(UPanelWidget*)                             Panel_FeatInfo                                              OFFSET(get<T>, {0x2F0, 8, 0, 0})
	CMember(UPanelWidget*)                             Panel_Date                                                  OFFSET(get<T>, {0x2F8, 8, 0, 0})
	CMember(UCommonButtonLegacy*)                      SimpleButton_ClickArea                                      OFFSET(get<T>, {0x300, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_FeatName                                               OFFSET(get<T>, {0x308, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_FeatDescription                                        OFFSET(get<T>, {0x310, 8, 0, 0})
	CMember(UFortLazyImage*)                           LazyImage_QuestIcon                                         OFFSET(get<T>, {0x318, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_CompletedTime                                          OFFSET(get<T>, {0x320, 8, 0, 0})
	CMember(UCommonRichTextBlock*)                     RichText_Date                                               OFFSET(get<T>, {0x328, 8, 0, 0})
	DMember(bool)                                      bIsHovered                                                  OFFSET(get<bool>, {0x340, 1, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.AthenaFeatTimelineListEntry.UnHoverFeat
	// void UnHoverFeat();                                                                                                      // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaFeatTimelineListEntry.OnWaitingForCompletedTimer
	// void OnWaitingForCompletedTimer();                                                                                       // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaFeatTimelineListEntry.OnTimespanInfoSet
	// void OnTimespanInfoSet(int32_t NumDays);                                                                                 // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaFeatTimelineListEntry.OnFeatInfoSet
	// void OnFeatInfoSet(int32_t NumFeatsOnDay, int32_t IdxOnDay);                                                             // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaFeatTimelineListEntry.OnFeatCompletedThisSession
	// void OnFeatCompletedThisSession();                                                                                       // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaFeatTimelineListEntry.HoverFeat
	// void HoverFeat();                                                                                                        // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaFeatTimelineListEntry.CalculateSourceTag
	// FGameplayTag CalculateSourceTag();                                                                                       // [0x9028b0c] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/FortniteUI.AthenaFeatTimelineListView
/// Size: 0x0130 (0x000298 - 0x0003C8)
class UAthenaFeatTimelineListView : public UListViewBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 968;

public:
	DMember(float)                                     EntrySpacing                                                OFFSET(get<float>, {0x380, 4, 0, 0})
	DMember(float)                                     EndSpacing                                                  OFFSET(get<float>, {0x384, 4, 0, 0})
	DMember(float)                                     DelayBeforeStartCompleted                                   OFFSET(get<float>, {0x388, 4, 0, 0})
	DMember(float)                                     DelayBetweenCompletedItems                                  OFFSET(get<float>, {0x38C, 4, 0, 0})
};

/// Class /Script/FortniteUI.FeaturedCreativeContent
/// Size: 0x0000 (0x0002C0 - 0x0002C0)
class UFeaturedCreativeContent : public UUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 704;

public:
};

/// Class /Script/FortniteUI.FortActivatablePanelWithItemPreview
/// Size: 0x0148 (0x000570 - 0x0006B8)
class UFortActivatablePanelWithItemPreview : public UFortActivatablePanel
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1720;

public:
	CMember(UFortItemView*)                            ItemViewObject                                              OFFSET(get<T>, {0x578, 8, 0, 0})
	SMember(FDataTableRowHandle)                       ItemViewUnifiedSupportsCameraControlInputAction             OFFSET(getStruct<T>, {0x580, 16, 0, 0})
	SMember(FDataTableRowHandle)                       ItemViewUnifiedZoomInputAction                              OFFSET(getStruct<T>, {0x590, 16, 0, 0})
	SMember(FDataTableRowHandle)                       ItemViewZoomOutInputAction                                  OFFSET(getStruct<T>, {0x5A0, 16, 0, 0})
	SMember(FDataTableRowHandle)                       ItemViewZoomInInputAction                                   OFFSET(getStruct<T>, {0x5B0, 16, 0, 0})
	SMember(FDataTableRowHandle)                       ItemViewRotateInputAction                                   OFFSET(getStruct<T>, {0x5C0, 16, 0, 0})
	DMember(bool)                                      AllowItemRotation                                           OFFSET(get<bool>, {0x680, 1, 0, 0})
	DMember(bool)                                      AllowItemZooming                                            OFFSET(get<bool>, {0x681, 1, 0, 0})
	DMember(bool)                                      AutomaticallyRegisterCameraView                             OFFSET(get<bool>, {0x682, 1, 0, 0})
	DMember(bool)                                      OverrideFixedCameras                                        OFFSET(get<bool>, {0x683, 1, 0, 0})
	CMember(UDataTable*)                               ActionDataTable                                             OFFSET(get<T>, {0x688, 8, 0, 0})
	CMember(UWidgetAnimation*)                         AnimationToHideItemInfo                                     OFFSET(get<T>, {0x690, 8, 0, 0})
	DMember(bool)                                      bAutoShowDetails                                            OFFSET(get<bool>, {0x698, 1, 0, 0})
	DMember(bool)                                      bItemDetailsHidden                                          OFFSET(get<bool>, {0x699, 1, 0, 0})
	DMember(float)                                     HideItemInfoHeaderDurationSecs                              OFFSET(get<float>, {0x69C, 4, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortActivatablePanelWithItemPreview.ShowItemDetails
	// void ShowItemDetails();                                                                                                  // [0x902c5a4] Final|Native|Private|BlueprintCallable 
	// Function /Script/FortniteUI.FortActivatablePanelWithItemPreview.OnVaultItemsViewed
	// void OnVaultItemsViewed(TArray<UFortItem*>& Items);                                                                      // [0x902bcbc] Final|Native|Private|HasOutParms 
	// Function /Script/FortniteUI.FortActivatablePanelWithItemPreview.OnItemPreviewChanged
	// void OnItemPreviewChanged(AActor* NewPrefab, UFortItem* NewItem);                                                        // [0x902b3dc] Final|Native|Protected 
	// Function /Script/FortniteUI.FortActivatablePanelWithItemPreview.OnCosmeticSpecialActionPressed
	// void OnCosmeticSpecialActionPressed(bool& bPassThrough);                                                                 // [0x902b31c] Final|Native|Protected|HasOutParms 
	// Function /Script/FortniteUI.FortActivatablePanelWithItemPreview.OnCosmeticSpecialActionPressed
	// void OnCosmeticSpecialActionPressed(bool& bPassThrough);                                                                 // [0x902b28c] Final|Native|Protected|HasOutParms 
	// Function /Script/FortniteUI.FortActivatablePanelWithItemPreview.OnCosmeticSpecialActionPressed
	// void OnCosmeticSpecialActionPressed(bool& bPassThrough);                                                                 // [0x902b1fc] Final|Native|Protected|HasOutParms 
	// Function /Script/FortniteUI.FortActivatablePanelWithItemPreview.OnCosmeticSpecialActionPressed
	// void OnCosmeticSpecialActionPressed(bool& bPassThrough);                                                                 // [0x902b16c] Final|Native|Protected|HasOutParms 
	// Function /Script/FortniteUI.FortActivatablePanelWithItemPreview.OnCosmeticSpecialActionPressed
	// void OnCosmeticSpecialActionPressed(bool& bPassThrough);                                                                 // [0x902b0dc] Final|Native|Protected|HasOutParms 
	// Function /Script/FortniteUI.FortActivatablePanelWithItemPreview.OnCosmeticSpecialActionPressed
	// void OnCosmeticSpecialActionPressed(bool& bPassThrough);                                                                 // [0x902b04c] Final|Native|Protected|HasOutParms 
	// Function /Script/FortniteUI.FortActivatablePanelWithItemPreview.OnCosmeticSpecialActionPressed
	// void OnCosmeticSpecialActionPressed(bool& bPassThrough);                                                                 // [0x902afbc] Final|Native|Protected|HasOutParms 
	// Function /Script/FortniteUI.FortActivatablePanelWithItemPreview.OnCosmeticSpecialActionPressed
	// void OnCosmeticSpecialActionPressed(bool& bPassThrough);                                                                 // [0x902af2c] Final|Native|Protected|HasOutParms 
	// Function /Script/FortniteUI.FortActivatablePanelWithItemPreview.HideItemDetails
	// void HideItemDetails();                                                                                                  // [0x902ad38] Final|Native|Private|BlueprintCallable 
	// Function /Script/FortniteUI.FortActivatablePanelWithItemPreview.GetWidgetForFramingViewedItem
	// UWidget* GetWidgetForFramingViewedItem();                                                                                // [0x1d9241c] Event|Protected|BlueprintEvent 
};

/// Class /Script/FortniteUI.FortAthenaHelpPanel
/// Size: 0x0010 (0x000570 - 0x000580)
class UFortAthenaHelpPanel : public UFortActivatablePanel
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1408;

public:
	CMember(UCommonTreeView*)                          TreeView_Help                                               OFFSET(get<T>, {0x570, 8, 0, 0})
	CMember(UScrollBox*)                               ScrollBox_HelpEntry                                         OFFSET(get<T>, {0x578, 8, 0, 0})
};

/// Class /Script/FortniteUI.FortBannerSlotButton
/// Size: 0x0010 (0x0014E0 - 0x0014F0)
class UFortBannerSlotButton : public UCommonButtonLegacy
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 5360;

public:
	CMember(UFortPlayerBanner*)                        PlayerBanner                                                OFFSET(get<T>, {0x14E0, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortBannerSlotButton.HandleInventoryUpdated
	// void HandleInventoryUpdated(TSet<FString>& ItemChangeFlags, int64_t ProfileRevision);                                    // [0x90295d0] Final|Native|Protected|HasOutParms 
};

/// Class /Script/FortniteUI.FortChildNavigatableScrollBox
/// Size: 0x0000 (0x000C10 - 0x000C10)
class UFortChildNavigatableScrollBox : public UScrollBox
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 3088;

public:
};

/// Class /Script/FortniteUI.FortCosmeticLoadoutListData
/// Size: 0x0010 (0x000028 - 0x000038)
class UFortCosmeticLoadoutListData : public UObject
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 56;

public:
	CMember(UFortCosmeticLockerItem*)                  Loadout                                                     OFFSET(get<T>, {0x28, 8, 0, 0})
	CMember(EFortLoadoutCardType)                      CardType                                                    OFFSET(get<T>, {0x30, 1, 0, 0})
};

/// Class /Script/FortniteUI.FortCosmeticLoadoutCardButton
/// Size: 0x0010 (0x0014E0 - 0x0014F0)
class UFortCosmeticLoadoutCardButton : public UCommonButtonLegacy
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 5360;

public:
	CMember(UFortCosmeticLoadoutCard*)                 Card_Loadout                                                OFFSET(get<T>, {0x14E0, 8, 0, 0})
};

/// Class /Script/FortniteUI.FortCosmeticLoadoutListEntry
/// Size: 0x0010 (0x0014F0 - 0x001500)
class UFortCosmeticLoadoutListEntry : public UFortCosmeticLoadoutCardButton
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 5376;

public:
};

/// Class /Script/FortniteUI.FortCosmeticLoadoutScreen
/// Size: 0x0118 (0x000570 - 0x000688)
class UFortCosmeticLoadoutScreen : public UFortActivatablePanel
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1672;

public:
	SMember(FDataTableRowHandle)                       BackAction                                                  OFFSET(getStruct<T>, {0x598, 16, 0, 0})
	CMember(UClass*)                                   NameLoadoutPopupClass                                       OFFSET(get<T>, {0x5A8, 8, 0, 0})
	CMember(EFortCosmeticLoadoutScreenMode)            ScreenMode                                                  OFFSET(get<T>, {0x5B3, 1, 0, 0})
	CMember(UClass*)                                   AthenaConfirmationClass                                     OFFSET(get<T>, {0x5B8, 8, 0, 0})
	SMember(FText)                                     UnsavedPresetConfirmationTitle                              OFFSET(getStruct<T>, {0x5C0, 24, 0, 0})
	SMember(FText)                                     UnsavedPresetConfirmationDescriptionFormat                  OFFSET(getStruct<T>, {0x5D8, 24, 0, 0})
	SMember(FText)                                     UnsavedPresetConfirmationContinueButtonText                 OFFSET(getStruct<T>, {0x5F0, 24, 0, 0})
	SMember(FText)                                     UnsavedPresetConfirmationBackButtonText                     OFFSET(getStruct<T>, {0x608, 24, 0, 0})
	CMember(UObject*)                                  NewlySelectedItem                                           OFFSET(get<T>, {0x630, 8, 0, 0})
	CMember(UFortCosmeticLockerItem*)                  PreviewedLocker                                             OFFSET(get<T>, {0x638, 8, 0, 0})
	CMember(UWidget*)                                  Widget_ArchivedTag                                          OFFSET(get<T>, {0x640, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_NumArchived                                            OFFSET(get<T>, {0x648, 8, 0, 0})
	CMember(UTileView*)                                ListView_Loadouts                                           OFFSET(get<T>, {0x650, 8, 0, 0})
	CMember(UCommonButtonBase*)                        Button_CloseTouch                                           OFFSET(get<T>, {0x658, 8, 0, 0})
	CMember(UCommonButtonBase*)                        Button_RenameLoadout                                        OFFSET(get<T>, {0x660, 8, 0, 0})
	CMember(UCommonButtonBase*)                        Button_DeleteLoadout                                        OFFSET(get<T>, {0x668, 8, 0, 0})
	CMember(UCommonButtonBase*)                        SimpleFeatured_YellowButton                                 OFFSET(get<T>, {0x670, 8, 0, 0})
	CMember(UFortCosmeticLoadoutCard*)                 Card_SelectedPreset                                         OFFSET(get<T>, {0x678, 8, 0, 0})
	CMember(UCommonButtonBase*)                        Button_Back                                                 OFFSET(get<T>, {0x680, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortCosmeticLoadoutScreen.OnPreviewTile
	// void OnPreviewTile(EFortLoadoutCardType CardType);                                                                       // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortCosmeticLoadoutScreen.OnFlavorForScreenMode
	// void OnFlavorForScreenMode(EFortCosmeticLoadoutScreenMode NewMode);                                                      // [0x1d9241c] Event|Protected|BlueprintEvent 
};

/// Class /Script/FortniteUI.FortNameLoadoutPopup
/// Size: 0x0068 (0x000570 - 0x0005D8)
class UFortNameLoadoutPopup : public UFortActivatablePanel
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1496;

public:
	CMember(EFortNameLoadoutPopupType)                 PopupType                                                   OFFSET(get<T>, {0x570, 1, 0, 0})
	CMember(UFortCosmeticLockerItem*)                  TargetLoadout                                               OFFSET(get<T>, {0x5A0, 8, 0, 0})
	CMember(UFortEditableFilteredCountedTextBox*)      Text_EditableLoadoutName                                    OFFSET(get<T>, {0x5A8, 8, 0, 0})
	CMember(UCommonButtonBase*)                        Button_Accept                                               OFFSET(get<T>, {0x5B0, 8, 0, 0})
	CMember(UCommonButtonBase*)                        Button_Cancel                                               OFFSET(get<T>, {0x5B8, 8, 0, 0})
	CMember(UCommonButtonBase*)                        Button_CloseTouch                                           OFFSET(get<T>, {0x5C0, 8, 0, 0})
	CMember(UFortCosmeticLoadoutCard*)                 Card_NewPreset                                              OFFSET(get<T>, {0x5C8, 8, 0, 0})
	CMember(UFortCosmeticLoadoutCard*)                 Card_ExistingPreset                                         OFFSET(get<T>, {0x5D0, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortNameLoadoutPopup.OnAcceptFailed
	// void OnAcceptFailed();                                                                                                   // [0x1d9241c] Event|Protected|BlueprintEvent 
};

/// Class /Script/FortniteUI.FortHighlightWidget
/// Size: 0x0030 (0x0002C0 - 0x0002F0)
class UFortHighlightWidget : public UUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 752;

public:
	DMember(bool)                                      bDisableHighlightNotification                               OFFSET(get<bool>, {0x2D8, 1, 0, 0})
	CMember(UCommonTextBlock*)                         Text_Header                                                 OFFSET(get<T>, {0x2E0, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_Description                                            OFFSET(get<T>, {0x2E8, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortHighlightWidget.OnShowNotification
	// void OnShowNotification(bool bShowNotification);                                                                         // [0x1d9241c] Event|Protected|BlueprintEvent 
};

/// Class /Script/FortniteUI.FortLockerBuiltInEmoteWidget
/// Size: 0x0010 (0x0014E0 - 0x0014F0)
class UFortLockerBuiltInEmoteWidget : public UCommonButtonLegacy
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 5360;

public:
	CMember(UFortCosmeticItemCard*)                    Card_Item                                                   OFFSET(get<T>, {0x14E0, 8, 0, 0})
	CMember(UFortMontageItemDefinitionBase*)           EmoteDefinition                                             OFFSET(get<T>, {0x14E8, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortLockerBuiltInEmoteWidget.OnUpdateAccessRestrictionWarning
	// void OnUpdateAccessRestrictionWarning(bool bShouldShow, EAthenaLockerInfoRestrictionWarning WarningType);                // [0x1d9241c] Event|Protected|BlueprintEvent 
};

/// Class /Script/FortniteUI.FortRespawnPromptWidget
/// Size: 0x0000 (0x000570 - 0x000570)
class UFortRespawnPromptWidget : public UFortActivatablePanel
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1392;

public:
};

/// Class /Script/FortniteUI.FortTravelLogMap
/// Size: 0x0030 (0x0002C0 - 0x0002F0)
class UFortTravelLogMap : public UUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 752;

public:
	DMember(float)                                     MapSize                                                     OFFSET(get<float>, {0x2C0, 4, 0, 0})
	DMember(float)                                     CurrentTimeFraction                                         OFFSET(get<float>, {0x2C4, 4, 0, 0})
	DMember(int32_t)                                   DistanceToCoalescePositions                                 OFFSET(get<int32_t>, {0x2C8, 4, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortTravelLogMap.InitializeFromTravelRecord
	// void InitializeFromTravelRecord(FAthenaTravelRecord& Record);                                                            // [0x9068434] Final|Native|Public|HasOutParms|BlueprintCallable 
};

/// Class /Script/FortniteUI.FortTutorialLobbyPopup
/// Size: 0x0078 (0x000570 - 0x0005E8)
class UFortTutorialLobbyPopup : public UFortActivatablePanel
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1512;

public:
	CMember(UFortPlaylistAthena*)                      TutorialPlaylistData                                        OFFSET(get<T>, {0x570, 8, 0, 0})
	CMember(UFortPlaylistAthena*)                      Tutorial_DefensiveBuildingPlaylistData                      OFFSET(get<T>, {0x578, 8, 0, 0})
	CMember(UFortPlaylistAthena*)                      SoloPlaylistData                                            OFFSET(get<T>, {0x580, 8, 0, 0})
	CMember(UWidgetSwitcher*)                          WidgetSwitcher_PopupTutorial                                OFFSET(get<T>, {0x588, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortTutorialLobbyPopup.StartTutorial
	// void StartTutorial();                                                                                                    // [0x906928c] Final|Native|Private|BlueprintCallable 
	// Function /Script/FortniteUI.FortTutorialLobbyPopup.SkipTutorial
	// void SkipTutorial();                                                                                                     // [0x9069278] Final|Native|Private|BlueprintCallable 
};

/// Class /Script/FortniteUI.FortVariantListPreviewWidget
/// Size: 0x0030 (0x000400 - 0x000430)
class UFortVariantListPreviewWidget : public UCommonActivatableWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1072;

public:
	CMember(UFortVariantPicker*)                       Picker_VariantSelector                                      OFFSET(get<T>, {0x418, 8, 0, 0})
	CMember(UCommonBorder*)                            Container_StyleDisclaimer                                   OFFSET(get<T>, {0x420, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_StyleDisclaimer                                        OFFSET(get<T>, {0x428, 8, 0, 0})
};

/// Class /Script/FortniteUI.AthenaBoundActionBar
/// Size: 0x0000 (0x000288 - 0x000288)
class UAthenaBoundActionBar : public UCommonBoundActionBar
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 648;

public:
};

/// Class /Script/FortniteUI.AthenaGameFeatureStatus
/// Size: 0x00B0 (0x0002E8 - 0x000398)
class UAthenaGameFeatureStatus : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 920;

public:
	SMember(FText)                                     ProgressStatusToastTitle                                    OFFSET(getStruct<T>, {0x2E8, 24, 0, 0})
	CMember(EFortGameFeature)                          GameFeature                                                 OFFSET(get<T>, {0x300, 1, 0, 0})
	DMember(bool)                                      bExtendedDisplay                                            OFFSET(get<bool>, {0x301, 1, 0, 0})
	SMember(FText)                                     ExtendedDisplayText                                         OFFSET(getStruct<T>, {0x308, 24, 0, 0})
	CMember(TWeakObjectPtr<UObject*>)                  DownloadingIconAsset                                        OFFSET(get<T>, {0x320, 32, 0, 0})
	CMember(TWeakObjectPtr<UObject*>)                  InitialToastNotificationIcon                                OFFSET(get<T>, {0x340, 32, 0, 0})
	SMember(FName)                                     DownloadingIconMaterialParam                                OFFSET(getStruct<T>, {0x360, 4, 0, 0})
	CMember(UFortLazyImage*)                           Image_DownloadingIcon                                       OFFSET(get<T>, {0x368, 8, 0, 0})
	CMember(UCommonNumericTextBlock*)                  Text_ProgressPercent                                        OFFSET(get<T>, {0x370, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_ExtendedDisplayText                                    OFFSET(get<T>, {0x378, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.AthenaGameFeatureStatus.OnStatusChanged
	// void OnStatusChanged(EAthenaGameFeatureStatus NewStatus);                                                                // [0x1d9241c] Event|Protected|BlueprintEvent 
};

/// Class /Script/FortniteUI.AthenaLetoLogin
/// Size: 0x0028 (0x000400 - 0x000428)
class UAthenaLetoLogin : public UCommonActivatableWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1064;

public:
	CMember(UPanelWidget*)                             Panel_Login                                                 OFFSET(get<T>, {0x400, 8, 0, 0})
	CMember(UClass*)                                   LoginWidgetClass                                            OFFSET(get<T>, {0x408, 8, 0, 0})
};

/// Class /Script/FortniteUI.AthenaQuestProgression
/// Size: 0x0020 (0x0002E8 - 0x000308)
class UAthenaQuestProgression : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 776;

public:
	CMember(UCommonTextBlock*)                         Text_ChallengeDescription                                   OFFSET(get<T>, {0x2E8, 8, 0, 0})
	CMember(UCommonRichTextBlock*)                     RichText_ChallengeCount                                     OFFSET(get<T>, {0x2F0, 8, 0, 0})
	CMember(UProgressBar*)                             ProgressBar_Challenge_Front                                 OFFSET(get<T>, {0x2F8, 8, 0, 0})
	CMember(UProgressBar*)                             ProgressBar_Challenge_Back                                  OFFSET(get<T>, {0x300, 8, 0, 0})
};

/// Class /Script/FortniteUI.AthenaGadgetFuelWidget
/// Size: 0x0028 (0x0002E8 - 0x000310)
class UAthenaGadgetFuelWidget : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 784;

public:
	CMember(TWeakObjectPtr<UAthenaGadgetItemDefinition*>) AthenaGadgetItemDefinition                               OFFSET(get<T>, {0x2E8, 8, 0, 0})
	CMember(EFortFuelGadgetVisualType)                 FortFuelGadgetVisualType                                    OFFSET(get<T>, {0x2F0, 1, 0, 0})
	CMember(UFortFuelGaugeIndicator*)                  FuelGaugeIndicator_Main                                     OFFSET(get<T>, {0x2F8, 8, 0, 0})
	CMember(UCommonNumericTextBlock*)                  CurrentChargesText                                          OFFSET(get<T>, {0x300, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.AthenaGadgetFuelWidget.SetItem
	// void SetItem(UFortWorldItem* Item);                                                                                      // [0x2ccacf4] Final|Native|Protected|BlueprintCallable 
};

/// Class /Script/FortniteUI.MassiveGadgetEquippedWidget
/// Size: 0x0000 (0x0002E8 - 0x0002E8)
class UMassiveGadgetEquippedWidget : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 744;

public:
};

/// Class /Script/FortniteUI.HardcoreModifierFlyover
/// Size: 0x0060 (0x0002E8 - 0x000348)
class UHardcoreModifierFlyover : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 840;

public:
};

/// Class /Script/FortniteUI.HardcoreModifierListEntry
/// Size: 0x0028 (0x0002E8 - 0x000310)
class UHardcoreModifierListEntry : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 784;

public:
	CMember(UCommonTextBlock*)                         Text_Modifier                                               OFFSET(get<T>, {0x2F0, 8, 0, 0})
	CMember(UButton*)                                  Button_ClickCatcher                                         OFFSET(get<T>, {0x2F8, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.HardcoreModifierListEntry.SetMaxLevelCompleted
	// void SetMaxLevelCompleted(int32_t MaxLevel);                                                                             // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.HardcoreModifierListEntry.HandleModifierEnabled
	// void HandleModifierEnabled(bool bModifierEnabled);                                                                       // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.HardcoreModifierListEntry.HandleEntryClicked
	// void HandleEntryClicked();                                                                                               // [0x1a6975c] Native|Protected     
};

/// Class /Script/FortniteUI.HardcoreModifierPreviewPane
/// Size: 0x0038 (0x0002E8 - 0x000320)
class UHardcoreModifierPreviewPane : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 800;

public:
	CMember(UFortLazyImage*)                           Image_ChallengePreview                                      OFFSET(get<T>, {0x2E8, 8, 0, 0})
	CMember(UCommonTextBlock*)                         TextBlock_CurrentChallenge                                  OFFSET(get<T>, {0x2F0, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_Top50Count                                             OFFSET(get<T>, {0x2F8, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_Top25Count                                             OFFSET(get<T>, {0x300, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_Top10Count                                             OFFSET(get<T>, {0x308, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_Top5Count                                              OFFSET(get<T>, {0x310, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_VRCount                                                OFFSET(get<T>, {0x318, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.HardcoreModifierPreviewPane.SetAccoladeCount
	// void SetAccoladeCount(int32_t AccoladeRank, int32_t NumTimesEarned);                                                     // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.HardcoreModifierPreviewPane.HandleMaxLevelCompleted
	// void HandleMaxLevelCompleted(int32_t Level);                                                                             // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.HardcoreModifierPreviewPane.BP_HandleModifierChanged
	// void BP_HandleModifierChanged();                                                                                         // [0x1d9241c] Event|Protected|BlueprintEvent 
};

/// Class /Script/FortniteUI.HardcoreModifierListView
/// Size: 0x0108 (0x000298 - 0x0003A0)
class UHardcoreModifierListView : public UListViewBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 928;

public:
};

/// Class /Script/FortniteUI.HardcoreModifierSelectionScreen
/// Size: 0x0030 (0x000400 - 0x000430)
class UHardcoreModifierSelectionScreen : public UCommonActivatableWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1072;

public:
	CMember(UCommonTextBlock*)                         TextBlock_Heading                                           OFFSET(get<T>, {0x400, 8, 0, 0})
	CMember(UCommonTextBlock*)                         TextBlock_Description                                       OFFSET(get<T>, {0x408, 8, 0, 0})
	CMember(UHardcoreModifierListView*)                ListView_Challenges                                         OFFSET(get<T>, {0x410, 8, 0, 0})
	CMember(UHardcoreModifierPreviewPane*)             PreviewPane_Modifier                                        OFFSET(get<T>, {0x418, 8, 0, 0})
	CMember(UCommonButtonLegacy*)                      Button_Save                                                 OFFSET(get<T>, {0x420, 8, 0, 0})
	CMember(UCommonButtonLegacy*)                      Button_Cancel                                               OFFSET(get<T>, {0x428, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.HardcoreModifierSelectionScreen.ApplyModifiers
	// void ApplyModifiers();                                                                                                   // [0x906739c] Final|Native|Private 
};

/// Class /Script/FortniteUI.HardcoreModifierStatusBar
/// Size: 0x0000 (0x0002E8 - 0x0002E8)
class UHardcoreModifierStatusBar : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 744;

public:
};

/// Class /Script/FortniteUI.FortAerialFeedback
/// Size: 0x0030 (0x000328 - 0x000358)
class UFortAerialFeedback : public UFortHUDElementWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 856;

public:
	CMember(UFortKeybindWidget*)                       KeyBind                                                     OFFSET(get<T>, {0x328, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_Feedback                                               OFFSET(get<T>, {0x330, 8, 0, 0})
};

/// Class /Script/FortniteUI.AthenaAerialFeedback
/// Size: 0x0040 (0x000358 - 0x000398)
class UAthenaAerialFeedback : public UFortAerialFeedback
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 920;

public:
	SMember(FGameplayTagContainer)                     GliderRedeployTags                                          OFFSET(getStruct<T>, {0x358, 32, 0, 0})
	SMember(FGameplayTag)                              AirbagDeployTag                                             OFFSET(getStruct<T>, {0x378, 4, 0, 0})
	CMember(UFortItemDefinition*)                      AirbagItemDefinition                                        OFFSET(get<T>, {0x380, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.AthenaAerialFeedback.HandleSkydiveLeaderChanged
	// void HandleSkydiveLeaderChanged(bool bEnabled, bool bLocal, AFortPlayerState* LeaderPlayerState);                        // [0x9068090] Final|Native|Private 
	// Function /Script/FortniteUI.AthenaAerialFeedback.HandleKeybindsChanged
	// void HandleKeybindsChanged();                                                                                            // [0x9067770] Final|Native|Private 
	// Function /Script/FortniteUI.AthenaAerialFeedback.HandleBalloonMovementChanged
	// void HandleBalloonMovementChanged(bool bUsingBalloonMovement);                                                           // [0x90674d8] Final|Native|Private 
};

/// Class /Script/FortniteUI.AthenaAerialVOMute
/// Size: 0x0010 (0x000328 - 0x000338)
class UAthenaAerialVOMute : public UFortHUDElementWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 824;

public:
	CMember(UFortKeybindWidget*)                       KeyBind                                                     OFFSET(get<T>, {0x328, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_Feedback                                               OFFSET(get<T>, {0x330, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.AthenaAerialVOMute.OnVOMuteStateChanged
	// void OnVOMuteStateChanged(bool bIsMuted);                                                                                // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaAerialVOMute.OnVOMuteHoldStarted
	// void OnVOMuteHoldStarted(float Duration);                                                                                // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaAerialVOMute.OnVOMuteHoldEnded
	// void OnVOMuteHoldEnded();                                                                                                // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaAerialVOMute.HandleQuestVOPlayStateChanged
	// void HandleQuestVOPlayStateChanged(bool bIsPlaying);                                                                     // [0x9067f84] Final|Native|Private 
	// Function /Script/FortniteUI.AthenaAerialVOMute.HandleQuestVOMuteStateChanged
	// void HandleQuestVOMuteStateChanged(bool bIsMuted);                                                                       // [0x9067f84] Final|Native|Private 
	// Function /Script/FortniteUI.AthenaAerialVOMute.HandleQuestVOMuteHoldStarted
	// void HandleQuestVOMuteHoldStarted(float Duration);                                                                       // [0x9067f04] Final|Native|Private 
	// Function /Script/FortniteUI.AthenaAerialVOMute.HandleQuestVOMuteHoldEnded
	// void HandleQuestVOMuteHoldEnded();                                                                                       // [0x9067ef0] Final|Native|Private 
	// Function /Script/FortniteUI.AthenaAerialVOMute.HandleKeybindsChanged
	// void HandleKeybindsChanged();                                                                                            // [0x9067784] Final|Native|Private 
};

/// Class /Script/FortniteUI.AthenaHUDContextualControls
/// Size: 0x0140 (0x0002E8 - 0x000428)
class UAthenaHUDContextualControls : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1064;

public:
};

/// Class /Script/FortniteUI.AthenaHUDMenu
/// Size: 0x00E0 (0x0002E8 - 0x0003C8)
class UAthenaHUDMenu : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 968;

public:
	CMember(UOverlay*)                                 Overlay_AllContent                                          OFFSET(get<T>, {0x2E8, 8, 0, 0})
	CMember(UFortDualBladeMenu*)                       DualBladeMenu                                               OFFSET(get<T>, {0x2F0, 8, 0, 0})
	CMember(UAthenaInventoryScreenContainer*)          InventoryScreenContainer                                    OFFSET(get<T>, {0x2F8, 8, 0, 0})
	CMember(UCommonUserWidget*)                        BottomBar                                                   OFFSET(get<T>, {0x300, 8, 0, 0})
	CMember(UCommonActivatableWidgetStack*)            WidgetStack_PrimaryContent                                  OFFSET(get<T>, {0x308, 8, 0, 0})
	CMember(UWidget*)                                  Container_ServerShutdownTimer                               OFFSET(get<T>, {0x310, 8, 0, 0})
	CMember(UScaleBox*)                                ScaleBox_LetoSplitscreen                                    OFFSET(get<T>, {0x318, 8, 0, 0})
	CMember(UWidget*)                                  Container_ContentOnDemand                                   OFFSET(get<T>, {0x320, 8, 0, 0})
	SMember(FGameplayTagContainer)                     HideOnMenuTags                                              OFFSET(getStruct<T>, {0x328, 32, 0, 0})
	SMember(FGameplayTagContainer)                     TagsToShow                                                  OFFSET(getStruct<T>, {0x348, 32, 0, 0})
	CMember(UClass*)                                   GameOverScreenClass                                         OFFSET(get<T>, {0x368, 8, 0, 0})
	CMember(UClass*)                                   PostGameScreenRootClass                                     OFFSET(get<T>, {0x370, 8, 0, 0})
	CMember(UFortPostGameScreenRoot*)                  PostGameScreenRoot                                          OFFSET(get<T>, {0x378, 8, 0, 0})
	DMember(bool)                                      bShowingGameOverScreen                                      OFFSET(get<bool>, {0x380, 1, 0, 0})
	DMember(bool)                                      bShowingWinnerScreen                                        OFFSET(get<bool>, {0x381, 1, 0, 0})
	DMember(bool)                                      bStartedPostGame                                            OFFSET(get<bool>, {0x382, 1, 0, 0})
	CMember(UAthenaGameOverDisplay*)                   GameOverScreen                                              OFFSET(get<T>, {0x388, 8, 0, 0})
	CMember(UUserWidget*)                              InventoryPanelOverride                                      OFFSET(get<T>, {0x390, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.AthenaHUDMenu.StartPostGame
	// void StartPostGame();                                                                                                    // [0x906817c] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.AthenaHUDMenu.SetInventoryPanelOverride
	// void SetInventoryPanelOverride(UUserWidget* InInventoryPanelOverride);                                                   // [0x9067c30] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.AthenaHUDMenu.RecoverFromPostGame
	// void RecoverFromPostGame();                                                                                              // [0x9068000] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.AthenaHUDMenu.PostBindCheckConditions
	// void PostBindCheckConditions();                                                                                          // [0x2426194] Final|Native|Private 
	// Function /Script/FortniteUI.AthenaHUDMenu.OnWidgetStackCleared
	// void OnWidgetStackCleared();                                                                                             // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaHUDMenu.NativeHandleCursorModeChanged
	// void NativeHandleCursorModeChanged(bool bCursorModeEnabled, FName ActionName, UUserWidget* CursorModeContentWidget);     // [0x90684e4] Final|Native|Private 
	// Function /Script/FortniteUI.AthenaHUDMenu.HandleStartPostGame
	// void HandleStartPostGame();                                                                                              // [0x906817c] Final|Native|Private 
	// Function /Script/FortniteUI.AthenaHUDMenu.HandleRecoverFromPostGame
	// void HandleRecoverFromPostGame();                                                                                        // [0x9068000] Final|Native|Private 
	// Function /Script/FortniteUI.AthenaHUDMenu.HandlePreviewScreenshotCameraActivated
	// void HandlePreviewScreenshotCameraActivated(bool bActivated);                                                            // [0x9067d3c] Final|Native|Private 
	// Function /Script/FortniteUI.AthenaHUDMenu.HandleOverrideInventoryPanel
	// void HandleOverrideInventoryPanel(UUserWidget* Widget);                                                                  // [0x9067c30] Final|Native|Private 
	// Function /Script/FortniteUI.AthenaHUDMenu.HandleMinigameStateChanged
	// void HandleMinigameStateChanged(AFortMinigame* Minigame, EFortMinigameState MinigameState);                              // [0x9067b58] Final|Native|Private 
	// Function /Script/FortniteUI.AthenaHUDMenu.HandleLocalPlayerRevived
	// void HandleLocalPlayerRevived();                                                                                         // [0x90678d0] Final|Native|Private|BlueprintCallable 
	// Function /Script/FortniteUI.AthenaHUDMenu.HandleLocalPlayerOrTeamWon
	// void HandleLocalPlayerOrTeamWon();                                                                                       // [0x90678bc] Final|Native|Private|BlueprintCallable 
	// Function /Script/FortniteUI.AthenaHUDMenu.HandleLocalPlayerLost
	// void HandleLocalPlayerLost(EEndOfMatchReason LostReason);                                                                // [0x906783c] Final|Native|Private 
	// Function /Script/FortniteUI.AthenaHUDMenu.HandleLocalPlayerDied
	// void HandleLocalPlayerDied(FFortPlayerDeathReport& DeathReport);                                                         // [0x9067798] Final|Native|Private|HasOutParms|BlueprintCallable 
	// Function /Script/FortniteUI.AthenaHUDMenu.CreateOrShowGameOverScreen
	// UAthenaGameOverDisplay* CreateOrShowGameOverScreen();                                                                    // [0x90673d8] Final|Native|Private|BlueprintCallable 
	// Function /Script/FortniteUI.AthenaHUDMenu.ClearGameOverScreen
	// void ClearGameOverScreen();                                                                                              // [0x90673c4] Final|Native|Private|BlueprintCallable 
	// Function /Script/FortniteUI.AthenaHUDMenu.BP_OnPostGameStarted
	// void BP_OnPostGameStarted();                                                                                             // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaHUDMenu.BP_OnPostGameEnded
	// void BP_OnPostGameEnded();                                                                                               // [0x1d9241c] Event|Protected|BlueprintEvent 
};

/// Class /Script/FortniteUI.AthenaItemListWidget
/// Size: 0x0098 (0x000328 - 0x0003C0)
class UAthenaItemListWidget : public UFortHUDElementWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 960;

public:
	SMember(FFortItemFilterDefinition)                 ItemFilter                                                  OFFSET(getStruct<T>, {0x330, 96, 0, 0})
	SMember(FGameplayTagContainer)                     ItemFilterTags                                              OFFSET(getStruct<T>, {0x390, 32, 0, 0})
	CMember(EInventoryContentSortType)                 ItemSortType                                                OFFSET(get<T>, {0x3B0, 1, 0, 0})
	CMember(UFortItemListView*)                        ItemListView                                                OFFSET(get<T>, {0x3B8, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.AthenaItemListWidget.OnInventoryUpdated
	// void OnInventoryUpdated();                                                                                               // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaItemListWidget.HandleInventoryUpdated
	// void HandleInventoryUpdated();                                                                                           // [0x906775c] Final|Native|Private 
};

/// Class /Script/FortniteUI.AthenaKillFeedEntryWidget
/// Size: 0x0000 (0x000328 - 0x000328)
class UAthenaKillFeedEntryWidget : public UFortHUDElementWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 808;

public:
};

/// Class /Script/FortniteUI.AthenaKillFeedWidget
/// Size: 0x0018 (0x000370 - 0x000388)
class UAthenaKillFeedWidget : public UAthenaCommonPrioritizedWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 904;

public:
	CMember(UPanelWidget*)                             EntriesContainer                                            OFFSET(get<T>, {0x370, 8, 0, 0})
	CMember(UClass*)                                   KillfeedEntryClass                                          OFFSET(get<T>, {0x378, 8, 0, 0})
	DMember(float)                                     MaxDisplayTimeInSeconds                                     OFFSET(get<float>, {0x380, 4, 0, 0})
	DMember(int32_t)                                   MaxKillFeedEntries                                          OFFSET(get<int32_t>, {0x384, 4, 0, 0})
};

/// Class /Script/FortniteUI.AthenaLevelEffects
/// Size: 0x0060 (0x0002E8 - 0x000348)
class UAthenaLevelEffects : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 840;

public:
	CMember(TArray<FLevelEffectsData>)                 EffectsData                                                 OFFSET(get<T>, {0x2E8, 16, 0, 0})
	CMember(TArray<FName>)                             FlameMaterialParameters                                     OFFSET(get<T>, {0x2F8, 16, 0, 0})
	SMember(FVector2D)                                 FlameMaterialRandomRange                                    OFFSET(getStruct<T>, {0x308, 16, 0, 0})
	CMember(UCommonBorder*)                            Border_Container                                            OFFSET(get<T>, {0x318, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_LvlDesc                                                OFFSET(get<T>, {0x320, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_Level                                                  OFFSET(get<T>, {0x328, 8, 0, 0})
	CMember(UCommonLazyImage*)                         LazyImage_Flame                                             OFFSET(get<T>, {0x330, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.AthenaLevelEffects.SetPlayerState
	// void SetPlayerState(AFortPlayerStateAthena* InPSA);                                                                      // [0x90691f8] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.AthenaLevelEffects.OverridePlayerLevel
	// void OverridePlayerLevel(int32_t PlayerLevel);                                                                           // [0x9069138] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.AthenaLevelEffects.BP_HandleEffectsLevelChanged
	// void BP_HandleEffectsLevelChanged(int32_t EffectsLevel);                                                                 // [0x1d9241c] Event|Protected|BlueprintEvent 
};

/// Class /Script/FortniteUI.AthenaMinigameActivityWidget
/// Size: 0x0090 (0x0002E8 - 0x000378)
class UAthenaMinigameActivityWidget : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 888;

public:
	CMember(TMap<EMinigameActivityWidgetStatFormat, FText>) StatFormats                                            OFFSET(get<T>, {0x2E8, 80, 0, 0})
	CMember(UCommonTextBlock*)                         Text_ActivityName                                           OFFSET(get<T>, {0x338, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_Stat                                                   OFFSET(get<T>, {0x340, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_AddTime                                                OFFSET(get<T>, {0x348, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_Score                                                  OFFSET(get<T>, {0x350, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_Lap                                                    OFFSET(get<T>, {0x358, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_BestLapTime                                            OFFSET(get<T>, {0x360, 8, 0, 0})
	DMember(bool)                                      bMinigameActive                                             OFFSET(get<bool>, {0x368, 1, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.AthenaMinigameActivityWidget.BP_OnMinigameTimerUIEnabledChanged
	// void BP_OnMinigameTimerUIEnabledChanged(bool bEnabled);                                                                  // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaMinigameActivityWidget.BP_OnMinigameProgressUIEnabledChanged
	// void BP_OnMinigameProgressUIEnabledChanged(bool bEnabled);                                                               // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaMinigameActivityWidget.BP_OnMinigameBestLapTimeUIEnabledChanged
	// void BP_OnMinigameBestLapTimeUIEnabledChanged(bool bEnabled);                                                            // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaMinigameActivityWidget.BP_OnHandleMinigameUIEnabledChanged
	// void BP_OnHandleMinigameUIEnabledChanged(bool bEnabled);                                                                 // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaMinigameActivityWidget.BP_OnHandleMinigameTimeChanged
	// void BP_OnHandleMinigameTimeChanged(float Time, float Delta);                                                            // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaMinigameActivityWidget.BP_OnHandleMinigameStarted
	// void BP_OnHandleMinigameStarted(FMinigameActivityStartedData& StartData);                                                // [0x1d9241c] Event|Protected|HasOutParms|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaMinigameActivityWidget.BP_OnHandleMinigameScoreChanged
	// void BP_OnHandleMinigameScoreChanged(int32_t CurrentScore, int32_t TotalScore);                                          // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaMinigameActivityWidget.BP_OnHandleMinigameRankChanged
	// void BP_OnHandleMinigameRankChanged(int32_t Rank);                                                                       // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaMinigameActivityWidget.BP_OnHandleMinigameLapsChanged
	// void BP_OnHandleMinigameLapsChanged(int32_t CurrentLap, int32_t MaxLaps);                                                // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaMinigameActivityWidget.BP_OnHandleMinigameEnded
	// void BP_OnHandleMinigameEnded(FMinigameActivityEndedData& EndData);                                                      // [0x1d9241c] Event|Protected|HasOutParms|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaMinigameActivityWidget.BP_OnHandleMinigameDistanceChanged
	// void BP_OnHandleMinigameDistanceChanged(float Distance);                                                                 // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaMinigameActivityWidget.BP_OnHandleMinigameBestLapTimeChanged
	// void BP_OnHandleMinigameBestLapTimeChanged(float BestLapTime);                                                           // [0x1d9241c] Event|Protected|BlueprintEvent 
};

/// Class /Script/FortniteUI.AthenaPinnedQuestInfo
/// Size: 0x0018 (0x000328 - 0x000340)
class UAthenaPinnedQuestInfo : public UFortHUDElementWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 832;

public:
	CMember(UFortLazyImage*)                           LazyImage_PinColor                                          OFFSET(get<T>, {0x328, 8, 0, 0})
	DMember(int32_t)                                   NumAllowedQuestDescCharacters                               OFFSET(get<int32_t>, {0x338, 4, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.AthenaPinnedQuestInfo.HandleQuestUpdate
	// void HandleQuestUpdate(UFortQuestObjectiveInfo* QuestObjective, bool bDisplayStatusUpdate, bool bDisplayAnnouncementUpdate); // [0x9067dc4] Final|Native|Private 
	// Function /Script/FortniteUI.AthenaPinnedQuestInfo.HandlePinnedQuestChanged
	// void HandlePinnedQuestChanged(FAthenaPinnedQuestData& PinnedQuestData);                                                  // [0x9067cb0] Final|Native|Private|HasOutParms 
	// Function /Script/FortniteUI.AthenaPinnedQuestInfo.HandleCurrentQuestsChanged
	// void HandleCurrentQuestsChanged();                                                                                       // [0x9067558] Final|Native|Private 
	// Function /Script/FortniteUI.AthenaPinnedQuestInfo.BP_OnSetPinnedQuestInfo
	// void BP_OnSetPinnedQuestInfo(int32_t Achieved, int32_t Required, EFortRarity Rarity, FText& Description);                // [0x1d9241c] Event|Protected|HasOutParms|BlueprintEvent 
};

/// Class /Script/FortniteUI.AthenaPinnedQuestList
/// Size: 0x0008 (0x000328 - 0x000330)
class UAthenaPinnedQuestList : public UFortHUDElementWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 816;

public:
	CMember(UAthenaPinnedQuestInfo*)                   PinnedQuestInfo_LocalPlayer                                 OFFSET(get<T>, {0x328, 8, 0, 0})
};

/// Class /Script/FortniteUI.AthenaRespawnTimer
/// Size: 0x0150 (0x000328 - 0x000478)
class UAthenaRespawnTimer : public UFortHUDElementWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1144;

public:
	DMember(float)                                     MinUpdateTime                                               OFFSET(get<float>, {0x468, 4, 0, 0})
	DMember(float)                                     CreativeMinUpdateTime                                       OFFSET(get<float>, {0x46C, 4, 0, 0})
	CMember(UCommonTextBlock*)                         Text_Time                                                   OFFSET(get<T>, {0x470, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.AthenaRespawnTimer.OnTimeEnded
	// void OnTimeEnded();                                                                                                      // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaRespawnTimer.OnTickDown
	// void OnTickDown();                                                                                                       // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaRespawnTimer.HandleStartedRespawn
	// void HandleStartedRespawn(AFortPlayerControllerZone* PlayerController);                                                  // [0x9068190] Final|Native|Private 
	// Function /Script/FortniteUI.AthenaRespawnTimer.AddExtensionWidget_BP
	// void AddExtensionWidget_BP(UWidget* Widget);                                                                             // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaRespawnTimer.AddExtensionWidget
	// void AddExtensionWidget(UWidget* Widget);                                                                                // [0x90672fc] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/FortniteUI.AthenaTeamMemberDBNOCountdown
/// Size: 0x0018 (0x0002E8 - 0x000300)
class UAthenaTeamMemberDBNOCountdown : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 768;

public:
	CMember(UImage*)                                   Image_Timer                                                 OFFSET(get<T>, {0x2E8, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.AthenaTeamMemberDBNOCountdown.SetPlayerState
	// void SetPlayerState(AFortPlayerStateAthena* InPlayerState);                                                              // [0x2863234] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/FortniteUI.AthenaTeamMemberDBNOState
/// Size: 0x00A8 (0x0002E8 - 0x000390)
class UAthenaTeamMemberDBNOState : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 912;

public:
	CMember(TWeakObjectPtr<UObject*>)                  DBNOIndicatorVisual                                         OFFSET(get<T>, {0x2E8, 32, 0, 0})
	CMember(TWeakObjectPtr<UObject*>)                  RevivingIndicatorVisual                                     OFFSET(get<T>, {0x308, 32, 0, 0})
	CMember(UCommonVisibilitySwitcher*)                Switcher_Indicator                                          OFFSET(get<T>, {0x328, 8, 0, 0})
	CMember(UPanelWidget*)                             Panel_DefaultIndicator                                      OFFSET(get<T>, {0x330, 8, 0, 0})
	CMember(UPanelWidget*)                             Panel_CustomIndicator                                       OFFSET(get<T>, {0x338, 8, 0, 0})
	CMember(UCommonLazyImage*)                         LazyImage_Indicator                                         OFFSET(get<T>, {0x340, 8, 0, 0})
	CMember(UImage*)                                   Image_Timer                                                 OFFSET(get<T>, {0x348, 8, 0, 0})
	CMember(UCommonLazyWidget*)                        LazyWidget_CustomWidgetContainer                            OFFSET(get<T>, {0x350, 8, 0, 0})
	CMember(UCommonLazyImage*)                         LazyImage_CustomWidgetTimer                                 OFFSET(get<T>, {0x358, 8, 0, 0})
	SMember(FName)                                     StartTimeName                                               OFFSET(getStruct<T>, {0x360, 4, 0, 0})
	SMember(FName)                                     BaseDurationName                                            OFFSET(getStruct<T>, {0x364, 4, 0, 0})
	SMember(FName)                                     InteractingMultiplierName                                   OFFSET(getStruct<T>, {0x368, 4, 0, 0})
	SMember(FName)                                     TotalDurationName                                           OFFSET(getStruct<T>, {0x36C, 4, 0, 0})
	SMember(FName)                                     NewMethodWeightName                                         OFFSET(getStruct<T>, {0x370, 4, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.AthenaTeamMemberDBNOState.SetPlayerState
	// void SetPlayerState(AFortPlayerStateAthena* InPlayerState);                                                              // [0x1d38504] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.AthenaTeamMemberDBNOState.RefreshVisuals
	// void RefreshVisuals(int32_t InteractingActorCount, float InteractingMultiplier, float InteractDuration);                 // [0x1d38ac0] Final|Native|Public  
};

/// Class /Script/FortniteUI.AthenaCollectionItemToast
/// Size: 0x0080 (0x000328 - 0x0003A8)
class UAthenaCollectionItemToast : public UFortHUDElementWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 936;

public:
	DMember(float)                                     OpenCollectionScreenInputHoldTime                           OFFSET(get<float>, {0x350, 4, 0, 0})
	CMember(TArray<FName>)                             BoundActions                                                OFFSET(get<T>, {0x358, 16, 0, 0})
	CMember(UCommonTextBlock*)                         Text_ItemNumber                                             OFFSET(get<T>, {0x368, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_ItemName                                               OFFSET(get<T>, {0x370, 8, 0, 0})
	CMember(UCommonLazyImage*)                         LazyImage_ItemImage                                         OFFSET(get<T>, {0x378, 8, 0, 0})
	CMember(UButton*)                                  Button_MobileClickCatcher                                   OFFSET(get<T>, {0x380, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.AthenaCollectionItemToast.ResetToast
	// void ResetToast();                                                                                                       // [0x90691cc] Native|Protected     
	// Function /Script/FortniteUI.AthenaCollectionItemToast.HandleMobileClick
	// void HandleMobileClick();                                                                                                // [0x9067c1c] Final|Native|Private 
	// Function /Script/FortniteUI.AthenaCollectionItemToast.BPCallableIsDesignTime
	// bool BPCallableIsDesignTime();                                                                                           // [0x2a1f97c] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.AthenaCollectionItemToast.BP_OnToastUpdated
	// void BP_OnToastUpdated(EFortCollectedState CollectedState, int32_t NumCollected);                                        // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaCollectionItemToast.BP_OnToastReset
	// void BP_OnToastReset();                                                                                                  // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaCollectionItemToast.BP_OnDisplayToast
	// void BP_OnDisplayToast();                                                                                                // [0x1d9241c] Event|Protected|BlueprintEvent 
};

/// Class /Script/FortniteUI.AthenaCollectionItemToastCharacter
/// Size: 0x0020 (0x0003A8 - 0x0003C8)
class UAthenaCollectionItemToastCharacter : public UAthenaCollectionItemToast
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 968;

public:
	SMember(FText)                                     NumLocationsFormat                                          OFFSET(getStruct<T>, {0x3A8, 24, 0, 0})
	CMember(UCommonRichTextBlock*)                     RichText_NumLocations                                       OFFSET(get<T>, {0x3C0, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.AthenaCollectionItemToastCharacter.BP_OnLocationsSet
	// void BP_OnLocationsSet(int32_t NumFound, int32_t NumLocations);                                                          // [0x1d9241c] Event|Protected|BlueprintEvent 
};

/// Class /Script/FortniteUI.AthenaCollectionItemToastFishing
/// Size: 0x0048 (0x0003A8 - 0x0003F0)
class UAthenaCollectionItemToastFishing : public UAthenaCollectionItemToast
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1008;

public:
	SMember(FText)                                     LengthFormat                                                OFFSET(getStruct<T>, {0x3A8, 24, 0, 0})
	SMember(FText)                                     LeaderLengthFormat                                          OFFSET(getStruct<T>, {0x3C0, 24, 0, 0})
	CMember(UCommonRichTextBlock*)                     RichText_Length                                             OFFSET(get<T>, {0x3D8, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_LeaderName                                             OFFSET(get<T>, {0x3E0, 8, 0, 0})
	CMember(UCommonRichTextBlock*)                     RichText_LeaderLength                                       OFFSET(get<T>, {0x3E8, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.AthenaCollectionItemToastFishing.BP_OnUnlockedNewClue
	// void BP_OnUnlockedNewClue();                                                                                             // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaCollectionItemToastFishing.BP_OnStarRatingSet
	// void BP_OnStarRatingSet(int32_t StarRating);                                                                             // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaCollectionItemToastFishing.BP_OnRankSet
	// void BP_OnRankSet(int32_t Rank, int32_t NumEntries);                                                                     // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaCollectionItemToastFishing.BP_OnNormalizedLengthSet
	// void BP_OnNormalizedLengthSet(float NormalizedLength, float NormalizedMinLength, float NormalizedMaxLength);             // [0x1d9241c] Event|Protected|BlueprintEvent 
};

/// Class /Script/FortniteUI.AthenaCollectionItemToastSwitcher
/// Size: 0x00A8 (0x000328 - 0x0003D0)
class UAthenaCollectionItemToastSwitcher : public UFortHUDElementWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 976;

public:
	SMember(FMulticastInlineDelegate)                  OnResetToast                                                OFFSET(getStruct<T>, {0x368, 16, 0, 0})
	DMember(float)                                     TimeToShowToast                                             OFFSET(get<float>, {0x398, 4, 0, 0})
	DMember(float)                                     ActivationDelay                                             OFFSET(get<float>, {0x39C, 4, 0, 0})
	SMember(FFortPrioritizedWidgetData)                PrioritizationData                                          OFFSET(getStruct<T>, {0x3A0, 2, 0, 0})
	CMember(UCommonVisibilitySwitcher*)                WidgetSwitcher_Toasts                                       OFFSET(get<T>, {0x3A8, 8, 0, 0})
	CMember(UAthenaCollectionItemToast*)               ActiveCollectionItemToastWidget                             OFFSET(get<T>, {0x3B0, 8, 0, 0})
	DMember(bool)                                      bHasPrioritizedWidgetFocus                                  OFFSET(get<bool>, {0x3C8, 1, 0, 0})
};

/// Class /Script/FortniteUI.AthenaDuelOverlay
/// Size: 0x0098 (0x000328 - 0x0003C0)
class UAthenaDuelOverlay : public UFortHUDElementWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 960;

public:
	CMember(UCommonRichTextBlock*)                     RichText_Title                                              OFFSET(get<T>, {0x368, 8, 0, 0})
	CMember(UCommonRichTextBlock*)                     RichText_SubTitle                                           OFFSET(get<T>, {0x370, 8, 0, 0})
	CMember(UImage*)                                   Image_ChallengedNPCPortrait                                 OFFSET(get<T>, {0x378, 8, 0, 0})
	CMember(UImage*)                                   Image_ElimPortrait                                          OFFSET(get<T>, {0x380, 8, 0, 0})
	CMember(UImage*)                                   Image_Reward                                                OFFSET(get<T>, {0x388, 8, 0, 0})
	CMember(TWeakObjectPtr<USoundBase*>)               DuelStartedSound                                            OFFSET(get<T>, {0x390, 32, 0, 0})
	SMember(FFortPrioritizedWidgetData)                PrioritizedWidgetData                                       OFFSET(getStruct<T>, {0x3B8, 2, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.AthenaDuelOverlay.OnShowOverlay
	// void OnShowOverlay();                                                                                                    // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaDuelOverlay.OnSetupForActivation
	// void OnSetupForActivation(EDuelState DuelState, FFortColorPalette& RarityColorPalette);                                  // [0x1d9241c] Event|Protected|HasOutParms|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaDuelOverlay.OnOutroOverlay
	// void OnOutroOverlay();                                                                                                   // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaDuelOverlay.HandleDuelUpdate
	// void HandleDuelUpdate(EDuelState DuelState, FDuelOverlayData& DuelOverlayData);                                          // [0x906756c] Final|Native|Private|HasOutParms 
};

/// Class /Script/FortniteUI.FortEmotePicker
/// Size: 0x0178 (0x000400 - 0x000578)
class UFortEmotePicker : public UCommonActivatableWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1400;

public:
	CMember(TMap<FGameplayTag, TWeakObjectPtr>)        CategoryIcons                                               OFFSET(get<T>, {0x418, 80, 0, 0})
	CMember(TArray<FFortEmotePickerSubCategoryIdentifier>) SubCategoryIdentifiers                                  OFFSET(get<T>, {0x468, 16, 0, 0})
	SMember(FPrimaryContentSetup)                      PrimaryContentSetup                                         OFFSET(getStruct<T>, {0x484, 3, 0, 0})
	CMember(TArray<FDataTableRowHandle>)               QuickSelectBindings                                         OFFSET(get<T>, {0x488, 16, 0, 0})
	SMember(FDataTableRowHandle)                       FrontEndOpenAction                                          OFFSET(getStruct<T>, {0x498, 16, 0, 0})
	SMember(FDataTableRowHandle)                       PreviousWheelInputAction                                    OFFSET(getStruct<T>, {0x4A8, 16, 0, 0})
	SMember(FDataTableRowHandle)                       NextWheelInputAction                                        OFFSET(getStruct<T>, {0x4B8, 16, 0, 0})
	SMember(FDataTableRowHandle)                       PreviousCategoryInputAction                                 OFFSET(getStruct<T>, {0x4C8, 16, 0, 0})
	SMember(FDataTableRowHandle)                       NextCategoryInputAction                                     OFFSET(getStruct<T>, {0x4D8, 16, 0, 0})
	CMember(UCommonButtonLegacy*)                      Button_PreviousWheel                                        OFFSET(get<T>, {0x4E8, 8, 0, 0})
	CMember(UCommonButtonLegacy*)                      Button_NextWheel                                            OFFSET(get<T>, {0x4F0, 8, 0, 0})
	CMember(UFortTextButton*)                          Button_CategoryMinusOne                                     OFFSET(get<T>, {0x4F8, 8, 0, 0})
	CMember(UFortTextButton*)                          Button_CategoryMinusTwo                                     OFFSET(get<T>, {0x500, 8, 0, 0})
	CMember(UFortTextButton*)                          Button_CategoryPlusOne                                      OFFSET(get<T>, {0x508, 8, 0, 0})
	CMember(UFortTextButton*)                          Button_CategoryPlusTwo                                      OFFSET(get<T>, {0x510, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_ItemName                                               OFFSET(get<T>, {0x518, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_WheelLabel                                             OFFSET(get<T>, {0x520, 8, 0, 0})
	CMember(UFortKeybindWidget*)                       Keybind_Confirm                                             OFFSET(get<T>, {0x528, 8, 0, 0})
	CMember(UCommonButtonLegacy*)                      Button_EmoteFrontend                                        OFFSET(get<T>, {0x530, 8, 0, 0})
	CMember(UCommonButtonLegacy*)                      Button_Cancel                                               OFFSET(get<T>, {0x538, 8, 0, 0})
	CMember(UWidget*)                                  Overlay_InGameEmoteBinding                                  OFFSET(get<T>, {0x540, 8, 0, 0})
	CMember(UCommonLazyImage*)                         Image_CategoryIcon                                          OFFSET(get<T>, {0x548, 8, 0, 0})
	CMember(UFortPickerOverlay*)                       PickerOverlay_EmoteWheel                                    OFFSET(get<T>, {0x550, 8, 0, 0})
	CMember(UCommonVisibilitySwitcher*)                VisibilitySwitcher_Pagination                               OFFSET(get<T>, {0x558, 8, 0, 0})
	CMember(UFortDottedPagination*)                    DottedPagination_Category                                   OFFSET(get<T>, {0x560, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_Pagination                                             OFFSET(get<T>, {0x568, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_ItemDescription                                        OFFSET(get<T>, {0x570, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortEmotePicker.OnControllerComponentAttached
	// void OnControllerComponentAttached(AFortPlayerController* OwningController, UFortControllerComponent* ControllerComponent); // [0x90685ec] Final|Native|Protected 
	// Function /Script/FortniteUI.FortEmotePicker.HandleExternalEmoteRemoved
	// void HandleExternalEmoteRemoved(FName ActionName);                                                                       // [0x90676dc] Final|Native|Protected 
	// Function /Script/FortniteUI.FortEmotePicker.HandleExternalEmoteAdded
	// void HandleExternalEmoteAdded(FName ActionName);                                                                         // [0x906765c] Final|Native|Protected 
	// Function /Script/FortniteUI.FortEmotePicker.BP_PageChanged
	// void BP_PageChanged(int32_t Direction);                                                                                  // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortEmotePicker.BP_ChangeElementVisibilitiesForFrontend
	// void BP_ChangeElementVisibilitiesForFrontend();                                                                          // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortEmotePicker.BP_CategoryChanged
	// void BP_CategoryChanged(int32_t Direction);                                                                              // [0x1d9241c] Event|Protected|BlueprintEvent 
};

/// Class /Script/FortniteUI.AthenaAccoladeWrapper
/// Size: 0x0020 (0x000028 - 0x000048)
class UAthenaAccoladeWrapper : public UObject
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 72;

public:
	SMember(FAthenaAccolades)                          AccoladeData                                                OFFSET(getStruct<T>, {0x28, 32, 0, 0})
};

/// Class /Script/FortniteUI.AthenaAccoladeListEntryWidget
/// Size: 0x0008 (0x0002E8 - 0x0002F0)
class UAthenaAccoladeListEntryWidget : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 752;

public:
};

/// Class /Script/FortniteUI.AthenaAccoladeListWidget
/// Size: 0x0000 (0x000BD0 - 0x000BD0)
class UAthenaAccoladeListWidget : public UCommonListView
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 3024;

public:
};

/// Class /Script/FortniteUI.AthenaEndGamePlacementWidget
/// Size: 0x0000 (0x0002E8 - 0x0002E8)
class UAthenaEndGamePlacementWidget : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 744;

public:
};

/// Class /Script/FortniteUI.AthenaGameOverDisplay
/// Size: 0x00E0 (0x000570 - 0x000650)
class UAthenaGameOverDisplay : public UFortActivatablePanel
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1616;

public:
	CMember(UClass*)                                   MatchStatsClass                                             OFFSET(get<T>, {0x570, 8, 0, 0})
	SMember(FDataTableRowHandle)                       Input_ReturnToLobby                                         OFFSET(getStruct<T>, {0x598, 16, 0, 0})
	SMember(FDataTableRowHandle)                       Input_NextTeammate                                          OFFSET(getStruct<T>, {0x5A8, 16, 0, 0})
	SMember(FDataTableRowHandle)                       Input_PreviousTeammate                                      OFFSET(getStruct<T>, {0x5B8, 16, 0, 0})
	SMember(FDataTableRowHandle)                       Input_NextPlayer                                            OFFSET(getStruct<T>, {0x5C8, 16, 0, 0})
	SMember(FDataTableRowHandle)                       Input_PreviousPlayer                                        OFFSET(getStruct<T>, {0x5D8, 16, 0, 0})
	SMember(FDataTableRowHandle)                       Input_ReportPlayer                                          OFFSET(getStruct<T>, {0x5E8, 16, 0, 0})
	SMember(FDataTableRowHandle)                       Input_ToggleBattleMap                                       OFFSET(getStruct<T>, {0x5F8, 16, 0, 0})
	SMember(FDataTableRowHandle)                       Input_ForceStartPostGame                                    OFFSET(getStruct<T>, {0x608, 16, 0, 0})
	CMember(UEliminatedOverlay*)                       EliminatedOverlay                                           OFFSET(get<T>, {0x618, 8, 0, 0})
	CMember(UCommonButtonLegacy*)                      Button_Highlights                                           OFFSET(get<T>, {0x620, 8, 0, 0})
	SMember(FScalableFloat)                            bAllowSpectateAllPlayers                                    OFFSET(getStruct<T>, {0x628, 40, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.AthenaGameOverDisplay.OnWinningScoreDetermined
	// void OnWinningScoreDetermined(int32_t Score);                                                                            // [0x9068f70] Final|Native|Protected 
	// Function /Script/FortniteUI.AthenaGameOverDisplay.OnWinnerAnnounced
	// void OnWinnerAnnounced(FString Winner);                                                                                  // [0x90688c4] Final|Native|Protected 
	// Function /Script/FortniteUI.AthenaGameOverDisplay.OnViewTargetChanged
	// void OnViewTargetChanged();                                                                                              // [0x90688a8] Final|Native|Protected 
	// Function /Script/FortniteUI.AthenaGameOverDisplay.OnToggleFullscreenMap
	// void OnToggleFullscreenMap(bool bFullscreenMapVisible);                                                                  // [0x9068818] Final|Native|Protected 
	// Function /Script/FortniteUI.AthenaGameOverDisplay.OnSpectatorStreamingChanged
	// void OnSpectatorStreamingChanged(bool bSpectatorStreaming);                                                              // [0x9068818] Final|Native|Protected 
	// Function /Script/FortniteUI.AthenaGameOverDisplay.OnSpecialActorListChanged
	// void OnSpecialActorListChanged();                                                                                        // [0x9068894] Final|Native|Protected 
	// Function /Script/FortniteUI.AthenaGameOverDisplay.OnRessurectingNowDelegate
	// void OnRessurectingNowDelegate(bool bRessurectingNow);                                                                   // [0x9068818] Final|Native|Protected 
	// Function /Script/FortniteUI.AthenaGameOverDisplay.OnPlayerOrTeamWon
	// void OnPlayerOrTeamWon();                                                                                                // [0x9068804] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.AthenaGameOverDisplay.OnPlayerLost
	// void OnPlayerLost(EEndOfMatchReason LostReason);                                                                         // [0x9068784] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.AthenaGameOverDisplay.OnPlaceChanged
	// void OnPlaceChanged();                                                                                                   // [0x9068768] Final|Native|Protected 
	// Function /Script/FortniteUI.AthenaGameOverDisplay.OnPawnDied
	// void OnPawnDied(FFortPlayerDeathReport& DeathReport);                                                                    // [0x90686c4] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/FortniteUI.AthenaGameOverDisplay.OnKillFeedUpdated
	// void OnKillFeedUpdated();                                                                                                // [0x90686b0] Final|Native|Protected 
	// Function /Script/FortniteUI.AthenaGameOverDisplay.InGameMatchmakingComplete
	// void InGameMatchmakingComplete(bool bSuccess);                                                                           // [0x90683ac] Final|Native|Protected 
	// Function /Script/FortniteUI.AthenaGameOverDisplay.HighlightCountChanged
	// void HighlightCountChanged(int32_t HighlightCount);                                                                      // [0x906832c] Final|Native|Protected 
	// Function /Script/FortniteUI.AthenaGameOverDisplay.HandleToggledBattleMapLive
	// void HandleToggledBattleMapLive(ABattleMapPawnLive* NewSpectatorPawn);                                                   // [0x9068290] Final|Native|Protected 
};

/// Class /Script/FortniteUI.AthenaKeepPlayingTogetherScreenOverlay
/// Size: 0x00B0 (0x0002E8 - 0x000398)
class UAthenaKeepPlayingTogetherScreenOverlay : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 920;

public:
	DMember(float)                                     ToLobbyDelayOnError                                         OFFSET(get<float>, {0x2E8, 4, 0, 0})
	CMember(UCommonButtonBase*)                        Button_Cancel                                               OFFSET(get<T>, {0x2F0, 8, 0, 0})
	CMember(UCommonWidgetSwitcherLegacy*)              Switcher_MatchmakingStatus                                  OFFSET(get<T>, {0x2F8, 8, 0, 0})
	CMember(UPanelWidget*)                             Container_CountdownStatus                                   OFFSET(get<T>, {0x300, 8, 0, 0})
	CMember(UPanelWidget*)                             Container_FindingMatchStatus                                OFFSET(get<T>, {0x308, 8, 0, 0})
	CMember(UPanelWidget*)                             Container_Error                                             OFFSET(get<T>, {0x310, 8, 0, 0})
	CMember(UPanelWidget*)                             Container_Waiting                                           OFFSET(get<T>, {0x318, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_MatchmakingElapsed                                     OFFSET(get<T>, {0x320, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_CountdownCurrent                                       OFFSET(get<T>, {0x328, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_CountdownNext                                          OFFSET(get<T>, {0x330, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_WaitingForSquadCountdown                               OFFSET(get<T>, {0x338, 8, 0, 0})
	CMember(UAthenaIGMSquadDisplayWidget*)             LocalPlayerSquadDisplayWidget                               OFFSET(get<T>, {0x340, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.AthenaKeepPlayingTogetherScreenOverlay.OnWaitingForSquadMemberVotesCountdownStarted
	// void OnWaitingForSquadMemberVotesCountdownStarted();                                                                     // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaKeepPlayingTogetherScreenOverlay.OnWaitingForSquadMemberVotesCountdownProgressed
	// void OnWaitingForSquadMemberVotesCountdownProgressed();                                                                  // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaKeepPlayingTogetherScreenOverlay.OnPreMatchmakingCountdownStarted
	// void OnPreMatchmakingCountdownStarted();                                                                                 // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaKeepPlayingTogetherScreenOverlay.OnPreMatchmakingCountdownProgressed
	// void OnPreMatchmakingCountdownProgressed();                                                                              // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaKeepPlayingTogetherScreenOverlay.OnMatchmakingUpdate
	// void OnMatchmakingUpdate(FTimespan ElapsedTime);                                                                         // [0x1d9241c] Event|Protected|HasDefaults|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaKeepPlayingTogetherScreenOverlay.OnMatchmakingStarted
	// void OnMatchmakingStarted();                                                                                             // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaKeepPlayingTogetherScreenOverlay.OnMatchmakingFinished
	// void OnMatchmakingFinished(bool bSuccess);                                                                               // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaKeepPlayingTogetherScreenOverlay.OnMatchmakingErrorMessage
	// void OnMatchmakingErrorMessage(FText& Message);                                                                          // [0x1d9241c] Event|Protected|HasOutParms|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaKeepPlayingTogetherScreenOverlay.OnMatchmakingCanceled
	// void OnMatchmakingCanceled();                                                                                            // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaKeepPlayingTogetherScreenOverlay.OnKeepPlayingTogetherScreenOverlayDeactivated
	// void OnKeepPlayingTogetherScreenOverlayDeactivated();                                                                    // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaKeepPlayingTogetherScreenOverlay.OnKeepPlayingTogetherScreenOverlayActivated
	// void OnKeepPlayingTogetherScreenOverlayActivated();                                                                      // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaKeepPlayingTogetherScreenOverlay.OnExitToLobbyCountdownProgressed
	// void OnExitToLobbyCountdownProgressed(float CountdownValue);                                                             // [0x1d9241c] Event|Protected|BlueprintEvent 
};

/// Class /Script/FortniteUI.AthenaKeepPlayingTogetherWidget
/// Size: 0x00F0 (0x000400 - 0x0004F0)
class UAthenaKeepPlayingTogetherWidget : public UCommonActivatableWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1264;

public:
	DMember(float)                                     ToLobbyDelayOnError                                         OFFSET(get<float>, {0x400, 4, 0, 0})
	CMember(UAthenaIGMSquadDisplayWidget*)             SquadDisplayWidget                                          OFFSET(get<T>, {0x408, 8, 0, 0})
	CMember(UCommonButtonLegacy*)                      Button_Skip                                                 OFFSET(get<T>, {0x410, 8, 0, 0})
	CMember(UCommonButtonLegacy*)                      Button_OptIn                                                OFFSET(get<T>, {0x418, 8, 0, 0})
	CMember(URichTextBlock*)                           Text_OptInCountdown                                         OFFSET(get<T>, {0x420, 8, 0, 0})
	CMember(UCommonActivatableWidgetSwitcher*)         Switcher_MatchmakingStatus                                  OFFSET(get<T>, {0x478, 8, 0, 0})
	CMember(UPanelWidget*)                             Container_CountdownStatus                                   OFFSET(get<T>, {0x480, 8, 0, 0})
	CMember(UPanelWidget*)                             Container_FindingMatchStatus                                OFFSET(get<T>, {0x488, 8, 0, 0})
	CMember(UPanelWidget*)                             Container_Error                                             OFFSET(get<T>, {0x490, 8, 0, 0})
	CMember(UPanelWidget*)                             Container_Waiting                                           OFFSET(get<T>, {0x498, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_MatchmakingElapsed                                     OFFSET(get<T>, {0x4A0, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_CountdownCurrent                                       OFFSET(get<T>, {0x4A8, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_CountdownNext                                          OFFSET(get<T>, {0x4B0, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.AthenaKeepPlayingTogetherWidget.OnPreMatchmakingCountdownStarted
	// void OnPreMatchmakingCountdownStarted();                                                                                 // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaKeepPlayingTogetherWidget.OnPreMatchmakingCountdownProgressed
	// void OnPreMatchmakingCountdownProgressed();                                                                              // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaKeepPlayingTogetherWidget.OnMatchmakingUpdate
	// void OnMatchmakingUpdate(FTimespan ElapsedTime);                                                                         // [0x1d9241c] Event|Protected|HasDefaults|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaKeepPlayingTogetherWidget.OnMatchmakingStarted
	// void OnMatchmakingStarted();                                                                                             // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaKeepPlayingTogetherWidget.OnMatchmakingFinished
	// void OnMatchmakingFinished(bool bSuccess);                                                                               // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaKeepPlayingTogetherWidget.OnMatchmakingErrorMessage
	// void OnMatchmakingErrorMessage(FText& Message);                                                                          // [0x1d9241c] Event|Protected|HasOutParms|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaKeepPlayingTogetherWidget.OnMatchmakingCanceled
	// void OnMatchmakingCanceled();                                                                                            // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaKeepPlayingTogetherWidget.OnExitToLobbyCountdownProgressed
	// void OnExitToLobbyCountdownProgressed(float CountdownValue);                                                             // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaKeepPlayingTogetherWidget.HandleSkipClicked
	// void HandleSkipClicked();                                                                                                // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaKeepPlayingTogetherWidget.HandleOptInClicked
	// void HandleOptInClicked();                                                                                               // [0x1d9241c] Event|Protected|BlueprintEvent 
};

/// Class /Script/FortniteUI.AthenaLastKillerInfoWidget
/// Size: 0x01A8 (0x000400 - 0x0005A8)
class UAthenaLastKillerInfoWidget : public UCommonActivatableWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1448;

public:
	SMember(FMulticastInlineDelegate)                  ShouldShowDeathReport                                       OFFSET(getStruct<T>, {0x540, 16, 0, 0})
	DMember(float)                                     TimeToWait                                                  OFFSET(get<float>, {0x550, 4, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.AthenaLastKillerInfoWidget.SetNumOfKillerKills
	// void SetNumOfKillerKills(int32_t NumOfKillers);                                                                          // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaLastKillerInfoWidget.SetKillerWeaponIconAndName
	// void SetKillerWeaponIconAndName(UTexture2D* IconTexture, UFortWeaponItemDefinition* ItemDef);                            // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaLastKillerInfoWidget.SetKillerName
	// void SetKillerName(FString PlayerName, FString PlayerId);                                                                // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaLastKillerInfoWidget.SetKillerHealthAndShield
	// void SetKillerHealthAndShield(float HealthPercent, float ShieldPercent, float OvershieldPercent);                        // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaLastKillerInfoWidget.BP_HandleExtensionWidgetCreated
	// void BP_HandleExtensionWidgetCreated(UUserWidget* Widget, EUIExtensionSlot SlotType);                                    // [0x1d9241c] Event|Protected|BlueprintEvent 
};

/// Class /Script/FortniteUI.FortPostGameScreen
/// Size: 0x0090 (0x000400 - 0x000490)
class UFortPostGameScreen : public UCommonActivatableWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1168;

public:
	SMember(FFortPostGameScreenConfig)                 PostGameScreenConfig                                        OFFSET(getStruct<T>, {0x400, 8, 0, 0})
	DMember(bool)                                      bCanGoBackToThisScreen                                      OFFSET(get<bool>, {0x408, 1, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortPostGameScreen.GoToPreviousScreenAfterActivated
	// void GoToPreviousScreenAfterActivated();                                                                                 // [0x9097530] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortPostGameScreen.GoToPreviousScreen
	// void GoToPreviousScreen();                                                                                               // [0x909751c] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortPostGameScreen.GoToNextScreenAfterActivated
	// void GoToNextScreenAfterActivated();                                                                                     // [0x9097508] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortPostGameScreen.GoToNextScreen
	// void GoToNextScreen();                                                                                                   // [0x90974f4] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortPostGameScreen.BP_ShouldDisplay
	// bool BP_ShouldDisplay();                                                                                                 // [0x90972d4] Native|Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.FortPostGameScreen.BP_OnToggleBlurRequest
	// void BP_OnToggleBlurRequest();                                                                                           // [0x90972b8] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.FortPostGameScreen.BP_OnFadeOutOverlayRequest
	// void BP_OnFadeOutOverlayRequest();                                                                                       // [0x9068310] Final|Native|Protected|BlueprintCallable 
};

/// Class /Script/FortniteUI.AthenaMatchXPScreenWidget
/// Size: 0x0430 (0x000490 - 0x0008C0)
class UAthenaMatchXPScreenWidget : public UFortPostGameScreen
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 2240;

public:
	DMember(bool)                                      bAutoTransitionScreen                                       OFFSET(get<bool>, {0x5D0, 1, 0, 0})
	CMember(TWeakObjectPtr<UCommonUserWidget*>)        DefaultTabWidget                                            OFFSET(get<T>, {0x5E8, 8, 0, 0})
	CMember(TMap<FName, UAthenaSkewedTabButton*>)      TabButtons                                                  OFFSET(get<T>, {0x5F0, 80, 0, 0})
	SMember(FText)                                     ReadyUpStartText                                            OFFSET(getStruct<T>, {0x640, 24, 0, 0})
	SMember(FFortPostGameScreenConfig)                 SpectatePostGameScreenConfig                                OFFSET(getStruct<T>, {0x658, 8, 0, 0})
	CMember(TArray<TWeakObjectPtr>)                    DefaultTabs                                                 OFFSET(get<T>, {0x660, 16, 0, 0})
	SMember(FDataTableRowHandle)                       NextTabInputAction                                          OFFSET(getStruct<T>, {0x670, 16, 0, 0})
	SMember(FDataTableRowHandle)                       PreviousTabInputAction                                      OFFSET(getStruct<T>, {0x680, 16, 0, 0})
	SMember(FDataTableRowHandle)                       NextPlayerInputAction_ModularProgression                    OFFSET(getStruct<T>, {0x690, 16, 0, 0})
	SMember(FDataTableRowHandle)                       PreviousPlayerInputAction_ModularProgression                OFFSET(getStruct<T>, {0x6A0, 16, 0, 0})
	SMember(FDataTableRowHandle)                       NextTeammateInputAction_ModularProgression                  OFFSET(getStruct<T>, {0x6B0, 16, 0, 0})
	SMember(FDataTableRowHandle)                       PreviousTeammateInputAction_ModularProgression              OFFSET(getStruct<T>, {0x6C0, 16, 0, 0})
	SMember(FDataTableRowHandle)                       ReturnToIslandInputAction                                   OFFSET(getStruct<T>, {0x6D0, 16, 0, 0})
	CMember(UCommonVisibilitySwitcher*)                VisibilitySwitcher_Content                                  OFFSET(get<T>, {0x6E0, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_MatchmakingStatus                                      OFFSET(get<T>, {0x6E8, 8, 0, 0})
	CMember(UHorizontalBox*)                           TabButtonsContainer                                         OFFSET(get<T>, {0x6F0, 8, 0, 0})
	CMember(UClass*)                                   TabButtonClass                                              OFFSET(get<T>, {0x6F8, 8, 0, 0})
	SMember(FDataTableRowHandle)                       ToggleMapInputAction                                        OFFSET(getStruct<T>, {0x708, 16, 0, 0})
	DMember(int32_t)                                   NumWidgetsFinished                                          OFFSET(get<int32_t>, {0x718, 4, 0, 0})
	CMember(UAthenaPreserveSquadButton*)               Button_StayTogether                                         OFFSET(get<T>, {0x780, 8, 0, 0})
	CMember(UCommonButtonBase*)                        Button_Back                                                 OFFSET(get<T>, {0x788, 8, 0, 0})
	CMember(UCommonVisibilitySwitcher*)                VisibilitySwitcher_NextMatch                                OFFSET(get<T>, {0x790, 8, 0, 0})
	CMember(UCommonButtonBase*)                        Button_NextMatch                                            OFFSET(get<T>, {0x798, 8, 0, 0})
	CMember(UCommonButtonBase*)                        Button_PlayWithNewTeam                                      OFFSET(get<T>, {0x7A0, 8, 0, 0})
	CMember(UCommonButtonBase*)                        Button_PrevPlayer                                           OFFSET(get<T>, {0x7A8, 8, 0, 0})
	CMember(UCommonButtonBase*)                        Button_NextPlayer                                           OFFSET(get<T>, {0x7B0, 8, 0, 0})
	CMember(UCommonButtonBase*)                        Button_PrevTeam                                             OFFSET(get<T>, {0x7B8, 8, 0, 0})
	CMember(UCommonButtonBase*)                        Button_NextTeam                                             OFFSET(get<T>, {0x7C0, 8, 0, 0})
	CMember(UCommonButtonBase*)                        Button_Cancel                                               OFFSET(get<T>, {0x7C8, 8, 0, 0})
	CMember(UWidget*)                                  Leto_IGMMWrapper                                            OFFSET(get<T>, {0x7D0, 8, 0, 0})
	CMember(UVerticalBox*)                             VBox_MatchMaking                                            OFFSET(get<T>, {0x7D8, 8, 0, 0})
	CMember(UVerticalBox*)                             VBox_NavButtons                                             OFFSET(get<T>, {0x7E0, 8, 0, 0})
	CMember(USizeBox*)                                 SizeBoxNavigationOptions                                    OFFSET(get<T>, {0x7E8, 8, 0, 0})
	DMember(int32_t)                                   ToLobbyDelayOnError                                         OFFSET(get<int32_t>, {0x7F0, 4, 0, 0})
	CMember(UFortCTAButton*)                           MenuEntry_DisabledStayWithSquad                             OFFSET(get<T>, {0x868, 8, 0, 0})
	CMember(UFortPostGameMenuListView*)                ListView_KeepPlayingTogetherMenu                            OFFSET(get<T>, {0x870, 8, 0, 0})
	CMember(UFortPostGameMenuListView*)                ListView_PostGameMenu                                       OFFSET(get<T>, {0x878, 8, 0, 0})
	CMember(UWidget*)                                  Content_MemberOptedOut                                      OFFSET(get<T>, {0x880, 8, 0, 0})
	CMember(UCommonVisibilitySwitcher*)                Switcher_DisplayTooltip                                     OFFSET(get<T>, {0x888, 8, 0, 0})
	CMember(USizeBox*)                                 SizeBox_ReadyUpTooltip                                      OFFSET(get<T>, {0x890, 8, 0, 0})
	CMember(UAthenaIGMSquadDisplayWidget*)             SquadDisplayWidget                                          OFFSET(get<T>, {0x898, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.AthenaMatchXPScreenWidget.UpdateTabVisibility
	// void UpdateTabVisibility();                                                                                              // [0x90692b4] Final|Native|Private 
	// Function /Script/FortniteUI.AthenaMatchXPScreenWidget.UpdateElementsVisibility
	// void UpdateElementsVisibility();                                                                                         // [0x90692a0] Final|Native|Private 
	// Function /Script/FortniteUI.AthenaMatchXPScreenWidget.SpectatorStreamingChanged
	// void SpectatorStreamingChanged(bool bSpectatorStreaming);                                                                // [0x9068014] Final|Native|Protected 
	// Function /Script/FortniteUI.AthenaMatchXPScreenWidget.SetStatButtonText
	// void SetStatButtonText(FText& InText);                                                                                   // [0x1d9241c] Event|Protected|HasOutParms|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaMatchXPScreenWidget.SetMemberOptedOutState
	// void SetMemberOptedOutState(EKeepPlayingTogetherVotingStatus& Status, FText& MainContext, FText& SecondaryContext);      // [0x1d9241c] Event|Protected|HasOutParms|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaMatchXPScreenWidget.SelectActiveTabWidget
	// void SelectActiveTabWidget();                                                                                            // [0x90691e4] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.AthenaMatchXPScreenWidget.OnXPScreenFinishedLoading__DelegateSignature
	// void OnXPScreenFinishedLoading__DelegateSignature();                                                                     // [0x1d9241c] MulticastDelegate|Public|Delegate 
	// Function /Script/FortniteUI.AthenaMatchXPScreenWidget.OnShowTabsSet
	// void OnShowTabsSet(bool bShowTabs);                                                                                      // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaMatchXPScreenWidget.OnMatchmakingUpdate
	// void OnMatchmakingUpdate(FTimespan ElapsedTime);                                                                         // [0x1d9241c] Event|Protected|HasDefaults|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaMatchXPScreenWidget.OnMatchmakingStarted
	// void OnMatchmakingStarted();                                                                                             // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaMatchXPScreenWidget.OnMatchmakingFinished
	// void OnMatchmakingFinished(bool bSuccess);                                                                               // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaMatchXPScreenWidget.OnMatchmakingErrorMessage
	// void OnMatchmakingErrorMessage(FText& Message);                                                                          // [0x1d9241c] Event|Protected|HasOutParms|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaMatchXPScreenWidget.OnMatchmakingCountdownStarted
	// void OnMatchmakingCountdownStarted();                                                                                    // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaMatchXPScreenWidget.OnMatchmakingCountdownProgressed
	// void OnMatchmakingCountdownProgressed();                                                                                 // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaMatchXPScreenWidget.OnMatchmakingCancelled
	// void OnMatchmakingCancelled();                                                                                           // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaMatchXPScreenWidget.OnExitToLobbyCountdownProgressed
	// void OnExitToLobbyCountdownProgressed(int32_t CountdownValue);                                                           // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaMatchXPScreenWidget.OnDefaultTabWidgetReady
	// void OnDefaultTabWidgetReady();                                                                                          // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaMatchXPScreenWidget.OnCancelReadyUp
	// void OnCancelReadyUp();                                                                                                  // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaMatchXPScreenWidget.OnAutoAdvanceTimeRemainingUpdated
	// void OnAutoAdvanceTimeRemainingUpdated(int32_t TimeRemaining);                                                           // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaMatchXPScreenWidget.OnAutoAdvanceSequenceFinished
	// void OnAutoAdvanceSequenceFinished();                                                                                    // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaMatchXPScreenWidget.IsSpectating
	// bool IsSpectating();                                                                                                     // [0x90684cc] Final|Native|Private|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.AthenaMatchXPScreenWidget.HandleXPRecapFadeOutOverlay
	// void HandleXPRecapFadeOutOverlay();                                                                                      // [0x9068310] Final|Native|Protected 
	// Function /Script/FortniteUI.AthenaMatchXPScreenWidget.HandleToggleFullscreenMap
	// void HandleToggleFullscreenMap(bool bFullscreenMapVisible);                                                              // [0x9068210] Final|Native|Protected 
	// Function /Script/FortniteUI.AthenaMatchXPScreenWidget.HandleResurrectingNow
	// void HandleResurrectingNow(bool bResurrectingNow);                                                                       // [0x9068014] Final|Native|Protected 
	// Function /Script/FortniteUI.AthenaMatchXPScreenWidget.HandleActiveTabWidgetReady
	// void HandleActiveTabWidgetReady(UAthenaPostMatchPanel* PostMatchPanel);                                                  // [0x9067410] Final|Native|Protected 
	// Function /Script/FortniteUI.AthenaMatchXPScreenWidget.FocusOnDesiredTarget
	// void FocusOnDesiredTarget();                                                                                             // [0x90673fc] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.AthenaMatchXPScreenWidget.BP_OnToggleSpectating
	// void BP_OnToggleSpectating();                                                                                            // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaMatchXPScreenWidget.AutoAdvanceToNextTab
	// void AutoAdvanceToNextTab();                                                                                             // [0x90673b0] Final|Native|Protected|BlueprintCallable 
};

/// Class /Script/FortniteUI.AthenaPostMatchPanel
/// Size: 0x01C8 (0x000538 - 0x000700)
class UAthenaPostMatchPanel : public UCommonActivatablePanelLegacy
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1792;

public:
	SMember(FAthenaPostMatchScreenContainerTabInfo)    PostMatchTabInfo                                            OFFSET(getStruct<T>, {0x688, 72, 0, 0})
	DMember(bool)                                      bShouldOverrideDefaultPostGameScreenConfig                  OFFSET(get<bool>, {0x6E9, 1, 0, 0})
	SMember(FFortPostGameScreenConfig)                 PanelPostGameScreenConfig                                   OFFSET(getStruct<T>, {0x6EA, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.AthenaPostMatchPanel.OnUpdateElementsVisibility
	// void OnUpdateElementsVisibility();                                                                                       // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaPostMatchPanel.OnTransistionedFromAnotherPostMatchPanel
	// void OnTransistionedFromAnotherPostMatchPanel();                                                                         // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaPostMatchPanel.OnSpectatingToggled
	// void OnSpectatingToggled(bool bIsSpectating);                                                                            // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaPostMatchPanel.OnPanelReady
	// void OnPanelReady();                                                                                                     // [0x90994fc] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.AthenaPostMatchPanel.OnInitializePanel
	// void OnInitializePanel();                                                                                                // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaPostMatchPanel.OnExtensionWidgetAdded
	// void OnExtensionWidgetAdded(EUIExtensionSlot ExtensionSlot, UUserWidget* ExtensionWidget);                               // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaPostMatchPanel.OnActivatePanel
	// void OnActivatePanel();                                                                                                  // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaPostMatchPanel.IsAutoAdvanceTabValid
	// bool IsAutoAdvanceTabValid();                                                                                            // [0x90993e0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/FortniteUI.AthenaPostMatchPanel_MatchRecap
/// Size: 0x0008 (0x000700 - 0x000708)
class UAthenaPostMatchPanel_MatchRecap : public UAthenaPostMatchPanel
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1800;

public:
	CMember(UFortMatchXPRecap*)                        XPRecap                                                     OFFSET(get<T>, {0x700, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.AthenaPostMatchPanel_MatchRecap.HandleReturnToIslandButtonShown
	// void HandleReturnToIslandButtonShown(bool bShown);                                                                       // [0x909888c] Final|Native|Public  
	// Function /Script/FortniteUI.AthenaPostMatchPanel_MatchRecap.HandleFadeOutOverlay
	// void HandleFadeOutOverlay();                                                                                             // [0x909780c] Final|Native|Protected 
};

/// Class /Script/FortniteUI.AthenaPostMatchPanel_RankedRecap
/// Size: 0x0018 (0x000700 - 0x000718)
class UAthenaPostMatchPanel_RankedRecap : public UAthenaPostMatchPanel
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1816;

public:
	CMember(UEndOfMatchQuestUpdateWidget*)             Widget_QuestRecap                                           OFFSET(get<T>, {0x700, 8, 0, 0})
	CMember(UFortHabaneroDisplayData*)                 HabaneroDisplayData                                         OFFSET(get<T>, {0x708, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.AthenaPostMatchPanel_RankedRecap.UpdateTierDisplay
	// void UpdateTierDisplay(TArray<FFortHabaneroTier>& TierList, int32_t InitialTierIndex, float InitialProgress, int32_t InitialPlayerPosition, int32_t CurrentTierIndex, float CurrentProgress, int32_t CurrentPlayerPosition, bool bIsStale); // [0x1d9241c] Event|Protected|HasOutParms|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaPostMatchPanel_RankedRecap.UpdateHabaneroErrorCode
	// void UpdateHabaneroErrorCode(EHabaneroProgressError ProgressError, FString OptionalText);                                // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaPostMatchPanel_RankedRecap.QueryProgress
	// void QueryProgress();                                                                                                    // [0x9099c34] Final|Native|Private 
	// Function /Script/FortniteUI.AthenaPostMatchPanel_RankedRecap.PlayQuestsIntro
	// void PlayQuestsIntro();                                                                                                  // [0x9099be8] Final|Native|Protected|BlueprintCallable|Const 
	// Function /Script/FortniteUI.AthenaPostMatchPanel_RankedRecap.GetUnrankedTierData
	// bool GetUnrankedTierData(FFortHabaneroTier& OutUnrankedTierData);                                                        // [0x909742c] Final|Native|Protected|HasOutParms|BlueprintCallable 
	// Function /Script/FortniteUI.AthenaPostMatchPanel_RankedRecap.GetFailsafeDelayDuration
	// float GetFailsafeDelayDuration();                                                                                        // [0x9097360] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/FortniteUI.AthenaPostMatchQuestTier
/// Size: 0x0140 (0x000328 - 0x000468)
class UAthenaPostMatchQuestTier : public UFortHUDElementWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1128;

public:
};

/// Class /Script/FortniteUI.AthenaReadyUpScreenOverlay
/// Size: 0x0108 (0x0002E8 - 0x0003F0)
class UAthenaReadyUpScreenOverlay : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1008;

public:
	DMember(float)                                     ToLobbyDelayOnError                                         OFFSET(get<float>, {0x2E8, 4, 0, 0})
	SMember(FText)                                     ReadyUpStatusText                                           OFFSET(getStruct<T>, {0x2F0, 24, 0, 0})
	SMember(FText)                                     MatchmakingMessageText                                      OFFSET(getStruct<T>, {0x308, 24, 0, 0})
	CMember(UCommonButtonBase*)                        Button_Cancel                                               OFFSET(get<T>, {0x320, 8, 0, 0})
	CMember(UCommonButtonBase*)                        Button_StartMatch                                           OFFSET(get<T>, {0x328, 8, 0, 0})
	CMember(UCommonWidgetSwitcherLegacy*)              Switcher_MatchmakingStatus                                  OFFSET(get<T>, {0x330, 8, 0, 0})
	CMember(UPanelWidget*)                             Container_CountdownStatus                                   OFFSET(get<T>, {0x338, 8, 0, 0})
	CMember(UPanelWidget*)                             Container_FindingMatchStatus                                OFFSET(get<T>, {0x340, 8, 0, 0})
	CMember(UPanelWidget*)                             Container_Error                                             OFFSET(get<T>, {0x348, 8, 0, 0})
	CMember(UPanelWidget*)                             Container_Waiting                                           OFFSET(get<T>, {0x350, 8, 0, 0})
	CMember(UPanelWidget*)                             Container_NoStatus                                          OFFSET(get<T>, {0x358, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_MatchmakingElapsed                                     OFFSET(get<T>, {0x360, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_CountdownCurrent                                       OFFSET(get<T>, {0x368, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_CountdownNext                                          OFFSET(get<T>, {0x370, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_CountdownStatus                                        OFFSET(get<T>, {0x378, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_MatchmakingMessage                                     OFFSET(get<T>, {0x380, 8, 0, 0})
	CMember(UAthenaPreserveSquadButton*)               Button_StayTogether                                         OFFSET(get<T>, {0x388, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_PartyKPTStatus                                         OFFSET(get<T>, {0x390, 8, 0, 0})
	CMember(TArray<UAthenaIGMPartyMemberWidget*>)      PartyWidgets                                                OFFSET(get<T>, {0x3A8, 16, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.AthenaReadyUpScreenOverlay.OnReadyUp
	// void OnReadyUp();                                                                                                        // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaReadyUpScreenOverlay.OnMatchmakingUpdate
	// void OnMatchmakingUpdate(FTimespan ElapsedTime);                                                                         // [0x1d9241c] Event|Protected|HasDefaults|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaReadyUpScreenOverlay.OnMatchmakingStarted
	// void OnMatchmakingStarted();                                                                                             // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaReadyUpScreenOverlay.OnMatchmakingFinished
	// void OnMatchmakingFinished(bool bSuccess);                                                                               // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaReadyUpScreenOverlay.OnMatchmakingErrorMessage
	// void OnMatchmakingErrorMessage(FText& Message);                                                                          // [0x1d9241c] Event|Protected|HasOutParms|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaReadyUpScreenOverlay.OnMatchmakingCancelled
	// void OnMatchmakingCancelled();                                                                                           // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaReadyUpScreenOverlay.OnExitToLobbyCountdownProgressed
	// void OnExitToLobbyCountdownProgressed(float CountdownValue);                                                             // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaReadyUpScreenOverlay.OnCountdownStarted
	// void OnCountdownStarted();                                                                                               // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaReadyUpScreenOverlay.OnCountdownProgressed
	// void OnCountdownProgressed();                                                                                            // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaReadyUpScreenOverlay.OnCancelReadyUp
	// void OnCancelReadyUp();                                                                                                  // [0x1d9241c] Event|Protected|BlueprintEvent 
};

/// Class /Script/FortniteUI.AthenaReadyUpScreenWidget
/// Size: 0x0010 (0x000490 - 0x0004A0)
class UAthenaReadyUpScreenWidget : public UFortPostGameScreen
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1184;

public:
	CMember(UAthenaReadyUpScreenOverlay*)              ReadyUpOverlay                                              OFFSET(get<T>, {0x490, 8, 0, 0})
	CMember(UAthenaKeepPlayingTogetherScreenOverlay*)  KeepPlayingTogetherOverlay                                  OFFSET(get<T>, {0x498, 8, 0, 0})
};

/// Class /Script/FortniteUI.AthenaReadyUpTooltipTickWidget
/// Size: 0x0020 (0x0002E8 - 0x000308)
class UAthenaReadyUpTooltipTickWidget : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 776;

public:
	SMember(FMulticastInlineDelegate)                  OnReadinessChangedDelegate                                  OFFSET(getStruct<T>, {0x2F0, 16, 0, 0})
	CMember(UFortPartyMember*)                         CachedPartyMember                                           OFFSET(get<T>, {0x300, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.AthenaReadyUpTooltipTickWidget.OnSetPartyMember
	// void OnSetPartyMember(UFortPartyMember* NewPartyMember);                                                                 // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaReadyUpTooltipTickWidget.OnReadinessChanged__DelegateSignature
	// void OnReadinessChanged__DelegateSignature(bool bIsReadied);                                                             // [0x1d9241c] MulticastDelegate|Public|Delegate 
};

/// Class /Script/FortniteUI.AthenaReadyUpTooltipWidget
/// Size: 0x0018 (0x0002E8 - 0x000300)
class UAthenaReadyUpTooltipWidget : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 768;

public:
	CMember(TArray<UAthenaReadyUpTooltipTickWidget*>)  PartyWidgets                                                OFFSET(get<T>, {0x2F0, 16, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.AthenaReadyUpTooltipWidget.HandlePartyWidgetReadinessChanged
	// void HandlePartyWidgetReadinessChanged(bool bIsReadied);                                                                 // [0x9097f68] Final|Native|Protected 
};

/// Class /Script/FortniteUI.AthenaWinnersList
/// Size: 0x0008 (0x0002E8 - 0x0002F0)
class UAthenaWinnersList : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 752;

public:
	DMember(bool)                                      bCanDisplayMultiWinners                                     OFFSET(get<bool>, {0x2E8, 1, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.AthenaWinnersList.OnWinnersAnnounced
	// void OnWinnersAnnounced(FAthenaWinnerInfo& WinnerInfo);                                                                  // [0x9099510] Native|Event|Public|HasOutParms|BlueprintEvent 
};

/// Class /Script/FortniteUI.EliminatedOverlay
/// Size: 0x00B8 (0x000328 - 0x0003E0)
class UEliminatedOverlay : public UFortHUDElementWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 992;

public:
	DMember(bool)                                      bIsWaitingForTeamEliminationForPlacement                    OFFSET(get<bool>, {0x328, 1, 0, 0})
	CMember(TArray<FText>)                             WinnerNames                                                 OFFSET(get<T>, {0x338, 16, 0, 0})
	CMember(UOverlay*)                                 Overlay_PlayerName                                          OFFSET(get<T>, {0x350, 8, 0, 0})
	CMember(UTextBlock*)                               Text_EliminatedBy                                           OFFSET(get<T>, {0x358, 8, 0, 0})
	CMember(UTextBlock*)                               Text_UserId                                                 OFFSET(get<T>, {0x360, 8, 0, 0})
	CMember(UTextBlock*)                               Text_SpectatorName                                          OFFSET(get<T>, {0x368, 8, 0, 0})
	CMember(UVerticalBox*)                             VBox_PlacementText                                          OFFSET(get<T>, {0x370, 8, 0, 0})
	CMember(UVerticalBox*)                             VBox_Winner                                                 OFFSET(get<T>, {0x378, 8, 0, 0})
	CMember(UTextBlock*)                               Text_WinnerPoints                                           OFFSET(get<T>, {0x380, 8, 0, 0})
	CMember(UFortRichTextBlockLegacy*)                 Text_Winner                                                 OFFSET(get<T>, {0x388, 8, 0, 0})
	CMember(UTextBlock*)                               Text_MultiWinner                                            OFFSET(get<T>, {0x390, 8, 0, 0})
	CMember(UTextBlock*)                               Text_Placement                                              OFFSET(get<T>, {0x398, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_PlaceNumber                                            OFFSET(get<T>, {0x3A0, 8, 0, 0})
	CMember(UTextBlock*)                               Text_PlacePoints                                            OFFSET(get<T>, {0x3A8, 8, 0, 0})
	CMember(UCommonWidgetSwitcherLegacy*)              Switcher_MultiWinners                                       OFFSET(get<T>, {0x3B0, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_MultiWinner1                                           OFFSET(get<T>, {0x3B8, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_MultiWinner2                                           OFFSET(get<T>, {0x3C0, 8, 0, 0})
	CMember(UHorizontalBox*)                           HBox_LoadingBox                                             OFFSET(get<T>, {0x3C8, 8, 0, 0})
	CMember(UAthenaWinnersList*)                       AthenaWinnersList                                           OFFSET(get<T>, {0x3D0, 8, 0, 0})
	CMember(UAthenaPlayerKillsBase*)                   Widget_KillCounter                                          OFFSET(get<T>, {0x3D8, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.EliminatedOverlay.UpdateMultiwinner
	// void UpdateMultiwinner();                                                                                                // [0x9099e5c] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.EliminatedOverlay.StreamingLoadingChanged
	// void StreamingLoadingChanged(bool bLoading);                                                                             // [0x9099d78] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.EliminatedOverlay.SetPlaceTextFont
	// void SetPlaceTextFont();                                                                                                 // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.EliminatedOverlay.SetBannerInfo
	// void SetBannerInfo(FPlayerBannerInfo& BannerInfo);                                                                       // [0x1d9241c] Event|Protected|HasOutParms|BlueprintEvent 
	// Function /Script/FortniteUI.EliminatedOverlay.OnWinnerDetermined
	// void OnWinnerDetermined();                                                                                               // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.EliminatedOverlay.OnUpdateMultiwinner
	// void OnUpdateMultiwinner();                                                                                              // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.EliminatedOverlay.OnShowPlacementBox
	// void OnShowPlacementBox();                                                                                               // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.EliminatedOverlay.OnResetSpectatingForCreative
	// void OnResetSpectatingForCreative();                                                                                     // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.EliminatedOverlay.OnEliminatedByIntro
	// void OnEliminatedByIntro();                                                                                              // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.EliminatedOverlay.IsEliminatedByIntroAnimFinished
	// bool IsEliminatedByIntroAnimFinished();                                                                                  // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.EliminatedOverlay.GetPlayerState
	// AFortPlayerStateAthena* GetPlayerState();                                                                                // [0x9097408] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.EliminatedOverlay.DeathCauseToText
	// FText DeathCauseToText(EDeathCause DeathCause);                                                                          // [0x1d9241c] Event|Protected|BlueprintEvent 
};

/// Class /Script/FortniteUI.FortEliminationScreen
/// Size: 0x0028 (0x000490 - 0x0004B8)
class UFortEliminationScreen : public UFortPostGameScreen
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1208;

public:
	DMember(float)                                     ScreenDuration                                              OFFSET(get<float>, {0x490, 4, 0, 0})
	DMember(bool)                                      bShouldAutoAdvance                                          OFFSET(get<bool>, {0x494, 1, 0, 0})
	CMember(UAthenaLastKillerInfoWidget*)              Widget_KillerInfo                                           OFFSET(get<T>, {0x4A0, 8, 0, 0})
	CMember(UCommonButtonBase*)                        Button_Continue                                             OFFSET(get<T>, {0x4A8, 8, 0, 0})
	CMember(UCommonButtonBase*)                        Button_ReportPlayer                                         OFFSET(get<T>, {0x4B0, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortEliminationScreen.SetContinueButtonText
	// void SetContinueButtonText(FText& InText);                                                                               // [0x1d9241c] Event|Protected|HasOutParms|BlueprintEvent 
	// Function /Script/FortniteUI.FortEliminationScreen.PlayIntroAnimation
	// void PlayIntroAnimation();                                                                                               // [0x1d9241c] Event|Protected|BlueprintEvent 
};

/// Class /Script/FortniteUI.FortMatchStatsScreen
/// Size: 0x0000 (0x000570 - 0x000570)
class UFortMatchStatsScreen : public UFortActivatablePanel
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1392;

public:
};

/// Class /Script/FortniteUI.FortMatchXPDetails
/// Size: 0x0010 (0x000400 - 0x000410)
class UFortMatchXPDetails : public UCommonActivatableWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1040;

public:
	CMember(UFortMatchStatsScreen*)                    Section_MatchStats                                          OFFSET(get<T>, {0x400, 8, 0, 0})
	CMember(UAthenaAccoladeListWidget*)                Section_MedalList                                           OFFSET(get<T>, {0x408, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortMatchXPDetails.UpdateMatchStats
	// void UpdateMatchStats();                                                                                                 // [0x9099e0c] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortMatchXPDetails.PopulateAccoladeList
	// void PopulateAccoladeList();                                                                                             // [0x9099c18] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/FortniteUI.FortMatchXPRecap
/// Size: 0x01D0 (0x000400 - 0x0005D0)
class UFortMatchXPRecap : public UCommonActivatableWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1488;

public:
	CMember(UFortMatchXPTotalEntry*)                   MatchXP_MedalEntry                                          OFFSET(get<T>, {0x580, 8, 0, 0})
	CMember(UFortMatchXPTotalEntry*)                   MatchXP_SurvivalBonus                                       OFFSET(get<T>, {0x588, 8, 0, 0})
	CMember(UFortMatchXPTotalEntry*)                   MatchXP_CombatBonus                                         OFFSET(get<T>, {0x590, 8, 0, 0})
	CMember(UFortMatchXPTotalEntry*)                   MatchXP_MatchXp                                             OFFSET(get<T>, {0x598, 8, 0, 0})
	CMember(UFortMatchXPTotalEntry*)                   MatchXP_ChallengeXp                                         OFFSET(get<T>, {0x5A0, 8, 0, 0})
	CMember(UFortMatchXPTotalEntry*)                   MatchXP_TotalEntry                                          OFFSET(get<T>, {0x5A8, 8, 0, 0})
	CMember(UFortMatchXPTotalEntry*)                   MatchCash_TotalEntry                                        OFFSET(get<T>, {0x5B0, 8, 0, 0})
	CMember(UEndOfMatchQuestUpdateWidget*)             Widget_QuestRecap                                           OFFSET(get<T>, {0x5B8, 8, 0, 0})
	CMember(UWidget*)                                  Overlay_ChallengeSection                                    OFFSET(get<T>, {0x5C0, 8, 0, 0})
	DMember(bool)                                      bFocusDesiredTargetAtEndOfMatch                             OFFSET(get<bool>, {0x5C8, 1, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortMatchXPRecap.ReturnToIslandButtonShown
	// void ReturnToIslandButtonShown(bool bShown);                                                                             // [0x9099cc8] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.FortMatchXPRecap.OnReturnToIslandInputAction
	// void OnReturnToIslandInputAction();                                                                                      // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.FortMatchXPRecap.IsSpectating
	// bool IsSpectating();                                                                                                     // [0x909944c] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortMatchXPRecap.HandleToggleFullscreenMap
	// void HandleToggleFullscreenMap(bool bFullscreenMapVisible);                                                              // [0x9098d0c] Final|Native|Public  
	// Function /Script/FortniteUI.FortMatchXPRecap.HandlePostMinigameReset
	// void HandlePostMinigameReset();                                                                                          // [0x9098040] Final|Native|Public  
	// Function /Script/FortniteUI.FortMatchXPRecap.FadeOutOverlay
	// void FadeOutOverlay();                                                                                                   // [0x9097344] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.FortMatchXPRecap.BP_UpdateWidgetVisibilities
	// void BP_UpdateWidgetVisibilities(bool bNewVisibility);                                                                   // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortMatchXPRecap.BP_OnToggleSpectating
	// void BP_OnToggleSpectating();                                                                                            // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortMatchXPRecap.BP_HandlePostMinigameReset
	// void BP_HandlePostMinigameReset();                                                                                       // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortMatchXPRecap.BP_HandleExtensionWidgetCreated
	// void BP_HandleExtensionWidgetCreated(UUserWidget* Widget, EUIExtensionSlot SlotType);                                    // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortMatchXPRecap.AnimateXPTotals
	// void AnimateXPTotals();                                                                                                  // [0x1d9241c] Event|Public|BlueprintEvent 
};

/// Class /Script/FortniteUI.FortMatchXPTotalEntry
/// Size: 0x0058 (0x000328 - 0x000380)
class UFortMatchXPTotalEntry : public UFortHUDElementWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 896;

public:
	DMember(bool)                                      bIsTotal                                                    OFFSET(get<bool>, {0x328, 1, 0, 0})
	SMember(FText)                                     XPType                                                      OFFSET(getStruct<T>, {0x330, 24, 0, 0})
	SMember(FText)                                     XPSymbol                                                    OFFSET(getStruct<T>, {0x348, 24, 0, 0})
	CMember(UCommonNumericTextBlock*)                  NumericText_XPValue                                         OFFSET(get<T>, {0x368, 8, 0, 0})
	CMember(UCommonTextBlock*)                         TextBlock_XPType                                            OFFSET(get<T>, {0x370, 8, 0, 0})
	CMember(UCommonTextBlock*)                         TextBlock_XPSymbol                                          OFFSET(get<T>, {0x378, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortMatchXPTotalEntry.InitializeXPCounter
	// void InitializeXPCounter();                                                                                              // [0x909939c] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.FortMatchXPTotalEntry.GetXPTarget
	// int32_t GetXPTarget();                                                                                                   // [0x90974dc] Final|Native|Public|BlueprintCallable|BlueprintPure 
};

/// Class /Script/FortniteUI.FortPostGameMenuEntryOverlay
/// Size: 0x0010 (0x0002C0 - 0x0002D0)
class UFortPostGameMenuEntryOverlay : public UUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 720;

public:
	CMember(UCommonTextBlock*)                         Text_Name                                                   OFFSET(get<T>, {0x2C0, 8, 0, 0})
	CMember(UCommonActionWidget*)                      InputAction_Select                                          OFFSET(get<T>, {0x2C8, 8, 0, 0})
};

/// Class /Script/FortniteUI.FortPostGameMenuEntry
/// Size: 0x0030 (0x0014E0 - 0x001510)
class UFortPostGameMenuEntry : public UCommonButtonLegacy
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 5392;

public:
	SMember(FDataTableRowHandle)                       HoldInputAction                                             OFFSET(getStruct<T>, {0x14E8, 16, 0, 0})
	CMember(UFortCTAButton*)                           Overlay_Entry                                               OFFSET(get<T>, {0x1508, 8, 0, 0})
};

/// Class /Script/FortniteUI.FortPostGameMenuItemShopEntry
/// Size: 0x0000 (0x001510 - 0x001510)
class UFortPostGameMenuItemShopEntry : public UFortPostGameMenuEntry
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 5392;

public:
};

/// Class /Script/FortniteUI.FortPostGameMenuListView
/// Size: 0x0120 (0x000298 - 0x0003B8)
class UFortPostGameMenuListView : public UListViewBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 952;

public:
	CMember(UClass*)                                   EntryClass                                                  OFFSET(get<T>, {0x380, 8, 0, 0})
	CMember(UClass*)                                   ItemShopEntryClass                                          OFFSET(get<T>, {0x388, 8, 0, 0})
	DMember(float)                                     EntrySpacing                                                OFFSET(get<float>, {0x390, 4, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortPostGameMenuListView.GetFirstEntry
	// UFortPostGameMenuEntry* GetFirstEntry();                                                                                 // [0x909737c] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/FortniteUI.FortPostGameMobileButtonOverlay
/// Size: 0x0008 (0x0002E8 - 0x0002F0)
class UFortPostGameMobileButtonOverlay : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 752;

public:
	CMember(UBacchusButton*)                           Button_PushToTalk                                           OFFSET(get<T>, {0x2E8, 8, 0, 0})
};

/// Class /Script/FortniteUI.FortPostGameNewQuestsWidget
/// Size: 0x00C8 (0x0002E8 - 0x0003B0)
class UFortPostGameNewQuestsWidget : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 944;

public:
	DMember(float)                                     NewQuestsEntryBoxDisplayTime                                OFFSET(get<float>, {0x2E8, 4, 0, 0})
	CMember(UDynamicEntryBox*)                         EntryBox_NewQuests                                          OFFSET(get<T>, {0x2F0, 8, 0, 0})
	CMember(TArray<UFortQuestObjectiveInfo*>)          UpdatedQuestObjectiveInfoDisplaying                         OFFSET(get<T>, {0x2F8, 16, 0, 0})
	CMember(TArray<UFortQuestObjectiveInfo*>)          UpdatedQuestObjectiveInfoToDisplay                          OFFSET(get<T>, {0x308, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnPlayNewQuestsIntroFinishedDelegate                        OFFSET(getStruct<T>, {0x318, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnPlayNewQuestsEntryBoxIntroFinishedDelegate                OFFSET(getStruct<T>, {0x328, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnPlayNewQuestsEntryBoxOutroFinishedDelegate                OFFSET(getStruct<T>, {0x338, 16, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortPostGameNewQuestsWidget.PlayNextNewQuestsBatch
	// void PlayNextNewQuestsBatch();                                                                                           // [0x9099bd4] Final|Native|Private 
	// Function /Script/FortniteUI.FortPostGameNewQuestsWidget.PlayNewQuestUpdates
	// void PlayNewQuestUpdates();                                                                                              // [0x9099bc0] Final|Native|Public  
	// Function /Script/FortniteUI.FortPostGameNewQuestsWidget.OnPlayOutro
	// void OnPlayOutro();                                                                                                      // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortPostGameNewQuestsWidget.OnPlayNewQuestsIntroFinished__DelegateSignature
	// void OnPlayNewQuestsIntroFinished__DelegateSignature();                                                                  // [0x1d9241c] MulticastDelegate|Public|Delegate 
	// Function /Script/FortniteUI.FortPostGameNewQuestsWidget.OnPlayNewQuestsEntryBoxOutroFinished__DelegateSignature
	// void OnPlayNewQuestsEntryBoxOutroFinished__DelegateSignature();                                                          // [0x1d9241c] MulticastDelegate|Public|Delegate 
	// Function /Script/FortniteUI.FortPostGameNewQuestsWidget.OnPlayNewQuestsEntryBoxOutro
	// void OnPlayNewQuestsEntryBoxOutro();                                                                                     // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortPostGameNewQuestsWidget.OnPlayNewQuestsEntryBoxIntroFinished__DelegateSignature
	// void OnPlayNewQuestsEntryBoxIntroFinished__DelegateSignature();                                                          // [0x1d9241c] MulticastDelegate|Public|Delegate 
	// Function /Script/FortniteUI.FortPostGameNewQuestsWidget.OnPlayNewQuestsEntryBoxIntro
	// void OnPlayNewQuestsEntryBoxIntro();                                                                                     // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortPostGameNewQuestsWidget.OnPlayIntro
	// void OnPlayIntro();                                                                                                      // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortPostGameNewQuestsWidget.HandlePlayNewQuestUpdatesDelayTimerExpired
	// void HandlePlayNewQuestUpdatesDelayTimerExpired();                                                                       // [0x9097fe8] Final|Native|Protected 
	// Function /Script/FortniteUI.FortPostGameNewQuestsWidget.HandlePlayNewQuestsIntroAnimFinished
	// void HandlePlayNewQuestsIntroAnimFinished();                                                                             // [0x9098024] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.FortPostGameNewQuestsWidget.HandlePlayNewQuestsEntryBoxTimerFinished
	// void HandlePlayNewQuestsEntryBoxTimerFinished();                                                                         // [0x9098010] Final|Native|Private 
	// Function /Script/FortniteUI.FortPostGameNewQuestsWidget.HandlePlayNewQuestsEntryBoxOutroAnimFinished
	// void HandlePlayNewQuestsEntryBoxOutroAnimFinished();                                                                     // [0x84c8554] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.FortPostGameNewQuestsWidget.HandlePlayNewQuestsEntryBoxIntroFinished
	// void HandlePlayNewQuestsEntryBoxIntroFinished();                                                                         // [0x9097ffc] Final|Native|Private 
	// Function /Script/FortniteUI.FortPostGameNewQuestsWidget.HandlePlayNewQuestsEntryBoxIntroAnimFinished
	// void HandlePlayNewQuestsEntryBoxIntroAnimFinished();                                                                     // [0x84c8538] Final|Native|Protected|BlueprintCallable 
};

/// Class /Script/FortniteUI.FortPostGameScreenContainer
/// Size: 0x0078 (0x000178 - 0x0001F0)
class UFortPostGameScreenContainer : public UWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 496;

public:
	DMember(int32_t)                                   ScreenPreviewIndex                                          OFFSET(get<int32_t>, {0x188, 4, 0, 0})
	CMember(TArray<UFortPostGameScreen*>)              AllScreens                                                  OFFSET(get<T>, {0x1A0, 16, 0, 0})
};

/// Class /Script/FortniteUI.FortPostGameScreenRoot
/// Size: 0x0088 (0x000400 - 0x000488)
class UFortPostGameScreenRoot : public UCommonActivatableWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1160;

public:
	CMember(UFortPlaylistUIInfo*)                      PreviewPlaylistUIInfo                                       OFFSET(get<T>, {0x400, 8, 0, 0})
	CMember(UFortPlaylistUIInfo*)                      DefaultScreenOrder                                          OFFSET(get<T>, {0x408, 8, 0, 0})
	CMember(TArray<UClass*>)                           PostGameScreenClassesToCreate                               OFFSET(get<T>, {0x410, 16, 0, 0})
	CMember(TArray<UFortPostGameScreen*>)              PostGameScreens                                             OFFSET(get<T>, {0x420, 16, 0, 0})
	CMember(USpacer*)                                  Spacer_ClickCatcher                                         OFFSET(get<T>, {0x430, 8, 0, 0})
	CMember(UOverlay*)                                 Overlay_Placement                                           OFFSET(get<T>, {0x438, 8, 0, 0})
	CMember(UFortPostGameScreenContainer*)             PostGameScreenContainer_Main                                OFFSET(get<T>, {0x440, 8, 0, 0})
	CMember(UUserWidget*)                              HUD_CinematicBars                                           OFFSET(get<T>, {0x448, 8, 0, 0})
	CMember(UScaleBox*)                                ScaleBox_CinematicBars_UserSpecified                        OFFSET(get<T>, {0x450, 8, 0, 0})
	CMember(UScaleBox*)                                ScaleBox_PlacementOverlay_UserSpecified                     OFFSET(get<T>, {0x458, 8, 0, 0})
	CMember(UFortPostGameNewQuestsWidget*)             HUD_NewQuestsWidget                                         OFFSET(get<T>, {0x460, 8, 0, 0})
	CMember(UPostGamePlacementOverlay*)                DefaultPlacementOverlay                                     OFFSET(get<T>, {0x468, 8, 0, 0})
	CMember(UPostGamePlacementOverlay*)                OverridePlacementOverlay                                    OFFSET(get<T>, {0x470, 8, 0, 0})
	CMember(USoundCue*)                                DefaultVictoryStingerCue                                    OFFSET(get<T>, {0x478, 8, 0, 0})
	CMember(USoundCue*)                                OverrideVictoryStingerCue                                   OFFSET(get<T>, {0x480, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortPostGameScreenRoot.ToggleBlur
	// void ToggleBlur();                                                                                                       // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortPostGameScreenRoot.SetPlacementZOrder
	// void SetPlacementZOrder(bool bIsPlacementAboveContent);                                                                  // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortPostGameScreenRoot.OnPostGameScreenConfigUpdated
	// void OnPostGameScreenConfigUpdated(FFortPostGameScreenConfig& NewPostGameConfig);                                        // [0x1d9241c] Event|Protected|HasOutParms|BlueprintEvent 
	// Function /Script/FortniteUI.FortPostGameScreenRoot.HandleXPScreenFinished
	// void HandleXPScreenFinished();                                                                                           // [0x9099380] Final|Native|Private 
	// Function /Script/FortniteUI.FortPostGameScreenRoot.HandleRecoverFromPostGame
	// void HandleRecoverFromPostGame();                                                                                        // [0x9098878] Final|Native|Private 
	// Function /Script/FortniteUI.FortPostGameScreenRoot.AnimateCinematicBars
	// void AnimateCinematicBars();                                                                                             // [0x1d9241c] Event|Protected|BlueprintEvent 
};

/// Class /Script/FortniteUI.FortSeasonLevelConfirmationScreen
/// Size: 0x00F8 (0x000720 - 0x000818)
class UFortSeasonLevelConfirmationScreen : public UFortItemPreviewScreen
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 2072;

public:
	SMember(FDataTableRowHandle)                       CloseScreenRowHandle                                        OFFSET(getStruct<T>, {0x758, 16, 0, 0})
	SMember(FGameplayTag)                              SpatialCamera                                               OFFSET(getStruct<T>, {0x76C, 4, 0, 0})
	CMember(UBacchusCloseButton*)                      Button_CloseTouch                                           OFFSET(get<T>, {0x770, 8, 0, 0})
	CMember(UCommonButtonLegacy*)                      Button_IncreasePurchaseTier                                 OFFSET(get<T>, {0x778, 8, 0, 0})
	CMember(UCommonButtonLegacy*)                      Button_DecreasePurchaseTier                                 OFFSET(get<T>, {0x780, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_Header                                                 OFFSET(get<T>, {0x788, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_TierBundleOffer_Header                                 OFFSET(get<T>, {0x790, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_RewardCount                                            OFFSET(get<T>, {0x798, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_PurchasePrice                                          OFFSET(get<T>, {0x7A0, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_TierBundleOriginalPrice                                OFFSET(get<T>, {0x7A8, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_TierBundlePurchasePrice                                OFFSET(get<T>, {0x7B0, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_RefundDisclaimer                                       OFFSET(get<T>, {0x7B8, 8, 0, 0})
	CMember(UDynamicEntryBox*)                         EntryBox_RewardIcons                                        OFFSET(get<T>, {0x7C0, 8, 0, 0})
	CMember(UCommonButtonLegacy*)                      Button_Purchase                                             OFFSET(get<T>, {0x7C8, 8, 0, 0})
	CMember(UCommonButtonLegacy*)                      Button_TierBundlePurchase                                   OFFSET(get<T>, {0x7D0, 8, 0, 0})
	CMember(USizeBox*)                                 SB_TierBundle                                               OFFSET(get<T>, {0x7D8, 8, 0, 0})
	CMember(UWidget*)                                  Widget_TierBundleWarning                                    OFFSET(get<T>, {0x7E0, 8, 0, 0})
	SMember(FText)                                     RefundDisclaimerSingleOffer                                 OFFSET(getStruct<T>, {0x7E8, 24, 0, 0})
	SMember(FText)                                     RefundDisclaimerMultipleOffer                               OFFSET(getStruct<T>, {0x800, 24, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortSeasonLevelConfirmationScreen.OnWidgetsRefreshed
	// void OnWidgetsRefreshed();                                                                                               // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortSeasonLevelConfirmationScreen.OnPurchaseFinished
	// void OnPurchaseFinished();                                                                                               // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortSeasonLevelConfirmationScreen.HandlePurchaseComplete
	// void HandlePurchaseComplete(bool bSuccess, TArray<FPurchasedItemInfo>& PurchasedItems, FString OfferId);                 // [0x9098054] Final|Native|Private|HasOutParms 
	// Function /Script/FortniteUI.FortSeasonLevelConfirmationScreen.HandleCloseScreen
	// void HandleCloseScreen();                                                                                                // [0x9097650] Final|Native|Private 
	// Function /Script/FortniteUI.FortSeasonLevelConfirmationScreen.CanAffordTierPurchase
	// bool CanAffordTierPurchase();                                                                                            // [0x9097320] Final|Native|Private|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortSeasonLevelConfirmationScreen.CanAffordTierBundlePurchase
	// bool CanAffordTierBundlePurchase();                                                                                      // [0x90972fc] Final|Native|Private|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/FortniteUI.FortVictoryRoyaleScreen
/// Size: 0x0018 (0x000490 - 0x0004A8)
class UFortVictoryRoyaleScreen : public UFortPostGameScreen
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1192;

public:
	DMember(float)                                     ScreenDuration                                              OFFSET(get<float>, {0x490, 4, 0, 0})
};

/// Class /Script/FortniteUI.AthenaIGMPartyMemberWidget
/// Size: 0x0168 (0x0002E8 - 0x000450)
class UAthenaIGMPartyMemberWidget : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1104;

public:
	DMember(bool)                                      bIsLocalPlayerSlot                                          OFFSET(get<bool>, {0x428, 1, 0, 0})
	DMember(bool)                                      bIsInGameSlot                                               OFFSET(get<bool>, {0x429, 1, 0, 0})
	CMember(UFortSocialAvatarIcon*)                    AvatarIconWidget                                            OFFSET(get<T>, {0x430, 8, 0, 0})
	CMember(USocialNameTextBlock*)                     Text_SocialName                                             OFFSET(get<T>, {0x438, 8, 0, 0})
	CMember(UFortVoiceChatStatusIcon*)                 VoiceIcon_Status                                            OFFSET(get<T>, {0x440, 8, 0, 0})
	CMember(UFortPartyMember*)                         CachedPartyMember                                           OFFSET(get<T>, {0x448, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.AthenaIGMPartyMemberWidget.OnWidgetReset
	// void OnWidgetReset();                                                                                                    // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaIGMPartyMemberWidget.OnUserSet
	// void OnUserSet();                                                                                                        // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaIGMPartyMemberWidget.OnNewReadiness
	// void OnNewReadiness(EGameReadiness GameReadiness);                                                                       // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaIGMPartyMemberWidget.OnNewLocation
	// void OnNewLocation(EFortPartyMemberLocation NewLocation);                                                                // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaIGMPartyMemberWidget.OnIsPartyLeaderChanged
	// void OnIsPartyLeaderChanged(bool bIsPartyLeader);                                                                        // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaIGMPartyMemberWidget.IsPlayingFortnite
	// bool IsPlayingFortnite();                                                                                                // [0x9099404] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.AthenaIGMPartyMemberWidget.IsEmptySlot
	// bool IsEmptySlot();                                                                                                      // [0x752425c] Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.AthenaIGMPartyMemberWidget.GetIsLocalPlayerSlot
	// bool GetIsLocalPlayerSlot();                                                                                             // [0x90973b8] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.AthenaIGMPartyMemberWidget.GetIsInGameSlot
	// bool GetIsInGameSlot();                                                                                                  // [0x90973a0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.AthenaIGMPartyMemberWidget.BP_HandleExtensionWidgetCreated
	// void BP_HandleExtensionWidgetCreated(UUserWidget* Widget, EUIExtensionSlot SlotType);                                    // [0x1d9241c] Event|Protected|BlueprintEvent 
};

/// Class /Script/FortniteUI.AthenaIGMSquadDisplayWidget
/// Size: 0x0018 (0x0002E8 - 0x000300)
class UAthenaIGMSquadDisplayWidget : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 768;

public:
	CMember(UAthenaIGMSquadMemberWidget*)              LocalPlayerSquadMemberWidget                                OFFSET(get<T>, {0x2E8, 8, 0, 0})
	CMember(UDynamicEntryBox*)                         EntryBox_SquadMemberWidgets                                 OFFSET(get<T>, {0x2F0, 8, 0, 0})
};

/// Class /Script/FortniteUI.AthenaIGMSquadMemberWidget
/// Size: 0x0028 (0x000450 - 0x000478)
class UAthenaIGMSquadMemberWidget : public UAthenaIGMPartyMemberWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1144;

public:
	CMember(UFortLazyImage*)                           Image_SquadMemberPortrait                                   OFFSET(get<T>, {0x450, 8, 0, 0})
	CMember(UTextBlock*)                               Text_SquadMemberName                                        OFFSET(get<T>, {0x458, 8, 0, 0})
	CMember(UImage*)                                   Image_PartyMemberIndicator                                  OFFSET(get<T>, {0x460, 8, 0, 0})
	CMember(AFortPlayerStateAthena*)                   CachedSquadMember                                           OFFSET(get<T>, {0x468, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.AthenaIGMSquadMemberWidget.OnSetupAsFillSlot
	// void OnSetupAsFillSlot();                                                                                                // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaIGMSquadMemberWidget.OnMatchmakingStarted
	// void OnMatchmakingStarted(bool bWasOptedIn);                                                                             // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaIGMSquadMemberWidget.OnKeepPlayingTogetherVotingStatusChanged
	// void OnKeepPlayingTogetherVotingStatusChanged(EKeepPlayingTogetherVotingStatus NewStatus, bool bWasOptedIn);             // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaIGMSquadMemberWidget.HandlePreserveSquadChanged
	// void HandlePreserveSquadChanged(bool bPreserveSquad);                                                                    // [0x1d9241c] Event|Protected|BlueprintEvent 
};

/// Class /Script/FortniteUI.AthenaPreserveSquadButton
/// Size: 0x0008 (0x0002E8 - 0x0002F0)
class UAthenaPreserveSquadButton : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 752;

public:
	CMember(UCommonButtonBase*)                        Button_Internal                                             OFFSET(get<T>, {0x2E8, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.AthenaPreserveSquadButton.BP_HandlePreserveSquadChanged
	// void BP_HandlePreserveSquadChanged(bool bPreserveSquad);                                                                 // [0x1d9241c] Event|Protected|BlueprintEvent 
};

/// Class /Script/FortniteUI.AthenaShutdownWidget
/// Size: 0x0010 (0x0002E8 - 0x0002F8)
class UAthenaShutdownWidget : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 760;

public:
};

/// Class /Script/FortniteUI.LastKillerInfoExtensionWidget
/// Size: 0x0000 (0x000328 - 0x000328)
class ULastKillerInfoExtensionWidget : public UFortHUDElementWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 808;

public:
};

/// Class /Script/FortniteUI.PostGamePlacementOverlay
/// Size: 0x0020 (0x000328 - 0x000348)
class UPostGamePlacementOverlay : public UFortHUDElementWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 840;

public:
	CMember(UClass*)                                   MutatorClassToWaitFor                                       OFFSET(get<T>, {0x328, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.PostGamePlacementOverlay.ShowWinningPlacement
	// void ShowWinningPlacement();                                                                                             // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.PostGamePlacementOverlay.ShowTiePlacement
	// void ShowTiePlacement();                                                                                                 // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.PostGamePlacementOverlay.ShowLosingPlacement
	// void ShowLosingPlacement();                                                                                              // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.PostGamePlacementOverlay.ShouldShow
	// bool ShouldShow();                                                                                                       // [0x9099d54] Final|RequiredAPI|Native|Public|Const 
	// Function /Script/FortniteUI.PostGamePlacementOverlay.NativeShouldShow
	// bool NativeShouldShow();                                                                                                 // [0x6498ac4] RequiredAPI|Native|Protected|Const 
	// Function /Script/FortniteUI.PostGamePlacementOverlay.LocalPlacementChanged
	// void LocalPlacementChanged();                                                                                            // [0x9099464] Final|Native|Protected 
	// Function /Script/FortniteUI.PostGamePlacementOverlay.FadeOutOverlay
	// void FadeOutOverlay();                                                                                                   // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.PostGamePlacementOverlay.BP_ShouldShow
	// bool BP_ShouldShow();                                                                                                    // [0x2c6cedc] Native|Event|Protected|BlueprintEvent|Const 
	// Function /Script/FortniteUI.PostGamePlacementOverlay.BP_ScreenIndexChanged
	// void BP_ScreenIndexChanged(int32_t NewIndex, UFortPostGameScreen* NewScreen);                                            // [0x1d9241c] Event|Protected|BlueprintEvent 
};

/// Class /Script/FortniteUI.PostGameSpectatedPlayerName
/// Size: 0x0000 (0x000328 - 0x000328)
class UPostGameSpectatedPlayerName : public UFortHUDElementWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 808;

public:
};

/// Class /Script/FortniteUI.AthenaHUDSituationalFeedback
/// Size: 0x0010 (0x000328 - 0x000338)
class UAthenaHUDSituationalFeedback : public UFortHUDElementWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 824;

public:
	CMember(UFortDynamicEntryBox*)                     EntryBox_Feedback                                           OFFSET(get<T>, {0x328, 8, 0, 0})
	DMember(bool)                                      bPrecreateFeedbackEntries                                   OFFSET(get<bool>, {0x330, 1, 0, 0})
};

/// Class /Script/FortniteUI.AthenaGenericKeyBindsFeedback
/// Size: 0x0030 (0x000338 - 0x000368)
class UAthenaGenericKeyBindsFeedback : public UAthenaHUDSituationalFeedback
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 872;

public:
	CMember(TArray<FGenericAction>)                    GenericActions                                              OFFSET(get<T>, {0x338, 16, 0, 0})
	DMember(float)                                     DimmedOpacity                                               OFFSET(get<float>, {0x348, 4, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.AthenaGenericKeyBindsFeedback.HandleWeaponHUDKeyActionUpdated
	// void HandleWeaponHUDKeyActionUpdated(AFortWeapon* Weapon);                                                               // [0x9099304] Final|Native|Private 
	// Function /Script/FortniteUI.AthenaGenericKeyBindsFeedback.HandleWeaponEquipped
	// void HandleWeaponEquipped(AFortWeapon* NewWeapon, AFortWeapon* PreviousWeapon);                                          // [0x9099248] Final|Native|Private 
	// Function /Script/FortniteUI.AthenaGenericKeyBindsFeedback.HandleTetherChanged
	// void HandleTetherChanged(bool bIsTethered);                                                                              // [0x9098c84] Final|Native|Private 
	// Function /Script/FortniteUI.AthenaGenericKeyBindsFeedback.HandleSavedTabChanged
	// void HandleSavedTabChanged(bool IsTabSaved);                                                                             // [0x909890c] Final|Native|Private 
	// Function /Script/FortniteUI.AthenaGenericKeyBindsFeedback.HandleKeybindsChanged
	// void HandleKeybindsChanged();                                                                                            // [0x9097aa8] Final|Native|Private 
	// Function /Script/FortniteUI.AthenaGenericKeyBindsFeedback.HandleInputStackChanged
	// void HandleInputStackChanged();                                                                                          // [0x9097aa8] Final|Native|Private 
	// Function /Script/FortniteUI.AthenaGenericKeyBindsFeedback.HandleInputComponentDisplayTextChanged
	// void HandleInputComponentDisplayTextChanged();                                                                           // [0x9097aa8] Final|Native|Private 
	// Function /Script/FortniteUI.AthenaGenericKeyBindsFeedback.HandleGenericActionRemoved
	// void HandleGenericActionRemoved(FName ActionName);                                                                       // [0x9097900] Final|Native|Private 
	// Function /Script/FortniteUI.AthenaGenericKeyBindsFeedback.HandleGenericActionAdded
	// void HandleGenericActionAdded(FName ActionName, FText DescriptionText);                                                  // [0x9097820] Final|Native|Private 
	// Function /Script/FortniteUI.AthenaGenericKeyBindsFeedback.HandleEnterExitVehicle
	// void HandleEnterExitVehicle();                                                                                           // [0x90977f8] Final|Native|Private 
	// Function /Script/FortniteUI.AthenaGenericKeyBindsFeedback.HandleDBNOCarryPlayerChanged
	// void HandleDBNOCarryPlayerChanged(bool bIsCarrying);                                                                     // [0x9097664] Final|Native|Private 
};

/// Class /Script/FortniteUI.FortAthenaLoadingMessage
/// Size: 0x0000 (0x0002C0 - 0x0002C0)
class UFortAthenaLoadingMessage : public UUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 704;

public:
};

/// Class /Script/FortniteUI.FortInputBlockedWarning
/// Size: 0x0000 (0x000328 - 0x000328)
class UFortInputBlockedWarning : public UFortHUDElementWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 808;

public:
};

/// Class /Script/FortniteUI.GenericFortPrioritizedWidgetBase
/// Size: 0x0048 (0x000328 - 0x000370)
class UGenericFortPrioritizedWidgetBase : public UFortHUDElementWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 880;

public:
	SMember(FFortPrioritizedWidgetData)                PrioritizationData                                          OFFSET(getStruct<T>, {0x368, 2, 0, 0})
};

/// Class /Script/FortniteUI.AthenaItemElementWidgetBase
/// Size: 0x0008 (0x0002E8 - 0x0002F0)
class UAthenaItemElementWidgetBase : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 752;

public:
};

/// Class /Script/FortniteUI.AthenaItemIcon
/// Size: 0x0040 (0x0002F0 - 0x000330)
class UAthenaItemIcon : public UAthenaItemElementWidgetBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 816;

public:
	CMember(UImage*)                                   Image_ItemIcon                                              OFFSET(get<T>, {0x300, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_StackCount                                             OFFSET(get<T>, {0x308, 8, 0, 0})
	CMember(UImage*)                                   Image_AmmoIcon                                              OFFSET(get<T>, {0x310, 8, 0, 0})
	CMember(UAthenaItemTierWidget*)                    ItemTierWidget                                              OFFSET(get<T>, {0x318, 8, 0, 0})
	DMember(bool)                                      bUseLargePreviewImage                                       OFFSET(get<bool>, {0x320, 1, 0, 0})
	SMember(FName)                                     ItemIconTextureParamName                                    OFFSET(getStruct<T>, {0x324, 4, 0, 0})
	SMember(FName)                                     AmmoIconTextureParamName                                    OFFSET(getStruct<T>, {0x328, 4, 0, 0})
	DMember(bool)                                      bDisplayInitialAmmoCount                                    OFFSET(get<bool>, {0x32C, 1, 0, 0})
	DMember(bool)                                      bForceHideItemCount                                         OFFSET(get<bool>, {0x32D, 1, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.AthenaItemIcon.OnStackCountTextUpdated
	// void OnStackCountTextUpdated(bool bIsInfinite);                                                                          // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaItemIcon.OnItemIconUpdated
	// void OnItemIconUpdated(bool bHasItemIcon);                                                                               // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaItemIcon.OnAmmoIconUpdated
	// void OnAmmoIconUpdated(bool bHasAmmoIcon);                                                                               // [0x1d9241c] Event|Protected|BlueprintEvent 
};

/// Class /Script/FortniteUI.AthenaItemTierPipWidget
/// Size: 0x0000 (0x0002E8 - 0x0002E8)
class UAthenaItemTierPipWidget : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 744;

public:
};

/// Class /Script/FortniteUI.AthenaItemTierWidget
/// Size: 0x0008 (0x0002F0 - 0x0002F8)
class UAthenaItemTierWidget : public UAthenaItemElementWidgetBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 760;

public:
	CMember(UDynamicEntryBox*)                         EntryBox_TierPips                                           OFFSET(get<T>, {0x2F0, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.AthenaItemTierWidget.OnItemTierUpdated
	// void OnItemTierUpdated(EFortItemTier ItemTier);                                                                          // [0x1d9241c] Event|Protected|BlueprintEvent 
};

/// Class /Script/FortniteUI.NPCStatusWidgetBase
/// Size: 0x0140 (0x0002C0 - 0x000400)
class UNPCStatusWidgetBase : public UUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1024;

public:
};

/// Class /Script/FortniteUI.NPCStatusWidgetExtensionBase
/// Size: 0x0000 (0x0002E8 - 0x0002E8)
class UNPCStatusWidgetExtensionBase : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 744;

public:
};

/// Class /Script/FortniteUI.FortPickerOverlay
/// Size: 0x00F0 (0x000400 - 0x0004F0)
class UFortPickerOverlay : public UCommonActivatableWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1264;

public:
	SMember(FName)                                     GamepadActionName                                           OFFSET(getStruct<T>, {0x400, 4, 0, 0})
	SMember(FName)                                     KBMActionName                                               OFFSET(getStruct<T>, {0x404, 4, 0, 0})
	SMember(FName)                                     CancelActionName                                            OFFSET(getStruct<T>, {0x408, 4, 0, 0})
	DMember(bool)                                      bShouldFlushInputOnActivation                               OFFSET(get<bool>, {0x40C, 1, 0, 0})
	DMember(bool)                                      bShouldCenterMouseOnActivation                              OFFSET(get<bool>, {0x40D, 1, 0, 0})
	DMember(bool)                                      bShouldCloseOnEmptySelection                                OFFSET(get<bool>, {0x40E, 1, 0, 0})
	DMember(bool)                                      bAllowEmptySelection                                        OFFSET(get<bool>, {0x40F, 1, 0, 0})
	DMember(bool)                                      bRememberLastItem                                           OFFSET(get<bool>, {0x4B8, 1, 0, 0})
	SMember(FDataTableRowHandle)                       VirtualAcceptInputAction                                    OFFSET(getStruct<T>, {0x4C0, 16, 0, 0})
	CMember(UFortSlottedRadialMenu*)                   RadialMenu_Picker                                           OFFSET(get<T>, {0x4D0, 8, 0, 0})
	CMember(UImage*)                                   Image_RadialHighlight                                       OFFSET(get<T>, {0x4D8, 8, 0, 0})
	SMember(FName)                                     RadialSelectionMaterialParameterName                        OFFSET(getStruct<T>, {0x4E0, 4, 0, 0})
	CMember(UMaterialInstanceDynamic*)                 RadialHighlightMID                                          OFFSET(get<T>, {0x4E8, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortPickerOverlay.PlaySelectionAnimation
	// void PlaySelectionAnimation();                                                                                           // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortPickerOverlay.BP_OnNoItemChosen
	// void BP_OnNoItemChosen();                                                                                                // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.FortPickerOverlay.BP_OnItemChosen
	// void BP_OnItemChosen();                                                                                                  // [0x1d9241c] Event|Public|BlueprintEvent 
};

/// Class /Script/FortniteUI.FortQuickWeaponDisplay
/// Size: 0x0100 (0x000400 - 0x000500)
class UFortQuickWeaponDisplay : public UCommonActivatableWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1280;

public:
	DMember(float)                                     AbsentItemKeyBindingOpacity                                 OFFSET(get<float>, {0x400, 4, 0, 0})
	CMember(UImage*)                                   BG_Center                                                   OFFSET(get<T>, {0x408, 8, 0, 0})
	CMember(UImage*)                                   BG_West                                                     OFFSET(get<T>, {0x410, 8, 0, 0})
	CMember(UImage*)                                   BG_North                                                    OFFSET(get<T>, {0x418, 8, 0, 0})
	CMember(UImage*)                                   BG_East                                                     OFFSET(get<T>, {0x420, 8, 0, 0})
	CMember(UImage*)                                   BG_South                                                    OFFSET(get<T>, {0x428, 8, 0, 0})
	CMember(UFortLazyImage*)                           Icon_Center                                                 OFFSET(get<T>, {0x430, 8, 0, 0})
	CMember(UFortLazyImage*)                           Icon_West                                                   OFFSET(get<T>, {0x438, 8, 0, 0})
	CMember(UFortLazyImage*)                           Icon_North                                                  OFFSET(get<T>, {0x440, 8, 0, 0})
	CMember(UFortLazyImage*)                           Icon_East                                                   OFFSET(get<T>, {0x448, 8, 0, 0})
	CMember(UFortLazyImage*)                           Icon_South                                                  OFFSET(get<T>, {0x450, 8, 0, 0})
	CMember(UFortKeybindWidget*)                       Key_West                                                    OFFSET(get<T>, {0x458, 8, 0, 0})
	CMember(UFortKeybindWidget*)                       Key_North                                                   OFFSET(get<T>, {0x460, 8, 0, 0})
	CMember(UFortKeybindWidget*)                       Key_East                                                    OFFSET(get<T>, {0x468, 8, 0, 0})
	CMember(UFortKeybindWidget*)                       Key_South                                                   OFFSET(get<T>, {0x470, 8, 0, 0})
	CMember(UOverlay*)                                 OffsetOverlay                                               OFFSET(get<T>, {0x478, 8, 0, 0})
};

/// Class /Script/FortniteUI.FortRadialSlot
/// Size: 0x0050 (0x0014E0 - 0x001530)
class UFortRadialSlot : public UCommonButtonLegacy
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 5424;

public:
	CMember(UCommonLazyImage*)                         Image_Icon                                                  OFFSET(get<T>, {0x14F0, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_Main                                                   OFFSET(get<T>, {0x14F8, 8, 0, 0})
	CMember(UWidget*)                                  Overlay_EquippedItem                                        OFFSET(get<T>, {0x1500, 8, 0, 0})
	CMember(TWeakObjectPtr<UTexture2D*>)               LockedTexture                                               OFFSET(get<T>, {0x1508, 32, 0, 0})
};

/// Class /Script/FortniteUI.FortRadialPickerEntry
/// Size: 0x0010 (0x001530 - 0x001540)
class UFortRadialPickerEntry : public UFortRadialSlot
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 5440;

public:
	CMember(UHorizontalBox*)                           HorizontalBox_EntryName                                     OFFSET(get<T>, {0x1528, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_Center                                                 OFFSET(get<T>, {0x1530, 8, 0, 0})
	CMember(UHorizontalBox*)                           HorizontalBox_CenterText                                    OFFSET(get<T>, {0x1538, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortRadialPickerEntry.OnAvailabilityChanged
	// void OnAvailabilityChanged(bool bIsAvailable);                                                                           // [0x1d9241c] RequiredAPI|Event|Protected|BlueprintEvent 
};

/// Class /Script/FortniteUI.FortSquadComsPicker
/// Size: 0x0280 (0x000400 - 0x000680)
class UFortSquadComsPicker : public UCommonActivatableWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1664;

public:
	CMember(UAthenaQuickChatBank*)                     RequestOptionsBank                                          OFFSET(get<T>, {0x408, 8, 0, 0})
	CMember(TArray<FSquadComsNPCCommandEntry>)         NPCCommandOptions                                           OFFSET(get<T>, {0x410, 16, 0, 0})
	CMember(TArray<FSquadComsNPCCommandEntry>)         WildlifeCommandOptions                                      OFFSET(get<T>, {0x420, 16, 0, 0})
	CMember(TArray<FSquadComsQuickChatEntry>)          QuickChatOptions                                            OFFSET(get<T>, {0x430, 16, 0, 0})
	CMember(USoundBase*)                               DismissConfirmSound                                         OFFSET(get<T>, {0x440, 8, 0, 0})
	CMember(USoundBase*)                               DefaultConfirmSound                                         OFFSET(get<T>, {0x448, 8, 0, 0})
	SMember(FText)                                     DefaultMultiCompanionText                                   OFFSET(getStruct<T>, {0x450, 24, 0, 0})
	CMember(TWeakObjectPtr<UTexture2D*>)               DefaultMultiCompanionPreviewImage                           OFFSET(get<T>, {0x468, 32, 0, 0})
	CMember(PingCommandType)                           PingCommandSelected                                         OFFSET(get<T>, {0x488, 1, 0, 0})
	CMember(EFortWorldMarkerType)                      WorldMarkerSelected                                         OFFSET(get<T>, {0x489, 1, 0, 0})
	CMember(TMap<FGameplayTag, TWeakObjectPtr>)        CategoryIcons                                               OFFSET(get<T>, {0x4A0, 80, 0, 0})
	CMember(TArray<FFortSquadComsPickerSubCategoryIdentifier>) SubCategoryIdentifiers                              OFFSET(get<T>, {0x4F0, 16, 0, 0})
	CMember(AFortPlayerState*)                         AllyNPCPlayerState                                          OFFSET(get<T>, {0x510, 8, 0, 0})
	DMember(bool)                                      bShowSquadComsInSolo                                        OFFSET(get<bool>, {0x518, 1, 0, 0})
	CMember(TArray<PingCommandType>)                   BlockedPingCommandTypes                                     OFFSET(get<T>, {0x520, 16, 0, 0})
	SMember(FPrimaryContentSetup)                      PrimaryContentSetup                                         OFFSET(getStruct<T>, {0x530, 3, 0, 0})
	CMember(TArray<FDataTableRowHandle>)               QuickSelectBindings                                         OFFSET(get<T>, {0x538, 16, 0, 0})
	SMember(FDataTableRowHandle)                       PreviousWheelInputAction                                    OFFSET(getStruct<T>, {0x548, 16, 0, 0})
	SMember(FDataTableRowHandle)                       NextWheelInputAction                                        OFFSET(getStruct<T>, {0x558, 16, 0, 0})
	SMember(FDataTableRowHandle)                       PreviousCategoryInputAction                                 OFFSET(getStruct<T>, {0x568, 16, 0, 0})
	SMember(FDataTableRowHandle)                       NextCategoryInputAction                                     OFFSET(getStruct<T>, {0x578, 16, 0, 0})
	SMember(FDataTableRowHandle)                       DismissNPCInputAction                                       OFFSET(getStruct<T>, {0x588, 16, 0, 0})
	SMember(FDataTableRowHandle)                       OnReleaseSelectInputAction                                  OFFSET(getStruct<T>, {0x598, 16, 0, 0})
	CMember(UCommonButtonLegacy*)                      Button_PreviousWheel                                        OFFSET(get<T>, {0x5A8, 8, 0, 0})
	CMember(UCommonButtonLegacy*)                      Button_NextWheel                                            OFFSET(get<T>, {0x5B0, 8, 0, 0})
	CMember(UFortTextButton*)                          Button_CategoryMinusOne                                     OFFSET(get<T>, {0x5B8, 8, 0, 0})
	CMember(UFortTextButton*)                          Button_CategoryPlusOne                                      OFFSET(get<T>, {0x5C0, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_ItemName                                               OFFSET(get<T>, {0x5C8, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_WheelLabel                                             OFFSET(get<T>, {0x5D0, 8, 0, 0})
	CMember(UFortKeybindWidget*)                       Keybind_Confirm                                             OFFSET(get<T>, {0x5D8, 8, 0, 0})
	CMember(UCommonButtonLegacy*)                      Button_Cancel                                               OFFSET(get<T>, {0x5E0, 8, 0, 0})
	CMember(UWidget*)                                  Overlay_InGameChatBinding                                   OFFSET(get<T>, {0x5E8, 8, 0, 0})
	CMember(UFortPickerOverlay*)                       PickerOverlay_SquadComs                                     OFFSET(get<T>, {0x5F0, 8, 0, 0})
	CMember(UCommonVisibilitySwitcher*)                VisibilitySwitcher_Pagination                               OFFSET(get<T>, {0x5F8, 8, 0, 0})
	CMember(UFortDottedPagination*)                    DottedPagination_Category                                   OFFSET(get<T>, {0x600, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_Pagination                                             OFFSET(get<T>, {0x608, 8, 0, 0})
	CMember(UCommonLazyImage*)                         Image_NPCIcon                                               OFFSET(get<T>, {0x610, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_NPCName                                                OFFSET(get<T>, {0x618, 8, 0, 0})
	CMember(UWidget*)                                  Overlay_PagesTutorial                                       OFFSET(get<T>, {0x620, 8, 0, 0})
	CMember(UWidget*)                                  Overlay_UnavailableWarning                                  OFFSET(get<T>, {0x628, 8, 0, 0})
	CMember(UWidget*)                                  Overlay_DismissNPC                                          OFFSET(get<T>, {0x630, 8, 0, 0})
	CMember(UFortCTAButton*)                           Button_DismissNPC                                           OFFSET(get<T>, {0x638, 8, 0, 0})
	SMember(FGameplayTag)                              PagesTutorialTag                                            OFFSET(getStruct<T>, {0x640, 4, 0, 0})
	CMember(UFortAutoRunNotificationWidget*)           Widget_AutoRunNotification                                  OFFSET(get<T>, {0x648, 8, 0, 0})
	CMember(TArray<ECardinalPoint>)                    Ordering_Request                                            OFFSET(get<T>, {0x650, 16, 0, 0})
	CMember(TArray<ECardinalPoint>)                    Ordering_NPCCommands                                        OFFSET(get<T>, {0x660, 16, 0, 0})
	CMember(TArray<ECardinalPoint>)                    Ordering_SquadComs                                          OFFSET(get<T>, {0x670, 16, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortSquadComsPicker.PlaySelectionAnimation
	// void PlaySelectionAnimation();                                                                                           // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortSquadComsPicker.OnUpdateWarningVisibility
	// void OnUpdateWarningVisibility(bool bIsVisible);                                                                         // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortSquadComsPicker.OnUpdateNPCName
	// void OnUpdateNPCName(FText& UpdatedName);                                                                                // [0x1d9241c] Event|Protected|HasOutParms|BlueprintEvent 
	// Function /Script/FortniteUI.FortSquadComsPicker.OnUpdateNPCColor
	// void OnUpdateNPCColor(FSlateColor& UpdatedColor);                                                                        // [0x1d9241c] Event|Protected|HasOutParms|BlueprintEvent 
	// Function /Script/FortniteUI.FortSquadComsPicker.BP_PageChanged
	// void BP_PageChanged(int32_t Direction);                                                                                  // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortSquadComsPicker.BP_CategoryChanged
	// void BP_CategoryChanged(int32_t Direction);                                                                              // [0x1d9241c] Event|Protected|BlueprintEvent 
};

/// Class /Script/FortniteUI.FortWeaponWheel
/// Size: 0x0078 (0x000400 - 0x000478)
class UFortWeaponWheel : public UCommonActivatableWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1144;

public:
	DMember(bool)                                      bRememberLastItem                                           OFFSET(get<bool>, {0x434, 1, 0, 0})
	DMember(int32_t)                                   NumOfQuickBarItems                                          OFFSET(get<int32_t>, {0x438, 4, 0, 0})
	SMember(FDataTableRowHandle)                       VirtualAcceptInputAction                                    OFFSET(getStruct<T>, {0x440, 16, 0, 0})
	CMember(UFortSlottedRadialMenu*)                   RadialMenu_Picker                                           OFFSET(get<T>, {0x450, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_ItemName                                               OFFSET(get<T>, {0x458, 8, 0, 0})
	CMember(UFortKeybindWidget*)                       Keybind_Confirm                                             OFFSET(get<T>, {0x460, 8, 0, 0})
	CMember(UCommonButtonLegacy*)                      Button_Cancel                                               OFFSET(get<T>, {0x468, 8, 0, 0})
	CMember(UImage*)                                   Image_RadialHighlight                                       OFFSET(get<T>, {0x470, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortWeaponWheel.PlaySelectionAnimation
	// void PlaySelectionAnimation();                                                                                           // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortWeaponWheel.BP_OnItemChosen
	// void BP_OnItemChosen();                                                                                                  // [0x1d9241c] Event|Public|BlueprintEvent 
};

/// Class /Script/FortniteUI.AthenaSpecialEventChallengeEntry
/// Size: 0x00E0 (0x0002C8 - 0x0003A8)
class UAthenaSpecialEventChallengeEntry : public UAthenaChallengeEntry
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 936;

public:
	DMember(float)                                     RefreshRate                                                 OFFSET(get<float>, {0x2E0, 4, 0, 0})
	CMember(UCommonTextBlock*)                         TextThreatLevel                                             OFFSET(get<T>, {0x320, 8, 0, 0})
	CMember(UProgressBar*)                             ProgressBarChallengeProgress                                OFFSET(get<T>, {0x328, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_ChallengeProgress                                      OFFSET(get<T>, {0x330, 8, 0, 0})
	CMember(UProgressBar*)                             ProgressBarTimerProgress                                    OFFSET(get<T>, {0x338, 8, 0, 0})
	CMember(UFortEventDateTimeTextBlock*)              TextChallengeTimer                                          OFFSET(get<T>, {0x340, 8, 0, 0})
	CMember(UWidget*)                                  WidgetProgressContent                                       OFFSET(get<T>, {0x348, 8, 0, 0})
	CMember(UWidget*)                                  WidgetTimerContent                                          OFFSET(get<T>, {0x350, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_Distance                                               OFFSET(get<T>, {0x358, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_Price                                                  OFFSET(get<T>, {0x360, 8, 0, 0})
	CMember(UImage*)                                   Image_Price                                                 OFFSET(get<T>, {0x368, 8, 0, 0})
	SMember(FText)                                     BountyDistanceFormatText                                    OFFSET(getStruct<T>, {0x370, 24, 0, 0})
	CMember(UWidget*)                                  WidgetPriceAndDistanceContent                               OFFSET(get<T>, {0x388, 8, 0, 0})
	CMember(UImage*)                                   Image_UrgentIcon                                            OFFSET(get<T>, {0x390, 8, 0, 0})
	CMember(UImage*)                                   Image_UrgentAlertBackground                                 OFFSET(get<T>, {0x398, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_UrgentIcon                                             OFFSET(get<T>, {0x3A0, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.AthenaSpecialEventChallengeEntry.OnUpdateBountyThreatLevel
	// void OnUpdateBountyThreatLevel(EPlayerBountyThreatLevel NewPlayerBountyThreatLevel);                                     // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaSpecialEventChallengeEntry.OnTimerTextBlockUpdated
	// void OnTimerTextBlockUpdated(double RemainingTime);                                                                      // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaSpecialEventChallengeEntry.OnProgressChanged
	// void OnProgressChanged(int32_t CurrentProgress, int32_t MaxProgress);                                                    // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaSpecialEventChallengeEntry.OnEntrySetup
	// void OnEntrySetup(FUrgentQuestData& UrgentQuestData, bool bUrgentQuestRecentlyStarted);                                  // [0x1d9241c] Event|Protected|HasOutParms|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaSpecialEventChallengeEntry.OnEntryDataChanged
	// void OnEntryDataChanged(FUrgentQuestData& UrgentQuestData);                                                              // [0x1d9241c] Event|Protected|HasOutParms|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaSpecialEventChallengeEntry.OnEntryCompleted
	// void OnEntryCompleted(bool bIsQuestCompleted);                                                                           // [0x9099478] Native|Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaSpecialEventChallengeEntry.OnBountyThreatInformationVisibilityChange
	// void OnBountyThreatInformationVisibilityChange(ESlateVisibility NewVisibilty);                                           // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaSpecialEventChallengeEntry.HandleOnPlayerBountyThreatLevelUpdated
	// void HandleOnPlayerBountyThreatLevelUpdated(EPlayerBountyThreatLevel NewPlayerBountyThreatLeve);                         // [0x9097ee8] Final|Native|Private 
	// Function /Script/FortniteUI.AthenaSpecialEventChallengeEntry.HandleOnPlayerBountyThreatLevelEnded
	// void HandleOnPlayerBountyThreatLevelEnded();                                                                             // [0x9097ed4] Final|Native|Private 
};

/// Class /Script/FortniteUI.ObjectiveInfoEntry
/// Size: 0x0048 (0x0002C0 - 0x000308)
class UObjectiveInfoEntry : public UUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 776;

public:
	CMember(UCommonTextBlock*)                         Text_ObjectiveProgressText                                  OFFSET(get<T>, {0x2C0, 8, 0, 0})
	CMember(UFortRichTextBlockKeybind*)                Text_ObjectiveDescriptionText                               OFFSET(get<T>, {0x2C8, 8, 0, 0})
	DMember(bool)                                      bCompleted                                                  OFFSET(get<bool>, {0x2D0, 1, 0, 0})
	CMember(TArray<FFortItemQuantityPair>)             ObjectiveRewards                                            OFFSET(get<T>, {0x2F8, 16, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.ObjectiveInfoEntry.OverridePrimaryColor
	// void OverridePrimaryColor(bool bShouldOverride, FLinearColor& DesiredColor);                                             // [0x1d9241c] Event|Protected|HasOutParms|HasDefaults|BlueprintEvent 
	// Function /Script/FortniteUI.ObjectiveInfoEntry.OnRewardsSet
	// void OnRewardsSet(TArray<FFortItemQuantityPair>& InObjectiveRewards);                                                    // [0x1d9241c] Event|Protected|HasOutParms|BlueprintEvent 
	// Function /Script/FortniteUI.ObjectiveInfoEntry.OnProgressChanged
	// void OnProgressChanged(int32_t CurrentProgress, int32_t MaxProgress);                                                    // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.ObjectiveInfoEntry.OnNewlyCompleted
	// void OnNewlyCompleted();                                                                                                 // [0x1d9241c] Event|Protected|BlueprintEvent 
};

/// Class /Script/FortniteUI.AthenaSpecialEventChallengeEntry_MultiObjective
/// Size: 0x01D8 (0x0003A8 - 0x000580)
class UAthenaSpecialEventChallengeEntry_MultiObjective : public UAthenaSpecialEventChallengeEntry
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1408;

public:
	CMember(UDynamicEntryBox*)                         DynamicEntryBox_ObjectiveEntries                            OFFSET(get<T>, {0x3A8, 8, 0, 0})
	CMember(TArray<FFortItemQuantityPair>)             PrimaryObjectiveRewards                                     OFFSET(get<T>, {0x3B0, 16, 0, 0})
	SMember(FUrgentQuestData)                          CachedUrgentQuestData                                       OFFSET(getStruct<T>, {0x3C0, 448, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.AthenaSpecialEventChallengeEntry_MultiObjective.OnPrimaryObjectiveRewardsSet
	// void OnPrimaryObjectiveRewardsSet(TArray<FFortItemQuantityPair>& InObjectiveRewards);                                    // [0x1d9241c] Event|Protected|HasOutParms|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaSpecialEventChallengeEntry_MultiObjective.OnObjectiveProgressChanged
	// void OnObjectiveProgressChanged(int32_t ObjectiveIndex, int32_t CurrentProgress, int32_t MaxProgress);                   // [0x1d9241c] Event|Protected|BlueprintEvent 
};

/// Class /Script/FortniteUI.AthenaSpecialEventChallengesWidget
/// Size: 0x0028 (0x0003D0 - 0x0003F8)
class UAthenaSpecialEventChallengesWidget : public UAthenaChallengesWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1016;

public:
	DMember(float)                                     UrgentQuestMessagingStartBuffer                             OFFSET(get<float>, {0x3D8, 4, 0, 0})
	CMember(AFortPlayerStateAthena*)                   AttachedPlayerState                                         OFFSET(get<T>, {0x3E0, 8, 0, 0})
	CMember(TArray<FUrgentQuestData>)                  ActiveUrgentQuestDataArray                                  OFFSET(get<T>, {0x3E8, 16, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.AthenaSpecialEventChallengesWidget.RemoveEntry
	// void RemoveEntry(UUserWidget* Entry);                                                                                    // [0x9099c48] Final|Native|Private 
	// Function /Script/FortniteUI.AthenaSpecialEventChallengesWidget.HandleUrgentQuestStarted
	// void HandleUrgentQuestStarted(FUrgentQuestData& InUrgentQuestData, float EventTimeRemaining);                            // [0x9099070] Final|Native|Private|HasOutParms 
	// Function /Script/FortniteUI.AthenaSpecialEventChallengesWidget.HandleUrgentQuestEnded
	// void HandleUrgentQuestEnded(AFortPlayerStateAthena* PlayerState, FGameplayTag& EventTag, EFortQuestState QuestState);    // [0x9098ef4] Final|Native|Private|HasOutParms 
	// Function /Script/FortniteUI.AthenaSpecialEventChallengesWidget.HandleUrgentQuestDataChanged
	// void HandleUrgentQuestDataChanged(FUrgentQuestData& InUrgentQuestData);                                                  // [0x9098e50] Final|Native|Private|HasOutParms 
	// Function /Script/FortniteUI.AthenaSpecialEventChallengesWidget.HandleSpectatorFailUrgentQuest
	// void HandleSpectatorFailUrgentQuest(FGameplayTag& EventTag);                                                             // [0x9098bf8] Final|Native|Private|HasOutParms 
	// Function /Script/FortniteUI.AthenaSpecialEventChallengesWidget.HandleSpectatorCompleteUrgentQuest
	// void HandleSpectatorCompleteUrgentQuest(FGameplayTag& EventTag);                                                         // [0x9098b6c] Final|Native|Private|HasOutParms 
	// Function /Script/FortniteUI.AthenaSpecialEventChallengesWidget.HandleClearAllUrgentQuestEntries
	// void HandleClearAllUrgentQuestEntries();                                                                                 // [0x909763c] Final|Native|Private 
};

/// Class /Script/FortniteUI.AthenaSpecialEventStartedOverlay
/// Size: 0x0050 (0x000328 - 0x000378)
class UAthenaSpecialEventStartedOverlay : public UFortHUDElementWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 888;

public:
	CMember(AFortPlayerStateAthena*)                   AttachedPlayerState                                         OFFSET(get<T>, {0x368, 8, 0, 0})
	SMember(FFortPrioritizedWidgetData)                PrioritizedWidgetData                                       OFFSET(getStruct<T>, {0x370, 2, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.AthenaSpecialEventStartedOverlay.OnShowUrgentQuestMessage
	// void OnShowUrgentQuestMessage(FUrgentQuestData& UrgentQuestData, float EventTimeRemaining);                              // [0x1d9241c] Event|Protected|HasOutParms|BlueprintCallable|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaSpecialEventStartedOverlay.OnPrioitizedFinished
	// void OnPrioitizedFinished();                                                                                             // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaSpecialEventStartedOverlay.OnPrioitizedActivated
	// void OnPrioitizedActivated();                                                                                            // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaSpecialEventStartedOverlay.HandleShowUrgentQuestMessage
	// void HandleShowUrgentQuestMessage(FUrgentQuestData& UrgentQuestData, float EventTimeRemaining);                          // [0x9098994] Final|Native|Private|HasOutParms 
	// Function /Script/FortniteUI.AthenaSpecialEventStartedOverlay.HandleDisplayDynamicQuestUpdate
	// void HandleDisplayDynamicQuestUpdate(UFortQuestObjectiveInfo* QuestObjective, bool DisplayStatusUpdate, bool DisplayAnnouncementUpdate); // [0x90976ec] Final|Native|Private 
	// Function /Script/FortniteUI.AthenaSpecialEventStartedOverlay.GetOutroDelay
	// float GetOutroDelay();                                                                                                   // [0x90973d0] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/FortniteUI.SquadComsKey
/// Size: 0x0008 (0x000328 - 0x000330)
class USquadComsKey : public UFortHUDElementWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 816;

public:
};

/// Class /Script/FortniteUI.AthenaTransientQuestStartedOverlay
/// Size: 0x0050 (0x000328 - 0x000378)
class UAthenaTransientQuestStartedOverlay : public UFortHUDElementWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 888;

public:
	CMember(UCommonButtonLegacy*)                      Button_MobileClickCatcher                                   OFFSET(get<T>, {0x368, 8, 0, 0})
	SMember(FFortPrioritizedWidgetData)                PrioritizedWidgetData                                       OFFSET(getStruct<T>, {0x371, 2, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.AthenaTransientQuestStartedOverlay.OnTransientQuestStarted
	// void OnTransientQuestStarted(UFortQuestItem* QuestItem);                                                                 // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaTransientQuestStartedOverlay.OnPrioitizedFinished
	// void OnPrioitizedFinished();                                                                                             // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaTransientQuestStartedOverlay.OnPrioitizedActivated
	// void OnPrioitizedActivated();                                                                                            // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaTransientQuestStartedOverlay.HandleTransientQuestStarted
	// void HandleTransientQuestStarted(UFortQuestItem* QuestItem, UFortQuestItemDefinition_Athena* PreceedingQuestDefAthena);  // [0x9098d8c] Final|Native|Private 
	// Function /Script/FortniteUI.AthenaTransientQuestStartedOverlay.GetOutroDelay
	// float GetOutroDelay();                                                                                                   // [0x90973ec] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/FortniteUI.AthenaInventoryGroupAmmo
/// Size: 0x0000 (0x000310 - 0x000310)
class UAthenaInventoryGroupAmmo : public UAthenaInventoryGroupBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 784;

public:
};

/// Class /Script/FortniteUI.AthenaInventoryGroupIngredients
/// Size: 0x0020 (0x000310 - 0x000330)
class UAthenaInventoryGroupIngredients : public UAthenaInventoryGroupBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 816;

public:
	SMember(FGameplayTagContainer)                     IngredientItemTagContainer                                  OFFSET(getStruct<T>, {0x310, 32, 0, 0})
};

/// Class /Script/FortniteUI.AthenaInventoryGroupPanel
/// Size: 0x0160 (0x0002E8 - 0x000448)
class UAthenaInventoryGroupPanel : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1096;

public:
	CMember(UVerticalBox*)                             ExtensionRowHolder                                          OFFSET(get<T>, {0x440, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.AthenaInventoryGroupPanel.GetOrCreateInventoryGroups
	// void GetOrCreateInventoryGroups(TArray<UAthenaInventoryGroupBase*>& OutInventoryGroups);                                 // [0x1d9241c] Event|Public|HasOutParms|BlueprintEvent 
};

/// Class /Script/FortniteUI.AthenaInventoryGroupCurrency
/// Size: 0x0020 (0x000310 - 0x000330)
class UAthenaInventoryGroupCurrency : public UAthenaInventoryGroupBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 816;

public:
	SMember(FGameplayTagContainer)                     CurrencyItemTags                                            OFFSET(getStruct<T>, {0x310, 32, 0, 0})
};

/// Class /Script/FortniteUI.AthenaInventoryItemInfo
/// Size: 0x01B8 (0x0002F0 - 0x0004A8)
class UAthenaInventoryItemInfo : public UAthenaItemElementWidgetBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1192;

public:
	CMember(UCommonTextBlock*)                         Text_ItemName                                               OFFSET(get<T>, {0x430, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_ItemDescription                                        OFFSET(get<T>, {0x438, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_ItemRarity                                             OFFSET(get<T>, {0x440, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_ItemCategory                                           OFFSET(get<T>, {0x448, 8, 0, 0})
	CMember(UImage*)                                   Image_ItemCategory                                          OFFSET(get<T>, {0x450, 8, 0, 0})
	CMember(UAthenaItemIcon*)                          ItemIcon                                                    OFFSET(get<T>, {0x458, 8, 0, 0})
	CMember(UAthenaItemTierWidget*)                    ItemTierWidget                                              OFFSET(get<T>, {0x460, 8, 0, 0})
	CMember(UAthenaInventoryItemStatsWidget*)          ItemStatsWidget                                             OFFSET(get<T>, {0x468, 8, 0, 0})
	SMember(FDataTableRowHandle)                       InspectItemInputRowHandle                                   OFFSET(getStruct<T>, {0x470, 16, 0, 0})
	SMember(FText)                                     ItemRarityTextFormat                                        OFFSET(getStruct<T>, {0x480, 24, 0, 0})
	SMember(FName)                                     CategoryIconTextureParamName                                OFFSET(getStruct<T>, {0x498, 4, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.AthenaInventoryItemInfo.OnOwnerDeactivated
	// void OnOwnerDeactivated();                                                                                               // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaInventoryItemInfo.OnItemRarityTextUpdated
	// void OnItemRarityTextUpdated();                                                                                          // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaInventoryItemInfo.OnItemNameTextUpdated
	// void OnItemNameTextUpdated();                                                                                            // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaInventoryItemInfo.OnItemDescriptionTextUpdated
	// void OnItemDescriptionTextUpdated();                                                                                     // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaInventoryItemInfo.OnItemCategoryTextUpdated
	// void OnItemCategoryTextUpdated();                                                                                        // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaInventoryItemInfo.OnItemCategoryIconUpdated
	// void OnItemCategoryIconUpdated(bool bHasCategoryIcon);                                                                   // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaInventoryItemInfo.OnInspectItemInput
	// void OnInspectItemInput(bool bPressed);                                                                                  // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaInventoryItemInfo.OnExtensionWidgetAdded
	// void OnExtensionWidgetAdded(UUserWidget* ExtensionWidget);                                                               // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaInventoryItemInfo.HandleInventoryItemSelected
	// void HandleInventoryItemSelected(UFortItem* SelectedItem);                                                               // [0x9097abc] Final|Native|Private 
};

/// Class /Script/FortniteUI.AthenaInventoryItemStatEntry
/// Size: 0x0038 (0x0002E8 - 0x000320)
class UAthenaInventoryItemStatEntry : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 800;

public:
	DMember(bool)                                      bValueIsInfinite                                            OFFSET(get<bool>, {0x2E8, 1, 0, 0})
	CMember(UCommonTextBlock*)                         Text_StatName                                               OFFSET(get<T>, {0x2F0, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_StatValue                                              OFFSET(get<T>, {0x2F8, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_StatDeltaValue                                         OFFSET(get<T>, {0x300, 8, 0, 0})
	SMember(FText)                                     StatDeltaTextFormat                                         OFFSET(getStruct<T>, {0x308, 24, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.AthenaInventoryItemStatEntry.OnStatInitialized
	// void OnStatInitialized(float Value, float ComparisonValue, float MinValue, float MaxValue);                              // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaInventoryItemStatEntry.OnItemRaritySet
	// void OnItemRaritySet(EFortRarity ItemRarity, FFortRarityItemData RarityItemData);                                        // [0x1d9241c] Event|Protected|BlueprintEvent 
};

/// Class /Script/FortniteUI.AthenaInventoryItemStatsWidget
/// Size: 0x0020 (0x0002E8 - 0x000308)
class UAthenaInventoryItemStatsWidget : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 776;

public:
	CMember(UDynamicEntryBox*)                         EntryBox_Stats                                              OFFSET(get<T>, {0x2E8, 8, 0, 0})
	CMember(UDataTable*)                               ItemStatsBoundsTable                                        OFFSET(get<T>, {0x2F0, 8, 0, 0})
	CMember(UFortTooltipLoadingWrapper*)               ItemTooltipLoader                                           OFFSET(get<T>, {0x2F8, 8, 0, 0})
	CMember(UFortTooltipLoadingWrapper*)               ComparisonItemTooltipLoader                                 OFFSET(get<T>, {0x300, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.AthenaInventoryItemStatsWidget.HandleTooltipAssetsLoaded
	// void HandleTooltipAssetsLoaded();                                                                                        // [0x90d6774] Final|Native|Private 
};

/// Class /Script/FortniteUI.AthenaInventoryPanel
/// Size: 0x0450 (0x000400 - 0x000850)
class UAthenaInventoryPanel : public UCommonActivatableWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 2128;

public:
	SMember(FName)                                     TabNameID                                                   OFFSET(getStruct<T>, {0x548, 4, 0, 0})
	SMember(FFortTabButtonLabelInfo)                   TabButtonLabelInfo                                          OFFSET(getStruct<T>, {0x550, 240, 0, 0})
	SMember(FFortTabButtonLabelInfo)                   CreativeTabButtonLabelInfo                                  OFFSET(getStruct<T>, {0x640, 240, 0, 0})
	CMember(UClass*)                                   QuantitySelectorClass                                       OFFSET(get<T>, {0x730, 8, 0, 0})
	CMember(UDataTable*)                               StackSizeDataTable                                          OFFSET(get<T>, {0x738, 8, 0, 0})
	SMember(FDataTableRowHandle)                       DropItemInputRowHandle                                      OFFSET(getStruct<T>, {0x740, 16, 0, 0})
	SMember(FDataTableRowHandle)                       DropAllInputRowHandle                                       OFFSET(getStruct<T>, {0x750, 16, 0, 0})
	SMember(FDataTableRowHandle)                       DropStackInputRowHandle                                     OFFSET(getStruct<T>, {0x760, 16, 0, 0})
	SMember(FDataTableRowHandle)                       DropHalfInputRowHandle                                      OFFSET(getStruct<T>, {0x770, 16, 0, 0})
	SMember(FText)                                     DropItemsText                                               OFFSET(getStruct<T>, {0x780, 24, 0, 0})
	SMember(FText)                                     ConfirmDropText                                             OFFSET(getStruct<T>, {0x798, 24, 0, 0})
	SMember(FText)                                     DropStackTextFormat                                         OFFSET(getStruct<T>, {0x7B0, 24, 0, 0})
	SMember(FGameplayTagContainer)                     IngredientItemTags                                          OFFSET(getStruct<T>, {0x7C8, 32, 0, 0})
	CMember(UAthenaInventoryGroupPanel*)               DefaultGroupPanel                                           OFFSET(get<T>, {0x7E8, 8, 0, 0})
	CMember(UAthenaInventoryGroupPanel*)               CurrentGroupPanel                                           OFFSET(get<T>, {0x7F0, 8, 0, 0})
	CMember(UPanelWidget*)                             GroupPanelHolder                                            OFFSET(get<T>, {0x7F8, 8, 0, 0})
	CMember(UVerticalBox*)                             QuickbarEditorHolder                                        OFFSET(get<T>, {0x800, 8, 0, 0})
	CMember(UAthenaQuickbarEditorBase*)                DefaultQuickbarEditor                                       OFFSET(get<T>, {0x808, 8, 0, 0})
	CMember(UAthenaQuickbarEditorBase*)                CurrentQuickbarEditor                                       OFFSET(get<T>, {0x810, 8, 0, 0})
	CMember(TArray<UFortItemTileView*>)                InventorySections                                           OFFSET(get<T>, {0x818, 16, 0, 0})
	CMember(TArray<UAthenaInventoryGroupBase*>)        InventoryGroups                                             OFFSET(get<T>, {0x828, 16, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.AthenaInventoryPanel.HandleInventoryItemSelected
	// void HandleInventoryItemSelected(UFortItem* SelectedInventoryItem);                                                      // [0x90d44b4] Final|Native|Private 
};

/// Class /Script/FortniteUI.AthenaInventoryPanelContainer
/// Size: 0x0270 (0x000400 - 0x000670)
class UAthenaInventoryPanelContainer : public UCommonActivatableWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1648;

public:
	SMember(FName)                                     TabNameID                                                   OFFSET(getStruct<T>, {0x548, 4, 0, 0})
	SMember(FFortTabButtonLabelInfo)                   TabButtonLabelInfo                                          OFFSET(getStruct<T>, {0x550, 240, 0, 0})
	CMember(UClass*)                                   TabButtonClass                                              OFFSET(get<T>, {0x640, 8, 0, 0})
	CMember(UFortTabListWidgetBase_Legacy*)            TabList                                                     OFFSET(get<T>, {0x648, 8, 0, 0})
	CMember(UCommonWidgetSwitcherLegacy*)              Switcher_Tabs                                               OFFSET(get<T>, {0x650, 8, 0, 0})
	CMember(UAthenaInventoryItemInfo*)                 ItemInfoWidget                                              OFFSET(get<T>, {0x658, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.AthenaInventoryPanelContainer.HandleInventoryTabChanged
	// void HandleInventoryTabChanged(UWidget* NewActiveWidget, int32_t WidgetIndex);                                           // [0x2311688] Final|Native|Private 
};

/// Class /Script/FortniteUI.AthenaQuickBarSlotButtonBase
/// Size: 0x0010 (0x001490 - 0x0014A0)
class UAthenaQuickBarSlotButtonBase : public UCommonButtonBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 5280;

public:
	CMember(EFortQuickBars)                            QuickbarIndex                                               OFFSET(get<T>, {0x1490, 1, 0, 0})
	DMember(int32_t)                                   SlotIndex                                                   OFFSET(get<int32_t>, {0x1494, 4, 0, 0})
	CMember(UAthenaItemIcon*)                          ItemIcon                                                    OFFSET(get<T>, {0x1498, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.AthenaQuickBarSlotButtonBase.OnSlottedItemChanged
	// void OnSlottedItemChanged(UFortItem* SlottedItem);                                                                       // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaQuickBarSlotButtonBase.OnOwnerDeactivated
	// void OnOwnerDeactivated();                                                                                               // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaQuickBarSlotButtonBase.OnOwnerActivated
	// void OnOwnerActivated();                                                                                                 // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaQuickBarSlotButtonBase.HandleQuickbarContentsChanged
	// void HandleQuickbarContentsChanged(EFortQuickBars InQuickBarIndex, TArray<int32_t>& ChangedSlots);                       // [0x90d5f9c] Final|Native|Private|HasOutParms 
	// Function /Script/FortniteUI.AthenaQuickBarSlotButtonBase.HandleInventoryItemSelected
	// void HandleInventoryItemSelected(UFortItem* SelectedItem);                                                               // [0x90d4534] Final|Native|Private 
};

/// Class /Script/FortniteUI.AthenaInventoryQuickBarSlotButton
/// Size: 0x0140 (0x0014A0 - 0x0015E0)
class UAthenaInventoryQuickBarSlotButton : public UAthenaQuickBarSlotButtonBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 5600;

public:
};

/// Class /Script/FortniteUI.AthenaInventoryScreenContainer
/// Size: 0x01C8 (0x000400 - 0x0005C8)
class UAthenaInventoryScreenContainer : public UCommonActivatableWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1480;

public:
	CMember(UClass*)                                   TabButtonClass                                              OFFSET(get<T>, {0x540, 8, 0, 0})
	SMember(FDataTableRowHandle)                       BackInputRowHandle                                          OFFSET(getStruct<T>, {0x548, 16, 0, 0})
	SMember(FDataTableRowHandle)                       ToggleInputRowHandle                                        OFFSET(getStruct<T>, {0x558, 16, 0, 0})
	CMember(TArray<FName>)                             BlockedInputActions                                         OFFSET(get<T>, {0x568, 16, 0, 0})
	CMember(TArray<FName>)                             AdditionalBlockedInputActions                               OFFSET(get<T>, {0x578, 16, 0, 0})
	CMember(TArray<FName>)                             BlockedInputAxes                                            OFFSET(get<T>, {0x588, 16, 0, 0})
	CMember(UScaleBox*)                                ScaleBox_Leto                                               OFFSET(get<T>, {0x598, 8, 0, 0})
	CMember(UFortTabListWidgetBase*)                   TabList_Inventory                                           OFFSET(get<T>, {0x5A0, 8, 0, 0})
	CMember(UCommonActivatableWidgetSwitcher*)         Switcher_InventoryTabs                                      OFFSET(get<T>, {0x5A8, 8, 0, 0})
	CMember(UCommonButtonBase*)                        Button_Close                                                OFFSET(get<T>, {0x5B0, 8, 0, 0})
	CMember(UInputComponent*)                          InventoryScreenInputComponent                               OFFSET(get<T>, {0x5B8, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.AthenaInventoryScreenContainer.OnExtensionWidgetCreated
	// void OnExtensionWidgetCreated(EUIExtensionSlot ExtensionSlot, UUserWidget* ExtensionWidget);                             // [0x1d9241c] Event|Protected|BlueprintEvent 
};

/// Class /Script/FortniteUI.AthenaQuickBarSlotExtensionWidgetBase
/// Size: 0x0008 (0x0002E8 - 0x0002F0)
class UAthenaQuickBarSlotExtensionWidgetBase : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 752;

public:
};

/// Class /Script/FortniteUI.AthenaItemShopCarousel
/// Size: 0x0198 (0x0002E8 - 0x000480)
class UAthenaItemShopCarousel : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1152;

public:
	CMember(TWeakObjectPtr<UClass*>)                   CarouselTileClass                                           OFFSET(get<T>, {0x380, 32, 0, 0})
	CMember(UOverlay*)                                 Container_CurrentTile                                       OFFSET(get<T>, {0x3A0, 8, 0, 0})
	CMember(UOverlay*)                                 Container_NextTileToShow                                    OFFSET(get<T>, {0x3A8, 8, 0, 0})
	CMember(UFortClickThroughButton*)                  MobileClickThroughButton                                    OFFSET(get<T>, {0x3B0, 8, 0, 0})
	CMember(UPanelWidget*)                             HBox_NavigationButtons                                      OFFSET(get<T>, {0x3B8, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_NextItem                                               OFFSET(get<T>, {0x3C0, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_PreviousItem                                           OFFSET(get<T>, {0x3C8, 8, 0, 0})
	CMember(UImage*)                                   Image_AutoScrollProgress                                    OFFSET(get<T>, {0x3D0, 8, 0, 0})
	CMember(UDynamicEntryBox*)                         EntryBox_Pips                                               OFFSET(get<T>, {0x3D8, 8, 0, 0})
	CMember(UFortSwipePanel*)                          SwipePanel_ItemsNavigation                                  OFFSET(get<T>, {0x3E0, 8, 0, 0})
	CMember(UCommonButtonGroupLegacy*)                 ButtonGroup_Pips                                            OFFSET(get<T>, {0x3E8, 8, 0, 0})
	CMember(TArray<UAthenaItemShopCarouselTile*>)      Tiles                                                       OFFSET(get<T>, {0x3F0, 16, 0, 0})
	SMember(FTimerHandle)                              TileSeenTimerHandle                                         OFFSET(getStruct<T>, {0x400, 8, 0, 0})
	DMember(int32_t)                                   SelectedItemIndex                                           OFFSET(get<int32_t>, {0x408, 4, 0, 0})
	CMember(UAthenaItemShopCarouselTile*)              NextTileToShow                                              OFFSET(get<T>, {0x410, 8, 0, 0})
	CMember(UAthenaItemShopCarouselTile*)              CurrentTile                                                 OFFSET(get<T>, {0x418, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.AthenaItemShopCarousel.SelectPrevItem
	// void SelectPrevItem();                                                                                                   // [0x90d78a0] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.AthenaItemShopCarousel.SelectNextItem
	// void SelectNextItem();                                                                                                   // [0x90d788c] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.AthenaItemShopCarousel.SelectItemAtIndex
	// void SelectItemAtIndex(int32_t ItemIndex);                                                                               // [0x90d780c] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.AthenaItemShopCarousel.OnTransitionToPreviousTile
	// void OnTransitionToPreviousTile();                                                                                       // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaItemShopCarousel.OnTransitionToNextTile
	// void OnTransitionToNextTile();                                                                                           // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaItemShopCarousel.OnTransitionCompleted
	// void OnTransitionCompleted();                                                                                            // [0x90d72b4] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.AthenaItemShopCarousel.OnSelectionChanged
	// void OnSelectionChanged(bool bInIsSelected);                                                                             // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaItemShopCarousel.OnIntroAnim
	// void OnIntroAnim();                                                                                                      // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaItemShopCarousel.GetSelectedIndex
	// int32_t GetSelectedIndex();                                                                                              // [0x330ff34] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/FortniteUI.AthenaItemShopCarouselTile
/// Size: 0x00F0 (0x0014E0 - 0x0015D0)
class UAthenaItemShopCarouselTile : public UCommonButtonLegacy
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 5584;

public:
	CMember(UCommonTextBlock*)                         Text_Title                                                  OFFSET(get<T>, {0x14E8, 8, 0, 0})
	CMember(UImage*)                                   Image_Background                                            OFFSET(get<T>, {0x14F0, 8, 0, 0})
	CMember(UImage*)                                   Image_Foreground                                            OFFSET(get<T>, {0x14F8, 8, 0, 0})
	CMember(UTexture2D*)                               ExternalMedia                                               OFFSET(get<T>, {0x15B8, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.AthenaItemShopCarouselTile.OnPeekStateChanged
	// void OnPeekStateChanged(bool bIsInPeekState);                                                                            // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaItemShopCarouselTile.OnIntro
	// void OnIntro();                                                                                                          // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaItemShopCarouselTile.OnFadeOutTransitionToPrevious
	// void OnFadeOutTransitionToPrevious();                                                                                    // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaItemShopCarouselTile.OnFadeOutTransitionToNext
	// void OnFadeOutTransitionToNext();                                                                                        // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaItemShopCarouselTile.OnFadeInTransitionToPrevious
	// void OnFadeInTransitionToPrevious();                                                                                     // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaItemShopCarouselTile.OnFadeInTransitionToNext
	// void OnFadeInTransitionToNext();                                                                                         // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaItemShopCarouselTile.OnActiveStateChanged
	// void OnActiveStateChanged(bool bIsSelected);                                                                             // [0x1d9241c] Event|Public|BlueprintEvent 
};

/// Class /Script/FortniteUI.AthenaItemShopConfiguration
/// Size: 0x0150 (0x000030 - 0x000180)
class UAthenaItemShopConfiguration : public UDataAsset
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 384;

public:
	SMember(FString)                                   SubscriptionOfferId                                         OFFSET(getStruct<T>, {0x30, 16, 0, 0})
	SMember(FString)                                   CrewBlingOfferId                                            OFFSET(getStruct<T>, {0x40, 16, 0, 0})
	CMember(TArray<FName>)                             LimitedTimeStorefrontNames                                  OFFSET(get<T>, {0x50, 16, 0, 0})
	SMember(FAthenaItemShopReloadMtxInfo)              ItemShopReloadMtxInfo                                       OFFSET(getStruct<T>, {0x60, 128, 0, 0})
	SMember(FName)                                     BattlePassSectionId                                         OFFSET(getStruct<T>, {0xE0, 4, 0, 0})
	SMember(FName)                                     SubscriptionSectionId                                       OFFSET(getStruct<T>, {0xE4, 4, 0, 0})
	CMember(UCatalogMessaging*)                        TileViolatorTextTable                                       OFFSET(get<T>, {0xE8, 8, 0, 0})
	CMember(TMap<FName, TWeakObjectPtr>)               DynamicBackgrounds                                          OFFSET(get<T>, {0xF0, 80, 0, 0})
	CMember(TWeakObjectPtr<UClass*>)                   SectionWidgetClass                                          OFFSET(get<T>, {0x140, 32, 0, 0})
	CMember(TWeakObjectPtr<UClass*>)                   CarouselWidgetClass                                         OFFSET(get<T>, {0x160, 32, 0, 0})
};

/// Class /Script/FortniteUI.AthenaItemShopOfferDetailsWidgetBase
/// Size: 0x0138 (0x000400 - 0x000538)
class UAthenaItemShopOfferDetailsWidgetBase : public UCommonActivatableWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1336;

public:
	CMember(TArray<UFortStoreFrontOfferInfo*>)         PagedItems                                                  OFFSET(get<T>, {0x448, 16, 0, 0})
	CMember(UFortStoreFrontOfferInfo*)                 OfferData                                                   OFFSET(get<T>, {0x458, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_CosmeticWarning                                        OFFSET(get<T>, {0x460, 8, 0, 0})
	CMember(UCommonTextBlock*)                         TextUndoAvailability                                        OFFSET(get<T>, {0x468, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_UndoBottomBarWarning                                   OFFSET(get<T>, {0x470, 8, 0, 0})
	CMember(UFortCTAButton*)                           Button_Undo                                                 OFFSET(get<T>, {0x478, 8, 0, 0})
	SMember(FDataTableRowHandle)                       UndoAction                                                  OFFSET(getStruct<T>, {0x480, 16, 0, 0})
	CMember(UClass*)                                   PurchaseModalClass                                          OFFSET(get<T>, {0x4C0, 8, 0, 0})
	CMember(TWeakObjectPtr<UClass*>)                   ConfirmPurchaseModalClass                                   OFFSET(get<T>, {0x4C8, 32, 0, 0})
	DMember(bool)                                      bShowRefundWarningWhileMatchmaking                          OFFSET(get<bool>, {0x520, 1, 0, 0})
	DMember(bool)                                      bShowRefundWarningWhileInZone                               OFFSET(get<bool>, {0x521, 1, 0, 0})
	CMember(TArray<FPurchasedItemInfo>)                CachedRefundedItems                                         OFFSET(get<T>, {0x528, 16, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.AthenaItemShopOfferDetailsWidgetBase.ShowReloadMtx
	// void ShowReloadMtx();                                                                                                    // [0x90d9d4c] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.AthenaItemShopOfferDetailsWidgetBase.ShowPurchasedOverlayWidget
	// void ShowPurchasedOverlayWidget(int32_t QuantityPurchased, TArray<FPurchasedItemInfo> PurchasedItems, bool bShowAsRefund, FString OfferId); // [0x90d8fe4] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.AthenaItemShopOfferDetailsWidgetBase.ShowItemPresentationScreen
	// void ShowItemPresentationScreen(TArray<FPurchasedItemInfo>& PurchasedItems);                                             // [0x90d8808] Final|Native|Protected|HasOutParms|BlueprintCallable 
	// Function /Script/FortniteUI.AthenaItemShopOfferDetailsWidgetBase.ShouldHavePurchaseConfirmation
	// bool ShouldHavePurchaseConfirmation();                                                                                   // [0x90d8754] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.AthenaItemShopOfferDetailsWidgetBase.SetParentOffer
	// void SetParentOffer(UFortItemShopOfferVM* InParentOffer);                                                                // [0x1d9241c] Event|Protected|BlueprintCallable|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaItemShopOfferDetailsWidgetBase.SetOffer
	// void SetOffer(UFortStoreFrontOfferInfo* InOfferData);                                                                    // [0x90d83fc] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.AthenaItemShopOfferDetailsWidgetBase.SendShopInteractionAnalytic
	// void SendShopInteractionAnalytic(FString Interaction, float HoldTime);                                                   // [0x90d7988] Final|Native|Protected|BlueprintCallable|Const 
	// Function /Script/FortniteUI.AthenaItemShopOfferDetailsWidgetBase.SendRealMoneyPurchase
	// void SendRealMoneyPurchase(int32_t PriceIndex, int32_t Quantity);                                                        // [0x90d78c8] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.AthenaItemShopOfferDetailsWidgetBase.RefreshUndoState
	// void RefreshUndoState(UFortStoreFrontOfferInfo* OfferPurchased);                                                         // [0x90d75dc] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.AthenaItemShopOfferDetailsWidgetBase.RefreshOfferInfo
	// void RefreshOfferInfo();                                                                                                 // [0x90d75b4] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.AthenaItemShopOfferDetailsWidgetBase.PurchaseOffer
	// void PurchaseOffer(FDelegateProperty& Callback, int32_t Quantity, float HoldTime);                                       // [0x90d7390] Final|Native|Protected|HasOutParms|BlueprintCallable 
	// Function /Script/FortniteUI.AthenaItemShopOfferDetailsWidgetBase.PurchaseAmountRight
	// void PurchaseAmountRight();                                                                                              // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaItemShopOfferDetailsWidgetBase.PurchaseAmountLeft
	// void PurchaseAmountLeft();                                                                                               // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaItemShopOfferDetailsWidgetBase.OnUpdateStatus
	// void OnUpdateStatus();                                                                                                   // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaItemShopOfferDetailsWidgetBase.OnUndoAction
	// void OnUndoAction();                                                                                                     // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaItemShopOfferDetailsWidgetBase.OnSetPaymentLegalText
	// void OnSetPaymentLegalText(FText& LegalText);                                                                            // [0x1d9241c] Event|Protected|HasOutParms|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaItemShopOfferDetailsWidgetBase.OnPurchasingStarted
	// void OnPurchasingStarted();                                                                                              // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaItemShopOfferDetailsWidgetBase.IsReloadMtxEnabled
	// bool IsReloadMtxEnabled();                                                                                               // [0x90d6ae0] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.AthenaItemShopOfferDetailsWidgetBase.IsFocusableButton
	// bool IsFocusableButton(UWidget* InButton);                                                                               // [0x90d6924] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.AthenaItemShopOfferDetailsWidgetBase.HandleUndoAction
	// void HandleUndoAction(float HoldTime);                                                                                   // [0x90d6788] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.AthenaItemShopOfferDetailsWidgetBase.HandleRealMoneyPurchaseComplete
	// void HandleRealMoneyPurchaseComplete(bool bSuccess, TArray<FPurchasedItemInfo>& PurchasedItems);                         // [0x90d6080] Final|Native|Private|HasOutParms 
	// Function /Script/FortniteUI.AthenaItemShopOfferDetailsWidgetBase.HandleGiftingItemPurchaseComplete
	// void HandleGiftingItemPurchaseComplete(bool bSuccess, TArray<FPurchasedItemInfo>& PurchasedItems, FString OfferId);      // [0x90d3b18] Final|Native|Private|HasOutParms 
	// Function /Script/FortniteUI.AthenaItemShopOfferDetailsWidgetBase.HandleCurrentlyViewedAccountInfoChanged
	// void HandleCurrentlyViewedAccountInfoChanged(FFortPublicAccountInfo NewInfo);                                            // [0x90d397c] Final|Native|Protected 
	// Function /Script/FortniteUI.AthenaItemShopOfferDetailsWidgetBase.GetOfferInfoById
	// UFortStoreFrontOfferInfo* GetOfferInfoById(FString OfferId);                                                             // [0x90d2f14] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.AthenaItemShopOfferDetailsWidgetBase.GetOfferInfo
	// UFortStoreFrontOfferInfo* GetOfferInfo();                                                                                // [0x90d2efc] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.AthenaItemShopOfferDetailsWidgetBase.GetNextFocusableButton
	// UWidget* GetNextFocusableButton(TArray<UWidget*> Buttons, int32_t InitialIndex, bool bForwardDirection);                 // [0x90d2dcc] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.AthenaItemShopOfferDetailsWidgetBase.BP_OnSetOffer
	// void BP_OnSetOffer();                                                                                                    // [0x1d9241c] Event|Protected|BlueprintEvent 
};

/// Class /Script/FortniteUI.AthenaItemShopDisplayAssetOfferDetails
/// Size: 0x00B0 (0x000538 - 0x0005E8)
class UAthenaItemShopDisplayAssetOfferDetails : public UAthenaItemShopOfferDetailsWidgetBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1512;

public:
	CMember(UWidget*)                                  ContentPurchaseFocusWidget                                  OFFSET(get<T>, {0x540, 8, 0, 0})
	SMember(FDataTableRowHandle)                       BackAction                                                  OFFSET(getStruct<T>, {0x548, 16, 0, 0})
	SMember(FDataTableRowHandle)                       PurchaseAction                                              OFFSET(getStruct<T>, {0x558, 16, 0, 0})
	SMember(FDataTableRowHandle)                       VBuckAction                                                 OFFSET(getStruct<T>, {0x568, 16, 0, 0})
	SMember(FDataTableRowHandle)                       ReloadMtxAction                                             OFFSET(getStruct<T>, {0x578, 16, 0, 0})
	SMember(FDataTableRowHandle)                       LegalTextAction                                             OFFSET(getStruct<T>, {0x588, 16, 0, 0})
	CMember(UClass*)                                   ItemInspectScreenClass                                      OFFSET(get<T>, {0x598, 8, 0, 0})
	CMember(UFortCTAButton*)                           Button_Purchase                                             OFFSET(get<T>, {0x5A0, 8, 0, 0})
	CMember(UFortCTAButton*)                           Button_SendGift                                             OFFSET(get<T>, {0x5A8, 8, 0, 0})
	CMember(UFortCTAButton*)                           Button_Inspect                                              OFFSET(get<T>, {0x5B0, 8, 0, 0})
	CMember(UCommonButtonBase*)                        Button_CloseTouch                                           OFFSET(get<T>, {0x5B8, 8, 0, 0})
	CMember(UCommonButtonBase*)                        Button_MTX                                                  OFFSET(get<T>, {0x5C0, 8, 0, 0})
	CMember(UWidget*)                                  Container_SimpleMTXDisplay                                  OFFSET(get<T>, {0x5C8, 8, 0, 0})
	CMember(UScrollBox*)                               ScrollBox_Details                                           OFFSET(get<T>, {0x5D0, 8, 0, 0})
	SMember(FPrimaryContentSetup)                      PrimaryContentSetup                                         OFFSET(getStruct<T>, {0x5E4, 3, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.AthenaItemShopDisplayAssetOfferDetails.UpdatePurchaseBlocked
	// void UpdatePurchaseBlocked(bool bIsBlocked, FText& PurchaseNotAllowedReason);                                            // [0x1d9241c] Event|Protected|HasOutParms|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaItemShopDisplayAssetOfferDetails.ShowPurchasedOverlay
	// void ShowPurchasedOverlay(int32_t QuantityPurchased, TArray<FPurchasedItemInfo>& PurchasedItems, FString OfferId);       // [0x1d9241c] Event|Protected|HasOutParms|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaItemShopDisplayAssetOfferDetails.ShowPurchaseConfirmation
	// void ShowPurchaseConfirmation();                                                                                         // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaItemShopDisplayAssetOfferDetails.ShowLegalTextInPopup
	// void ShowLegalTextInPopup(FText& ItemName, FText& LegalText);                                                            // [0x90d8ec8] Final|Native|Private|HasOutParms|BlueprintCallable 
	// Function /Script/FortniteUI.AthenaItemShopDisplayAssetOfferDetails.SetVBuckActionOnPurchaseButton
	// void SetVBuckActionOnPurchaseButton();                                                                                   // [0x90d857c] Final|Native|Private|BlueprintCallable 
	// Function /Script/FortniteUI.AthenaItemShopDisplayAssetOfferDetails.SetPurchaseActionOnPurchaseButton
	// void SetPurchaseActionOnPurchaseButton();                                                                                // [0x90d847c] Final|Native|Private|BlueprintCallable 
	// Function /Script/FortniteUI.AthenaItemShopDisplayAssetOfferDetails.SetMtxButtonVisible
	// void SetMtxButtonVisible(bool bVisible);                                                                                 // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaItemShopDisplayAssetOfferDetails.SetCanPurchase
	// void SetCanPurchase(bool bInCanPurchase);                                                                                // [0x90d80e8] Final|Native|Private|BlueprintCallable 
	// Function /Script/FortniteUI.AthenaItemShopDisplayAssetOfferDetails.SendGift
	// void SendGift();                                                                                                         // [0x90d78b4] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.AthenaItemShopDisplayAssetOfferDetails.ResetPurchaseButtonText
	// void ResetPurchaseButtonText();                                                                                          // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaItemShopDisplayAssetOfferDetails.RequestMtxPurchase
	// void RequestMtxPurchase();                                                                                               // [0x90d77a8] Final|Native|Private|BlueprintCallable 
	// Function /Script/FortniteUI.AthenaItemShopDisplayAssetOfferDetails.OnSendGiftComplete
	// void OnSendGiftComplete(bool bSuccess);                                                                                  // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaItemShopDisplayAssetOfferDetails.IsGiftable
	// bool IsGiftable();                                                                                                       // [0x90d69a4] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.AthenaItemShopDisplayAssetOfferDetails.HandleMtxPurchaseComplete
	// void HandleMtxPurchaseComplete(bool bSuccess, TArray<FPurchasedItemInfo>& PurchasedItems, FString OfferId);              // [0x90d5084] Final|Native|Private|HasOutParms 
	// Function /Script/FortniteUI.AthenaItemShopDisplayAssetOfferDetails.HandleLegalTextAction
	// void HandleLegalTextAction();                                                                                            // [0x90d4f0c] Final|Native|Private 
	// Function /Script/FortniteUI.AthenaItemShopDisplayAssetOfferDetails.HandleItemPurchaseComplete
	// void HandleItemPurchaseComplete(bool bSuccess, TArray<FPurchasedItemInfo>& PurchasedItems, FString OfferId);             // [0x90d4668] Final|Native|Private|HasOutParms 
	// Function /Script/FortniteUI.AthenaItemShopDisplayAssetOfferDetails.HandleInputMethodChanged
	// void HandleInputMethodChanged(ECommonInputType CommonInput);                                                             // [0x90d433c] Final|Native|Private 
	// Function /Script/FortniteUI.AthenaItemShopDisplayAssetOfferDetails.HandleBackAction
	// void HandleBackAction();                                                                                                 // [0x34111d4] Final|Native|Private 
	// Function /Script/FortniteUI.AthenaItemShopDisplayAssetOfferDetails.GetSalePriceFromLastAppStore
	// bool GetSalePriceFromLastAppStore(int32_t PriceIndex, FText& SalePrice, int32_t ItemQuantity);                           // [0x90d35f8] Final|Native|Protected|HasOutParms|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.AthenaItemShopDisplayAssetOfferDetails.GetFirstFocusableButton
	// UWidget* GetFirstFocusableButton();                                                                                      // [0x90d2d8c] Final|Native|Private|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.AthenaItemShopDisplayAssetOfferDetails.DeclineMtxPurchase
	// void DeclineMtxPurchase();                                                                                               // [0x90d2ad4] Final|Native|Private|BlueprintCallable 
	// Function /Script/FortniteUI.AthenaItemShopDisplayAssetOfferDetails.ClearActionOnPurchaseButton
	// void ClearActionOnPurchaseButton();                                                                                      // [0x90d2a8c] Final|Native|Private|BlueprintCallable 
};

/// Class /Script/FortniteUI.AthenaItemShopNavigationButton
/// Size: 0x0010 (0x0014E0 - 0x0014F0)
class UAthenaItemShopNavigationButton : public UCommonButtonLegacy
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 5360;

public:
	CMember(UCommonTextBlock*)                         Text_Section                                                OFFSET(get<T>, {0x14E8, 8, 0, 0})
};

/// Class /Script/FortniteUI.AthenaItemShopOfferDetailsPreviewWidget
/// Size: 0x00E0 (0x000538 - 0x000618)
class UAthenaItemShopOfferDetailsPreviewWidget : public UAthenaItemShopOfferDetailsWidgetBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1560;

public:
	SMember(FDataTableRowHandle)                       BackAction                                                  OFFSET(getStruct<T>, {0x538, 16, 0, 0})
	DMember(int32_t)                                   VariantIndex                                                OFFSET(get<int32_t>, {0x548, 4, 0, 0})
	CMember(UFortItemPreviewScreen*)                   ItemPreview_Widget                                          OFFSET(get<T>, {0x550, 8, 0, 0})
	CMember(UFortItemBaseWidget*)                      Item_InfoHeader                                             OFFSET(get<T>, {0x558, 8, 0, 0})
	CMember(UAthenaCosmeticUnlockingInfo*)             UnlockingInfo                                               OFFSET(get<T>, {0x560, 8, 0, 0})
	DMember(float)                                     TimeBetweenVariantsRestart                                  OFFSET(get<float>, {0x578, 4, 0, 0})
	DMember(float)                                     TimeBetweenVariants                                         OFFSET(get<float>, {0x57C, 4, 0, 0})
	CMember(UFortItem*)                                ItemToRepresent                                             OFFSET(get<T>, {0x5C0, 8, 0, 0})
	CMember(TArray<FFortCosmeticVariantPreview>)       CachedVariantPreviews                                       OFFSET(get<T>, {0x5C8, 16, 0, 0})
	SMember(FUnlockableVariantPreviewInfo)             VariantPreviewInfo                                          OFFSET(getStruct<T>, {0x5D8, 40, 0, 0})
	CMember(UAthenaItemShopOfferInspectionNavigator*)  OfferNavigator_ArrowNavigation                              OFFSET(get<T>, {0x600, 8, 0, 0})
	CMember(UFortStoreSkinDetailsPopup*)               StorePopup_Details                                          OFFSET(get<T>, {0x608, 8, 0, 0})
	CMember(UFortCTAButton*)                           Button_Gift                                                 OFFSET(get<T>, {0x610, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.AthenaItemShopOfferDetailsPreviewWidget.UpdateSwipeButtonsVisibility
	// void UpdateSwipeButtonsVisibility();                                                                                     // [0x90d9e00] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.AthenaItemShopOfferDetailsPreviewWidget.UpdatePreviewFromOffer
	// void UpdatePreviewFromOffer();                                                                                           // [0x90d9dec] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.AthenaItemShopOfferDetailsPreviewWidget.TryDismiss
	// void TryDismiss();                                                                                                       // [0x90d9db8] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.AthenaItemShopOfferDetailsPreviewWidget.TriggerPurchaseChoiceRequest
	// void TriggerPurchaseChoiceRequest();                                                                                     // [0x90d9d60] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.AthenaItemShopOfferDetailsPreviewWidget.ShowItemFromItemReward
	// void ShowItemFromItemReward(UFortAthenaReward* InItemReward);                                                            // [0x90d8778] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.AthenaItemShopOfferDetailsPreviewWidget.ShouldDisplayOfferPurchasedOverlay
	// bool ShouldDisplayOfferPurchasedOverlay();                                                                               // [0x90d86fc] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.AthenaItemShopOfferDetailsPreviewWidget.SetupNavigationForSection
	// void SetupNavigationForSection(UAthenaItemShopSection* SectionToNavigate);                                               // [0x90d85fc] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.AthenaItemShopOfferDetailsPreviewWidget.SetItemToRepresent
	// void SetItemToRepresent(UFortItem* InItemToRepresent);                                                                   // [0x90d837c] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.AthenaItemShopOfferDetailsPreviewWidget.SetIsPurchasing
	// void SetIsPurchasing(bool bInIsPurchasing);                                                                              // [0x90d82fc] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.AthenaItemShopOfferDetailsPreviewWidget.RegisterItemRewardInteraction
	// void RegisterItemRewardInteraction(UFortAthenaReward* InItemReward);                                                     // [0x90d76f0] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.AthenaItemShopOfferDetailsPreviewWidget.RefreshFocus
	// void RefreshFocus();                                                                                                     // [0x90d7578] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.AthenaItemShopOfferDetailsPreviewWidget.OnVariantPreviewInfoUpdated
	// void OnVariantPreviewInfoUpdated();                                                                                      // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaItemShopOfferDetailsPreviewWidget.OnUpdateItemRestrictionCallout
	// void OnUpdateItemRestrictionCallout(bool bShouldShow, FText& RestrictionText);                                           // [0x1d9241c] Event|Protected|HasOutParms|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaItemShopOfferDetailsPreviewWidget.IsSingleItemEquipped
	// bool IsSingleItemEquipped();                                                                                             // [0x90d6b04] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.AthenaItemShopOfferDetailsPreviewWidget.IsMultiplePriceRealMoneyOffer
	// bool IsMultiplePriceRealMoneyOffer();                                                                                    // [0x90d6abc] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.AthenaItemShopOfferDetailsPreviewWidget.HandleItemShown
	// void HandleItemShown(UFortAccountItemDefinition* AccountItemDef);                                                        // [0x90d4e8c] Final|Native|Protected 
	// Function /Script/FortniteUI.AthenaItemShopOfferDetailsPreviewWidget.HandleInputMethodChanged
	// void HandleInputMethodChanged(ECommonInputType InputType);                                                               // [0x90d43b8] Final|Native|Protected 
	// Function /Script/FortniteUI.AthenaItemShopOfferDetailsPreviewWidget.HandleGetVBucksClicked
	// void HandleGetVBucksClicked();                                                                                           // [0x90d3b04] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.AthenaItemShopOfferDetailsPreviewWidget.HandleBackAction
	// void HandleBackAction();                                                                                                 // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaItemShopOfferDetailsPreviewWidget.GetVariantPreviewInfo
	// FUnlockableVariantPreviewInfo GetVariantPreviewInfo();                                                                   // [0x90d3910] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.AthenaItemShopOfferDetailsPreviewWidget.GetSalePriceFromLastAppStore
	// bool GetSalePriceFromLastAppStore(int32_t PriceIndex, FText& SalePrice, int32_t ItemQuantity);                           // [0x90d3784] Final|Native|Protected|HasOutParms|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.AthenaItemShopOfferDetailsPreviewWidget.FocusOnWidget
	// void FocusOnWidget(UWidget* WidgetToFocus);                                                                              // [0x90d2c78] Final|Native|Protected|BlueprintCallable 
};

/// Class /Script/FortniteUI.FortStoreFrontOfferInfo
/// Size: 0x0038 (0x000028 - 0x000060)
class UFortStoreFrontOfferInfo : public UObject
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 96;

public:
	CMember(UFortMtxOfferData*)                        OfferDisplayAsset                                           OFFSET(get<T>, {0x40, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortStoreFrontOfferInfo.WasPrerollItemSeen
	// bool WasPrerollItemSeen();                                                                                               // [0x9649b0c] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortStoreFrontOfferInfo.OfferHasDenyRequirements
	// bool OfferHasDenyRequirements();                                                                                         // [0x96418a0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortStoreFrontOfferInfo.MarkPrerollAsSeen
	// void MarkPrerollAsSeen();                                                                                                // [0x964181c] Final|Native|Public|BlueprintCallable|Const 
	// Function /Script/FortniteUI.FortStoreFrontOfferInfo.IsVotingOffer
	// bool IsVotingOffer();                                                                                                    // [0x9641750] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortStoreFrontOfferInfo.IsValidOffer
	// bool IsValidOffer();                                                                                                     // [0x964172c] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortStoreFrontOfferInfo.IsUnique
	// bool IsUnique();                                                                                                         // [0x9641708] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortStoreFrontOfferInfo.IsSubscriptionOffer
	// bool IsSubscriptionOffer();                                                                                              // [0x96416e4] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortStoreFrontOfferInfo.IsRefundable
	// bool IsRefundable();                                                                                                     // [0x96415bc] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortStoreFrontOfferInfo.IsPurchasingAvailable
	// bool IsPurchasingAvailable();                                                                                            // [0x9641598] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortStoreFrontOfferInfo.IsPriceInRealMoney
	// bool IsPriceInRealMoney(int32_t PriceIndex);                                                                             // [0x964150c] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortStoreFrontOfferInfo.IsPriceInMTX
	// bool IsPriceInMTX(int32_t PriceIndex);                                                                                   // [0x9641480] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortStoreFrontOfferInfo.IsPriceInGameItems
	// bool IsPriceInGameItems(int32_t PriceIndex);                                                                             // [0x96413f4] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortStoreFrontOfferInfo.IsPrerollOffer
	// bool IsPrerollOffer();                                                                                                   // [0x9641340] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortStoreFrontOfferInfo.IsOfferOwned
	// bool IsOfferOwned();                                                                                                     // [0x96412e0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortStoreFrontOfferInfo.IsNoPreviewOffer
	// bool IsNoPreviewOffer();                                                                                                 // [0x96412bc] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortStoreFrontOfferInfo.IsLockedByRequirement
	// bool IsLockedByRequirement();                                                                                            // [0x9641298] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortStoreFrontOfferInfo.IsItemMissingFromInventory
	// bool IsItemMissingFromInventory(UFortItem* ItemToCheck);                                                                 // [0x9641124] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortStoreFrontOfferInfo.IsItemMissingFromCollectionBook
	// bool IsItemMissingFromCollectionBook(UFortItem* ItemToCheck);                                                            // [0x9641034] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortStoreFrontOfferInfo.isItemGrantUnique
	// bool isItemGrantUnique(FString TemplateId);                                                                              // [0x9649b30] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortStoreFrontOfferInfo.IsItemDefOwned
	// bool IsItemDefOwned(UFortItemDefinition* ItemDef);                                                                       // [0x9640eac] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortStoreFrontOfferInfo.IsGridLayout
	// bool IsGridLayout();                                                                                                     // [0x9640e4c] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortStoreFrontOfferInfo.IsGiftOnly
	// bool IsGiftOnly();                                                                                                       // [0x9640dc4] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortStoreFrontOfferInfo.IsGiftLimitIgnored
	// bool IsGiftLimitIgnored();                                                                                               // [0x9640d64] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortStoreFrontOfferInfo.IsGiftingStorefrontOffer
	// bool IsGiftingStorefrontOffer();                                                                                         // [0x9640e28] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortStoreFrontOfferInfo.IsGiftable
	// bool IsGiftable();                                                                                                       // [0x9640e0c] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortStoreFrontOfferInfo.IsFriendTimeRequirementIgnored
	// bool IsFriendTimeRequirementIgnored();                                                                                   // [0x9640d04] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortStoreFrontOfferInfo.IsExclusive
	// bool IsExclusive();                                                                                                      // [0x9640b34] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortStoreFrontOfferInfo.IsEmoteBuiltInToOwnedGrantedItem
	// bool IsEmoteBuiltInToOwnedGrantedItem(UFortMontageItemDefinitionBase* BuiltInEmote);                                     // [0x9640a80] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortStoreFrontOfferInfo.IsCurrencyVoucher
	// bool IsCurrencyVoucher();                                                                                                // [0x9640a5c] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortStoreFrontOfferInfo.IsCrewBlingOffer
	// bool IsCrewBlingOffer();                                                                                                 // [0x9640a38] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortStoreFrontOfferInfo.IsCardpack
	// bool IsCardpack();                                                                                                       // [0x5a03588] Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortStoreFrontOfferInfo.IsBattlePassLevelBundle
	// bool IsBattlePassLevelBundle();                                                                                          // [0x9640a14] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortStoreFrontOfferInfo.HasRequirement
	// bool HasRequirement(FText& RequirementText);                                                                             // [0x96408cc] Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortStoreFrontOfferInfo.HasMaxLevel
	// bool HasMaxLevel(int32_t& MaxLevel);                                                                                     // [0x96407a0] Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortStoreFrontOfferInfo.HasDisplayAsset
	// bool HasDisplayAsset();                                                                                                  // [0x5999cb4] Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortStoreFrontOfferInfo.HasCatalogOfferName
	// bool HasCatalogOfferName(FText& CatalogOfferName);                                                                       // [0x96406f0] Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortStoreFrontOfferInfo.GetTotalQuantity
	// int32_t GetTotalQuantity();                                                                                              // [0x963d24c] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortStoreFrontOfferInfo.GetStorefrontName
	// FName GetStorefrontName();                                                                                               // [0x5c36510] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortStoreFrontOfferInfo.GetSortPriority
	// int32_t GetSortPriority();                                                                                               // [0x963d1f0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortStoreFrontOfferInfo.GetShortName
	// FText GetShortName();                                                                                                    // [0x597b8c0] Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortStoreFrontOfferInfo.GetShortDescription
	// FText GetShortDescription();                                                                                             // [0x963d1a8] Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortStoreFrontOfferInfo.GetSaleType
	// TEnumAsByte<ECatalogSaleType> GetSaleType(int32_t PriceIndex);                                                           // [0x963c370] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortStoreFrontOfferInfo.GetSaleText
	// FText GetSaleText(int32_t PriceIndex, int32_t ItemQuantity);                                                             // [0x963c28c] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortStoreFrontOfferInfo.GetSalePrice
	// bool GetSalePrice(int32_t PriceIndex, FText& SalePrice, int32_t ItemQuantity);                                           // [0x963bde8] Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortStoreFrontOfferInfo.GetRequirementTypeAtIndex
	// ECatalogRequirementType GetRequirementTypeAtIndex(int32_t RequirementIndex);                                             // [0x963bd44] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortStoreFrontOfferInfo.GetRequirementMinQuantityAtIndex
	// int32_t GetRequirementMinQuantityAtIndex(int32_t RequirementIndex);                                                      // [0x963bca0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortStoreFrontOfferInfo.GetRequirementIdAtIndex
	// FString GetRequirementIdAtIndex(int32_t RequirementIndex);                                                               // [0x963b5dc] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortStoreFrontOfferInfo.GetRegularPrice
	// FText GetRegularPrice(int32_t PriceIndex, int32_t ItemQuantity);                                                         // [0x963b4f8] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortStoreFrontOfferInfo.GetQuantityRemaining
	// int32_t GetQuantityRemaining();                                                                                          // [0x963b4d4] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortStoreFrontOfferInfo.GetPriceItem
	// UFortAccountItemDefinition* GetPriceItem(int32_t PriceIndex, int32_t& RequiredItemCount);                                // [0x963b3b0] Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortStoreFrontOfferInfo.GetPriceCurrencyType
	// TEnumAsByte<EStoreCurrencyType> GetPriceCurrencyType(int32_t PriceIndex);                                                // [0x963b2c0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortStoreFrontOfferInfo.GetPrerollRarity
	// int32_t GetPrerollRarity();                                                                                              // [0x963b29c] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortStoreFrontOfferInfo.GetPrerollOfferItem
	// bool GetPrerollOfferItem(FFortItemQuantityPair& ItemQuantityPair);                                                       // [0x963b200] Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortStoreFrontOfferInfo.GetOfferType
	// ECatalogOfferType GetOfferType();                                                                                        // [0x963b1e8] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortStoreFrontOfferInfo.GetOfferId
	// FString GetOfferId();                                                                                                    // [0x963aae0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortStoreFrontOfferInfo.GetOfferDisplaySize
	// EFortMtxOfferDisplaySize GetOfferDisplaySize();                                                                          // [0x963aabc] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortStoreFrontOfferInfo.GetOfferDisplayAsset
	// UFortMtxOfferData* GetOfferDisplayAsset();                                                                               // [0x570a52c] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortStoreFrontOfferInfo.GetOffer
	// FCatalogOffer GetOffer();                                                                                                // [0x963aa9c] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortStoreFrontOfferInfo.GetNumRequirements
	// int32_t GetNumRequirements();                                                                                            // [0x963a9f4] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortStoreFrontOfferInfo.GetNumGrantedItems
	// int32_t GetNumGrantedItems();                                                                                            // [0x963a9d0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortStoreFrontOfferInfo.GetNumericPrice
	// int32_t GetNumericPrice(int32_t PriceIndex);                                                                             // [0x963aa10] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortStoreFrontOfferInfo.GetName
	// FText GetName();                                                                                                         // [0x963a964] Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortStoreFrontOfferInfo.GetMetaValue
	// FString GetMetaValue(FString MetaTag);                                                                                   // [0x963a2b4] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortStoreFrontOfferInfo.GetMetaAsBool
	// bool GetMetaAsBool(FString MetaTag);                                                                                     // [0x9639c04] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortStoreFrontOfferInfo.GetMaxConcurrentPurchases
	// int32_t GetMaxConcurrentPurchases();                                                                                     // [0x9639b90] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortStoreFrontOfferInfo.GetItemTypeText
	// FText GetItemTypeText();                                                                                                 // [0x9639a70] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortStoreFrontOfferInfo.GetItemQuantity
	// int32_t GetItemQuantity(FString TemplateId);                                                                             // [0x96393c0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortStoreFrontOfferInfo.GetItemOfferCount
	// int32_t GetItemOfferCount(FString TemplateId);                                                                           // [0x9638d10] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortStoreFrontOfferInfo.GetGrantedItems
	// void GetGrantedItems(TArray<UFortItem*>& Items, bool bSortItems);                                                        // [0x9638b4c] Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortStoreFrontOfferInfo.GetGrantedItemQuantityPairs
	// void GetGrantedItemQuantityPairs(bool bPrioritizeUnowned, bool bCombineCurrencyItems, TArray<FFortItemQuantityPair>& ItemQuantityPairs); // [0x9638a1c] Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortStoreFrontOfferInfo.GetGrantedItemQuantityPair
	// bool GetGrantedItemQuantityPair(int32_t GrantedItemIndex, FFortItemQuantityPair& ItemQuantity);                          // [0x963893c] Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortStoreFrontOfferInfo.GetGrantedItemQuantity
	// int32_t GetGrantedItemQuantity(int32_t GrantedItemIndex);                                                                // [0x96388b0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortStoreFrontOfferInfo.GetGrantedItemDefinitions
	// void GetGrantedItemDefinitions(TArray<UFortAccountItemDefinition*>& GrantedItems);                                       // [0x96381f0] Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortStoreFrontOfferInfo.GetGrantedItemDefinition
	// UFortAccountItemDefinition* GetGrantedItemDefinition(int32_t GrantedItemIndex);                                          // [0x9638164] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortStoreFrontOfferInfo.GetFortStoreOfferType
	// EFortMtxStoreOfferType GetFortStoreOfferType();                                                                          // [0x9638140] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortStoreFrontOfferInfo.GetFortStoreOfferFinalPrice
	// int32_t GetFortStoreOfferFinalPrice();                                                                                   // [0x9638120] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortStoreFrontOfferInfo.GetFortStoreOfferCategory
	// FString GetFortStoreOfferCategory();                                                                                     // [0x96380e0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortStoreFrontOfferInfo.GetForcedGiftBoxTemplateId
	// FString GetForcedGiftBoxTemplateId();                                                                                    // [0x96380a0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortStoreFrontOfferInfo.GetFirstGrantQuantity
	// int32_t GetFirstGrantQuantity();                                                                                         // [0x9637ff0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortStoreFrontOfferInfo.GetFirstGrantItemDefinition
	// UFortAccountItemDefinition* GetFirstGrantItemDefinition();                                                               // [0x9637fcc] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortStoreFrontOfferInfo.GetFinalPrice
	// FText GetFinalPrice(int32_t PriceIndex, int32_t ItemQuantity);                                                           // [0x9637ee8] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortStoreFrontOfferInfo.GetDynamicBundleItems
	// void GetDynamicBundleItems(TArray<FBundledItemInfo>& Items);                                                             // [0x9636b80] Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortStoreFrontOfferInfo.GetDisplayAssetPath
	// FString GetDisplayAssetPath();                                                                                           // [0x9636828] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortStoreFrontOfferInfo.GetDescription
	// FText GetDescription();                                                                                                  // [0x96366dc] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortStoreFrontOfferInfo.GetCurrencyItemDefinition
	// UFortAccountItemDefinition* GetCurrencyItemDefinition();                                                                 // [0x9636424] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortStoreFrontOfferInfo.GetCategoryText
	// FText GetCategoryText();                                                                                                 // [0x96363e0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortStoreFrontOfferInfo.GetBonusQuantity
	// int32_t GetBonusQuantity();                                                                                              // [0x96363bc] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortStoreFrontOfferInfo.GetBaseQuantity
	// int32_t GetBaseQuantity();                                                                                               // [0x9636374] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortStoreFrontOfferInfo.GetBannerOverrideTag
	// FString GetBannerOverrideTag();                                                                                          // [0x96362fc] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortStoreFrontOfferInfo.GetAppStoreByPrice
	// EAppStore GetAppStoreByPrice(int32_t PriceIndex, int32_t ItemQuantity);                                                  // [0x9636240] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortStoreFrontOfferInfo.CreatePreviewItem
	// UFortAccountItem* CreatePreviewItem();                                                                                   // [0x9635770] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortStoreFrontOfferInfo.CanShowRegularPrice
	// bool CanShowRegularPrice(int32_t PriceIndex);                                                                            // [0x9634e84] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortStoreFrontOfferInfo.AreGrantedItemsOwned
	// bool AreGrantedItemsOwned();                                                                                             // [0x9634e08] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/FortniteUI.AthenaItemShopOfferInfo
/// Size: 0x0040 (0x000060 - 0x0000A0)
class UAthenaItemShopOfferInfo : public UFortStoreFrontOfferInfo
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 160;

public:
	CMember(UAthenaItemShopOfferDisplayData*)          ItemShopDisplayAsset                                        OFFSET(get<T>, {0x70, 8, 0, 0})
};

/// Class /Script/FortniteUI.AthenaItemShopOfferInspectionNavigator
/// Size: 0x0030 (0x000400 - 0x000430)
class UAthenaItemShopOfferInspectionNavigator : public UCommonActivatableWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1072;

public:
	CMember(UCommonActivatableWidget*)                 OwningOfferInspectionWidget                                 OFFSET(get<T>, {0x418, 8, 0, 0})
	CMember(UCommonButtonLegacy*)                      Button_Next                                                 OFFSET(get<T>, {0x420, 8, 0, 0})
	CMember(UCommonButtonLegacy*)                      Button_Previous                                             OFFSET(get<T>, {0x428, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.AthenaItemShopOfferInspectionNavigator.SetArrowsEnabled
	// void SetArrowsEnabled(bool bEnabled);                                                                                    // [0x90d8068] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.AthenaItemShopOfferInspectionNavigator.RequestPreviousOffer
	// void RequestPreviousOffer();                                                                                             // [0x90d77e4] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.AthenaItemShopOfferInspectionNavigator.RequestNextOffer
	// void RequestNextOffer();                                                                                                 // [0x90d77bc] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/FortniteUI.AthenaItemShopOfferItemDetailsScreen
/// Size: 0x0058 (0x000538 - 0x000590)
class UAthenaItemShopOfferItemDetailsScreen : public UAthenaItemShopOfferDetailsWidgetBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1424;

public:
	SMember(FDataTableRowHandle)                       BackAction                                                  OFFSET(getStruct<T>, {0x538, 16, 0, 0})
	CMember(UFortItemDefinition*)                      TriggeringItemDefinition                                    OFFSET(get<T>, {0x548, 8, 0, 0})
	DMember(int32_t)                                   VariantIndex                                                OFFSET(get<int32_t>, {0x550, 4, 0, 0})
	CMember(UFortItemPreviewScreen*)                   ItemPreview_Widget                                          OFFSET(get<T>, {0x558, 8, 0, 0})
	CMember(TWeakObjectPtr<UClass*>)                   LockerConfirmationModalClass                                OFFSET(get<T>, {0x560, 32, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.AthenaItemShopOfferItemDetailsScreen.OnItemEquipped
	// void OnItemEquipped(bool bSuccess);                                                                                      // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaItemShopOfferItemDetailsScreen.IsItemEquipped
	// bool IsItemEquipped();                                                                                                   // [0x90d69c8] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.AthenaItemShopOfferItemDetailsScreen.EquipItem
	// void EquipItem();                                                                                                        // [0x90d2c50] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.AthenaItemShopOfferItemDetailsScreen.Dismiss
	// void Dismiss();                                                                                                          // [0x90d2b58] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.AthenaItemShopOfferItemDetailsScreen.CanEquipItem
	// bool CanEquipItem();                                                                                                     // [0x90d2a18] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/FortniteUI.AthenaItemShopOfferStyleScreen
/// Size: 0x00B8 (0x000538 - 0x0005F0)
class UAthenaItemShopOfferStyleScreen : public UAthenaItemShopOfferDetailsWidgetBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1520;

public:
	SMember(FDataTableRowHandle)                       BackAction                                                  OFFSET(getStruct<T>, {0x538, 16, 0, 0})
	CMember(UFortItemPreviewScreen*)                   ItemPreview_Widget                                          OFFSET(get<T>, {0x548, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_StyleDisclaimer                                        OFFSET(get<T>, {0x550, 8, 0, 0})
	CMember(UFortVariantPicker*)                       Picker_VariantSelector                                      OFFSET(get<T>, {0x558, 8, 0, 0})
	CMember(UCommonButtonBase*)                        Button_Previous                                             OFFSET(get<T>, {0x560, 8, 0, 0})
	CMember(UCommonButtonBase*)                        Button_Next                                                 OFFSET(get<T>, {0x568, 8, 0, 0})
	CMember(UCommonButtonBase*)                        Button_BackTouch                                            OFFSET(get<T>, {0x570, 8, 0, 0})
	CMember(UAthenaCosmeticUnlockingInfo*)             Info_LockedNotification                                     OFFSET(get<T>, {0x578, 8, 0, 0})
	CMember(UFortItemDefinition*)                      TriggeringItemDefinition                                    OFFSET(get<T>, {0x580, 8, 0, 0})
	CMember(TWeakObjectPtr<UClass*>)                   LockerConfirmationModalClass                                OFFSET(get<T>, {0x588, 32, 0, 0})
	DMember(bool)                                      bVariantZoomUsesSnap                                        OFFSET(get<bool>, {0x5A8, 1, 0, 0})
	SMember(FDisplayManagerVariantData)                VariantData                                                 OFFSET(getStruct<T>, {0x5B0, 24, 0, 0})
	CMember(TArray<int32_t>)                           OfferIndicesWithVariants                                    OFFSET(get<T>, {0x5C8, 16, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.AthenaItemShopOfferStyleScreen.SetTriggeringItemDefinition
	// void SetTriggeringItemDefinition(UFortItemDefinition* TriggeringItemDef);                                                // [0x90d84fc] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.AthenaItemShopOfferStyleScreen.OnPreviewUpdated
	// void OnPreviewUpdated();                                                                                                 // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaItemShopOfferStyleScreen.OnItemEquipped
	// void OnItemEquipped(bool bSuccess);                                                                                      // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaItemShopOfferStyleScreen.IsItemEquipped
	// bool IsItemEquipped();                                                                                                   // [0x90d69ec] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.AthenaItemShopOfferStyleScreen.HandleInputMethodChanged
	// void HandleInputMethodChanged(ECommonInputType InputType);                                                               // [0x90d4434] Final|Native|Protected 
	// Function /Script/FortniteUI.AthenaItemShopOfferStyleScreen.EquipItem
	// void EquipItem();                                                                                                        // [0x90d2c64] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.AthenaItemShopOfferStyleScreen.Dismiss
	// void Dismiss();                                                                                                          // [0x90d2b6c] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.AthenaItemShopOfferStyleScreen.CanEquipItem
	// bool CanEquipItem();                                                                                                     // [0x90d2a48] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/FortniteUI.AthenaItemShopPurchaseOverlayModal
/// Size: 0x0030 (0x000538 - 0x000568)
class UAthenaItemShopPurchaseOverlayModal : public UAthenaItemShopOfferDetailsWidgetBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1384;

public:
	CMember(TArray<FPurchasedItemInfo>)                PurchasedItems                                              OFFSET(get<T>, {0x540, 16, 0, 0})
	CMember(UHorizontalBox*)                           HBox_SuccessfullyPurchased                                  OFFSET(get<T>, {0x558, 8, 0, 0})
	CMember(UHorizontalBox*)                           HBox_SuccessfullyRefunded                                   OFFSET(get<T>, {0x560, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.AthenaItemShopPurchaseOverlayModal.ShouldShowAsRefund
	// bool ShouldShowAsRefund();                                                                                               // [0x5914d78] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.AthenaItemShopPurchaseOverlayModal.IsLastItem
	// bool IsLastItem(int32_t ItemIndex);                                                                                      // [0x90d6a30] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.AthenaItemShopPurchaseOverlayModal.InitBundleLayout
	// void InitBundleLayout();                                                                                                 // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaItemShopPurchaseOverlayModal.HasMultipleItems
	// bool HasMultipleItems();                                                                                                 // [0x90d6908] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.AthenaItemShopPurchaseOverlayModal.GetQuantityPurchased
	// int32_t GetQuantityPurchased();                                                                                          // [0x90d35e0] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.AthenaItemShopPurchaseOverlayModal.GetPurchasedItems
	// TArray<FPurchasedItemInfo> GetPurchasedItems();                                                                          // [0x90d35c4] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.AthenaItemShopPurchaseOverlayModal.Dismiss
	// void Dismiss();                                                                                                          // [0x90d2b80] Final|Native|Protected|BlueprintCallable 
};

/// Class /Script/FortniteUI.FortTextButton
/// Size: 0x00A0 (0x0014E0 - 0x001580)
class UFortTextButton : public UCommonButtonLegacy
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 5504;

public:
	SMember(FText)                                     DefaultText                                                 OFFSET(getStruct<T>, {0x14E0, 24, 0, 0})
	DMember(bool)                                      bUseAllCaps                                                 OFFSET(get<bool>, {0x14F8, 1, 0, 0})
	DMember(bool)                                      bOverrideFont                                               OFFSET(get<bool>, {0x14F9, 1, 0, 0})
	SMember(FSlateFontInfo)                            Font                                                        OFFSET(getStruct<T>, {0x1500, 88, 0, 0})
	SMember(FSlateColor)                               FontColor                                                   OFFSET(getStruct<T>, {0x1558, 20, 0, 0})
	CMember(UCommonTextBlock*)                         Text_Content                                                OFFSET(get<T>, {0x1570, 8, 0, 0})
};

/// Class /Script/FortniteUI.AthenaItemShopRefreshTimerButton
/// Size: 0x0000 (0x001580 - 0x001580)
class UAthenaItemShopRefreshTimerButton : public UFortTextButton
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 5504;

public:
};

/// Class /Script/FortniteUI.AthenaItemShopScreen
/// Size: 0x0330 (0x000400 - 0x000730)
class UAthenaItemShopScreen : public UCommonActivatableWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1840;

public:
	DMember(bool)                                      bShowAvailableMTXBalance                                    OFFSET(get<bool>, {0x428, 1, 0, 0})
	SMember(FString)                                   AffiliateSourceName                                         OFFSET(getStruct<T>, {0x430, 16, 0, 0})
	SMember(FPrimaryContentSetup)                      PrimaryContentSetup                                         OFFSET(getStruct<T>, {0x440, 3, 0, 0})
	SMember(FMargin)                                   SectionsPadding                                             OFFSET(getStruct<T>, {0x444, 16, 0, 0})
	SMember(FDataTableRowHandle)                       NextCategoryInputAction                                     OFFSET(getStruct<T>, {0x458, 16, 0, 0})
	SMember(FDataTableRowHandle)                       PrevCategoryInputAction                                     OFFSET(getStruct<T>, {0x468, 16, 0, 0})
	CMember(TWeakObjectPtr<UClass*>)                   ItemShopOfferDetailsScreenClass                             OFFSET(get<T>, {0x478, 32, 0, 0})
	CMember(TWeakObjectPtr<UClass*>)                   ItemShopDisplayAssetOfferDetailsClass                       OFFSET(get<T>, {0x498, 32, 0, 0})
	CMember(UClass*)                                   AffiliateModalClass                                         OFFSET(get<T>, {0x4B8, 8, 0, 0})
	CMember(UClass*)                                   StoreSelectionPopupClass                                    OFFSET(get<T>, {0x4C0, 8, 0, 0})
	DMember(float)                                     ScrollThreshold                                             OFFSET(get<float>, {0x4C8, 4, 0, 0})
	CMember(UFortAffilateModal*)                       AffiliateModal                                              OFFSET(get<T>, {0x4D0, 8, 0, 0})
	CMember(UFortMtxStoreSelectionPopup*)              StoreSelectionPopup                                         OFFSET(get<T>, {0x4D8, 8, 0, 0})
	CMember(UWidgetAnimation*)                         LastPlayedIntroAnimation                                    OFFSET(get<T>, {0x4E0, 8, 0, 0})
	CMember(UOverlay*)                                 Overlay_NavigationControl                                   OFFSET(get<T>, {0x4E8, 8, 0, 0})
	CMember(UAthenaScrollBox*)                         ScrollBox_Sections                                          OFFSET(get<T>, {0x4F0, 8, 0, 0})
	CMember(UVerticalBox*)                             VBox_Sections                                               OFFSET(get<T>, {0x4F8, 8, 0, 0})
	CMember(UInvalidationBox*)                         InvalidationBox_ItemShop                                    OFFSET(get<T>, {0x510, 8, 0, 0})
	CMember(UWidget*)                                  Container_AvailableAmount                                   OFFSET(get<T>, {0x518, 8, 0, 0})
	CMember(UAthenaItemShopSectionNavigator*)          Navigator_ShopSections                                      OFFSET(get<T>, {0x520, 8, 0, 0})
	CMember(UDynamicEntryBox*)                         EntryBox_SectionsPips                                       OFFSET(get<T>, {0x528, 8, 0, 0})
	CMember(UCommonButtonBase*)                        Button_SupportACreator                                      OFFSET(get<T>, {0x530, 8, 0, 0})
	CMember(UCommonButtonBase*)                        Button_ScrollToTop                                          OFFSET(get<T>, {0x538, 8, 0, 0})
	CMember(UCommonButtonBase*)                        Button_InGameScrollToTop                                    OFFSET(get<T>, {0x540, 8, 0, 0})
	CMember(UCommonButtonBase*)                        Button_BackToGame                                           OFFSET(get<T>, {0x548, 8, 0, 0})
	CMember(UAthenaItemShopRefreshTimerButton*)        Button_RefreshTimerInfo                                     OFFSET(get<T>, {0x550, 8, 0, 0})
	CMember(UWidget*)                                  Container_RefreshTimerButton                                OFFSET(get<T>, {0x558, 8, 0, 0})
	CMember(UImage*)                                   Image_DefaultBackground                                     OFFSET(get<T>, {0x560, 8, 0, 0})
	CMember(UClass*)                                   SpecialOfferVideoPlayerClass                                OFFSET(get<T>, {0x568, 8, 0, 0})
	CMember(UCommonButtonGroupLegacy*)                 ButtonGroup_SectionsPips                                    OFFSET(get<T>, {0x570, 8, 0, 0})
	CMember(TWeakObjectPtr<ADynamicBackgroundDirector*>) ItemShopBackgroundDirector                                OFFSET(get<T>, {0x578, 8, 0, 0})
	CMember(TWeakObjectPtr<UClass*>)                   RefreshTimerInfoModalClass                                  OFFSET(get<T>, {0x580, 32, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.AthenaItemShopScreen.PlayIntroAnimation
	// void PlayIntroAnimation(UWidgetAnimation* IntroAnimation);                                                               // [0x90d72f0] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.AthenaItemShopScreen.OnSpecialOfferVideoStarted
	// void OnSpecialOfferVideoStarted();                                                                                       // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaItemShopScreen.OnSpecialOfferVideoSkipped
	// void OnSpecialOfferVideoSkipped();                                                                                       // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaItemShopScreen.OnSpecialOfferVideoFinished
	// void OnSpecialOfferVideoFinished();                                                                                      // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaItemShopScreen.OnSectionsEstablished
	// void OnSectionsEstablished(bool bEmpty);                                                                                 // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaItemShopScreen.OnNoOfferVideo
	// void OnNoOfferVideo();                                                                                                   // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaItemShopScreen.OnEstablishingSections
	// void OnEstablishingSections();                                                                                           // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaItemShopScreen.NavigateToOffer
	// void NavigateToOffer(FString OfferId, EItemShopNavigationAction NavigationAction);                                       // [0x90d6bac] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.AthenaItemShopScreen.HandleUserMouseUp
	// void HandleUserMouseUp(float ScrollAmount);                                                                              // [0x90d6808] Final|Native|Protected 
	// Function /Script/FortniteUI.AthenaItemShopScreen.HandlePurchaseOfferComplete
	// void HandlePurchaseOfferComplete(bool bSuccess, TArray<FPurchasedItemInfo>& PurchasedItems);                             // [0x90d58a8] Final|Native|Private|HasOutParms 
	// Function /Script/FortniteUI.AthenaItemShopScreen.EnableShopNavigation
	// void EnableShopNavigation(bool bIsNavigationEnabled);                                                                    // [0x90d2bd0] Final|Native|Protected|BlueprintCallable 
};

/// Class /Script/FortniteUI.AthenaItemShopSection
/// Size: 0x0220 (0x000400 - 0x000620)
class UAthenaItemShopSection : public UCommonActivatableWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1568;

public:
	DMember(float)                                     OriginalScale                                               OFFSET(get<float>, {0x4E0, 4, 0, 0})
	DMember(float)                                     LargeScale                                                  OFFSET(get<float>, {0x4E4, 4, 0, 0})
	CMember(TMap<FString, int32_t>)                    OfferIdToIndexMap                                           OFFSET(get<T>, {0x530, 80, 0, 0})
	CMember(TMap<FString, FIntPoint>)                  Analytics_OfferIdToIndex2D                                  OFFSET(get<T>, {0x580, 80, 0, 0})
	CMember(TArray<UFortStoreFrontOfferInfo*>)         OffersToDisplay                                             OFFSET(get<T>, {0x5D0, 16, 0, 0})
	CMember(UDynamicEntryBox*)                         EntryBox_OfferEntries                                       OFFSET(get<T>, {0x5E0, 8, 0, 0})
	CMember(UAthenaScrollBox*)                         ScrollBox_Offers                                            OFFSET(get<T>, {0x5E8, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_Title                                                  OFFSET(get<T>, {0x5F0, 8, 0, 0})
	CMember(UHorizontalBox*)                           HBox_Timer                                                  OFFSET(get<T>, {0x5F8, 8, 0, 0})
	CMember(UFortEventDateTimeTextBlock*)              Text_TimeRemaining                                          OFFSET(get<T>, {0x600, 8, 0, 0})
	CMember(UCommonButtonBase*)                        CircleArrowButton_Next                                      OFFSET(get<T>, {0x608, 8, 0, 0})
	CMember(UCommonButtonBase*)                        CircleArrowButton_Previous                                  OFFSET(get<T>, {0x610, 8, 0, 0})
	CMember(UScaleBox*)                                ScaleBox_Offers                                             OFFSET(get<T>, {0x618, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.AthenaItemShopSection.OnSelectedStateUpdated
	// void OnSelectedStateUpdated(bool bIsInSelectedState);                                                                    // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaItemShopSection.HandleUserScrolled
	// void HandleUserScrolled(float InCurrentScrollOffset);                                                                    // [0x90d6888] Final|Native|Private 
};

/// Class /Script/FortniteUI.AthenaItemShopSectionNavigator
/// Size: 0x0038 (0x0002E8 - 0x000320)
class UAthenaItemShopSectionNavigator : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 800;

public:
	CMember(UAthenaItemShopNavigationButton*)          Button_Next                                                 OFFSET(get<T>, {0x310, 8, 0, 0})
	CMember(UAthenaItemShopNavigationButton*)          Button_Previous                                             OFFSET(get<T>, {0x318, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.AthenaItemShopSectionNavigator.RequestPreviousSection
	// void RequestPreviousSection();                                                                                           // [0x90d77f8] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.AthenaItemShopSectionNavigator.RequestNextSection
	// void RequestNextSection();                                                                                               // [0x90d77d0] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/FortniteUI.AthenaItemShopTile
/// Size: 0x01D0 (0x0014E0 - 0x0016B0)
class UAthenaItemShopTile : public UCommonButtonLegacy
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 5808;

public:
	CMember(UFortItemThumbnailRenderer*)               ThumbnailRenderer                                           OFFSET(get<T>, {0x1578, 8, 0, 0})
	CMember(TArray<TWeakObjectPtr>)                    Presentations                                               OFFSET(get<T>, {0x1580, 16, 0, 0})
	CMember(UClass*)                                   ThumbnailRendererClass                                      OFFSET(get<T>, {0x1590, 8, 0, 0})
	CMember(UClass*)                                   ItemCaptureActorClass                                       OFFSET(get<T>, {0x1598, 8, 0, 0})
	SMember(FVector)                                   CaptureActorStartingPosition                                OFFSET(getStruct<T>, {0x15A0, 24, 0, 0})
	DMember(float)                                     CaptureActorZOffset                                         OFFSET(get<float>, {0x15B8, 4, 0, 0})
	DMember(float)                                     TimeBetweenPresentationSwaps                                OFFSET(get<float>, {0x15BC, 4, 0, 0})
	SMember(FText)                                     SubInactiveStatusText                                       OFFSET(getStruct<T>, {0x15C0, 24, 0, 0})
	SMember(FText)                                     SubActiveStatusText                                         OFFSET(getStruct<T>, {0x15D8, 24, 0, 0})
	SMember(FText)                                     SubPaymentErrorStatusText                                   OFFSET(getStruct<T>, {0x15F0, 24, 0, 0})
	CMember(UAthenaItemShopReactiveTileText*)          Text_Name                                                   OFFSET(get<T>, {0x1610, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_Details                                                OFFSET(get<T>, {0x1618, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_Price                                                  OFFSET(get<T>, {0x1620, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_PreviousPrice                                          OFFSET(get<T>, {0x1628, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_SubInfo                                                OFFSET(get<T>, {0x1630, 8, 0, 0})
	CMember(UWidget*)                                  Overlay_SalePrice                                           OFFSET(get<T>, {0x1638, 8, 0, 0})
	CMember(UImage*)                                   Image_RarityStripe                                          OFFSET(get<T>, {0x1640, 8, 0, 0})
	CMember(UCommonVisibilitySwitcher*)                Switcher_OwningStatus                                       OFFSET(get<T>, {0x1648, 8, 0, 0})
	CMember(UWidget*)                                  TileState_Owned                                             OFFSET(get<T>, {0x1650, 8, 0, 0})
	CMember(UWidget*)                                  TileState_NotOwned                                          OFFSET(get<T>, {0x1658, 8, 0, 0})
	CMember(UWidget*)                                  TileState_SubInfo                                           OFFSET(get<T>, {0x1660, 8, 0, 0})
	CMember(UWidget*)                                  Overlay_Violator                                            OFFSET(get<T>, {0x1668, 8, 0, 0})
	CMember(UAthenaItemShopTagRotator*)                TagRotator_ItemTags                                         OFFSET(get<T>, {0x1670, 8, 0, 0})
	CMember(UCommonLoadGuard*)                         LoadGuard_Image                                             OFFSET(get<T>, {0x1678, 8, 0, 0})
	CMember(UAthenaItemShopTileImage*)                 Image_Offer                                                 OFFSET(get<T>, {0x1680, 8, 0, 0})
	CMember(UAthenaItemShopTileImage*)                 Image_NextOffer                                             OFFSET(get<T>, {0x1688, 8, 0, 0})
	CMember(UCommonLazyImage*)                         Image_AnimatedWrap                                          OFFSET(get<T>, {0x1690, 8, 0, 0})
	CMember(UMaterialInterface*)                       MaterialBacking_Rarity                                      OFFSET(get<T>, {0x1698, 8, 0, 0})
	CMember(UMaterialInterface*)                       MaterialBacking_NoRarity                                    OFFSET(get<T>, {0x16A0, 8, 0, 0})
	CMember(UTexture2D*)                               ExternalSubscriptionTexture                                 OFFSET(get<T>, {0x16A8, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.AthenaItemShopTile.ShowNextPresentation
	// void ShowNextPresentation();                                                                                             // [0x90d8fd0] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.AthenaItemShopTile.OnUpdateViolator
	// void OnUpdateViolator(EViolatorIntensity ViolatorIntensity, FText& ViolatorText);                                        // [0x1d9241c] Event|Protected|HasOutParms|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaItemShopTile.OnUpdateTileSize
	// void OnUpdateTileSize(EItemShopTileSize TileSize);                                                                       // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaItemShopTile.OnUpdateSeriesOrRarityColors
	// void OnUpdateSeriesOrRarityColors(FFortColorPalette& ColorPalette);                                                      // [0x1d9241c] Event|Protected|HasOutParms|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaItemShopTile.OnUpdateItemLivePreview
	// void OnUpdateItemLivePreview(EItemShopTileSize TileSize, UFortItemThumbnailRenderer* ThumbnailRendererPtr, AFortItemCaptureActor* CaptureActor); // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaItemShopTile.OnPrePresentationSwap
	// void OnPrePresentationSwap();                                                                                            // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaItemShopTile.OnPeekStateChanged
	// void OnPeekStateChanged(bool bIsInPeekState);                                                                            // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaItemShopTile.OnDisplayAssetImageLoaded
	// void OnDisplayAssetImageLoaded(UTexture2D* OfferImage);                                                                  // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaItemShopTile.OnDefaultBackgroundRequested
	// void OnDefaultBackgroundRequested();                                                                                     // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaItemShopTile.OnCurrencySet
	// void OnCurrencySet(EItemShopCurrency Currency);                                                                          // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaItemShopTile.OnActiveStateChanged
	// void OnActiveStateChanged(bool bIsActiveState);                                                                          // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaItemShopTile.IsUsingLargeLayout
	// bool IsUsingLargeLayout();                                                                                               // [0x90d6b6c] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.AthenaItemShopTile.HandleLocalAccountInfoChanged
	// void HandleLocalAccountInfoChanged(FFortPrivateAccountInfo NewInfo);                                                     // [0x90d4f20] Final|Native|Private 
	// Function /Script/FortniteUI.AthenaItemShopTile.GetLegacyDisplayAsset
	// UFortMtxOfferData* GetLegacyDisplayAsset();                                                                              // [0x90d2db0] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/FortniteUI.AthenaItemShopTileImage
/// Size: 0x0000 (0x0002B0 - 0x0002B0)
class UAthenaItemShopTileImage : public UImage
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 688;

public:
};

/// Class /Script/FortniteUI.AthenaItemShopTimerInfoModal
/// Size: 0x0010 (0x000400 - 0x000410)
class UAthenaItemShopTimerInfoModal : public UCommonActivatableWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1040;

public:
	CMember(UCommonButtonLegacy*)                      Button_Back                                                 OFFSET(get<T>, {0x400, 8, 0, 0})
	CMember(UCommonButtonLegacy*)                      Button_CloseTouch                                           OFFSET(get<T>, {0x408, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.AthenaItemShopTimerInfoModal.OnModalBackout
	// void OnModalBackout();                                                                                                   // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaItemShopTimerInfoModal.ExitModal
	// void ExitModal();                                                                                                        // [0x34111d4] Final|Native|Protected|BlueprintCallable 
};

/// Class /Script/FortniteUI.FortItemBaseWidget
/// Size: 0x0018 (0x0002E8 - 0x000300)
class UFortItemBaseWidget : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 768;

public:
	SMember(FFortItemQuantityPair)                     ItemQuantityPair                                            OFFSET(getStruct<T>, {0x2E8, 12, 0, 0})
	CMember(UFortItemDefinition*)                      ItemDefinition                                              OFFSET(get<T>, {0x2F8, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortItemBaseWidget.SetItemQuantityPairToRepresent
	// bool SetItemQuantityPairToRepresent(FFortItemQuantityPair InItemQuantityPair);                                           // [0x954a0ac] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortItemBaseWidget.SetItemDefinitionToRepresent
	// void SetItemDefinitionToRepresent(UFortItemDefinition* InItemDefinition);                                                // [0x9549848] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortItemBaseWidget.OnItemDefinitionChanged
	// void OnItemDefinitionChanged();                                                                                          // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortItemBaseWidget.OnItemCountChanged
	// void OnItemCountChanged(int32_t NewCount);                                                                               // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortItemBaseWidget.HandleItemCountChanged
	// void HandleItemCountChanged(UFortItemDefinition* Definition, int32_t Delta);                                             // [0x9547ec0] Final|Native|Private 
	// Function /Script/FortniteUI.FortItemBaseWidget.GetRichDescription
	// FText GetRichDescription();                                                                                              // [0x9547ca8] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortItemBaseWidget.GetQuantity
	// int32_t GetQuantity();                                                                                                   // [0x9547c70] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortItemBaseWidget.GetItemDefinition
	// UFortItemDefinition* GetItemDefinition();                                                                                // [0x9547ac4] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/FortniteUI.AthenaSmallOfferPreviewBase
/// Size: 0x0008 (0x000300 - 0x000308)
class UAthenaSmallOfferPreviewBase : public UFortItemBaseWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 776;

public:
	CMember(UFortStoreFrontOfferInfo*)                 OfferData                                                   OFFSET(get<T>, {0x300, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.AthenaSmallOfferPreviewBase.SetupOffer
	// void SetupOffer(UFortStoreFrontOfferInfo* InOfferData);                                                                  // [0x90d867c] Final|RequiredAPI|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.AthenaSmallOfferPreviewBase.OnOfferSet
	// void OnOfferSet();                                                                                                       // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaSmallOfferPreviewBase.GetOfferInfo
	// UFortStoreFrontOfferInfo* GetOfferInfo();                                                                                // [0x84c0024] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/FortniteUI.FortCommunityVotingAvailableVotesWidget
/// Size: 0x0040 (0x0002E8 - 0x000328)
class UFortCommunityVotingAvailableVotesWidget : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 808;

public:
	CMember(UCommonTextBlock*)                         TextBlock_CurrentVoteNumber                                 OFFSET(get<T>, {0x2E8, 8, 0, 0})
	CMember(UCommonTextBlock*)                         TextBlock_NextVoteNumber                                    OFFSET(get<T>, {0x2F0, 8, 0, 0})
	CMember(UFortEventDateTimeTextBlock*)              DateTimeTextBlock_VoteCountdown                             OFFSET(get<T>, {0x2F8, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortCommunityVotingAvailableVotesWidget.PlayIncreaseVote
	// void PlayIncreaseVote();                                                                                                 // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortCommunityVotingAvailableVotesWidget.PlayIdle
	// void PlayIdle();                                                                                                         // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortCommunityVotingAvailableVotesWidget.PlayEventOver
	// void PlayEventOver(float StartValue);                                                                                    // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortCommunityVotingAvailableVotesWidget.PlayDecreaseVote
	// void PlayDecreaseVote();                                                                                                 // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortCommunityVotingAvailableVotesWidget.PlayCountdown
	// void PlayCountdown(float StartValue);                                                                                    // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortCommunityVotingAvailableVotesWidget.PlayAvailableVotes
	// void PlayAvailableVotes();                                                                                               // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortCommunityVotingAvailableVotesWidget.ApplyCurrentVoteNumber
	// void ApplyCurrentVoteNumber();                                                                                           // [0x90d29cc] Final|Native|Protected|BlueprintCallable 
};

/// Class /Script/FortniteUI.FortCommunityVotingCountdown
/// Size: 0x0020 (0x0002C0 - 0x0002E0)
class UFortCommunityVotingCountdown : public UUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 736;

public:
	CMember(UCommonTextBlock*)                         Text_TimeRemaining                                          OFFSET(get<T>, {0x2D8, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortCommunityVotingCountdown.SetDateTimeValue
	// void SetDateTimeValue(FDateTime& InDateTime, float InRefreshDelay);                                                      // [0x90d8168] Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable 
};

/// Class /Script/FortniteUI.FortCommunityVotingFeedback
/// Size: 0x0000 (0x0002E8 - 0x0002E8)
class UFortCommunityVotingFeedback : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 744;

public:
};

/// Class /Script/FortniteUI.FortCommunityVotingManager
/// Size: 0x0108 (0x000028 - 0x000130)
class UFortCommunityVotingManager : public UObject
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 304;

public:
	CMember(TArray<UFortMtxOfferData*>)                CachedDisplayAssets                                         OFFSET(get<T>, {0x40, 16, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortCommunityVotingManager.RefreshVotingTimer
	// void RefreshVotingTimer();                                                                                               // [0x90d76dc] Final|Native|Private 
	// Function /Script/FortniteUI.FortCommunityVotingManager.RefreshVotes
	// void RefreshVotes(bool IsIncrementing);                                                                                  // [0x90d765c] Final|Native|Public  
	// Function /Script/FortniteUI.FortCommunityVotingManager.RefreshRevealTimer
	// void RefreshRevealTimer();                                                                                               // [0x90d75c8] Final|Native|Private 
	// Function /Script/FortniteUI.FortCommunityVotingManager.RefreshNewVoteTimer
	// void RefreshNewVoteTimer();                                                                                              // [0x90d75a0] Final|Native|Private 
	// Function /Script/FortniteUI.FortCommunityVotingManager.OnVotingTimerEnd
	// void OnVotingTimerEnd();                                                                                                 // [0x90d72dc] Final|Native|Private 
	// Function /Script/FortniteUI.FortCommunityVotingManager.OnVotingStateChanged
	// void OnVotingStateChanged();                                                                                             // [0x90d72c8] Final|Native|Private 
	// Function /Script/FortniteUI.FortCommunityVotingManager.OnRevealTimerEnd
	// void OnRevealTimerEnd();                                                                                                 // [0x90d72a0] Final|Native|Private 
	// Function /Script/FortniteUI.FortCommunityVotingManager.OnNewVoteTimerEnd
	// void OnNewVoteTimerEnd();                                                                                                // [0x90d728c] Final|Native|Private 
};

/// Class /Script/FortniteUI.FortCommunityVotingModalPopup
/// Size: 0x0078 (0x000570 - 0x0005E8)
class UFortCommunityVotingModalPopup : public UFortActivatablePanel
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1512;

public:
	SMember(FDataTableRowHandle)                       buttonInputAction                                           OFFSET(getStruct<T>, {0x570, 16, 0, 0})
	CMember(UClass*)                                   VotingScreenClass                                           OFFSET(get<T>, {0x580, 8, 0, 0})
	CMember(UClass*)                                   CandidateClass                                              OFFSET(get<T>, {0x588, 8, 0, 0})
	CMember(UCommonButtonLegacy*)                      Button_VoteNow                                              OFFSET(get<T>, {0x5B8, 8, 0, 0})
	CMember(UCommonButtonLegacy*)                      Button_Close                                                OFFSET(get<T>, {0x5C0, 8, 0, 0})
	CMember(UCommonBorder*)                            Border_TapToCloseZone                                       OFFSET(get<T>, {0x5C8, 8, 0, 0})
	CMember(UDynamicEntryBox*)                         EntryBox_Options                                            OFFSET(get<T>, {0x5D0, 8, 0, 0})
	CMember(UCommonTextBlock*)                         TextBlock_Title                                             OFFSET(get<T>, {0x5D8, 8, 0, 0})
	CMember(UCommonTextBlock*)                         TextBlock_Banner                                            OFFSET(get<T>, {0x5E0, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortCommunityVotingModalPopup.HandleVoteButtonClicked
	// void HandleVoteButtonClicked();                                                                                          // [0x910aba8] Final|Native|Private 
	// Function /Script/FortniteUI.FortCommunityVotingModalPopup.HandleButtonArgless
	// void HandleButtonArgless();                                                                                              // [0x9108a48] Final|Native|Private|BlueprintCallable 
	// Function /Script/FortniteUI.FortCommunityVotingModalPopup.HandleButton
	// void HandleButton(bool& bPassThrough);                                                                                   // [0x910992c] Final|Native|Private|HasOutParms 
	// Function /Script/FortniteUI.FortCommunityVotingModalPopup.Dismiss
	// void Dismiss();                                                                                                          // [0x9108a48] Final|Native|Private 
};

/// Class /Script/FortniteUI.FortCommunityVotingOption
/// Size: 0x0090 (0x0014E0 - 0x001570)
class UFortCommunityVotingOption : public UCommonButtonLegacy
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 5488;

public:
	CMember(UFortCommunityVotingManager*)              VotingManager                                               OFFSET(get<T>, {0x14E8, 8, 0, 0})
	CMember(UClass*)                                   PreviewDetailWidgetClass                                    OFFSET(get<T>, {0x14F0, 8, 0, 0})
	CMember(UCommonButtonLegacy*)                      ComOptionVote                                               OFFSET(get<T>, {0x1508, 8, 0, 0})
	CMember(UCommonButtonLegacy*)                      ComOptionDetails                                            OFFSET(get<T>, {0x1510, 8, 0, 0})
	CMember(UFortCommunityVotingVoteCounter*)          FlameCounter                                                OFFSET(get<T>, {0x1518, 8, 0, 0})
	CMember(UClass*)                                   VoteFeedbackClass                                           OFFSET(get<T>, {0x1520, 8, 0, 0})
	CMember(UFortCommunityVotingOptionPreview*)        ComOptionPreview                                            OFFSET(get<T>, {0x1558, 8, 0, 0})
	CMember(UOverlay*)                                 ComVoteFeedbackContainer                                    OFFSET(get<T>, {0x1560, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortCommunityVotingOption.HaveVotesRemaining
	// bool HaveVotesRemaining();                                                                                               // [0x910abd8] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortCommunityVotingOption.EnableButtons
	// void EnableButtons();                                                                                                    // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortCommunityVotingOption.DisableButtons
	// void DisableButtons();                                                                                                   // [0x1d9241c] Event|Protected|BlueprintEvent 
};

/// Class /Script/FortniteUI.FortCommunityVotingOptionPreview
/// Size: 0x0038 (0x0002E8 - 0x000320)
class UFortCommunityVotingOptionPreview : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 800;

public:
	CMember(UFortCommunityVotingManager*)              VotingManager                                               OFFSET(get<T>, {0x2E8, 8, 0, 0})
	CMember(UImage*)                                   Image_Main                                                  OFFSET(get<T>, {0x2F0, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_Name                                                   OFFSET(get<T>, {0x2F8, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_ShortDescription                                       OFFSET(get<T>, {0x300, 8, 0, 0})
	CMember(UCommonBorder*)                            CommonBorder_Owned                                          OFFSET(get<T>, {0x308, 8, 0, 0})
	CMember(UVerticalBox*)                             VerticalBox_Owned                                           OFFSET(get<T>, {0x310, 8, 0, 0})
	CMember(UCommonLoadGuard*)                         LoadGuard                                                   OFFSET(get<T>, {0x318, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortCommunityVotingOptionPreview.PlayVotingAnimation
	// void PlayVotingAnimation();                                                                                              // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.FortCommunityVotingOptionPreview.PlayUnhoveredAnimation
	// void PlayUnhoveredAnimation();                                                                                           // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.FortCommunityVotingOptionPreview.PlayHoveredAnimation
	// void PlayHoveredAnimation();                                                                                             // [0x1d9241c] Event|Public|BlueprintEvent 
};

/// Class /Script/FortniteUI.FortCommunityVotingOptionReveal
/// Size: 0x0040 (0x0002E8 - 0x000328)
class UFortCommunityVotingOptionReveal : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 808;

public:
	CMember(UFortCommunityVotingManager*)              VotingManager                                               OFFSET(get<T>, {0x310, 8, 0, 0})
	CMember(UImage*)                                   Image_Main                                                  OFFSET(get<T>, {0x318, 8, 0, 0})
	CMember(UImage*)                                   Image_Duplicate                                             OFFSET(get<T>, {0x320, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortCommunityVotingOptionReveal.StartRevealAnimation
	// void StartRevealAnimation(float PlayRate);                                                                               // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.FortCommunityVotingOptionReveal.RevealWinnerAnimation
	// void RevealWinnerAnimation();                                                                                            // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.FortCommunityVotingOptionReveal.OnWinnerRevealAnimationFinished
	// void OnWinnerRevealAnimationFinished();                                                                                  // [0x910c4d8] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/FortniteUI.FortCommunityVotingRevealScreen
/// Size: 0x00A8 (0x000570 - 0x000618)
class UFortCommunityVotingRevealScreen : public UFortActivatablePanel
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1560;

public:
	DMember(float)                                     MaxRevealPlayRate                                           OFFSET(get<float>, {0x570, 4, 0, 0})
	DMember(float)                                     MinRevealPlayRate                                           OFFSET(get<float>, {0x574, 4, 0, 0})
	CMember(UFortCommunityVotingManager*)              VotingManager                                               OFFSET(get<T>, {0x578, 8, 0, 0})
	CMember(TArray<UFortCommunityVotingOptionReveal*>) GeneratedOption                                             OFFSET(get<T>, {0x580, 16, 0, 0})
	CMember(TArray<UFortCommunityVotingOptionReveal*>) LoserOptions                                                OFFSET(get<T>, {0x590, 16, 0, 0})
	CMember(UFortCommunityVotingOptionReveal*)         WinnerOption                                                OFFSET(get<T>, {0x5A0, 8, 0, 0})
	CMember(UFortStoreFrontOfferInfo*)                 WinnerOfferInfo                                             OFFSET(get<T>, {0x5A8, 8, 0, 0})
	CMember(UDynamicEntryBox*)                         EntryBox_Options                                            OFFSET(get<T>, {0x5E8, 8, 0, 0})
	CMember(UCommonButtonLegacy*)                      Button_Close                                                OFFSET(get<T>, {0x5F0, 8, 0, 0})
	CMember(UCommonButtonLegacy*)                      Button_Detail                                               OFFSET(get<T>, {0x5F8, 8, 0, 0})
	CMember(URichTextBlock*)                           RichText_ItemReturns                                        OFFSET(get<T>, {0x600, 8, 0, 0})
	CMember(UCommonBorder*)                            BorderRarityColored                                         OFFSET(get<T>, {0x608, 8, 0, 0})
	CMember(UFortCommunityVotingOptionReveal*)         ComOptionRevealWinner                                       OFFSET(get<T>, {0x610, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortCommunityVotingRevealScreen.StartFinalAnimation
	// void StartFinalAnimation();                                                                                              // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.FortCommunityVotingRevealScreen.StartFadeOutScreen
	// void StartFadeOutScreen(float Delay);                                                                                    // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.FortCommunityVotingRevealScreen.StartFadeInAnimation
	// void StartFadeInAnimation();                                                                                             // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.FortCommunityVotingRevealScreen.HandleDetailButtonClicked
	// void HandleDetailButtonClicked();                                                                                        // [0x9109c8c] Final|Native|Private 
	// Function /Script/FortniteUI.FortCommunityVotingRevealScreen.HandleCloseButtonClicked
	// void HandleCloseButtonClicked();                                                                                         // [0x91099a8] Final|Native|Private 
	// Function /Script/FortniteUI.FortCommunityVotingRevealScreen.Dismiss
	// void Dismiss();                                                                                                          // [0x9108a5c] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/FortniteUI.FortCommunityVotingScreen
/// Size: 0x00A8 (0x000570 - 0x000618)
class UFortCommunityVotingScreen : public UFortActivatablePanel
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1560;

public:
	SMember(FText)                                     RevealWinnerPopupTitle                                      OFFSET(getStruct<T>, {0x570, 24, 0, 0})
	SMember(FText)                                     RevealWinnerPopupBanner                                     OFFSET(getStruct<T>, {0x588, 24, 0, 0})
	CMember(UClass*)                                   CommunityVotingModalPopupClass                              OFFSET(get<T>, {0x5A0, 8, 0, 0})
	CMember(UClass*)                                   CommunityVotingModalTutorialPopupClass                      OFFSET(get<T>, {0x5A8, 8, 0, 0})
	SMember(FDataTableRowHandle)                       BackInput                                                   OFFSET(getStruct<T>, {0x5B0, 16, 0, 0})
	CMember(UFortCommunityVotingManager*)              VotingManager                                               OFFSET(get<T>, {0x5C0, 8, 0, 0})
	CMember(UFortCommunityVotingOption*)               HighlightedOption                                           OFFSET(get<T>, {0x5C8, 8, 0, 0})
	CMember(UFortCommunityVotingCountdown*)            Countdown_RemainingTime                                     OFFSET(get<T>, {0x5D8, 8, 0, 0})
	CMember(UDynamicEntryBox*)                         EntryBox_Options                                            OFFSET(get<T>, {0x5E0, 8, 0, 0})
	CMember(UCommonButtonLegacy*)                      ComBackButton                                               OFFSET(get<T>, {0x5E8, 8, 0, 0})
	CMember(UFortCommunityVotingAvailableVotesWidget*) AvailableSparksWidget                                       OFFSET(get<T>, {0x5F0, 8, 0, 0})
	CMember(UCommonWidgetSwitcherLegacy*)              Switcher_VotingTip                                          OFFSET(get<T>, {0x5F8, 8, 0, 0})
	CMember(UFortCommunityVotingThanksPopup*)          Com_ThanksForVotingMessage                                  OFFSET(get<T>, {0x600, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortCommunityVotingScreen.HandleBackButton
	// void HandleBackButton(bool& bPassThrough);                                                                               // [0x91098b0] Final|Native|Private|HasOutParms 
	// Function /Script/FortniteUI.FortCommunityVotingScreen.FadeOutScreen
	// void FadeOutScreen();                                                                                                    // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.FortCommunityVotingScreen.Dismiss
	// void Dismiss();                                                                                                          // [0x9108ab0] Final|Native|Private|BlueprintCallable 
};

/// Class /Script/FortniteUI.FortCommunityVotingTab
/// Size: 0x0018 (0x0002E8 - 0x000300)
class UFortCommunityVotingTab : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 768;

public:
	CMember(UClass*)                                   ContainedWidgetClass                                        OFFSET(get<T>, {0x2E8, 8, 0, 0})
	CMember(UHorizontalBox*)                           HorizontalBox_LargeTile                                     OFFSET(get<T>, {0x2F0, 8, 0, 0})
	CMember(UFortEventDateTimeTextBlock*)              DateTimeTextBlock_Countdown                                 OFFSET(get<T>, {0x2F8, 8, 0, 0})
};

/// Class /Script/FortniteUI.FortCommunityVotingThanksPopup
/// Size: 0x0050 (0x0002E8 - 0x000338)
class UFortCommunityVotingThanksPopup : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 824;

public:
	CMember(UCommonTextBlock*)                         ThanksForVoting_Countdown                                   OFFSET(get<T>, {0x330, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortCommunityVotingThanksPopup.UpdateCountdown
	// void UpdateCountdown();                                                                                                  // [0x910cb60] Final|Native|Protected 
	// Function /Script/FortniteUI.FortCommunityVotingThanksPopup.StartCountdown
	// void StartCountdown();                                                                                                   // [0x910c9ec] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.FortCommunityVotingThanksPopup.FadeOutPopup
	// void FadeOutPopup();                                                                                                     // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortCommunityVotingThanksPopup.FadeInPopup
	// void FadeInPopup();                                                                                                      // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortCommunityVotingThanksPopup.Dismiss
	// void Dismiss();                                                                                                          // [0x9108ac4] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.FortCommunityVotingThanksPopup.BroadcastOnFadeOutStarts
	// void BroadcastOnFadeOutStarts();                                                                                         // [0x902b3c0] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.FortCommunityVotingThanksPopup.BroadcastOnFadeOutEnds
	// void BroadcastOnFadeOutEnds();                                                                                           // [0x91089e8] Final|Native|Protected|BlueprintCallable 
};

/// Class /Script/FortniteUI.FortCommunityVotingTileCandidate
/// Size: 0x0020 (0x0002C0 - 0x0002E0)
class UFortCommunityVotingTileCandidate : public UUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 736;

public:
	CMember(UImage*)                                   Image_Candidate                                             OFFSET(get<T>, {0x2D0, 8, 0, 0})
	CMember(UCommonLoadGuard*)                         LoadGuard                                                   OFFSET(get<T>, {0x2D8, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortCommunityVotingTileCandidate.OnImageAnimationFinished
	// void OnImageAnimationFinished();                                                                                         // [0x910b668] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortCommunityVotingTileCandidate.AnimateImage
	// void AnimateImage();                                                                                                     // [0x1d9241c] Event|Public|BlueprintEvent 
};

/// Class /Script/FortniteUI.FortCommunityVotingTutorialPopup
/// Size: 0x0070 (0x000570 - 0x0005E0)
class UFortCommunityVotingTutorialPopup : public UFortActivatablePanel
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1504;

public:
	DMember(int32_t)                                   NumberOfSlide                                               OFFSET(get<int32_t>, {0x570, 4, 0, 0})
	DMember(float)                                     DelayBetweenSlide                                           OFFSET(get<float>, {0x574, 4, 0, 0})
	DMember(float)                                     DelayOutAnimation                                           OFFSET(get<float>, {0x578, 4, 0, 0})
	SMember(FDataTableRowHandle)                       ButtonNextInputAction                                       OFFSET(getStruct<T>, {0x580, 16, 0, 0})
	SMember(FDataTableRowHandle)                       ButtonCloseInputAction                                      OFFSET(getStruct<T>, {0x590, 16, 0, 0})
	CMember(UCommonButtonLegacy*)                      Button_NextStep                                             OFFSET(get<T>, {0x5C8, 8, 0, 0})
	CMember(UCommonButtonLegacy*)                      Button_Close                                                OFFSET(get<T>, {0x5D0, 8, 0, 0})
	CMember(UCommonWidgetSwitcherLegacy*)              Buttons_Switcher                                            OFFSET(get<T>, {0x5D8, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortCommunityVotingTutorialPopup.PlayTutorialAnimation
	// void PlayTutorialAnimation();                                                                                            // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortCommunityVotingTutorialPopup.PlayOutSlideAnimation
	// void PlayOutSlideAnimation(int32_t Index);                                                                               // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortCommunityVotingTutorialPopup.PlayInSlideAnimation
	// void PlayInSlideAnimation(int32_t Index);                                                                                // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortCommunityVotingTutorialPopup.OnSlideAnimationFinished
	// void OnSlideAnimationFinished();                                                                                         // [0x910c34c] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.FortCommunityVotingTutorialPopup.CloseTutorial
	// void CloseTutorial();                                                                                                    // [0x34111d4] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/FortniteUI.FortCommunityVotingVoteCounter
/// Size: 0x0038 (0x0002E8 - 0x000320)
class UFortCommunityVotingVoteCounter : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 800;

public:
	DMember(bool)                                      HasOneOrMoreVote                                            OFFSET(get<bool>, {0x2E8, 1, 0, 0})
	CMember(UCommonTextBlock*)                         TextBlock_CurrentVoteNumber                                 OFFSET(get<T>, {0x2F0, 8, 0, 0})
	CMember(UCommonTextBlock*)                         TextBlock_NextVoteNumber                                    OFFSET(get<T>, {0x2F8, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortCommunityVotingVoteCounter.PlayIncreaseVote
	// void PlayIncreaseVote();                                                                                                 // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortCommunityVotingVoteCounter.PlayIdle
	// void PlayIdle();                                                                                                         // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortCommunityVotingVoteCounter.PlayFadeOut
	// void PlayFadeOut();                                                                                                      // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortCommunityVotingVoteCounter.PlayFadeIn
	// void PlayFadeIn();                                                                                                       // [0x1d9241c] Event|Protected|BlueprintEvent 
};

/// Class /Script/FortniteUI.AthenaItemShopReactiveTileText
/// Size: 0x0010 (0x000380 - 0x000390)
class UAthenaItemShopReactiveTileText : public UCommonTextBlock
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 912;

public:
	DMember(int32_t)                                   MaxCharacterCountBeforeScaling                              OFFSET(get<int32_t>, {0x378, 4, 0, 0})
	DMember(float)                                     MaxScaleDownPercentage                                      OFFSET(get<float>, {0x37C, 4, 0, 0})
	DMember(bool)                                      bDebugScaling                                               OFFSET(get<bool>, {0x380, 1, 0, 0})
	DMember(float)                                     InitialFontSize                                             OFFSET(get<float>, {0x384, 4, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.AthenaItemShopReactiveTileText.SetMaxCharacterCountBeforeScaling
	// void SetMaxCharacterCountBeforeScaling(int32_t InMaxCharacterCountBeforeScaling);                                        // [0x910c59c] Final|Native|Private|BlueprintCallable 
	// Function /Script/FortniteUI.AthenaItemShopReactiveTileText.GetMaxCharacterCountBeforeScaling
	// int32_t GetMaxCharacterCountBeforeScaling();                                                                             // [0x91091a4] Final|Native|Private|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/FortniteUI.AthenaMtxOfferButtonBaseLegacy
/// Size: 0x0050 (0x0014E0 - 0x001530)
class UAthenaMtxOfferButtonBaseLegacy : public UCommonButtonLegacy
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 5424;

public:
	CMember(UFortStoreFrontOfferInfo*)                 OfferData                                                   OFFSET(get<T>, {0x14E8, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_MtxAmount                                              OFFSET(get<T>, {0x14F0, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_RealMoneyPrice                                         OFFSET(get<T>, {0x14F8, 8, 0, 0})
	CMember(UCommonVisibilitySwitcher*)                OptionalSwitcher_CurrencyIcons                              OFFSET(get<T>, {0x1500, 8, 0, 0})
	CMember(UImage*)                                   OptionalIMG_StarterKit                                      OFFSET(get<T>, {0x1508, 8, 0, 0})
	CMember(UCommonLoadGuard*)                         LoadGuardCurrencySpinner                                    OFFSET(get<T>, {0x1510, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.AthenaMtxOfferButtonBaseLegacy.HandleMtxPurchaseComplete
	// void HandleMtxPurchaseComplete(bool bSuccess, TArray<FPurchasedItemInfo>& PurchasedItems);                               // [0x910a094] Final|Native|Private|HasOutParms 
};

/// Class /Script/FortniteUI.AthenaDynamicMtxOfferButtonLegacy
/// Size: 0x0010 (0x001530 - 0x001540)
class UAthenaDynamicMtxOfferButtonLegacy : public UAthenaMtxOfferButtonBaseLegacy
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 5440;

public:
	CMember(UCommonTextBlock*)                         Text_DynamicMtxAmount                                       OFFSET(get<T>, {0x1530, 8, 0, 0})
};

/// Class /Script/FortniteUI.AthenaReloadMtxScreenBaseLegacy
/// Size: 0x00A0 (0x000720 - 0x0007C0)
class UAthenaReloadMtxScreenBaseLegacy : public UFortItemPreviewScreen
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1984;

public:
	CMember(UFortStoreFrontOfferInfo*)                 OfferInfo                                                   OFFSET(get<T>, {0x728, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_AmountNeeded                                           OFFSET(get<T>, {0x740, 8, 0, 0})
	CMember(TArray<UFortAccountItemDefinition*>)       AccountItemDefinitions                                      OFFSET(get<T>, {0x788, 16, 0, 0})
	SMember(FDataTableRowHandle)                       BackAction                                                  OFFSET(getStruct<T>, {0x798, 16, 0, 0})
	CMember(UCommonButtonBase*)                        Button_CloseTouch                                           OFFSET(get<T>, {0x7A8, 8, 0, 0})
	CMember(UAthenaSmallOfferPreviewBase*)             SmallOfferPreview_Widget                                    OFFSET(get<T>, {0x7B0, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.AthenaReloadMtxScreenBaseLegacy.HandleOfferDisplayAssetLoaded
	// void HandleOfferDisplayAssetLoaded();                                                                                    // [0x910a788] Final|Native|Private 
	// Function /Script/FortniteUI.AthenaReloadMtxScreenBaseLegacy.BlockScreenContent
	// void BlockScreenContent(bool bBlockScreen, FText& ContentBlockedText);                                                   // [0x1d9241c] Event|Protected|HasOutParms|BlueprintEvent 
};

/// Class /Script/FortniteUI.AthenaDynamicReloadMtxScreenLegacy
/// Size: 0x0070 (0x0007C0 - 0x000830)
class UAthenaDynamicReloadMtxScreenLegacy : public UAthenaReloadMtxScreenBaseLegacy
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 2096;

public:
	CMember(UCommonTextBlock*)                         Text_TotalNeeded                                            OFFSET(get<T>, {0x7C0, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_CurrentBalance                                         OFFSET(get<T>, {0x7C8, 8, 0, 0})
	CMember(UCommonVisibilitySwitcher*)                Switcher_DynamicOptions                                     OFFSET(get<T>, {0x7D0, 8, 0, 0})
	CMember(UAthenaStarterKitOfferButtonLegacy*)       Button_StarterKitOption                                     OFFSET(get<T>, {0x7D8, 8, 0, 0})
	CMember(UOverlay*)                                 Overlay_MtxRequired                                         OFFSET(get<T>, {0x7E0, 8, 0, 0})
	CMember(UOverlay*)                                 Overlay_StarterKit                                          OFFSET(get<T>, {0x7E8, 8, 0, 0})
	CMember(UAthenaDynamicMtxOfferButtonLegacy*)       Button_MtxRequiredOption                                    OFFSET(get<T>, {0x7F0, 8, 0, 0})
	CMember(UAthenaStaticMtxOfferButtonLegacy*)        Button_MtxOtherOption                                       OFFSET(get<T>, {0x7F8, 8, 0, 0})
	CMember(UCommonButtonLegacy*)                      Button_MoreOptions                                          OFFSET(get<T>, {0x800, 8, 0, 0})
	CMember(TArray<FName>)                             StorefrontNames                                             OFFSET(get<T>, {0x808, 16, 0, 0})
	CMember(UAthenaReloadMtxScreenLegacy*)             StaticReloadMtxScreen                                       OFFSET(get<T>, {0x818, 8, 0, 0})
	CMember(UCommonButtonLegacy*)                      MtxRequiredButtonToFocus                                    OFFSET(get<T>, {0x820, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.AthenaDynamicReloadMtxScreenLegacy.GetMtxRequiredButtonToFocus
	// UWidget* GetMtxRequiredButtonToFocus(EUINavigation InNavigation);                                                        // [0x91091bc] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/FortniteUI.AthenaStaticMtxOfferButtonLegacy
/// Size: 0x0020 (0x001530 - 0x001550)
class UAthenaStaticMtxOfferButtonLegacy : public UAthenaMtxOfferButtonBaseLegacy
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 5456;

public:
	CMember(UCommonTextBlock*)                         Text_BonusMtxAmount                                         OFFSET(get<T>, {0x1530, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_BonusPercent                                           OFFSET(get<T>, {0x1538, 8, 0, 0})
	CMember(UHorizontalBox*)                           HB_BonusMtxArea                                             OFFSET(get<T>, {0x1540, 8, 0, 0})
	CMember(USizeBox*)                                 SB_BonusPercentArea                                         OFFSET(get<T>, {0x1548, 8, 0, 0})
};

/// Class /Script/FortniteUI.AthenaMtxOfferListEntryButtonLegacy
/// Size: 0x0010 (0x001550 - 0x001560)
class UAthenaMtxOfferListEntryButtonLegacy : public UAthenaStaticMtxOfferButtonLegacy
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 5472;

public:
};

/// Class /Script/FortniteUI.AthenaReloadMtxIntroModalPopupLegacy
/// Size: 0x0028 (0x000570 - 0x000598)
class UAthenaReloadMtxIntroModalPopupLegacy : public UFortActivatablePanel
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1432;

public:
	CMember(UCommonButtonLegacy*)                      Button_Confirm                                              OFFSET(get<T>, {0x590, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.AthenaReloadMtxIntroModalPopupLegacy.PlayOutro
	// void PlayOutro();                                                                                                        // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaReloadMtxIntroModalPopupLegacy.HandleTapToClose
	// void HandleTapToClose();                                                                                                 // [0x91099bc] Final|Native|Private|BlueprintCallable 
	// Function /Script/FortniteUI.AthenaReloadMtxIntroModalPopupLegacy.HandleConfirmButtonClicked
	// void HandleConfirmButtonClicked();                                                                                       // [0x91099bc] Final|Native|Private 
	// Function /Script/FortniteUI.AthenaReloadMtxIntroModalPopupLegacy.Dismiss
	// void Dismiss();                                                                                                          // [0x9108a04] Final|Native|Private|BlueprintCallable 
};

/// Class /Script/FortniteUI.AthenaReloadMtxScreenLegacy
/// Size: 0x0050 (0x0007C0 - 0x000810)
class UAthenaReloadMtxScreenLegacy : public UAthenaReloadMtxScreenBaseLegacy
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 2064;

public:
	CMember(UAthenaStarterKitOfferButtonLegacy*)       Button_StarterKitOption                                     OFFSET(get<T>, {0x7D0, 8, 0, 0})
	CMember(UCommonListView*)                          ListView_MtxOptions                                         OFFSET(get<T>, {0x7D8, 8, 0, 0})
	CMember(UCommonVisibilitySwitcher*)                Switcher_AvailableOptions                                   OFFSET(get<T>, {0x7E0, 8, 0, 0})
	CMember(UOverlay*)                                 Overlay_AvailableOptions                                    OFFSET(get<T>, {0x7E8, 8, 0, 0})
	CMember(UOverlay*)                                 Overlay_NoOptions                                           OFFSET(get<T>, {0x7F0, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.AthenaReloadMtxScreenLegacy.GetWidgetToFocusFromOfferList
	// UWidget* GetWidgetToFocusFromOfferList(EUINavigation InNavigation);                                                      // [0x9109824] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/FortniteUI.AthenaStarterKitOfferButtonLegacy
/// Size: 0x0010 (0x001530 - 0x001540)
class UAthenaStarterKitOfferButtonLegacy : public UAthenaMtxOfferButtonBaseLegacy
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 5440;

public:
	CMember(UCommonTextBlock*)                         Text_DisplayName                                            OFFSET(get<T>, {0x1530, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_OfferContent                                           OFFSET(get<T>, {0x1538, 8, 0, 0})
};

/// Class /Script/FortniteUI.AthenaItemShopTagRotator
/// Size: 0x0030 (0x0002E8 - 0x000318)
class UAthenaItemShopTagRotator : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 792;

public:
	DMember(float)                                     TimeBetweenTitleChanges                                     OFFSET(get<float>, {0x2E8, 4, 0, 0})
	CMember(UCommonTextBlock*)                         Text_TagCallout                                             OFFSET(get<T>, {0x310, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.AthenaItemShopTagRotator.UpdateTagText
	// void UpdateTagText();                                                                                                    // [0x910cc44] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.AthenaItemShopTagRotator.OnTagExit
	// void OnTagExit();                                                                                                        // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaItemShopTagRotator.OnTagEnter
	// void OnTagEnter();                                                                                                       // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaItemShopTagRotator.OnActiveStatusChanged
	// void OnActiveStatusChanged(bool bIsActive);                                                                              // [0x1d9241c] Event|Protected|BlueprintEvent 
};

/// Class /Script/FortniteUI.AthenaItemShopTagTitleMapping
/// Size: 0x0050 (0x000030 - 0x000080)
class UAthenaItemShopTagTitleMapping : public UDataAsset
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 128;

public:
	CMember(TMap<FGameplayTag, FText>)                 TagTitleMap                                                 OFFSET(get<T>, {0x30, 80, 0, 0})
};

/// Class /Script/FortniteUI.LetoHudOverlay
/// Size: 0x0038 (0x0002E8 - 0x000320)
class ULetoHudOverlay : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 800;

public:
	CMember(UVerticalBox*)                             VBox_Container                                              OFFSET(get<T>, {0x2E8, 8, 0, 0})
	CMember(UHorizontalBox*)                           HBox_PlayerOne                                              OFFSET(get<T>, {0x2F0, 8, 0, 0})
	CMember(UHorizontalBox*)                           HBox_PlayerTwo                                              OFFSET(get<T>, {0x2F8, 8, 0, 0})
	CMember(USpacer*)                                  Spacer_PlayerOne                                            OFFSET(get<T>, {0x300, 8, 0, 0})
	CMember(USpacer*)                                  Spacer_PlayerTwo                                            OFFSET(get<T>, {0x308, 8, 0, 0})
	CMember(ULetoPlayerAvatar*)                        LetoAvatar_PlayerOne                                        OFFSET(get<T>, {0x310, 8, 0, 0})
	CMember(ULetoPlayerAvatar*)                        LetoAvatar_PlayerTwo                                        OFFSET(get<T>, {0x318, 8, 0, 0})
};

/// Class /Script/FortniteUI.LetoPlayerAvatar
/// Size: 0x0008 (0x0002E8 - 0x0002F0)
class ULetoPlayerAvatar : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 752;

public:
	CMember(UFortSocialAvatarIcon*)                    AvatarIcon                                                  OFFSET(get<T>, {0x2E8, 8, 0, 0})
};

/// Class /Script/FortniteUI.LockerConfirmationModal
/// Size: 0x00B0 (0x000400 - 0x0004B0)
class ULockerConfirmationModal : public UCommonActivatableWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1200;

public:
	CMember(UCommonButtonBase*)                        Button_Cancel                                               OFFSET(get<T>, {0x400, 8, 0, 0})
	CMember(UCommonButtonBase*)                        Button_CloseTouch                                           OFFSET(get<T>, {0x408, 8, 0, 0})
	CMember(UCommonButtonBase*)                        Button_Confirm                                              OFFSET(get<T>, {0x410, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_Title                                                  OFFSET(get<T>, {0x418, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_Description                                            OFFSET(get<T>, {0x420, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.LockerConfirmationModal.OnShowMTXWallet
	// void OnShowMTXWallet(bool bShow);                                                                                        // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.LockerConfirmationModal.OnSetButtonTexts
	// void OnSetButtonTexts(FText& ConfirmText, FText& CancelText);                                                            // [0x1d9241c] Event|Protected|HasOutParms|BlueprintEvent 
};

/// Class /Script/FortniteUI.LTMWidgetBase
/// Size: 0x0070 (0x000328 - 0x000398)
class ULTMWidgetBase : public UFortHUDElementWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 920;

public:
	CMember(UClass*)                                   MutatorClassToWaitFor                                       OFFSET(get<T>, {0x368, 8, 0, 0})
	CMember(AFortGameplayMutator*)                     CachedGameplayMutator                                       OFFSET(get<T>, {0x370, 8, 0, 0})
	SMember(FFortPrioritizedWidgetData)                PrioritizationData                                          OFFSET(getStruct<T>, {0x379, 2, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.LTMWidgetBase.SetPlayerPortrait
	// void SetPlayerPortrait(AFortPlayerStateAthena* Player, UFortLazyImage* PortraitImage);                                   // [0x910c63c] Final|Native|Public|BlueprintCallable|Const 
	// Function /Script/FortniteUI.LTMWidgetBase.OnStompFailed
	// void OnStompFailed();                                                                                                    // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.LTMWidgetBase.OnStompedByOtherWidget
	// void OnStompedByOtherWidget();                                                                                           // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.LTMWidgetBase.OnMutatorAvailable_BP
	// void OnMutatorAvailable_BP(AFortGameplayMutator* MutatorActor);                                                          // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.LTMWidgetBase.OnHandleSpectatingChanged
	// void OnHandleSpectatingChanged(AFortPlayerStateZone* SpectatingTarget);                                                  // [0x910b5e4] RequiredAPI|Native|Protected 
	// Function /Script/FortniteUI.LTMWidgetBase.K2_OnBecomeInactive
	// void K2_OnBecomeInactive();                                                                                              // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.LTMWidgetBase.K2_OnBecomeActive
	// void K2_OnBecomeActive();                                                                                                // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.LTMWidgetBase.K2_HasActiveContent
	// bool K2_HasActiveContent();                                                                                              // [0x1d9241c] Event|Protected|BlueprintEvent|Const 
	// Function /Script/FortniteUI.LTMWidgetBase.GetViewingTeam
	// char GetViewingTeam();                                                                                                   // [0x9109800] Final|RequiredAPI|Native|Protected|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.LTMWidgetBase.GetViewingPlayerState
	// AFortPlayerStateAthena* GetViewingPlayerState();                                                                         // [0x91097b4] RequiredAPI|Native|Protected|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/FortniteUI.AshtonWidgetBase
/// Size: 0x0018 (0x000398 - 0x0003B0)
class UAshtonWidgetBase : public ULTMWidgetBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 944;

public:
	CMember(AFortAthenaMutator_Ashton*)                AshtonMutatorRef                                            OFFSET(get<T>, {0x398, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.AshtonWidgetBase.UpdateAllUI
	// void UpdateAllUI(bool bFirstUpdate);                                                                                     // [0x910ca14] Final|Native|Protected 
	// Function /Script/FortniteUI.AshtonWidgetBase.OnVillainRespawnsRemainingChanged
	// void OnVillainRespawnsRemainingChanged();                                                                                // [0x910c430] Final|Native|Protected 
	// Function /Script/FortniteUI.AshtonWidgetBase.OnVillainRespawnCountChanged
	// void OnVillainRespawnCountChanged(int32_t NumRespawnsLeft, float RespawnPercentLeft);                                    // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.AshtonWidgetBase.OnStoneListChanged
	// void OnStoneListChanged();                                                                                               // [0x910c408] Final|Native|Protected 
	// Function /Script/FortniteUI.AshtonWidgetBase.OnStoneChanged
	// void OnStoneChanged(EAshtonStoneType StoneType, EAshtonStoneStateType StoneState);                                       // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.AshtonWidgetBase.OnOpenWidget
	// void OnOpenWidget();                                                                                                     // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.AshtonWidgetBase.OnCloseWidget
	// void OnCloseWidget();                                                                                                    // [0x1d9241c] Event|Public|BlueprintEvent 
};

/// Class /Script/FortniteUI.BallerRaceIntroWidget
/// Size: 0x0008 (0x000398 - 0x0003A0)
class UBallerRaceIntroWidget : public ULTMWidgetBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 928;

public:
	DMember(float)                                     LengthOfCountdown                                           OFFSET(get<float>, {0x398, 4, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.BallerRaceIntroWidget.StartCountdown
	// void StartCountdown();                                                                                                   // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.BallerRaceIntroWidget.ShowIntro
	// void ShowIntro();                                                                                                        // [0x1d9241c] Event|Protected|BlueprintEvent 
};

/// Class /Script/FortniteUI.BarrierWidgetBase
/// Size: 0x0050 (0x000328 - 0x000378)
class UBarrierWidgetBase : public UFortHUDElementWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 888;

public:
	SMember(FBarrierObjectState)                       FriendlyTeamState                                           OFFSET(getStruct<T>, {0x338, 16, 0, 0})
	SMember(FBarrierObjectState)                       EnemyTeamState                                              OFFSET(getStruct<T>, {0x348, 16, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.BarrierWidgetBase.UpdateHealth
	// void UpdateHealth(bool bFriendlyTeam, float HealthPercent, EBarrierFoodTeam FoodTeam, bool bFlashBar);                   // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.BarrierWidgetBase.OnMutatorObjectUpdated
	// void OnMutatorObjectUpdated(FGameplayMutatorObjectDataArray& MutatorArray);                                              // [0x910b9c8] Final|Native|Protected|HasOutParms 
	// Function /Script/FortniteUI.BarrierWidgetBase.OnHandleSpectatingChanged
	// void OnHandleSpectatingChanged(AFortPlayerStateZone* SpectatingTarget);                                                  // [0x910b3f4] Final|Native|Protected 
};

/// Class /Script/FortniteUI.BattleLabRewardWidget
/// Size: 0x00B0 (0x000328 - 0x0003D8)
class UBattleLabRewardWidget : public UFortHUDElementWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 984;

public:
	CMember(TArray<UFortQuestItem*>)                   CompletedQuests                                             OFFSET(get<T>, {0x368, 16, 0, 0})
	CMember(TArray<UFortQuestItem*>)                   NewlyGrantedQuests                                          OFFSET(get<T>, {0x378, 16, 0, 0})
	CMember(TArray<FFortItemQuantityPair>)             GrantedRewards                                              OFFSET(get<T>, {0x388, 16, 0, 0})
	CMember(TArray<UFortQuestItem*>)                   OldQuests                                                   OFFSET(get<T>, {0x398, 16, 0, 0})
	SMember(FFortPrioritizedWidgetData)                PrioritizationData                                          OFFSET(getStruct<T>, {0x3B0, 2, 0, 0})
	SMember(FGameplayTagContainer)                     RequiredTags                                                OFFSET(getStruct<T>, {0x3B8, 32, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.BattleLabRewardWidget.OpenWidget
	// void OpenWidget(FBattleLabDisplayData& DisplayData);                                                                     // [0x1d9241c] Event|Protected|HasOutParms|BlueprintEvent 
	// Function /Script/FortniteUI.BattleLabRewardWidget.OnWidgetIsFinished
	// void OnWidgetIsFinished();                                                                                               // [0x910c4c4] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.BattleLabRewardWidget.HandleOnQuestsGranted
	// void HandleOnQuestsGranted(TArray<UFortQuestItem*>& Quests);                                                             // [0x910a838] Final|Native|Protected|HasOutParms 
	// Function /Script/FortniteUI.BattleLabRewardWidget.HandleOnQuestCompleted
	// void HandleOnQuestCompleted(TArray<UFortQuestItem*>& Quests);                                                            // [0x910a79c] Final|Native|Protected|HasOutParms 
	// Function /Script/FortniteUI.BattleLabRewardWidget.HandleDisplayDynamicQuestUpdate
	// void HandleDisplayDynamicQuestUpdate(UFortQuestObjectiveInfo* QuestObjective, bool DisplayStatusUpdate, bool DisplayAnnouncementUpdate); // [0x9109ca8] Final|Native|Protected 
};

/// Class /Script/FortniteUI.CarmineHUDBase
/// Size: 0x0030 (0x0002C0 - 0x0002F0)
class UCarmineHUDBase : public UUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 752;

public:
};

/// Class /Script/FortniteUI.CobaltWidgetBase
/// Size: 0x0038 (0x000398 - 0x0003D0)
class UCobaltWidgetBase : public ULTMWidgetBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 976;

public:
	CMember(AFortAthenaMutator_Cobalt*)                CobaltMutator                                               OFFSET(get<T>, {0x3A0, 8, 0, 0})
	CMember(TArray<FText>)                             RoundNames                                                  OFFSET(get<T>, {0x3A8, 16, 0, 0})
	SMember(FText)                                     InvalidRoundText                                            OFFSET(getStruct<T>, {0x3B8, 24, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.CobaltWidgetBase.GetCurrentRoundNameIndex
	// int32_t GetCurrentRoundNameIndex();                                                                                      // [0x9108ecc] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/FortniteUI.CobaltAlertWidgetBase
/// Size: 0x0008 (0x0003D0 - 0x0003D8)
class UCobaltAlertWidgetBase : public UCobaltWidgetBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 984;

public:
	DMember(char)                                      LastViewedTeam                                              OFFSET(get<char>, {0x3D0, 1, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.CobaltAlertWidgetBase.UpdateAlertUI
	// void UpdateAlertUI();                                                                                                    // [0x910ca00] Final|Native|Protected 
	// Function /Script/FortniteUI.CobaltAlertWidgetBase.OnUpdateTieBreakerUI
	// void OnUpdateTieBreakerUI(bool bHasTieBreaker);                                                                          // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.CobaltAlertWidgetBase.OnRoundComplete
	// void OnRoundComplete(TArray<char>& WinningTeams);                                                                        // [0x910be34] Final|Native|Protected|HasOutParms 
};

/// Class /Script/FortniteUI.CobaltCountdownWidgetBase
/// Size: 0x0028 (0x0003D0 - 0x0003F8)
class UCobaltCountdownWidgetBase : public UCobaltWidgetBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1016;

public:
	SMember(FText)                                     CountdownMessage                                            OFFSET(getStruct<T>, {0x3D0, 24, 0, 0})
	DMember(float)                                     CountdownTime                                               OFFSET(get<float>, {0x3E8, 4, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.CobaltCountdownWidgetBase.UpdateCountdownText
	// void UpdateCountdownText();                                                                                              // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.CobaltCountdownWidgetBase.HandleTeleportComplete
	// void HandleTeleportComplete();                                                                                           // [0x910ab14] Final|Native|Private 
};

/// Class /Script/FortniteUI.CobaltGamePhaseWidgetBase
/// Size: 0x0038 (0x000398 - 0x0003D0)
class UCobaltGamePhaseWidgetBase : public ULTMWidgetBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 976;

public:
	DMember(float)                                     StormComingWarningTime                                      OFFSET(get<float>, {0x398, 4, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.CobaltGamePhaseWidgetBase.UpdateTimeDisplay
	// void UpdateTimeDisplay(bool bSetWarningFont, FText& NewTimeDisplay);                                                     // [0x1d9241c] Event|Protected|HasOutParms|BlueprintEvent 
	// Function /Script/FortniteUI.CobaltGamePhaseWidgetBase.OnGameStateSet
	// void OnGameStateSet(AFortGameState* InGameState);                                                                        // [0x910b294] Final|Native|Protected 
	// Function /Script/FortniteUI.CobaltGamePhaseWidgetBase.OnGamePhaseStepChanged
	// void OnGamePhaseStepChanged(EAthenaGamePhaseStep GamePhaseStep);                                                         // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.CobaltGamePhaseWidgetBase.HandleCountdownUpdate
	// void HandleCountdownUpdate(int32_t TimeRemaining);                                                                       // [0x9109af8] Final|Native|Protected 
};

/// Class /Script/FortniteUI.CobaltPlayerPortraitWidget
/// Size: 0x0018 (0x0003D0 - 0x0003E8)
class UCobaltPlayerPortraitWidget : public UCobaltWidgetBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1000;

public:
	CMember(UFortLazyImage*)                           AvatarImage                                                 OFFSET(get<T>, {0x3D0, 8, 0, 0})
	CMember(UCommonTextBlock*)                         PlayerNameTextWidget                                        OFFSET(get<T>, {0x3D8, 8, 0, 0})
	CMember(AFortPlayerState*)                         PlayerState                                                 OFFSET(get<T>, {0x3E0, 8, 0, 0})
};

/// Class /Script/FortniteUI.CobaltPlayersLeftWidgetBase
/// Size: 0x0018 (0x000398 - 0x0003B0)
class UCobaltPlayersLeftWidgetBase : public ULTMWidgetBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 944;

public:
};

/// Class /Script/FortniteUI.CobaltPreRoundWidgetBase
/// Size: 0x0000 (0x0003D0 - 0x0003D0)
class UCobaltPreRoundWidgetBase : public UCobaltWidgetBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 976;

public:
};

/// Class /Script/FortniteUI.CobaltRoundCompleteWidgetBase
/// Size: 0x0010 (0x0003D0 - 0x0003E0)
class UCobaltRoundCompleteWidgetBase : public UCobaltWidgetBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 992;

public:
};

/// Class /Script/FortniteUI.CobaltRoundStartWidgetBase
/// Size: 0x0060 (0x0003D0 - 0x000430)
class UCobaltRoundStartWidgetBase : public UCobaltWidgetBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1072;

public:
	CMember(TArray<FCobaltPlayerPortraitIndexInfo>)    UpperBannerPortraitIndexInfos                               OFFSET(get<T>, {0x3F0, 16, 0, 0})
	CMember(TArray<FCobaltPlayerPortraitIndexInfo>)    LowerBannerPortraitIndexInfos                               OFFSET(get<T>, {0x400, 16, 0, 0})
	CMember(TArray<UCobaltPlayerPortraitWidget*>)      PlayerPortraits_Team1                                       OFFSET(get<T>, {0x410, 16, 0, 0})
	CMember(TArray<UCobaltPlayerPortraitWidget*>)      PlayerPortraits_Team2                                       OFFSET(get<T>, {0x420, 16, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.CobaltRoundStartWidgetBase.HandleUpdateVsInfo_BP
	// void HandleUpdateVsInfo_BP(int32_t CurrentActiveRound, FText& RoundName, FText& POIName);                                // [0x1d9241c] Event|Protected|HasOutParms|BlueprintEvent 
	// Function /Script/FortniteUI.CobaltRoundStartWidgetBase.HandleUpdateRoundStartWidgetVisibility_BP
	// void HandleUpdateRoundStartWidgetVisibility_BP(bool bNewVisibility);                                                     // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.CobaltRoundStartWidgetBase.HandleUpdateIntelInfo_BP
	// void HandleUpdateIntelInfo_BP(int32_t CurrentRound, char LastRoundWinningTeam);                                          // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.CobaltRoundStartWidgetBase.HandleShowRoundStartWidget
	// void HandleShowRoundStartWidget(FCobaltWidgetRoundData& RoundData);                                                      // [0x910aa54] Final|Native|Protected|HasOutParms 
	// Function /Script/FortniteUI.CobaltRoundStartWidgetBase.HandleHideRoundStartWidget
	// void HandleHideRoundStartWidget();                                                                                       // [0x9109ed8] Final|Native|Protected 
};

/// Class /Script/FortniteUI.CobaltStatusWidgetBase
/// Size: 0x0028 (0x0003D0 - 0x0003F8)
class UCobaltStatusWidgetBase : public UCobaltWidgetBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1016;

public:
	DMember(char)                                      LastViewedTeam                                              OFFSET(get<char>, {0x3D0, 1, 0, 0})
	CMember(UCommonTextBlock*)                         RoundName                                                   OFFSET(get<T>, {0x3D8, 8, 0, 0})
	DMember(float)                                     CountdownSoundStartTime                                     OFFSET(get<float>, {0x3E0, 4, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.CobaltStatusWidgetBase.UpdateTimerVisuals
	// void UpdateTimerVisuals(float TimeRemaining);                                                                            // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.CobaltStatusWidgetBase.UpdateScoringUI
	// void UpdateScoringUI();                                                                                                  // [0x910cc1c] Final|Native|Protected 
	// Function /Script/FortniteUI.CobaltStatusWidgetBase.ShowTimer
	// void ShowTimer();                                                                                                        // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.CobaltStatusWidgetBase.RoundAdvanced
	// void RoundAdvanced();                                                                                                    // [0x910c508] Final|Native|Protected 
	// Function /Script/FortniteUI.CobaltStatusWidgetBase.OnUpdateTieBreakerUI
	// void OnUpdateTieBreakerUI(bool bHasTieBreaker);                                                                          // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.CobaltStatusWidgetBase.OnUpdateTeamScore
	// void OnUpdateTeamScore(int32_t TeamIndex, int32_t Score, bool bIsTeamLeading, bool bPlayAnimation);                      // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.CobaltStatusWidgetBase.OnTieBreakerChangedSound
	// void OnTieBreakerChangedSound();                                                                                         // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.CobaltStatusWidgetBase.OnResetUI
	// void OnResetUI();                                                                                                        // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.CobaltStatusWidgetBase.OnPlayScoreProgressSound
	// void OnPlayScoreProgressSound(bool bIsLocalTeam);                                                                        // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.CobaltStatusWidgetBase.OnPlayLeadChangedSound
	// void OnPlayLeadChangedSound(bool bTookTheLead);                                                                          // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.CobaltStatusWidgetBase.OnPlayCountdownSound
	// void OnPlayCountdownSound();                                                                                             // [0x1d9241c] Event|Protected|BlueprintEvent 
};

/// Class /Script/FortniteUI.CobaltTournamentBracketNodeWidgetBase
/// Size: 0x0008 (0x0003D0 - 0x0003D8)
class UCobaltTournamentBracketNodeWidgetBase : public UCobaltWidgetBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 984;

public:
	CMember(EBracketNodeState)                         CurrentBracketNodeState                                     OFFSET(get<T>, {0x3D0, 1, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.CobaltTournamentBracketNodeWidgetBase.HandleBracketNodeStateSet_BP
	// void HandleBracketNodeStateSet_BP(EBracketNodeState NewState);                                                           // [0x1d9241c] Event|Protected|BlueprintEvent 
};

/// Class /Script/FortniteUI.CobaltTournamentBracketWidgetBase
/// Size: 0x0020 (0x0003D0 - 0x0003F0)
class UCobaltTournamentBracketWidgetBase : public UCobaltWidgetBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1008;

public:
	CMember(TArray<UCobaltTournamentBracketNodeWidgetBase*>) LocalTeamNodes                                        OFFSET(get<T>, {0x3D0, 16, 0, 0})
	CMember(TArray<UCobaltTournamentBracketNodeWidgetBase*>) EnemyTeamNodes                                        OFFSET(get<T>, {0x3E0, 16, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.CobaltTournamentBracketWidgetBase.UpdateTournamentBracket_BP
	// void UpdateTournamentBracket_BP(int32_t CurrentActiveRound);                                                             // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.CobaltTournamentBracketWidgetBase.UpdateTournamentBracket
	// void UpdateTournamentBracket(int32_t CurrentActiveRound);                                                                // [0x910cc58] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/FortniteUI.DadBroHealthWidget
/// Size: 0x0018 (0x000398 - 0x0003B0)
class UDadBroHealthWidget : public ULTMWidgetBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 944;

public:
	CMember(AFortAthenaMutator_DadBro*)                DadBroMutator                                               OFFSET(get<T>, {0x398, 8, 0, 0})
	DMember(float)                                     BossHealthRatio                                             OFFSET(get<float>, {0x3A4, 4, 0, 0})
	CMember(AFortAIPawn*)                              BossAIPawn                                                  OFFSET(get<T>, {0x3A8, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.DadBroHealthWidget.UpdateFinalBossBattle
	// void UpdateFinalBossBattle();                                                                                            // [0x910cb74] Final|Native|Protected 
	// Function /Script/FortniteUI.DadBroHealthWidget.OnTransitionToNewHealthState
	// void OnTransitionToNewHealthState(EDadBroHealthType NewHealthType);                                                      // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.DadBroHealthWidget.OnNewHealthPercent
	// void OnNewHealthPercent(float NewHealth);                                                                                // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.DadBroHealthWidget.HandleMashPhaseChanged
	// void HandleMashPhaseChanged(int32_t NewPhase);                                                                           // [0x9109eec] Final|Native|Protected 
	// Function /Script/FortniteUI.DadBroHealthWidget.HandleDadBroSpawned
	// void HandleDadBroSpawned(AFortAIPawn* DadBroPawn);                                                                       // [0x9109c0c] Final|Native|Protected 
};

/// Class /Script/FortniteUI.DeimosSurvivalWidgetBase
/// Size: 0x0078 (0x000328 - 0x0003A0)
class UDeimosSurvivalWidgetBase : public UFortHUDElementWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 928;

public:
	CMember(TArray<FSurvivalObjectiveText>)            SurvivalStateDefaultText                                    OFFSET(get<T>, {0x328, 16, 0, 0})
	SMember(FGameplayTag)                              ObjectiveTag                                                OFFSET(getStruct<T>, {0x338, 4, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.DeimosSurvivalWidgetBase.OnUpdateStateText
	// void OnUpdateStateText(FText& StateText);                                                                                // [0x1d9241c] Event|Public|HasOutParms|BlueprintEvent 
	// Function /Script/FortniteUI.DeimosSurvivalWidgetBase.OnUpdateObjectiveIcon
	// void OnUpdateObjectiveIcon(FSurvivalObjectiveIconData& ObjectiveIconData);                                               // [0x1d9241c] Event|Public|HasOutParms|BlueprintEvent 
};

/// Class /Script/FortniteUI.DiscoCaptureWidgetBase
/// Size: 0x0090 (0x000328 - 0x0003B8)
class UDiscoCaptureWidgetBase : public UFortHUDElementWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 952;

public:
	SMember(FDiscoCaptureUIData)                       CaptureUIData                                               OFFSET(getStruct<T>, {0x328, 64, 0, 0})
	SMember(FDiscoCaptureUIData)                       PrevCaptureUIData                                           OFFSET(getStruct<T>, {0x368, 64, 0, 0})
	DMember(char)                                      LastViewedTeam                                              OFFSET(get<char>, {0x3B0, 1, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.DiscoCaptureWidgetBase.UpdateDiscoCaptureUI
	// void UpdateDiscoCaptureUI();                                                                                             // [0x910ca94] Final|Native|Protected 
	// Function /Script/FortniteUI.DiscoCaptureWidgetBase.UpdateAllUI
	// void UpdateAllUI();                                                                                                      // [0x910ca94] Final|Native|Protected 
	// Function /Script/FortniteUI.DiscoCaptureWidgetBase.OnUpdateCaptureUI
	// void OnUpdateCaptureUI(EDiscoCaptureUIState& CaptureState, FText& TextToDisplay, UMaterialInstanceDynamic* ImageMID, float FillAmount); // [0x1d9241c] Event|Protected|HasOutParms|BlueprintEvent 
	// Function /Script/FortniteUI.DiscoCaptureWidgetBase.OnHandleSpectatingChanged
	// void OnHandleSpectatingChanged(AFortPlayerStateZone* SpectatingTarget);                                                  // [0x910b470] Final|Native|Protected 
	// Function /Script/FortniteUI.DiscoCaptureWidgetBase.GetClosestCapturePoint
	// AAthenaCapturePoint* GetClosestCapturePoint(AFortPlayerPawnAthena* ViewPawn);                                            // [0x9108bd8] Final|Native|Protected 
};

/// Class /Script/FortniteUI.DiscoWidgetBase
/// Size: 0x0090 (0x000328 - 0x0003B8)
class UDiscoWidgetBase : public UFortHUDElementWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 952;

public:
	CMember(TArray<FDiscoCaptureIconData>)             CapturePointIconList                                        OFFSET(get<T>, {0x328, 16, 0, 0})
	CMember(TArray<float>)                             PlayScoreProgressSoundPercentagesMild                       OFFSET(get<T>, {0x358, 16, 0, 0})
	CMember(TArray<float>)                             PlayScoreProgressSoundPercentagesMedium                     OFFSET(get<T>, {0x368, 16, 0, 0})
	CMember(TArray<float>)                             PlayScoreProgressSoundPercentagesStrong                     OFFSET(get<T>, {0x378, 16, 0, 0})
	DMember(float)                                     PercentageScoreToPlayCountdown                              OFFSET(get<float>, {0x388, 4, 0, 0})
	DMember(float)                                     PercentageScoreToPlayFinalCountdown                         OFFSET(get<float>, {0x38C, 4, 0, 0})
	DMember(float)                                     ScoreCountdownSoundFrequency                                OFFSET(get<float>, {0x390, 4, 0, 0})
	DMember(bool)                                      bLocalTeamIsScoring                                         OFFSET(get<bool>, {0x394, 1, 0, 0})
	DMember(bool)                                      bEnemyTeamIsScoring                                         OFFSET(get<bool>, {0x395, 1, 0, 0})
	DMember(char)                                      LastViewedTeam                                              OFFSET(get<char>, {0x396, 1, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.DiscoWidgetBase.UpdateAllUI
	// void UpdateAllUI();                                                                                                      // [0x910caa8] Final|Native|Protected 
	// Function /Script/FortniteUI.DiscoWidgetBase.OnUpdateTeamScore
	// void OnUpdateTeamScore(int32_t TeamIndex, FDiscoTeamScoreData& ScoreData);                                               // [0x1d9241c] Event|Protected|HasOutParms|BlueprintEvent 
	// Function /Script/FortniteUI.DiscoWidgetBase.OnUpdateCapturePoint
	// void OnUpdateCapturePoint(int32_t IconIndex, FDiscoCaptureIconData& IconData);                                           // [0x1d9241c] Event|Protected|HasOutParms|BlueprintEvent 
	// Function /Script/FortniteUI.DiscoWidgetBase.OnPlayScoreProgressSound
	// void OnPlayScoreProgressSound(EDiscoScoreProgressTypes ScoreProgressType, bool bIsLocalTeam);                            // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.DiscoWidgetBase.OnMutatorObjectUpdated
	// void OnMutatorObjectUpdated(FGameplayMutatorObjectDataArray& MutatorArray);                                              // [0x910ba80] Final|Native|Protected|HasOutParms 
	// Function /Script/FortniteUI.DiscoWidgetBase.OnHandleSpectatingChanged
	// void OnHandleSpectatingChanged(AFortPlayerStateZone* SpectatingTarget);                                                  // [0x910b4ec] Final|Native|Protected 
	// Function /Script/FortniteUI.DiscoWidgetBase.OnCountdownTimerUpdate
	// void OnCountdownTimerUpdate();                                                                                           // [0x910b138] Final|Native|Protected 
};

/// Class /Script/FortniteUI.FF2CaptureWarningWidget
/// Size: 0x0000 (0x000398 - 0x000398)
class UFF2CaptureWarningWidget : public ULTMWidgetBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 920;

public:
};

/// Class /Script/FortniteUI.FF2StatusWidget
/// Size: 0x0010 (0x000398 - 0x0003A8)
class UFF2StatusWidget : public ULTMWidgetBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 936;

public:
};

/// Class /Script/FortniteUI.FortActivatablePanelLTM
/// Size: 0x0018 (0x000400 - 0x000418)
class UFortActivatablePanelLTM : public UCommonActivatableWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1048;

public:
	CMember(UClass*)                                   MutatorClassToWaitFor                                       OFFSET(get<T>, {0x408, 8, 0, 0})
	CMember(AFortGameplayMutator*)                     Mutator                                                     OFFSET(get<T>, {0x410, 8, 0, 0})
};

/// Class /Script/FortniteUI.FortLTMVictoryWidgetBase
/// Size: 0x0000 (0x0002D0 - 0x0002D0)
class UFortLTMVictoryWidgetBase : public UFortUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 720;

public:
};

/// Class /Script/FortniteUI.FortPerkVictoryScreen
/// Size: 0x0000 (0x000490 - 0x000490)
class UFortPerkVictoryScreen : public UFortPostGameScreen
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1168;

public:
};

/// Class /Script/FortniteUI.GalileoCountdownWidget
/// Size: 0x0000 (0x000328 - 0x000328)
class UGalileoCountdownWidget : public UFortHUDElementWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 808;

public:
};

/// Class /Script/FortniteUI.GalileoWrapperWidget
/// Size: 0x0008 (0x0002E8 - 0x0002F0)
class UGalileoWrapperWidget : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 752;

public:
	CMember(UClass*)                                   MutatorClassToWaitFor                                       OFFSET(get<T>, {0x2E8, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.GalileoWrapperWidget.OnResumeGame
	// void OnResumeGame();                                                                                                     // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.GalileoWrapperWidget.NativeOnResumeGame
	// void NativeOnResumeGame();                                                                                               // [0x910b05c] Final|Native|Protected 
};

/// Class /Script/FortniteUI.GameStartCountdownWidget
/// Size: 0x0010 (0x000398 - 0x0003A8)
class UGameStartCountdownWidget : public ULTMWidgetBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 936;

public:
	CMember(USoundBase*)                               CountdownMusicStinger                                       OFFSET(get<T>, {0x398, 8, 0, 0})
	CMember(AFortAthenaMutator_GameStartCountdown*)    GameStartCountdownMutator                                   OFFSET(get<T>, {0x3A0, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.GameStartCountdownWidget.HandleGameStartCountdownEnd
	// void HandleGameStartCountdownEnd();                                                                                      // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.GameStartCountdownWidget.HandleGameStartCountdownBegin
	// void HandleGameStartCountdownBegin(float Duration, int32_t StartingCountdownInteger);                                    // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.GameStartCountdownWidget.GetCountdownMusicStinger
	// USoundBase* GetCountdownMusicStinger();                                                                                  // [0x26d2610] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/FortniteUI.GenericLeaderboardDisplayWidgetBase
/// Size: 0x0000 (0x000398 - 0x000398)
class UGenericLeaderboardDisplayWidgetBase : public ULTMWidgetBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 920;

public:
};

/// Class /Script/FortniteUI.GGWidgetBase
/// Size: 0x0010 (0x000398 - 0x0003A8)
class UGGWidgetBase : public ULTMWidgetBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 936;

public:
	CMember(AFortAthenaMutator_GG*)                    BaseMutator                                                 OFFSET(get<T>, {0x398, 8, 0, 0})
	CMember(TWeakObjectPtr<UWorld*>)                   CachedWorld                                                 OFFSET(get<T>, {0x3A0, 8, 0, 0})
};

/// Class /Script/FortniteUI.GGCenterDisplayWidgetBase
/// Size: 0x0068 (0x0003A8 - 0x000410)
class UGGCenterDisplayWidgetBase : public UGGWidgetBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1040;

public:
	DMember(int32_t)                                   NumberOfSlotsFlankingLocalPlayer                            OFFSET(get<int32_t>, {0x3A8, 4, 0, 0})
	CMember(TArray<FGGCenterDisplayEntry>)             CenterDisplayEntries                                        OFFSET(get<T>, {0x3B0, 16, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.GGCenterDisplayWidgetBase.UpdateDisplayWith
	// void UpdateDisplayWith(TArray<FGGCenterDisplayEntry>& Entries, bool bUpdatingForLocalPlayer);                            // [0x1d9241c] Event|Protected|HasOutParms|BlueprintEvent 
	// Function /Script/FortniteUI.GGCenterDisplayWidgetBase.OnOtherPlayerAwardedWeapon
	// void OnOtherPlayerAwardedWeapon(AFortPlayerStateAthena* OtherPlayer, UFortWeaponItemDefinition* NextWeapon);             // [0x910bbfc] Final|Native|Protected 
	// Function /Script/FortniteUI.GGCenterDisplayWidgetBase.OnLocalPlayerAwardedWeapon
	// void OnLocalPlayerAwardedWeapon(UFortWeaponItemDefinition* NextWeapon);                                                  // [0x910b8b8] Final|Native|Protected 
};

/// Class /Script/FortniteUI.GGInventoryWidgetBase
/// Size: 0x0030 (0x0003A8 - 0x0003D8)
class UGGInventoryWidgetBase : public UGGWidgetBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 984;

public:
	CMember(UFortWeaponItemDefinition*)                NextItemToDisplay                                           OFFSET(get<T>, {0x3A8, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.GGInventoryWidgetBase.UpdateWidgetForNewWeapon
	// void UpdateWidgetForNewWeapon(UTexture2D* Texture, EFortRarity Rarity);                                                  // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.GGInventoryWidgetBase.OnLocalPlayerNewWeapon
	// void OnLocalPlayerNewWeapon(UFortWeaponItemDefinition* NewWeapon);                                                       // [0x910b934] Final|Native|Private 
	// Function /Script/FortniteUI.GGInventoryWidgetBase.LastWeaponReached
	// void LastWeaponReached();                                                                                                // [0x1d9241c] Event|Protected|BlueprintEvent 
};

/// Class /Script/FortniteUI.GGProgressWidget
/// Size: 0x0020 (0x000398 - 0x0003B8)
class UGGProgressWidget : public ULTMWidgetBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 952;

public:
	DMember(int32_t)                                   PointsToGoalThreshold                                       OFFSET(get<int32_t>, {0x398, 4, 0, 0})
	CMember(TArray<FFortInGameLeaderboardPlacementData>) TopPlacedEnemies                                          OFFSET(get<T>, {0x3A0, 16, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.GGProgressWidget.UpdateTopThreeEnemies
	// void UpdateTopThreeEnemies(TArray<FFortInGameLeaderboardPlacementData>& TopThreeEnemies);                                // [0x1d9241c] Event|Protected|HasOutParms|BlueprintEvent 
	// Function /Script/FortniteUI.GGProgressWidget.UpdateLocalPlayer
	// void UpdateLocalPlayer(FFortInGameLeaderboardPlacementData& LocalPlayer);                                                // [0x1d9241c] Event|Protected|HasOutParms|BlueprintEvent 
	// Function /Script/FortniteUI.GGProgressWidget.OnPlayerNearGoal
	// void OnPlayerNearGoal(FFortInGameLeaderboardPlacementData& PlayerNearGoal);                                              // [0x1d9241c] Event|Protected|HasOutParms|BlueprintEvent 
	// Function /Script/FortniteUI.GGProgressWidget.OnLeaderboardUpdate
	// void OnLeaderboardUpdate(TArray<FFortInGameLeaderboardPlacementData>& Data);                                             // [0x910b684] Final|Native|Protected|HasOutParms 
};

/// Class /Script/FortniteUI.HeistWidgetBase
/// Size: 0x0050 (0x000328 - 0x000378)
class UHeistWidgetBase : public UFortHUDElementWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 888;

public:
	CMember(EHeistExitCraftUIState)                    CurrExitCraftUIState                                        OFFSET(get<T>, {0x348, 1, 0, 0})
	DMember(bool)                                      bDisplayBlingRow                                            OFFSET(get<bool>, {0x349, 1, 0, 0})
	DMember(bool)                                      bCanDisplayVanUI                                            OFFSET(get<bool>, {0x34A, 1, 0, 0})
	SMember(FGameplayTag)                              SafeSupplyDropTag                                           OFFSET(getStruct<T>, {0x34C, 4, 0, 0})
	SMember(FGameplayTag)                              BlingItemTag                                                OFFSET(getStruct<T>, {0x350, 4, 0, 0})
	SMember(FGameplayTag)                              CarryingBlingItemTag                                        OFFSET(getStruct<T>, {0x354, 4, 0, 0})
	DMember(int32_t)                                   CurrBlingSupplyDropCount                                    OFFSET(get<int32_t>, {0x358, 4, 0, 0})
	DMember(int32_t)                                   CurrBlingItemCount                                          OFFSET(get<int32_t>, {0x35C, 4, 0, 0})
	DMember(int32_t)                                   CurrBlingEnemyCount                                         OFFSET(get<int32_t>, {0x360, 4, 0, 0})
	DMember(int32_t)                                   CurrBlingAllyCount                                          OFFSET(get<int32_t>, {0x364, 4, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.HeistWidgetBase.UpdateAllUI
	// void UpdateAllUI();                                                                                                      // [0x910cabc] Final|Native|Protected 
	// Function /Script/FortniteUI.HeistWidgetBase.SetExitCraftUIState
	// void SetExitCraftUIState(EHeistExitCraftUIState NewState);                                                               // [0x910c51c] Final|Native|Protected 
	// Function /Script/FortniteUI.HeistWidgetBase.OnUpdateStateTimeText
	// void OnUpdateStateTimeText(FText& TimeText, EHeistExitCraftUIState CurrState);                                           // [0x1d9241c] Event|Protected|HasOutParms|BlueprintEvent 
	// Function /Script/FortniteUI.HeistWidgetBase.OnUpdateStateText
	// void OnUpdateStateText(FText& StateText, EHeistExitCraftUIState CurrState);                                              // [0x1d9241c] Event|Protected|HasOutParms|BlueprintEvent 
	// Function /Script/FortniteUI.HeistWidgetBase.OnUpdateExitCraftIcon
	// void OnUpdateExitCraftIcon(FHeistExitCraftIconData& ExitCraftIconData);                                                  // [0x1d9241c] Event|Protected|HasOutParms|BlueprintEvent 
	// Function /Script/FortniteUI.HeistWidgetBase.OnUpdateBlingIcon
	// void OnUpdateBlingIcon(FHeistBlingIconData& BlingIconData);                                                              // [0x1d9241c] Event|Protected|HasOutParms|BlueprintEvent 
	// Function /Script/FortniteUI.HeistWidgetBase.OnSpecialActorRemoved
	// void OnSpecialActorRemoved(FSpecialActorRepData& SpecialActorData);                                                      // [0x910c364] Final|Native|Protected|HasOutParms 
	// Function /Script/FortniteUI.HeistWidgetBase.OnSpecialActorAdded
	// void OnSpecialActorAdded(FSpecialActorRepData& SpecialActorData);                                                        // [0x910c364] Final|Native|Protected|HasOutParms 
	// Function /Script/FortniteUI.HeistWidgetBase.OnMutatorObjectUpdated
	// void OnMutatorObjectUpdated(FGameplayMutatorObjectDataArray& MutatorArray);                                              // [0x910bb38] Final|Native|Protected|HasOutParms 
	// Function /Script/FortniteUI.HeistWidgetBase.OnHandleSpectatingChanged
	// void OnHandleSpectatingChanged(AFortPlayerStateZone* SpectatingTarget);                                                  // [0x910b568] Final|Native|Protected 
	// Function /Script/FortniteUI.HeistWidgetBase.OnExitCraftsUIChanged
	// void OnExitCraftsUIChanged(EHeistExitCraftUIState NewState);                                                             // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.HeistWidgetBase.OnDisplayExitCraftUI
	// void OnDisplayExitCraftUI(bool bDisplay);                                                                                // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.HeistWidgetBase.OnDisplayBlingUI
	// void OnDisplayBlingUI(bool bDisplay);                                                                                    // [0x1d9241c] Event|Protected|BlueprintEvent 
};

/// Class /Script/FortniteUI.InfiltrationBaseWidget
/// Size: 0x0008 (0x000398 - 0x0003A0)
class UInfiltrationBaseWidget : public ULTMWidgetBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 928;

public:
	CMember(TWeakObjectPtr<AFortAthenaMutator_Infiltration*>) CachedMutator                                        OFFSET(get<T>, {0x398, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.InfiltrationBaseWidget.OnMutatorReady
	// void OnMutatorReady();                                                                                                   // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.InfiltrationBaseWidget.OnIsCurrentlyDefendedChanged
	// void OnIsCurrentlyDefendedChanged(bool bNewBeingDefended);                                                               // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.InfiltrationBaseWidget.OnIntelStateChanged
	// void OnIntelStateChanged(EIntelStateEnum NewState);                                                                      // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.InfiltrationBaseWidget.OnGroundTimerChanged
	// void OnGroundTimerChanged(float NewTimeRemaining);                                                                       // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.InfiltrationBaseWidget.IsLocalPlayerDefending
	// bool IsLocalPlayerDefending();                                                                                           // [0x910add0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.InfiltrationBaseWidget.IsLocalPlayerAttacking
	// bool IsLocalPlayerAttacking();                                                                                           // [0x910acd0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.InfiltrationBaseWidget.IsBeingHeldByLocalPlayer
	// bool IsBeingHeldByLocalPlayer();                                                                                         // [0x910ac2c] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.InfiltrationBaseWidget.GetNumOfRounds
	// int32_t GetNumOfRounds();                                                                                                // [0x9109248] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.InfiltrationBaseWidget.GetIsCurrentlyDefended
	// bool GetIsCurrentlyDefended();                                                                                           // [0x9109108] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.InfiltrationBaseWidget.GetGroundTimeRemaining
	// float GetGroundTimeRemaining();                                                                                          // [0x9109050] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.InfiltrationBaseWidget.GetDefendingTeam
	// char GetDefendingTeam();                                                                                                 // [0x9108f08] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.InfiltrationBaseWidget.GetCurrentRound
	// int32_t GetCurrentRound();                                                                                               // [0x9108e3c] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.InfiltrationBaseWidget.GetCurrentIntelState
	// EIntelStateEnum GetCurrentIntelState();                                                                                  // [0x9108e04] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.InfiltrationBaseWidget.GetAttackingTeam
	// char GetAttackingTeam();                                                                                                 // [0x9108ad8] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/FortniteUI.InfiltrationPerkSelectContainerWidget
/// Size: 0x0138 (0x000398 - 0x0004D0)
class UInfiltrationPerkSelectContainerWidget : public ULTMWidgetBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1232;

public:
	CMember(UClass*)                                   PerkPanelClass                                              OFFSET(get<T>, {0x398, 8, 0, 0})
	SMember(FPerkMutatorData)                          MutatorData                                                 OFFSET(getStruct<T>, {0x3A0, 264, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.InfiltrationPerkSelectContainerWidget.PerkSelectionEnabled
	// bool PerkSelectionEnabled();                                                                                             // [0x2c6cedc] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/FortniteUI.InfiltrationPerkSelectionPanel
/// Size: 0x0148 (0x000418 - 0x000560)
class UInfiltrationPerkSelectionPanel : public UFortActivatablePanelLTM
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1376;

public:
	CMember(TWeakObjectPtr<AFortAthenaMutator_PerkSystemMutator*>) CachedMutator                                   OFFSET(get<T>, {0x418, 8, 0, 0})
	CMember(TArray<UPerkSelectionEntryWidget*>)        EntryWidgets                                                OFFSET(get<T>, {0x420, 16, 0, 0})
	CMember(UPerkIntroScreenWidget*)                   PerkIntroScreenWidget                                       OFFSET(get<T>, {0x430, 8, 0, 0})
	SMember(FPerkMutatorData)                          MutatorData                                                 OFFSET(getStruct<T>, {0x438, 264, 0, 0})
	CMember(UOverlay*)                                 PerkIntroOverlay                                            OFFSET(get<T>, {0x540, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.InfiltrationPerkSelectionPanel.UpdateBackgroundImage
	// void UpdateBackgroundImage(bool bShouldShowBackground);                                                                  // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.InfiltrationPerkSelectionPanel.StartClosingWidget
	// void StartClosingWidget();                                                                                               // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.InfiltrationPerkSelectionPanel.SetTimeRemaining
	// void SetTimeRemaining(float TimeRemaining);                                                                              // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.InfiltrationPerkSelectionPanel.SetReRollCount
	// void SetReRollCount(int32_t NewCount);                                                                                   // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.InfiltrationPerkSelectionPanel.OnSelectionMade
	// void OnSelectionMade(UPerkSelectionEntryWidget* Widget);                                                                 // [0x910c044] Final|Native|Protected 
	// Function /Script/FortniteUI.InfiltrationPerkSelectionPanel.OnReRollSelected
	// void OnReRollSelected();                                                                                                 // [0x910bde0] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.InfiltrationPerkSelectionPanel.OnPerkIntroFinished
	// void OnPerkIntroFinished();                                                                                              // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.InfiltrationPerkSelectionPanel.NativeOnPerkIntroFinished
	// void NativeOnPerkIntroFinished();                                                                                        // [0x910b048] Final|Native|Protected 
	// Function /Script/FortniteUI.InfiltrationPerkSelectionPanel.AttempShowPerkIntro
	// void AttempShowPerkIntro();                                                                                              // [0x91089d4] Final|Native|Protected|BlueprintCallable 
};

/// Class /Script/FortniteUI.InfiltrationPlacementOverlay
/// Size: 0x0018 (0x000348 - 0x000360)
class UInfiltrationPlacementOverlay : public UPostGamePlacementOverlay
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 864;

public:
};

/// Class /Script/FortniteUI.PerkIntroScreenWidget
/// Size: 0x0070 (0x0002E8 - 0x000358)
class UPerkIntroScreenWidget : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 856;

public:
	SMember(FMulticastInlineDelegate)                  OnPerkIntroFinishedEvent                                    OFFSET(getStruct<T>, {0x2E8, 16, 0, 0})
	CMember(TArray<FPerkPipData>)                      PreviousPerkPipData                                         OFFSET(get<T>, {0x2F8, 16, 0, 0})
	CMember(TArray<FPerkPipData>)                      NewPerkPipData                                              OFFSET(get<T>, {0x308, 16, 0, 0})
	CMember(TArray<FPerkPipData>)                      PerkPipData                                                 OFFSET(get<T>, {0x318, 16, 0, 0})
	SMember(FRoundTechDataCache)                       StartRoundCache                                             OFFSET(getStruct<T>, {0x328, 40, 0, 0})
	SMember(FGameplayTag)                              FactionTag                                                  OFFSET(getStruct<T>, {0x350, 4, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.PerkIntroScreenWidget.StartPerkScreenIntro
	// void StartPerkScreenIntro();                                                                                             // [0x1a6975c] Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.PerkIntroScreenWidget.PerkIntroFinished
	// void PerkIntroFinished();                                                                                                // [0x910c4f4] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.PerkIntroScreenWidget.GatherPerkPipData
	// void GatherPerkPipData();                                                                                                // [0x1339cf4] Native|Public|BlueprintCallable 
};

/// Class /Script/FortniteUI.InfiltrationRoundInfoWidget
/// Size: 0x0040 (0x000358 - 0x000398)
class UInfiltrationRoundInfoWidget : public UPerkIntroScreenWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 920;

public:
	DMember(int32_t)                                   CachedRoundIndex                                            OFFSET(get<int32_t>, {0x358, 4, 0, 0})
	DMember(char)                                      WinningTeam                                                 OFFSET(get<char>, {0x35C, 1, 0, 0})
	DMember(char)                                      AttackingTeam                                               OFFSET(get<char>, {0x35D, 1, 0, 0})
	DMember(char)                                      DefendingTeam                                               OFFSET(get<char>, {0x35E, 1, 0, 0})
	DMember(char)                                      NextRoundAttackingTeam                                      OFFSET(get<char>, {0x35F, 1, 0, 0})
	DMember(char)                                      NextRoundDefendingTeam                                      OFFSET(get<char>, {0x360, 1, 0, 0})
	CMember(UClass*)                                   MutatorClassToWaitFor                                       OFFSET(get<T>, {0x368, 8, 0, 0})
	CMember(TScriptInterface<Class>)                   CachedMutator                                               OFFSET(get<T>, {0x370, 16, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.InfiltrationRoundInfoWidget.ShouldSkipWinLossScreen
	// bool ShouldSkipWinLossScreen();                                                                                          // [0x910c9a4] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.InfiltrationRoundInfoWidget.ShouldPlayRoundEndStinger
	// bool ShouldPlayRoundEndStinger();                                                                                        // [0x910c95c] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.InfiltrationRoundInfoWidget.ShouldPlayFactionIntro
	// bool ShouldPlayFactionIntro();                                                                                           // [0x910c914] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.InfiltrationRoundInfoWidget.ShouldModifyAttackingDefendingText
	// bool ShouldModifyAttackingDefendingText(FText& OutAttackingDefendingText, bool bLocalTeamIsAttackers);                   // [0x910c790] Final|Native|Protected|HasOutParms|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.InfiltrationRoundInfoWidget.SetWinningTeam
	// void SetWinningTeam(char NewWinningTeam);                                                                                // [0x910c700] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.InfiltrationRoundInfoWidget.OnReadyToShowStuff
	// void OnReadyToShowStuff(int32_t CurrentRound, char LastRoundWinningTeam);                                                // [0x1d9241c] Event|Protected|BlueprintCallable|BlueprintEvent 
	// Function /Script/FortniteUI.InfiltrationRoundInfoWidget.OnReadyToShowIntro
	// void OnReadyToShowIntro();                                                                                               // [0x1d9241c] Event|Protected|BlueprintCallable|BlueprintEvent 
	// Function /Script/FortniteUI.InfiltrationRoundInfoWidget.IsLocalPlayerDefendingNextRound
	// bool IsLocalPlayerDefendingNextRound();                                                                                  // [0x910ae98] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.InfiltrationRoundInfoWidget.IsLocalPlayerDefending
	// bool IsLocalPlayerDefending();                                                                                           // [0x910ae18] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.InfiltrationRoundInfoWidget.IsLocalPlayerAttackingNextRound
	// bool IsLocalPlayerAttackingNextRound();                                                                                  // [0x910ad98] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.InfiltrationRoundInfoWidget.IsLocalPlayerAttacking
	// bool IsLocalPlayerAttacking();                                                                                           // [0x910ad18] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.InfiltrationRoundInfoWidget.HasWinningTeam
	// bool HasWinningTeam();                                                                                                   // [0x910abbc] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.InfiltrationRoundInfoWidget.GetViewingTeam
	// char GetViewingTeam();                                                                                                   // [0x91097dc] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.InfiltrationRoundInfoWidget.GetRoundResultsText
	// void GetRoundResultsText(FText& OutResultsText, bool bLocalTeamIsAttackers, bool bLocalTeamIsWinners);                   // [0x9109310] Final|Native|Protected|HasOutParms|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.InfiltrationRoundInfoWidget.GetRoundIntroFactionSound
	// USoundBase* GetRoundIntroFactionSound(bool bLocalTeamIsAttackers);                                                       // [0x9109260] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.InfiltrationRoundInfoWidget.GetFirstRound
	// int32_t GetFirstRound();                                                                                                 // [0x9109008] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.InfiltrationRoundInfoWidget.GetDefendingTeam
	// char GetDefendingTeam();                                                                                                 // [0x9108f78] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.InfiltrationRoundInfoWidget.GetAttackingTeam
	// char GetAttackingTeam();                                                                                                 // [0x9108b48] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/FortniteUI.InfiltrationSelectedPerksWidget
/// Size: 0x0020 (0x000398 - 0x0003B8)
class UInfiltrationSelectedPerksWidget : public ULTMWidgetBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 952;

public:
	CMember(TWeakObjectPtr<AFortAthenaMutator_Infiltration*>) CachedMutator                                        OFFSET(get<T>, {0x398, 8, 0, 0})
	CMember(TArray<UFortSpyTechItemDefinition*>)       CurrentDisplayedPerks                                       OFFSET(get<T>, {0x3A0, 16, 0, 0})
	SMember(FGameplayTag)                              FilterTag                                                   OFFSET(getStruct<T>, {0x3B0, 4, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.InfiltrationSelectedPerksWidget.UpdatePerks
	// void UpdatePerks();                                                                                                      // [0x1d9241c] Event|Protected|BlueprintEvent 
};

/// Class /Script/FortniteUI.InfiltrationIntelStatusWidget
/// Size: 0x0018 (0x0002E8 - 0x000300)
class UInfiltrationIntelStatusWidget : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 768;

public:
	DMember(int32_t)                                   SpawnerIndex                                                OFFSET(get<int32_t>, {0x2E8, 4, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.InfiltrationIntelStatusWidget.UpdateTimerVisuals
	// void UpdateTimerVisuals(float TimeRemaining, float TotalTime);                                                           // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.InfiltrationIntelStatusWidget.SetIsGroundTimer
	// void SetIsGroundTimer(bool bIsGroundTimer);                                                                              // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.InfiltrationIntelStatusWidget.SetIntelState
	// void SetIntelState(EIntelStateEnum NewState);                                                                            // [0x1d9241c] Event|Public|BlueprintEvent 
};

/// Class /Script/FortniteUI.InfiltrationStatusWidget
/// Size: 0x0148 (0x000398 - 0x0004E0)
class UInfiltrationStatusWidget : public ULTMWidgetBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1248;

public:
	SMember(FInfiltrationModeState)                    PrevModeState                                               OFFSET(getStruct<T>, {0x398, 48, 0, 0})
	CMember(TArray<UInfiltrationIntelStatusWidget*>)   IntelStatusWidgets                                          OFFSET(get<T>, {0x3C8, 16, 0, 0})
	CMember(TMap<EIntelStateEnum, USoundBase*>)        AttackerAudioCues                                           OFFSET(get<T>, {0x3D8, 80, 0, 0})
	CMember(TMap<EIntelStateEnum, USoundBase*>)        DefenderAudioCues                                           OFFSET(get<T>, {0x428, 80, 0, 0})
	CMember(TMap<EIntelStateEnum, USoundBase*>)        SpamSounds                                                  OFFSET(get<T>, {0x478, 80, 0, 0})
	DMember(float)                                     SpamThrottle                                                OFFSET(get<float>, {0x4C8, 4, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.InfiltrationStatusWidget.IsLocalPlayerDefending
	// bool IsLocalPlayerDefending();                                                                                           // [0x910ae50] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.InfiltrationStatusWidget.IsLocalPlayerAttacking
	// bool IsLocalPlayerAttacking();                                                                                           // [0x910ad50] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.InfiltrationStatusWidget.IsCurrentlyADraw
	// bool IsCurrentlyADraw();                                                                                                 // [0x910acb8] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.InfiltrationStatusWidget.GetSoundFromIntelState
	// USoundBase* GetSoundFromIntelState(EIntelStateEnum InState, bool bIsDefender);                                           // [0x9109530] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.InfiltrationStatusWidget.GetNumOfRounds
	// int32_t GetNumOfRounds();                                                                                                // [0x9109248] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.InfiltrationStatusWidget.GetDefendingTeam
	// char GetDefendingTeam();                                                                                                 // [0x9108fe4] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.InfiltrationStatusWidget.GetCurrentRound
	// int32_t GetCurrentRound();                                                                                               // [0x9108e84] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.InfiltrationStatusWidget.GetAttackingTeam
	// char GetAttackingTeam();                                                                                                 // [0x9108bb4] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/FortniteUI.LimitedLivesCounterWidget
/// Size: 0x0020 (0x000398 - 0x0003B8)
class ULimitedLivesCounterWidget : public ULTMWidgetBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 952;

public:
	CMember(TWeakObjectPtr<AFortPlayerStateAthena*>)   CurrentPlayerState                                          OFFSET(get<T>, {0x398, 8, 0, 0})
	DMember(int32_t)                                   MaxLives                                                    OFFSET(get<int32_t>, {0x3A4, 4, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.LimitedLivesCounterWidget.OnPlayerDied
	// void OnPlayerDied(AFortPlayerStateAthena* DeadPlayer);                                                                   // [0x910bd5c] Native|Protected     
	// Function /Script/FortniteUI.LimitedLivesCounterWidget.OnLivesCountUpdated
	// void OnLivesCountUpdated(int32_t NewCount);                                                                              // [0x910b7b4] Native|Event|Protected|BlueprintEvent 
};

/// Class /Script/FortniteUI.LoadoutWarningWidget
/// Size: 0x0000 (0x000398 - 0x000398)
class ULoadoutWarningWidget : public ULTMWidgetBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 920;

public:
};

/// Class /Script/FortniteUI.LTMCountdownWidgetBase
/// Size: 0x0058 (0x000328 - 0x000380)
class ULTMCountdownWidgetBase : public UFortHUDElementWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 896;

public:
	SMember(FFortPrioritizedWidgetData)                PrioritizationData                                          OFFSET(getStruct<T>, {0x368, 2, 0, 0})
	CMember(TArray<FFortCountdownSounds>)              TrackList                                                   OFFSET(get<T>, {0x370, 16, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.LTMCountdownWidgetBase.OnFinalCountdownStarted
	// void OnFinalCountdownStarted(int32_t TimeRemaining);                                                                     // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.LTMCountdownWidgetBase.OnCountdownUpdate
	// void OnCountdownUpdate(int32_t TimeRemaining);                                                                           // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.LTMCountdownWidgetBase.OnCountdownStarted
	// void OnCountdownStarted(int32_t TimeRemaining);                                                                          // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.LTMCountdownWidgetBase.OnCountdownFinished
	// void OnCountdownFinished();                                                                                              // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.LTMCountdownWidgetBase.OnCountdownActivated
	// void OnCountdownActivated();                                                                                             // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.LTMCountdownWidgetBase.HandleFinalCountdownStarted
	// void HandleFinalCountdownStarted(int32_t TimeRemaining);                                                                 // [0x9109e58] Final|Native|Protected 
	// Function /Script/FortniteUI.LTMCountdownWidgetBase.HandleCountdownUpdate
	// void HandleCountdownUpdate(int32_t TimeRemaining);                                                                       // [0x9109b78] Final|Native|Protected 
	// Function /Script/FortniteUI.LTMCountdownWidgetBase.HandleCountdownStarted
	// void HandleCountdownStarted(int32_t TimeRemaining);                                                                      // [0x91099f8] Final|Native|Protected 
	// Function /Script/FortniteUI.LTMCountdownWidgetBase.HandleCountdownFinished
	// void HandleCountdownFinished();                                                                                          // [0x91099d0] Final|Native|Protected 
	// Function /Script/FortniteUI.LTMCountdownWidgetBase.GetTimeText
	// FText GetTimeText(int32_t TimeRemaining);                                                                                // [0x91096d4] Final|Native|Protected|BlueprintCallable 
};

/// Class /Script/FortniteUI.LTMPreRoundWidgetBase
/// Size: 0x0008 (0x000398 - 0x0003A0)
class ULTMPreRoundWidgetBase : public ULTMWidgetBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 928;

public:
};

/// Class /Script/FortniteUI.MashBossBattleWidget
/// Size: 0x0018 (0x000398 - 0x0003B0)
class UMashBossBattleWidget : public ULTMWidgetBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 944;

public:
	CMember(AFortAthenaMutator_Mash*)                  MashMutatorRef                                              OFFSET(get<T>, {0x398, 8, 0, 0})
	DMember(float)                                     CurrentBossHealth                                           OFFSET(get<float>, {0x3A0, 4, 0, 0})
	DMember(float)                                     TotalBossHealth                                             OFFSET(get<float>, {0x3A4, 4, 0, 0})
	DMember(float)                                     BossHealthRatio                                             OFFSET(get<float>, {0x3A8, 4, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.MashBossBattleWidget.UpdateBossBattle
	// void UpdateBossBattle(FMashBossHealthShieldData& BossHealthShieldData);                                                  // [0x910cad0] Final|Native|Protected|HasOutParms 
	// Function /Script/FortniteUI.MashBossBattleWidget.OnBossHealthUpdate
	// void OnBossHealthUpdate();                                                                                               // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.MashBossBattleWidget.OnBossFightStarted
	// void OnBossFightStarted();                                                                                               // [0x1d9241c] Event|Public|BlueprintEvent 
};

/// Class /Script/FortniteUI.MashPhaseWidget
/// Size: 0x0030 (0x000398 - 0x0003C8)
class UMashPhaseWidget : public ULTMWidgetBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 968;

public:
	CMember(TEnumAsByte<EMashPhase>)                   CurrentPhase                                                OFFSET(get<T>, {0x398, 1, 0, 0})
	DMember(int32_t)                                   CurrentObjectiveAreaIndex                                   OFFSET(get<int32_t>, {0x3A8, 4, 0, 0})
	CMember(AFortAthenaMutator_Mash*)                  MashMutatorRef                                              OFFSET(get<T>, {0x3B0, 8, 0, 0})
	CMember(AFortPlayerControllerAthena*)              CachedLocalPlayerController                                 OFFSET(get<T>, {0x3B8, 8, 0, 0})
	DMember(bool)                                      CachedIsLocalPlayerAlive                                    OFFSET(get<bool>, {0x3C0, 1, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.MashPhaseWidget.OnPhaseChanged
	// void OnPhaseChanged(TEnumAsByte<EMashPhase> NewPhase, int32_t CurrentObjectiveIndex, int32_t TotalObjectiveArea);        // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.MashPhaseWidget.OnMashBossPawnChanged
	// void OnMashBossPawnChanged(AFortPawn* NewBossPawn);                                                                      // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.MashPhaseWidget.OnLocalPlayerDead
	// void OnLocalPlayerDead();                                                                                                // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.MashPhaseWidget.OnLocalPlayerAlive
	// void OnLocalPlayerAlive();                                                                                               // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.MashPhaseWidget.OnCountdownUpdate
	// void OnCountdownUpdate(int32_t TimeRemaining);                                                                           // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.MashPhaseWidget.OnCountdownStarted
	// void OnCountdownStarted(int32_t TimeRemaining);                                                                          // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.MashPhaseWidget.OnCountdownFinished
	// void OnCountdownFinished();                                                                                              // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.MashPhaseWidget.HandlePlayersLeftChanged
	// void HandlePlayersLeftChanged(int32_t InPlayersLeft);                                                                    // [0x910a8d4] Final|Native|Protected 
	// Function /Script/FortniteUI.MashPhaseWidget.HandleMashPhaseChanged
	// void HandleMashPhaseChanged(int32_t NewPhase);                                                                           // [0x910a014] Final|Native|Protected 
	// Function /Script/FortniteUI.MashPhaseWidget.HandleCountdownUpdate
	// void HandleCountdownUpdate();                                                                                            // [0x9109bf8] Final|Native|Protected 
	// Function /Script/FortniteUI.MashPhaseWidget.HandleCountdownStarted
	// void HandleCountdownStarted(int32_t TimeRemaining);                                                                      // [0x9109a78] Final|Native|Protected 
	// Function /Script/FortniteUI.MashPhaseWidget.HandleCountdownFinished
	// void HandleCountdownFinished();                                                                                          // [0x91099e4] Final|Native|Protected 
};

/// Class /Script/FortniteUI.MashScoreEventWidgetBase
/// Size: 0x0118 (0x000398 - 0x0004B0)
class UMashScoreEventWidgetBase : public ULTMWidgetBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1200;

public:
	CMember(AFortAthenaMutator_Mash*)                  MashMutatorRef                                              OFFSET(get<T>, {0x398, 8, 0, 0})
	CMember(AFortPlayerStateAthena*)                   CachedLocalPlayerState                                      OFFSET(get<T>, {0x3A0, 8, 0, 0})
	SMember(FMashPlayerDataEntry)                      CachedLocalPlayerEntry                                      OFFSET(getStruct<T>, {0x3A8, 248, 0, 0})
	DMember(float)                                     StreakScoreMultiplierRemainingTime                          OFFSET(get<float>, {0x4A0, 4, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.MashScoreEventWidgetBase.UpdateStreakScoreMultiplierCountdown
	// void UpdateStreakScoreMultiplierCountdown();                                                                             // [0x910cc30] Final|Native|Protected 
	// Function /Script/FortniteUI.MashScoreEventWidgetBase.OnStreakScoreMultiplierUpdated
	// void OnStreakScoreMultiplierUpdated(char StreakScoreLevel, char MaxStreakScoreLevel, float ScoreMultiplier);             // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.MashScoreEventWidgetBase.OnStreakScoreMultiplierKillCountUpdated
	// void OnStreakScoreMultiplierKillCountUpdated(int32_t TotalStreakKillCount, float StreakLevelProgressRatio);              // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.MashScoreEventWidgetBase.OnStreakScoreMultiplierExpires
	// void OnStreakScoreMultiplierExpires();                                                                                   // [0x910c41c] Final|Native|Protected 
	// Function /Script/FortniteUI.MashScoreEventWidgetBase.OnStreakScoreMultiplierCountdownUpdated
	// void OnStreakScoreMultiplierCountdownUpdated(float RemainingTimeBeforeReset);                                            // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.MashScoreEventWidgetBase.OnScoreEvent
	// void OnScoreEvent(int32_t ScoreValue, FText& ScoreText, TEnumAsByte<EMashScoreEvent> ScoreEventType);                    // [0x1d9241c] Event|Public|HasOutParms|BlueprintEvent 
	// Function /Script/FortniteUI.MashScoreEventWidgetBase.OnPlayerDataChanged
	// void OnPlayerDataChanged();                                                                                              // [0x910bd34] Final|Native|Protected 
};

/// Class /Script/FortniteUI.MashWidgetBase
/// Size: 0x0010 (0x000398 - 0x0003A8)
class UMashWidgetBase : public ULTMWidgetBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 936;

public:
	CMember(AFortAthenaMutator_Mash*)                  MashMutatorRef                                              OFFSET(get<T>, {0x398, 8, 0, 0})
	CMember(AFortPlayerStateAthena*)                   CachedLocalPlayerState                                      OFFSET(get<T>, {0x3A0, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.MashWidgetBase.OnTeamScoreMultiplierChanged
	// void OnTeamScoreMultiplierChanged(char TeamScoreMultiplier);                                                             // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.MashWidgetBase.OnSquadScoreUpdated
	// void OnSquadScoreUpdated(int32_t Score);                                                                                 // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.MashWidgetBase.OnPlayerScoreUpdated
	// void OnPlayerScoreUpdated(int32_t Index, FString PlayerName, int32_t Score, int32_t StreakLevel, int32_t MaxStreakLevel, float StreakMultiplier, bool IsLocalPlayer); // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.MashWidgetBase.OnPlayerDataChanged
	// void OnPlayerDataChanged();                                                                                              // [0x910bd48] Final|Native|Protected 
};

/// Class /Script/FortniteUI.MinigameWidgetBase
/// Size: 0x0098 (0x000328 - 0x0003C0)
class UMinigameWidgetBase : public UFortHUDElementWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 960;

public:
	DMember(bool)                                      bDisplayCaptureObjectiveRow                                 OFFSET(get<bool>, {0x398, 1, 0, 0})
	CMember(AFortMinigame*)                            CurrentMinigame                                             OFFSET(get<T>, {0x3A0, 8, 0, 0})
	CMember(AActor*)                                   CurrentContainer                                            OFFSET(get<T>, {0x3B8, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.MinigameWidgetBase.ResetDisplayValues
	// void ResetDisplayValues();                                                                                               // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.MinigameWidgetBase.OnVolumeMinigameChanged
	// void OnVolumeMinigameChanged(AFortMinigame* Minigame);                                                                   // [0x910c444] Final|Native|Private 
	// Function /Script/FortniteUI.MinigameWidgetBase.OnPlayerStatUpdated
	// void OnPlayerStatUpdated();                                                                                              // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.MinigameWidgetBase.OnOwningPlayerChangedTeams
	// void OnOwningPlayerChangedTeams();                                                                                       // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.MinigameWidgetBase.OnObjectiveUpdated
	// void OnObjectiveUpdated();                                                                                               // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.MinigameWidgetBase.OnDisplayMinigameStartUI
	// void OnDisplayMinigameStartUI(bool bDisplay);                                                                            // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.MinigameWidgetBase.OnDisplayMinigamePregameCountdownUI
	// void OnDisplayMinigamePregameCountdownUI(bool bDisplay);                                                                 // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.MinigameWidgetBase.OnDisplayMinigameInProgressUI
	// void OnDisplayMinigameInProgressUI(bool bDisplay);                                                                       // [0x910b210] Native|Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.MinigameWidgetBase.OnDisplayMinigameEndUI
	// void OnDisplayMinigameEndUI(bool bDisplay);                                                                              // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.MinigameWidgetBase.OnDisplayMiniGameAbortUI
	// void OnDisplayMiniGameAbortUI(bool bDisplay);                                                                            // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.MinigameWidgetBase.OnDisplayCaptureObjectiveUI
	// void OnDisplayCaptureObjectiveUI(bool bDisplay);                                                                         // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.MinigameWidgetBase.OnCurrentStateChangedDelegate
	// void OnCurrentStateChangedDelegate(AFortMinigame* Minigame, EFortMinigameState MinigameState);                           // [0x910b14c] Final|Native|Private 
	// Function /Script/FortniteUI.MinigameWidgetBase.MakeMessageData
	// FAthenaGameMessageData MakeMessageData(EAthenaGameMsgType MsgType, FText MsgText, USoundCue* MsgSound, float DisplayTime); // [0x910aed0] Final|Native|Static|Protected|BlueprintCallable|BlueprintPure 
	// Function /Script/FortniteUI.MinigameWidgetBase.HideAllMinigameWidgetUI
	// void HideAllMinigameWidgetUI();                                                                                          // [0x910ac04] Final|Native|Private 
	// Function /Script/FortniteUI.MinigameWidgetBase.HandlePlayerStatChanged
	// void HandlePlayerStatChanged();                                                                                          // [0x1f2d1ac] Final|Native|Private 
	// Function /Script/FortniteUI.MinigameWidgetBase.HandleOwningPlayerChangedTeams
	// void HandleOwningPlayerChangedTeams();                                                                                   // [0x90691cc] Native|Protected     
	// Function /Script/FortniteUI.MinigameWidgetBase.GetStatValue
	// int32_t GetStatValue(UFortMinigameStatFilter* InFilter, bool bGameTotal);                                                // [0x91095f4] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/FortniteUI.MinigameObjectiveTrackerWidget
/// Size: 0x0000 (0x0003C0 - 0x0003C0)
class UMinigameObjectiveTrackerWidget : public UMinigameWidgetBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 960;

public:
};

/// Class /Script/FortniteUI.PaybackHUDWidgetBase
/// Size: 0x0008 (0x000398 - 0x0003A0)
class UPaybackHUDWidgetBase : public ULTMWidgetBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 928;

public:
	CMember(AFortAthenaMutator_Payback*)               CachedPaybackMutator                                        OFFSET(get<T>, {0x398, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.PaybackHUDWidgetBase.OnMutatorAvailable
	// void OnMutatorAvailable(AFortGameplayMutator* MutatorActor);                                                             // [0x896d718] Native|Protected|BlueprintCallable 
};

/// Class /Script/FortniteUI.PerkAvailableAlertBaseWidget
/// Size: 0x0008 (0x000398 - 0x0003A0)
class UPerkAvailableAlertBaseWidget : public ULTMWidgetBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 928;

public:
	CMember(TWeakObjectPtr<AFortAthenaMutator_PerkSystemMutator*>) CachedMutator                                   OFFSET(get<T>, {0x398, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.PerkAvailableAlertBaseWidget.OnPerkAvailibilityChanged
	// void OnPerkAvailibilityChanged(int32_t TagCount);                                                                        // [0x1d9241c] Event|Public|BlueprintEvent 
};

/// Class /Script/FortniteUI.PerkSelectionEntryWidget
/// Size: 0x0048 (0x0002E8 - 0x000330)
class UPerkSelectionEntryWidget : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 816;

public:
	SMember(FMulticastInlineDelegate)                  OnPerkSelected                                              OFFSET(getStruct<T>, {0x2E8, 16, 0, 0})
	DMember(int32_t)                                   SelectionIndex                                              OFFSET(get<int32_t>, {0x2F8, 4, 0, 0})
	CMember(UFortSpyTechItemDefinition*)               ItemA                                                       OFFSET(get<T>, {0x300, 8, 0, 0})
	CMember(UFortSpyTechItemDefinition*)               ItemB                                                       OFFSET(get<T>, {0x308, 8, 0, 0})
	CMember(TArray<UFortSpyTechItemDefinition*>)       AllSelectableItems                                          OFFSET(get<T>, {0x310, 16, 0, 0})
	CMember(TArray<UFortSpyTechItemDefinition*>)       AllSelectablePassives                                       OFFSET(get<T>, {0x320, 16, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.PerkSelectionEntryWidget.SetItems_BP
	// void SetItems_BP(UFortSpyTechItemDefinition* FirstItem, UFortSpyTechItemDefinition* SecondItem);                         // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.PerkSelectionEntryWidget.OnSelectionMade
	// void OnSelectionMade();                                                                                                  // [0x910c1b4] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.PerkSelectionEntryWidget.OnPerkSelected__DelegateSignature
	// void OnPerkSelected__DelegateSignature(UPerkSelectionEntryWidget* Widget);                                               // [0x1d9241c] MulticastDelegate|Public|Delegate 
	// Function /Script/FortniteUI.PerkSelectionEntryWidget.GetTechSelectVerboseModeEnabled
	// bool GetTechSelectVerboseModeEnabled();                                                                                  // [0x91096b8] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/FortniteUI.PowTimerWidgetBase
/// Size: 0x0038 (0x000398 - 0x0003D0)
class UPowTimerWidgetBase : public ULTMWidgetBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 976;

public:
	SMember(FScalableFloat)                            TimeShowTimerAt                                             OFFSET(getStruct<T>, {0x398, 40, 0, 0})
	CMember(AFortAthenaMutator_Pow*)                   BaseMutator                                                 OFFSET(get<T>, {0x3C0, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.PowTimerWidgetBase.OnUpdatedRespawnTime
	// void OnUpdatedRespawnTime(int32_t Minutes, int32_t Seconds);                                                             // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.PowTimerWidgetBase.OnRespawnTimeElasped
	// void OnRespawnTimeElasped();                                                                                             // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.PowTimerWidgetBase.NewRespawnTime
	// void NewRespawnTime(int32_t NewTimeRemaining);                                                                           // [0x910b0a4] Final|Native|Private 
};

/// Class /Script/FortniteUI.RespawnAndSpectateSelectButtonWidgetBase
/// Size: 0x0098 (0x0002E8 - 0x000380)
class URespawnAndSpectateSelectButtonWidgetBase : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 896;

public:
	SMember(FMulticastInlineDelegate)                  OnButtonSelected                                            OFFSET(getStruct<T>, {0x2E8, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnButtonHovered                                             OFFSET(getStruct<T>, {0x2F8, 16, 0, 0})
	CMember(USizeBox*)                                 TargetImageSizeBox                                          OFFSET(get<T>, {0x308, 8, 0, 0})
	CMember(USizeBox*)                                 DefaultButtonImageSizeBox                                   OFFSET(get<T>, {0x310, 8, 0, 0})
	CMember(UCommonButtonLegacy*)                      TargetButton                                                OFFSET(get<T>, {0x318, 8, 0, 0})
	CMember(UFortLazyImage*)                           TargetImage                                                 OFFSET(get<T>, {0x320, 8, 0, 0})
	CMember(UImage*)                                   DefaultButtonImage                                          OFFSET(get<T>, {0x328, 8, 0, 0})
	CMember(UCommonTextBlock*)                         TargetNameTextWidget                                        OFFSET(get<T>, {0x330, 8, 0, 0})
	CMember(UCommonWidgetSwitcherLegacy*)              Switcher_TargetState                                        OFFSET(get<T>, {0x338, 8, 0, 0})
	DMember(int32_t)                                   ButtonIndex                                                 OFFSET(get<int32_t>, {0x340, 4, 0, 0})
	DMember(bool)                                      bIsSelectable                                               OFFSET(get<bool>, {0x344, 1, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.RespawnAndSpectateSelectButtonWidgetBase.SetSelectionVisualsVisibility
	// void SetSelectionVisualsVisibility(bool bNewVisibility);                                                                 // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.RespawnAndSpectateSelectButtonWidgetBase.SetNavigationFocusOnButton
	// void SetNavigationFocusOnButton();                                                                                       // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.RespawnAndSpectateSelectButtonWidgetBase.SetHoverHighlightVisibility
	// void SetHoverHighlightVisibility(bool bNewVisibility);                                                                   // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.RespawnAndSpectateSelectButtonWidgetBase.SetButtonVisibility_BP
	// void SetButtonVisibility_BP(bool bNewVisbility);                                                                         // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.RespawnAndSpectateSelectButtonWidgetBase.OnSelectionMade
	// void OnSelectionMade();                                                                                                  // [0x910c200] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.RespawnAndSpectateSelectButtonWidgetBase.OnSelectionHovered
	// void OnSelectionHovered();                                                                                               // [0x910bf80] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.RespawnAndSpectateSelectButtonWidgetBase.OnRespawnAndSpectateSelectButtonSelected__DelegateSignature
	// void OnRespawnAndSpectateSelectButtonSelected__DelegateSignature(URespawnAndSpectateSelectButtonWidgetBase* Widget);     // [0x1d9241c] MulticastDelegate|Public|Delegate 
	// Function /Script/FortniteUI.RespawnAndSpectateSelectButtonWidgetBase.OnRespawnAndSpectateSelectButtonHovered__DelegateSignature
	// void OnRespawnAndSpectateSelectButtonHovered__DelegateSignature(URespawnAndSpectateSelectButtonWidgetBase* Widget);      // [0x1d9241c] MulticastDelegate|Public|Delegate 
	// Function /Script/FortniteUI.RespawnAndSpectateSelectButtonWidgetBase.OnIsEnabledUpdated_BP
	// void OnIsEnabledUpdated_BP(bool bNewIsEnabled);                                                                          // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.RespawnAndSpectateSelectButtonWidgetBase.IsSelectableUpdated_BP
	// void IsSelectableUpdated_BP();                                                                                           // [0x1d9241c] Event|Protected|BlueprintEvent 
};

/// Class /Script/FortniteUI.RespawnAndSpectateSelectContainerWidget
/// Size: 0x0020 (0x000398 - 0x0003B8)
class URespawnAndSpectateSelectContainerWidget : public ULTMWidgetBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 952;

public:
	CMember(UClass*)                                   RespawnAndSpectateSelectWidgetClass                         OFFSET(get<T>, {0x398, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.RespawnAndSpectateSelectContainerWidget.UpdateRespawnAndSpectateSelectWidgetVisibility
	// void UpdateRespawnAndSpectateSelectWidgetVisibility(bool bNewVisibility);                                                // [0x910cb88] Final|Native|Protected 
	// Function /Script/FortniteUI.RespawnAndSpectateSelectContainerWidget.OnRespawnAndSpectateSelectPlayerRespawned
	// void OnRespawnAndSpectateSelectPlayerRespawned();                                                                        // [0x910be08] Final|Native|Protected 
	// Function /Script/FortniteUI.RespawnAndSpectateSelectContainerWidget.OnRespawnAndSpectateSelectAvailableOptionsChanged
	// void OnRespawnAndSpectateSelectAvailableOptionsChanged();                                                                // [0x910bdf4] Final|Native|Protected 
	// Function /Script/FortniteUI.RespawnAndSpectateSelectContainerWidget.OnPanelOptionSelected
	// void OnPanelOptionSelected(int32_t SelectedOption);                                                                      // [0x910bcb8] Final|Native|Protected 
};

/// Class /Script/FortniteUI.RespawnAndSpectateSelectWidgetBase
/// Size: 0x0130 (0x000418 - 0x000548)
class URespawnAndSpectateSelectWidgetBase : public UFortActivatablePanelLTM
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1352;

public:
	CMember(AFortAthenaMutator_RespawnAndSpectateSelect*) CachedMutator                                            OFFSET(get<T>, {0x430, 8, 0, 0})
	CMember(TArray<URespawnAndSpectateSelectButtonWidgetBase*>) SelectButtonWidgets                                OFFSET(get<T>, {0x438, 16, 0, 0})
	SMember(FText)                                     HeaderText_Preview                                          OFFSET(getStruct<T>, {0x448, 24, 0, 0})
	SMember(FText)                                     HeaderText_Selectable                                       OFFSET(getStruct<T>, {0x460, 24, 0, 0})
	SMember(FText)                                     HeaderText_NoOptions                                        OFFSET(getStruct<T>, {0x478, 24, 0, 0})
	SMember(FText)                                     DescriptionText_Preview                                     OFFSET(getStruct<T>, {0x490, 24, 0, 0})
	SMember(FText)                                     DescriptionText_Selectable                                  OFFSET(getStruct<T>, {0x4A8, 24, 0, 0})
	SMember(FText)                                     DescriptionText_NoOptions                                   OFFSET(getStruct<T>, {0x4C0, 24, 0, 0})
	CMember(UCommonButtonLegacy*)                      ConfirmButton                                               OFFSET(get<T>, {0x4D8, 8, 0, 0})
	CMember(URichTextBlock*)                           TextHeader                                                  OFFSET(get<T>, {0x508, 8, 0, 0})
	CMember(URichTextBlock*)                           TextDescription                                             OFFSET(get<T>, {0x510, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.RespawnAndSpectateSelectWidgetBase.StartClosingWidget
	// void StartClosingWidget();                                                                                               // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.RespawnAndSpectateSelectWidgetBase.OnSelectionMadeMobile
	// void OnSelectionMadeMobile(URespawnAndSpectateSelectButtonWidgetBase* Widget);                                           // [0x910c2cc] Final|Native|Protected 
	// Function /Script/FortniteUI.RespawnAndSpectateSelectWidgetBase.OnSelectionMade
	// void OnSelectionMade(URespawnAndSpectateSelectButtonWidgetBase* Widget);                                                 // [0x910c24c] Final|Native|Protected 
	// Function /Script/FortniteUI.RespawnAndSpectateSelectWidgetBase.OnSelectionHovered
	// void OnSelectionHovered(URespawnAndSpectateSelectButtonWidgetBase* Widget);                                              // [0x910bfc4] Final|Native|Protected 
	// Function /Script/FortniteUI.RespawnAndSpectateSelectWidgetBase.OnSelectionConfirmed
	// void OnSelectionConfirmed();                                                                                             // [0x910bf6c] Final|Native|Protected 
	// Function /Script/FortniteUI.RespawnAndSpectateSelectWidgetBase.OnRespawnBecameAvailable
	// void OnRespawnBecameAvailable();                                                                                         // [0x910be20] Final|Native|Private 
	// Function /Script/FortniteUI.RespawnAndSpectateSelectWidgetBase.OnLocalPlayerRespawned
	// void OnLocalPlayerRespawned();                                                                                           // [0x910b9b4] Final|Native|Private 
	// Function /Script/FortniteUI.RespawnAndSpectateSelectWidgetBase.OnAvailableOptionsChanged
	// void OnAvailableOptionsChanged();                                                                                        // [0x910b124] Final|Native|Private 
	// Function /Script/FortniteUI.RespawnAndSpectateSelectWidgetBase.NativeGetDesiredFocusTarget
	// UWidget* NativeGetDesiredFocusTarget();                                                                                  // [0x5b5f6c0] Native|Protected|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.RespawnAndSpectateSelectWidgetBase.GetCurrentlyHoveredButtonIndex
	// int32_t GetCurrentlyHoveredButtonIndex();                                                                                // [0x9108ef0] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/FortniteUI.RespawnPerkUnlockCountWidgetBase
/// Size: 0x0020 (0x000398 - 0x0003B8)
class URespawnPerkUnlockCountWidgetBase : public ULTMWidgetBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 952;

public:
	CMember(AFortAthenaMutator_SpyRumble*)             CachedMutator                                               OFFSET(get<T>, {0x398, 8, 0, 0})
	CMember(UCommonTextBlock*)                         TextBlock_RequiredKills                                     OFFSET(get<T>, {0x3A0, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.RespawnPerkUnlockCountWidgetBase.UpdateScore
	// void UpdateScore();                                                                                                      // [0x910cc08] Final|Native|Protected 
	// Function /Script/FortniteUI.RespawnPerkUnlockCountWidgetBase.OnNewTechAvailable
	// void OnNewTechAvailable(int32_t NewCount);                                                                               // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.RespawnPerkUnlockCountWidgetBase.HandleRequiredKillsForPerkUnlockChanged
	// void HandleRequiredKillsForPerkUnlockChanged(int32_t KillCount);                                                         // [0x910a9d4] Final|Native|Protected 
};

/// Class /Script/FortniteUI.RumbleLeaderBoard
/// Size: 0x0018 (0x000398 - 0x0003B0)
class URumbleLeaderBoard : public ULTMWidgetBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 944;

public:
	CMember(TArray<FSoundThreshold>)                   ThresholdArray                                              OFFSET(get<T>, {0x398, 16, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.RumbleLeaderBoard.UpdateVisuals
	// void UpdateVisuals(TArray<FFortInGameLeaderboardPlacementData>& Data);                                                   // [0x1d9241c] Event|Protected|HasOutParms|BlueprintEvent 
	// Function /Script/FortniteUI.RumbleLeaderBoard.SetGoalValue
	// void SetGoalValue(float NewValue);                                                                                       // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.RumbleLeaderBoard.OnThresholdPassed
	// void OnThresholdPassed(FSoundThreshold& SoundThreshold, int32_t ThresholdIndex, bool bIsLocalPlayer);                    // [0x1d9241c] Event|Protected|HasOutParms|BlueprintEvent 
};

/// Class /Script/FortniteUI.RumbleLeaderWidget
/// Size: 0x0008 (0x000398 - 0x0003A0)
class URumbleLeaderWidget : public ULTMWidgetBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 928;

public:
};

/// Class /Script/FortniteUI.StoreAlertWidget
/// Size: 0x0018 (0x0002E8 - 0x000300)
class UStoreAlertWidget : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 768;

public:
	CMember(UStoreToastRequest*)                       StoreUpdatedRequest                                         OFFSET(get<T>, {0x2E8, 8, 0, 0})
	CMember(UCatalogMessaging*)                        CatalogMessaging                                            OFFSET(get<T>, {0x2F0, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.StoreAlertWidget.SetupRequest
	// void SetupRequest();                                                                                                     // [0x910c77c] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.StoreAlertWidget.DisplayStoreUpdated
	// void DisplayStoreUpdated(UStoreToastRequest* NewStoreUpdatedRequest);                                                    // [0x1d9241c] Event|Public|BlueprintEvent 
};

/// Class /Script/FortniteUI.TagTeamChangeMessage
/// Size: 0x0018 (0x000398 - 0x0003B0)
class UTagTeamChangeMessage : public ULTMWidgetBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 944;

public:
	SMember(FGameplayTag)                              BlueTeamTag                                                 OFFSET(getStruct<T>, {0x398, 4, 0, 0})
	SMember(FGameplayTag)                              RedTeamTag                                                  OFFSET(getStruct<T>, {0x39C, 4, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.TagTeamChangeMessage.SetTeam
	// void SetTeam(bool bIsIt);                                                                                                // [0x1d9241c] Event|Protected|BlueprintEvent 
};

/// Class /Script/FortniteUI.TagTeamCountWidget
/// Size: 0x0020 (0x000398 - 0x0003B8)
class UTagTeamCountWidget : public ULTMWidgetBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 952;

public:
};

/// Class /Script/FortniteUI.TeamLimitedLivesCounterWidget
/// Size: 0x0008 (0x0003B8 - 0x0003C0)
class UTeamLimitedLivesCounterWidget : public ULimitedLivesCounterWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 960;

public:
};

/// Class /Script/FortniteUI.TeamPlacementWidget
/// Size: 0x0038 (0x000398 - 0x0003D0)
class UTeamPlacementWidget : public ULTMWidgetBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 976;

public:
	CMember(TWeakObjectPtr<AFortAthenaMutator_TeamPlacement*>) TeamPlacementMutator                                OFFSET(get<T>, {0x398, 8, 0, 0})
	CMember(TWeakObjectPtr<AFortPlayerStateAthena*>)   CurrentPlayerState                                          OFFSET(get<T>, {0x3A0, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.TeamPlacementWidget.OnPlayerScoringUpdate
	// void OnPlayerScoringUpdate(int32_t CurrentPlayerTeamScore, int32_t PreviousPlayerTeamScore, int32_t CurrentPlayerTeamPlacement, int32_t PreviousPlayerTeamPlacement, int32_t GoalScore, TArray<int32_t>& SortedTeamScores); // [0x1d9241c] Event|Protected|HasOutParms|BlueprintEvent 
};

/// Class /Script/FortniteUI.TryHardCountdownWidget
/// Size: 0x0030 (0x000328 - 0x000358)
class UTryHardCountdownWidget : public UFortHUDElementWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 856;

public:
	DMember(int32_t)                                   NumToStartShowingAt                                         OFFSET(get<int32_t>, {0x34C, 4, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.TryHardCountdownWidget.UpdateNumber
	// void UpdateNumber(int32_t NumRemaining);                                                                                 // [0x1d9241c] Event|Protected|BlueprintCallable|BlueprintEvent 
	// Function /Script/FortniteUI.TryHardCountdownWidget.ShowWidget
	// void ShowWidget(int32_t NumRemaining);                                                                                   // [0x9135608] Native|Event|Protected|BlueprintCallable|BlueprintEvent 
	// Function /Script/FortniteUI.TryHardCountdownWidget.OnHandleSpectatingChanged
	// void OnHandleSpectatingChanged(AFortPlayerStateZone* SpectatingTarget);                                                  // [0x9134d20] Final|Native|Protected 
	// Function /Script/FortniteUI.TryHardCountdownWidget.IsShowing
	// bool IsShowing();                                                                                                        // [0x9134c00] Native|Event|Protected|BlueprintCallable|BlueprintEvent|BlueprintPure|Const 
	// Function /Script/FortniteUI.TryHardCountdownWidget.HideWidget
	// void HideWidget();                                                                                                       // [0x7cea14c] Native|Event|Protected|BlueprintCallable|BlueprintEvent 
};

/// Class /Script/FortniteUI.TwoTeamLivesCounterWidget
/// Size: 0x0018 (0x000398 - 0x0003B0)
class UTwoTeamLivesCounterWidget : public ULTMWidgetBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 944;

public:
	CMember(AFortPlayerStateAthena*)                   CurrentPlayerState                                          OFFSET(get<T>, {0x398, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.TwoTeamLivesCounterWidget.OnPlayerDied
	// void OnPlayerDied(AFortPlayerStateAthena* DeadPlayer);                                                                   // [0x9135028] Final|Native|Protected 
	// Function /Script/FortniteUI.TwoTeamLivesCounterWidget.OnLivesCountUpdated
	// void OnLivesCountUpdated(int32_t LocalLivesCount, int32_t EnemyLivesCount);                                              // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.TwoTeamLivesCounterWidget.OnFriendlyTeamScoreUpdated
	// void OnFriendlyTeamScoreUpdated(FTDMTeamScoreData ScoreData);                                                            // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.TwoTeamLivesCounterWidget.OnEnemyTeamScoreUpdated
	// void OnEnemyTeamScoreUpdated(FTDMTeamScoreData ScoreData);                                                               // [0x1d9241c] Event|Protected|BlueprintEvent 
};

/// Class /Script/FortniteUI.TwoTeamScoreWidgetBase
/// Size: 0x0088 (0x000328 - 0x0003B0)
class UTwoTeamScoreWidgetBase : public UFortHUDElementWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 944;

public:
	CMember(TArray<float>)                             PlayScoreProgressSoundPercentagesMild                       OFFSET(get<T>, {0x350, 16, 0, 0})
	CMember(TArray<float>)                             PlayScoreProgressSoundPercentagesMedium                     OFFSET(get<T>, {0x360, 16, 0, 0})
	CMember(TArray<float>)                             PlayScoreProgressSoundPercentagesStrong                     OFFSET(get<T>, {0x370, 16, 0, 0})
	DMember(float)                                     PercentageScoreToPlayCountdown                              OFFSET(get<float>, {0x380, 4, 0, 0})
	DMember(float)                                     PercentageScoreToPlayFinalCountdown                         OFFSET(get<float>, {0x384, 4, 0, 0})
	DMember(float)                                     ScoreCountdownSoundFrequency                                OFFSET(get<float>, {0x388, 4, 0, 0})
	DMember(char)                                      LastViewedTeam                                              OFFSET(get<char>, {0x38C, 1, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.TwoTeamScoreWidgetBase.UpdateAllUI
	// void UpdateAllUI();                                                                                                      // [0x9135770] Final|Native|Protected 
	// Function /Script/FortniteUI.TwoTeamScoreWidgetBase.OnUpdateTotalScore
	// void OnUpdateTotalScore(FText& TotalScoreText, int32_t Score);                                                           // [0x1d9241c] Event|Protected|HasOutParms|BlueprintEvent 
	// Function /Script/FortniteUI.TwoTeamScoreWidgetBase.OnUpdateTeamScore
	// void OnUpdateTeamScore(int32_t TeamIndex, FTDMTeamScoreData& ScoreData);                                                 // [0x1d9241c] Event|Protected|HasOutParms|BlueprintEvent 
	// Function /Script/FortniteUI.TwoTeamScoreWidgetBase.OnPlayScoreProgressSound
	// void OnPlayScoreProgressSound(ETDMScoreProgressTypes ScoreProgressType, bool bIsLocalTeam);                              // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.TwoTeamScoreWidgetBase.OnHandleSpectatingChanged
	// void OnHandleSpectatingChanged(AFortPlayerStateZone* SpectatingTarget);                                                  // [0x9134da0] Final|Native|Protected 
	// Function /Script/FortniteUI.TwoTeamScoreWidgetBase.OnCountdownTimerUpdate
	// void OnCountdownTimerUpdate();                                                                                           // [0x9134c78] Final|Native|Protected 
};

/// Class /Script/FortniteUI.UraniumRespawnWidget
/// Size: 0x0000 (0x000398 - 0x000398)
class UUraniumRespawnWidget : public ULTMWidgetBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 920;

public:
};

/// Class /Script/FortniteUI.UraniumWidgetBase
/// Size: 0x0008 (0x000398 - 0x0003A0)
class UUraniumWidgetBase : public ULTMWidgetBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 928;

public:
	CMember(AFortAthenaMutator_Uranium*)               UraniumMutator                                              OFFSET(get<T>, {0x398, 8, 0, 0})
};

/// Class /Script/FortniteUI.UraniumRoundEndWidgetBase
/// Size: 0x0018 (0x0003A0 - 0x0003B8)
class UUraniumRoundEndWidgetBase : public UUraniumWidgetBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 952;

public:
	CMember(UClass*)                                   RoundInfoWidgetClass                                        OFFSET(get<T>, {0x3A0, 8, 0, 0})
	CMember(UOverlay*)                                 RoundInfoOverlay                                            OFFSET(get<T>, {0x3A8, 8, 0, 0})
	CMember(UPerkIntroScreenWidget*)                   PerkIntroScreenWidget                                       OFFSET(get<T>, {0x3B0, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.UraniumRoundEndWidgetBase.NativeOnPerkIntroFinished
	// void NativeOnPerkIntroFinished();                                                                                        // [0x9134c28] Final|Native|Protected 
	// Function /Script/FortniteUI.UraniumRoundEndWidgetBase.HandleUpdateRoundEndVisibility
	// void HandleUpdateRoundEndVisibility(bool bNewVisibility);                                                                // [0x9134470] Final|Native|Protected 
	// Function /Script/FortniteUI.UraniumRoundEndWidgetBase.HandleShowRoundIntro
	// void HandleShowRoundIntro();                                                                                             // [0x9134040] Final|Native|Protected 
	// Function /Script/FortniteUI.UraniumRoundEndWidgetBase.AttempShowRoundInfo
	// void AttempShowRoundInfo();                                                                                              // [0x9133928] Final|Native|Protected|BlueprintCallable 
};

/// Class /Script/FortniteUI.WaxActiveTokenEventWidgetBase
/// Size: 0x0010 (0x000398 - 0x0003A8)
class UWaxActiveTokenEventWidgetBase : public ULTMWidgetBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 936;

public:
	CMember(AFortAthenaMutator_Wax*)                   WaxMutator                                                  OFFSET(get<T>, {0x398, 8, 0, 0})
	DMember(int32_t)                                   WaxTokensForMediumCrit                                      OFFSET(get<int32_t>, {0x3A0, 4, 0, 0})
	DMember(int32_t)                                   WaxTokensForHighCrit                                        OFFSET(get<int32_t>, {0x3A4, 4, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.WaxActiveTokenEventWidgetBase.GetWaxTokensMediumCrit
	// int32_t GetWaxTokensMediumCrit();                                                                                        // [0x9133a10] Final|Native|Private|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.WaxActiveTokenEventWidgetBase.GetWaxTokensHighCrit
	// int32_t GetWaxTokensHighCrit();                                                                                          // [0x91339cc] Final|Native|Private|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/FortniteUI.WaxHotelPromptWidget
/// Size: 0x0010 (0x000398 - 0x0003A8)
class UWaxHotelPromptWidget : public ULTMWidgetBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 936;

public:
};

/// Class /Script/FortniteUI.WaxPlacementWidgetBase
/// Size: 0x0088 (0x000398 - 0x000420)
class UWaxPlacementWidgetBase : public ULTMWidgetBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1056;

public:
	CMember(AFortAthenaMutator_Wax*)                   WaxMutator                                                  OFFSET(get<T>, {0x398, 8, 0, 0})
	SMember(FWaxPlacementData)                         FirstPlacement                                              OFFSET(getStruct<T>, {0x3A0, 32, 0, 0})
	SMember(FWaxPlacementData)                         SecondPlacement                                             OFFSET(getStruct<T>, {0x3C0, 32, 0, 0})
	SMember(FWaxPlacementData)                         ThirdPlacement                                              OFFSET(getStruct<T>, {0x3E0, 32, 0, 0})
	SMember(FWaxPlacementData)                         FourthPlacement                                             OFFSET(getStruct<T>, {0x400, 32, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.WaxPlacementWidgetBase.UpdateWaxPlacements
	// void UpdateWaxPlacements();                                                                                              // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.WaxPlacementWidgetBase.OnPodiumChangeOccured
	// void OnPodiumChangeOccured(TArray<AFortPlayerStateAthena*>& Leaders);                                                    // [0x1d9241c] Event|Protected|HasOutParms|BlueprintEvent 
	// Function /Script/FortniteUI.WaxPlacementWidgetBase.OnAnyTokenChange
	// void OnAnyTokenChange();                                                                                                 // [0x9134c50] Final|Native|Protected 
	// Function /Script/FortniteUI.WaxPlacementWidgetBase.NativeOnPodiumChangeOccured
	// void NativeOnPodiumChangeOccured();                                                                                      // [0x9134c3c] Final|Native|Protected 
};

/// Class /Script/FortniteUI.WaxProgressWidgetBase
/// Size: 0x0008 (0x000398 - 0x0003A0)
class UWaxProgressWidgetBase : public ULTMWidgetBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 928;

public:
	CMember(AFortAthenaMutator_Wax*)                   WaxMutator                                                  OFFSET(get<T>, {0x398, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.WaxProgressWidgetBase.ShowPlayerCloseToVictory
	// void ShowPlayerCloseToVictory(int32_t CoinsAwayFromVictory);                                                             // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.WaxProgressWidgetBase.ShowEnemyCloseToVictory
	// void ShowEnemyCloseToVictory(int32_t CoinsAwayFromVictory);                                                              // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.WaxProgressWidgetBase.OnPendingFlashes
	// void OnPendingFlashes(TArray<int32_t>& Flashes);                                                                         // [0x9134f8c] Final|Native|Private|HasOutParms 
	// Function /Script/FortniteUI.WaxProgressWidgetBase.OnAnyTokenChange
	// void OnAnyTokenChange();                                                                                                 // [0x9134c64] Final|Native|Private 
	// Function /Script/FortniteUI.WaxProgressWidgetBase.K2_OnPodiumChange
	// void K2_OnPodiumChange();                                                                                                // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.WaxProgressWidgetBase.K2_OnAnyTokenChange
	// void K2_OnAnyTokenChange();                                                                                              // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.WaxProgressWidgetBase.HideCloseToVictoryIfShown
	// void HideCloseToVictoryIfShown();                                                                                        // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.WaxProgressWidgetBase.DoCoinPulseFor
	// void DoCoinPulseFor(int32_t BarIndex);                                                                                   // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.WaxProgressWidgetBase.AdjustForSpectate
	// void AdjustForSpectate(bool bIsSpectating);                                                                              // [0x1d9241c] Event|Protected|BlueprintEvent 
};

/// Class /Script/FortniteUI.WaxRespawnCounterWidget
/// Size: 0x0018 (0x000398 - 0x0003B0)
class UWaxRespawnCounterWidget : public ULTMWidgetBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 944;

public:
};

/// Class /Script/FortniteUI.WaxSquadInfoWidget
/// Size: 0x0010 (0x000398 - 0x0003A8)
class UWaxSquadInfoWidget : public ULTMWidgetBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 936;

public:
};

/// Class /Script/FortniteUI.WaxSquadStatusWidget
/// Size: 0x0030 (0x000398 - 0x0003C8)
class UWaxSquadStatusWidget : public ULTMWidgetBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 968;

public:
};

/// Class /Script/FortniteUI.WaxTokenEventWidgetBase
/// Size: 0x0008 (0x000398 - 0x0003A0)
class UWaxTokenEventWidgetBase : public ULTMWidgetBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 928;

public:
	CMember(AFortAthenaMutator_Wax*)                   WaxMutator                                                  OFFSET(get<T>, {0x398, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.WaxTokenEventWidgetBase.OnTokensCollected
	// void OnTokensCollected(AFortPlayerStateAthena* Player, int32_t Amount);                                                  // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.WaxTokenEventWidgetBase.OnTokensAwarded
	// void OnTokensAwarded(AFortPlayerStateAthena* Player, int32_t Amount);                                                    // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.WaxTokenEventWidgetBase.OnFlyingTokensApplied
	// void OnFlyingTokensApplied(AFortPlayerStateAthena* Player, int32_t Amount);                                              // [0x1d9241c] Event|Protected|BlueprintEvent 
};

/// Class /Script/FortniteUI.AthenaFrontEndMapPoiIcon
/// Size: 0x0020 (0x0002E8 - 0x000308)
class UAthenaFrontEndMapPoiIcon : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 776;

public:
	CMember(UCommonTextBlock*)                         Text_PoiName                                                OFFSET(get<T>, {0x2E8, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.AthenaFrontEndMapPoiIcon.HandleTextChanged
	// void HandleTextChanged(bool bIsRedacted);                                                                                // [0x1d9241c] Event|Protected|BlueprintEvent 
};

/// Class /Script/FortniteUI.AthenaFullScreenMapBase
/// Size: 0x0080 (0x000538 - 0x0005B8)
class UAthenaFullScreenMapBase : public UCommonActivatablePanelLegacy
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1464;

public:
	CMember(UAthenaMapLayerContainer*)                 MapLayerContainer                                           OFFSET(get<T>, {0x538, 8, 0, 0})
	SMember(FDataTableRowHandle)                       ToggleMapMarkerRowHandle                                    OFFSET(getStruct<T>, {0x540, 16, 0, 0})
	SMember(FDataTableRowHandle)                       TeleportToMapMarkerRowHandle                                OFFSET(getStruct<T>, {0x550, 16, 0, 0})
	CMember(TWeakObjectPtr<UFortMarkerDetailsTable*>)  SoftMarkerDetailsTable                                      OFFSET(get<T>, {0x560, 32, 0, 0})
	SMember(FMinimapZoomBounds)                        ZoomBounds                                                  OFFSET(getStruct<T>, {0x580, 40, 0, 0})
	DMember(bool)                                      bMapLayerContainerEnabled                                   OFFSET(get<bool>, {0x5A8, 1, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.AthenaFullScreenMapBase.ShowMapLayerContainer
	// void ShowMapLayerContainer(bool bShowing);                                                                               // [0x1d9241c] Event|Protected|BlueprintEvent 
};

/// Class /Script/FortniteUI.AthenaFullScreenMapControlsWidget
/// Size: 0x0190 (0x000400 - 0x000590)
class UAthenaFullScreenMapControlsWidget : public UCommonActivatableWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1424;

public:
	CMember(UCommonButtonBase*)                        Button_ToggleQuestIcons                                     OFFSET(get<T>, {0x420, 8, 0, 0})
	CMember(UCommonButtonBase*)                        Button_ResetToPlayer                                        OFFSET(get<T>, {0x428, 8, 0, 0})
	CMember(UCommonButtonBase*)                        Button_Exit                                                 OFFSET(get<T>, {0x430, 8, 0, 0})
	SMember(FText)                                     TextNPCIconsOn                                              OFFSET(getStruct<T>, {0x438, 24, 0, 0})
	SMember(FText)                                     TextNPCIconsOff                                             OFFSET(getStruct<T>, {0x450, 24, 0, 0})
	SMember(FText)                                     TextPinQuest                                                OFFSET(getStruct<T>, {0x468, 24, 0, 0})
	SMember(FText)                                     TextUnpinQuest                                              OFFSET(getStruct<T>, {0x480, 24, 0, 0})
	SMember(FText)                                     TextPinCategory                                             OFFSET(getStruct<T>, {0x498, 24, 0, 0})
	SMember(FText)                                     TextUnpinCategory                                           OFFSET(getStruct<T>, {0x4B0, 24, 0, 0})
	SMember(FText)                                     TextConfirmRemoveQuestTitle                                 OFFSET(getStruct<T>, {0x4C8, 24, 0, 0})
	SMember(FText)                                     TextConfirmRemoveQuestDescription                           OFFSET(getStruct<T>, {0x4E0, 24, 0, 0})
	CMember(UCommonButtonBase*)                        Button_SortToggle                                           OFFSET(get<T>, {0x4F8, 8, 0, 0})
	CMember(UCommonButtonBase*)                        Button_RemoveSelectedQuest                                  OFFSET(get<T>, {0x500, 8, 0, 0})
	CMember(UFortCTAButton*)                           Button_PinSelectedQuest                                     OFFSET(get<T>, {0x508, 8, 0, 0})
	CMember(UFortCTAButton*)                           Button_PinSelectedCategory                                  OFFSET(get<T>, {0x510, 8, 0, 0})
	CMember(UFortCTAButton*)                           Button_ViewPlaylist                                         OFFSET(get<T>, {0x518, 8, 0, 0})
	CMember(UFortCTAButton*)                           Button_QuestNPCIcons                                        OFFSET(get<T>, {0x520, 8, 0, 0})
	CMember(UFortCTAButton*)                           Button_InspectItems                                         OFFSET(get<T>, {0x528, 8, 0, 0})
	CMember(UClass*)                                   ConfirmationWindowClass                                     OFFSET(get<T>, {0x530, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.AthenaFullScreenMapControlsWidget.OnViewPlaylistButtonClicked__DelegateSignature
	// void OnViewPlaylistButtonClicked__DelegateSignature(FString IslandMnemonic, FName PlaylistName);                         // [0x1d9241c] MulticastDelegate|Public|Delegate 
	// Function /Script/FortniteUI.AthenaFullScreenMapControlsWidget.OnPinSelectedQuestButtonClicked__DelegateSignature
	// void OnPinSelectedQuestButtonClicked__DelegateSignature();                                                               // [0x1d9241c] MulticastDelegate|Public|Delegate 
	// Function /Script/FortniteUI.AthenaFullScreenMapControlsWidget.OnPinSelectedCategoryButtonClicked__DelegateSignature
	// void OnPinSelectedCategoryButtonClicked__DelegateSignature();                                                            // [0x1d9241c] MulticastDelegate|Public|Delegate 
	// Function /Script/FortniteUI.AthenaFullScreenMapControlsWidget.OnInspectItemsButtonClicked__DelegateSignature
	// void OnInspectItemsButtonClicked__DelegateSignature();                                                                   // [0x1d9241c] MulticastDelegate|Public|Delegate 
	// Function /Script/FortniteUI.AthenaFullScreenMapControlsWidget.BP_OnSortTypeTextChanged
	// void BP_OnSortTypeTextChanged(FText& TypeText);                                                                          // [0x1d9241c] Event|Protected|HasOutParms|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaFullScreenMapControlsWidget.BP_OnLayoutShuffled
	// void BP_OnLayoutShuffled();                                                                                              // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaFullScreenMapControlsWidget.BP_OnInputTypeChanged
	// void BP_OnInputTypeChanged(ECommonInputType NewInputType);                                                               // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaFullScreenMapControlsWidget.BP_HandleToggleQuestIconsClicked
	// void BP_HandleToggleQuestIconsClicked();                                                                                 // [0x1d9241c] Event|Protected|BlueprintEvent 
};

/// Class /Script/FortniteUI.AthenaFullScreenMapPanel
/// Size: 0x0098 (0x0005B8 - 0x000650)
class UAthenaFullScreenMapPanel : public UAthenaFullScreenMapBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1616;

public:
	SMember(FAthenaMapScreenContainerTabInfo)          MapTabInfo                                                  OFFSET(getStruct<T>, {0x5E8, 72, 0, 0})
	CMember(TWeakObjectPtr<UClass*>)                   SoftGameInfoClass                                           OFFSET(get<T>, {0x630, 32, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.AthenaFullScreenMapPanel.OnTransistionedFromAnotherMapPanel
	// void OnTransistionedFromAnotherMapPanel();                                                                               // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaFullScreenMapPanel.OnMapGameInfoWidgetCreated
	// void OnMapGameInfoWidgetCreated(UUserWidget* Widget);                                                                    // [0x1d9241c] Event|Protected|BlueprintEvent 
};

/// Class /Script/FortniteUI.AthenaFullScreenMapQuestCategoryButton
/// Size: 0x0030 (0x001490 - 0x0014C0)
class UAthenaFullScreenMapQuestCategoryButton : public UCommonButtonBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 5312;

public:
	CMember(UCommonTextBlock*)                         Text_DebugCategoryName                                      OFFSET(get<T>, {0x14A8, 8, 0, 0})
	CMember(UFortLazyImage*)                           LazyImage_Icon                                              OFFSET(get<T>, {0x14B0, 8, 0, 0})
	CMember(UAthenaQuestCategoryCompletedTracker*)     Widget_AthenaQuestCategoryCompletedTracker                  OFFSET(get<T>, {0x14B8, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.AthenaFullScreenMapQuestCategoryButton.ShowNewBang
	// void ShowNewBang(bool bEnabled);                                                                                         // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaFullScreenMapQuestCategoryButton.OnTimeRemainingTimerSet
	// void OnTimeRemainingTimerSet(EAthenaChallengeTimerState TimerState, EQuestCategoryButtonTimerState TimerType, FText& TimerText, FTimespan TimeRemaining); // [0x1d9241c] Event|Protected|HasOutParms|HasDefaults|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaFullScreenMapQuestCategoryButton.OnMoreInTimerSet
	// void OnMoreInTimerSet(EAthenaChallengeTimerState TimerState, FTimespan& TimeRemaining);                                  // [0x1d9241c] Event|Protected|HasOutParms|HasDefaults|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaFullScreenMapQuestCategoryButton.OnFocusSetToQuests
	// void OnFocusSetToQuests();                                                                                               // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaFullScreenMapQuestCategoryButton.OnFocusReceivedFromQuests
	// void OnFocusReceivedFromQuests();                                                                                        // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaFullScreenMapQuestCategoryButton.HandlePinnedQuestChanged
	// void HandlePinnedQuestChanged(FAthenaPinnedQuestData& PinnedQuestData);                                                  // [0x9133d80] Final|Native|Private|HasOutParms 
	// Function /Script/FortniteUI.AthenaFullScreenMapQuestCategoryButton.BP_Populate
	// void BP_Populate(FText& Title, FText& SubText, int32_t CompletedQuests, int32_t TotalQuest, bool bIsPinned, FQuestCategoryButtonOverrides& ButtonOverrides, bool bQuestListContentDisabled); // [0x1d9241c] Event|Protected|HasOutParms|BlueprintEvent 
};

/// Class /Script/FortniteUI.AthenaFullScreenQuestMapContent
/// Size: 0x00F8 (0x0005B8 - 0x0006B0)
class UAthenaFullScreenQuestMapContent : public UAthenaFullScreenMapBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1712;

public:
	CMember(UAthenaFullScreenMapControlsWidget*)       ControlsPanel                                               OFFSET(get<T>, {0x5E8, 8, 0, 0})
	CMember(UAthenaQuestListContent*)                  QuestPanel                                                  OFFSET(get<T>, {0x5F0, 8, 0, 0})
	CMember(UImage*)                                   Image_CustomMapBackground                                   OFFSET(get<T>, {0x5F8, 8, 0, 0})
	CMember(UScaleBox*)                                ScaleBox_CustomMapContent                                   OFFSET(get<T>, {0x600, 8, 0, 0})
	CMember(UUserWidget*)                              CustomMapWidgetInstance                                     OFFSET(get<T>, {0x648, 8, 0, 0})
	CMember(UFortQuestItemDefinition*)                 CachedPinnedQuestDefinition                                 OFFSET(get<T>, {0x650, 8, 0, 0})
	DMember(bool)                                      bDisableDisplayMapInCreative                                OFFSET(get<bool>, {0x668, 1, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.AthenaFullScreenQuestMapContent.OnQuestListLostFocus
	// void OnQuestListLostFocus();                                                                                             // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaFullScreenQuestMapContent.OnQuestListGainedFocus
	// void OnQuestListGainedFocus();                                                                                           // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaFullScreenQuestMapContent.OnListViewScrolled
	// void OnListViewScrolled(float OffsetInItems, float DistanceRemaining);                                                   // [0x9134e1c] Final|Native|Private 
	// Function /Script/FortniteUI.AthenaFullScreenQuestMapContent.OnChallengeCategoryChanged
	// void OnChallengeCategoryChanged();                                                                                       // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaFullScreenQuestMapContent.HandleViewPlaylistButtonClicked
	// void HandleViewPlaylistButtonClicked(FString IslandMnemonic, FName PlaylistName);                                        // [0x91344f0] Final|Native|Private 
	// Function /Script/FortniteUI.AthenaFullScreenQuestMapContent.HandleSortTypeTextChanged
	// void HandleSortTypeTextChanged(FText& TypeText);                                                                         // [0x9134054] Final|Native|Private|HasOutParms 
	// Function /Script/FortniteUI.AthenaFullScreenQuestMapContent.HandlePinSelectedQuestButtonClicked
	// void HandlePinSelectedQuestButtonClicked();                                                                              // [0x9133d6c] Final|Native|Private 
	// Function /Script/FortniteUI.AthenaFullScreenQuestMapContent.HandlePinSelectedCategoryButtonClicked
	// void HandlePinSelectedCategoryButtonClicked();                                                                           // [0x9133d58] Final|Native|Private 
	// Function /Script/FortniteUI.AthenaFullScreenQuestMapContent.HandlePinnedQuestsChanged
	// void HandlePinnedQuestsChanged(FAthenaPinnedQuestData& PinnedQuestData);                                                 // [0x9133e0c] Final|Native|Private|HasOutParms 
	// Function /Script/FortniteUI.AthenaFullScreenQuestMapContent.HandleInspectItemsButtonClicked
	// void HandleInspectItemsButtonClicked();                                                                                  // [0x9133d44] Final|Native|Private 
	// Function /Script/FortniteUI.AthenaFullScreenQuestMapContent.HandleControlsSortButtonClicked
	// void HandleControlsSortButtonClicked();                                                                                  // [0x9133ba8] Final|Native|Private 
};

/// Class /Script/FortniteUI.AthenaFrontendQuestMapPanel
/// Size: 0x0000 (0x000400 - 0x000400)
class UAthenaFrontendQuestMapPanel : public UCommonActivatableWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1024;

public:
};

/// Class /Script/FortniteUI.AthenaFullScreenQuestMapPanel
/// Size: 0x0258 (0x000400 - 0x000658)
class UAthenaFullScreenQuestMapPanel : public UCommonActivatableWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1624;

public:
	SMember(FAthenaMapScreenContainerTabInfo)          MapTabInfo                                                  OFFSET(getStruct<T>, {0x430, 72, 0, 0})
	DMember(float)                                     SafeZoneOpacityInterpolationInDuration                      OFFSET(get<float>, {0x478, 4, 0, 0})
	DMember(float)                                     SafeZoneOpacityInterpolationOutDuration                     OFFSET(get<float>, {0x47C, 4, 0, 0})
	CMember(UClass*)                                   CategoryButtonType                                          OFFSET(get<T>, {0x480, 8, 0, 0})
	DMember(float)                                     CategoryButtonPadding                                       OFFSET(get<float>, {0x488, 4, 0, 0})
	SMember(FGameplayTag)                              DefaultCategoryTag                                          OFFSET(getStruct<T>, {0x48C, 4, 0, 0})
	DMember(bool)                                      bResetSelectionWhenParentDeactivates                        OFFSET(get<bool>, {0x490, 1, 0, 0})
	CMember(UAthenaFullScreenMapControlsWidget*)       ControlsPanel                                               OFFSET(get<T>, {0x498, 8, 0, 0})
	CMember(UPanelWidget*)                             Panel_Frontend                                              OFFSET(get<T>, {0x4A0, 8, 0, 0})
	CMember(UCommonButtonBase*)                        Button_Progression                                          OFFSET(get<T>, {0x4A8, 8, 0, 0})
	CMember(UGridPanel*)                               GridPanel_Categories                                        OFFSET(get<T>, {0x4B0, 8, 0, 0})
	CMember(UAthenaFullScreenQuestMapContent*)         Widget_QuestMapContent                                      OFFSET(get<T>, {0x4B8, 8, 0, 0})
	CMember(UAthenaScrollBox*)                         ScrollBox_ContentRoot                                       OFFSET(get<T>, {0x4C0, 8, 0, 0})
	CMember(UScrollBox*)                               ScrollBox_Categories                                        OFFSET(get<T>, {0x4C8, 8, 0, 0})
	CMember(UCommonButtonBase*)                        Button_Previous                                             OFFSET(get<T>, {0x4D0, 8, 0, 0})
	CMember(UCommonButtonBase*)                        Button_Next                                                 OFFSET(get<T>, {0x4D8, 8, 0, 0})
	SMember(FUserWidgetPool)                           CategoryWidgetPool                                          OFFSET(getStruct<T>, {0x4E8, 136, 0, 0})
	DMember(int32_t)                                   CategoryButtonPreallocationCount                            OFFSET(get<int32_t>, {0x570, 4, 0, 0})
	CMember(UCommonButtonGroupBase*)                   CategoryButtonGroup                                         OFFSET(get<T>, {0x578, 8, 0, 0})
	CMember(TMap<FGuid, UAthenaFullScreenMapQuestCategoryButton*>) CategoryInstanceMap                             OFFSET(get<T>, {0x580, 80, 0, 0})
	DMember(bool)                                      bEnableSnapScrolling                                        OFFSET(get<bool>, {0x5F1, 1, 0, 0})
	DMember(float)                                     SnapScrollingThreshold                                      OFFSET(get<float>, {0x5F4, 4, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.AthenaFullScreenQuestMapPanel.OnUpdateScrollPosition
	// void OnUpdateScrollPosition(UWidget* WidgetToScroll);                                                                    // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaFullScreenQuestMapPanel.IsQuestsTabActive
	// bool IsQuestsTabActive();                                                                                                // [0x8fa7d10] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.AthenaFullScreenQuestMapPanel.HandleScrollCompleted
	// void HandleScrollCompleted(float ScrollAmount);                                                                          // [0x9133fc0] Final|Native|Private 
	// Function /Script/FortniteUI.AthenaFullScreenQuestMapPanel.HandleRequestPrevious
	// void HandleRequestPrevious();                                                                                            // [0x9133fac] Final|Native|Private 
	// Function /Script/FortniteUI.AthenaFullScreenQuestMapPanel.HandleQuestMapNavigateLeft
	// UWidget* HandleQuestMapNavigateLeft(EUINavigation InNavigation);                                                         // [0x9133f1c] Final|Native|Private 
	// Function /Script/FortniteUI.AthenaFullScreenQuestMapPanel.HandleCategoryNavigateRight
	// UWidget* HandleCategoryNavigateRight(EUINavigation InNavigation);                                                        // [0x9133a54] Final|Native|Private 
};

/// Class /Script/FortniteUI.AthenaFullScreenScoreboardPanel
/// Size: 0x0008 (0x0003C0 - 0x0003C8)
class UAthenaFullScreenScoreboardPanel : public UMinigameWidgetBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 968;

public:
	CMember(UScrollBox*)                               DataScrollBox                                               OFFSET(get<T>, {0x3C0, 8, 0, 0})
};

/// Class /Script/FortniteUI.AthenaGoalsPageBaseCard
/// Size: 0x0028 (0x0002C0 - 0x0002E8)
class UAthenaGoalsPageBaseCard : public UUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 744;

public:
	CMember(UDynamicEntryBox*)                         DynamicEntryBox_Goals                                       OFFSET(get<T>, {0x2C0, 8, 0, 0})
	CMember(UAthenaChallengeDateTimeTextBlock*)        DateTimeText_TimeRemaining                                  OFFSET(get<T>, {0x2C8, 8, 0, 0})
	CMember(UPanelWidget*)                             Panel_TimeRemaining                                         OFFSET(get<T>, {0x2D0, 8, 0, 0})
	DMember(int32_t)                                   GoalPreallocationCount                                      OFFSET(get<int32_t>, {0x2D8, 4, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.AthenaGoalsPageBaseCard.ShowNewBang
	// void ShowNewBang(bool bEnabled);                                                                                         // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaGoalsPageBaseCard.OnTimerSet
	// void OnTimerSet(EAthenaChallengeTimerState TimerState);                                                                  // [0x1d9241c] Event|Protected|BlueprintEvent 
};

/// Class /Script/FortniteUI.AthenaGoalsPageQuestCard
/// Size: 0x0040 (0x0002E8 - 0x000328)
class UAthenaGoalsPageQuestCard : public UAthenaGoalsPageBaseCard
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 808;

public:
	SMember(FText)                                     TextExpired                                                 OFFSET(getStruct<T>, {0x2E8, 24, 0, 0})
	CMember(UCommonTextBlock*)                         Text_BundleID                                               OFFSET(get<T>, {0x300, 8, 0, 0})
	CMember(TArray<UFortQuestItem*>)                   PrevQuestList                                               OFFSET(get<T>, {0x308, 16, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.AthenaGoalsPageQuestCard.PopulateIsSelectable
	// void PopulateIsSelectable(bool bCardIsSelectable);                                                                       // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaGoalsPageQuestCard.PopulateHeader
	// void PopulateHeader(FBundleGoalCardDisplayData& GoalCardDisplayData);                                                    // [0x1d9241c] Event|Protected|HasOutParms|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaGoalsPageQuestCard.PopulateBattlePassRequirement
	// void PopulateBattlePassRequirement(bool bBattlePassRequired);                                                            // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaGoalsPageQuestCard.GetIsSelectable
	// bool GetIsSelectable();                                                                                                  // [0x9133950] Final|Native|Public|BlueprintCallable|BlueprintPure 
};

/// Class /Script/FortniteUI.AthenaGoalsPageQuestCardLine
/// Size: 0x0030 (0x0002C0 - 0x0002F0)
class UAthenaGoalsPageQuestCardLine : public UUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 752;

public:
	CMember(UCommonRichTextBlock*)                     RichText_GoalName                                           OFFSET(get<T>, {0x2C0, 8, 0, 0})
	CMember(UAthenaChallengeRewards*)                  UserWidget_Rewards                                          OFFSET(get<T>, {0x2C8, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_QuestID                                                OFFSET(get<T>, {0x2D0, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.AthenaGoalsPageQuestCardLine.SetObjectiveProgress
	// void SetObjectiveProgress(int32_t Achieved, int32_t Required, bool bIsRewardAcquired);                                   // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaGoalsPageQuestCardLine.Reset
	// void Reset();                                                                                                            // [0x1d9241c] Event|Public|BlueprintCallable|BlueprintEvent 
};

/// Class /Script/FortniteUI.AthenaGoalsPageTabList
/// Size: 0x0048 (0x0002E8 - 0x000330)
class UAthenaGoalsPageTabList : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 816;

public:
	CMember(UFortTabListWidgetBase_Legacy*)            TabList_GoalCategories                                      OFFSET(get<T>, {0x2E8, 8, 0, 0})
	CMember(UClass*)                                   TabButtonClass                                              OFFSET(get<T>, {0x2F0, 8, 0, 0})
	CMember(TArray<FGoalsPageCategoryTabData>)         GoalTabsData                                                OFFSET(get<T>, {0x2F8, 16, 0, 0})
	CMember(UObject*)                                  DefaultTabDisplayAsset                                      OFFSET(get<T>, {0x308, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.AthenaGoalsPageTabList.SetTabName
	// void SetTabName(FText& DisplayName);                                                                                     // [0x1d9241c] Event|Protected|HasOutParms|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaGoalsPageTabList.HandleTabSelected
	// void HandleTabSelected(FName TabNameID);                                                                                 // [0x913436c] Final|Native|Private 
	// Function /Script/FortniteUI.AthenaGoalsPageTabList.HandleTabButtonCreated
	// void HandleTabButtonCreated(FName TabID, UCommonButtonBase* TabButton);                                                  // [0x91340f0] Final|Native|Private 
};

/// Class /Script/FortniteUI.AthenaMapChallengeCategoryTabButton
/// Size: 0x0020 (0x0014E0 - 0x001500)
class UAthenaMapChallengeCategoryTabButton : public UCommonButtonLegacy
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 5376;

public:
	CMember(UCommonLazyImage*)                         LazyImage_Icon                                              OFFSET(get<T>, {0x14E0, 8, 0, 0})
	SMember(FVector2D)                                 ImageSize_Mobile                                            OFFSET(getStruct<T>, {0x14E8, 16, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.AthenaMapChallengeCategoryTabButton.BP_ShowBang
	// void BP_ShowBang(bool bShow);                                                                                            // [0x1d9241c] Event|Public|BlueprintEvent 
};

/// Class /Script/FortniteUI.AthenaMapChallengeListEntry
/// Size: 0x0028 (0x0002E8 - 0x000310)
class UAthenaMapChallengeListEntry : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 784;

public:
	CMember(UAthenaMapNavigableIconSingleChallenge*)   IconWidget                                                  OFFSET(get<T>, {0x2F0, 8, 0, 0})
	CMember(UAthenaChallengeListEntry_Challenge*)      ChallengeListEntry                                          OFFSET(get<T>, {0x2F8, 8, 0, 0})
};

/// Class /Script/FortniteUI.AthenaMapChallengeListView
/// Size: 0x0118 (0x000298 - 0x0003B0)
class UAthenaMapChallengeListView : public UListViewBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 944;

public:
	CMember(TEnumAsByte<EOrientation>)                 Orientation                                                 OFFSET(get<T>, {0x380, 1, 0, 0})
};

/// Class /Script/FortniteUI.AthenaMapChallengeRewardPreview
/// Size: 0x00C0 (0x0002E8 - 0x0003A8)
class UAthenaMapChallengeRewardPreview : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 936;

public:
	CMember(UCommonRichTextBlock*)                     RichText_Description                                        OFFSET(get<T>, {0x368, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_RewardName                                             OFFSET(get<T>, {0x370, 8, 0, 0})
	CMember(UFortCosmeticItemCard*)                    ItemCard_RewardIcon                                         OFFSET(get<T>, {0x378, 8, 0, 0})
	DMember(float)                                     CycleDelay                                                  OFFSET(get<float>, {0x380, 4, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.AthenaMapChallengeRewardPreview.ReplayIntroAnim
	// void ReplayIntroAnim();                                                                                                  // [0x1d9241c] Event|Protected|BlueprintEvent 
};

/// Class /Script/FortniteUI.AthenaMapGameInfo
/// Size: 0x01A8 (0x000328 - 0x0004D0)
class UAthenaMapGameInfo : public UFortHUDElementWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1232;

public:
	CMember(UCommonTextBlock*)                         Text_PlaylistName                                           OFFSET(get<T>, {0x468, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.AthenaMapGameInfo.OnExtensionWidgetCreated
	// void OnExtensionWidgetCreated(EUIExtensionSlot ExtensionSlot, UUserWidget* ExtensionWidget);                             // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaMapGameInfo.HandleClientEnterVolume
	// void HandleClientEnterVolume(APlayerState* PlayerState, AFortVolume* Volume);                                            // [0x9133ae4] Final|Native|Protected 
};

/// Class /Script/FortniteUI.AthenaMapIconsOverlay
/// Size: 0x0258 (0x0001A0 - 0x0003F8)
class UAthenaMapIconsOverlay : public UOverlay
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1016;

public:
	CMember(UClass*)                                   AthenaMapNavigableIconSingleChallengeClass                  OFFSET(get<T>, {0x1A0, 8, 0, 0})
	CMember(UClass*)                                   AthenaMapNavigableIconStackOfChallengesClass                OFFSET(get<T>, {0x1A8, 8, 0, 0})
	CMember(UClass*)                                   AthenaMapNavigableIconStackOfNoLocationChallengesClass      OFFSET(get<T>, {0x1B0, 8, 0, 0})
	DMember(bool)                                      bShowNoLocationIcon                                         OFFSET(get<bool>, {0x1B8, 1, 0, 0})
	DMember(bool)                                      bAllowFocusControl                                          OFFSET(get<bool>, {0x1B9, 1, 0, 0})
	CMember(UAthenaChallengeIndicatorCache*)           ChallengeIndicatorCache                                     OFFSET(get<T>, {0x1C0, 8, 0, 0})
	SMember(FUserWidgetPool)                           WidgetsPool                                                 OFFSET(getStruct<T>, {0x1C8, 136, 0, 0})
	CMember(TArray<FDisabledQuestData>)                DisabledQuests                                              OFFSET(get<T>, {0x250, 16, 0, 0})
};

/// Class /Script/FortniteUI.AthenaInGameMapIconsOverlay
/// Size: 0x0008 (0x0003F8 - 0x000400)
class UAthenaInGameMapIconsOverlay : public UAthenaMapIconsOverlay
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1024;

public:
};

/// Class /Script/FortniteUI.AthenaFrontEndMapIconsOverlay
/// Size: 0x0030 (0x0003F8 - 0x000428)
class UAthenaFrontEndMapIconsOverlay : public UAthenaMapIconsOverlay
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1064;

public:
	CMember(UClass*)                                   AthenaMapPoiIconClass                                       OFFSET(get<T>, {0x418, 8, 0, 0})
	CMember(UFortGameStateComponent_EventLevel*)       EventLevelInstance                                          OFFSET(get<T>, {0x420, 8, 0, 0})
};

/// Class /Script/FortniteUI.AthenaMapNavigableIcon
/// Size: 0x00A0 (0x0002E8 - 0x000388)
class UAthenaMapNavigableIcon : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 904;

public:
	CMember(UImage*)                                   Image_Icon                                                  OFFSET(get<T>, {0x310, 8, 0, 0})
	SMember(FVector2D)                                 AnchorPoint                                                 OFFSET(getStruct<T>, {0x318, 16, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.AthenaMapNavigableIcon.OnUnselected
	// void OnUnselected(bool bUserInteraction);                                                                                // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaMapNavigableIcon.OnUnhovered
	// void OnUnhovered(bool bUserInteraction);                                                                                 // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaMapNavigableIcon.OnSetIsInGame
	// void OnSetIsInGame(bool bIsInGame);                                                                                      // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaMapNavigableIcon.OnSetHasLocation
	// void OnSetHasLocation(bool bHasLocation);                                                                                // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaMapNavigableIcon.OnSelected
	// void OnSelected(bool bUserInteraction);                                                                                  // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaMapNavigableIcon.OnHovered
	// void OnHovered(bool bUserInteraction);                                                                                   // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaMapNavigableIcon.OnChangeBangVisibility
	// void OnChangeBangVisibility(bool bShouldShow);                                                                           // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaMapNavigableIcon.OnChallengeSet
	// void OnChallengeSet(bool bIsComplete, bool bIsLocked, bool bHasIconOverride, float Progress, bool bShouldShowBang, bool bIsPinned, bool bChallengeSelected); // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaMapNavigableIcon.OnChallengeReset
	// void OnChallengeReset();                                                                                                 // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaMapNavigableIcon.OnChallengeIconOverriden
	// void OnChallengeIconOverriden(UTexture2D* Icon);                                                                         // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaMapNavigableIcon.IsIconSelected
	// bool IsIconSelected();                                                                                                   // [0x9134be8] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.AthenaMapNavigableIcon.IsIconHovered
	// bool IsIconHovered();                                                                                                    // [0x9134bd0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/FortniteUI.AthenaMapNavigableIconCustom
/// Size: 0x0000 (0x000388 - 0x000388)
class UAthenaMapNavigableIconCustom : public UAthenaMapNavigableIcon
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 904;

public:
};

/// Class /Script/FortniteUI.AthenaMapNavigableIconSingleChallenge
/// Size: 0x0008 (0x000388 - 0x000390)
class UAthenaMapNavigableIconSingleChallenge : public UAthenaMapNavigableIcon
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 912;

public:
};

/// Class /Script/FortniteUI.AthenaMapNavigableIconStackOfChallenges
/// Size: 0x0038 (0x000388 - 0x0003C0)
class UAthenaMapNavigableIconStackOfChallenges : public UAthenaMapNavigableIcon
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 960;

public:
	CMember(UCommonActionWidget*)                      CommonActionWidget_Cycle                                    OFFSET(get<T>, {0x3A0, 8, 0, 0})
	SMember(FDataTableRowHandle)                       CycleStackInputAction                                       OFFSET(getStruct<T>, {0x3A8, 16, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.AthenaMapNavigableIconStackOfChallenges.ShouldCycleAutomatically
	// bool ShouldCycleAutomatically();                                                                                         // [0x9135590] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.AthenaMapNavigableIconStackOfChallenges.SelectStackedDataAt
	// void SelectStackedDataAt(int32_t InSelectedStackedDataIndex);                                                            // [0x91350b8] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.AthenaMapNavigableIconStackOfChallenges.OnChangedStackData
	// void OnChangedStackData(int32_t NewStackCount, int32_t NonCompletedCount);                                               // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaMapNavigableIconStackOfChallenges.GetStackedDataCount
	// int32_t GetStackedDataCount();                                                                                           // [0x91339b4] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.AthenaMapNavigableIconStackOfChallenges.GetSelectStackedDataIndex
	// int32_t GetSelectStackedDataIndex();                                                                                     // [0x913399c] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.AthenaMapNavigableIconStackOfChallenges.CycleStackedData
	// void CycleStackedData();                                                                                                 // [0x913393c] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/FortniteUI.AthenaMapNavigableIconStackOfNoLocationChallenges
/// Size: 0x0008 (0x0003C0 - 0x0003C8)
class UAthenaMapNavigableIconStackOfNoLocationChallenges : public UAthenaMapNavigableIconStackOfChallenges
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 968;

public:
	CMember(UCommonTextBlock*)                         Text_AllChallenges                                          OFFSET(get<T>, {0x3C0, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.AthenaMapNavigableIconStackOfNoLocationChallenges.OnSetChallengesInfo
	// void OnSetChallengesInfo(int32_t ChallengesNum, int32_t CountOfCompletedChallenges);                                     // [0x1d9241c] Event|Protected|BlueprintEvent 
};

/// Class /Script/FortniteUI.AthenaMapPlayerEliminationsWidget
/// Size: 0x0038 (0x0002E8 - 0x000320)
class UAthenaMapPlayerEliminationsWidget : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 800;

public:
	SMember(FGameplayTag)                              PlayerBotTag                                                OFFSET(getStruct<T>, {0x2F0, 4, 0, 0})
	SMember(FName)                                     ParamName_PlayerIconTexture                                 OFFSET(getStruct<T>, {0x2F4, 4, 0, 0})
	SMember(FName)                                     ParamName_PlayerIconBackgroundColor                         OFFSET(getStruct<T>, {0x2F8, 4, 0, 0})
	DMember(bool)                                      bIsLocalPlayer                                              OFFSET(get<bool>, {0x2FC, 1, 0, 0})
	CMember(UImage*)                                   Image_PlayerIcon                                            OFFSET(get<T>, {0x300, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_PlayerName                                             OFFSET(get<T>, {0x308, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_ElimCount                                              OFFSET(get<T>, {0x310, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.AthenaMapPlayerEliminationsWidget.UpdateRankedProgress
	// void UpdateRankedProgress(FRankedProgressReplicatedData& RankedProgress);                                                // [0x1d9241c] Event|Protected|HasOutParms|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaMapPlayerEliminationsWidget.ResetRankedProgress
	// void ResetRankedProgress();                                                                                              // [0x1d9241c] Event|Protected|BlueprintEvent 
};

/// Class /Script/FortniteUI.AthenaMapPlayersLeftWidget
/// Size: 0x0030 (0x000328 - 0x000358)
class UAthenaMapPlayersLeftWidget : public UFortHUDElementWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 856;

public:
	CMember(UCommonTextBlock*)                         Text_PlayersTeamsLeft                                       OFFSET(get<T>, {0x328, 8, 0, 0})
	SMember(FText)                                     PlayersTeamsLeftTextFormat                                  OFFSET(getStruct<T>, {0x330, 24, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.AthenaMapPlayersLeftWidget.OnMaxSquadSizeSet
	// void OnMaxSquadSizeSet(int32_t MaxSquadSize);                                                                            // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaMapPlayersLeftWidget.HandleTeamsLeftChanged
	// void HandleTeamsLeftChanged(int32_t NumTeamsLeft);                                                                       // [0x91343ec] Final|Native|Private 
	// Function /Script/FortniteUI.AthenaMapPlayersLeftWidget.HandlePlayersLeftChanged
	// void HandlePlayersLeftChanged(int32_t NumPlayersLeft);                                                                   // [0x9133e98] Final|Native|Private 
};

/// Class /Script/FortniteUI.AthenaMapSquadEliminationsWidget
/// Size: 0x0058 (0x000328 - 0x000380)
class UAthenaMapSquadEliminationsWidget : public UFortHUDElementWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 896;

public:
	CMember(UDynamicEntryBox*)                         EntryBox_SquadElims                                         OFFSET(get<T>, {0x328, 8, 0, 0})
};

/// Class /Script/FortniteUI.AthenaMapStormInfo
/// Size: 0x0240 (0x000328 - 0x000568)
class UAthenaMapStormInfo : public UFortHUDElementWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1384;

public:
	SMember(FScalableFloat)                            SafeZoneDamageAttribute                                     OFFSET(getStruct<T>, {0x468, 40, 0, 0})
	SMember(FText)                                     SafeZonePhaseFormatText                                     OFFSET(getStruct<T>, {0x490, 24, 0, 0})
	SMember(FText)                                     StormIncomingFormatText                                     OFFSET(getStruct<T>, {0x4A8, 24, 0, 0})
	SMember(FText)                                     StormDamageFormatText                                       OFFSET(getStruct<T>, {0x4C0, 24, 0, 0})
	CMember(UCommonTextBlock*)                         Text_SafeZonePhase                                          OFFSET(get<T>, {0x4D8, 8, 0, 0})
	CMember(UCommonRichTextBlock*)                     RichText_StormDamage                                        OFFSET(get<T>, {0x4E0, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.AthenaMapStormInfo.OnSafeZonePhaseChanged
	// void OnSafeZonePhaseChanged(int32_t SafeZonePhase);                                                                      // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaMapStormInfo.OnSafeZoneCountChanged
	// void OnSafeZoneCountChanged(int32_t SafeZoneCount);                                                                      // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaMapStormInfo.BP_HandleExtensionWidgetCreated
	// void BP_HandleExtensionWidgetCreated(UUserWidget* Widget, EUIExtensionSlot SlotType);                                    // [0x1d9241c] Event|Protected|BlueprintEvent 
};

/// Class /Script/FortniteUI.AthenaQuestListContent
/// Size: 0x0058 (0x000538 - 0x000590)
class UAthenaQuestListContent : public UCommonActivatablePanelLegacy
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1424;

public:
	CMember(UAthenaChallengeNpcQuestListView*)         ListView_Quests                                             OFFSET(get<T>, {0x538, 8, 0, 0})
	SMember(FDataTableRowHandle)                       PlaceMarkerBinding                                          OFFSET(getStruct<T>, {0x540, 16, 0, 0})
	SMember(FDataTableRowHandle)                       RemoveMarkerBinding                                         OFFSET(getStruct<T>, {0x550, 16, 0, 0})
	CMember(TScriptInterface<Class>)                   QuestEntriesContext                                         OFFSET(get<T>, {0x560, 16, 0, 0})
};

/// Class /Script/FortniteUI.BacchusButton
/// Size: 0x0078 (0x000370 - 0x0003E8)
class UBacchusButton : public UBacchusHUDElement
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1000;

public:
	CMember(UPaperSprite*)                             DefaultIcon                                                 OFFSET(get<T>, {0x370, 8, 0, 0})
	SMember(FLinearColor)                              PressedColor                                                OFFSET(getStruct<T>, {0x378, 16, 0, 0})
	SMember(FLinearColor)                              UnpressedColor                                              OFFSET(getStruct<T>, {0x388, 16, 0, 0})
	CMember(TEnumAsByte<EButtonClickMethod>)           ClickMethod                                                 OFFSET(get<T>, {0x398, 1, 0, 0})
	CMember(TEnumAsByte<EButtonTouchMethod>)           TouchMethod                                                 OFFSET(get<T>, {0x399, 1, 0, 0})
	DMember(float)                                     ButtonSize                                                  OFFSET(get<float>, {0x39C, 4, 0, 0})
	DMember(float)                                     ButtonDisplayScale                                          OFFSET(get<float>, {0x3A0, 4, 0, 0})
	DMember(bool)                                      ShowRadialProgress                                          OFFSET(get<bool>, {0x3A4, 1, 0, 0})
	SMember(FGameplayTag)                              ListenedGamePlayTag                                         OFFSET(getStruct<T>, {0x3A8, 4, 0, 0})
	CMember(UImage*)                                   Image_Background                                            OFFSET(get<T>, {0x3B0, 8, 0, 0})
	CMember(USizeBox*)                                 SizeBox_ButtonSize                                          OFFSET(get<T>, {0x3C0, 8, 0, 0})
	CMember(USizeBox*)                                 SizeBox_ImageSize                                           OFFSET(get<T>, {0x3C8, 8, 0, 0})
	CMember(UImage*)                                   Image_Icon                                                  OFFSET(get<T>, {0x3D0, 8, 0, 0})
	CMember(URadialBacchusButtonBase*)                 RadialButton_ButtonCooldown                                 OFFSET(get<T>, {0x3D8, 8, 0, 0})
	CMember(UButton*)                                  Button_InternalButton                                       OFFSET(get<T>, {0x3E0, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.BacchusButton.SetIconPressed
	// void SetIconPressed(bool bIsPressed);                                                                                    // [0x91353c0] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.BacchusButton.SetDefaultIcon
	// void SetDefaultIcon(UPaperSprite* Icon);                                                                                 // [0x9135344] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.BacchusButton.SetButtonSprite
	// void SetButtonSprite(UPaperSprite* NewSprite);                                                                           // [0x91352c0] RequiredAPI|Native|Event|Protected|BlueprintCallable|BlueprintEvent 
	// Function /Script/FortniteUI.BacchusButton.SetButtonSize
	// void SetButtonSize(float NewButtonSize);                                                                                 // [0x913523c] RequiredAPI|Native|Event|Public|BlueprintCallable|BlueprintEvent 
	// Function /Script/FortniteUI.BacchusButton.SetButtonDisplayScale
	// void SetButtonDisplayScale(float NewDisplayScale);                                                                       // [0x91351b8] RequiredAPI|Native|Event|Public|BlueprintCallable|BlueprintEvent 
	// Function /Script/FortniteUI.BacchusButton.OnClicked
	// void OnClicked();                                                                                                        // [0x7826848] RequiredAPI|Native|Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.BacchusButton.HandleCursorModeChanged
	// void HandleCursorModeChanged(bool bCursorModeEnabled, FName ActionName, UUserWidget* CustomWidget);                      // [0x9133bbc] Final|Native|Private 
};

/// Class /Script/FortniteUI.BacchusActionButton
/// Size: 0x0048 (0x0003E8 - 0x000430)
class UBacchusActionButton : public UBacchusButton
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1072;

public:
	CMember(TArray<FBacchusActionIconMapping>)         ActionMapping                                               OFFSET(get<T>, {0x3E8, 16, 0, 0})
	SMember(FName)                                     TempActionMapping                                           OFFSET(getStruct<T>, {0x3F8, 4, 0, 0})
	CMember(TArray<FGameplayTag>)                      ItemsAllowingClickThrough                                   OFFSET(get<T>, {0x400, 16, 0, 0})
	DMember(bool)                                      bCapturesInput                                              OFFSET(get<bool>, {0x410, 1, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.BacchusActionButton.OnCursorModeChanged
	// void OnCursorModeChanged(bool bCursorModeEnabled, FName ActionName, UUserWidget* CustomWidget);                          // [0x917ae80] Final|Native|Protected 
	// Function /Script/FortniteUI.BacchusActionButton.AddActionMappings
	// void AddActionMappings(TArray<FBacchusActionIconMapping> NewActionMappings);                                             // [0x9178b6c] Final|Native|Protected|BlueprintCallable 
};

/// Class /Script/FortniteUI.AlternativeCarryPickupButton
/// Size: 0x0008 (0x000430 - 0x000438)
class UAlternativeCarryPickupButton : public UBacchusActionButton
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1080;

public:
};

/// Class /Script/FortniteUI.AthenaHUDInputWidget
/// Size: 0x0000 (0x0002E8 - 0x0002E8)
class UAthenaHUDInputWidget : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 744;

public:
};

/// Class /Script/FortniteUI.AthenaPickingLayer
/// Size: 0x0000 (0x0002E8 - 0x0002E8)
class UAthenaPickingLayer : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 744;

public:
};

/// Class /Script/FortniteUI.BacchusAvailablePickupButton
/// Size: 0x0020 (0x0003E8 - 0x000408)
class UBacchusAvailablePickupButton : public UBacchusButton
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1032;

public:
	CMember(UFortMultiSizeItemCard*)                   ItemCard_BackgroundGradient                                 OFFSET(get<T>, {0x3E8, 8, 0, 0})
	CMember(UFortLazyImage*)                           LazyImage_AmmoIcon                                          OFFSET(get<T>, {0x3F0, 8, 0, 0})
	CMember(UCommonRichTextBlock*)                     Quantity_Text                                               OFFSET(get<T>, {0x3F8, 8, 0, 0})
};

/// Class /Script/FortniteUI.BacchusAvailablePickupsDisplay
/// Size: 0x0030 (0x000370 - 0x0003A0)
class UBacchusAvailablePickupsDisplay : public UBacchusHUDElement
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 928;

public:
	CMember(UClass*)                                   ListCollapsedButtonStyle                                    OFFSET(get<T>, {0x370, 8, 0, 0})
	CMember(UClass*)                                   ListVisibleButtonStyle                                      OFFSET(get<T>, {0x378, 8, 0, 0})
	CMember(UCommonButtonLegacy*)                      Button_ToggleVisibility                                     OFFSET(get<T>, {0x380, 8, 0, 0})
	CMember(UFortDynamicEntryBox*)                     EntryBox_PickupButtons                                      OFFSET(get<T>, {0x388, 8, 0, 0})
	CMember(TArray<TWeakObjectPtr>)                    CurrentPickupArray                                          OFFSET(get<T>, {0x390, 16, 0, 0})
};

/// Class /Script/FortniteUI.BacchusCloseButton
/// Size: 0x0010 (0x0014E0 - 0x0014F0)
class UBacchusCloseButton : public UCommonButtonLegacy
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 5360;

public:
	DMember(bool)                                      bIgnorePlatform                                             OFFSET(get<bool>, {0x14E1, 1, 0, 0})
};

/// Class /Script/FortniteUI.BacchusDPICustomScalingRule
/// Size: 0x0000 (0x000028 - 0x000028)
class UBacchusDPICustomScalingRule : public UDPICustomScalingRule
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 40;

public:
};

/// Class /Script/FortniteUI.BacchusKillFeed
/// Size: 0x00A0 (0x000370 - 0x000410)
class UBacchusKillFeed : public UBacchusHUDElement
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1040;

public:
	CMember(USizeBox*)                                 MainSizeBox                                                 OFFSET(get<T>, {0x3B0, 8, 0, 0})
	CMember(TWeakObjectPtr<UImage*>)                   FireImageRef                                                OFFSET(get<T>, {0x3B8, 32, 0, 0})
	SMember(FVector2D)                                 FireImageAbsoluteOffset                                     OFFSET(getStruct<T>, {0x3D8, 16, 0, 0})
	SMember(FText)                                     ShowAllTimeTimePropertyName                                 OFFSET(getStruct<T>, {0x3E8, 24, 0, 0})
	DMember(int32_t)                                   NumberOfActiveLines                                         OFFSET(get<int32_t>, {0x400, 4, 0, 0})
	SMember(FFortPrioritizedWidgetData)                PrioritizationData                                          OFFSET(getStruct<T>, {0x404, 2, 0, 0})
	SMember(FGameplayTag)                              NumberOfKillfeedLinesTag                                    OFFSET(getStruct<T>, {0x408, 4, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.BacchusKillFeed.SetActiveNumberOfLines
	// void SetActiveNumberOfLines(float numberOfLines);                                                                        // [0x9135138] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.BacchusKillFeed.OnStompFailed
	// void OnStompFailed();                                                                                                    // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.BacchusKillFeed.OnStompedByOtherWidget
	// void OnStompedByOtherWidget();                                                                                           // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.BacchusKillFeed.K2_OnBecomeInactive
	// void K2_OnBecomeInactive();                                                                                              // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.BacchusKillFeed.K2_OnBecomeActive
	// void K2_OnBecomeActive();                                                                                                // [0x1d9241c] Event|Protected|BlueprintEvent 
};

/// Class /Script/FortniteUI.BacchusQuickbarBase
/// Size: 0x0000 (0x000370 - 0x000370)
class UBacchusQuickbarBase : public UBacchusHUDElement
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 880;

public:
};

/// Class /Script/FortniteUI.BacchusQuickbar
/// Size: 0x0098 (0x000370 - 0x000408)
class UBacchusQuickbar : public UBacchusQuickbarBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1032;

public:
	DMember(float)                                     SlotSize                                                    OFFSET(get<float>, {0x370, 4, 0, 0})
	CMember(EComboSlotType)                            SlotType                                                    OFFSET(get<T>, {0x374, 1, 0, 0})
	DMember(bool)                                      bIsBackwards                                                OFFSET(get<bool>, {0x375, 1, 0, 0})
	CMember(UFortQuickbarBase*)                        BacchusQuickbarPrimary                                      OFFSET(get<T>, {0x378, 8, 0, 0})
	CMember(UFortQuickbarBase*)                        BacchusQuickbarSecondary                                    OFFSET(get<T>, {0x380, 8, 0, 0})
	CMember(UFortQuickbarBase*)                        BacchusQuickbarCreative                                     OFFSET(get<T>, {0x388, 8, 0, 0})
	CMember(UCommonVisibilitySwitcher*)                BarSwitcher                                                 OFFSET(get<T>, {0x390, 8, 0, 0})
	SMember(FGameplayTag)                              SlotLocksPropertyTag                                        OFFSET(getStruct<T>, {0x3F8, 4, 0, 0})
	SMember(FGameplayTag)                              ReversePropertyTag                                          OFFSET(getStruct<T>, {0x3FC, 4, 0, 0})
	SMember(FGameplayTag)                              SlotTypePropertyTag                                         OFFSET(getStruct<T>, {0x400, 4, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.BacchusQuickbar.Refresh
	// void Refresh();                                                                                                          // [0x766d3b8] Native|Event|Public|BlueprintCallable|BlueprintEvent 
	// Function /Script/FortniteUI.BacchusQuickbar.OnQuickbarChanged
	// void OnQuickbarChanged(UFortQuickbarBase* NewBar, UFortQuickbarBase* OldBar);                                            // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.BacchusQuickbar.OnModeChanged
	// void OnModeChanged(EFortQuickBars NewQuickbar, int32_t FocusedSlot);                                                     // [0x9134ed4] Final|Native|Protected 
};

/// Class /Script/FortniteUI.BacchusQuickbarComboSlot
/// Size: 0x0058 (0x000370 - 0x0003C8)
class UBacchusQuickbarComboSlot : public UBacchusQuickbarBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 968;

public:
	DMember(float)                                     SlotSize                                                    OFFSET(get<float>, {0x370, 4, 0, 0})
	CMember(EComboSlotType)                            SlotType                                                    OFFSET(get<T>, {0x374, 1, 0, 0})
	DMember(int32_t)                                   SlotIndex                                                   OFFSET(get<int32_t>, {0x378, 4, 0, 0})
	CMember(UBacchusQuickbarSlotBase*)                 PrimarySlot                                                 OFFSET(get<T>, {0x380, 8, 0, 0})
	CMember(UBacchusQuickbarSlotBase*)                 SecondarySlot                                               OFFSET(get<T>, {0x388, 8, 0, 0})
	CMember(UBacchusQuickbarSlotBase*)                 CreativeSlot                                                OFFSET(get<T>, {0x390, 8, 0, 0})
	SMember(FGameplayTagContainer)                     RefreshHUDStateTags                                         OFFSET(getStruct<T>, {0x398, 32, 0, 0})
	SMember(FGameplayTag)                              SlotTypePropertyTag                                         OFFSET(getStruct<T>, {0x3B8, 4, 0, 0})
	SMember(FGameplayTag)                              SlotLockPropertyTag                                         OFFSET(getStruct<T>, {0x3BC, 4, 0, 0})
	SMember(FGameplayTag)                              SlotNumberPropertyTag                                       OFFSET(getStruct<T>, {0x3C0, 4, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.BacchusQuickbarComboSlot.SetSize
	// void SetSize(float NewButtonSize);                                                                                       // [0x913523c] Native|Event|Public|BlueprintCallable|BlueprintEvent 
	// Function /Script/FortniteUI.BacchusQuickbarComboSlot.SetQuickbarType
	// void SetQuickbarType(int32_t NewType);                                                                                   // [0x9135440] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.BacchusQuickbarComboSlot.Refresh
	// void Refresh();                                                                                                          // [0x7827f48] Native|Event|Public|BlueprintCallable|BlueprintEvent 
	// Function /Script/FortniteUI.BacchusQuickbarComboSlot.GetQuickbarType
	// EFortQuickBars GetQuickbarType();                                                                                        // [0x9133968] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/FortniteUI.FortQuickBarSlotBase
/// Size: 0x0120 (0x0002E8 - 0x000408)
class UFortQuickBarSlotBase : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1032;

public:
	CMember(UCommonWidgetSwitcherLegacy*)              SwitcherTopComboSwitcher                                    OFFSET(get<T>, {0x300, 8, 0, 0})
	CMember(UCommonWidgetSwitcherLegacy*)              SwitcherBottomComboSwitcher                                 OFFSET(get<T>, {0x308, 8, 0, 0})
	CMember(UFortKeybindWidget*)                       KeybindTop                                                  OFFSET(get<T>, {0x310, 8, 0, 0})
	CMember(UFortKeybindWidget*)                       KeybindBottom                                               OFFSET(get<T>, {0x318, 8, 0, 0})
	CMember(UFortKeybindWidget*)                       KeybindBottomCombo1                                         OFFSET(get<T>, {0x320, 8, 0, 0})
	CMember(UFortKeybindWidget*)                       KeybindBottomCombo2                                         OFFSET(get<T>, {0x328, 8, 0, 0})
	CMember(UFortKeybindWidget*)                       KeybindTopComboArrow1                                       OFFSET(get<T>, {0x330, 8, 0, 0})
	CMember(UFortKeybindWidget*)                       KeybindTopComboArrow2                                       OFFSET(get<T>, {0x338, 8, 0, 0})
	CMember(UFortKeybindWidget*)                       KeybindBottomComboArrow1                                    OFFSET(get<T>, {0x340, 8, 0, 0})
	CMember(UFortKeybindWidget*)                       KeybindBottomComboArrow2                                    OFFSET(get<T>, {0x348, 8, 0, 0})
	CMember(UCommonTextBlock*)                         BottomHoldText                                              OFFSET(get<T>, {0x350, 8, 0, 0})
	CMember(UImage*)                                   TopLeftArrowImage                                           OFFSET(get<T>, {0x358, 8, 0, 0})
	CMember(UImage*)                                   TopLeftArrowImage2                                          OFFSET(get<T>, {0x360, 8, 0, 0})
	CMember(UImage*)                                   TopRightArrowImage                                          OFFSET(get<T>, {0x368, 8, 0, 0})
	CMember(UImage*)                                   TopRightArrowImage2                                         OFFSET(get<T>, {0x370, 8, 0, 0})
	CMember(UImage*)                                   BottomLeftArrowImage                                        OFFSET(get<T>, {0x378, 8, 0, 0})
	CMember(UImage*)                                   BottomLeftArrowImage2                                       OFFSET(get<T>, {0x380, 8, 0, 0})
	CMember(UImage*)                                   BottomRightArrowImage                                       OFFSET(get<T>, {0x388, 8, 0, 0})
	CMember(UImage*)                                   BottomRightArrowImage2                                      OFFSET(get<T>, {0x390, 8, 0, 0})
	CMember(UImage*)                                   EmptyImage                                                  OFFSET(get<T>, {0x398, 8, 0, 0})
	CMember(UFortMultiSizeItemCard*)                   ItemCardMaximized                                           OFFSET(get<T>, {0x3A0, 8, 0, 0})
	CMember(UFortMultiSizeItemCard*)                   ItemCardMinimized                                           OFFSET(get<T>, {0x3A8, 8, 0, 0})
	CMember(UFortItemCooldownWidget*)                  QuickbarSlotCooldown                                        OFFSET(get<T>, {0x3B0, 8, 0, 0})
	CMember(UImage*)                                   SlotInteraction                                             OFFSET(get<T>, {0x3B8, 8, 0, 0})
	CMember(UAthenaQuickBarNativeCell*)                NativeCell                                                  OFFSET(get<T>, {0x3C0, 8, 0, 0})
	DMember(int32_t)                                   SlotIndex                                                   OFFSET(get<int32_t>, {0x3C8, 4, 0, 0})
	CMember(EFortQuickBars)                            QuickBarType                                                OFFSET(get<T>, {0x3CC, 1, 0, 0})
	DMember(bool)                                      bShowBottomArrows                                           OFFSET(get<bool>, {0x3D4, 1, 1, 0})
	DMember(bool)                                      bShowTopArrows                                              OFFSET(get<bool>, {0x3D4, 1, 1, 3})
	DMember(bool)                                      bHideKeybindsWhenAbilityUnavailable                         OFFSET(get<bool>, {0x3D4, 1, 1, 6})
	DMember(bool)                                      bShouldCollapseItemWidgetBorder                             OFFSET(get<bool>, {0x3D4, 1, 1, 7})
	DMember(bool)                                      DoNotPlaySelectionAnimation                                 OFFSET(get<bool>, {0x3D5, 1, 1, 0})
	DMember(bool)                                      bIsAthenaQuickBar                                           OFFSET(get<bool>, {0x3D5, 1, 1, 1})
	DMember(bool)                                      bKeybindsHidden                                             OFFSET(get<bool>, {0x3D5, 1, 1, 2})
	CMember(EFortItemCardSize)                         ItemCardSize                                                OFFSET(get<T>, {0x3D6, 1, 0, 0})
	CMember(UFortItem*)                                Item                                                        OFFSET(get<T>, {0x3D8, 8, 0, 0})
	CMember(UFortInputData*)                           InputData                                                   OFFSET(get<T>, {0x3E0, 8, 0, 0})
	DMember(bool)                                      bCheckVisibilityBasedOffInventoryCapacity                   OFFSET(get<bool>, {0x3E8, 1, 0, 0})
	CMember(TWeakObjectPtr<UTutorialHighlight*>)       TutorialHighlight                                           OFFSET(get<T>, {0x3EC, 8, 0, 0})
	DMember(bool)                                      bDragAndDropEnabled                                         OFFSET(get<bool>, {0x3F4, 1, 0, 0})
	DMember(bool)                                      bUseSlotSizeBySlotUsage                                     OFFSET(get<bool>, {0x3F5, 1, 1, 0})
	CMember(TArray<FVector2D>)                         SlotSizeBySlotUsage                                         OFFSET(get<T>, {0x3F8, 16, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortQuickBarSlotBase.UpdateKeyBindingVisibility
	// void UpdateKeyBindingVisibility();                                                                                       // [0x95ce4b0] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortQuickBarSlotBase.UpdateKeyBindingText
	// void UpdateKeyBindingText();                                                                                             // [0x95ce49c] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortQuickBarSlotBase.UpdateItemCardsVisibility
	// void UpdateItemCardsVisibility();                                                                                        // [0x95ce474] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortQuickBarSlotBase.SetTopComboSwitcherVisibility
	// void SetTopComboSwitcherVisibility(ESlateVisibility InVisibility);                                                       // [0x95ce3f4] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortQuickBarSlotBase.SetSlotSelected
	// void SetSlotSelected(bool bSelected);                                                                                    // [0x1d9241c] Event|Public|BlueprintCallable|BlueprintEvent 
	// Function /Script/FortniteUI.FortQuickBarSlotBase.SetQuickbarTypeRuntime
	// void SetQuickbarTypeRuntime(EFortQuickBars NewQuickBarType, bool bRefresh);                                              // [0x95cde84] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortQuickBarSlotBase.SetQuickbarIndexRuntime
	// void SetQuickbarIndexRuntime(int32_t Index, bool bRefresh);                                                              // [0x95cdda4] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortQuickBarSlotBase.SetBottomComboSwitcherVisibility_BP
	// void SetBottomComboSwitcherVisibility_BP(ESlateVisibility InVisibility);                                                 // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.FortQuickBarSlotBase.SetBottomComboSwitcherVisibility
	// void SetBottomComboSwitcherVisibility(ESlateVisibility InVisibility);                                                    // [0x95cd9b0] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortQuickBarSlotBase.Resize
	// void Resize(EFortItemCardSize CardSize);                                                                                 // [0x95cd91c] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortQuickBarSlotBase.RefreshItemIfSlotChanged
	// void RefreshItemIfSlotChanged(EFortQuickBars InQuickBar, TArray<int32_t>& InSlot);                                       // [0x95cd820] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/FortniteUI.FortQuickBarSlotBase.RefreshItem
	// void RefreshItem();                                                                                                      // [0x95cd80c] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortQuickBarSlotBase.RefreshInventoryCapacity
	// void RefreshInventoryCapacity();                                                                                         // [0x95cd594] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortQuickBarSlotBase.OnRefreshItem
	// void OnRefreshItem();                                                                                                    // [0x1d9241c] Event|Public|BlueprintCallable|BlueprintEvent 
	// Function /Script/FortniteUI.FortQuickBarSlotBase.OnMinigameStarted
	// void OnMinigameStarted();                                                                                                // [0x95cd594] Final|Native|Protected 
	// Function /Script/FortniteUI.FortQuickBarSlotBase.OnMinigameEnded
	// void OnMinigameEnded();                                                                                                  // [0x95cd57c] Final|Native|Protected 
	// Function /Script/FortniteUI.FortQuickBarSlotBase.MinimizeSlot
	// void MinimizeSlot(bool bShouldSkipAnimation);                                                                            // [0x1d9241c] Event|Public|BlueprintCallable|BlueprintEvent 
	// Function /Script/FortniteUI.FortQuickBarSlotBase.MaximizeSlot
	// void MaximizeSlot(bool bShouldSkipAnimation);                                                                            // [0x1d9241c] Event|Public|BlueprintCallable|BlueprintEvent 
	// Function /Script/FortniteUI.FortQuickBarSlotBase.GetSlotSizeForItem
	// FVector2D GetSlotSizeForItem(UFortItem* InItem);                                                                         // [0x95cb8d0] Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortQuickBarSlotBase.GetKeyBindingActionKeyboard
	// FName GetKeyBindingActionKeyboard();                                                                                     // [0x95cb834] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortQuickBarSlotBase.GetKeyBindingActionGamepad
	// FName GetKeyBindingActionGamepad();                                                                                      // [0x95cb808] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortQuickBarSlotBase.GetKeyBindingAction
	// FName GetKeyBindingAction();                                                                                             // [0x95cb7dc] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/FortniteUI.AthenaQuickBarSlot
/// Size: 0x0158 (0x000408 - 0x000560)
class UAthenaQuickBarSlot : public UFortQuickBarSlotBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1376;

public:
	CMember(UImage*)                                   Image_Disabled                                              OFFSET(get<T>, {0x548, 8, 0, 0})
	DMember(bool)                                      bIsSelected                                                 OFFSET(get<bool>, {0x550, 1, 0, 0})
	SMember(FGameplayTag)                              ShowDisabledTag                                             OFFSET(getStruct<T>, {0x554, 4, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.AthenaQuickBarSlot.OnPawnChanged
	// void OnPawnChanged();                                                                                                    // [0x915c8e4] Final|Native|Protected 
	// Function /Script/FortniteUI.AthenaQuickBarSlot.OnExtensionWidgetAdded
	// void OnExtensionWidgetAdded(EUIExtensionSlot ExtensionSlot, UUserWidget* ExtensionWidget);                               // [0x1d9241c] Event|Protected|BlueprintEvent 
};

/// Class /Script/FortniteUI.BacchusQuickbarSlotBase
/// Size: 0x0058 (0x000560 - 0x0005B8)
class UBacchusQuickbarSlotBase : public UAthenaQuickBarSlot
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1464;

public:
	DMember(bool)                                      bHasOngoingUseAction                                        OFFSET(get<bool>, {0x560, 1, 0, 0})
	DMember(bool)                                      bTapToLockEnabled                                           OFFSET(get<bool>, {0x561, 1, 0, 0})
	DMember(bool)                                      bIsLocked                                                   OFFSET(get<bool>, {0x562, 1, 0, 0})
	DMember(bool)                                      bSupportsDragAndDrop                                        OFFSET(get<bool>, {0x563, 1, 0, 0})
	DMember(bool)                                      bDragDetected                                               OFFSET(get<bool>, {0x564, 1, 0, 0})
	DMember(bool)                                      bDragOpStarted                                              OFFSET(get<bool>, {0x565, 1, 0, 0})
	DMember(bool)                                      bInteractionStarted                                         OFFSET(get<bool>, {0x566, 1, 0, 0})
	SMember(FSlateColor)                               TouchedColor                                                OFFSET(getStruct<T>, {0x568, 20, 0, 0})
	SMember(FSlateColor)                               UntouchedColor                                              OFFSET(getStruct<T>, {0x57C, 20, 0, 0})
	CMember(UImage*)                                   SelectionHighlight                                          OFFSET(get<T>, {0x598, 8, 0, 0})
	CMember(UImage*)                                   LockIcon                                                    OFFSET(get<T>, {0x5A0, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.BacchusQuickbarSlotBase.StopUseSlot
	// void StopUseSlot();                                                                                                      // [0x913570c] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.BacchusQuickbarSlotBase.StartOngoingUse
	// void StartOngoingUse();                                                                                                  // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.BacchusQuickbarSlotBase.SlotSelected
	// void SlotSelected(bool bStopUseImmediately);                                                                             // [0x913568c] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.BacchusQuickbarSlotBase.ResetSlot
	// void ResetSlot();                                                                                                        // [0x91350a4] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.BacchusQuickbarSlotBase.EndInteraction
	// void EndInteraction();                                                                                                   // [0x1d9241c] Event|Public|BlueprintEvent 
};

/// Class /Script/FortniteUI.BacchusSignalQualityWidget
/// Size: 0x0008 (0x000370 - 0x000378)
class UBacchusSignalQualityWidget : public UBacchusHUDElement
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 888;

public:
};

/// Class /Script/FortniteUI.EmoteMenuButton
/// Size: 0x0000 (0x000430 - 0x000430)
class UEmoteMenuButton : public UBacchusActionButton
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1072;

public:
};

/// Class /Script/FortniteUI.FortQualityModeTile
/// Size: 0x0070 (0x001490 - 0x001500)
class UFortQualityModeTile : public UCommonButtonBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 5376;

public:
	CMember(EFortContentQualityLevel)                  QualityModeLevel                                            OFFSET(get<T>, {0x1490, 1, 0, 0})
	SMember(FText)                                     QualityLevelName                                            OFFSET(getStruct<T>, {0x1498, 24, 0, 0})
	SMember(FText)                                     QualityLevelDescription                                     OFFSET(getStruct<T>, {0x14B0, 24, 0, 0})
	CMember(UTexture2D*)                               QualityLevelImage                                           OFFSET(get<T>, {0x14C8, 8, 0, 0})
	SMember(FText)                                     AdditionalDownloadSize                                      OFFSET(getStruct<T>, {0x14D0, 24, 0, 0})
	SMember(FText)                                     TotalBuildSize                                              OFFSET(getStruct<T>, {0x14E8, 24, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortQualityModeTile.OnSizeInfoReceived
	// void OnSizeInfoReceived();                                                                                               // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortQualityModeTile.OnSelectedStateChanged
	// void OnSelectedStateChanged(bool bIsSelected);                                                                           // [0x1d9241c] Event|Protected|BlueprintEvent 
};

/// Class /Script/FortniteUI.MobileHUDVisual
/// Size: 0x0008 (0x0002E8 - 0x0002F0)
class UMobileHUDVisual : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 752;

public:
	SMember(FGameplayTag)                              VisualType                                                  OFFSET(getStruct<T>, {0x2E8, 4, 0, 0})
	DMember(float)                                     Opacity                                                     OFFSET(get<float>, {0x2EC, 4, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.MobileHUDVisual.GetVisualType
	// FGameplayTag GetVisualType();                                                                                            // [0x9159c10] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/FortniteUI.MobileHUDButtonVisual
/// Size: 0x0028 (0x0002F0 - 0x000318)
class UMobileHUDButtonVisual : public UMobileHUDVisual
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 792;

public:
	DMember(float)                                     ButtonSize                                                  OFFSET(get<float>, {0x2F0, 4, 0, 0})
	DMember(float)                                     ButtonDisplayScale                                          OFFSET(get<float>, {0x2F4, 4, 0, 0})
	CMember(UPaperSprite*)                             DefaultIcon                                                 OFFSET(get<T>, {0x2F8, 8, 0, 0})
	CMember(USizeBox*)                                 OuterSizeBox                                                OFFSET(get<T>, {0x300, 8, 0, 0})
	CMember(USizeBox*)                                 InnerSizeBox                                                OFFSET(get<T>, {0x308, 8, 0, 0})
	CMember(UImage*)                                   Image_Icon                                                  OFFSET(get<T>, {0x310, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.MobileHUDButtonVisual.SetButtonSprite
	// void SetButtonSprite(UPaperSprite* NewSprite);                                                                           // [0x915dd60] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/FortniteUI.RadialBacchusButtonBase
/// Size: 0x0050 (0x000328 - 0x000378)
class URadialBacchusButtonBase : public UFortHUDElementWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 888;

public:
	SMember(FGameplayTagContainer)                     TrackedCooldownTags                                         OFFSET(getStruct<T>, {0x328, 32, 0, 0})
	CMember(ECooldownTrackingType)                     TrackingType                                                OFFSET(get<T>, {0x348, 1, 0, 0})
	DMember(float)                                     CooldownDuration                                            OFFSET(get<float>, {0x34C, 4, 0, 0})
	DMember(float)                                     CooldownStartTime                                           OFFSET(get<float>, {0x350, 4, 0, 0})
	CMember(AFortPawn*)                                TrackedPawn                                                 OFFSET(get<T>, {0x368, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.RadialBacchusButtonBase.UpdateDuration_Blueprint
	// void UpdateDuration_Blueprint(float Remaining, float Duration);                                                          // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.RadialBacchusButtonBase.UpdateCooldown
	// void UpdateCooldown();                                                                                                   // [0x915e540] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.RadialBacchusButtonBase.StopUpdateCooldown
	// void StopUpdateCooldown();                                                                                               // [0x915e518] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.RadialBacchusButtonBase.StartUpdateCooldown
	// void StartUpdateCooldown();                                                                                              // [0x915e504] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.RadialBacchusButtonBase.SetListenedGameplayTag
	// void SetListenedGameplayTag(FGameplayTag InListenedTag);                                                                 // [0x915de28] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.RadialBacchusButtonBase.ReceiveRadialProgressEvent_Blueprint
	// void ReceiveRadialProgressEvent_Blueprint(FName EventName, TEnumAsByte<EGameplayCueEvent> EventType, FGameplayCueParameters& Parameters); // [0x1d9241c] Event|Protected|HasOutParms|BlueprintEvent 
	// Function /Script/FortniteUI.RadialBacchusButtonBase.ReceiveRadialProgressEvent
	// void ReceiveRadialProgressEvent(FName EventName, TEnumAsByte<EGameplayCueEvent> EventType, FGameplayCueParameters& Parameters); // [0x915db94] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/FortniteUI.RadialBacchusButtonBase.OnPlayerPawnSet
	// void OnPlayerPawnSet();                                                                                                  // [0x915cd98] Final|Native|Private 
	// Function /Script/FortniteUI.RadialBacchusButtonBase.OnCooldownStarted
	// void OnCooldownStarted();                                                                                                // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.RadialBacchusButtonBase.OnCooldownCompleted
	// void OnCooldownCompleted();                                                                                              // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.RadialBacchusButtonBase.HasActiveCooldown
	// bool HasActiveCooldown();                                                                                                // [0x915c0d4] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.RadialBacchusButtonBase.HandleUIGameplayCue
	// void HandleUIGameplayCue(FName CueName, TEnumAsByte<EGameplayCueEvent> EventType, FGameplayCueParameters& Parameters);   // [0x915bc64] Final|Native|Private|HasOutParms 
	// Function /Script/FortniteUI.RadialBacchusButtonBase.GetRemainingDuration
	// float GetRemainingDuration();                                                                                            // [0x91597b8] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.RadialBacchusButtonBase.GetListenedGameplayTag
	// FGameplayTag GetListenedGameplayTag();                                                                                   // [0x90974dc] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.RadialBacchusButtonBase.GameplayTagCallback
	// void GameplayTagCallback(FGameplayTag tag, int32_t NewCount);                                                            // [0x9157d88] Final|Native|Private 
};

/// Class /Script/FortniteUI.ResolutionChangeModal
/// Size: 0x0010 (0x000400 - 0x000410)
class UResolutionChangeModal : public UCommonActivatableWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1040;

public:
	CMember(UCommonButtonBase*)                        Button_Confirm                                              OFFSET(get<T>, {0x400, 8, 0, 0})
	CMember(UBacchusCloseButton*)                      Button_TouchClose                                           OFFSET(get<T>, {0x408, 8, 0, 0})
};

/// Class /Script/FortniteUI.AthenaAboutModal
/// Size: 0x0118 (0x000400 - 0x000518)
class UAthenaAboutModal : public UCommonActivatableWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1304;

public:
	SMember(FMulticastInlineDelegate)                  BP_OnAboutModalClosed                                       OFFSET(getStruct<T>, {0x400, 16, 0, 0})
	DMember(bool)                                      bForceShowPage                                              OFFSET(get<bool>, {0x410, 1, 0, 0})
	SMember(FText)                                     Title                                                       OFFSET(getStruct<T>, {0x418, 24, 0, 0})
	CMember(TArray<FText>)                             Entries                                                     OFFSET(get<T>, {0x430, 16, 0, 0})
	CMember(TWeakObjectPtr<UObject*>)                  HeroImage                                                   OFFSET(get<T>, {0x440, 32, 0, 0})
	CMember(TWeakObjectPtr<UClass*>)                   SeasonMovieWidgetClass                                      OFFSET(get<T>, {0x460, 32, 0, 0})
	CMember(UFortStreamMediaSource*)                   VideoStream_Source                                          OFFSET(get<T>, {0x480, 8, 0, 0})
	CMember(UScrollBox*)                               ScrollBox_Content                                           OFFSET(get<T>, {0x488, 8, 0, 0})
	CMember(UFortLazyImage*)                           Image_Item                                                  OFFSET(get<T>, {0x490, 8, 0, 0})
	CMember(UCommonButtonLegacy*)                      Button_Close                                                OFFSET(get<T>, {0x498, 8, 0, 0})
	CMember(UCommonButtonLegacy*)                      Button_CloseTouch                                           OFFSET(get<T>, {0x4A0, 8, 0, 0})
	CMember(UCommonButtonLegacy*)                      Button_BPSTrailer                                           OFFSET(get<T>, {0x4A8, 8, 0, 0})
	CMember(UCommonButtonLegacy*)                      Button_BPSTrailer_Mobile                                    OFFSET(get<T>, {0x4B0, 8, 0, 0})
	CMember(UCommonButtonLegacy*)                      Button_BPSHowTo                                             OFFSET(get<T>, {0x4B8, 8, 0, 0})
	CMember(UCommonButtonLegacy*)                      Button_BPSHowTo_Mobile                                      OFFSET(get<T>, {0x4C0, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.AthenaAboutModal.OnSetContent
	// void OnSetContent(FText& InTitle, TArray<FText>& InEntries);                                                             // [0x1d9241c] Event|Protected|HasOutParms|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaAboutModal.OnAboutModalClosedDynamic__DelegateSignature
	// void OnAboutModalClosedDynamic__DelegateSignature();                                                                     // [0x1d9241c] MulticastDelegate|Public|Delegate 
	// Function /Script/FortniteUI.AthenaAboutModal.CloseModal
	// void CloseModal();                                                                                                       // [0x9156438] Final|Native|Protected|BlueprintCallable 
};

/// Class /Script/FortniteUI.AthenaProgressModal
/// Size: 0x0010 (0x000400 - 0x000410)
class UAthenaProgressModal : public UCommonActivatableWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1040;

public:
	CMember(UCommonTextBlock*)                         Text_Title                                                  OFFSET(get<T>, {0x400, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_Description                                            OFFSET(get<T>, {0x408, 8, 0, 0})
};

/// Class /Script/FortniteUI.AthenaProfileStatBox
/// Size: 0x0028 (0x0001C8 - 0x0001F0)
class UAthenaProfileStatBox : public USizeBox
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 496;

public:
	SMember(FMulticastInlineDelegate)                  OnStatViewChanged                                           OFFSET(getStruct<T>, {0x1C8, 16, 0, 0})
	DMember(bool)                                      bRespectParentStatView                                      OFFSET(get<bool>, {0x1D8, 1, 0, 0})
	CMember(UAthenaBaseStatView*)                      StatView                                                    OFFSET(get<T>, {0x1E0, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.AthenaProfileStatBox.SetStatView
	// void SetStatView(UAthenaBaseStatView* InStatView, bool RespectParentStatView);                                           // [0x915e1c0] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.AthenaProfileStatBox.OnStatViewChanged__DelegateSignature
	// void OnStatViewChanged__DelegateSignature(UAthenaBaseStatView* StatView);                                                // [0x1d9241c] MulticastDelegate|Public|Delegate 
	// Function /Script/FortniteUI.AthenaProfileStatBox.GetStatStyle
	// FFortUIStatStyle GetStatStyle(FGameplayTag& InStat);                                                                     // [0x91599ac] Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.AthenaProfileStatBox.GetBaseStatView
	// UAthenaBaseStatView* GetBaseStatView();                                                                                  // [0x9157ffc] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/FortniteUI.AthenaBaseStatView
/// Size: 0x0000 (0x000028 - 0x000028)
class UAthenaBaseStatView : public UObject
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 40;

public:
};

/// Class /Script/FortniteUI.AthenaWeaponStatView
/// Size: 0x0010 (0x000028 - 0x000038)
class UAthenaWeaponStatView : public UAthenaBaseStatView
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 56;

public:
};

/// Class /Script/FortniteUI.AthenaMatchStatView
/// Size: 0x00F8 (0x000028 - 0x000120)
class UAthenaMatchStatView : public UAthenaBaseStatView
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 288;

public:
	CMember(TArray<UAthenaWeaponStatView*>)            WeaponStatViews                                             OFFSET(get<T>, {0x110, 16, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.AthenaMatchStatView.GetWeaponViews
	// TArray<UAthenaWeaponStatView*> GetWeaponViews();                                                                         // [0x9159d34] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.AthenaMatchStatView.GetWeaponViewHighestStat
	// UAthenaWeaponStatView* GetWeaponViewHighestStat(FGameplayTag& InStat);                                                   // [0x9159c4c] Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.AthenaMatchStatView.GetSortedWeaponViews
	// TArray<UAthenaWeaponStatView*> GetSortedWeaponViews(FGameplayTag& InStat);                                               // [0x9159820] Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.AthenaMatchStatView.GetMatchID
	// FString GetMatchID();                                                                                                    // [0x9158f70] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.AthenaMatchStatView.GetMatchEndTime
	// FDateTime GetMatchEndTime();                                                                                             // [0x9158f20] Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/FortniteUI.AthenaMatchSetStatView
/// Size: 0x0020 (0x000120 - 0x000140)
class UAthenaMatchSetStatView : public UAthenaMatchStatView
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 320;

public:
	CMember(UAthenaSeasonStats*)                       OwningSeason                                                OFFSET(get<T>, {0x120, 8, 0, 0})
	SMember(FName)                                     PlaylistId                                                  OFFSET(getStruct<T>, {0x128, 4, 0, 0})
	CMember(TArray<UAthenaMatchStatView*>)             BestMatches                                                 OFFSET(get<T>, {0x130, 16, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.AthenaMatchSetStatView.GetOwningSeason
	// UAthenaSeasonStats* GetOwningSeason();                                                                                   // [0x91590a4] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.AthenaMatchSetStatView.GetBestMatchViews
	// TArray<UAthenaMatchStatView*> GetBestMatchViews();                                                                       // [0x9158014] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/FortniteUI.AthenaProfileStatContext
/// Size: 0x0018 (0x000030 - 0x000048)
class UAthenaProfileStatContext : public UBlueprintContextBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 72;

public:
	SMember(FMulticastInlineDelegate)                  OnStatsProfileLoaded                                        OFFSET(getStruct<T>, {0x30, 16, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.AthenaProfileStatContext.OnAthenaStatsProfileLoaded__DelegateSignature
	// void OnAthenaStatsProfileLoaded__DelegateSignature(UFortMcpProfileAthenaStats* StatProfile);                             // [0x1d9241c] MulticastDelegate|Public|Delegate 
	// Function /Script/FortniteUI.AthenaProfileStatContext.CreateMatchViews
	// TArray<UAthenaMatchStatView*> CreateMatchViews(TArray<FAthenaMatchStats>& InRecentMatches);                              // [0x91566b4] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/FortniteUI.AthenaProfileStatContext.CreateMatchStatView
	// UAthenaMatchSetStatView* CreateMatchStatView(UAthenaSeasonStats* StatSet, FName Bucket);                                 // [0x91564c8] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.AthenaProfileStatContext.CreateCurrentMatchStatView
	// UAthenaMatchStatView* CreateCurrentMatchStatView();                                                                      // [0x915644c] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/FortniteUI.AthenaProfileStatListWidgetBase
/// Size: 0x0010 (0x0014E0 - 0x0014F0)
class UAthenaProfileStatListWidgetBase : public UCommonButtonLegacy
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 5360;

public:
	CMember(UAthenaProfileStatBox*)                    ProfileStatBox                                              OFFSET(get<T>, {0x14E8, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.AthenaProfileStatListWidgetBase.OnStatChanged
	// void OnStatChanged();                                                                                                    // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaProfileStatListWidgetBase.HandleStatViewChanged
	// void HandleStatViewChanged(UAthenaBaseStatView* StatView);                                                               // [0x915b420] Final|Native|Private 
};

/// Class /Script/FortniteUI.AthenaProfileStatsBase
/// Size: 0x0060 (0x000538 - 0x000598)
class UAthenaProfileStatsBase : public UCommonActivatablePanelLegacy
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1432;

public:
	CMember(UAthenaProfileStatBox*)                    ProfileStatBox                                              OFFSET(get<T>, {0x538, 8, 0, 0})
	CMember(TArray<UAthenaSeasonStats*>)               StatSets                                                    OFFSET(get<T>, {0x540, 16, 0, 0})
	CMember(UAthenaSeasonStats*)                       CurrentViewedStatSet                                        OFFSET(get<T>, {0x550, 8, 0, 0})
	CMember(UAthenaMatchStatView*)                     CurrentStatView                                             OFFSET(get<T>, {0x558, 8, 0, 0})
	SMember(FName)                                     CurrentPlaylist                                             OFFSET(getStruct<T>, {0x560, 4, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.AthenaProfileStatsBase.Setup
	// void Setup(FUniqueNetIdRepl& InUniqueId);                                                                                // [0x915e35c] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/FortniteUI.AthenaProfileStatsBase.PrevStatSet
	// void PrevStatSet();                                                                                                      // [0x915db10] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.AthenaProfileStatsBase.OnStatSetChanged
	// void OnStatSetChanged();                                                                                                 // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaProfileStatsBase.OnStartFetchingData
	// void OnStartFetchingData();                                                                                              // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaProfileStatsBase.OnProfileLoaded
	// void OnProfileLoaded(UFortMcpProfileAthenaStats* ProfileAthenaStats);                                                    // [0x915ce2c] Final|Native|Private 
	// Function /Script/FortniteUI.AthenaProfileStatsBase.OnNoData
	// void OnNoData();                                                                                                         // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaProfileStatsBase.OnDataRecieved
	// void OnDataRecieved();                                                                                                   // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaProfileStatsBase.NumStatSets
	// int32_t NumStatSets();                                                                                                   // [0x915c1b0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.AthenaProfileStatsBase.NextStatSet
	// void NextStatSet();                                                                                                      // [0x915c130] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.AthenaProfileStatsBase.NextPlaylist
	// void NextPlaylist();                                                                                                     // [0x915c11c] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.AthenaProfileStatsBase.GetUniqueID
	// FUniqueNetIdRepl GetUniqueID();                                                                                          // [0x9159b04] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.AthenaProfileStatsBase.GetCurrentStatSet
	// UAthenaSeasonStats* GetCurrentStatSet();                                                                                 // [0x9158730] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.AthenaProfileStatsBase.GetCurrentPlaylistName
	// FText GetCurrentPlaylistName();                                                                                          // [0x9158694] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/FortniteUI.AthenaProfileStatsRecentMatchesBase
/// Size: 0x0040 (0x000538 - 0x000578)
class UAthenaProfileStatsRecentMatchesBase : public UCommonActivatablePanelLegacy
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1400;

public:
	CMember(TArray<UAthenaMatchStatView*>)             RecentMatches                                               OFFSET(get<T>, {0x538, 16, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.AthenaProfileStatsRecentMatchesBase.Setup
	// void Setup(FUniqueNetIdRepl& InUniqueId);                                                                                // [0x915e430] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/FortniteUI.AthenaProfileStatsRecentMatchesBase.OnStartFetchingData
	// void OnStartFetchingData();                                                                                              // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaProfileStatsRecentMatchesBase.OnRecentMatcheChanged
	// void OnRecentMatcheChanged();                                                                                            // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaProfileStatsRecentMatchesBase.OnProfileLoaded
	// void OnProfileLoaded(UFortMcpProfileAthenaStats* ProfileAthenaStats);                                                    // [0x915cec0] Final|Native|Private 
	// Function /Script/FortniteUI.AthenaProfileStatsRecentMatchesBase.OnNoData
	// void OnNoData();                                                                                                         // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaProfileStatsRecentMatchesBase.OnDataRecieved
	// void OnDataRecieved();                                                                                                   // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaProfileStatsRecentMatchesBase.GetUniqueID
	// FUniqueNetIdRepl GetUniqueID();                                                                                          // [0x9159b64] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.AthenaProfileStatsRecentMatchesBase.GetRecentMatches
	// TArray<UAthenaMatchStatView*> GetRecentMatches();                                                                        // [0x9159138] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/FortniteUI.AthenaProfileStatWidgetBase
/// Size: 0x0010 (0x0002E8 - 0x0002F8)
class UAthenaProfileStatWidgetBase : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 760;

public:
	SMember(FGameplayTag)                              Stat                                                        OFFSET(getStruct<T>, {0x2E8, 4, 0, 0})
	CMember(UAthenaProfileStatBox*)                    ProfileStatBox                                              OFFSET(get<T>, {0x2F0, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.AthenaProfileStatWidgetBase.SetStatView
	// void SetStatView(UAthenaBaseStatView* InStatView, bool RespectParentStatView);                                           // [0x915e28c] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.AthenaProfileStatWidgetBase.SetAsStat
	// void SetAsStat(FGameplayTag& InStat);                                                                                    // [0x915dccc] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/FortniteUI.AthenaProfileStatWidgetBase.OnStatChanged
	// void OnStatChanged();                                                                                                    // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaProfileStatWidgetBase.HandleStatViewChanged
	// void HandleStatViewChanged(UAthenaBaseStatView* StatView);                                                               // [0x915b4a0] Final|Native|Private 
	// Function /Script/FortniteUI.AthenaProfileStatWidgetBase.CreateWeaponGroupData
	// TArray<FStatGroupData> CreateWeaponGroupData(int32_t MaxToReturn, bool bIncludeOtherCategory, bool bPercentages);        // [0x9156774] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/FortniteUI.FortProfileStatsMainTile
/// Size: 0x0018 (0x0002E8 - 0x000300)
class UFortProfileStatsMainTile : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 768;

public:
	CMember(UCommonTextBlock*)                         ValueTextBlock                                              OFFSET(get<T>, {0x2E8, 8, 0, 0})
	CMember(UCommonTextBlock*)                         NameTextBlock                                               OFFSET(get<T>, {0x2F0, 8, 0, 0})
	DMember(int32_t)                                   TileTier                                                    OFFSET(get<int32_t>, {0x2F8, 4, 0, 0})
};

/// Class /Script/FortniteUI.FortProfileStatsRow
/// Size: 0x0038 (0x0002E8 - 0x000320)
class UFortProfileStatsRow : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 800;

public:
	CMember(UCommonTextBlock*)                         Name                                                        OFFSET(get<T>, {0x2E8, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Value                                                       OFFSET(get<T>, {0x2F0, 8, 0, 0})
	SMember(FText)                                     StatName                                                    OFFSET(getStruct<T>, {0x2F8, 24, 0, 0})
	SMember(FString)                                   BaseGameplayTag                                             OFFSET(getStruct<T>, {0x310, 16, 0, 0})
};

/// Class /Script/FortniteUI.FortFuelGaugeIndicator
/// Size: 0x0010 (0x0002C0 - 0x0002D0)
class UFortFuelGaugeIndicator : public UUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 720;

public:
	CMember(UImage*)                                   Image_FuelGauge                                             OFFSET(get<T>, {0x2C0, 8, 0, 0})
	SMember(FName)                                     FuelGaugeProgressMaterialParamName                          OFFSET(getStruct<T>, {0x2C8, 4, 0, 0})
};

/// Class /Script/FortniteUI.FortQuickbarBase
/// Size: 0x0010 (0x000328 - 0x000338)
class UFortQuickbarBase : public UFortHUDElementWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 824;

public:
};

/// Class /Script/FortniteUI.FortWeaponFuelGaugeIndicator
/// Size: 0x0010 (0x0002F0 - 0x000300)
class UFortWeaponFuelGaugeIndicator : public UAthenaQuickBarSlotExtensionWidgetBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 768;

public:
	CMember(UFortFuelGaugeIndicator*)                  FuelGaugeIndicator_Main                                     OFFSET(get<T>, {0x2F0, 8, 0, 0})
	CMember(UFortWorldItem*)                           RepresentedItem                                             OFFSET(get<T>, {0x2F8, 8, 0, 0})
};

/// Class /Script/FortniteUI.AthenaReplayBrowserEntryWidget
/// Size: 0x0040 (0x0014E0 - 0x001520)
class UAthenaReplayBrowserEntryWidget : public UCommonButtonLegacy
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 5408;

public:
	CMember(UImage*)                                   DownloadIcon                                                OFFSET(get<T>, {0x14E8, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_Name                                                   OFFSET(get<T>, {0x14F0, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_Date                                                   OFFSET(get<T>, {0x14F8, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_Length                                                 OFFSET(get<T>, {0x1500, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_Rank                                                   OFFSET(get<T>, {0x1508, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_Eliminations                                           OFFSET(get<T>, {0x1510, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.AthenaReplayBrowserEntryWidget.BP_HandleReplayStateSet
	// void BP_HandleReplayStateSet(bool bSaved, bool Bold, bool bCorrupt);                                                     // [0x1d9241c] Event|Protected|BlueprintEvent 
};

/// Class /Script/FortniteUI.AthenaReplayBrowserScreenBase
/// Size: 0x0090 (0x000570 - 0x000600)
class UAthenaReplayBrowserScreenBase : public UFortActivatablePanel
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1536;

public:
	CMember(UClass*)                                   ViewStreamingReplayModalClass                               OFFSET(get<T>, {0x570, 8, 0, 0})
	SMember(FDataTableRowHandle)                       RefreshActionRowHandle                                      OFFSET(getStruct<T>, {0x578, 16, 0, 0})
	SMember(FDataTableRowHandle)                       BackActionRowHandle                                         OFFSET(getStruct<T>, {0x588, 16, 0, 0})
	SMember(FDataTableRowHandle)                       ViewStreamingReplayActionRowHandle                          OFFSET(getStruct<T>, {0x598, 16, 0, 0})
	CMember(UCommonListView*)                          ListView_Replay                                             OFFSET(get<T>, {0x5A8, 8, 0, 0})
	CMember(UFortReplayBrowserRenameDialog*)           RenameDialog                                                OFFSET(get<T>, {0x5B0, 8, 0, 0})
	CMember(UCommonButtonBase*)                        Button_OpenReplayFolder                                     OFFSET(get<T>, {0x5B8, 8, 0, 0})
	CMember(UCommonButtonBase*)                        Button_PlayReplay                                           OFFSET(get<T>, {0x5C0, 8, 0, 0})
	CMember(UCommonButtonBase*)                        Button_DeleteReplay                                         OFFSET(get<T>, {0x5C8, 8, 0, 0})
	CMember(UCommonButtonBase*)                        Button_RenameReplay                                         OFFSET(get<T>, {0x5D0, 8, 0, 0})
	CMember(TArray<UAthenaReplayBrowserRowProxyInstance*>) RowProxies                                              OFFSET(get<T>, {0x5D8, 16, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.AthenaReplayBrowserScreenBase.OnActionStateChanged
	// void OnActionStateChanged(bool bHasAction);                                                                              // [0x1d9241c] Event|Protected|BlueprintEvent 
};

/// Class /Script/FortniteUI.FortWeaponReticleExtensionWidgetBase
/// Size: 0x0018 (0x000328 - 0x000340)
class UFortWeaponReticleExtensionWidgetBase : public UFortHUDElementWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 832;

public:
	CMember(AFortWeapon*)                              CachedAssociatedWeapon                                      OFFSET(get<T>, {0x328, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortWeaponReticleExtensionWidgetBase.UpdateRemainingCooldown
	// void UpdateRemainingCooldown();                                                                                          // [0x1d9241c] Event|Protected|BlueprintCallable|BlueprintEvent 
	// Function /Script/FortniteUI.FortWeaponReticleExtensionWidgetBase.UpdateCooldownQueryTimer
	// void UpdateCooldownQueryTimer();                                                                                         // [0x1d9241c] Event|Protected|BlueprintCallable|BlueprintEvent 
	// Function /Script/FortniteUI.FortWeaponReticleExtensionWidgetBase.SeatChangeEndedWidgetStateHandler
	// void SeatChangeEndedWidgetStateHandler();                                                                                // [0x915dcb8] Final|Native|Protected 
	// Function /Script/FortniteUI.FortWeaponReticleExtensionWidgetBase.OnWeaponSingleFire
	// void OnWeaponSingleFire();                                                                                               // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortWeaponReticleExtensionWidgetBase.OnWeaponReloadStarted
	// void OnWeaponReloadStarted(float ReloadTime, EFortWeaponReloadType ReloadType);                                          // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortWeaponReticleExtensionWidgetBase.OnWeaponReloadCancelled
	// void OnWeaponReloadCancelled();                                                                                          // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortWeaponReticleExtensionWidgetBase.OnTargetingChanged
	// void OnTargetingChanged(bool bIsADS);                                                                                    // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortWeaponReticleExtensionWidgetBase.OnFullyExitVehicle
	// void OnFullyExitVehicle();                                                                                               // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortWeaponReticleExtensionWidgetBase.HandleVehicleSeatChanged
	// void HandleVehicleSeatChanged(int32_t SeatIndex);                                                                        // [0x915be4c] Final|Native|Private 
	// Function /Script/FortniteUI.FortWeaponReticleExtensionWidgetBase.HandleTargetingChanged
	// void HandleTargetingChanged(bool bNewIsADS);                                                                             // [0x915b51c] Final|Native|Protected 
	// Function /Script/FortniteUI.FortWeaponReticleExtensionWidgetBase.HandleFullyExitVehicle
	// void HandleFullyExitVehicle();                                                                                           // [0x915a5fc] Final|Native|Private 
	// Function /Script/FortniteUI.FortWeaponReticleExtensionWidgetBase.HandleEnterVehiclePassenger
	// void HandleEnterVehiclePassenger();                                                                                      // [0x915a55c] Final|Native|Private 
	// Function /Script/FortniteUI.FortWeaponReticleExtensionWidgetBase.HandleEnterVehicleDriver
	// void HandleEnterVehicleDriver();                                                                                         // [0x915a55c] Final|Native|Private 
	// Function /Script/FortniteUI.FortWeaponReticleExtensionWidgetBase.HandleCooldownTimer
	// void HandleCooldownTimer(bool bActivateTimer, float TimerInterval);                                                      // [0x915a3d0] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.FortWeaponReticleExtensionWidgetBase.GetIsADS
	// bool GetIsADS();                                                                                                         // [0x91587cc] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortWeaponReticleExtensionWidgetBase.GetEquippedWeapon
	// AFortWeapon* GetEquippedWeapon();                                                                                        // [0x91587a8] Final|RequiredAPI|Native|Protected|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/FortniteUI.FortChargedWeaponReticleExtensionWidget
/// Size: 0x0010 (0x000340 - 0x000350)
class UFortChargedWeaponReticleExtensionWidget : public UFortWeaponReticleExtensionWidgetBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 848;

public:
	DMember(float)                                     UpdateFrequencySecs                                         OFFSET(get<float>, {0x348, 4, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortChargedWeaponReticleExtensionWidget.OnUpdateChargeDisplay
	// void OnUpdateChargeDisplay(float ChargePercent);                                                                         // [0x1d9241c] Event|Protected|BlueprintEvent 
};

/// Class /Script/FortniteUI.FortPrioritizedWidget
/// Size: 0x0000 (0x000028 - 0x000028)
class UFortPrioritizedWidget : public UInterface
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 40;

public:
};

/// Class /Script/FortniteUI.FortPrioritizedWidgetSwitcher
/// Size: 0x0030 (0x000240 - 0x000270)
class UFortPrioritizedWidgetSwitcher : public UCommonWidgetSwitcherLegacy
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 624;

public:
	DMember(float)                                     CachingTime                                                 OFFSET(get<float>, {0x254, 4, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnPriorityWidgetActivatedDelegate                           OFFSET(getStruct<T>, {0x260, 16, 0, 0})
};

/// Class /Script/FortniteUI.AthenaReplayActionFeedRowBase
/// Size: 0x0088 (0x0002E8 - 0x000370)
class UAthenaReplayActionFeedRowBase : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 880;

public:
	CMember(TWeakObjectPtr<UTexture2D*>)               Texture_EliminationIcon                                     OFFSET(get<T>, {0x2F0, 32, 0, 0})
	CMember(TWeakObjectPtr<UTexture2D*>)               Texture_DbnoIcon                                            OFFSET(get<T>, {0x310, 32, 0, 0})
	CMember(UImage*)                                   Image_EventIcon                                             OFFSET(get<T>, {0x330, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_EventTime                                              OFFSET(get<T>, {0x338, 8, 0, 0})
	CMember(UCommonButtonLegacy*)                      Button_InstigatorButton                                     OFFSET(get<T>, {0x340, 8, 0, 0})
	CMember(UCommonButtonLegacy*)                      Button_VictimButton                                         OFFSET(get<T>, {0x348, 8, 0, 0})
	CMember(UAthenaReplayActionFeedRowProxyInstance*)  RowProxy                                                    OFFSET(get<T>, {0x350, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.AthenaReplayActionFeedRowBase.OnVictimNameUpdated
	// void OnVictimNameUpdated(FText& VictimName);                                                                             // [0x1d9241c] Event|Protected|HasOutParms|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaReplayActionFeedRowBase.OnPlayerStateAdded
	// void OnPlayerStateAdded(AFortPlayerStateAthena* FPSA);                                                                   // [0x915cdac] Final|Native|Private 
	// Function /Script/FortniteUI.AthenaReplayActionFeedRowBase.OnInstigatorNameUpdated
	// void OnInstigatorNameUpdated(FText& InstigatorName);                                                                     // [0x1d9241c] Event|Protected|HasOutParms|BlueprintEvent 
};

/// Class /Script/FortniteUI.AthenaReplayActionFeedScreenBase
/// Size: 0x0050 (0x000570 - 0x0005C0)
class UAthenaReplayActionFeedScreenBase : public UFortActivatablePanel
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1472;

public:
	CMember(UCommonListView*)                          ListView_Entries                                            OFFSET(get<T>, {0x570, 8, 0, 0})
	CMember(UCommonButtonLegacy*)                      Button_Close                                                OFFSET(get<T>, {0x578, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.AthenaReplayActionFeedScreenBase.OnReplayEventsUpdated
	// void OnReplayEventsUpdated(EPlayEventType Type);                                                                         // [0x915d124] Final|Native|Private 
	// Function /Script/FortniteUI.AthenaReplayActionFeedScreenBase.HandlePlayerBecameRelevant
	// void HandlePlayerBecameRelevant(AFortPlayerState* FortPlayerState);                                                      // [0x915a91c] Final|Native|Private 
	// Function /Script/FortniteUI.AthenaReplayActionFeedScreenBase.HandleCloseActionFeed
	// void HandleCloseActionFeed();                                                                                            // [0x915a3b4] Final|Native|Protected|BlueprintCallable 
};

/// Class /Script/FortniteUI.AthenaBroadcastFollowedPlayerInfoBase
/// Size: 0x0028 (0x000328 - 0x000350)
class UAthenaBroadcastFollowedPlayerInfoBase : public UFortHUDElementWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 848;

public:
	CMember(UAthenaSpectatorPlayerWidgetBase*)         PlayerWidget                                                OFFSET(get<T>, {0x328, 8, 0, 0})
	CMember(UAthenaSpectatorHitPointBarBase*)          HitPointBar_Health                                          OFFSET(get<T>, {0x330, 8, 0, 0})
	CMember(UAthenaSpectatorHitPointBarBase*)          HitPointBar_Shield                                          OFFSET(get<T>, {0x338, 8, 0, 0})
	CMember(UAthenaSpectatorHitPointBarBase*)          HitPointBar_Vehicle                                         OFFSET(get<T>, {0x340, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.AthenaBroadcastFollowedPlayerInfoBase.OnVehicleStateChanged
	// void OnVehicleStateChanged(AActor* NewVehicle, AActor* OldVehicle);                                                      // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaBroadcastFollowedPlayerInfoBase.OnPipModeChanged
	// void OnPipModeChanged(bool bPipModeEnabled);                                                                             // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaBroadcastFollowedPlayerInfoBase.OnFollowedPlayerChanged
	// void OnFollowedPlayerChanged(AFortPlayerControllerSpectating* SpectatingPC, AFortPlayerState* FollowedPlayerState);      // [0x20cb9d4] Final|Native|Private 
	// Function /Script/FortniteUI.AthenaBroadcastFollowedPlayerInfoBase.OnEliminatedStateChanged
	// void OnEliminatedStateChanged(UAthenaRemotePlayerViewData* PlayerData, bool bIsEliminated);                              // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaBroadcastFollowedPlayerInfoBase.GetFollowedPlayerData
	// UAthenaRemotePlayerViewData* GetFollowedPlayerData();                                                                    // [0x2eb6cb0] Final|Native|Protected|BlueprintCallable 
};

/// Class /Script/FortniteUI.AthenaBroadcastGamePhaseWidget
/// Size: 0x0008 (0x000398 - 0x0003A0)
class UAthenaBroadcastGamePhaseWidget : public UAthenaGamePhaseWidgetBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 928;

public:
	CMember(AFortMinigame*)                            MinigameOverride                                            OFFSET(get<T>, {0x398, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.AthenaBroadcastGamePhaseWidget.SetMinigameOverride
	// void SetMinigameOverride(AFortMinigame* Minigame);                                                                       // [0x915df78] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/FortniteUI.AthenaBroadcastHUDBase
/// Size: 0x0180 (0x000618 - 0x000798)
class UAthenaBroadcastHUDBase : public UAthenaHUDBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1944;

public:
	SMember(FDataTableRowHandle)                       ToggleMatchStatusActionRowHandle                            OFFSET(getStruct<T>, {0x618, 16, 0, 0})
	SMember(FDataTableRowHandle)                       ToggleSquadStatusActionRowHandle                            OFFSET(getStruct<T>, {0x628, 16, 0, 0})
	SMember(FDataTableRowHandle)                       ToggleRemainingPlayersActionRowHandle                       OFFSET(getStruct<T>, {0x638, 16, 0, 0})
	SMember(FDataTableRowHandle)                       ToggleActiveGridScreenActionRowHandle                       OFFSET(getStruct<T>, {0x648, 16, 0, 0})
	SMember(FDataTableRowHandle)                       ToggleEliminatedGridScreenActionRowHandle                   OFFSET(getStruct<T>, {0x658, 16, 0, 0})
	SMember(FDataTableRowHandle)                       ToggleMatchStatusScreenActionRowHandle                      OFFSET(getStruct<T>, {0x668, 16, 0, 0})
	SMember(FDataTableRowHandle)                       ToggleScoreboardScreenActionRowHandle                       OFFSET(getStruct<T>, {0x678, 16, 0, 0})
	SMember(FDataTableRowHandle)                       ToggleKillFeedActionRowHandle                               OFFSET(getStruct<T>, {0x688, 16, 0, 0})
	SMember(FDataTableRowHandle)                       ToggleActionFeedScreenActionRowHandle                       OFFSET(getStruct<T>, {0x698, 16, 0, 0})
	SMember(FDataTableRowHandle)                       ToggleGotoTimeRowHandle                                     OFFSET(getStruct<T>, {0x6A8, 16, 0, 0})
	SMember(FDataTableRowHandle)                       TogglePipModeActionRowHandle                                OFFSET(getStruct<T>, {0x6B8, 16, 0, 0})
	SMember(FDataTableRowHandle)                       ToggleFollowedPlayerInfoActionRowHandle                     OFFSET(getStruct<T>, {0x6C8, 16, 0, 0})
	SMember(FDataTableRowHandle)                       ToggleFullscreenMapActionRowHandle                          OFFSET(getStruct<T>, {0x6D8, 16, 0, 0})
	CMember(TMap<TWeakObjectPtr, FUIExtension>)        ExtensionWidgetOverrides                                    OFFSET(get<T>, {0x6E8, 80, 0, 0})
	CMember(UAthenaSpectatorHUDControlsBase*)          BroadcastHUDControls                                        OFFSET(get<T>, {0x738, 8, 0, 0})
	CMember(UCommonActivatableWidgetStack*)            WidgetStack_SpectatorPrimaryContent                         OFFSET(get<T>, {0x740, 8, 0, 0})
	CMember(UAthenaSpectatorNameplateLayerBase*)       NameplateLayer                                              OFFSET(get<T>, {0x748, 8, 0, 0})
	CMember(UAthenaBroadcastMapPanelBase*)             AthenaBroadcastMapPanel                                     OFFSET(get<T>, {0x750, 8, 0, 0})
	CMember(UCommonWidgetSwitcherLegacy*)              EventMatchInfoSwitcher                                      OFFSET(get<T>, {0x758, 8, 0, 0})
	CMember(UCommonWidgetSwitcherLegacy*)              Switcher_TopLeft                                            OFFSET(get<T>, {0x760, 8, 0, 0})
	CMember(USpacer*)                                  TopLeft_Empty                                               OFFSET(get<T>, {0x768, 8, 0, 0})
	CMember(UFortBroadcastViewSettings*)               TopLeft_ViewSettings                                        OFFSET(get<T>, {0x770, 8, 0, 0})
	CMember(UAthenaReplayActionFeedScreenBase*)        TopLeft_ActionFeed                                          OFFSET(get<T>, {0x778, 8, 0, 0})
	CMember(UFortReplayGoToTimeDialogue*)              TopLeft_GoToTime                                            OFFSET(get<T>, {0x780, 8, 0, 0})
	CMember(UFortReplayHighlightsWindow*)              TopLeft_Highlights                                          OFFSET(get<T>, {0x788, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.AthenaBroadcastHUDBase.TryHandleIfPlayerStateAlreadyInVolume
	// void TryHandleIfPlayerStateAlreadyInVolume();                                                                            // [0x915e52c] Final|Native|Private 
	// Function /Script/FortniteUI.AthenaBroadcastHUDBase.SetFullscreenMapVisibility
	// void SetFullscreenMapVisibility(bool bIsVisible);                                                                        // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaBroadcastHUDBase.OnVolumeMinigameChanged
	// void OnVolumeMinigameChanged(AFortMinigame* Minigame);                                                                   // [0x915da48] Final|Native|Private 
	// Function /Script/FortniteUI.AthenaBroadcastHUDBase.OnVolumeEndOverlap
	// void OnVolumeEndOverlap(UPrimitiveComponent* OverlappedComponent, AActor* OtherActor, UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex); // [0x915d90c] Final|Native|Private 
	// Function /Script/FortniteUI.AthenaBroadcastHUDBase.OnVolumeBeginOverlap
	// void OnVolumeBeginOverlap(UPrimitiveComponent* OverlappedComponent, AActor* OtherActor, UPrimitiveComponent* OtherComp, int32_t OtherBodyIndex, bool bFromSweep, FHitResult& SweepResult); // [0x915d70c] Final|Native|Private|HasOutParms 
	// Function /Script/FortniteUI.AthenaBroadcastHUDBase.OnUnableToPerformAction
	// void OnUnableToPerformAction(FGameplayTagContainer FailedReason, FText& FailureText);                                    // [0x1d9241c] Event|Protected|HasOutParms|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaBroadcastHUDBase.OnToggleSquadStatusActionExecuted
	// void OnToggleSquadStatusActionExecuted(bool& bPassThrough);                                                              // [0x1d9241c] Event|Protected|HasOutParms|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaBroadcastHUDBase.OnToggleScoreboardScreenActionExecuted
	// void OnToggleScoreboardScreenActionExecuted(bool& bPassThrough);                                                         // [0x915d68c] Final|Native|Private|HasOutParms 
	// Function /Script/FortniteUI.AthenaBroadcastHUDBase.OnToggleRemainingPlayersActionExecuted
	// void OnToggleRemainingPlayersActionExecuted(bool& bPassThrough);                                                         // [0x1d9241c] Event|Protected|HasOutParms|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaBroadcastHUDBase.OnTogglePipModeActionExecuted
	// void OnTogglePipModeActionExecuted(bool& bPassThrough);                                                                  // [0x915d610] Final|Native|Private|HasOutParms 
	// Function /Script/FortniteUI.AthenaBroadcastHUDBase.OnToggleMatchStatusScreenActionExecuted
	// void OnToggleMatchStatusScreenActionExecuted(bool& bPassThrough);                                                        // [0x915d590] Final|Native|Private|HasOutParms 
	// Function /Script/FortniteUI.AthenaBroadcastHUDBase.OnToggleMatchStatusActionExecuted
	// void OnToggleMatchStatusActionExecuted(bool& bPassThrough);                                                              // [0x1d9241c] Event|Protected|HasOutParms|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaBroadcastHUDBase.OnToggleKillFeedActionExecuted
	// void OnToggleKillFeedActionExecuted(bool& bPassThrough);                                                                 // [0x915d514] Final|Native|Private|HasOutParms 
	// Function /Script/FortniteUI.AthenaBroadcastHUDBase.OnToggleFollowedPlayerInfoActionExecuted
	// void OnToggleFollowedPlayerInfoActionExecuted(bool& bPassThrough);                                                       // [0x1d9241c] Event|Protected|HasOutParms|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaBroadcastHUDBase.OnToggleEliminatedGridScreenActionExecuted
	// void OnToggleEliminatedGridScreenActionExecuted(bool& bPassThrough);                                                     // [0x915d494] Final|Native|Private|HasOutParms 
	// Function /Script/FortniteUI.AthenaBroadcastHUDBase.OnToggleActiveGridScreenActionExecuted
	// void OnToggleActiveGridScreenActionExecuted(bool& bPassThrough);                                                         // [0x915d414] Final|Native|Private|HasOutParms 
	// Function /Script/FortniteUI.AthenaBroadcastHUDBase.OnPlaylistDataChanged
	// void OnPlaylistDataChanged(UFortPlaylistAthena* PlaylistData);                                                           // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaBroadcastHUDBase.OnPlayerTargetingChanged
	// void OnPlayerTargetingChanged(bool bIsTargeting);                                                                        // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaBroadcastHUDBase.OnPipModeChanged
	// void OnPipModeChanged(bool bEnabled);                                                                                    // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaBroadcastHUDBase.OnMinigameChanged
	// void OnMinigameChanged(AFortMinigame* NewMinigame);                                                                      // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaBroadcastHUDBase.OnIndicatorModeChanged
	// void OnIndicatorModeChanged(bool bIndicatorsEnabled);                                                                    // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaBroadcastHUDBase.OnHudVisibilityChanged
	// void OnHudVisibilityChanged(EHudVisibilityState NewVisibility);                                                          // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaBroadcastHUDBase.OnGameStateSet_BP
	// void OnGameStateSet_BP(AFortGameStateAthena* GameStateAthena);                                                           // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaBroadcastHUDBase.OnGameStateSet
	// void OnGameStateSet(AFortGameState* NewGameState);                                                                       // [0x915c420] Final|Native|Private 
	// Function /Script/FortniteUI.AthenaBroadcastHUDBase.OnCursorModeChanging
	// void OnCursorModeChanging(bool bCursorModeEnabled, FName ActionName);                                                    // [0x915c35c] Final|Native|Protected 
	// Function /Script/FortniteUI.AthenaBroadcastHUDBase.OnCurrentPlaylistChanged
	// void OnCurrentPlaylistChanged();                                                                                         // [0x915c348] Final|Native|Private 
	// Function /Script/FortniteUI.AthenaBroadcastHUDBase.HandleToggleReplayViewSettings
	// void HandleToggleReplayViewSettings();                                                                                   // [0x915bac0] Final|Native|Private 
	// Function /Script/FortniteUI.AthenaBroadcastHUDBase.HandleToggleHighlightsList
	// void HandleToggleHighlightsList();                                                                                       // [0x915baa4] Final|Native|Private 
	// Function /Script/FortniteUI.AthenaBroadcastHUDBase.HandleToggleGoToTime
	// void HandleToggleGoToTime();                                                                                             // [0x915ba88] Final|Native|Private 
	// Function /Script/FortniteUI.AthenaBroadcastHUDBase.HandleToggleActionFeedScreen
	// void HandleToggleActionFeedScreen();                                                                                     // [0x915ba6c] Final|Native|Private 
	// Function /Script/FortniteUI.AthenaBroadcastHUDBase.HandleSpectatorViewTargetChanged
	// void HandleSpectatorViewTargetChanged();                                                                                 // [0x915b284] Final|Native|Private 
	// Function /Script/FortniteUI.AthenaBroadcastHUDBase.HandleNameplatesEnabledChanged
	// void HandleNameplatesEnabledChanged(bool bInNameplatesEnabled);                                                          // [0x915a89c] Final|Native|Private 
	// Function /Script/FortniteUI.AthenaBroadcastHUDBase.HandleHudVisibilityChanged
	// void HandleHudVisibilityChanged(EHudVisibilityState NewVisibility);                                                      // [0x915a6d4] Final|Native|Private 
	// Function /Script/FortniteUI.AthenaBroadcastHUDBase.HandleFollowedPlayerRespawnTimeChanged
	// void HandleFollowedPlayerRespawnTimeChanged(float RespawnTime);                                                          // [0x1d9241c] Event|Protected|BlueprintEvent 
};

/// Class /Script/FortniteUI.AthenaBroadcastHUDMenuStatusBase
/// Size: 0x0008 (0x0003D0 - 0x0003D8)
class UAthenaBroadcastHUDMenuStatusBase : public UFortActorIndicatorWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 984;

public:
	DMember(float)                                     ZOffset                                                     OFFSET(get<float>, {0x3D0, 4, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.AthenaBroadcastHUDMenuStatusBase.MapActivated
	// void MapActivated();                                                                                                     // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaBroadcastHUDMenuStatusBase.InventoryActivated
	// void InventoryActivated();                                                                                               // [0x1d9241c] Event|Public|BlueprintEvent 
};

/// Class /Script/FortniteUI.AthenaBroadcastHUDMenuStatusLayerBase
/// Size: 0x0010 (0x000328 - 0x000338)
class UAthenaBroadcastHUDMenuStatusLayerBase : public UFortHUDElementWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 824;

public:
	CMember(UClass*)                                   HUDMenuStatusWidgetClass                                    OFFSET(get<T>, {0x328, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.AthenaBroadcastHUDMenuStatusLayerBase.RemoveHUDMenuStatus
	// void RemoveHUDMenuStatus(UAthenaBroadcastHUDMenuStatusBase* HUDMenuStatusWidget);                                        // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaBroadcastHUDMenuStatusLayerBase.DeactivateHudMenuWidget
	// void DeactivateHudMenuWidget();                                                                                          // [0x91568e4] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.AthenaBroadcastHUDMenuStatusLayerBase.AddHUDMenuStatus
	// void AddHUDMenuStatus(UAthenaBroadcastHUDMenuStatusBase* HUDMenuStatusWidget);                                           // [0x1d9241c] Event|Protected|BlueprintEvent 
};

/// Class /Script/FortniteUI.AthenaBroadcastMapPanelBase
/// Size: 0x0040 (0x000570 - 0x0005B0)
class UAthenaBroadcastMapPanelBase : public UFortActivatablePanel
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1456;

public:
	CMember(UAthenaSpectatorMapPlayerListBase*)        PlayerList                                                  OFFSET(get<T>, {0x570, 8, 0, 0})
	CMember(UAthenaMapLayer*)                          AthenaMapLayer                                              OFFSET(get<T>, {0x578, 8, 0, 0})
	CMember(UCommonWidgetSwitcherLegacy*)              LhsSwitcher                                                 OFFSET(get<T>, {0x580, 8, 0, 0})
	CMember(UCommonButtonLegacy*)                      Button_CycleSideBar                                         OFFSET(get<T>, {0x588, 8, 0, 0})
	SMember(FDataTableRowHandle)                       CycleSideBarRowHandle                                       OFFSET(getStruct<T>, {0x590, 16, 0, 0})
	CMember(UClass*)                                   MapSettingsClass                                            OFFSET(get<T>, {0x5A0, 8, 0, 0})
};

/// Class /Script/FortniteUI.AthenaBroadcastMatchStatusWidget
/// Size: 0x0020 (0x000328 - 0x000348)
class UAthenaBroadcastMatchStatusWidget : public UFortHUDElementWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 840;

public:
};

/// Class /Script/FortniteUI.AthenaBroadcastPlayerEventScoreWidget
/// Size: 0x0010 (0x000328 - 0x000338)
class UAthenaBroadcastPlayerEventScoreWidget : public UFortHUDElementWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 824;

public:
	CMember(UCommonTextBlock*)                         PlayerEventScoreText                                        OFFSET(get<T>, {0x328, 8, 0, 0})
	CMember(UCommonWidgetSwitcherLegacy*)              PlayerEventScoreSwitcher                                    OFFSET(get<T>, {0x330, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.AthenaBroadcastPlayerEventScoreWidget.OnRemoteClientEventScoreChanged
	// void OnRemoteClientEventScoreChanged(int32_t NewEventScore);                                                             // [0x915cf50] Final|Native|Private 
	// Function /Script/FortniteUI.AthenaBroadcastPlayerEventScoreWidget.OnPointTextSet
	// void OnPointTextSet();                                                                                                   // [0x1d9241c] Event|Protected|BlueprintEvent 
};

/// Class /Script/FortniteUI.AthenaBroadcastPlayerLocationWidget
/// Size: 0x0008 (0x000328 - 0x000330)
class UAthenaBroadcastPlayerLocationWidget : public UFortHUDElementWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 816;

public:
	CMember(UCommonTextBlock*)                         PlayerLocationText                                          OFFSET(get<T>, {0x328, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.AthenaBroadcastPlayerLocationWidget.OnRemoteClientPoiTagIDChanged
	// void OnRemoteClientPoiTagIDChanged(int16_t RemoteClientPoiTagID);                                                        // [0x915cfd0] Final|Native|Private 
};

/// Class /Script/FortniteUI.AthenaBroadcastSessionId
/// Size: 0x0008 (0x000328 - 0x000330)
class UAthenaBroadcastSessionId : public UFortHUDElementWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 816;

public:
	CMember(UTextBlock*)                               Text_SessionId                                              OFFSET(get<T>, {0x328, 8, 0, 0})
};

/// Class /Script/FortniteUI.AthenaEventMatchSquadWidgetBase
/// Size: 0x0008 (0x000328 - 0x000330)
class UAthenaEventMatchSquadWidgetBase : public UFortHUDElementWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 816;

public:
	CMember(TWeakObjectPtr<UAthenaRemoteSquadViewData*>) SquadData                                                 OFFSET(get<T>, {0x328, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.AthenaEventMatchSquadWidgetBase.SetSquadIdVisible
	// void SetSquadIdVisible(bool bSquadIdVisible);                                                                            // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaEventMatchSquadWidgetBase.OnSquadSessionRankChanged
	// void OnSquadSessionRankChanged(UAthenaRemoteSquadViewData* InSquadData, int32_t InSquadSessionRank);                     // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaEventMatchSquadWidgetBase.OnSquadPlaceChanged
	// void OnSquadPlaceChanged(UAthenaRemoteSquadViewData* InSquadData, int32_t InSquadPlace);                                 // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaEventMatchSquadWidgetBase.OnSquadKillscoreChanged
	// void OnSquadKillscoreChanged(UAthenaRemoteSquadViewData* InSquadData, int32_t InSquadKills);                             // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaEventMatchSquadWidgetBase.OnSquadIdChanged
	// void OnSquadIdChanged(UAthenaRemoteSquadViewData* InSquadData, char InSquadId);                                          // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaEventMatchSquadWidgetBase.OnSquadColorChanged
	// void OnSquadColorChanged(UAthenaRemoteSquadViewData* InSquadData, FLinearColor InSquadColor);                            // [0x1d9241c] Event|Protected|HasDefaults|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaEventMatchSquadWidgetBase.OnPlayerAdded
	// void OnPlayerAdded(UAthenaRemoteSquadViewData* InSquadData, UAthenaRemotePlayerViewData* InPlayerData);                  // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaEventMatchSquadWidgetBase.HandleDisplaySessionRankChanged
	// void HandleDisplaySessionRankChanged(bool bDisplay);                                                                     // [0x1d9241c] Event|Protected|BlueprintEvent 
};

/// Class /Script/FortniteUI.AthenaBroadcastSquadStatusWidget
/// Size: 0x0030 (0x000330 - 0x000360)
class UAthenaBroadcastSquadStatusWidget : public UAthenaEventMatchSquadWidgetBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 864;

public:
	SMember(FUniqueNetIdRepl)                          FollowedPlayerUID                                           OFFSET(getStruct<T>, {0x330, 48, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.AthenaBroadcastSquadStatusWidget.OnPipModeChanged
	// void OnPipModeChanged(bool bPipModeEnabled);                                                                             // [0x1d9241c] Event|Protected|BlueprintCallable|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaBroadcastSquadStatusWidget.OnMinigameTeamIdChanged
	// void OnMinigameTeamIdChanged(UFortMinigameTeamIdentification* MinigameTeamId);                                           // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaBroadcastSquadStatusWidget.OnFollowedPlayerChanged
	// void OnFollowedPlayerChanged();                                                                                          // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaBroadcastSquadStatusWidget.HandleSquadIdChanged
	// void HandleSquadIdChanged(UAthenaRemoteSquadViewData* InSquadData, char SquadId);                                        // [0x915b298] Final|Native|Private 
	// Function /Script/FortniteUI.AthenaBroadcastSquadStatusWidget.HandleFollowedPlayerChanged
	// void HandleFollowedPlayerChanged(AFortPlayerControllerSpectating* SpectatorController, AFortPlayerState* NewFollowedPlayer); // [0x20caf78] Final|Native|Protected 
};

/// Class /Script/FortniteUI.AthenaRemotePlayerViewData
/// Size: 0x0280 (0x000028 - 0x0002A8)
class UAthenaRemotePlayerViewData : public UObject
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 680;

public:
	SMember(FMulticastInlineDelegate)                  OnPlayerStateChanged                                        OFFSET(getStruct<T>, {0x28, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnTeamColorChanged                                          OFFSET(getStruct<T>, {0x38, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnSquadIdChanged                                            OFFSET(getStruct<T>, {0x48, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnPlayerNameChanged                                         OFFSET(getStruct<T>, {0x58, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnKillScoreChanged                                          OFFSET(getStruct<T>, {0x68, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnLocationChanged                                           OFFSET(getStruct<T>, {0x78, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnHealthHealed                                              OFFSET(getStruct<T>, {0x88, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnHealthDamaged                                             OFFSET(getStruct<T>, {0x98, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnShieldHealed                                              OFFSET(getStruct<T>, {0xA8, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnShieldDamaged                                             OFFSET(getStruct<T>, {0xB8, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnOvershieldHealed                                          OFFSET(getStruct<T>, {0xC8, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnOvershieldDamaged                                         OFFSET(getStruct<T>, {0xD8, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnDBNOStateChanged                                          OFFSET(getStruct<T>, {0xE8, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnDeadStateChanged                                          OFFSET(getStruct<T>, {0xF8, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnBeingRevivedStateChanged                                  OFFSET(getStruct<T>, {0x108, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnDisconnectedChanged                                       OFFSET(getStruct<T>, {0x118, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnPlayerPawnChanged                                         OFFSET(getStruct<T>, {0x128, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnWeaponChanged                                             OFFSET(getStruct<T>, {0x138, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnDistanceToStormChanged                                    OFFSET(getStruct<T>, {0x148, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnPlaceChanged                                              OFFSET(getStruct<T>, {0x158, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnMaterialCountChanged                                      OFFSET(getStruct<T>, {0x168, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnIsInRelevancyChanged                                      OFFSET(getStruct<T>, {0x178, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnIsFollowedPlayerChanged                                   OFFSET(getStruct<T>, {0x188, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnIsReplayRelevancyPlayerChanged                            OFFSET(getStruct<T>, {0x198, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnVehicleHealthHealed                                       OFFSET(getStruct<T>, {0x1A8, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnVehicleHealthDamaged                                      OFFSET(getStruct<T>, {0x1B8, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnSessionRankChanged                                        OFFSET(getStruct<T>, {0x1C8, 16, 0, 0})
	SMember(FUniqueNetIdRepl)                          PlayerUID                                                   OFFSET(getStruct<T>, {0x1D8, 48, 0, 0})
	CMember(TWeakObjectPtr<AFortPlayerStateAthena*>)   PlayerState                                                 OFFSET(get<T>, {0x208, 8, 0, 0})
	CMember(TWeakObjectPtr<AFortPlayerPawn*>)          CachedPlayerPawn                                            OFFSET(get<T>, {0x26C, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.AthenaRemotePlayerViewData.WeaponDelegate__DelegateSignature
	// void WeaponDelegate__DelegateSignature(UAthenaRemotePlayerViewData* PlayerData, AFortWeapon* WeaponParam);               // [0x1d9241c] MulticastDelegate|Public|Delegate 
	// Function /Script/FortniteUI.AthenaRemotePlayerViewData.UpdatePlayerPawn
	// void UpdatePlayerPawn();                                                                                                 // [0x1915150] Final|Native|Public  
	// Function /Script/FortniteUI.AthenaRemotePlayerViewData.UpdateDistanceToStorm
	// void UpdateDistanceToStorm();                                                                                            // [0x915e554] Final|Native|Public  
	// Function /Script/FortniteUI.AthenaRemotePlayerViewData.UInt8Delegate__DelegateSignature
	// void UInt8Delegate__DelegateSignature(UAthenaRemotePlayerViewData* PlayerData, char IntParam);                           // [0x1d9241c] MulticastDelegate|Public|Delegate 
	// Function /Script/FortniteUI.AthenaRemotePlayerViewData.TwoFloatDelegate__DelegateSignature
	// void TwoFloatDelegate__DelegateSignature(UAthenaRemotePlayerViewData* PlayerData, float FloatParam, float FloatParamMax); // [0x1d9241c] MulticastDelegate|Public|Delegate 
	// Function /Script/FortniteUI.AthenaRemotePlayerViewData.StringDelegate__DelegateSignature
	// void StringDelegate__DelegateSignature(UAthenaRemotePlayerViewData* PlayerData, FString StringParam);                    // [0x1d9241c] MulticastDelegate|Public|Delegate 
	// Function /Script/FortniteUI.AthenaRemotePlayerViewData.SetPlayerState
	// void SetPlayerState(AFortPlayerStateAthena* InPlayerState);                                                              // [0x915e140] Final|Native|Public  
	// Function /Script/FortniteUI.AthenaRemotePlayerViewData.PlayerStateDelegate__DelegateSignature
	// void PlayerStateDelegate__DelegateSignature(UAthenaRemotePlayerViewData* PlayerData, AFortPlayerStateAthena* PlayerState); // [0x1d9241c] MulticastDelegate|Public|Delegate 
	// Function /Script/FortniteUI.AthenaRemotePlayerViewData.PawnDelegate__DelegateSignature
	// void PawnDelegate__DelegateSignature(UAthenaRemotePlayerViewData* PlayerData, AFortPlayerPawn* PawnParam);               // [0x1d9241c] MulticastDelegate|Public|Delegate 
	// Function /Script/FortniteUI.AthenaRemotePlayerViewData.LinearColorDelegate__DelegateSignature
	// void LinearColorDelegate__DelegateSignature(UAthenaRemotePlayerViewData* PlayerData, FLinearColor ColorParam);           // [0x1d9241c] MulticastDelegate|Public|Delegate|HasDefaults 
	// Function /Script/FortniteUI.AthenaRemotePlayerViewData.IntDelegate__DelegateSignature
	// void IntDelegate__DelegateSignature(UAthenaRemotePlayerViewData* PlayerData, int32_t IntParam);                          // [0x1d9241c] MulticastDelegate|Public|Delegate 
	// Function /Script/FortniteUI.AthenaRemotePlayerViewData.GetVehicleMaxHealth
	// float GetVehicleMaxHealth();                                                                                             // [0x1914c60] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.AthenaRemotePlayerViewData.GetVehicleHealthPercent
	// float GetVehicleHealthPercent();                                                                                         // [0x9159be8] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.AthenaRemotePlayerViewData.GetVehicleHealth
	// float GetVehicleHealth();                                                                                                // [0x1914c38] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.AthenaRemotePlayerViewData.GetVehicle
	// AActor* GetVehicle();                                                                                                    // [0x9159bc4] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.AthenaRemotePlayerViewData.GetTeamColor
	// FLinearColor GetTeamColor();                                                                                             // [0x9159a58] Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.AthenaRemotePlayerViewData.GetSquadID
	// char GetSquadID();                                                                                                       // [0x91598ec] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.AthenaRemotePlayerViewData.GetShieldPercent
	// float GetShieldPercent();                                                                                                // [0x91597f8] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.AthenaRemotePlayerViewData.GetShield
	// void GetShield(float& Shield, float& ShieldMax);                                                                         // [0x12941ac] Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.AthenaRemotePlayerViewData.GetSessionRank
	// int32_t GetSessionRank();                                                                                                // [0x91597e0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.AthenaRemotePlayerViewData.GetPlayerUID
	// FUniqueNetIdRepl GetPlayerUID();                                                                                         // [0x91590e0] Final|Native|Public|Const 
	// Function /Script/FortniteUI.AthenaRemotePlayerViewData.GetPlayerState
	// AFortPlayerStateAthena* GetPlayerState();                                                                                // [0x20cc7b8] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.AthenaRemotePlayerViewData.GetPlayerPawn
	// AFortPlayerPawn* GetPlayerPawn();                                                                                        // [0x1914c14] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.AthenaRemotePlayerViewData.GetPlayerName
	// FString GetPlayerName();                                                                                                 // [0x293ba88] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.AthenaRemotePlayerViewData.GetPlace
	// int32_t GetPlace();                                                                                                      // [0x91590bc] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.AthenaRemotePlayerViewData.GetOvershieldPercent
	// float GetOvershieldPercent();                                                                                            // [0x915907c] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.AthenaRemotePlayerViewData.GetOvershield
	// void GetOvershield(float& Overshield, float& OvershieldMax);                                                             // [0x9158fa4] Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.AthenaRemotePlayerViewData.GetMaterialCount
	// int32_t GetMaterialCount();                                                                                              // [0x9158f8c] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.AthenaRemotePlayerViewData.GetLocation
	// FString GetLocation();                                                                                                   // [0x91588ac] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.AthenaRemotePlayerViewData.GetKillScore
	// int32_t GetKillScore();                                                                                                  // [0x9158888] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.AthenaRemotePlayerViewData.GetIsReplayRelevancyPlayer
	// bool GetIsReplayRelevancyPlayer();                                                                                       // [0x9158870] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.AthenaRemotePlayerViewData.GetIsInRelevancy
	// bool GetIsInRelevancy();                                                                                                 // [0x9158858] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.AthenaRemotePlayerViewData.GetIsFollowedPlayer
	// bool GetIsFollowedPlayer();                                                                                              // [0x9158840] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.AthenaRemotePlayerViewData.GetIsEliminated
	// bool GetIsEliminated();                                                                                                  // [0x2766fb4] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.AthenaRemotePlayerViewData.GetIsDrivingVehicle
	// bool GetIsDrivingVehicle();                                                                                              // [0x91587e4] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.AthenaRemotePlayerViewData.GetIsDisconnected
	// bool GetIsDisconnected();                                                                                                // [0x2685ac0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.AthenaRemotePlayerViewData.GetIsDead
	// bool GetIsDead();                                                                                                        // [0x2685ae4] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.AthenaRemotePlayerViewData.GetIsDBNO
	// bool GetIsDBNO();                                                                                                        // [0x20cda88] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.AthenaRemotePlayerViewData.GetIsBeingRevived
	// bool GetIsBeingRevived();                                                                                                // [0x20cc024] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.AthenaRemotePlayerViewData.GetInAircraft
	// bool GetInAircraft();                                                                                                    // [0x20cf270] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.AthenaRemotePlayerViewData.GetHealthPercent
	// float GetHealthPercent();                                                                                                // [0x2685b08] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.AthenaRemotePlayerViewData.GetHealth
	// void GetHealth(float& Health, float& HealthMax);                                                                         // [0x1294288] Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.AthenaRemotePlayerViewData.GetDistanceToStorm
	// int32_t GetDistanceToStorm();                                                                                            // [0x9158784] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.AthenaRemotePlayerViewData.GetCurrentWeapon
	// AFortWeapon* GetCurrentWeapon();                                                                                         // [0x9158748] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.AthenaRemotePlayerViewData.ForwardOnWeaponChanged
	// void ForwardOnWeaponChanged(AFortWeapon* InNewWeapon, AFortWeapon* InPrevWeapon);                                        // [0x1914d4c] Final|Native|Private 
	// Function /Script/FortniteUI.AthenaRemotePlayerViewData.ForwardOnVehicleStateChanged
	// void ForwardOnVehicleStateChanged(AFortPlayerPawn* PlayerPawn, AActor* NewVehicle, AActor* OldVehicle);                  // [0x9157c90] Final|Native|Private 
	// Function /Script/FortniteUI.AthenaRemotePlayerViewData.ForwardOnVehicleHealthChanged
	// void ForwardOnVehicleHealthChanged();                                                                                    // [0x2fb6234] Final|Native|Private 
	// Function /Script/FortniteUI.AthenaRemotePlayerViewData.ForwardOnSquadIdChanged
	// void ForwardOnSquadIdChanged(char InSquadId);                                                                            // [0x9157c10] Final|Native|Private 
	// Function /Script/FortniteUI.AthenaRemotePlayerViewData.ForwardOnPlayerNameChanged
	// void ForwardOnPlayerNameChanged(AFortPlayerStateAthena* InPlayerState, FString InPlayerName);                            // [0x9157530] Final|Native|Private 
	// Function /Script/FortniteUI.AthenaRemotePlayerViewData.ForwardOnPlaceChanged
	// void ForwardOnPlaceChanged(AFortPlayerStateAthena* Sender, int32_t InPlace);                                             // [0x2adc49c] Final|Native|Private 
	// Function /Script/FortniteUI.AthenaRemotePlayerViewData.ForwardOnLocationChanged
	// void ForwardOnLocationChanged(FString InLocation);                                                                       // [0x9156e80] Final|Native|Private 
	// Function /Script/FortniteUI.AthenaRemotePlayerViewData.ForwardOnKillScoreChanged
	// void ForwardOnKillScoreChanged(AFortPlayerStateAthena* InPlayerState, int32_t InKillScore);                              // [0x9156dbc] Final|Native|Private 
	// Function /Script/FortniteUI.AthenaRemotePlayerViewData.ForwardOnHitPointsStateChanged
	// void ForwardOnHitPointsStateChanged(AFortPlayerStateAthena* InPlayerState, float InHealth, float InHealthMax, float InShield, float InShieldMax); // [0x9156c38] Final|Native|Private 
	// Function /Script/FortniteUI.AthenaRemotePlayerViewData.ForwardOnDisconnectedChanged
	// void ForwardOnDisconnectedChanged(AFortPlayerStateAthena* InPlayerState, bool bInIsDisconnected);                        // [0x9156b70] Final|Native|Private 
	// Function /Script/FortniteUI.AthenaRemotePlayerViewData.ForwardOnDeadStateChanged
	// void ForwardOnDeadStateChanged(AFortPlayerStateAthena* InPlayerState, bool bInIsDead);                                   // [0x9156aa8] Final|Native|Private 
	// Function /Script/FortniteUI.AthenaRemotePlayerViewData.ForwardOnDBNOStateChanged
	// void ForwardOnDBNOStateChanged(AFortPlayerStateAthena* InPlayerState, bool bInIsDBNO);                                   // [0x91569e0] Final|Native|Private 
	// Function /Script/FortniteUI.AthenaRemotePlayerViewData.ForwardOnBeingRevivedStateChanged
	// void ForwardOnBeingRevivedStateChanged(AFortPlayerStateAthena* InPlayerState, bool bInIsBeingRevived);                   // [0x9156918] Final|Native|Private 
	// Function /Script/FortniteUI.AthenaRemotePlayerViewData.BoolDelegate__DelegateSignature
	// void BoolDelegate__DelegateSignature(UAthenaRemotePlayerViewData* PlayerData, bool BoolParam);                           // [0x1d9241c] MulticastDelegate|Public|Delegate 
};

/// Class /Script/FortniteUI.AthenaRemoteSquadViewData
/// Size: 0x00A8 (0x000028 - 0x0000D0)
class UAthenaRemoteSquadViewData : public UObject
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 208;

public:
	SMember(FMulticastInlineDelegate)                  OnPlayerAdded                                               OFFSET(getStruct<T>, {0x28, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnSquadIdChanged                                            OFFSET(getStruct<T>, {0x38, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnSquadKillscoreChanged                                     OFFSET(getStruct<T>, {0x48, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnSquadPlaceChanged                                         OFFSET(getStruct<T>, {0x58, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnSquadColorChanged                                         OFFSET(getStruct<T>, {0x68, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnSquadEliminated                                           OFFSET(getStruct<T>, {0x78, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnSquadSessionRankChanged                                   OFFSET(getStruct<T>, {0x88, 16, 0, 0})
	CMember(TArray<UAthenaRemotePlayerViewData*>)      PlayerDataArray                                             OFFSET(get<T>, {0x98, 16, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.AthenaRemoteSquadViewData.UInt8Delegate__DelegateSignature
	// void UInt8Delegate__DelegateSignature(UAthenaRemoteSquadViewData* SquadData, char IntParam);                             // [0x1d9241c] MulticastDelegate|Public|Delegate 
	// Function /Script/FortniteUI.AthenaRemoteSquadViewData.PlayerDelegate__DelegateSignature
	// void PlayerDelegate__DelegateSignature(UAthenaRemoteSquadViewData* SquadData, UAthenaRemotePlayerViewData* PlayerData);  // [0x1d9241c] MulticastDelegate|Public|Delegate 
	// Function /Script/FortniteUI.AthenaRemoteSquadViewData.LinearColorDelegate__DelegateSignature
	// void LinearColorDelegate__DelegateSignature(UAthenaRemoteSquadViewData* SquadData, FLinearColor ColorParam);             // [0x1d9241c] MulticastDelegate|Public|Delegate|HasDefaults 
	// Function /Script/FortniteUI.AthenaRemoteSquadViewData.IntDelegate__DelegateSignature
	// void IntDelegate__DelegateSignature(UAthenaRemoteSquadViewData* SquadData, int32_t IntParam);                            // [0x1d9241c] MulticastDelegate|Public|Delegate 
	// Function /Script/FortniteUI.AthenaRemoteSquadViewData.HandleSessionRankChanged
	// void HandleSessionRankChanged(UAthenaRemotePlayerViewData* InPlayerData, int32_t InSessionRank);                         // [0x915b1c0] Final|Native|Private 
	// Function /Script/FortniteUI.AthenaRemoteSquadViewData.HandlePlayerPlaceChanged
	// void HandlePlayerPlaceChanged(UAthenaRemotePlayerViewData* InPlayerData, int32_t InPlace);                               // [0x2bb91f0] Final|Native|Private 
	// Function /Script/FortniteUI.AthenaRemoteSquadViewData.HandlePlayerKillscoreChanged
	// void HandlePlayerKillscoreChanged(UAthenaRemotePlayerViewData* InPlayerData, int32_t InKillScore);                       // [0x19162dc] Final|Native|Private 
	// Function /Script/FortniteUI.AthenaRemoteSquadViewData.HandlePlayerDeadStateChanged
	// void HandlePlayerDeadStateChanged(UAthenaRemotePlayerViewData* InPlayerData, bool InEliminated);                         // [0x28eed48] Final|Native|Private 
	// Function /Script/FortniteUI.AthenaRemoteSquadViewData.GetSquadSessionRank
	// int32_t GetSquadSessionRank();                                                                                           // [0x570a78c] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.AthenaRemoteSquadViewData.GetSquadID
	// int32_t GetSquadID();                                                                                                    // [0x570a7d4] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.AthenaRemoteSquadViewData.GetSquadColor
	// FLinearColor GetSquadColor();                                                                                            // [0x91598d0] Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.AthenaRemoteSquadViewData.GetPlayerDatas
	// TArray<UAthenaRemotePlayerViewData*> GetPlayerDatas();                                                                   // [0x20d113c] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.AthenaRemoteSquadViewData.GetPlace
	// int32_t GetPlace();                                                                                                      // [0x3310730] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.AthenaRemoteSquadViewData.GetMinigameTeamID
	// UFortMinigameTeamIdentification* GetMinigameTeamID();                                                                    // [0x20cae08] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.AthenaRemoteSquadViewData.GetKillScore
	// int32_t GetKillScore();                                                                                                  // [0x570a7bc] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.AthenaRemoteSquadViewData.GetIsEliminated
	// bool GetIsEliminated();                                                                                                  // [0x9158828] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.AthenaRemoteSquadViewData.EventDelegate__DelegateSignature
	// void EventDelegate__DelegateSignature(UAthenaRemoteSquadViewData* SquadData);                                            // [0x1d9241c] MulticastDelegate|Public|Delegate 
};

/// Class /Script/FortniteUI.AthenaSpectatorHUDControlsBase
/// Size: 0x0018 (0x0002E8 - 0x000300)
class UAthenaSpectatorHUDControlsBase : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 768;

public:
	CMember(UFortTimelineBase*)                        ReplayTimeline                                              OFFSET(get<T>, {0x2E8, 8, 0, 0})
	CMember(UCommonButtonLegacy*)                      Button_FocusTimeline                                        OFFSET(get<T>, {0x2F0, 8, 0, 0})
	CMember(UIconTextButtonSpectatorBase*)             IconTextButtonReplay_PlayHighlights                         OFFSET(get<T>, {0x2F8, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.AthenaSpectatorHUDControlsBase.ResetFocusToPlayPauseIfNeeded
	// void ResetFocusToPlayPauseIfNeeded();                                                                                    // [0x1d9241c] Event|Public|BlueprintCallable|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaSpectatorHUDControlsBase.OnFollowedPlayerChanged
	// void OnFollowedPlayerChanged(AFortPlayerControllerSpectating* SpectatorPC, AFortPlayerState* NewFollowedPlayer);         // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaSpectatorHUDControlsBase.OnCameraTypeChangedInternal
	// void OnCameraTypeChangedInternal(AFortPlayerControllerSpectating* SpectatorPC, ESpectatorCameraType NewCameraType);      // [0x2d4b94c] Final|Native|Private 
	// Function /Script/FortniteUI.AthenaSpectatorHUDControlsBase.OnCameraTypeChanged
	// void OnCameraTypeChanged(AFortPlayerControllerSpectating* SpectatorPC, ESpectatorCameraType NewCameraType);              // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaSpectatorHUDControlsBase.HandleReplayHighlightsAvailable
	// void HandleReplayHighlightsAvailable(AFortReplaySpectator* Sender, bool bIsAvailable);                                   // [0x2427288] Final|Native|Private 
	// Function /Script/FortniteUI.AthenaSpectatorHUDControlsBase.HandleBattleMapTimelineModeChanged
	// void HandleBattleMapTimelineModeChanged(bool bIsOnTimelineMode);                                                         // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaSpectatorHUDControlsBase.CenterControls
	// void CenterControls();                                                                                                   // [0x1d9241c] Event|Public|BlueprintEvent 
};

/// Class /Script/FortniteUI.AthenaSpectatorNameplateBase
/// Size: 0x0020 (0x0003D0 - 0x0003F0)
class UAthenaSpectatorNameplateBase : public UFortActorIndicatorWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1008;

public:
	DMember(float)                                     DistanceToCameraOffsetScale                                 OFFSET(get<float>, {0x3D0, 4, 0, 0})
	DMember(float)                                     MinZOffset                                                  OFFSET(get<float>, {0x3D4, 4, 0, 0})
	DMember(float)                                     MaxZOffset                                                  OFFSET(get<float>, {0x3D8, 4, 0, 0})
	DMember(bool)                                      bOverrideNameplateScaleToMax                                OFFSET(get<bool>, {0x3DC, 1, 0, 0})
	CMember(TWeakObjectPtr<UAthenaRemotePlayerViewData*>) PlayerData                                               OFFSET(get<T>, {0x3E0, 8, 0, 0})
	CMember(EAthenaSpectatorNameplateDistanceState)    CurrentDistanceState                                        OFFSET(get<T>, {0x3E8, 1, 0, 0})
	CMember(EAthenaSpectatorNameplateDetailState)      CurrentDetailState                                          OFFSET(get<T>, {0x3E9, 1, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.AthenaSpectatorNameplateBase.SetTeamColorVisible
	// void SetTeamColorVisible(bool bTeamColorVisible);                                                                        // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaSpectatorNameplateBase.SetSquadIdVisibility
	// void SetSquadIdVisibility(bool bSquadIdVisible);                                                                         // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaSpectatorNameplateBase.SetArrowTeamColorVisible
	// void SetArrowTeamColorVisible(bool bArrowTeamColorVisible);                                                              // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaSpectatorNameplateBase.OnVehicleStateChanged
	// void OnVehicleStateChanged(AActor* NewVehicle, AActor* OldVehicle);                                                      // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaSpectatorNameplateBase.OnTeamColorChanged
	// void OnTeamColorChanged(UAthenaRemotePlayerViewData* InPlayerData, FLinearColor InTeamColor);                            // [0x1d9241c] Event|Protected|HasDefaults|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaSpectatorNameplateBase.OnSquadIDsDisplayModeHoldUpdate
	// void OnSquadIDsDisplayModeHoldUpdate();                                                                                  // [0x1d9241c] Event|Protected|BlueprintCallable|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaSpectatorNameplateBase.OnSquadIdChanged
	// void OnSquadIdChanged(UAthenaRemotePlayerViewData* InPlayerData, char InSquadId);                                        // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaSpectatorNameplateBase.OnSessionRankChanged
	// void OnSessionRankChanged(UAthenaRemotePlayerViewData* InPlayerData, int32_t InGamerank);                                // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaSpectatorNameplateBase.OnPlayerPawnChanged
	// void OnPlayerPawnChanged(UAthenaRemotePlayerViewData* InPlayerData, AFortPlayerPawn* InPlayerPawn);                      // [0x2a3e490] Final|Native|Private 
	// Function /Script/FortniteUI.AthenaSpectatorNameplateBase.OnPlayerNameChanged
	// void OnPlayerNameChanged(UAthenaRemotePlayerViewData* InPlayerData, FString InPlayerName);                               // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaSpectatorNameplateBase.OnPlayerDataSet
	// void OnPlayerDataSet(UAthenaRemotePlayerViewData* InPlayerData);                                                         // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaSpectatorNameplateBase.OnDistanceStateChanged
	// void OnDistanceStateChanged(EAthenaSpectatorNameplateDistanceState NewDistanceState);                                    // [0x1d9241c] Event|Protected|BlueprintCallable|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaSpectatorNameplateBase.OnDetailStateChanged
	// void OnDetailStateChanged(EAthenaSpectatorNameplateDetailState NewDetailState);                                          // [0x1d9241c] Event|Protected|BlueprintCallable|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaSpectatorNameplateBase.HandleDisplaySessionRankChanged
	// void HandleDisplaySessionRankChanged(bool bDisplay);                                                                     // [0x1d9241c] Event|Protected|BlueprintEvent 
};

/// Class /Script/FortniteUI.AthenaSpectatorNameplateLayerBase
/// Size: 0x00B8 (0x000328 - 0x0003E0)
class UAthenaSpectatorNameplateLayerBase : public UFortHUDElementWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 992;

public:
	CMember(UClass*)                                   NameplateWidgetClass                                        OFFSET(get<T>, {0x328, 8, 0, 0})
	CMember(TMap<FUniqueNetIdRepl, UAthenaSpectatorNameplateBase*>) NameplateWidgetMap                             OFFSET(get<T>, {0x330, 80, 0, 0})
	CMember(UFortActorCanvas*)                         Canvas_NameplateIndicators                                  OFFSET(get<T>, {0x380, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.AthenaSpectatorNameplateLayerBase.OnTeamColorVisibleChanged
	// void OnTeamColorVisibleChanged(bool bVisible);                                                                           // [0x915d314] Final|Native|Private 
	// Function /Script/FortniteUI.AthenaSpectatorNameplateLayerBase.OnPlayerDataAdded
	// void OnPlayerDataAdded(UAthenaRemotePlayerViewData* InPlayerData);                                                       // [0x915c8f8] Final|Native|Public  
	// Function /Script/FortniteUI.AthenaSpectatorNameplateLayerBase.OnArrowTeamColorVisibleChanged
	// void OnArrowTeamColorVisibleChanged(bool bVisible);                                                                      // [0x915c1c8] Final|Native|Private 
};

/// Class /Script/FortniteUI.AthenaSpectatorPlayersLeftBase
/// Size: 0x0000 (0x0002E8 - 0x0002E8)
class UAthenaSpectatorPlayersLeftBase : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 744;

public:
};

/// Class /Script/FortniteUI.AthenaSpectatorTeamTagBase
/// Size: 0x0000 (0x0002E8 - 0x0002E8)
class UAthenaSpectatorTeamTagBase : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 744;

public:
};

/// Class /Script/FortniteUI.AthenaBattleMapClickHandler
/// Size: 0x0008 (0x0002C0 - 0x0002C8)
class UAthenaBattleMapClickHandler : public UUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 712;

public:
};

/// Class /Script/FortniteUI.AthenaBattleMapNodeTooltip
/// Size: 0x0040 (0x0002E8 - 0x000328)
class UAthenaBattleMapNodeTooltip : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 808;

public:
	CMember(UCommonTextBlock*)                         TextBlock_NodeTitle                                         OFFSET(get<T>, {0x2E8, 8, 0, 0})
	CMember(UCommonTextBlock*)                         TextBlock_NodeDescription                                   OFFSET(get<T>, {0x2F0, 8, 0, 0})
	CMember(UCommonTextBlock*)                         TextBlock_NodeTime                                          OFFSET(get<T>, {0x2F8, 8, 0, 0})
	CMember(UWidget*)                                  Widget_Selection                                            OFFSET(get<T>, {0x300, 8, 0, 0})
	CMember(UWidget*)                                  Widget_Scrubbing                                            OFFSET(get<T>, {0x308, 8, 0, 0})
	CMember(UWidget*)                                  Widget_ScrubbingGamepad                                     OFFSET(get<T>, {0x310, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.AthenaBattleMapNodeTooltip.OnReplayLevelStreamingChanged
	// void OnReplayLevelStreamingChanged(bool bStreaming);                                                                     // [0x258b77c] Final|Native|Protected 
	// Function /Script/FortniteUI.AthenaBattleMapNodeTooltip.HandleUnhoveredNode
	// void HandleUnhoveredNode(ABattleMapNode* Node, BattleMapHoveredReason Reason);                                           // [0x915bd88] Final|Native|Protected 
	// Function /Script/FortniteUI.AthenaBattleMapNodeTooltip.HandleToggledBattleMapLive
	// void HandleToggledBattleMapLive(ABattleMapPawnLive* BattleMapPawn);                                                      // [0x915bb64] Final|Native|Protected 
	// Function /Script/FortniteUI.AthenaBattleMapNodeTooltip.HandleTimelineModeChanged
	// void HandleTimelineModeChanged(bool bEnabled);                                                                           // [0x915b854] Final|Native|Protected 
	// Function /Script/FortniteUI.AthenaBattleMapNodeTooltip.HandleInputMethodChanged
	// void HandleInputMethodChanged(ECommonInputType NewInputType);                                                            // [0x915a754] Final|Native|Protected 
	// Function /Script/FortniteUI.AthenaBattleMapNodeTooltip.HandleHoveredNode
	// void HandleHoveredNode(ABattleMapNode* Node, BattleMapHoveredReason Reason);                                             // [0x915a610] Final|Native|Protected 
	// Function /Script/FortniteUI.AthenaBattleMapNodeTooltip.HandleCameraTypeChanged
	// void HandleCameraTypeChanged(AFortPlayerControllerSpectating* SpectatorPC, ESpectatorCameraType NewCameraType);          // [0x258b824] Final|Native|Protected 
};

/// Class /Script/FortniteUI.AthenaBattleMapTimelineWidget
/// Size: 0x00C0 (0x000570 - 0x000630)
class UAthenaBattleMapTimelineWidget : public UFortActivatablePanel
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1584;

public:
	CMember(UCommonButtonLegacy*)                      Button_Forward                                              OFFSET(get<T>, {0x570, 8, 0, 0})
	CMember(UCommonButtonLegacy*)                      Button_Backward                                             OFFSET(get<T>, {0x578, 8, 0, 0})
	DMember(float)                                     ForwardButtonPositionAlpha                                  OFFSET(get<float>, {0x580, 4, 0, 0})
	DMember(float)                                     BackwardButtonPositionAlpha                                 OFFSET(get<float>, {0x584, 4, 0, 0})
	SMember(FDataTableRowHandle)                       ForwardDataTableRow                                         OFFSET(getStruct<T>, {0x588, 16, 0, 0})
	SMember(FDataTableRowHandle)                       BackwardDataTableRow                                        OFFSET(getStruct<T>, {0x598, 16, 0, 0})
	SMember(FDataTableRowHandle)                       StopDataTableRow                                            OFFSET(getStruct<T>, {0x5A8, 16, 0, 0})
	SMember(FDataTableRowHandle)                       ScrubToDataTableRow                                         OFFSET(getStruct<T>, {0x5B8, 16, 0, 0})
	SMember(FDataTableRowHandle)                       ExitBattleMapDataTableRow                                   OFFSET(getStruct<T>, {0x5C8, 16, 0, 0})
	SMember(FDataTableRowHandle)                       ZoomInDataTableRow                                          OFFSET(getStruct<T>, {0x5D8, 16, 0, 0})
	SMember(FDataTableRowHandle)                       ZoomOutDataTableRow                                         OFFSET(getStruct<T>, {0x5E8, 16, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.AthenaBattleMapTimelineWidget.OnReplayLevelStreamingChanged
	// void OnReplayLevelStreamingChanged(bool bStreaming);                                                                     // [0x258b694] Final|Native|Private 
	// Function /Script/FortniteUI.AthenaBattleMapTimelineWidget.HandleZoomOutPressed
	// void HandleZoomOutPressed(bool& bPassThrough);                                                                           // [0x915c050] Final|Native|Private|HasOutParms 
	// Function /Script/FortniteUI.AthenaBattleMapTimelineWidget.HandleZoomOutHeld
	// void HandleZoomOutHeld(float HeldPercent);                                                                               // [0x915bfd0] Final|Native|Private 
	// Function /Script/FortniteUI.AthenaBattleMapTimelineWidget.HandleZoomInPressed
	// void HandleZoomInPressed(bool& bPassThrough);                                                                            // [0x915bf4c] Final|Native|Private|HasOutParms 
	// Function /Script/FortniteUI.AthenaBattleMapTimelineWidget.HandleZoomInHeld
	// void HandleZoomInHeld(float HeldPercent);                                                                                // [0x915becc] Final|Native|Private 
	// Function /Script/FortniteUI.AthenaBattleMapTimelineWidget.HandleToggledBattleMapLive
	// void HandleToggledBattleMapLive(ABattleMapPawnLive* BattleMapPawn);                                                      // [0x915bbe4] Final|Native|Private 
	// Function /Script/FortniteUI.AthenaBattleMapTimelineWidget.HandleTimelineStopPressed
	// void HandleTimelineStopPressed(bool& bPassThrough);                                                                      // [0x915b9e0] Final|Native|Private|HasOutParms 
	// Function /Script/FortniteUI.AthenaBattleMapTimelineWidget.HandleTimelineScrubToPressed
	// void HandleTimelineScrubToPressed(bool& bPassThrough);                                                                   // [0x915b954] Final|Native|Private|HasOutParms 
	// Function /Script/FortniteUI.AthenaBattleMapTimelineWidget.HandleTimelineModeChanged
	// void HandleTimelineModeChanged(bool bEnabled);                                                                           // [0x915b8d4] Final|Native|Private 
	// Function /Script/FortniteUI.AthenaBattleMapTimelineWidget.HandleTimelineForwardPressed
	// void HandleTimelineForwardPressed(bool& bPassThrough);                                                                   // [0x915b7c8] Final|Native|Private|HasOutParms 
	// Function /Script/FortniteUI.AthenaBattleMapTimelineWidget.HandleTimelineBackwardPressed
	// void HandleTimelineBackwardPressed(bool& bPassThrough);                                                                  // [0x915b73c] Final|Native|Private|HasOutParms 
	// Function /Script/FortniteUI.AthenaBattleMapTimelineWidget.HandleSelectedNode
	// void HandleSelectedNode(ABattleMapNode* InSelectedNode);                                                                 // [0x915b140] Final|Native|Private 
	// Function /Script/FortniteUI.AthenaBattleMapTimelineWidget.HandleExitBattleMapPressed
	// void HandleExitBattleMapPressed(bool& bPassThrough);                                                                     // [0x915a570] Final|Native|Private|HasOutParms 
	// Function /Script/FortniteUI.AthenaBattleMapTimelineWidget.HandleCameraTypeChanged
	// void HandleCameraTypeChanged(AFortPlayerControllerSpectating* SpectatorPC, ESpectatorCameraType NewCameraType);          // [0x258b948] Final|Native|Private 
};

/// Class /Script/FortniteUI.AthenaEventScreenBase
/// Size: 0x0000 (0x000570 - 0x000570)
class UAthenaEventScreenBase : public UFortActivatablePanel
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1392;

public:
};

/// Class /Script/FortniteUI.AthenaEventMatchActiveGridScreenBase
/// Size: 0x0028 (0x000570 - 0x000598)
class UAthenaEventMatchActiveGridScreenBase : public UAthenaEventScreenBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1432;

public:
	CMember(UClass*)                                   TeamWidgetClass                                             OFFSET(get<T>, {0x570, 8, 0, 0})
	CMember(TArray<UAthenaEventMatchTeamWidgetBase*>)  ActiveTeams                                                 OFFSET(get<T>, {0x578, 16, 0, 0})
	DMember(int32_t)                                   MaxNumColumns                                               OFFSET(get<int32_t>, {0x588, 4, 0, 0})
	DMember(int32_t)                                   MaxTeamCount                                                OFFSET(get<int32_t>, {0x58C, 4, 0, 0})
	DMember(int32_t)                                   MaxTeamSize                                                 OFFSET(get<int32_t>, {0x590, 4, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.AthenaEventMatchActiveGridScreenBase.OnTeamEliminated_BP
	// void OnTeamEliminated_BP();                                                                                              // [0x1d9241c] Event|Protected|BlueprintCallable|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaEventMatchActiveGridScreenBase.OnTeamEliminated
	// void OnTeamEliminated(int32_t InSquadId);                                                                                // [0x915d394] Final|Native|Private 
	// Function /Script/FortniteUI.AthenaEventMatchActiveGridScreenBase.OnTeamChanged_BP
	// void OnTeamChanged_BP();                                                                                                 // [0x1d9241c] Event|Protected|BlueprintCallable|BlueprintEvent 
};

/// Class /Script/FortniteUI.AthenaEventMatchEliminatedGridScreenBase
/// Size: 0x0028 (0x000570 - 0x000598)
class UAthenaEventMatchEliminatedGridScreenBase : public UAthenaEventScreenBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1432;

public:
	CMember(UClass*)                                   TeamWidgetClass                                             OFFSET(get<T>, {0x570, 8, 0, 0})
	CMember(TArray<UAthenaEventMatchTeamWidgetBase*>)  EliminatedTeams                                             OFFSET(get<T>, {0x578, 16, 0, 0})
	DMember(int32_t)                                   MaxNumColumns                                               OFFSET(get<int32_t>, {0x588, 4, 0, 0})
	DMember(int32_t)                                   MaxTeamCount                                                OFFSET(get<int32_t>, {0x58C, 4, 0, 0})
	DMember(int32_t)                                   MaxTeamSize                                                 OFFSET(get<int32_t>, {0x590, 4, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.AthenaEventMatchEliminatedGridScreenBase.OnTeamEliminated_BP
	// void OnTeamEliminated_BP();                                                                                              // [0x1d9241c] Event|Protected|BlueprintCallable|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaEventMatchEliminatedGridScreenBase.OnPlayerEliminatedStateChanged
	// void OnPlayerEliminatedStateChanged(UAthenaRemotePlayerViewData* InPlayerData, bool bInIsEliminated);                    // [0x7867994] Final|Native|Private 
};

/// Class /Script/FortniteUI.AthenaEventMatchPlayerWidgetBase
/// Size: 0x0010 (0x0014E0 - 0x0014F0)
class UAthenaEventMatchPlayerWidgetBase : public UCommonButtonLegacy
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 5360;

public:
	CMember(TWeakObjectPtr<UAthenaRemotePlayerViewData*>) PlayerData                                               OFFSET(get<T>, {0x14E8, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.AthenaEventMatchPlayerWidgetBase.SetPlayerData
	// void SetPlayerData(UAthenaRemotePlayerViewData* InPlayerData);                                                           // [0x915dff8] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.AthenaEventMatchPlayerWidgetBase.OnTeamColorChanged
	// void OnTeamColorChanged(UAthenaRemotePlayerViewData* InPlayerData, FLinearColor InTeamColor);                            // [0x1d9241c] Event|Protected|HasDefaults|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaEventMatchPlayerWidgetBase.OnSquadIdChanged
	// void OnSquadIdChanged(UAthenaRemotePlayerViewData* InPlayerData, char InSquadId);                                        // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaEventMatchPlayerWidgetBase.OnShieldHealed
	// void OnShieldHealed(UAthenaRemotePlayerViewData* InPlayerData, float InShield, float InShieldMax);                       // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaEventMatchPlayerWidgetBase.OnShieldDamaged
	// void OnShieldDamaged(UAthenaRemotePlayerViewData* InPlayerData, float InShield, float InShieldMax);                      // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaEventMatchPlayerWidgetBase.OnPlayerStateChanged
	// void OnPlayerStateChanged(UAthenaRemotePlayerViewData* InPlayerData, AFortPlayerStateAthena* InPlayerState);             // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaEventMatchPlayerWidgetBase.OnPlayerPawnChanged
	// void OnPlayerPawnChanged(UAthenaRemotePlayerViewData* InPlayerData, AFortPlayerPawn* InPlayerPawn);                      // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaEventMatchPlayerWidgetBase.OnPlayerNameChanged
	// void OnPlayerNameChanged(UAthenaRemotePlayerViewData* InPlayerData, FString InPlayerName);                               // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaEventMatchPlayerWidgetBase.OnPlayerDataChanged
	// void OnPlayerDataChanged(UAthenaRemotePlayerViewData* InPlayerData);                                                     // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaEventMatchPlayerWidgetBase.OnPlaceChanged
	// void OnPlaceChanged(UAthenaRemotePlayerViewData* InPlayerData, int32_t InPlace);                                         // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaEventMatchPlayerWidgetBase.OnMaterialCountChanged
	// void OnMaterialCountChanged(UAthenaRemotePlayerViewData* InPlayerData, int32_t InCount);                                 // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaEventMatchPlayerWidgetBase.OnLocationChanged
	// void OnLocationChanged(UAthenaRemotePlayerViewData* InPlayerData, FString InLocation);                                   // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaEventMatchPlayerWidgetBase.OnKillScoreChanged
	// void OnKillScoreChanged(UAthenaRemotePlayerViewData* InPlayerData, int32_t InKillScore);                                 // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaEventMatchPlayerWidgetBase.OnIsReplayRelevancyPlayerChanged
	// void OnIsReplayRelevancyPlayerChanged(UAthenaRemotePlayerViewData* InPlayerData, bool bInIsReplayRelevancyPlayer);       // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaEventMatchPlayerWidgetBase.OnIsInRelevancyChanged
	// void OnIsInRelevancyChanged(UAthenaRemotePlayerViewData* InPlayerData, bool bInIsInRelevancy);                           // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaEventMatchPlayerWidgetBase.OnIsFollowedPlayerChanged
	// void OnIsFollowedPlayerChanged(UAthenaRemotePlayerViewData* InPlayerData, bool bInIsFollowedPlayer);                     // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaEventMatchPlayerWidgetBase.OnHealthHealed
	// void OnHealthHealed(UAthenaRemotePlayerViewData* InPlayerData, float InHealth, float InHealthMax);                       // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaEventMatchPlayerWidgetBase.OnHealthDamaged
	// void OnHealthDamaged(UAthenaRemotePlayerViewData* InPlayerData, float InHealth, float InHealthMax);                      // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaEventMatchPlayerWidgetBase.OnDisconnectedChanged
	// void OnDisconnectedChanged(UAthenaRemotePlayerViewData* InPlayerData, bool bIsDisconnected);                             // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaEventMatchPlayerWidgetBase.OnDeadStateChanged
	// void OnDeadStateChanged(UAthenaRemotePlayerViewData* InPlayerData, bool bIsDead);                                        // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaEventMatchPlayerWidgetBase.OnDBNOStateChanged
	// void OnDBNOStateChanged(UAthenaRemotePlayerViewData* InPlayerData, bool bIsDBNO);                                        // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaEventMatchPlayerWidgetBase.OnBeingRevivedStateChanged
	// void OnBeingRevivedStateChanged(UAthenaRemotePlayerViewData* InPlayerData, bool bIsBeingRevived);                        // [0x1d9241c] Event|Protected|BlueprintEvent 
};

/// Class /Script/FortniteUI.AthenaEventMatchScoreboardPlayerWidgetBase
/// Size: 0x0000 (0x0014F0 - 0x0014F0)
class UAthenaEventMatchScoreboardPlayerWidgetBase : public UAthenaEventMatchPlayerWidgetBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 5360;

public:
};

/// Class /Script/FortniteUI.AthenaEventMatchScoreboardScreenBase
/// Size: 0x0050 (0x000570 - 0x0005C0)
class UAthenaEventMatchScoreboardScreenBase : public UAthenaEventScreenBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1472;

public:
	SMember(FUIActionTag)                              SortByElimsAction                                           OFFSET(getStruct<T>, {0x570, 4, 0, 0})
	SMember(FUIActionTag)                              SortByPlaceAction                                           OFFSET(getStruct<T>, {0x578, 4, 0, 0})
	SMember(FDataTableRowHandle)                       SortByEliminationsActionRowHandle                           OFFSET(getStruct<T>, {0x580, 16, 0, 0})
	SMember(FDataTableRowHandle)                       SortByPlaceActionRowHandle                                  OFFSET(getStruct<T>, {0x590, 16, 0, 0})
	CMember(TArray<UAthenaRemoteSquadViewData*>)       SquadDataArray                                              OFFSET(get<T>, {0x5A0, 16, 0, 0})
	CMember(UCommonListView*)                          ScoreboardListView                                          OFFSET(get<T>, {0x5B8, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.AthenaEventMatchScoreboardScreenBase.SetSquadIdsVisible_BP
	// void SetSquadIdsVisible_BP(bool bSquadIdsVisible);                                                                       // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaEventMatchScoreboardScreenBase.HandleSquadKillScoreChanged
	// void HandleSquadKillScoreChanged(UAthenaRemoteSquadViewData* InSquadData, int32_t InKillScore);                          // [0x2b01650] Final|Native|Private 
	// Function /Script/FortniteUI.AthenaEventMatchScoreboardScreenBase.HandleSquadEliminated
	// void HandleSquadEliminated(UAthenaRemoteSquadViewData* InSquadData);                                                     // [0x2d7fa70] Final|Native|Private 
};

/// Class /Script/FortniteUI.AthenaEventMatchScoreboardSquadWidget
/// Size: 0x0008 (0x000330 - 0x000338)
class UAthenaEventMatchScoreboardSquadWidget : public UAthenaEventMatchSquadWidgetBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 824;

public:
};

/// Class /Script/FortniteUI.AthenaEventMatchStatusScreenBase
/// Size: 0x0050 (0x000570 - 0x0005C0)
class UAthenaEventMatchStatusScreenBase : public UAthenaEventScreenBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1472;

public:
};

/// Class /Script/FortniteUI.AthenaEventMatchTeamWidgetBase
/// Size: 0x0060 (0x0002E8 - 0x000348)
class UAthenaEventMatchTeamWidgetBase : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 840;

public:
	CMember(TArray<UAthenaEventMatchPlayerWidgetBase*>) PlayerWidgets                                              OFFSET(get<T>, {0x2E8, 16, 0, 0})
	DMember(char)                                      SquadId                                                     OFFSET(get<char>, {0x2F8, 1, 0, 0})
	SMember(FLinearColor)                              TeamColor                                                   OFFSET(getStruct<T>, {0x2FC, 16, 0, 0})
	DMember(int32_t)                                   MaxTeamSize                                                 OFFSET(get<int32_t>, {0x30C, 4, 0, 0})
	CMember(UClass*)                                   PlayerWidgetClass                                           OFFSET(get<T>, {0x310, 8, 0, 0})
	CMember(TArray<TWeakObjectPtr>)                    PlayerDatas                                                 OFFSET(get<T>, {0x330, 16, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.AthenaEventMatchTeamWidgetBase.OnPlayerWidgetAdded
	// void OnPlayerWidgetAdded();                                                                                              // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaEventMatchTeamWidgetBase.OnPlayerDisconnectedChanged
	// void OnPlayerDisconnectedChanged(UAthenaRemotePlayerViewData* InPlayerData, bool bInIsDisconnected);                     // [0x2858c88] Final|Native|Private 
	// Function /Script/FortniteUI.AthenaEventMatchTeamWidgetBase.OnPlayerDeadStateChanged
	// void OnPlayerDeadStateChanged(UAthenaRemotePlayerViewData* InPlayerData, bool bInIsDead);                                // [0x2858d7c] Final|Native|Private 
	// Function /Script/FortniteUI.AthenaEventMatchTeamWidgetBase.IsTeamDead
	// bool IsTeamDead();                                                                                                       // [0x915c0f8] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.AthenaEventMatchTeamWidgetBase.GetTeamKills
	// int32_t GetTeamKills();                                                                                                  // [0x9159a74] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/FortniteUI.AthenaSpectatorPlayerWidgetBase
/// Size: 0x0150 (0x0002E8 - 0x000438)
class UAthenaSpectatorPlayerWidgetBase : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1080;

public:
};

/// Class /Script/FortniteUI.FortBroadcasterMapSettings
/// Size: 0x0008 (0x000400 - 0x000408)
class UFortBroadcasterMapSettings : public UCommonActivatableWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1032;

public:
	CMember(UCommonUserWidget*)                        PlayerIndicatorsRotator                                     OFFSET(get<T>, {0x400, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortBroadcasterMapSettings.BP_HandleMapIconAdded
	// void BP_HandleMapIconAdded(UFortSpectateClickableMapIcon* MapIcon);                                                      // [0x1d9241c] Event|Protected|BlueprintEvent 
};

/// Class /Script/FortniteUI.IconTextButtonSpectatorBase
/// Size: 0x0000 (0x0014E0 - 0x0014E0)
class UIconTextButtonSpectatorBase : public UCommonButtonLegacy
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 5344;

public:
};

/// Class /Script/FortniteUI.AthenaSpectatorBuildCountBase
/// Size: 0x0020 (0x0002E8 - 0x000308)
class UAthenaSpectatorBuildCountBase : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 776;

public:
	CMember(UClass*)                                   BuildingClass                                               OFFSET(get<T>, {0x2E8, 8, 0, 0})
	CMember(ESpectatorBuildCountType)                  BuildCountType                                              OFFSET(get<T>, {0x2F0, 1, 0, 0})
	CMember(UFortItemDefinition*)                      ItemDefinition                                              OFFSET(get<T>, {0x2F8, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.AthenaSpectatorBuildCountBase.UpdateBuildCount
	// void UpdateBuildCount();                                                                                                 // [0x917da64] Final|Native|Private 
	// Function /Script/FortniteUI.AthenaSpectatorBuildCountBase.OnWorldItemListChanged
	// void OnWorldItemListChanged(TArray<UFortWorldItem*>& ItemsAdded, TArray<UFortWorldItem*>& ItemsRemoved);                 // [0x917bd84] Final|Native|Private|HasOutParms 
	// Function /Script/FortniteUI.AthenaSpectatorBuildCountBase.OnFollowedPlayerChanged_BP
	// void OnFollowedPlayerChanged_BP();                                                                                       // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaSpectatorBuildCountBase.OnFollowedPlayerChanged
	// void OnFollowedPlayerChanged(AFortPlayerControllerSpectating* SpectatingPC, AFortPlayerState* NewFollowedPlayer);        // [0x251c20c] Final|Native|Private 
	// Function /Script/FortniteUI.AthenaSpectatorBuildCountBase.OnBuildCountChanged
	// void OnBuildCountChanged(int32_t OldCount, int32_t NewCount);                                                            // [0x1d9241c] Event|Protected|BlueprintEvent 
};

/// Class /Script/FortniteUI.AthenaSpectatorInventorySlotBase
/// Size: 0x0000 (0x0002E8 - 0x0002E8)
class UAthenaSpectatorInventorySlotBase : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 744;

public:
};

/// Class /Script/FortniteUI.AthenaSpectatorMaterialCountsBase
/// Size: 0x0008 (0x000328 - 0x000330)
class UAthenaSpectatorMaterialCountsBase : public UFortHUDElementWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 816;

public:
	DMember(bool)                                      bIsInBuildMode                                              OFFSET(get<bool>, {0x328, 1, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.AthenaSpectatorMaterialCountsBase.TimeToDisplay
	// float TimeToDisplay();                                                                                                   // [0x917da34] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.AthenaSpectatorMaterialCountsBase.OnReplayScrubComplete
	// void OnReplayScrubComplete();                                                                                            // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaSpectatorMaterialCountsBase.OnFollowedPlayerChanged
	// void OnFollowedPlayerChanged(AFortPlayerControllerSpectating* SpectatingPC, AFortPlayerState* FollowedPS);               // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaSpectatorMaterialCountsBase.OnBuildModeChanged
	// void OnBuildModeChanged();                                                                                               // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaSpectatorMaterialCountsBase.OnBuildingMaterialChanged
	// void OnBuildingMaterialChanged(TEnumAsByte<EFortResourceType> BuildingMaterial);                                         // [0x1d9241c] Event|Protected|BlueprintCallable|BlueprintEvent 
};

/// Class /Script/FortniteUI.AthenaSpectatorQuickbarBase
/// Size: 0x0010 (0x000328 - 0x000338)
class UAthenaSpectatorQuickbarBase : public UFortHUDElementWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 824;

public:
	CMember(TArray<UAthenaSpectatorInventorySlotBase*>) ItemSlots                                                  OFFSET(get<T>, {0x328, 16, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.AthenaSpectatorQuickbarBase.OnQuickbarSlotFocusChanged
	// void OnQuickbarSlotFocusChanged(EFortQuickBars QuickbarIndex, int32_t FocusedSlotIdx);                                   // [0x917bc2c] Final|Native|Private 
	// Function /Script/FortniteUI.AthenaSpectatorQuickbarBase.OnQuickbarContentsChanged
	// void OnQuickbarContentsChanged(EFortQuickBars QuickbarIndex, TArray<int32_t>& ChangedSlots);                             // [0x917bb48] Final|Native|Private|HasOutParms 
};

/// Class /Script/FortniteUI.AthenaSpectatorTrapsLoadoutBase
/// Size: 0x0010 (0x000328 - 0x000338)
class UAthenaSpectatorTrapsLoadoutBase : public UFortHUDElementWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 824;

public:
	CMember(TArray<UAthenaSpectatorInventorySlotBase*>) ItemSlots                                                  OFFSET(get<T>, {0x328, 16, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.AthenaSpectatorTrapsLoadoutBase.SelectSlot
	// void SelectSlot(int32_t SlotIdx);                                                                                        // [0x1d9241c] Event|Protected|BlueprintCallable|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaSpectatorTrapsLoadoutBase.OnWorldItemListChanged
	// void OnWorldItemListChanged(TArray<UFortWorldItem*>& ItemsAdded, TArray<UFortWorldItem*>& ItemsRemoved);                 // [0x917be70] Final|Native|Private|HasOutParms 
	// Function /Script/FortniteUI.AthenaSpectatorTrapsLoadoutBase.ClearSlots
	// void ClearSlots();                                                                                                       // [0x9179484] Final|Native|Private 
};

/// Class /Script/FortniteUI.AthenaSpectateMatchModalBase
/// Size: 0x0050 (0x000570 - 0x0005C0)
class UAthenaSpectateMatchModalBase : public UFortActivatablePanel
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1472;

public:
};

/// Class /Script/FortniteUI.AthenaBroadcastKillFeedBase
/// Size: 0x0028 (0x000328 - 0x000350)
class UAthenaBroadcastKillFeedBase : public UFortHUDElementWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 848;

public:
	CMember(UFortDynamicEntryBox*)                     KillFeedEntryBox                                            OFFSET(get<T>, {0x328, 8, 0, 0})
	DMember(float)                                     TimeToShowEntry                                             OFFSET(get<float>, {0x330, 4, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.AthenaBroadcastKillFeedBase.OnToggleShowKillFeed
	// void OnToggleShowKillFeed(bool bShowKillFeed);                                                                           // [0x917bd04] Final|Native|Private 
	// Function /Script/FortniteUI.AthenaBroadcastKillFeedBase.OnTimelineScrubbed
	// void OnTimelineScrubbed();                                                                                               // [0x917bcf0] Final|Native|Private 
	// Function /Script/FortniteUI.AthenaBroadcastKillFeedBase.AddKillFeedEntry
	// void AddKillFeedEntry(FAthenaBroadcastKillFeedEntryInfo& KillFeedEntryInfo);                                             // [0x9179244] Final|Native|Private|HasOutParms 
};

/// Class /Script/FortniteUI.AthenaBroadcastKillFeedItemBase
/// Size: 0x00C0 (0x000328 - 0x0003E8)
class UAthenaBroadcastKillFeedItemBase : public UFortHUDElementWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1000;

public:
	CMember(TWeakObjectPtr<UMaterialInterface*>)       EliminationIcon                                             OFFSET(get<T>, {0x330, 32, 0, 0})
	CMember(TWeakObjectPtr<UMaterialInterface*>)       StormIcon                                                   OFFSET(get<T>, {0x350, 32, 0, 0})
	CMember(TWeakObjectPtr<UMaterialInterface*>)       FallDamageIcon                                              OFFSET(get<T>, {0x370, 32, 0, 0})
	CMember(TWeakObjectPtr<UMaterialInterface*>)       ExplosionIcon                                               OFFSET(get<T>, {0x390, 32, 0, 0})
	CMember(TWeakObjectPtr<UMaterialInterface*>)       DbnoIcon                                                    OFFSET(get<T>, {0x3B0, 32, 0, 0})
	CMember(UCommonTextBlock*)                         Text_InstigatorName                                         OFFSET(get<T>, {0x3D0, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_VictimName                                             OFFSET(get<T>, {0x3D8, 8, 0, 0})
	CMember(UImage*)                                   Image_EntryIcon                                             OFFSET(get<T>, {0x3E0, 8, 0, 0})
};

/// Class /Script/FortniteUI.MinigameHUD_SpectatorGameTimer
/// Size: 0x0018 (0x0003C0 - 0x0003D8)
class UMinigameHUD_SpectatorGameTimer : public UMinigameWidgetBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 984;

public:
	CMember(UCommonTextBlock*)                         Text_Time                                                   OFFSET(get<T>, {0x3C0, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_Centiseconds                                           OFFSET(get<T>, {0x3C8, 8, 0, 0})
};

/// Class /Script/FortniteUI.MinigameHUD_SpectatorLeaderboard
/// Size: 0x0030 (0x0003C0 - 0x0003F0)
class UMinigameHUD_SpectatorLeaderboard : public UMinigameWidgetBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1008;

public:
	CMember(UClass*)                                   ScoreStat                                                   OFFSET(get<T>, {0x3C0, 8, 0, 0})
	CMember(UClass*)                                   ItemCollectStat                                             OFFSET(get<T>, {0x3C8, 8, 0, 0})
	CMember(UClass*)                                   LapTimeStat                                                 OFFSET(get<T>, {0x3D0, 8, 0, 0})
	CMember(UClass*)                                   TimeAliveStat                                               OFFSET(get<T>, {0x3D8, 8, 0, 0})
	CMember(UFortDynamicEntryBox*)                     EntryBox_LeaderboardEntries                                 OFFSET(get<T>, {0x3E0, 8, 0, 0})
	CMember(UClass*)                                   OutsideTopThreeEntryClass                                   OFFSET(get<T>, {0x3E8, 8, 0, 0})
};

/// Class /Script/FortniteUI.MinigameHUD_SpectatorLeaderboardEntry
/// Size: 0x0060 (0x0002E8 - 0x000348)
class UMinigameHUD_SpectatorLeaderboardEntry : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 840;

public:
	CMember(UCommonTextBlock*)                         Text_Standing                                               OFFSET(get<T>, {0x2E8, 8, 0, 0})
	CMember(UImage*)                                   Image_Avatar                                                OFFSET(get<T>, {0x2F0, 8, 0, 0})
	CMember(UImage*)                                   Image_BackgroundBase                                        OFFSET(get<T>, {0x2F8, 8, 0, 0})
	CMember(UImage*)                                   Image_BackgroundShape                                       OFFSET(get<T>, {0x300, 8, 0, 0})
	CMember(UImage*)                                   Image_BackgroundShape_Bottom                                OFFSET(get<T>, {0x308, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_Score                                                  OFFSET(get<T>, {0x310, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_EndScore                                               OFFSET(get<T>, {0x318, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_ScoreOnly                                              OFFSET(get<T>, {0x320, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_ScoreTime                                              OFFSET(get<T>, {0x328, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_SmallScoreTime                                         OFFSET(get<T>, {0x330, 8, 0, 0})
	CMember(UClass*)                                   CachedMinigameTeamIdClass                                   OFFSET(get<T>, {0x338, 8, 0, 0})
	CMember(ESpectatorLeaderboardEntryType)            CachedEntryType                                             OFFSET(get<T>, {0x344, 1, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.MinigameHUD_SpectatorLeaderboardEntry.SetCoinVisibility
	// void SetCoinVisibility(bool bVisible);                                                                                   // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.MinigameHUD_SpectatorLeaderboardEntry.OnStandingChanged
	// void OnStandingChanged(int32_t Standing, int32_t Score);                                                                 // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.MinigameHUD_SpectatorLeaderboardEntry.OnDisplayTypeChanged
	// void OnDisplayTypeChanged(ESpectatorLeaderboardEntryType EntryType);                                                     // [0x1d9241c] Event|Protected|BlueprintEvent 
};

/// Class /Script/FortniteUI.MinigameHUD_SpectatorTeamBanner
/// Size: 0x0030 (0x000360 - 0x000390)
class UMinigameHUD_SpectatorTeamBanner : public UAthenaBroadcastSquadStatusWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 912;

public:
	CMember(UImage*)                                   Image_BackgroundTone                                        OFFSET(get<T>, {0x360, 8, 0, 0})
	CMember(UImage*)                                   Image_BackgroundShape                                       OFFSET(get<T>, {0x368, 8, 0, 0})
	CMember(UImage*)                                   Image_Name                                                  OFFSET(get<T>, {0x370, 8, 0, 0})
	CMember(UImage*)                                   Image_Logo                                                  OFFSET(get<T>, {0x378, 8, 0, 0})
	CMember(UImage*)                                   Image_Avatar                                                OFFSET(get<T>, {0x380, 8, 0, 0})
	CMember(UImage*)                                   Image_Overlap                                               OFFSET(get<T>, {0x388, 8, 0, 0})
};

/// Class /Script/FortniteUI.AthenaSpectatorPlayerListBase
/// Size: 0x0080 (0x000400 - 0x000480)
class UAthenaSpectatorPlayerListBase : public UCommonActivatableWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1152;

public:
	CMember(UCommonListView*)                          ListView                                                    OFFSET(get<T>, {0x400, 8, 0, 0})
	CMember(TArray<UAthenaRemotePlayerViewData*>)      PlayerDataArray                                             OFFSET(get<T>, {0x408, 16, 0, 0})
	SMember(FDataTableRowHandle)                       SortListRowHandles                                          OFFSET(getStruct<T>, {0x418, 80, 0, 0})
	SMember(FDataTableRowHandle)                       ShowPlayerProfileRowHandle                                  OFFSET(getStruct<T>, {0x468, 16, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.AthenaSpectatorPlayerListBase.SetSortMethod
	// void SetSortMethod(ESpectatorPlayerListSortMethod InNewSortMethod);                                                      // [0x917d38c] Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.AthenaSpectatorPlayerListBase.BP_HandlePlayerEventScoreChanged
	// void BP_HandlePlayerEventScoreChanged(int32_t EventScore);                                                               // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaSpectatorPlayerListBase.BP_HandleCurrentSortMethodChanged
	// void BP_HandleCurrentSortMethodChanged(ESpectatorPlayerListSortMethod NewSortMethod);                                    // [0x1d9241c] Event|Protected|BlueprintEvent 
};

/// Class /Script/FortniteUI.AthenaSpectatorMapPlayerListBase
/// Size: 0x0050 (0x000480 - 0x0004D0)
class UAthenaSpectatorMapPlayerListBase : public UAthenaSpectatorPlayerListBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1232;

public:
	SMember(FDataTableRowHandle)                       ToggleOnlyShowMapPlayersRowHandle                           OFFSET(getStruct<T>, {0x480, 16, 0, 0})
	CMember(UCommonButtonLegacy*)                      Button_SortBySquadId                                        OFFSET(get<T>, {0x490, 8, 0, 0})
	CMember(UCommonButtonLegacy*)                      Button_SortByPlayerName                                     OFFSET(get<T>, {0x498, 8, 0, 0})
	CMember(UCommonButtonLegacy*)                      Button_SortByEliminations                                   OFFSET(get<T>, {0x4A0, 8, 0, 0})
	CMember(UCommonButtonLegacy*)                      Button_SortByEventScore                                     OFFSET(get<T>, {0x4A8, 8, 0, 0})
	CMember(UCommonButtonLegacy*)                      Button_SortByState                                          OFFSET(get<T>, {0x4B0, 8, 0, 0})
	CMember(UAthenaMapLayer*)                          MapLayer                                                    OFFSET(get<T>, {0x4B8, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.AthenaSpectatorMapPlayerListBase.OnPlayerSquadIdChanged
	// void OnPlayerSquadIdChanged(UAthenaRemotePlayerViewData* InPlayerData, char InSquadId);                                  // [0x917b650] Final|Native|Private 
	// Function /Script/FortniteUI.AthenaSpectatorMapPlayerListBase.OnPlayerNameChanged
	// void OnPlayerNameChanged(UAthenaRemotePlayerViewData* InPlayerData, FString InPlayerName);                               // [0x917af78] Final|Native|Private 
	// Function /Script/FortniteUI.AthenaSpectatorMapPlayerListBase.OnPlayerKillScoreChanged
	// void OnPlayerKillScoreChanged(UAthenaRemotePlayerViewData* InPlayerData, int32_t InKillScore);                           // [0x20d0478] Final|Native|Private 
	// Function /Script/FortniteUI.AthenaSpectatorMapPlayerListBase.OnPlayerIsInRelevancyChanged
	// void OnPlayerIsInRelevancyChanged(UAthenaRemotePlayerViewData* InPlayerData, bool bInIsInRelevancy);                     // [0x20d03c0] Final|Native|Private 
	// Function /Script/FortniteUI.AthenaSpectatorMapPlayerListBase.OnPlayerEliminatedStateChanged
	// void OnPlayerEliminatedStateChanged(UAthenaRemotePlayerViewData* InPlayerData, bool bInIsEliminated);                    // [0x20d03c0] Final|Native|Private 
	// Function /Script/FortniteUI.AthenaSpectatorMapPlayerListBase.BP_HandleSquadIdVisibilityChanged
	// void BP_HandleSquadIdVisibilityChanged(bool bSquadIdsVisible);                                                           // [0x1d9241c] Event|Protected|BlueprintEvent 
};

/// Class /Script/FortniteUI.AthenaSpectatorPlayerListEntryBase
/// Size: 0x0050 (0x000438 - 0x000488)
class UAthenaSpectatorPlayerListEntryBase : public UAthenaSpectatorPlayerWidgetBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1160;

public:
	CMember(UCommonBorder*)                            Border_SquadColor                                           OFFSET(get<T>, {0x438, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_SquadId                                                OFFSET(get<T>, {0x440, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_PlayerName                                             OFFSET(get<T>, {0x448, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_KillScore                                              OFFSET(get<T>, {0x450, 8, 0, 0})
	CMember(UAthenaSpectatorHitPointBarBase*)          HitPoint_HealthBar                                          OFFSET(get<T>, {0x458, 8, 0, 0})
	CMember(UAthenaSpectatorHitPointBarBase*)          HitPoint_ShieldBar                                          OFFSET(get<T>, {0x460, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_EventScore                                             OFFSET(get<T>, {0x468, 8, 0, 0})
	CMember(UImage*)                                   Image_RecordingPlayerIcon                                   OFFSET(get<T>, {0x470, 8, 0, 0})
	CMember(UImage*)                                   Image_FollowedPlayerIcon                                    OFFSET(get<T>, {0x478, 8, 0, 0})
	CMember(UCommonButtonLegacy*)                      Button                                                      OFFSET(get<T>, {0x480, 8, 0, 0})
};

/// Class /Script/FortniteUI.FortReplayPlayerListPanel
/// Size: 0x0000 (0x000570 - 0x000570)
class UFortReplayPlayerListPanel : public UFortActivatablePanel
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1392;

public:
};

/// Class /Script/FortniteUI.FortHighlightAnnotation
/// Size: 0x0018 (0x0002E8 - 0x000300)
class UFortHighlightAnnotation : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 768;

public:
	DMember(float)                                     FadeOutTime                                                 OFFSET(get<float>, {0x2E8, 4, 0, 0})
	CMember(UTextBlock*)                               TextBlock_MainText                                          OFFSET(get<T>, {0x2F0, 8, 0, 0})
};

/// Class /Script/FortniteUI.FortReplayHighlightItemBase
/// Size: 0x0180 (0x0014E0 - 0x001660)
class UFortReplayHighlightItemBase : public UCommonButtonLegacy
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 5728;

public:
	CMember(UImage*)                                   Image_Icon                                                  OFFSET(get<T>, {0x14F0, 8, 0, 0})
	CMember(UTextBlock*)                               TextBlock_Title                                             OFFSET(get<T>, {0x14F8, 8, 0, 0})
	CMember(UTextBlock*)                               TextBlock_Duration                                          OFFSET(get<T>, {0x1500, 8, 0, 0})
	CMember(TMap<EHighlightReelTypes, FSlateBrush>)    IconMap                                                     OFFSET(get<T>, {0x1508, 80, 0, 0})
	SMember(FSlateBrush)                               DefaultIcon                                                 OFFSET(getStruct<T>, {0x1560, 192, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortReplayHighlightItemBase.HandlePlayItemClicked
	// void HandlePlayItemClicked();                                                                                            // [0x9179878] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/FortniteUI.FortReplayHighlightsWindow
/// Size: 0x0010 (0x000570 - 0x000580)
class UFortReplayHighlightsWindow : public UFortActivatablePanel
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1408;

public:
	CMember(UClass*)                                   HighlightItemClass                                          OFFSET(get<T>, {0x570, 8, 0, 0})
	CMember(UVerticalBox*)                             VerticalBox_ItemContainer                                   OFFSET(get<T>, {0x578, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortReplayHighlightsWindow.HandleReplayHighlightsAvailable
	// void HandleReplayHighlightsAvailable(AFortReplaySpectator* Sender, bool bIsAvailable);                                   // [0x339aee8] Final|Native|Private 
	// Function /Script/FortniteUI.FortReplayHighlightsWindow.HandleHighlightItemPlayEvent
	// void HandleHighlightItemPlayEvent(UFortReplayHighlightItemBase* Sender);                                                 // [0x91797dc] Final|Native|Private 
};

/// Class /Script/FortniteUI.FortShotTitleScreen
/// Size: 0x0018 (0x0002E8 - 0x000300)
class UFortShotTitleScreen : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 768;

public:
	DMember(float)                                     FadeOutTime                                                 OFFSET(get<float>, {0x2E8, 4, 0, 0})
	CMember(UTextBlock*)                               TextBlock_MainText                                          OFFSET(get<T>, {0x2F0, 8, 0, 0})
};

/// Class /Script/FortniteUI.FortBroadcastViewSettings
/// Size: 0x0000 (0x000570 - 0x000570)
class UFortBroadcastViewSettings : public UFortActivatablePanel
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1392;

public:
};

/// Class /Script/FortniteUI.FortReplayViewSettingsTabBase
/// Size: 0x0000 (0x000538 - 0x000538)
class UFortReplayViewSettingsTabBase : public UCommonActivatablePanelLegacy
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1336;

public:
};

/// Class /Script/FortniteUI.FortSpectatorAmbientSettingsTab
/// Size: 0x0010 (0x000538 - 0x000548)
class UFortSpectatorAmbientSettingsTab : public UFortReplayViewSettingsTabBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1352;

public:
	CMember(UWidget*)                                  TimeOfDaySlider                                             OFFSET(get<T>, {0x540, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortSpectatorAmbientSettingsTab.SetTimeOfDayPaused
	// void SetTimeOfDayPaused(bool bPaused);                                                                                   // [0x917d750] Final|Native|Private|BlueprintCallable 
	// Function /Script/FortniteUI.FortSpectatorAmbientSettingsTab.SetTimeOfDay
	// void SetTimeOfDay(float TimeOfDay);                                                                                      // [0x917d6d0] Final|Native|Private|BlueprintCallable 
	// Function /Script/FortniteUI.FortSpectatorAmbientSettingsTab.OnTimeOfDayPauseChanged
	// void OnTimeOfDayPauseChanged(bool bPaused);                                                                              // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortSpectatorAmbientSettingsTab.IsGeneralTimeOfDayManagerActive
	// bool IsGeneralTimeOfDayManagerActive();                                                                                  // [0x11be680] Final|Native|Private|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortSpectatorAmbientSettingsTab.GetCurrentTimeOfDay
	// float GetCurrentTimeOfDay();                                                                                             // [0x11bf5f0] Final|Native|Private|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/FortniteUI.FortSpectatorCameraSettingsTab
/// Size: 0x0008 (0x000538 - 0x000540)
class UFortSpectatorCameraSettingsTab : public UFortReplayViewSettingsTabBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1344;

public:
	CMember(UCommonUserWidget*)                        Rotator_PlayerOutlines                                      OFFSET(get<T>, {0x538, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortSpectatorCameraSettingsTab.SetThirdPersonDistanceToSubject
	// void SetThirdPersonDistanceToSubject(float ThirdPersonDistanceToSubject);                                                // [0x917d640] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.FortSpectatorCameraSettingsTab.SetThirdPersonCameraCollision
	// void SetThirdPersonCameraCollision(bool bThirdPersonCameraCollision);                                                    // [0x917d5ac] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.FortSpectatorCameraSettingsTab.SetThirdPersonAutoFollowMode
	// void SetThirdPersonAutoFollowMode(EThirdPersonAutoFollowMode ThirdPersonAutoFollowMode);                                 // [0x917d528] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.FortSpectatorCameraSettingsTab.SetStormEffectsEnabled
	// void SetStormEffectsEnabled(bool bStormEffectsEnabled);                                                                  // [0x917d494] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.FortSpectatorCameraSettingsTab.SetShareLensSettings
	// void SetShareLensSettings(bool bShareLensSettings);                                                                      // [0x917d264] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.FortSpectatorCameraSettingsTab.SetSessionIdWatermark
	// void SetSessionIdWatermark(bool bShowSessionIDWatermark);                                                                // [0x917d1d0] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.FortSpectatorCameraSettingsTab.SetSafeZoneOpacity
	// void SetSafeZoneOpacity(float SafeZoneOpacity);                                                                          // [0x917d0ac] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.FortSpectatorCameraSettingsTab.SetRelevancyZoneVisible
	// void SetRelevancyZoneVisible(bool bRelevancyZoneVisible);                                                                // [0x917d018] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.FortSpectatorCameraSettingsTab.SetPlayerOutlinesEnabled
	// void SetPlayerOutlinesEnabled(bool bPlayerOutlinesEnabled);                                                              // [0x917cf84] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.FortSpectatorCameraSettingsTab.SetHighQualityFxEnabled
	// void SetHighQualityFxEnabled(bool bHighQualityFxEnabled);                                                                // [0x917cb8c] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.FortSpectatorCameraSettingsTab.SetFirstPlaceHighlightEnabled
	// void SetFirstPlaceHighlightEnabled(bool bFirstPlaceHighlightEnabled);                                                    // [0x917c928] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.FortSpectatorCameraSettingsTab.SetDroneIgnoreJump
	// void SetDroneIgnoreJump(bool bDroneIgnoreJump);                                                                          // [0x917c894] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.FortSpectatorCameraSettingsTab.SetDamageFxEnabled
	// void SetDamageFxEnabled(bool bDamageFxEnabled);                                                                          // [0x917c76c] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.FortSpectatorCameraSettingsTab.SetBattleMapShowTimeIndicator
	// void SetBattleMapShowTimeIndicator(bool bBattleMapShowTimeIndicator);                                                    // [0x917c6d8] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.FortSpectatorCameraSettingsTab.SetBattleMapShowNearbyChests
	// void SetBattleMapShowNearbyChests(bool bBattleMapShowNearbyChests);                                                      // [0x917c644] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.FortSpectatorCameraSettingsTab.SetBattleMapShowAllSquadMembers
	// void SetBattleMapShowAllSquadMembers(bool bBattleMapShowAllSquadMembers);                                                // [0x917c5b0] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.FortSpectatorCameraSettingsTab.SetBattleMapAutomaticCameraPlacement
	// void SetBattleMapAutomaticCameraPlacement(bool bBattleMapAutomaticCameraPlacement);                                      // [0x917c51c] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.FortSpectatorCameraSettingsTab.OnThirdPersonDistanceToSubjectChanged
	// void OnThirdPersonDistanceToSubjectChanged(float ThirdPersonDistanceToSubject);                                          // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortSpectatorCameraSettingsTab.OnThirdPersonCameraCollisionChanged
	// void OnThirdPersonCameraCollisionChanged(bool bThirdPersonCameraCollision);                                              // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortSpectatorCameraSettingsTab.OnThirdPersonAutoFollowModeChanged
	// void OnThirdPersonAutoFollowModeChanged(EThirdPersonAutoFollowMode ThirdPersonAutoFollowMode);                           // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortSpectatorCameraSettingsTab.OnStormEffectsEnabledChanged
	// void OnStormEffectsEnabledChanged(bool bStormEffectsEnabled);                                                            // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortSpectatorCameraSettingsTab.OnShareLensSettingsChanged
	// void OnShareLensSettingsChanged(bool bShareLensSettings);                                                                // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortSpectatorCameraSettingsTab.OnSessionIDWatermarkChanged
	// void OnSessionIDWatermarkChanged(bool bShowSessionIDWatermark);                                                          // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortSpectatorCameraSettingsTab.OnSafeZoneOpacityChanged
	// void OnSafeZoneOpacityChanged(float SafeZoneOpacity);                                                                    // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortSpectatorCameraSettingsTab.OnRelevancyZoneVisibleChanged
	// void OnRelevancyZoneVisibleChanged(bool bRelevancyZoneVisible);                                                          // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortSpectatorCameraSettingsTab.OnPlayerOutlinesEnabledChanged
	// void OnPlayerOutlinesEnabledChanged(bool bPlayerOutlinesEnabled);                                                        // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortSpectatorCameraSettingsTab.OnHighQualityFxEnabledChanged
	// void OnHighQualityFxEnabledChanged(bool bHighQualityFxEnabled);                                                          // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortSpectatorCameraSettingsTab.OnFirstPlaceHighlightEnabledChanged
	// void OnFirstPlaceHighlightEnabledChanged(bool bFirstPlaceHighlightEnabled);                                              // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortSpectatorCameraSettingsTab.OnDroneIgnoreJumpChanged
	// void OnDroneIgnoreJumpChanged(bool bDroneIgnoreJump);                                                                    // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortSpectatorCameraSettingsTab.OnDamageFxEnabledChanged
	// void OnDamageFxEnabledChanged(bool bDamageFxEnabled);                                                                    // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortSpectatorCameraSettingsTab.OnBattleMapShowTimeIndicatorChanged
	// void OnBattleMapShowTimeIndicatorChanged(bool bBattleMapShowTimeIndicator);                                              // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortSpectatorCameraSettingsTab.OnBattleMapShowNearbyChestsChanged
	// void OnBattleMapShowNearbyChestsChanged(bool bBattleMapShowNearbyChests);                                                // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortSpectatorCameraSettingsTab.OnBattleMapShowAllSquadMembersChanged
	// void OnBattleMapShowAllSquadMembersChanged(bool bBattleMapShowAllSquadMembers);                                          // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortSpectatorCameraSettingsTab.OnBattleMapAutomaticCameraPlacementChanged
	// void OnBattleMapAutomaticCameraPlacementChanged(bool bInBattleMapAutomaticCameraPlacement);                              // [0x1d9241c] Event|Protected|BlueprintEvent 
};

/// Class /Script/FortniteUI.FortSpectatorLensSettingsTab
/// Size: 0x0030 (0x000538 - 0x000568)
class UFortSpectatorLensSettingsTab : public UFortReplayViewSettingsTabBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1384;

public:
	CMember(UCommonUserWidget*)                        Rotator_AutoExposure                                        OFFSET(get<T>, {0x560, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortSpectatorLensSettingsTab.SetManualFocusDistance
	// void SetManualFocusDistance(float ManualFocusDistance);                                                                  // [0x917ce60] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.FortSpectatorLensSettingsTab.SetManualExposureBias
	// void SetManualExposureBias(float ManualExposureBias);                                                                    // [0x917cdd0] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.FortSpectatorLensSettingsTab.SetFocalLengthFromIdx
	// void SetFocalLengthFromIdx(int32_t FocalLengthIdx);                                                                      // [0x917c9bc] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.FortSpectatorLensSettingsTab.SetAutoFocusEnabled
	// void SetAutoFocusEnabled(bool bAutoFocusEnabled);                                                                        // [0x917c488] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.FortSpectatorLensSettingsTab.SetAutoExposureEnabled
	// void SetAutoExposureEnabled(bool bAutoExposureEnabled);                                                                  // [0x917c3f4] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.FortSpectatorLensSettingsTab.SetApertureFromIdx
	// void SetApertureFromIdx(int32_t ApertureIdx);                                                                            // [0x917c114] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.FortSpectatorLensSettingsTab.OnManualFocusDistanceChanged
	// void OnManualFocusDistanceChanged(float ManualFocusDistance);                                                            // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortSpectatorLensSettingsTab.OnManualExposureBiasChanged
	// void OnManualExposureBiasChanged(float ManualExposureBias);                                                              // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortSpectatorLensSettingsTab.OnFocalLengthChanged
	// void OnFocalLengthChanged(TArray<FText>& FocalLengthTexts, int32_t PresetFocalLengthIdx);                                // [0x1d9241c] Event|Protected|HasOutParms|BlueprintEvent 
	// Function /Script/FortniteUI.FortSpectatorLensSettingsTab.OnAutoFocusEnabledChanged
	// void OnAutoFocusEnabledChanged(bool bAutoFocusEnabled);                                                                  // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortSpectatorLensSettingsTab.OnAutoExposureEnabledChanged
	// void OnAutoExposureEnabledChanged(bool bAutoExposureEnabled);                                                            // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortSpectatorLensSettingsTab.OnApertureChanged
	// void OnApertureChanged(int32_t PresetApertureIdx);                                                                       // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortSpectatorLensSettingsTab.GetPresetApertureTexts
	// void GetPresetApertureTexts(TArray<FText>& PresetApertureTexts);                                                         // [0x33f0f60] Final|Native|Protected|HasOutParms|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortSpectatorLensSettingsTab.GetMinMaxFocusDistance
	// void GetMinMaxFocusDistance(float& MinFocusDistance, float& MaxFocusDistance);                                           // [0x24e4890] Final|Native|Protected|HasOutParms|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortSpectatorLensSettingsTab.GetMinMaxExposure
	// void GetMinMaxExposure(float& MinExposure, float& MaxExposure);                                                          // [0x24e4984] Final|Native|Protected|HasOutParms|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/FortniteUI.FortSpectatorNameplateSettingsTab
/// Size: 0x0008 (0x000538 - 0x000540)
class UFortSpectatorNameplateSettingsTab : public UFortReplayViewSettingsTabBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1344;

public:
	CMember(UCommonUserWidget*)                        Rotator_NameplatesEnabled                                   OFFSET(get<T>, {0x538, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortSpectatorNameplateSettingsTab.SetViewDistance
	// void SetViewDistance(float ViewDistance);                                                                                // [0x917d854] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.FortSpectatorNameplateSettingsTab.SetSquadIdMode
	// void SetSquadIdMode(ESpectatorSquadIdMode SquadIdMode);                                                                  // [0x917d410] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.FortSpectatorNameplateSettingsTab.SetShowTeamColor
	// void SetShowTeamColor(bool bShowTeamColor);                                                                              // [0x917d2f8] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.FortSpectatorNameplateSettingsTab.SetScalingOptionsEnabled
	// void SetScalingOptionsEnabled(bool bScalingOptionsEnabled);                                                              // [0x917d13c] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.FortSpectatorNameplateSettingsTab.SetNameplatesEnabled
	// void SetNameplatesEnabled(bool bNamePlatesEnabled);                                                                      // [0x917cef0] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.FortSpectatorNameplateSettingsTab.SetLowDetailScaleMin
	// void SetLowDetailScaleMin(float LowDetailScaleMin);                                                                      // [0x917cd40] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.FortSpectatorNameplateSettingsTab.SetLowDetailScaleMax
	// void SetLowDetailScaleMax(float LowDetailScaleMax);                                                                      // [0x917ccb0] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.FortSpectatorNameplateSettingsTab.SetLowDetailDistance
	// void SetLowDetailDistance(float LowDetailDistance);                                                                      // [0x917cc20] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.FortSpectatorNameplateSettingsTab.SetHighDetailScaleMin
	// void SetHighDetailScaleMin(float HighDetailScaleMin);                                                                    // [0x917cafc] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.FortSpectatorNameplateSettingsTab.SetHighDetailScaleMax
	// void SetHighDetailScaleMax(float HighDetailScaleMax);                                                                    // [0x917ca6c] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.FortSpectatorNameplateSettingsTab.SetDisplaySessionRanks
	// void SetDisplaySessionRanks(bool bDisplaySessionRanks);                                                                  // [0x917c800] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.FortSpectatorNameplateSettingsTab.SetArrowScaleMin
	// void SetArrowScaleMin(float ArrowScaleMin);                                                                              // [0x917c364] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.FortSpectatorNameplateSettingsTab.SetArrowScaleMax
	// void SetArrowScaleMax(float ArrowScaleMax);                                                                              // [0x917c2d4] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.FortSpectatorNameplateSettingsTab.SetArrowDistance
	// void SetArrowDistance(float ArrowDistance);                                                                              // [0x917c244] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.FortSpectatorNameplateSettingsTab.SetArrowColorEnabled
	// void SetArrowColorEnabled(bool bArrowColorEnabled);                                                                      // [0x917c1b0] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.FortSpectatorNameplateSettingsTab.OnViewDistanceChanged
	// void OnViewDistanceChanged(float ViewDistance);                                                                          // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortSpectatorNameplateSettingsTab.OnSquadIdModeChanged
	// void OnSquadIdModeChanged(ESpectatorSquadIdMode SquadIdMode);                                                            // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortSpectatorNameplateSettingsTab.OnShowTeamColorChanged
	// void OnShowTeamColorChanged(bool bShowTeamColor);                                                                        // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortSpectatorNameplateSettingsTab.OnScalingOptionsEnabledChanged
	// void OnScalingOptionsEnabledChanged(bool bScalingOptionsEnabled);                                                        // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortSpectatorNameplateSettingsTab.OnNameplatesEnabledChanged
	// void OnNameplatesEnabledChanged(bool bNamePlatesEnabled);                                                                // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortSpectatorNameplateSettingsTab.OnLowDetailScaleMinChanged
	// void OnLowDetailScaleMinChanged(float LowDetailScaleMin);                                                                // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortSpectatorNameplateSettingsTab.OnLowDetailScaleMaxChanged
	// void OnLowDetailScaleMaxChanged(float LowDetailScaleMax);                                                                // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortSpectatorNameplateSettingsTab.OnLowDetailDistanceChanged
	// void OnLowDetailDistanceChanged(float LowDetailDistance);                                                                // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortSpectatorNameplateSettingsTab.OnHighDetailScaleMinChanged
	// void OnHighDetailScaleMinChanged(float HighDetailScaleMin);                                                              // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortSpectatorNameplateSettingsTab.OnHighDetailScaleMaxChanged
	// void OnHighDetailScaleMaxChanged(float HighDetailScaleMax);                                                              // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortSpectatorNameplateSettingsTab.OnDisplaySessionRanksChanged
	// void OnDisplaySessionRanksChanged(bool bDisplaySessionRanks);                                                            // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortSpectatorNameplateSettingsTab.OnArrowScaleMinChanged
	// void OnArrowScaleMinChanged(float ArrowScaleMin);                                                                        // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortSpectatorNameplateSettingsTab.OnArrowScaleMaxChanged
	// void OnArrowScaleMaxChanged(float ArrowScaleMax);                                                                        // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortSpectatorNameplateSettingsTab.OnArrowDistanceChanged
	// void OnArrowDistanceChanged(float ArrowDistance);                                                                        // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortSpectatorNameplateSettingsTab.OnArrowColorEnabledChanged
	// void OnArrowColorEnabledChanged(bool bArrowColorEnabled);                                                                // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortSpectatorNameplateSettingsTab.GetScalingOptionsEnabled
	// bool GetScalingOptionsEnabled();                                                                                         // [0x24e4a78] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortSpectatorNameplateSettingsTab.GetNameplatesEnabled
	// bool GetNameplatesEnabled();                                                                                             // [0x24e4af8] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortSpectatorNameplateSettingsTab.GetMinMaxNameplateScale
	// void GetMinMaxNameplateScale(float& MinScale, float& MaxScale);                                                          // [0x24e52ec] Final|Native|Protected|HasOutParms|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortSpectatorNameplateSettingsTab.GetMinMaxNameplateDistance
	// void GetMinMaxNameplateDistance(float& MinDistance, float& MaxDistance);                                                 // [0x24e53e0] Final|Native|Protected|HasOutParms|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortSpectatorNameplateSettingsTab.GetDisplaySessionRanks
	// bool GetDisplaySessionRanks();                                                                                           // [0x24e4ab8] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/FortniteUI.AthenaTeamDisplayData
/// Size: 0x0088 (0x000030 - 0x0000B8)
class UAthenaTeamDisplayData : public UDataAsset
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 184;

public:
	CMember(TArray<FAthenaTeamDisplayInfo>)            SquadStyles                                                 OFFSET(get<T>, {0x30, 16, 0, 0})
	SMember(FAthenaTeamDisplayInfo)                    DefaultStyle                                                OFFSET(getStruct<T>, {0x40, 120, 0, 0})
};

/// Class /Script/FortniteUI.FortTeamMemberEntryBase
/// Size: 0x0030 (0x0014E0 - 0x001510)
class UFortTeamMemberEntryBase : public UCommonButtonLegacy
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 5392;

public:
};

/// Class /Script/FortniteUI.AthenaMinimalSquadMemberEntry
/// Size: 0x0000 (0x001510 - 0x001510)
class UAthenaMinimalSquadMemberEntry : public UFortTeamMemberEntryBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 5392;

public:
};

/// Class /Script/FortniteUI.FortBasicTeamMemberEntry
/// Size: 0x0020 (0x001510 - 0x001530)
class UFortBasicTeamMemberEntry : public UFortTeamMemberEntryBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 5424;

public:
	CMember(UImage*)                                   Image_PlatformIcon                                          OFFSET(get<T>, {0x1508, 8, 0, 0})
	CMember(UFortPlayerBanner*)                        Banner_MemberBanner                                         OFFSET(get<T>, {0x1510, 8, 0, 0})
	CMember(UFortSocialNameTextBlock*)                 Text_SocialName                                             OFFSET(get<T>, {0x1518, 8, 0, 0})
	CMember(UImage*)                                   Image_LeaderIcon                                            OFFSET(get<T>, {0x1520, 8, 0, 0})
	CMember(UFortVoiceChatStatusIcon*)                 VoiceIcon_Status                                            OFFSET(get<T>, {0x1528, 8, 0, 0})
};

/// Class /Script/FortniteUI.AthenaSquadMemberDetailedEntry
/// Size: 0x0020 (0x001530 - 0x001550)
class UAthenaSquadMemberDetailedEntry : public UFortBasicTeamMemberEntry
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 5456;

public:
	CMember(UFortSocialAvatarIcon*)                    AvatarIcon_MemberAvatar                                     OFFSET(get<T>, {0x1538, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_ParticipationStatus                                    OFFSET(get<T>, {0x1540, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.AthenaSquadMemberDetailedEntry.OnSquadAssigned
	// void OnSquadAssigned();                                                                                                  // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaSquadMemberDetailedEntry.GetSquadDisplayInfo
	// FAthenaTeamDisplayInfo GetSquadDisplayInfo();                                                                            // [0x9179558] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/FortniteUI.AthenaTeamSquadEntry
/// Size: 0x0010 (0x0002E8 - 0x0002F8)
class UAthenaTeamSquadEntry : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 760;

public:
	CMember(UDynamicEntryBox*)                         EntryBox_Members                                            OFFSET(get<T>, {0x2E8, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.AthenaTeamSquadEntry.OnSquadIsEmptyChanged
	// void OnSquadIsEmptyChanged(bool bSquadIsEmpty, bool bMultipleSquadsPopulated);                                           // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaTeamSquadEntry.OnSquadAssigned
	// void OnSquadAssigned(FAthenaTeamDisplayInfo& SquadStyle);                                                                // [0x1d9241c] Event|Protected|HasOutParms|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaTeamSquadEntry.GetSquadID
	// int32_t GetSquadID();                                                                                                    // [0x9179618] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/FortniteUI.FortTeamSquadDetailedEntry
/// Size: 0x0050 (0x0002F8 - 0x000348)
class UFortTeamSquadDetailedEntry : public UAthenaTeamSquadEntry
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 840;

public:
	CMember(UCommonRichTextBlock*)                     RichText_SquadName                                          OFFSET(get<T>, {0x338, 8, 0, 0})
	CMember(UCommonRichTextBlock*)                     RichText_LockReason                                         OFFSET(get<T>, {0x340, 8, 0, 0})
};

/// Class /Script/FortniteUI.AthenaTeamSquadsEntryBox
/// Size: 0x0020 (0x000258 - 0x000278)
class UAthenaTeamSquadsEntryBox : public UDynamicEntryBoxBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 632;

public:
	CMember(UClass*)                                   SquadEntryClass                                             OFFSET(get<T>, {0x268, 8, 0, 0})
	DMember(bool)                                      bDisplayEmptySquads                                         OFFSET(get<bool>, {0x270, 1, 0, 0})
};

/// Class /Script/FortniteUI.AthenaUIStateWidget_Frontend
/// Size: 0x0630 (0x000418 - 0x000A48)
class UAthenaUIStateWidget_Frontend : public UFortUIStateWidgetBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 2632;

public:
	CMember(TArray<FString>)                           DefaultFlowStepArray                                        OFFSET(get<T>, {0x560, 16, 0, 0})
	CMember(TArray<FString>)                           FirstTimeSeasonFlowStepArray                                OFFSET(get<T>, {0x570, 16, 0, 0})
	CMember(UClass*)                                   GuidedTutorialFakeLoadingScreenClass                        OFFSET(get<T>, {0x658, 8, 0, 0})
	SMember(FPrimaryAssetId)                           GuidedTutorialPlaylistId                                    OFFSET(getStruct<T>, {0x668, 8, 0, 0})
	CMember(TArray<UFortGiftBoxItem*>)                 PendingRemovalGiftboxes                                     OFFSET(get<T>, {0x670, 16, 0, 0})
	SMember(FText)                                     BadMatchPopupTitle                                          OFFSET(getStruct<T>, {0x688, 24, 0, 0})
	SMember(FText)                                     BadMatchPopupDescription                                    OFFSET(getStruct<T>, {0x6A0, 24, 0, 0})
	SMember(FGameplayTag)                              BattlepassScreenTag                                         OFFSET(getStruct<T>, {0x6B8, 4, 0, 0})
	CMember(TWeakObjectPtr<UClass*>)                   FireModeSelectionReminderModalClass                         OFFSET(get<T>, {0x6C0, 32, 0, 0})
	CMember(TWeakObjectPtr<UClass*>)                   FireModeSelectionScreenClass                                OFFSET(get<T>, {0x6E0, 32, 0, 0})
	CMember(TWeakObjectPtr<UClass*>)                   MotdWidgetClass                                             OFFSET(get<T>, {0x700, 32, 0, 0})
	CMember(UClass*)                                   SettingsUpdatedClass                                        OFFSET(get<T>, {0x720, 8, 0, 0})
	CMember(UClass*)                                   EnterCabinClass                                             OFFSET(get<T>, {0x728, 8, 0, 0})
	CMember(TWeakObjectPtr<UClass*>)                   VideoPlayerClass                                            OFFSET(get<T>, {0x730, 32, 0, 0})
	CMember(UFortStreamMediaSource*)                   VideoStream_Source                                          OFFSET(get<T>, {0x750, 8, 0, 0})
	CMember(TWeakObjectPtr<UClass*>)                   MFAModalClass                                               OFFSET(get<T>, {0x758, 32, 0, 0})
	CMember(UClass*)                                   SocialImportPanelClass                                      OFFSET(get<T>, {0x778, 8, 0, 0})
	CMember(UClass*)                                   ConfirmationWindowClass                                     OFFSET(get<T>, {0x780, 8, 0, 0})
	CMember(UClass*)                                   MiniMapManagerClass                                         OFFSET(get<T>, {0x788, 8, 0, 0})
	CMember(UClass*)                                   MapScreenContainerClass                                     OFFSET(get<T>, {0x790, 8, 0, 0})
	CMember(UClass*)                                   HabaneroIntroModalClass                                     OFFSET(get<T>, {0x798, 8, 0, 0})
	CMember(TWeakObjectPtr<UClass*>)                   ResolutionChangeModalClass                                  OFFSET(get<T>, {0x7A0, 32, 0, 0})
	CMember(UClass*)                                   MPLobbyOnboardingModalClass                                 OFFSET(get<T>, {0x7C0, 8, 0, 0})
	CMember(TWeakObjectPtr<UFortAthenaTabsScreenBase*>) AthenaTabsScreen                                           OFFSET(get<T>, {0x7C8, 8, 0, 0})
	CMember(UClass*)                                   PlayerBannedScreenClass                                     OFFSET(get<T>, {0x7D0, 8, 0, 0})
	CMember(UAthenaMapScreenContainer*)                MapScreen                                                   OFFSET(get<T>, {0x7D8, 8, 0, 0})
	DMember(bool)                                      bVideoActive                                                OFFSET(get<bool>, {0x7E0, 1, 0, 0})
	CMember(UAthenaTopBar*)                            TopBar_Widget                                               OFFSET(get<T>, {0x7E8, 8, 0, 0})
	CMember(UCommonUserWidget*)                        BottomBar                                                   OFFSET(get<T>, {0x7F0, 8, 0, 0})
	CMember(UFortActivatableChatWidget*)               ChatPanel_Widget                                            OFFSET(get<T>, {0x7F8, 8, 0, 0})
	CMember(UCommonButtonLegacy*)                      Button_ToggleChat                                           OFFSET(get<T>, {0x800, 8, 0, 0})
	CMember(UFortDualBladeMenu*)                       DualBladeMenu_Widget                                        OFFSET(get<T>, {0x808, 8, 0, 0})
	CMember(UOverlay*)                                 Overlay_DynamicExtensions                                   OFFSET(get<T>, {0x810, 8, 0, 0})
	CMember(UFortGiftBoxItem*)                         NextGiftBox                                                 OFFSET(get<T>, {0x828, 8, 0, 0})
	CMember(TArray<TWeakObjectPtr>)                    RequestedGiftBoxesToDisplay                                 OFFSET(get<T>, {0x830, 16, 0, 0})
	SMember(FPrimaryAssetId)                           ApolloIntroPlaylist_CurrentPlayerId                         OFFSET(getStruct<T>, {0x854, 8, 0, 0})
	SMember(FPrimaryAssetId)                           ApolloIntroPlaylist_PastPlayerId                            OFFSET(getStruct<T>, {0x85C, 8, 0, 0})
	SMember(FPrimaryAssetId)                           ApolloIntroPlaylist_NewPlayerId                             OFFSET(getStruct<T>, {0x864, 8, 0, 0})
	SMember(FPrimaryAssetId)                           ApolloIntroPlaylist_05H95BId                                OFFSET(getStruct<T>, {0x86C, 8, 0, 0})
	SMember(FPrimaryAssetId)                           ApolloIntroPlaylist_20H80BId                                OFFSET(getStruct<T>, {0x874, 8, 0, 0})
	SMember(FPrimaryAssetId)                           ApolloIntroPlaylist_30H70BId                                OFFSET(getStruct<T>, {0x87C, 8, 0, 0})
	SMember(FPrimaryAssetId)                           ApolloIntroPlaylist_40H60BId                                OFFSET(getStruct<T>, {0x884, 8, 0, 0})
	CMember(TWeakObjectPtr<UClass*>)                   ApolloIntroFakeLoadingScreenClass                           OFFSET(get<T>, {0x890, 32, 0, 0})
	CMember(USocialParty*)                             CurrentSocialParty                                          OFFSET(get<T>, {0x930, 8, 0, 0})
	CMember(UFortDiscoverSurfaceCache*)                DiscoverSurfaceCache                                        OFFSET(get<T>, {0x960, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.AthenaUIStateWidget_Frontend.TryShowingMPLobbyOnboardingModal
	// void TryShowingMPLobbyOnboardingModal();                                                                                 // [0x1d9da90] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.AthenaUIStateWidget_Frontend.StopTrailerTransitionAudioCheck
	// void StopTrailerTransitionAudioCheck();                                                                                  // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaUIStateWidget_Frontend.StartTrailerTransitionAudioCheck
	// void StartTrailerTransitionAudioCheck(UMediaPlayer* MediaPlayer);                                                        // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaUIStateWidget_Frontend.ShowGameTabGroup
	// void ShowGameTabGroup(bool bShow);                                                                                       // [0x917d9b0] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.AthenaUIStateWidget_Frontend.SetVideoActive
	// void SetVideoActive(bool bActive);                                                                                       // [0x917d7d0] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.AthenaUIStateWidget_Frontend.OnSetFrontendVisibilityMode
	// void OnSetFrontendVisibilityMode(EFrontendVisibilityMode InFrontendVisibilityMode);                                      // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaUIStateWidget_Frontend.IsLobbyVisible
	// bool IsLobbyVisible();                                                                                                   // [0x917a074] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.AthenaUIStateWidget_Frontend.IsFrontendFree
	// bool IsFrontendFree();                                                                                                   // [0x91799a4] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.AthenaUIStateWidget_Frontend.HideDebugFlowText
	// void HideDebugFlowText();                                                                                                // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaUIStateWidget_Frontend.HandleToggleFullscreenMap
	// void HandleToggleFullscreenMap(bool bFullscreenMapVisible);                                                              // [0x91798a4] Final|Native|Private 
	// Function /Script/FortniteUI.AthenaUIStateWidget_Frontend.DisplayDebugFlowText
	// void DisplayDebugFlowText(FText& DebugFlowText);                                                                         // [0x1d9241c] Event|Protected|HasOutParms|BlueprintEvent 
};

/// Class /Script/FortniteUI.FortAthenaVehicleDashboardWidget
/// Size: 0x01D0 (0x000328 - 0x0004F8)
class UFortAthenaVehicleDashboardWidget : public UFortHUDElementWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1272;

public:
	DMember(bool)                                      bIsWidgetShowing                                            OFFSET(get<bool>, {0x474, 1, 0, 0})
	DMember(bool)                                      bDisplayedIsDisabled                                        OFFSET(get<bool>, {0x475, 1, 0, 0})
	CMember(AFortAthenaVehicle*)                       CurrentVehicleActor                                         OFFSET(get<T>, {0x478, 8, 0, 0})
	DMember(float)                                     CurrentSpeed                                                OFFSET(get<float>, {0x480, 4, 0, 0})
	DMember(float)                                     TargetFuelPercent                                           OFFSET(get<float>, {0x484, 4, 0, 0})
	DMember(float)                                     DisplayedFuelPercent                                        OFFSET(get<float>, {0x488, 4, 0, 0})
	DMember(float)                                     FillBlendSpeed                                              OFFSET(get<float>, {0x48C, 4, 0, 0})
	DMember(float)                                     SpeedTextMaxInterpolationRate                               OFFSET(get<float>, {0x490, 4, 0, 0})
	SMember(FGameplayTagContainer)                     WidgetTagsToHideWhenVisible                                 OFFSET(getStruct<T>, {0x498, 32, 0, 0})
	DMember(float)                                     HUDTopSpeed                                                 OFFSET(get<float>, {0x4BC, 4, 0, 0})
	CMember(TEnumAsByte<EHorizontalAlignment>)         MobileFuelGaugeHorizontalAlignment                          OFFSET(get<T>, {0x4C0, 1, 0, 0})
	CMember(TEnumAsByte<EVerticalAlignment>)           MobileFuelGaugeVerticalAlignment                            OFFSET(get<T>, {0x4C1, 1, 0, 0})
	SMember(FMargin)                                   MobileFuelGaugePadding                                      OFFSET(getStruct<T>, {0x4C4, 16, 0, 0})
	CMember(UCommonNumericTextBlock*)                  NumericText_Speed                                           OFFSET(get<T>, {0x4D8, 8, 0, 0})
	CMember(UOverlay*)                                 Overlay_Gauge                                               OFFSET(get<T>, {0x4E0, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_ItemName                                               OFFSET(get<T>, {0x4E8, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortAthenaVehicleDashboardWidget.UpdateSpeedometer
	// void UpdateSpeedometer(float NormalizedSpeed, float RawSpeed);                                                           // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortAthenaVehicleDashboardWidget.ShowNoFuelMessage
	// void ShowNoFuelMessage();                                                                                                // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortAthenaVehicleDashboardWidget.SetVehicleUsesRechargableBoost
	// void SetVehicleUsesRechargableBoost(bool bUsesRechargeableBoost);                                                        // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortAthenaVehicleDashboardWidget.SetVehicleHasInfiniteFuel
	// void SetVehicleHasInfiniteFuel(bool bInfiniteFuel);                                                                      // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortAthenaVehicleDashboardWidget.SetupVehicleFuelWidget
	// void SetupVehicleFuelWidget(AActor* NewVehicle, bool bRequestShowWidget);                                                // [0x917d8e4] RequiredAPI|Native|Public 
	// Function /Script/FortniteUI.FortAthenaVehicleDashboardWidget.RemoveWidgetTagsToHideWhenVisible
	// void RemoveWidgetTagsToHideWhenVisible(FGameplayTagContainer TagToRemove);                                               // [0x917bf84] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortAthenaVehicleDashboardWidget.OnWidgetVisibilityChanged
	// void OnWidgetVisibilityChanged(bool bNewVisibility);                                                                     // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortAthenaVehicleDashboardWidget.OnVehicleUpdated
	// void OnVehicleUpdated(AFortAthenaVehicle* NewVehicle);                                                                   // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortAthenaVehicleDashboardWidget.OnUpdateRechargeableBoostPercent
	// void OnUpdateRechargeableBoostPercent(float BoostPercent);                                                               // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortAthenaVehicleDashboardWidget.OnUpdateBoostChargePercent
	// void OnUpdateBoostChargePercent(float BoostPercent);                                                                     // [0x1d9241c] RequiredAPI|Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortAthenaVehicleDashboardWidget.OnRPMChanged
	// void OnRPMChanged(float NormalizedRPM);                                                                                  // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortAthenaVehicleDashboardWidget.OnRechargableBoostFilled
	// void OnRechargableBoostFilled();                                                                                         // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortAthenaVehicleDashboardWidget.OnPlayerFacingNameUpdated
	// void OnPlayerFacingNameUpdated();                                                                                        // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortAthenaVehicleDashboardWidget.OnOutOfFuel
	// void OnOutOfFuel();                                                                                                      // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortAthenaVehicleDashboardWidget.OnLowFuel
	// void OnLowFuel();                                                                                                        // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortAthenaVehicleDashboardWidget.OnFuelValueChanged
	// void OnFuelValueChanged(float FuelPercentage, bool bIsLowOnFuel);                                                        // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortAthenaVehicleDashboardWidget.OnDisabledChanged
	// void OnDisabledChanged(bool bDisabled);                                                                                  // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortAthenaVehicleDashboardWidget.OnBoostStarted
	// void OnBoostStarted();                                                                                                   // [0x1d9241c] RequiredAPI|Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortAthenaVehicleDashboardWidget.OnBoostFinished
	// void OnBoostFinished();                                                                                                  // [0x1d9241c] RequiredAPI|Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortAthenaVehicleDashboardWidget.OnBoostChargeFilled
	// void OnBoostChargeFilled();                                                                                              // [0x1d9241c] RequiredAPI|Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortAthenaVehicleDashboardWidget.OnAddedFuel
	// void OnAddedFuel(float NewFuelPercent);                                                                                  // [0x917ae00] Final|Native|Public  
	// Function /Script/FortniteUI.FortAthenaVehicleDashboardWidget.HandleBoostStarted
	// void HandleBoostStarted();                                                                                               // [0x9179704] Final|RequiredAPI|Native|Protected 
	// Function /Script/FortniteUI.FortAthenaVehicleDashboardWidget.HandleBoostFinished
	// void HandleBoostFinished();                                                                                              // [0x91796f0] Final|RequiredAPI|Native|Protected 
	// Function /Script/FortniteUI.FortAthenaVehicleDashboardWidget.GetVehicle
	// AFortAthenaVehicle* GetVehicle();                                                                                        // [0x8cd4a10] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortAthenaVehicleDashboardWidget.GetHUDTopSpeed
	// float GetHUDTopSpeed();                                                                                                  // [0x2fcdd74] RequiredAPI|Native|Protected|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortAthenaVehicleDashboardWidget.GetCurrentVehicle
	// AFortAthenaVehicle* GetCurrentVehicle();                                                                                 // [0x8cd4a10] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortAthenaVehicleDashboardWidget.BP_HandleExtensionWidgetCreated
	// void BP_HandleExtensionWidgetCreated(UUserWidget* Widget, EUIExtensionSlot SlotType);                                    // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortAthenaVehicleDashboardWidget.AddWidgetTagsToHideWhenVisible
	// void AddWidgetTagsToHideWhenVisible(FGameplayTagContainer TagToAdd);                                                     // [0x91792e0] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/FortniteUI.FortAthenaVehicleDashboardWidget_Ferret
/// Size: 0x0000 (0x0004F8 - 0x0004F8)
class UFortAthenaVehicleDashboardWidget_Ferret : public UFortAthenaVehicleDashboardWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1272;

public:
};

/// Class /Script/FortniteUI.OstrichAlertWidgetBase
/// Size: 0x0010 (0x000328 - 0x000338)
class UOstrichAlertWidgetBase : public UFortHUDElementWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 824;

public:
	CMember(AFortCharacterVehicle_Ostrich*)            OwningOstrichVehicle                                        OFFSET(get<T>, {0x330, 8, 0, 0})
};

/// Class /Script/FortniteUI.OstrichAlertWidgetDriver
/// Size: 0x0000 (0x000338 - 0x000338)
class UOstrichAlertWidgetDriver : public UOstrichAlertWidgetBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 824;

public:
};

/// Class /Script/FortniteUI.OstrichAlertWidgetGunner
/// Size: 0x0000 (0x000338 - 0x000338)
class UOstrichAlertWidgetGunner : public UOstrichAlertWidgetBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 824;

public:
};

/// Class /Script/FortniteUI.OstrichFinaleWidget
/// Size: 0x0038 (0x0002C0 - 0x0002F8)
class UOstrichFinaleWidget : public UUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 760;

public:
	DMember(float)                                     DestructDisplayUpdateFrequency                              OFFSET(get<float>, {0x2C8, 4, 0, 0})
	DMember(float)                                     FinishBroadcastOffset                                       OFFSET(get<float>, {0x2CC, 4, 0, 0})
	CMember(AFortCharacterVehicle_Ostrich*)            OwningVehicle                                               OFFSET(get<T>, {0x2D0, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.OstrichFinaleWidget.OnUpdateSelfDestruct
	// void OnUpdateSelfDestruct(float RemainingTime);                                                                          // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.OstrichFinaleWidget.OnStartSelfDestructPrime
	// void OnStartSelfDestructPrime(float Duration);                                                                           // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.OstrichFinaleWidget.OnSetupComplete
	// void OnSetupComplete();                                                                                                  // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.OstrichFinaleWidget.OnSelfDestructStart
	// void OnSelfDestructStart(float WarningDuration);                                                                         // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.OstrichFinaleWidget.OnSelfDestructFinish
	// void OnSelfDestructFinish();                                                                                             // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.OstrichFinaleWidget.OnCancelSelfDestructPrime
	// void OnCancelSelfDestructPrime();                                                                                        // [0x1d9241c] Event|Protected|BlueprintEvent 
};

/// Class /Script/FortniteUI.OstrichReticleDecorator
/// Size: 0x0028 (0x000328 - 0x000350)
class UOstrichReticleDecorator : public UFortHUDElementWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 848;

public:
	DMember(float)                                     RocketCooldownUpdateFrequency                               OFFSET(get<float>, {0x330, 4, 0, 0})
	CMember(AFortCharacterVehicle_Ostrich*)            OwningOstrichVehicle                                        OFFSET(get<T>, {0x338, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.OstrichReticleDecorator.ShotgunReload
	// void ShotgunReload(float Duration);                                                                                      // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.OstrichReticleDecorator.RocketsFired
	// void RocketsFired();                                                                                                     // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.OstrichReticleDecorator.RocketLoaded
	// void RocketLoaded(float Percent, int32_t Total);                                                                         // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.OstrichReticleDecorator.RocketCooldown
	// void RocketCooldown(float Percent);                                                                                      // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.OstrichReticleDecorator.OnSetupComplete
	// void OnSetupComplete();                                                                                                  // [0x1d9241c] Event|Protected|BlueprintEvent 
};

/// Class /Script/FortniteUI.FortPlayerViewModel
/// Size: 0x0160 (0x000028 - 0x000188)
class UFortPlayerViewModel : public UObject
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 392;

public:
};

/// Class /Script/FortniteUI.AthenaPlayerViewModel
/// Size: 0x00F8 (0x000188 - 0x000280)
class UAthenaPlayerViewModel : public UFortPlayerViewModel
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 640;

public:
};

/// Class /Script/FortniteUI.AthenaLocalPlayerViewModel
/// Size: 0x0020 (0x000280 - 0x0002A0)
class UAthenaLocalPlayerViewModel : public UAthenaPlayerViewModel
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 672;

public:
	CMember(TWeakObjectPtr<AFortPlayerControllerAthena*>) PlayerController                                         OFFSET(get<T>, {0x280, 8, 0, 0})
	CMember(UAthenaIndicatorPlayersCache*)             IndicatorCache                                              OFFSET(get<T>, {0x288, 8, 0, 0})
	CMember(TArray<TWeakObjectPtr>)                    ListeningForPawnStates                                      OFFSET(get<T>, {0x290, 16, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.AthenaLocalPlayerViewModel.HandleViewTargetPlayerStateReplicated
	// void HandleViewTargetPlayerStateReplicated(AFortPlayerPawn* Pawn);                                                       // [0x9179924] Final|Native|Private 
	// Function /Script/FortniteUI.AthenaLocalPlayerViewModel.HandleLocalPlayerChangedTeams
	// void HandleLocalPlayerChangedTeams();                                                                                    // [0x917985c] Final|Native|Private 
};

/// Class /Script/FortniteUI.AthenaRemotePlayerViewModel
/// Size: 0x0028 (0x000280 - 0x0002A8)
class UAthenaRemotePlayerViewModel : public UAthenaPlayerViewModel
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 680;

public:
	CMember(AFortPlayerControllerSpectating*)          PlayerController                                            OFFSET(get<T>, {0x280, 8, 0, 0})
	CMember(TArray<AFortPlayerStateAthena*>)           SquadList                                                   OFFSET(get<T>, {0x288, 16, 0, 0})
	CMember(TArray<AFortPlayerStateAthena*>)           NameIndicatedPlayers                                        OFFSET(get<T>, {0x298, 16, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.AthenaRemotePlayerViewModel.OnFollowedPlayerChanged
	// void OnFollowedPlayerChanged(AFortPlayerControllerSpectating* SpectatorPC, AFortPlayerState* NewFollowedPlayer);         // [0x24f4cd8] Final|Native|Protected 
	// Function /Script/FortniteUI.AthenaRemotePlayerViewModel.HandleActorDestroyed
	// void HandleActorDestroyed(AActor* DestroyedActor);                                                                       // [0x9179630] Final|Native|Protected 
};

/// Class /Script/FortniteUI.BacchusPluginContentWidget
/// Size: 0x0018 (0x000370 - 0x000388)
class UBacchusPluginContentWidget : public UBacchusHUDElement
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 904;

public:
	SMember(FName)                                     PluginContentTagName                                        OFFSET(getStruct<T>, {0x370, 4, 0, 0})
	CMember(UOverlay*)                                 MyOverlay                                                   OFFSET(get<T>, {0x378, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.BacchusPluginContentWidget.OnPluginHUDWidgetRemoved
	// void OnPluginHUDWidgetRemoved(FGameplayTag WidgetTag);                                                                   // [0x917b9f4] Final|Native|Private 
	// Function /Script/FortniteUI.BacchusPluginContentWidget.OnPluginHUDWidgetAdded
	// void OnPluginHUDWidgetAdded(FGameplayTag WidgetTag, TWeakObjectPtr<UClass*> SoftWidgetClass);                            // [0x917b70c] Final|Native|Private 
};

/// Class /Script/FortniteUI.FortButtonBehaviorComponentOverride
/// Size: 0x0050 (0x000028 - 0x000078)
class UFortButtonBehaviorComponentOverride : public UObject
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 120;

public:
	CMember(UClass*)                                   TargetComponentToFilter                                     OFFSET(get<T>, {0x28, 8, 0, 0})
	SMember(FTagFilterOverride)                        TagFilterOverride                                           OFFSET(getStruct<T>, {0x30, 72, 0, 0})
};

/// Class /Script/FortniteUI.FortButtonBehaviorComponentOverrideVisibility_Ability
/// Size: 0x0000 (0x000078 - 0x000078)
class UFortButtonBehaviorComponentOverrideVisibility_Ability : public UFortButtonBehaviorComponentOverride
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 120;

public:
};

/// Class /Script/FortniteUI.FortButtonBehaviorComponentOverrideVisibility_BlockedAbility
/// Size: 0x0000 (0x000078 - 0x000078)
class UFortButtonBehaviorComponentOverrideVisibility_BlockedAbility : public UFortButtonBehaviorComponentOverride
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 120;

public:
};

/// Class /Script/FortniteUI.FortButtonBehaviorComponentOverrideVisibility_Compound
/// Size: 0x0090 (0x000078 - 0x000108)
class UFortButtonBehaviorComponentOverrideVisibility_Compound : public UFortButtonBehaviorComponentOverride
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 264;

public:
	SMember(FGameplayTagQuery)                         HUDWeaponTagQuery                                           OFFSET(getStruct<T>, {0x78, 72, 0, 0})
	SMember(FGameplayTagQuery)                         HUDAbilityTagQuery                                          OFFSET(getStruct<T>, {0xC0, 72, 0, 0})
};

/// Class /Script/FortniteUI.FortButtonBehaviorComponentOverrideVisibility_HeldObject
/// Size: 0x0000 (0x000078 - 0x000078)
class UFortButtonBehaviorComponentOverrideVisibility_HeldObject : public UFortButtonBehaviorComponentOverride
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 120;

public:
};

/// Class /Script/FortniteUI.FortButtonBehaviorComponentOverrideVisibility_Interaction
/// Size: 0x0008 (0x000078 - 0x000080)
class UFortButtonBehaviorComponentOverrideVisibility_Interaction : public UFortButtonBehaviorComponentOverride
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 128;

public:
	CMember(UFortControllerComponent_Interaction*)     InteractionComponent                                        OFFSET(get<T>, {0x78, 8, 0, 0})
};

/// Class /Script/FortniteUI.FortButtonBehaviorComponentOverrideVisibility_Player
/// Size: 0x0000 (0x000078 - 0x000078)
class UFortButtonBehaviorComponentOverrideVisibility_Player : public UFortButtonBehaviorComponentOverride
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 120;

public:
};

/// Class /Script/FortniteUI.FortButtonBehaviorComponentOverrideVisibility_Playlist
/// Size: 0x0000 (0x000078 - 0x000078)
class UFortButtonBehaviorComponentOverrideVisibility_Playlist : public UFortButtonBehaviorComponentOverride
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 120;

public:
};

/// Class /Script/FortniteUI.FortButtonBehaviorComponentOverrideVisibility_Weapon
/// Size: 0x0000 (0x000078 - 0x000078)
class UFortButtonBehaviorComponentOverrideVisibility_Weapon : public UFortButtonBehaviorComponentOverride
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 120;

public:
};

/// Class /Script/FortniteUI.HUDWidgetBehavior
/// Size: 0x0088 (0x000028 - 0x0000B0)
class UHUDWidgetBehavior : public UObject
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 176;

public:
	SMember(FText)                                     HUDLayoutToolName                                           OFFSET(getStruct<T>, {0x28, 24, 0, 0})
	CMember(TArray<UFortMobileHudWidgetContentComponent*>) HudWidgetContentComponents                              OFFSET(get<T>, {0x40, 16, 0, 0})
	CMember(TMap<FGameplayTag, FString>)               CustomPropertyDefaultOverrides                              OFFSET(get<T>, {0x50, 80, 0, 0})
	CMember(TArray<UFortMobileHUDWidgetBehaviorExtension*>) BehaviorExtensions                                     OFFSET(get<T>, {0xA0, 16, 0, 0})
};

/// Class /Script/FortniteUI.FortMobileActionButtonBehavior
/// Size: 0x0070 (0x0000B0 - 0x000120)
class UFortMobileActionButtonBehavior : public UHUDWidgetBehavior
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 288;

public:
	CMember(TArray<FName>)                             ActionNames                                                 OFFSET(get<T>, {0xB0, 16, 0, 0})
	CMember(TArray<FMobileEnhancedInputData>)          InputActionsData                                            OFFSET(get<T>, {0xC0, 16, 0, 0})
	CMember(UPaperSprite*)                             Sprite                                                      OFFSET(get<T>, {0xD0, 8, 0, 0})
	SMember(FGameplayTag)                              HUDLayoutToolSaveTag_Legacy                                 OFFSET(getStruct<T>, {0xD8, 4, 0, 0})
	CMember(TArray<UFortMobileButtonBehaviorComponent*>) ButtonBehaviorComponents                                  OFFSET(get<T>, {0xF0, 16, 0, 0})
	CMember(TArray<UFortButtonBehaviorComponentOverride*>) ButtonBehaviorComponentOverrides                        OFFSET(get<T>, {0x100, 16, 0, 0})
	DMember(int32_t)                                   ForcedZOrder                                                OFFSET(get<int32_t>, {0x110, 4, 0, 0})
};

/// Class /Script/FortniteUI.FortMobileHUDWidgetBehaviorExtension
/// Size: 0x0018 (0x000028 - 0x000040)
class UFortMobileHUDWidgetBehaviorExtension : public UObject
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 64;

public:
	CMember(TArray<UFortMobileHudWidgetContentComponent*>) HudWidgetContentComponents                              OFFSET(get<T>, {0x28, 16, 0, 0})
	CMember(UHUDWidgetBehavior*)                       OwnerWidgetBehavior                                         OFFSET(get<T>, {0x38, 8, 0, 0})
};

/// Class /Script/FortniteUI.FortMobileActionButtonBehaviorExtension
/// Size: 0x0040 (0x000040 - 0x000080)
class UFortMobileActionButtonBehaviorExtension : public UFortMobileHUDWidgetBehaviorExtension
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 128;

public:
	CMember(TArray<FName>)                             ActionNames                                                 OFFSET(get<T>, {0x40, 16, 0, 0})
	CMember(TArray<FMobileEnhancedInputData>)          InputActionsData                                            OFFSET(get<T>, {0x50, 16, 0, 0})
	CMember(TArray<UFortMobileButtonBehaviorComponent*>) ButtonBehaviorComponents                                  OFFSET(get<T>, {0x60, 16, 0, 0})
	CMember(TArray<UFortButtonBehaviorComponentOverride*>) ButtonBehaviorComponentOverrides                        OFFSET(get<T>, {0x70, 16, 0, 0})
};

/// Class /Script/FortniteUI.FortMobileActionButtonBehavior_AlternateUse
/// Size: 0x0020 (0x000120 - 0x000140)
class UFortMobileActionButtonBehavior_AlternateUse : public UFortMobileActionButtonBehavior
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 320;

public:
	CMember(UPaperSprite*)                             DBNOHoistSprite                                             OFFSET(get<T>, {0x120, 8, 0, 0})
	CMember(UPaperSprite*)                             DBNOPlaceSprite                                             OFFSET(get<T>, {0x128, 8, 0, 0})
	CMember(UPaperSprite*)                             HeldObjectPlaceSprite                                       OFFSET(get<T>, {0x130, 8, 0, 0})
	CMember(UPaperSprite*)                             CraftSprite                                                 OFFSET(get<T>, {0x138, 8, 0, 0})
};

/// Class /Script/FortniteUI.FortMobileActionButtonBehavior_CreativeFlightSpeed
/// Size: 0x0008 (0x000120 - 0x000128)
class UFortMobileActionButtonBehavior_CreativeFlightSpeed : public UFortMobileActionButtonBehavior
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 296;

public:
	SMember(FGameplayTag)                              TrackedSpeedTag                                             OFFSET(getStruct<T>, {0x120, 4, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortMobileActionButtonBehavior_CreativeFlightSpeed.HandleCreativeFlightSpeedIndexChanged
	// void HandleCreativeFlightSpeedIndexChanged(int32_t Index, bool bPlayFX);                                                 // [0x9179718] Final|Native|Private 
};

/// Class /Script/FortniteUI.FortMobileActionButtonBehavior_CreativeGhostMode
/// Size: 0x0008 (0x000120 - 0x000128)
class UFortMobileActionButtonBehavior_CreativeGhostMode : public UFortMobileActionButtonBehavior
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 296;

public:
	CMember(UPaperSprite*)                             GhostModeOffSprite                                          OFFSET(get<T>, {0x120, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortMobileActionButtonBehavior_CreativeGhostMode.HandleCreativeGhostModeEnabledChanged
	// void HandleCreativeGhostModeEnabledChanged(bool bEnabled);                                                               // [0x91a500c] Final|Native|Private 
};

/// Class /Script/FortniteUI.FortMobileActionButtonBehavior_CreativeGlobalOptions
/// Size: 0x0008 (0x000120 - 0x000128)
class UFortMobileActionButtonBehavior_CreativeGlobalOptions : public UFortMobileActionButtonBehavior
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 296;

public:
	DMember(bool)                                      bCreativeQuickMenuDisplayed                                 OFFSET(get<bool>, {0x120, 1, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortMobileActionButtonBehavior_CreativeGlobalOptions.HandleCreativeQuickMenuDisplayedChanged
	// void HandleCreativeQuickMenuDisplayedChanged(bool bIsDisplayed);                                                         // [0x91a510c] Final|Native|Private 
};

/// Class /Script/FortniteUI.FortMobileActionButtonBehavior_CreativePhone
/// Size: 0x0000 (0x000120 - 0x000120)
class UFortMobileActionButtonBehavior_CreativePhone : public UFortMobileActionButtonBehavior
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 288;

public:
};

/// Class /Script/FortniteUI.FortMobileActionButtonBehavior_CreativePropLockInPlace
/// Size: 0x0008 (0x000120 - 0x000128)
class UFortMobileActionButtonBehavior_CreativePropLockInPlace : public UFortMobileActionButtonBehavior
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 296;

public:
	CMember(UPaperSprite*)                             LockedSprite                                                OFFSET(get<T>, {0x120, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortMobileActionButtonBehavior_CreativePropLockInPlace.HandlePropLockedInPlaceChanged
	// void HandlePropLockedInPlaceChanged(bool bPropLockedInPlace);                                                            // [0x91a500c] Final|Native|Private 
};

/// Class /Script/FortniteUI.FortMobileActionButtonBehavior_CreativeRotationAxis
/// Size: 0x0018 (0x000120 - 0x000138)
class UFortMobileActionButtonBehavior_CreativeRotationAxis : public UFortMobileActionButtonBehavior
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 312;

public:
	CMember(UPaperSprite*)                             RotateXAxisSprite                                           OFFSET(get<T>, {0x120, 8, 0, 0})
	CMember(UPaperSprite*)                             RotateYAxisSprite                                           OFFSET(get<T>, {0x128, 8, 0, 0})
	CMember(UPaperSprite*)                             RotateZAxisSprite                                           OFFSET(get<T>, {0x130, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortMobileActionButtonBehavior_CreativeRotationAxis.HandleWeaponEquipped
	// void HandleWeaponEquipped(AFortWeapon* NewWeapon, AFortWeapon* PreviousWeapon);                                          // [0x91a56ec] Final|Native|Private 
	// Function /Script/FortniteUI.FortMobileActionButtonBehavior_CreativeRotationAxis.HandleMoveToolRotationAxisChanged
	// void HandleMoveToolRotationAxisChanged(char AxisIndex);                                                                  // [0x91a518c] Final|Native|Private 
};

/// Class /Script/FortniteUI.FortMobileActionButtonBehavior_CreativeRotationReset
/// Size: 0x0020 (0x000120 - 0x000140)
class UFortMobileActionButtonBehavior_CreativeRotationReset : public UFortMobileActionButtonBehavior
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 320;

public:
};

/// Class /Script/FortniteUI.FortMobileActionButtonBehavior_CreativeScaleAxis
/// Size: 0x0020 (0x000120 - 0x000140)
class UFortMobileActionButtonBehavior_CreativeScaleAxis : public UFortMobileActionButtonBehavior
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 320;

public:
	CMember(UPaperSprite*)                             GrowSprite                                                  OFFSET(get<T>, {0x120, 8, 0, 0})
	CMember(UPaperSprite*)                             WidthResizeSprite                                           OFFSET(get<T>, {0x128, 8, 0, 0})
	CMember(UPaperSprite*)                             HeightResizeSprite                                          OFFSET(get<T>, {0x130, 8, 0, 0})
	CMember(UPaperSprite*)                             DepthResizeSprite                                           OFFSET(get<T>, {0x138, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortMobileActionButtonBehavior_CreativeScaleAxis.HandleWeaponEquipped
	// void HandleWeaponEquipped(AFortWeapon* NewWeapon, AFortWeapon* PreviousWeapon);                                          // [0x91a5874] Final|Native|Private 
	// Function /Script/FortniteUI.FortMobileActionButtonBehavior_CreativeScaleAxis.HandleMoveToolScaleAxisChanged
	// void HandleMoveToolScaleAxisChanged(EScaleAxis Axis);                                                                    // [0x91a5374] Final|Native|Private 
};

/// Class /Script/FortniteUI.FortMobileActionButtonBehavior_CreativeScaleReset
/// Size: 0x0018 (0x000120 - 0x000138)
class UFortMobileActionButtonBehavior_CreativeScaleReset : public UFortMobileActionButtonBehavior
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 312;

public:
};

/// Class /Script/FortniteUI.FortMobileActionButtonBehavior_CreativeToggleGravity
/// Size: 0x0008 (0x000120 - 0x000128)
class UFortMobileActionButtonBehavior_CreativeToggleGravity : public UFortMobileActionButtonBehavior
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 296;

public:
	CMember(UPaperSprite*)                             GravityOffSprite                                            OFFSET(get<T>, {0x120, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortMobileActionButtonBehavior_CreativeToggleGravity.HandleWeaponEquipped
	// void HandleWeaponEquipped(AFortWeapon* NewWeapon, AFortWeapon* PreviousWeapon);                                          // [0x91a59fc] Final|Native|Private 
	// Function /Script/FortniteUI.FortMobileActionButtonBehavior_CreativeToggleGravity.HandleOnDropToFloorChanged
	// void HandleOnDropToFloorChanged(bool bDropToFloor);                                                                      // [0x91a500c] Final|Native|Private 
};

/// Class /Script/FortniteUI.FortMobileActionButtonBehavior_Jump
/// Size: 0x0030 (0x000120 - 0x000150)
class UFortMobileActionButtonBehavior_Jump : public UFortMobileActionButtonBehavior
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 336;

public:
	CMember(UPaperSprite*)                             ThrowSprite                                                 OFFSET(get<T>, {0x120, 8, 0, 0})
	CMember(UAbilitySystemComponent*)                  AbilitySystemComponent                                      OFFSET(get<T>, {0x128, 8, 0, 0})
	SMember(FGameplayTagContainer)                     PawnTagsCollapse                                            OFFSET(getStruct<T>, {0x130, 32, 0, 0})
};

/// Class /Script/FortniteUI.FortMobileActionButtonBehavior_OctopusToggleGrapple
/// Size: 0x0008 (0x000120 - 0x000128)
class UFortMobileActionButtonBehavior_OctopusToggleGrapple : public UFortMobileActionButtonBehavior
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 296;

public:
	CMember(UPaperSprite*)                             GrappleStopSprite                                           OFFSET(get<T>, {0x120, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortMobileActionButtonBehavior_OctopusToggleGrapple.HandleTowhookShot
	// void HandleTowhookShot();                                                                                                // [0x91a56d8] Final|Native|Private 
	// Function /Script/FortniteUI.FortMobileActionButtonBehavior_OctopusToggleGrapple.HandleTowhookHolstered
	// void HandleTowhookHolstered();                                                                                           // [0x91a56d8] Final|Native|Private 
	// Function /Script/FortniteUI.FortMobileActionButtonBehavior_OctopusToggleGrapple.HandleTowhookDetached
	// void HandleTowhookDetached();                                                                                            // [0x91a56d8] Final|Native|Private 
	// Function /Script/FortniteUI.FortMobileActionButtonBehavior_OctopusToggleGrapple.HandleTowhookAttached
	// void HandleTowhookAttached();                                                                                            // [0x91a56d8] Final|Native|Private 
};

/// Class /Script/FortniteUI.FortMobileActionButtonBehavior_PushToTalk
/// Size: 0x0008 (0x000120 - 0x000128)
class UFortMobileActionButtonBehavior_PushToTalk : public UFortMobileActionButtonBehavior
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 296;

public:
	CMember(UPaperSprite*)                             VoiceActiveSprite                                           OFFSET(get<T>, {0x120, 8, 0, 0})
};

/// Class /Script/FortniteUI.FortMobileActionButtonBehavior_QuickHeal
/// Size: 0x0008 (0x000120 - 0x000128)
class UFortMobileActionButtonBehavior_QuickHeal : public UFortMobileActionButtonBehavior
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 296;

public:
};

/// Class /Script/FortniteUI.FortMobileActionButtonBehavior_SecondaryAbility
/// Size: 0x0000 (0x000120 - 0x000120)
class UFortMobileActionButtonBehavior_SecondaryAbility : public UFortMobileActionButtonBehavior
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 288;

public:
};

/// Class /Script/FortniteUI.FortMobileActionButtonBehavior_Shoot
/// Size: 0x0048 (0x000120 - 0x000168)
class UFortMobileActionButtonBehavior_Shoot : public UFortMobileActionButtonBehavior
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 360;

public:
	CMember(UPaperSprite*)                             PlaceItemSprite                                             OFFSET(get<T>, {0x120, 8, 0, 0})
	CMember(UPaperSprite*)                             ThrowSprite                                                 OFFSET(get<T>, {0x128, 8, 0, 0})
	CMember(UPaperSprite*)                             PickaxeSprite                                               OFFSET(get<T>, {0x130, 8, 0, 0})
	SMember(FGameplayTagContainer)                     DefaultIconOverrideItems                                    OFFSET(getStruct<T>, {0x138, 32, 0, 0})
	CMember(TArray<FIconPicker>)                       PawnSpriteOverrides                                         OFFSET(get<T>, {0x158, 16, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortMobileActionButtonBehavior_Shoot.OnVehicleChanged
	// void OnVehicleChanged();                                                                                                 // [0x5ae6a10] Final|Native|Private 
};

/// Class /Script/FortniteUI.FortMobileActionButtonBehavior_Use
/// Size: 0x00D0 (0x000120 - 0x0001F0)
class UFortMobileActionButtonBehavior_Use : public UFortMobileActionButtonBehavior
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 496;

public:
	CMember(UPaperSprite*)                             InterrogateSprite                                           OFFSET(get<T>, {0x120, 8, 0, 0})
	CMember(UPaperSprite*)                             CancelSprite                                                OFFSET(get<T>, {0x128, 8, 0, 0})
	CMember(UPaperSprite*)                             PickUpSprite                                                OFFSET(get<T>, {0x130, 8, 0, 0})
	SMember(FGameplayTag)                              CreativeMatchmakingPortalComparisonTag                      OFFSET(getStruct<T>, {0x138, 4, 0, 0})
	CMember(TArray<FIconPicker>)                       PawnSpriteOverrides                                         OFFSET(get<T>, {0x140, 16, 0, 0})
	SMember(FGameplayTagQuery)                         ReceiverTagQueryRequiringVisibilityOverride                 OFFSET(getStruct<T>, {0x150, 72, 0, 0})
	SMember(FGameplayTagQuery)                         InstigatorTagQueryRequiringVisibilityOverride               OFFSET(getStruct<T>, {0x198, 72, 0, 0})
	CMember(TArray<FName>)                             OverrideActionNames                                         OFFSET(get<T>, {0x1E0, 16, 0, 0})
};

/// Class /Script/FortniteUI.FortMobileActionButtonBehavior_Zoom
/// Size: 0x0030 (0x000120 - 0x000150)
class UFortMobileActionButtonBehavior_Zoom : public UFortMobileActionButtonBehavior
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 336;

public:
	CMember(TArray<FIconPicker>)                       PawnSpriteOverrides                                         OFFSET(get<T>, {0x120, 16, 0, 0})
	SMember(FGameplayTagContainer)                     WeaponGameplayTagsToDisplay                                 OFFSET(getStruct<T>, {0x130, 32, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortMobileActionButtonBehavior_Zoom.HandleWeaponEquipped
	// void HandleWeaponEquipped(AFortWeapon* NewWeapon, AFortWeapon* PreviousWeapon);                                          // [0x91a5b88] Final|Native|Private 
};

/// Class /Script/FortniteUI.FortMobileButtonBehaviorComponent_TagIconPicker
/// Size: 0x0010 (0x000048 - 0x000058)
class UFortMobileButtonBehaviorComponent_TagIconPicker : public UFortMobileButtonBehaviorComponent_IconPicker
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 88;

public:
	CMember(TArray<FIconPicker>)                       SpriteOverrides                                             OFFSET(get<T>, {0x48, 16, 0, 0})
};

/// Class /Script/FortniteUI.FortMobileButtonBehaviorComponent_AbilityIconPicker
/// Size: 0x0008 (0x000058 - 0x000060)
class UFortMobileButtonBehaviorComponent_AbilityIconPicker : public UFortMobileButtonBehaviorComponent_TagIconPicker
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 96;

public:
	CMember(UAbilitySystemComponent*)                  AbilitySystemComponent                                      OFFSET(get<T>, {0x58, 8, 0, 0})
};

/// Class /Script/FortniteUI.FortMobileButtonBehaviorComponent_TagVisibility
/// Size: 0x0010 (0x000048 - 0x000058)
class UFortMobileButtonBehaviorComponent_TagVisibility : public UFortMobileButtonBehaviorComponent_Visibility
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 88;

public:
	CMember(TArray<FTagVisibility>)                    TagVisibilities                                             OFFSET(get<T>, {0x48, 16, 0, 0})
};

/// Class /Script/FortniteUI.FortMobileButtonBehaviorComponent_AbilityTagVisibility
/// Size: 0x0008 (0x000058 - 0x000060)
class UFortMobileButtonBehaviorComponent_AbilityTagVisibility : public UFortMobileButtonBehaviorComponent_TagVisibility
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 96;

public:
	CMember(UAbilitySystemComponent*)                  AbilitySystemComponent                                      OFFSET(get<T>, {0x58, 8, 0, 0})
};

/// Class /Script/FortniteUI.FortMobileButtonBehaviorComponent_ActionBindingIconPicker
/// Size: 0x0010 (0x000048 - 0x000058)
class UFortMobileButtonBehaviorComponent_ActionBindingIconPicker : public UFortMobileButtonBehaviorComponent_IconPicker
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 88;

public:
	CMember(TArray<FActionBindingIconPicker>)          ActionBindingSpriteOverrides                                OFFSET(get<T>, {0x48, 16, 0, 0})
};

/// Class /Script/FortniteUI.FortMobileButtonBehaviorComponent_ActionBindingVisibility
/// Size: 0x0010 (0x000048 - 0x000058)
class UFortMobileButtonBehaviorComponent_ActionBindingVisibility : public UFortMobileButtonBehaviorComponent_Visibility
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 88;

public:
	CMember(TArray<FActionBindingVisibility>)          ActionBindingVisibilites                                    OFFSET(get<T>, {0x48, 16, 0, 0})
};

/// Class /Script/FortniteUI.FortMobileButtonBehaviorComponent_BlockedAbilityTagVisibility
/// Size: 0x0008 (0x000058 - 0x000060)
class UFortMobileButtonBehaviorComponent_BlockedAbilityTagVisibility : public UFortMobileButtonBehaviorComponent_TagVisibility
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 96;

public:
	CMember(UFortAbilitySystemComponent*)              AbilitySystemComponent                                      OFFSET(get<T>, {0x58, 8, 0, 0})
};

/// Class /Script/FortniteUI.FortMobileButtonBehaviorComponent_ContextIconPicker
/// Size: 0x0008 (0x000058 - 0x000060)
class UFortMobileButtonBehaviorComponent_ContextIconPicker : public UFortMobileButtonBehaviorComponent_TagIconPicker
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 96;

public:
	CMember(UFortControllerComponent_InputContextTracker*) ContextTracker                                          OFFSET(get<T>, {0x58, 8, 0, 0})
};

/// Class /Script/FortniteUI.FortMobileButtonBehaviorComponent_ContextTagVisibility
/// Size: 0x0008 (0x000058 - 0x000060)
class UFortMobileButtonBehaviorComponent_ContextTagVisibility : public UFortMobileButtonBehaviorComponent_TagVisibility
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 96;

public:
	CMember(UFortControllerComponent_InputContextTracker*) ContextTracker                                          OFFSET(get<T>, {0x58, 8, 0, 0})
};

/// Class /Script/FortniteUI.FortMobileButtonBehaviorComponent_GameplayMessageTagVisibility
/// Size: 0x0028 (0x000048 - 0x000070)
class UFortMobileButtonBehaviorComponent_GameplayMessageTagVisibility : public UFortMobileButtonBehaviorComponent_Visibility
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 112;

public:
	CMember(TArray<FGameplayMessageVisibility>)        GameplayMessageVisibilities                                 OFFSET(get<T>, {0x48, 16, 0, 0})
};

/// Class /Script/FortniteUI.FortMobileButtonBehaviorComponent_HeldObjectTagVisibility
/// Size: 0x0008 (0x000058 - 0x000060)
class UFortMobileButtonBehaviorComponent_HeldObjectTagVisibility : public UFortMobileButtonBehaviorComponent_TagVisibility
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 96;

public:
	CMember(UAbilitySystemComponent*)                  AbilityComponent                                            OFFSET(get<T>, {0x58, 8, 0, 0})
};

/// Class /Script/FortniteUI.FortMobileButtonBehaviorComponent_HUDVisibilityIconPicker
/// Size: 0x0000 (0x000058 - 0x000058)
class UFortMobileButtonBehaviorComponent_HUDVisibilityIconPicker : public UFortMobileButtonBehaviorComponent_TagIconPicker
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 88;

public:
};

/// Class /Script/FortniteUI.FortMobileButtonBehaviorComponent_InteractionIconPicker
/// Size: 0x0008 (0x000058 - 0x000060)
class UFortMobileButtonBehaviorComponent_InteractionIconPicker : public UFortMobileButtonBehaviorComponent_TagIconPicker
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 96;

public:
	CMember(UFortControllerComponent_Interaction*)     InteractionComponent                                        OFFSET(get<T>, {0x58, 8, 0, 0})
};

/// Class /Script/FortniteUI.FortMobileButtonBehaviorComponent_InteractionTagVisibility
/// Size: 0x0008 (0x000058 - 0x000060)
class UFortMobileButtonBehaviorComponent_InteractionTagVisibility : public UFortMobileButtonBehaviorComponent_TagVisibility
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 96;

public:
	CMember(UFortControllerComponent_Interaction*)     InteractionComponent                                        OFFSET(get<T>, {0x58, 8, 0, 0})
};

/// Class /Script/FortniteUI.FortMobileButtonBehaviorComponent_PlayerTagIconPicker
/// Size: 0x0000 (0x000058 - 0x000058)
class UFortMobileButtonBehaviorComponent_PlayerTagIconPicker : public UFortMobileButtonBehaviorComponent_TagIconPicker
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 88;

public:
};

/// Class /Script/FortniteUI.FortMobileButtonBehaviorComponent_PlayerTagVisibility
/// Size: 0x0000 (0x000058 - 0x000058)
class UFortMobileButtonBehaviorComponent_PlayerTagVisibility : public UFortMobileButtonBehaviorComponent_TagVisibility
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 88;

public:
};

/// Class /Script/FortniteUI.FortMobileButtonBehaviorComponent_PlaylistTagVisibility
/// Size: 0x0000 (0x000058 - 0x000058)
class UFortMobileButtonBehaviorComponent_PlaylistTagVisibility : public UFortMobileButtonBehaviorComponent_TagVisibility
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 88;

public:
};

/// Class /Script/FortniteUI.FortMobileButtonBehaviorComponent_QuickhealPriorityExtension
/// Size: 0x0010 (0x000048 - 0x000058)
class UFortMobileButtonBehaviorComponent_QuickhealPriorityExtension : public UFortMobileButtonBehaviorComponent
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 88;

public:
	CMember(TArray<FQuickHealPriorityExtension>)       QuickhealExtensions                                         OFFSET(get<T>, {0x48, 16, 0, 0})
};

/// Class /Script/FortniteUI.FortMobileButtonBehaviorComponent_RegistryFlagVisibility
/// Size: 0x0038 (0x000048 - 0x000080)
class UFortMobileButtonBehaviorComponent_RegistryFlagVisibility : public UFortMobileButtonBehaviorComponent_Visibility
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 128;

public:
	DMember(float)                                     LevelToTest                                                 OFFSET(get<float>, {0x50, 4, 0, 0})
	SMember(FScalableFloat)                            RegistryToTest                                              OFFSET(getStruct<T>, {0x58, 40, 0, 0})
};

/// Class /Script/FortniteUI.FortMobileButtonBehaviorComponent_WeaponIconPicker
/// Size: 0x0000 (0x000058 - 0x000058)
class UFortMobileButtonBehaviorComponent_WeaponIconPicker : public UFortMobileButtonBehaviorComponent_TagIconPicker
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 88;

public:
};

/// Class /Script/FortniteUI.FortMobileButtonBehaviorComponent_WeaponTagVisibility
/// Size: 0x0000 (0x000058 - 0x000058)
class UFortMobileButtonBehaviorComponent_WeaponTagVisibility : public UFortMobileButtonBehaviorComponent_TagVisibility
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 88;

public:
};

/// Class /Script/FortniteUI.FortMobileHudWidgetContentComponent
/// Size: 0x0008 (0x000028 - 0x000030)
class UFortMobileHudWidgetContentComponent : public UObject
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 48;

public:
	CMember(UHUDWidgetBehavior*)                       WidgetBehavior                                              OFFSET(get<T>, {0x28, 8, 0, 0})
};

/// Class /Script/FortniteUI.FortMobileHudWidgetContentComponent_Active
/// Size: 0x0038 (0x000030 - 0x000068)
class UFortMobileHudWidgetContentComponent_Active : public UFortMobileHudWidgetContentComponent
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 104;

public:
	CMember(TWeakObjectPtr<UClass*>)                   ToggleSoftClass                                             OFFSET(get<T>, {0x30, 32, 0, 0})
	CMember(TArray<UFortMobileHudWidgetContentComponent_Active_Visibility*>) VisibilityModifiers                   OFFSET(get<T>, {0x50, 16, 0, 0})
	CMember(UUserWidget*)                              CurrentToggleWidget                                         OFFSET(get<T>, {0x60, 8, 0, 0})
};

/// Class /Script/FortniteUI.FortMobileHudWidgetContentComponent_Highlight
/// Size: 0x0030 (0x000030 - 0x000060)
class UFortMobileHudWidgetContentComponent_Highlight : public UFortMobileHudWidgetContentComponent
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 96;

public:
	SMember(FGameplayTag)                              HighlightTag                                                OFFSET(getStruct<T>, {0x30, 4, 0, 0})
	CMember(TWeakObjectPtr<UClass*>)                   HighlightWidgetSoftClass                                    OFFSET(get<T>, {0x38, 32, 0, 0})
	CMember(UUserWidget*)                              CurrentHighlight                                            OFFSET(get<T>, {0x58, 8, 0, 0})
};

/// Class /Script/FortniteUI.FortMobileHudWidgetContentComponent_RadialCooldown
/// Size: 0x0030 (0x000030 - 0x000060)
class UFortMobileHudWidgetContentComponent_RadialCooldown : public UFortMobileHudWidgetContentComponent
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 96;

public:
	CMember(TWeakObjectPtr<UClass*>)                   RadialCooldownSoftClass                                     OFFSET(get<T>, {0x30, 32, 0, 0})
	SMember(FGameplayTag)                              GameplayTagToListen                                         OFFSET(getStruct<T>, {0x50, 4, 0, 0})
	CMember(URadialBacchusButtonBase*)                 CurrentRadialCooldownWidget                                 OFFSET(get<T>, {0x58, 8, 0, 0})
};

/// Class /Script/FortniteUI.FortMobileHUDWidgetContentComponent_RadialIndicator
/// Size: 0x0030 (0x000030 - 0x000060)
class UFortMobileHUDWidgetContentComponent_RadialIndicator : public UFortMobileHudWidgetContentComponent
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 96;

public:
	CMember(TWeakObjectPtr<UClass*>)                   RadialIndicatorSoftClass                                    OFFSET(get<T>, {0x30, 32, 0, 0})
	SMember(FGameplayTag)                              TrackedGameplayCueTag                                       OFFSET(getStruct<T>, {0x50, 4, 0, 0})
	CMember(UBacchusRadialDisplayBase*)                CurrentRadialIndicatorWidget                                OFFSET(get<T>, {0x58, 8, 0, 0})
};

/// Class /Script/FortniteUI.FortMobileKeyButtonBehavior
/// Size: 0x0020 (0x0000B0 - 0x0000D0)
class UFortMobileKeyButtonBehavior : public UHUDWidgetBehavior
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 208;

public:
	SMember(FKey)                                      Key                                                         OFFSET(getStruct<T>, {0xB0, 24, 0, 0})
	CMember(TWeakObjectPtr<UFortMobileKeyButton*>)     Button                                                      OFFSET(get<T>, {0xC8, 8, 0, 0})
};

/// Class /Script/FortniteUI.FortAutorunLockZone
/// Size: 0x0028 (0x0002E8 - 0x000310)
class UFortAutorunLockZone : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 784;

public:
	DMember(bool)                                      bIsMoveStickAutorun                                         OFFSET(get<bool>, {0x2E8, 1, 0, 0})
	DMember(bool)                                      bIsInZone                                                   OFFSET(get<bool>, {0x2E9, 1, 0, 0})
	DMember(bool)                                      bIsAutorunLockEnabled                                       OFFSET(get<bool>, {0x2EA, 1, 0, 0})
	CMember(UCommonVisibilitySwitcher*)                Switcher_ImprovedAutorunLockZone                            OFFSET(get<T>, {0x2F0, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortAutorunLockZone.OnReleasedInZone
	// void OnReleasedInZone();                                                                                                 // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.FortAutorunLockZone.OnIsInZoneChanged
	// void OnIsInZoneChanged(bool bNewIsInZone);                                                                               // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.FortAutorunLockZone.OnDisplayAutorunLockZone
	// void OnDisplayAutorunLockZone(bool bIsShown);                                                                            // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.FortAutorunLockZone.BroadcastReleaseAnimationFinished
	// void BroadcastReleaseAnimationFinished();                                                                                // [0x902b3c0] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/FortniteUI.FortBacchusControlsDiagram
/// Size: 0x0048 (0x0002C0 - 0x000308)
class UFortBacchusControlsDiagram : public UUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 776;

public:
	SMember(FGameplayTag)                              NoBuildGameModeTag                                          OFFSET(getStruct<T>, {0x2C0, 4, 0, 0})
	DMember(bool)                                      bShowTitleBackground                                        OFFSET(get<bool>, {0x2C4, 1, 0, 0})
	CMember(UCommonVisibilitySwitcher*)                Switcher_BackgroundText                                     OFFSET(get<T>, {0x2C8, 8, 0, 0})
	CMember(UWidget*)                                  ScaleBox_TextCombatControls                                 OFFSET(get<T>, {0x2D0, 8, 0, 0})
	CMember(UWidget*)                                  ScaleBox_TextBuildingControls                               OFFSET(get<T>, {0x2D8, 8, 0, 0})
	CMember(UCommonVisibilitySwitcher*)                Switcher_Modes                                              OFFSET(get<T>, {0x2E0, 8, 0, 0})
	CMember(UWidget*)                                  ScaleBox_CombatTapAnywhere                                  OFFSET(get<T>, {0x2E8, 8, 0, 0})
	CMember(UWidget*)                                  ScaleBox_CombatFireButton                                   OFFSET(get<T>, {0x2F0, 8, 0, 0})
	CMember(UCommonVisibilitySwitcher*)                Switcher_CombatModes                                        OFFSET(get<T>, {0x2F8, 8, 0, 0})
	CMember(UWidget*)                                  ScaleBox_BuildingMode                                       OFFSET(get<T>, {0x300, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortBacchusControlsDiagram.ToggleDisplayedControlMode
	// void ToggleDisplayedControlMode(bool bShouldDisplayCombatControls);                                                      // [0x91a5f88] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.FortBacchusControlsDiagram.HandlePlaylistLoaded
	// void HandlePlaylistLoaded(FName PlaylistName, FGameplayTagContainer& PlaylistContextTags);                               // [0x91a555c] Final|Native|Private|HasOutParms 
	// Function /Script/FortniteUI.FortBacchusControlsDiagram.GetIsDisplayingCombatMode
	// bool GetIsDisplayingCombatMode();                                                                                        // [0x91a4fd4] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/FortniteUI.FortBacchusControlsHelp
/// Size: 0x0028 (0x000400 - 0x000428)
class UFortBacchusControlsHelp : public UCommonActivatableWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1064;

public:
	CMember(UFortBacchusControlsDiagram*)              ControlsDiagram                                             OFFSET(get<T>, {0x400, 8, 0, 0})
	CMember(UCommonButtonBase*)                        Button_TouchClose                                           OFFSET(get<T>, {0x408, 8, 0, 0})
	SMember(FDataTableRowHandle)                       CloseAction                                                 OFFSET(getStruct<T>, {0x410, 16, 0, 0})
};

/// Class /Script/FortniteUI.FortInWorldTouchInteractionLayer
/// Size: 0x0068 (0x0002E8 - 0x000350)
class UFortInWorldTouchInteractionLayer : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 848;

public:
	CMember(UWidgetInteractionComponent*)              WidgetInteractor                                            OFFSET(get<T>, {0x2E8, 8, 0, 0})
};

/// Class /Script/FortniteUI.FortMobileActionButton
/// Size: 0x00B8 (0x000350 - 0x000408)
class UFortMobileActionButton : public UFortMobileHUDElement
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1032;

public:
	CMember(UFortMobileActionButtonBehavior*)          ButtonBehavior                                              OFFSET(get<T>, {0x360, 8, 0, 0})
	SMember(FGameplayTag)                              IconSizePropertyTag                                         OFFSET(getStruct<T>, {0x390, 4, 0, 0})
	SMember(FGameplayTag)                              ClickthroughPropertyTag                                     OFFSET(getStruct<T>, {0x394, 4, 0, 0})
	SMember(FLinearColor)                              PressedColor                                                OFFSET(getStruct<T>, {0x398, 16, 0, 0})
	SMember(FLinearColor)                              ReleasedColor                                               OFFSET(getStruct<T>, {0x3A8, 16, 0, 0})
	SMember(FLinearColor)                              DisabledColor                                               OFFSET(getStruct<T>, {0x3B8, 16, 0, 0})
	CMember(TArray<FInputActionKeyMapping>)            InputActionKeyMappings                                      OFFSET(get<T>, {0x3C8, 16, 0, 0})
	CMember(USizeBox*)                                 SizeBox_HitboxSize                                          OFFSET(get<T>, {0x3E0, 8, 0, 0})
	CMember(USizeBox*)                                 SizeBox_VisualSize                                          OFFSET(get<T>, {0x3E8, 8, 0, 0})
	CMember(UOverlay*)                                 Overlay_ButtonContents                                      OFFSET(get<T>, {0x3F0, 8, 0, 0})
	CMember(UImage*)                                   Image_Background                                            OFFSET(get<T>, {0x3F8, 8, 0, 0})
	CMember(UImage*)                                   Image_Icon                                                  OFFSET(get<T>, {0x400, 8, 0, 0})
};

/// Class /Script/FortniteUI.FortLookStickV2
/// Size: 0x0000 (0x000408 - 0x000408)
class UFortLookStickV2 : public UFortMobileActionButton
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1032;

public:
};

/// Class /Script/FortniteUI.FortMobileActionButtonInterface
/// Size: 0x0000 (0x000028 - 0x000028)
class UFortMobileActionButtonInterface : public UInterface
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 40;

public:
};

/// Class /Script/FortniteUI.FortMobileCustomizableHUD
/// Size: 0x0058 (0x0002E8 - 0x000340)
class UFortMobileCustomizableHUD : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 832;

public:
	CMember(UFortMobileHUDWidgetRegistry*)             BaseHUDWidgetRegistry                                       OFFSET(get<T>, {0x2E8, 8, 0, 0})
	CMember(UFortMobileHUDWidgetRegistry*)             HUDWidgetRegistry                                           OFFSET(get<T>, {0x2F0, 8, 0, 0})
	SMember(FFortMobileHUDLayoutProfile)               LayoutProfile                                               OFFSET(getStruct<T>, {0x2F8, 64, 0, 0})
	CMember(UFortMobileHUDLayer*)                      HUDLayer_HUDWidgets                                         OFFSET(get<T>, {0x338, 8, 0, 0})
};

/// Class /Script/FortniteUI.FortMobileHUDLayer
/// Size: 0x00B8 (0x000190 - 0x000248)
class UFortMobileHUDLayer : public UPanelWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 584;

public:
	CMember(TArray<UFortMobileHUDElement*>)            ActiveHUDWidgets                                            OFFSET(get<T>, {0x1C8, 16, 0, 0})
	CMember(TArray<UFortMobileHUDElement*>)            InactiveHUDWidgets                                          OFFSET(get<T>, {0x1D8, 16, 0, 0})
};

/// Class /Script/FortniteUI.FortMobileHUDWidgetCustomPropertyModel_Anchors
/// Size: 0x0000 (0x000060 - 0x000060)
class UFortMobileHUDWidgetCustomPropertyModel_Anchors : public UFortMobileHUDWidgetCustomPropertyModel
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 96;

public:
};

/// Class /Script/FortniteUI.FortMobileHUDWidgetCustomPropertyModel_Number
/// Size: 0x0008 (0x000060 - 0x000068)
class UFortMobileHUDWidgetCustomPropertyModel_Number : public UFortMobileHUDWidgetCustomPropertyModel
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 104;

public:
	DMember(int32_t)                                   DefaultValue                                                OFFSET(get<int32_t>, {0x60, 4, 0, 0})
};

/// Class /Script/FortniteUI.FortSettingRegistry
/// Size: 0x00D0 (0x000028 - 0x0000F8)
class UFortSettingRegistry : public UObject
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 248;

public:
	CMember(TArray<UFortSetting*>)                     TopLevelSettings                                            OFFSET(get<T>, {0xA0, 16, 0, 0})
	CMember(TArray<UFortSetting*>)                     RegisteredSettings                                          OFFSET(get<T>, {0xB0, 16, 0, 0})
	CMember(UFortLocalPlayer*)                         OwningLocalPlayer                                           OFFSET(get<T>, {0xC0, 8, 0, 0})
};

/// Class /Script/FortniteUI.FortMobileHUDWidgetCustomPropertySettingRegistry
/// Size: 0x0000 (0x0000F8 - 0x0000F8)
class UFortMobileHUDWidgetCustomPropertySettingRegistry : public UFortSettingRegistry
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 248;

public:
};

/// Class /Script/FortniteUI.FortMobileHUDWidgetRegistry
/// Size: 0x0068 (0x000030 - 0x000098)
class UFortMobileHUDWidgetRegistry : public UFortMobileHUDWidgetRegistryBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 152;

public:
	CMember(TArray<FHUDWidgetBehaviorRegistryEntry>)   HUDWidgetBehaviorRegistry                                   OFFSET(get<T>, {0x30, 16, 0, 0})
	CMember(TArray<FHUDWidgetRegistryEntry>)           HUDWidgetRegistry                                           OFFSET(get<T>, {0x40, 16, 0, 0})
	CMember(TArray<UFortMobileHUDContextModel*>)       ContextLayoutModels                                         OFFSET(get<T>, {0x50, 16, 0, 0})
	CMember(TArray<FFortMobileHUDContextModelExtension>) ContextLayoutModelExtensions                              OFFSET(get<T>, {0x60, 16, 0, 0})
	CMember(TArray<FHUDWidgetBehaviorExtensionsRegistryEntry>) HUDWidgetBehaviorExtensions                         OFFSET(get<T>, {0x70, 16, 0, 0})
	CMember(TArray<FHUDWidgetException>)               HUDWidgetExceptions                                         OFFSET(get<T>, {0x80, 16, 0, 0})
	DMember(bool)                                      bIsRegistryUsedInHUDLayoutTool                              OFFSET(get<bool>, {0x90, 1, 0, 0})
};

/// Class /Script/FortniteUI.FortMobileKeyButton
/// Size: 0x0040 (0x000350 - 0x000390)
class UFortMobileKeyButton : public UFortMobileHUDElement
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 912;

public:
	CMember(UFortKeybindWidget*)                       KeybindWidget                                               OFFSET(get<T>, {0x358, 8, 0, 0})
	CMember(UFortMobileKeyButtonBehavior*)             Behavior                                                    OFFSET(get<T>, {0x360, 8, 0, 0})
};

/// Class /Script/FortniteUI.FortSettingValueDiscreteDynamic_Number
/// Size: 0x0000 (0x0001E8 - 0x0001E8)
class UFortSettingValueDiscreteDynamic_Number : public UFortSettingValueDiscreteDynamic
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 488;

public:
};

/// Class /Script/FortniteUI.FortSettingValueDiscreteDynamic_QuickbarLocks
/// Size: 0x0008 (0x0001E8 - 0x0001F0)
class UFortSettingValueDiscreteDynamic_QuickbarLocks : public UFortSettingValueDiscreteDynamic_Number
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 496;

public:
};

/// Class /Script/FortniteUI.FortTouchInteractionButton
/// Size: 0x0120 (0x0002E8 - 0x000408)
class UFortTouchInteractionButton : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1032;

public:
	SMember(FName)                                     MIDParam_Icon                                               OFFSET(getStruct<T>, {0x2E8, 4, 0, 0})
	SMember(FName)                                     MIDParam_IconScale                                          OFFSET(getStruct<T>, {0x2EC, 4, 0, 0})
	SMember(FName)                                     MIDParam_Tint                                               OFFSET(getStruct<T>, {0x2F0, 4, 0, 0})
	SMember(FName)                                     MIDParam_Duration                                           OFFSET(getStruct<T>, {0x2F4, 4, 0, 0})
	SMember(FName)                                     MIDParam_StartTime                                          OFFSET(getStruct<T>, {0x2F8, 4, 0, 0})
	SMember(FName)                                     MIDParam_TimerOpacity                                       OFFSET(getStruct<T>, {0x2FC, 4, 0, 0})
	DMember(bool)                                      bInteractionFocused                                         OFFSET(get<bool>, {0x300, 1, 0, 0})
	CMember(UWidgetAnimation*)                         Anim_RadialProgress                                         OFFSET(get<T>, {0x308, 8, 0, 0})
	CMember(TWeakObjectPtr<UTexture2D*>)               PendingIcon                                                 OFFSET(get<T>, {0x338, 32, 0, 0})
	CMember(TWeakObjectPtr<UTexture2D*>)               DefaultIcon                                                 OFFSET(get<T>, {0x358, 32, 0, 0})
	CMember(TMap<TWeakObjectPtr, FTouchInteractionIconOverride>) IconOverrides                                     OFFSET(get<T>, {0x378, 80, 0, 0})
	CMember(UFortMarkerDetailsTable*)                  DetailsTable                                                OFFSET(get<T>, {0x3C8, 8, 0, 0})
	DMember(float)                                     DefaultIconScale                                            OFFSET(get<float>, {0x3D0, 4, 0, 0})
	DMember(float)                                     PickupIconScale                                             OFFSET(get<float>, {0x3D4, 4, 0, 0})
	CMember(UImage*)                                   Image_Icon                                                  OFFSET(get<T>, {0x3D8, 8, 0, 0})
	CMember(AActor*)                                   TrackedActor                                                OFFSET(get<T>, {0x3E0, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortTouchInteractionButton.OnInteractionFocusChanged
	// void OnInteractionFocusChanged(bool bNewFocused);                                                                        // [0x1d9241c] Event|Public|BlueprintEvent 
};

/// Class /Script/FortniteUI.FortTouchInteractionLayer
/// Size: 0x00C8 (0x0002E8 - 0x0003B0)
class UFortTouchInteractionLayer : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 944;

public:
	CMember(UClass*)                                   WidgetClass                                                 OFFSET(get<T>, {0x2E8, 8, 0, 0})
	SMember(FUserWidgetPool)                           WidgetPool                                                  OFFSET(getStruct<T>, {0x2F0, 136, 0, 0})
	CMember(UCanvasPanel*)                             ContentPanel                                                OFFSET(get<T>, {0x378, 8, 0, 0})
	CMember(TArray<FButtonInteractionPair>)            InteractableButtonMap                                       OFFSET(get<T>, {0x380, 16, 0, 0})
	CMember(AActor*)                                   FocusedInteraction                                          OFFSET(get<T>, {0x390, 8, 0, 0})
	CMember(AFortPlayerController*)                    OwningPC                                                    OFFSET(get<T>, {0x398, 8, 0, 0})
	CMember(UFortControllerComponent_Interaction*)     InteractionComponent                                        OFFSET(get<T>, {0x3A0, 8, 0, 0})
	CMember(UFortActorComponent_MultiInteract*)        MultiInteractComponent                                      OFFSET(get<T>, {0x3A8, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortTouchInteractionLayer.UpdateInteractingButtonTimer
	// void UpdateInteractingButtonTimer(float TotalDuration, float Remaining, float InteractingMultiplier);                    // [0x91a6180] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.FortTouchInteractionLayer.UpdateButtonTimer
	// void UpdateButtonTimer(AActor* In, float TotalDuration, float Remaining);                                                // [0x91a6088] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.FortTouchInteractionLayer.UpdateButtonFocusForInteraction
	// void UpdateButtonFocusForInteraction(UFortInteractContextInfo* NewInteraction);                                          // [0x91a6008] Final|Native|Protected 
	// Function /Script/FortniteUI.FortTouchInteractionLayer.RemoveInteraction
	// void RemoveInteraction(AActor* In);                                                                                      // [0x91a5f08] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.FortTouchInteractionLayer.RefreshVisuals
	// void RefreshVisuals(int32_t InteractingActorCount, float InteractingMultiplier, float InteractDuration);                 // [0x91a5dd0] Final|Native|Protected 
	// Function /Script/FortniteUI.FortTouchInteractionLayer.AddInteraction
	// void AddInteraction(AActor* In);                                                                                         // [0x91a4d48] Final|Native|Protected|BlueprintCallable 
};

/// Class /Script/FortniteUI.FortMobileHUDLayoutToolV2
/// Size: 0x05B0 (0x000538 - 0x000AE8)
class UFortMobileHUDLayoutToolV2 : public UCommonActivatablePanelLegacy
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 2792;

public:
	DMember(float)                                     OverlapPercentageToColapsePanels                            OFFSET(get<float>, {0x540, 4, 0, 0})
	DMember(float)                                     NonEditableHUDWidgetOpacity                                 OFFSET(get<float>, {0x544, 4, 0, 0})
	DMember(float)                                     PanelOpacityWhenDragedOver                                  OFFSET(get<float>, {0x548, 4, 0, 0})
	DMember(float)                                     OnOpenSubPanelAnimPlaybackSpeed                             OFFSET(get<float>, {0x54C, 4, 0, 0})
	SMember(FPrimaryContentSetup)                      PrimaryContentSetup                                         OFFSET(getStruct<T>, {0x550, 3, 0, 0})
	CMember(UFortMobileHUDWidgetRegistry*)             HUDWidgetRegistry                                           OFFSET(get<T>, {0x558, 8, 0, 0})
	CMember(UClass*)                                   HudLayoutToolPopupClass                                     OFFSET(get<T>, {0x560, 8, 0, 0})
	CMember(UClass*)                                   HudLayoutToolTutorialPopupClass                             OFFSET(get<T>, {0x568, 8, 0, 0})
	SMember(FHUDLayoutToolV2_PopupContent)             ExitHudLayoutToolPopupContent                               OFFSET(getStruct<T>, {0x570, 104, 0, 0})
	SMember(FHUDLayoutToolV2_PopupContent)             DeleteOutOfBoundsHUDProxiesPopupContent                     OFFSET(getStruct<T>, {0x5D8, 104, 0, 0})
	SMember(FHUDLayoutToolV2_PopupContent)             RevertAllProxiesPopupContent                                OFFSET(getStruct<T>, {0x640, 104, 0, 0})
	SMember(FHUDLayoutToolV2_PopupContent)             SwitchHUDProfileSavePopupContent                            OFFSET(getStruct<T>, {0x6A8, 104, 0, 0})
	SMember(FHUDLayoutToolV2_PopupContent)             SwitchHUDProfileDeletePopupContent                          OFFSET(getStruct<T>, {0x710, 104, 0, 0})
	SMember(FHUDLayoutToolV2_PopupContent)             CreateNewCustomLayoutPopupContent                           OFFSET(getStruct<T>, {0x778, 104, 0, 0})
	SMember(FHUDLayoutToolV2_PopupContent)             CustomLayoutSlotsFullPopupContent                           OFFSET(getStruct<T>, {0x7E0, 104, 0, 0})
	SMember(FHUDLayoutToolV2_ToastNotificationContent) SuccessToasterContent                                       OFFSET(getStruct<T>, {0x848, 56, 0, 0})
	SMember(FHUDLayoutToolV2_ToastNotificationContent) FailureToasterContent                                       OFFSET(getStruct<T>, {0x880, 56, 0, 0})
	SMember(FHUDLayoutToolV2_ToastNotificationContent) LocalFailureToasterContent                                  OFFSET(getStruct<T>, {0x8B8, 56, 0, 0})
	SMember(FHUDLayoutToolV2_ToastNotificationContent) CloudFailureToasterContent                                  OFFSET(getStruct<T>, {0x8F0, 56, 0, 0})
	SMember(FGameplayTag)                              AnchorsCustomPropertyTag                                    OFFSET(getStruct<T>, {0x928, 4, 0, 0})
	DMember(float)                                     DoubleClickDelay                                            OFFSET(get<float>, {0x92C, 4, 0, 0})
	SMember(FFortMobileHUDLayoutProfile)               LayoutProfile                                               OFFSET(getStruct<T>, {0x930, 64, 0, 0})
	SMember(FFortMobileHUDLayoutProfile)               CachedSavedLayoutProfile                                    OFFSET(getStruct<T>, {0x970, 64, 0, 0})
	CMember(UFortMobileHUDElementProxy*)               SelectedWidgetProxy                                         OFFSET(get<T>, {0x9B0, 8, 0, 0})
	CMember(TArray<UHUDLayoutToolV2_Popup*>)           QueuedPopups                                                OFFSET(get<T>, {0x9B8, 16, 0, 0})
	CMember(UHUDLayoutToolV2_VirtualCanvas*)           VirtualCanvas_WidgetLayer                                   OFFSET(get<T>, {0xA40, 8, 0, 0})
	CMember(UFortMobileHUDLayer*)                      HUDLayer_HUDWidgetProxies                                   OFFSET(get<T>, {0xA48, 8, 0, 0})
	CMember(UOverlay*)                                 Overlay_VirtualCanvasWorkspace                              OFFSET(get<T>, {0xA50, 8, 0, 0})
	CMember(UHUDLayoutToolV2_Grid*)                    Grid_Visual                                                 OFFSET(get<T>, {0xA58, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_ProfileName                                            OFFSET(get<T>, {0xA60, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_WidgetName                                             OFFSET(get<T>, {0xA68, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_ContextName                                            OFFSET(get<T>, {0xA70, 8, 0, 0})
	CMember(UHUDLayoutToolV2_Button*)                  Button_Exit                                                 OFFSET(get<T>, {0xA78, 8, 0, 0})
	CMember(UHUDLayoutToolV2_Button*)                  Button_ResetVirtualCanvas                                   OFFSET(get<T>, {0xA80, 8, 0, 0})
	CMember(UHUDLayoutToolV2_Button*)                  Button_ToggleControlPanel                                   OFFSET(get<T>, {0xA88, 8, 0, 0})
	CMember(UHUDLayoutToolV2_Button*)                  Button_ToggleWidgetCatalog                                  OFFSET(get<T>, {0xA90, 8, 0, 0})
	CMember(UCanvasPanel*)                             CanvasPanel_ControlsContainer                               OFFSET(get<T>, {0xA98, 8, 0, 0})
	CMember(UVerticalBox*)                             VerticalBox_ControlPanelContainer                           OFFSET(get<T>, {0xAA0, 8, 0, 0})
	CMember(UFortMobileHUDLayoutToolV2_ControlPanel*)  ControlPanel_Controls                                       OFFSET(get<T>, {0xAA8, 8, 0, 0})
	CMember(UHUDLayoutToolV2_ProfileSelectionPanel*)   ProfileSelectionPanel_Profiles                              OFFSET(get<T>, {0xAB0, 8, 0, 0})
	CMember(UFortMobileHUDLayoutToolV2_WidgetCatalog*) WidgetCatalog_Catalog                                       OFFSET(get<T>, {0xAB8, 8, 0, 0})
	CMember(UHUDLayoutToolV2_LinkAcrossPanel*)         LinkAcrossPanel_LinkManagementWindow                        OFFSET(get<T>, {0xAC0, 8, 0, 0})
	CMember(UWidgetAnimation*)                         Anim_ControlPanelToggle                                     OFFSET(get<T>, {0xAC8, 8, 0, 0})
	CMember(UWidgetAnimation*)                         Anim_ToggleWidgetCatalog                                    OFFSET(get<T>, {0xAD0, 8, 0, 0})
	CMember(UHUDLayoutToolV2_Toaster*)                 Toaster_Notifications                                       OFFSET(get<T>, {0xAD8, 8, 0, 0})
	CMember(UHUDLayoutToolV2_TooltipLayer*)            TooltipLayer_Messages                                       OFFSET(get<T>, {0xAE0, 8, 0, 0})
};

/// Class /Script/FortniteUI.FortMobileHUDLayoutToolV2_ControlPanel
/// Size: 0x00E0 (0x0002E8 - 0x0003C8)
class UFortMobileHUDLayoutToolV2_ControlPanel : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 968;

public:
	DMember(float)                                     PanelOpacityWhenDragedOver                                  OFFSET(get<float>, {0x2E8, 4, 0, 0})
	CMember(UHUDLayoutToolV2_Button*)                  Button_Save                                                 OFFSET(get<T>, {0x378, 8, 0, 0})
	CMember(UHUDLayoutToolV2_Button*)                  Button_RevertAll                                            OFFSET(get<T>, {0x380, 8, 0, 0})
	CMember(UHUDLayoutToolV2_Button*)                  Button_Exit                                                 OFFSET(get<T>, {0x388, 8, 0, 0})
	CMember(UHUDLayoutToolV2_Button*)                  Button_OpenProfileSelectionPanel                            OFFSET(get<T>, {0x390, 8, 0, 0})
	CMember(UHUDLayoutToolV2_Button*)                  Button_SwitchContexts                                       OFFSET(get<T>, {0x398, 8, 0, 0})
	CMember(UHUDLayoutToolV2_Button*)                  Button_SwitchProperties                                     OFFSET(get<T>, {0x3A0, 8, 0, 0})
	CMember(UHUDLayoutToolV2_GridSnap*)                GridSnapOption_Controls                                     OFFSET(get<T>, {0x3A8, 8, 0, 0})
	CMember(UCommonActivatableWidgetSwitcher*)         Switcher_Controls                                           OFFSET(get<T>, {0x3B0, 8, 0, 0})
	CMember(UHUDLayoutToolV2_ContextSelector*)         ContextSelector_ContextLayouts                              OFFSET(get<T>, {0x3B8, 8, 0, 0})
	CMember(UHUDLayoutToolV2_PropertyPanel*)           PropertyPanel_WidgetProperties                              OFFSET(get<T>, {0x3C0, 8, 0, 0})
};

/// Class /Script/FortniteUI.FortMobileHUDLayoutToolV2_WidgetCatalog
/// Size: 0x0090 (0x0002E8 - 0x000378)
class UFortMobileHUDLayoutToolV2_WidgetCatalog : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 888;

public:
	CMember(UFortMobileHUDWidgetRegistry*)             HUDWidgetRegistry                                           OFFSET(get<T>, {0x2E8, 8, 0, 0})
	DMember(float)                                     PanelOpacityWhenDragedOver                                  OFFSET(get<float>, {0x2F0, 4, 0, 0})
	CMember(UImage*)                                   Image_LayoutIcon                                            OFFSET(get<T>, {0x340, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_ContextName                                            OFFSET(get<T>, {0x348, 8, 0, 0})
	CMember(UHUDLayoutToolV2_Button*)                  Button_DisplayButtonPreviews                                OFFSET(get<T>, {0x350, 8, 0, 0})
	CMember(UHUDLayoutToolV2_Button*)                  Button_DisplayWidgetPreviews                                OFFSET(get<T>, {0x358, 8, 0, 0})
	CMember(UCommonActivatableWidgetSwitcher*)         Switcher_Previews                                           OFFSET(get<T>, {0x360, 8, 0, 0})
	CMember(UFortDynamicEntryBox*)                     EntryBox_ButtonPreviews                                     OFFSET(get<T>, {0x368, 8, 0, 0})
	CMember(UFortDynamicEntryBox*)                     EntryBox_WidgetPreviews                                     OFFSET(get<T>, {0x370, 8, 0, 0})
};

/// Class /Script/FortniteUI.FortSettingsListEntryBase
/// Size: 0x0038 (0x0002E8 - 0x000320)
class UFortSettingsListEntryBase : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 800;

public:
	CMember(UFortSetting*)                             Setting                                                     OFFSET(get<T>, {0x2F8, 8, 0, 0})
	CMember(UUserWidget*)                              Background                                                  OFFSET(get<T>, {0x318, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortSettingsListEntryBase.OnEditableStateChanged
	// void OnEditableStateChanged(bool bIsEditable);                                                                           // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortSettingsListEntryBase.GetPrimaryGamepadFocusWidget
	// UWidget* GetPrimaryGamepadFocusWidget();                                                                                 // [0x1d9241c] Event|Protected|BlueprintEvent 
};

/// Class /Script/FortniteUI.FortSettingsListEntry_Setting
/// Size: 0x0008 (0x000320 - 0x000328)
class UFortSettingsListEntry_Setting : public UFortSettingsListEntryBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 808;

public:
	CMember(UCommonTextBlock*)                         Text_SettingName                                            OFFSET(get<T>, {0x320, 8, 0, 0})
};

/// Class /Script/FortniteUI.HUDLayoutToolV2SettingsListEntry_Anchors
/// Size: 0x0050 (0x000328 - 0x000378)
class UHUDLayoutToolV2SettingsListEntry_Anchors : public UFortSettingsListEntry_Setting
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 888;

public:
	CMember(UFortSettingValueDiscreteDynamic_Anchors*) AnchorSetting                                               OFFSET(get<T>, {0x328, 8, 0, 0})
	CMember(UHUDLayoutToolV2_Button*)                  Button_TopLeft                                              OFFSET(get<T>, {0x330, 8, 0, 0})
	CMember(UHUDLayoutToolV2_Button*)                  Button_TopMiddle                                            OFFSET(get<T>, {0x338, 8, 0, 0})
	CMember(UHUDLayoutToolV2_Button*)                  Button_TopRight                                             OFFSET(get<T>, {0x340, 8, 0, 0})
	CMember(UHUDLayoutToolV2_Button*)                  Button_MiddleLeft                                           OFFSET(get<T>, {0x348, 8, 0, 0})
	CMember(UHUDLayoutToolV2_Button*)                  Button_MiddleMiddle                                         OFFSET(get<T>, {0x350, 8, 0, 0})
	CMember(UHUDLayoutToolV2_Button*)                  Button_MiddleRight                                          OFFSET(get<T>, {0x358, 8, 0, 0})
	CMember(UHUDLayoutToolV2_Button*)                  Button_BottomLeft                                           OFFSET(get<T>, {0x360, 8, 0, 0})
	CMember(UHUDLayoutToolV2_Button*)                  Button_BottomMiddle                                         OFFSET(get<T>, {0x368, 8, 0, 0})
	CMember(UHUDLayoutToolV2_Button*)                  Button_BottomRight                                          OFFSET(get<T>, {0x370, 8, 0, 0})
};

/// Class /Script/FortniteUI.HUDLayoutToolV2SettingsListEntry_Bool
/// Size: 0x0020 (0x000328 - 0x000348)
class UHUDLayoutToolV2SettingsListEntry_Bool : public UFortSettingsListEntry_Setting
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 840;

public:
	CMember(UPaperSprite*)                             CheckMarkSprite                                             OFFSET(get<T>, {0x328, 8, 0, 0})
	CMember(UFortSettingValueDiscrete*)                BoolSetting                                                 OFFSET(get<T>, {0x330, 8, 0, 0})
	CMember(UPanelWidget*)                             Panel_Value                                                 OFFSET(get<T>, {0x338, 8, 0, 0})
	CMember(UHUDLayoutToolV2_Button*)                  Button_ToggleBool                                           OFFSET(get<T>, {0x340, 8, 0, 0})
};

/// Class /Script/FortniteUI.HUDLayoutToolV2SettingsListEntry_Discrete
/// Size: 0x0050 (0x000328 - 0x000378)
class UHUDLayoutToolV2SettingsListEntry_Discrete : public UFortSettingsListEntry_Setting
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 888;

public:
	CMember(UFortSettingValueDiscrete*)                DiscreteSetting                                             OFFSET(get<T>, {0x348, 8, 0, 0})
	CMember(UPanelWidget*)                             Panel_Value                                                 OFFSET(get<T>, {0x350, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_PropertyValue                                          OFFSET(get<T>, {0x358, 8, 0, 0})
	CMember(UHUDLayoutToolV2_Button*)                  Button_DecreaseValue                                        OFFSET(get<T>, {0x360, 8, 0, 0})
	CMember(UHUDLayoutToolV2_Button*)                  Button_IncreaseValue                                        OFFSET(get<T>, {0x368, 8, 0, 0})
	CMember(UFortSettingsRotator*)                     Rotator_SettingValue                                        OFFSET(get<T>, {0x370, 8, 0, 0})
};

/// Class /Script/FortniteUI.HUDLayoutToolV2SettingsListEntry_QuickbarLocks
/// Size: 0x0030 (0x000328 - 0x000358)
class UHUDLayoutToolV2SettingsListEntry_QuickbarLocks : public UFortSettingsListEntry_Setting
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 856;

public:
	CMember(UFortSettingValueDiscreteDynamic_QuickbarLocks*) QuickbarLocksSetting                                  OFFSET(get<T>, {0x328, 8, 0, 0})
	SMember(FLinearColor)                              LockEnabledColor                                            OFFSET(getStruct<T>, {0x330, 16, 0, 0})
	SMember(FLinearColor)                              LockDisabledColor                                           OFFSET(getStruct<T>, {0x340, 16, 0, 0})
	CMember(UFortDynamicEntryBox*)                     EntryBox_SlotLocks                                          OFFSET(get<T>, {0x350, 8, 0, 0})
};

/// Class /Script/FortniteUI.FortSettingsListEntrySetting_Scalar
/// Size: 0x0020 (0x000328 - 0x000348)
class UFortSettingsListEntrySetting_Scalar : public UFortSettingsListEntry_Setting
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 840;

public:
	CMember(UFortSettingValueScalar*)                  ScalarSetting                                               OFFSET(get<T>, {0x328, 8, 0, 0})
	CMember(UPanelWidget*)                             Panel_Value                                                 OFFSET(get<T>, {0x330, 8, 0, 0})
	CMember(UAnalogSlider*)                            Slider_SettingValue                                         OFFSET(get<T>, {0x338, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_SettingValue                                           OFFSET(get<T>, {0x340, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortSettingsListEntrySetting_Scalar.OnValueChanged
	// void OnValueChanged(float Value);                                                                                        // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortSettingsListEntrySetting_Scalar.OnDefaultValueChanged
	// void OnDefaultValueChanged(float DefaultValue);                                                                          // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortSettingsListEntrySetting_Scalar.HandleSliderValueChanged
	// void HandleSliderValueChanged(float Value);                                                                              // [0x960df3c] Final|Native|Protected 
	// Function /Script/FortniteUI.FortSettingsListEntrySetting_Scalar.HandleSliderCaptureEnded
	// void HandleSliderCaptureEnded();                                                                                         // [0x2cf4738] Final|Native|Protected 
};

/// Class /Script/FortniteUI.HUDLayoutToolV2SettingsListEntry_Scalar
/// Size: 0x0010 (0x000348 - 0x000358)
class UHUDLayoutToolV2SettingsListEntry_Scalar : public UFortSettingsListEntrySetting_Scalar
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 856;

public:
	CMember(UHUDLayoutToolV2_Button*)                  Button_DecreaseValue                                        OFFSET(get<T>, {0x348, 8, 0, 0})
	CMember(UHUDLayoutToolV2_Button*)                  Button_IncreaseValue                                        OFFSET(get<T>, {0x350, 8, 0, 0})
};

/// Class /Script/FortniteUI.HUDLayoutToolV2_ActionButtonProxy
/// Size: 0x0030 (0x0003D0 - 0x000400)
class UHUDLayoutToolV2_ActionButtonProxy : public UFortMobileHUDElementProxy
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1024;

public:
	SMember(FGameplayTag)                              IconSizePropertyTag                                         OFFSET(getStruct<T>, {0x3D8, 4, 0, 0})
	CMember(USizeBox*)                                 SizeBox_HitboxSize                                          OFFSET(get<T>, {0x3E0, 8, 0, 0})
	CMember(USizeBox*)                                 SizeBox_VisualSize                                          OFFSET(get<T>, {0x3E8, 8, 0, 0})
	CMember(UImage*)                                   Image_Background                                            OFFSET(get<T>, {0x3F0, 8, 0, 0})
	CMember(UImage*)                                   Image_Icon                                                  OFFSET(get<T>, {0x3F8, 8, 0, 0})
};

/// Class /Script/FortniteUI.HUDLayoutToolV2_Button
/// Size: 0x02F8 (0x0002E8 - 0x0005E0)
class UHUDLayoutToolV2_Button : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1504;

public:
	DMember(bool)                                      bIsToggleable                                               OFFSET(get<bool>, {0x2E8, 1, 0, 0})
	DMember(float)                                     ButtonWidthOverride                                         OFFSET(get<float>, {0x2EC, 4, 0, 0})
	DMember(float)                                     ButtonHeightOverride                                        OFFSET(get<float>, {0x2F0, 4, 0, 0})
	SMember(FText)                                     Text                                                        OFFSET(getStruct<T>, {0x2F8, 24, 0, 0})
	SMember(FMargin)                                   TextPadding                                                 OFFSET(getStruct<T>, {0x310, 16, 0, 0})
	DMember(int32_t)                                   TextFontSize                                                OFFSET(get<int32_t>, {0x320, 4, 0, 0})
	SMember(FSlateBrush)                               IconBrush                                                   OFFSET(getStruct<T>, {0x330, 192, 0, 0})
	SMember(FMargin)                                   IconPadding                                                 OFFSET(getStruct<T>, {0x3F0, 16, 0, 0})
	DMember(bool)                                      bMatchIconSize                                              OFFSET(get<bool>, {0x400, 1, 0, 0})
	SMember(FSlateBrush)                               BackgroundBrush                                             OFFSET(getStruct<T>, {0x410, 192, 0, 0})
	SMember(FMargin)                                   InternalPadding                                             OFFSET(getStruct<T>, {0x4D0, 16, 0, 0})
	DMember(bool)                                      bOverride_WidthOverride                                     OFFSET(get<bool>, {0x4E0, 1, 1, 0})
	DMember(bool)                                      bOverride_HeightOverride                                    OFFSET(get<bool>, {0x4E0, 1, 1, 1})
	DMember(bool)                                      bExternallyControlledStates                                 OFFSET(get<bool>, {0x4E1, 1, 0, 0})
	SMember(FHUDLayoutToolV2_ButtonStateColor)         NormalButtonStyle                                           OFFSET(getStruct<T>, {0x4E4, 56, 0, 0})
	SMember(FHUDLayoutToolV2_ButtonStateColor)         PressedButtonStyle                                          OFFSET(getStruct<T>, {0x51C, 56, 0, 0})
	SMember(FHUDLayoutToolV2_ButtonStateColor)         SelectedButtonStyle                                         OFFSET(getStruct<T>, {0x554, 56, 0, 0})
	CMember(USizeBox*)                                 SizeBox_Control                                             OFFSET(get<T>, {0x5B8, 8, 0, 0})
	CMember(UBorder*)                                  Border_Container                                            OFFSET(get<T>, {0x5C0, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_ButtonAction                                           OFFSET(get<T>, {0x5C8, 8, 0, 0})
	CMember(UImage*)                                   Image_Icon                                                  OFFSET(get<T>, {0x5D0, 8, 0, 0})
	CMember(UImage*)                                   Image_Background                                            OFFSET(get<T>, {0x5D8, 8, 0, 0})
};

/// Class /Script/FortniteUI.HUDLayoutToolV2_ButtonPreview
/// Size: 0x0008 (0x000330 - 0x000338)
class UHUDLayoutToolV2_ButtonPreview : public UHUDLayoutToolV2_WidgetPreview
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 824;

public:
	CMember(UImage*)                                   Image_Icon                                                  OFFSET(get<T>, {0x330, 8, 0, 0})
};

/// Class /Script/FortniteUI.HUDLayoutToolV2_ContextButton
/// Size: 0x00D0 (0x0002E8 - 0x0003B8)
class UHUDLayoutToolV2_ContextButton : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 952;

public:
	CMember(UPaperSprite*)                             InEditIcon                                                  OFFSET(get<T>, {0x2E8, 8, 0, 0})
	SMember(FLinearColor)                              InEditIconColorAndOpacity                                   OFFSET(getStruct<T>, {0x2F0, 16, 0, 0})
	SMember(FLinearColor)                              InEditBackgroundColorAndOpacity                             OFFSET(getStruct<T>, {0x300, 16, 0, 0})
	CMember(UPaperSprite*)                             VisibleIcon                                                 OFFSET(get<T>, {0x310, 8, 0, 0})
	SMember(FLinearColor)                              VisibleIconColorAndOpacity                                  OFFSET(getStruct<T>, {0x318, 16, 0, 0})
	SMember(FLinearColor)                              VisibleBackgroundColorAndOpacity                            OFFSET(getStruct<T>, {0x328, 16, 0, 0})
	CMember(UPaperSprite*)                             HiddenIcon                                                  OFFSET(get<T>, {0x338, 8, 0, 0})
	SMember(FLinearColor)                              HiddenIconColorAndOpacity                                   OFFSET(getStruct<T>, {0x340, 16, 0, 0})
	SMember(FLinearColor)                              HiddenBackgroundColorAndOpacity                             OFFSET(getStruct<T>, {0x350, 16, 0, 0})
	CMember(UCommonTextBlock*)                         Text_LayoutName                                             OFFSET(get<T>, {0x398, 8, 0, 0})
	CMember(UHUDLayoutToolV2_Button*)                  Button_ContextVisibility                                    OFFSET(get<T>, {0x3A0, 8, 0, 0})
	CMember(UHUDLayoutToolV2_Button*)                  Button_ToggleContextEditing                                 OFFSET(get<T>, {0x3A8, 8, 0, 0})
	CMember(UImage*)                                   Image_SelectionHighlight                                    OFFSET(get<T>, {0x3B0, 8, 0, 0})
};

/// Class /Script/FortniteUI.HUDLayoutToolV2_ContextSelector
/// Size: 0x0060 (0x0002E8 - 0x000348)
class UHUDLayoutToolV2_ContextSelector : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 840;

public:
	CMember(UHUDLayoutToolV2_ContextButton*)           EditContextButton                                           OFFSET(get<T>, {0x328, 8, 0, 0})
	CMember(UHUDLayoutToolV2_ContextButton*)           VisibleContextButton                                        OFFSET(get<T>, {0x330, 8, 0, 0})
	CMember(UFortDynamicEntryBox*)                     EntryBox_MainLayoutButtons                                  OFFSET(get<T>, {0x338, 8, 0, 0})
	CMember(UFortDynamicEntryBox*)                     EntryBox_VehicleLayoutButtons                               OFFSET(get<T>, {0x340, 8, 0, 0})
};

/// Class /Script/FortniteUI.HUDLayoutToolV2_Grid
/// Size: 0x0040 (0x000178 - 0x0001B8)
class UHUDLayoutToolV2_Grid : public UWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 440;

public:
	DMember(int32_t)                                   RuleLinePeriod                                              OFFSET(get<int32_t>, {0x178, 4, 0, 0})
	SMember(FLinearColor)                              RegularLineColor                                            OFFSET(getStruct<T>, {0x17C, 16, 0, 0})
	SMember(FLinearColor)                              RuleLineColor                                               OFFSET(getStruct<T>, {0x18C, 16, 0, 0})
	DMember(float)                                     GridSize                                                    OFFSET(get<float>, {0x19C, 4, 0, 0})
	DMember(float)                                     SmallestGridSize                                            OFFSET(get<float>, {0x1A0, 4, 0, 0})
};

/// Class /Script/FortniteUI.HUDLayoutToolV2_GridSnap
/// Size: 0x0060 (0x0002E8 - 0x000348)
class UHUDLayoutToolV2_GridSnap : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 840;

public:
	DMember(bool)                                      bGridSnapEnabled                                            OFFSET(get<bool>, {0x2E8, 1, 0, 0})
	CMember(UPaperSprite*)                             CheckMarkSprite                                             OFFSET(get<T>, {0x2F0, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_SettingValue                                           OFFSET(get<T>, {0x328, 8, 0, 0})
	CMember(UAnalogSlider*)                            Slider_SettingValue                                         OFFSET(get<T>, {0x330, 8, 0, 0})
	CMember(UHUDLayoutToolV2_Button*)                  Button_ToggleEnabled                                        OFFSET(get<T>, {0x338, 8, 0, 0})
	CMember(UFortSimpleMaterialProgressBar*)           ProgressBar_ColoredBackground                               OFFSET(get<T>, {0x340, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.HUDLayoutToolV2_GridSnap.HandleSliderValueChanged
	// void HandleSliderValueChanged(float InValue);                                                                            // [0x91a5658] Final|Native|Private 
};

/// Class /Script/FortniteUI.HUDLayoutToolV2_KeyButtonPreview
/// Size: 0x0008 (0x000330 - 0x000338)
class UHUDLayoutToolV2_KeyButtonPreview : public UHUDLayoutToolV2_WidgetPreview
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 824;

public:
	CMember(UFortKeybindWidget*)                       KeybindWidget                                               OFFSET(get<T>, {0x330, 8, 0, 0})
};

/// Class /Script/FortniteUI.HUDLayoutToolV2_KeyButtonProxy
/// Size: 0x0008 (0x0003D0 - 0x0003D8)
class UHUDLayoutToolV2_KeyButtonProxy : public UFortMobileHUDElementProxy
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 984;

public:
	CMember(UFortKeybindWidget*)                       KeybindWidget                                               OFFSET(get<T>, {0x3D0, 8, 0, 0})
};

/// Class /Script/FortniteUI.HUDLayoutToolV2_KillfeedProxy
/// Size: 0x0010 (0x0003D0 - 0x0003E0)
class UHUDLayoutToolV2_KillfeedProxy : public UFortMobileHUDElementProxy
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 992;

public:
	SMember(FGameplayTag)                              NumberOfKillfeedLinesTag                                    OFFSET(getStruct<T>, {0x3D0, 4, 0, 0})
	CMember(UFortDynamicEntryBox*)                     EntryBox_KillFeedText                                       OFFSET(get<T>, {0x3D8, 8, 0, 0})
};

/// Class /Script/FortniteUI.HUDLayoutToolV2_LayoutButton
/// Size: 0x0060 (0x0002E8 - 0x000348)
class UHUDLayoutToolV2_LayoutButton : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 840;

public:
	SMember(FLinearColor)                              InEditColor                                                 OFFSET(getStruct<T>, {0x2E8, 16, 0, 0})
	SMember(FLinearColor)                              SelectedColor                                               OFFSET(getStruct<T>, {0x2F8, 16, 0, 0})
	CMember(UHUDLayoutToolV2_Button*)                  Button_Internal                                             OFFSET(get<T>, {0x338, 8, 0, 0})
	CMember(UBorder*)                                  Border_ActiveIndicator                                      OFFSET(get<T>, {0x340, 8, 0, 0})
};

/// Class /Script/FortniteUI.HUDLayoutToolV2_LinkAcrossActionPanel
/// Size: 0x0038 (0x0002E8 - 0x000320)
class UHUDLayoutToolV2_LinkAcrossActionPanel : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 800;

public:
	CMember(UCommonTextBlock*)                         Text_MainContextTitle                                       OFFSET(get<T>, {0x2E8, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_VehicleContextTitle                                    OFFSET(get<T>, {0x2F0, 8, 0, 0})
	CMember(UHUDLayoutToolV2_Button*)                  Button_SelectAll                                            OFFSET(get<T>, {0x2F8, 8, 0, 0})
	CMember(UHUDLayoutToolV2_Button*)                  Button_DeselectAll                                          OFFSET(get<T>, {0x300, 8, 0, 0})
	CMember(UCommonHierarchicalScrollBox*)             ScrollBox_Actions                                           OFFSET(get<T>, {0x308, 8, 0, 0})
	CMember(UFortDynamicEntryBox*)                     EntryBox_MainContextActions                                 OFFSET(get<T>, {0x310, 8, 0, 0})
	CMember(UFortDynamicEntryBox*)                     EntryBox_VehicleContextActions                              OFFSET(get<T>, {0x318, 8, 0, 0})
};

/// Class /Script/FortniteUI.HUDLayoutToolV2_LinkAcrossActionSetting
/// Size: 0x0070 (0x0002E8 - 0x000358)
class UHUDLayoutToolV2_LinkAcrossActionSetting : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 856;

public:
	SMember(FLinearColor)                              EnabledCheckBoxBorderColor                                  OFFSET(getStruct<T>, {0x2F0, 16, 0, 0})
	SMember(FLinearColor)                              DisabledCheckBoxBorderColor                                 OFFSET(getStruct<T>, {0x300, 16, 0, 0})
	CMember(UPaperSprite*)                             CheckMarkSprite                                             OFFSET(get<T>, {0x310, 8, 0, 0})
	CMember(UImage*)                                   Image_ActionIcon                                            OFFSET(get<T>, {0x328, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_ActionName                                             OFFSET(get<T>, {0x330, 8, 0, 0})
	CMember(UHUDLayoutToolV2_LinkAcrossWarningIndicator*) LinkAcrossWarningIndicator_Warning                       OFFSET(get<T>, {0x338, 8, 0, 0})
	CMember(UHUDLayoutToolV2_LinkAcrossNumericalIndicator*) NumericalIndicator_ActionImpact                        OFFSET(get<T>, {0x340, 8, 0, 0})
	CMember(UImage*)                                   Image_CheckboxBorder                                        OFFSET(get<T>, {0x348, 8, 0, 0})
	CMember(UHUDLayoutToolV2_Button*)                  Button_SelectAction                                         OFFSET(get<T>, {0x350, 8, 0, 0})
};

/// Class /Script/FortniteUI.HUDLayoutToolV2_LinkAcrossNumericalIndicator
/// Size: 0x0030 (0x0002E8 - 0x000318)
class UHUDLayoutToolV2_LinkAcrossNumericalIndicator : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 792;

public:
	SMember(FLinearColor)                              MaximumInstancesColor                                       OFFSET(getStruct<T>, {0x2E8, 16, 0, 0})
	CMember(TArray<FLinkAcrossNumericalIndicatorActionSymbol>) ActionSymbols                                       OFFSET(get<T>, {0x2F8, 16, 0, 0})
	CMember(UCommonTextBlock*)                         Text_ActionSymbol                                           OFFSET(get<T>, {0x308, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_InstanceCounter                                        OFFSET(get<T>, {0x310, 8, 0, 0})
};

/// Class /Script/FortniteUI.HUDLayoutToolV2_LinkAcrossPanel
/// Size: 0x0180 (0x0002E8 - 0x000468)
class UHUDLayoutToolV2_LinkAcrossPanel : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1128;

public:
	CMember(UFortMobileHUDWidgetRegistry*)             HUDWidgetRegistry                                           OFFSET(get<T>, {0x2E8, 8, 0, 0})
	CMember(UHUDLayoutToolV2_TooltipLayer*)            TooltipLayer                                                OFFSET(get<T>, {0x2F0, 8, 0, 0})
	CMember(TArray<FSimpleActionMessages>)             SimpleActionMessages                                        OFFSET(get<T>, {0x3F8, 16, 0, 0})
	CMember(UHUDLayoutToolV2_LinkAcrossPanelTitle*)    LinkAcrossPanelTitle_Header                                 OFFSET(get<T>, {0x408, 8, 0, 0})
	CMember(UBacchusCloseButton*)                      Button_Close                                                OFFSET(get<T>, {0x410, 8, 0, 0})
	CMember(UCommonVisibilitySwitcher*)                Switcher_Actions                                            OFFSET(get<T>, {0x418, 8, 0, 0})
	CMember(USizeBox*)                                 SizeBox_ActionPanelContainer                                OFFSET(get<T>, {0x420, 8, 0, 0})
	CMember(UHUDLayoutToolV2_LinkAcrossActionPanel*)   LinkAcrossActionPanel_Actions                               OFFSET(get<T>, {0x428, 8, 0, 0})
	CMember(UVerticalBox*)                             VerticalBox_SimpleAction                                    OFFSET(get<T>, {0x430, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_SimpleAction                                           OFFSET(get<T>, {0x438, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_SimpleActionWarning                                    OFFSET(get<T>, {0x440, 8, 0, 0})
	CMember(UHUDLayoutToolV2_Button*)                  Button_ToggleAdvanced                                       OFFSET(get<T>, {0x448, 8, 0, 0})
	CMember(UHUDLayoutToolV2_Button*)                  Button_Cancel                                               OFFSET(get<T>, {0x450, 8, 0, 0})
	CMember(UHUDLayoutToolV2_Button*)                  Button_Confirm                                              OFFSET(get<T>, {0x458, 8, 0, 0})
	CMember(UHUDLayoutToolV2_LinkAcrossWarningIndicator*) WarningIndicator_MainWarning                             OFFSET(get<T>, {0x460, 8, 0, 0})
};

/// Class /Script/FortniteUI.HUDLayoutToolV2_LinkAcrossPanelTitle
/// Size: 0x0048 (0x0002E8 - 0x000330)
class UHUDLayoutToolV2_LinkAcrossPanelTitle : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 816;

public:
	SMember(FText)                                     AdvancedActionTitle                                         OFFSET(getStruct<T>, {0x300, 24, 0, 0})
	CMember(USizeBox*)                                 SizeBox_Preview                                             OFFSET(get<T>, {0x318, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_WidgetName                                             OFFSET(get<T>, {0x320, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_Action                                                 OFFSET(get<T>, {0x328, 8, 0, 0})
};

/// Class /Script/FortniteUI.HUDLayoutToolV2_LinkAcrossWarningIndicator
/// Size: 0x0040 (0x0002E8 - 0x000328)
class UHUDLayoutToolV2_LinkAcrossWarningIndicator : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 808;

public:
	SMember(FVector2D)                                 TooltipOffset                                               OFFSET(getStruct<T>, {0x2E8, 16, 0, 0})
	SMember(FVector2D)                                 TooltipAllignment                                           OFFSET(getStruct<T>, {0x2F8, 16, 0, 0})
	SMember(FText)                                     WarningMessage                                              OFFSET(getStruct<T>, {0x308, 24, 0, 0})
	CMember(UHUDLayoutToolV2_TooltipLayer*)            TooltipLayer                                                OFFSET(get<T>, {0x320, 8, 0, 0})
};

/// Class /Script/FortniteUI.HUDLayoutToolV2_Popup
/// Size: 0x0070 (0x000400 - 0x000470)
class UHUDLayoutToolV2_Popup : public UCommonActivatableWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1136;

public:
	CMember(UCommonTextBlock*)                         CommonText_Title                                            OFFSET(get<T>, {0x430, 8, 0, 0})
	CMember(URichTextBlock*)                           RichText_Description                                        OFFSET(get<T>, {0x438, 8, 0, 0})
	CMember(UHUDLayoutToolV2_Button*)                  Button_Confirm                                              OFFSET(get<T>, {0x440, 8, 0, 0})
	CMember(UHUDLayoutToolV2_Button*)                  Button_Cancel                                               OFFSET(get<T>, {0x448, 8, 0, 0})
	CMember(UBacchusCloseButton*)                      Button_Close                                                OFFSET(get<T>, {0x450, 8, 0, 0})
	CMember(UWidgetAnimation*)                         Anim_In                                                     OFFSET(get<T>, {0x458, 8, 0, 0})
	CMember(UWidgetAnimation*)                         Anim_Out                                                    OFFSET(get<T>, {0x460, 8, 0, 0})
	CMember(UCommonActivatableWidgetSwitcher*)         Switcher_CornerIcon                                         OFFSET(get<T>, {0x468, 8, 0, 0})
};

/// Class /Script/FortniteUI.HUDLayoutToolV2_ProfileSelectionPanel
/// Size: 0x0238 (0x0002E8 - 0x000520)
class UHUDLayoutToolV2_ProfileSelectionPanel : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1312;

public:
	CMember(UClass*)                                   HudLayoutToolPopupClass                                     OFFSET(get<T>, {0x2E8, 8, 0, 0})
	CMember(UClass*)                                   HUDLayoutToolTextInputPopupClass                            OFFSET(get<T>, {0x2F0, 8, 0, 0})
	SMember(FHUDLayoutToolV2_PopupContent)             NoCustomLayoutSlotsLeftPopupContent                         OFFSET(getStruct<T>, {0x2F8, 104, 0, 0})
	SMember(FHUDLayoutToolV2_PopupContent)             DeleteCustomLayoutPopupContent                              OFFSET(getStruct<T>, {0x360, 104, 0, 0})
	SMember(FHUDLayoutToolV2_TextInputPopupContent)    RenamePopupContent                                          OFFSET(getStruct<T>, {0x3C8, 104, 0, 0})
	CMember(UFortMobileHUDWidgetRegistry*)             HUDWidgetRegistry                                           OFFSET(get<T>, {0x430, 8, 0, 0})
	CMember(UHUDLayoutToolV2_LayoutButton*)            InEditLayoutButton                                          OFFSET(get<T>, {0x438, 8, 0, 0})
	CMember(UHUDLayoutToolV2_LayoutButton*)            SelectedLayoutButton                                        OFFSET(get<T>, {0x440, 8, 0, 0})
	CMember(UFortDynamicEntryBox*)                     EntryBox_Presets                                            OFFSET(get<T>, {0x4D8, 8, 0, 0})
	CMember(UFortDynamicEntryBox*)                     EntryBox_CustomLayouts                                      OFFSET(get<T>, {0x4E0, 8, 0, 0})
	CMember(UFortDynamicEntryBox*)                     EntryBox_EmptyCustomLayoutSlots                             OFFSET(get<T>, {0x4E8, 8, 0, 0})
	CMember(UBacchusCloseButton*)                      Button_Exit                                                 OFFSET(get<T>, {0x4F0, 8, 0, 0})
	CMember(UHUDLayoutToolV2_Button*)                  Button_EditLayout                                           OFFSET(get<T>, {0x4F8, 8, 0, 0})
	CMember(UHUDLayoutToolV2_Button*)                  Button_Convert                                              OFFSET(get<T>, {0x500, 8, 0, 0})
	CMember(UHUDLayoutToolV2_Button*)                  Button_Copy                                                 OFFSET(get<T>, {0x508, 8, 0, 0})
	CMember(UHUDLayoutToolV2_Button*)                  Button_Delete                                               OFFSET(get<T>, {0x510, 8, 0, 0})
	CMember(UHUDLayoutToolV2_Button*)                  Button_Rename                                               OFFSET(get<T>, {0x518, 8, 0, 0})
};

/// Class /Script/FortniteUI.HUDLayoutToolV2_PropertyPanel
/// Size: 0x0080 (0x0002E8 - 0x000368)
class UHUDLayoutToolV2_PropertyPanel : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 872;

public:
	CMember(UFortMobileHUDElementProxy*)               WidgetProxyToEdit                                           OFFSET(get<T>, {0x2E8, 8, 0, 0})
	CMember(TArray<UFortSetting*>)                     VisibleSettings                                             OFFSET(get<T>, {0x2F0, 16, 0, 0})
	CMember(UFortMobileHUDWidgetCustomPropertySettingRegistry*) HUDWidgetCustomPropertySettingRegistry             OFFSET(get<T>, {0x300, 8, 0, 0})
	CMember(UFortMobileHUDWidgetRegistry*)             HUDWidgetRegistry                                           OFFSET(get<T>, {0x308, 8, 0, 0})
	CMember(UCommonActivatableWidgetSwitcher*)         Switcher_PropertiesAndMessage                               OFFSET(get<T>, {0x328, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_SelectWidgetMessage                                    OFFSET(get<T>, {0x330, 8, 0, 0})
	CMember(UVerticalBox*)                             VerticalBox_PropertiesContainer                             OFFSET(get<T>, {0x338, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_WidgetName                                             OFFSET(get<T>, {0x340, 8, 0, 0})
	CMember(UHUDLayoutToolV2_Button*)                  Button_EditLinks                                            OFFSET(get<T>, {0x348, 8, 0, 0})
	CMember(UHUDLayoutToolV2_Button*)                  Button_RevertHUDWidget                                      OFFSET(get<T>, {0x350, 8, 0, 0})
	CMember(UHUDLayoutToolV2_Button*)                  Button_DeleteHUDWidget                                      OFFSET(get<T>, {0x358, 8, 0, 0})
	CMember(UFortSettingsListView*)                    ListView_Settings                                           OFFSET(get<T>, {0x360, 8, 0, 0})
};

/// Class /Script/FortniteUI.HUDLayoutToolV2_QuickbarComboSlotProxy
/// Size: 0x0070 (0x0003D0 - 0x000440)
class UHUDLayoutToolV2_QuickbarComboSlotProxy : public UFortMobileHUDElementProxy
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1088;

public:
	CMember(TArray<UPaperSprite*>)                     CombatIcons                                                 OFFSET(get<T>, {0x3D0, 16, 0, 0})
	CMember(TArray<UPaperSprite*>)                     BuildingIcons                                               OFFSET(get<T>, {0x3E0, 16, 0, 0})
	CMember(TArray<UPaperSprite*>)                     ComboIcons                                                  OFFSET(get<T>, {0x3F0, 16, 0, 0})
	SMember(FGameplayTag)                              SlotTypePropertyTag                                         OFFSET(getStruct<T>, {0x400, 4, 0, 0})
	SMember(FGameplayTag)                              SlotLockPropertyTag                                         OFFSET(getStruct<T>, {0x404, 4, 0, 0})
	SMember(FGameplayTag)                              SlotNumberPropertyTag                                       OFFSET(getStruct<T>, {0x408, 4, 0, 0})
	CMember(UCommonVisibilitySwitcher*)                Switcher_SlotType                                           OFFSET(get<T>, {0x410, 8, 0, 0})
	CMember(UImage*)                                   Image_CombatIcon                                            OFFSET(get<T>, {0x418, 8, 0, 0})
	CMember(UImage*)                                   Image_BuildingIcon                                          OFFSET(get<T>, {0x420, 8, 0, 0})
	CMember(UImage*)                                   Image_ComboIcon                                             OFFSET(get<T>, {0x428, 8, 0, 0})
	CMember(UImage*)                                   Image_LockIcon                                              OFFSET(get<T>, {0x430, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_SlotNumber                                             OFFSET(get<T>, {0x438, 8, 0, 0})
};

/// Class /Script/FortniteUI.HUDLayoutToolV2_QuickbarProxy
/// Size: 0x00B8 (0x0003D0 - 0x000488)
class UHUDLayoutToolV2_QuickbarProxy : public UFortMobileHUDElementProxy
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1160;

public:
	CMember(TMap<EComboSlotType, FQuickbarProxySlotIconContainer>) QuickbarProxySlotIcons                          OFFSET(get<T>, {0x3D0, 80, 0, 0})
	CMember(TMap<FGameplayTag, int32_t>)               SlotAmountOverridePerContext                                OFFSET(get<T>, {0x420, 80, 0, 0})
	DMember(int32_t)                                   DefaultSlotAmount                                           OFFSET(get<int32_t>, {0x470, 4, 0, 0})
	SMember(FGameplayTag)                              SlotLocksPropertyTag                                        OFFSET(getStruct<T>, {0x474, 4, 0, 0})
	SMember(FGameplayTag)                              ReversePropertyTag                                          OFFSET(getStruct<T>, {0x478, 4, 0, 0})
	SMember(FGameplayTag)                              SlotTypePropertyTag                                         OFFSET(getStruct<T>, {0x47C, 4, 0, 0})
	CMember(UFortDynamicEntryBox*)                     EntryBox_QuickbarProxySlots                                 OFFSET(get<T>, {0x480, 8, 0, 0})
};

/// Class /Script/FortniteUI.HUDLayoutToolV2_QuickbarProxySlot
/// Size: 0x0018 (0x0002C0 - 0x0002D8)
class UHUDLayoutToolV2_QuickbarProxySlot : public UUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 728;

public:
	CMember(UImage*)                                   Image_SlotIcon                                              OFFSET(get<T>, {0x2C0, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_SlotNumber                                             OFFSET(get<T>, {0x2C8, 8, 0, 0})
	CMember(UImage*)                                   Image_LockIcon                                              OFFSET(get<T>, {0x2D0, 8, 0, 0})
};

/// Class /Script/FortniteUI.HUDLayoutToolV2_TextInputPopup
/// Size: 0x0038 (0x000470 - 0x0004A8)
class UHUDLayoutToolV2_TextInputPopup : public UHUDLayoutToolV2_Popup
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1192;

public:
	SMember(FText)                                     InvalidCharacterText                                        OFFSET(getStruct<T>, {0x470, 24, 0, 0})
	CMember(UFortEditableFilteredCountedTextBox*)      EditableFilteredTextBox_UserInput                           OFFSET(get<T>, {0x498, 8, 0, 0})
	CMember(UHUDLayoutToolV2_Button*)                  Button_Paste                                                OFFSET(get<T>, {0x4A0, 8, 0, 0})
};

/// Class /Script/FortniteUI.HUDLayoutToolV2_Toaster
/// Size: 0x0030 (0x000400 - 0x000430)
class UHUDLayoutToolV2_Toaster : public UCommonActivatableWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1072;

public:
	CMember(UWidgetAnimation*)                         Anim_Success                                                OFFSET(get<T>, {0x400, 8, 0, 0})
	CMember(UWidgetAnimation*)                         Anim_Failure                                                OFFSET(get<T>, {0x408, 8, 0, 0})
	CMember(UWidgetAnimation*)                         Anim_LocalFailure                                           OFFSET(get<T>, {0x410, 8, 0, 0})
	CMember(UWidgetAnimation*)                         Anim_CloudFailure                                           OFFSET(get<T>, {0x418, 8, 0, 0})
	CMember(UCommonTextBlock*)                         CommonText_Title                                            OFFSET(get<T>, {0x420, 8, 0, 0})
	CMember(UCommonTextBlock*)                         CommonText_Description                                      OFFSET(get<T>, {0x428, 8, 0, 0})
};

/// Class /Script/FortniteUI.HUDLayoutToolV2_Tooltip
/// Size: 0x0008 (0x0002E8 - 0x0002F0)
class UHUDLayoutToolV2_Tooltip : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 752;

public:
	CMember(UCommonTextBlock*)                         TextBlock_Description                                       OFFSET(get<T>, {0x2E8, 8, 0, 0})
};

/// Class /Script/FortniteUI.HUDLayoutToolV2_TooltipLayer
/// Size: 0x0008 (0x0002E8 - 0x0002F0)
class UHUDLayoutToolV2_TooltipLayer : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 752;

public:
	CMember(UHUDLayoutToolV2_Tooltip*)                 Tooltip_Message                                             OFFSET(get<T>, {0x2E8, 8, 0, 0})
};

/// Class /Script/FortniteUI.HUDLayoutToolV2_TutorialPopup
/// Size: 0x0028 (0x000400 - 0x000428)
class UHUDLayoutToolV2_TutorialPopup : public UCommonActivatableWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1064;

public:
	DMember(int32_t)                                   NumberOfTutorials                                           OFFSET(get<int32_t>, {0x400, 4, 0, 0})
	CMember(UCommonVisibilitySwitcher*)                Switcher_TutorialOverlays                                   OFFSET(get<T>, {0x418, 8, 0, 0})
	CMember(UHUDLayoutToolV2_Button*)                  Button_NextTutorial                                         OFFSET(get<T>, {0x420, 8, 0, 0})
};

/// Class /Script/FortniteUI.HUDLayoutToolV2_TutorialTextPrompt
/// Size: 0x0040 (0x000400 - 0x000440)
class UHUDLayoutToolV2_TutorialTextPrompt : public UCommonActivatableWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1088;

public:
	SMember(FText)                                     TitleText                                                   OFFSET(getStruct<T>, {0x400, 24, 0, 0})
	SMember(FText)                                     DescriptionText                                             OFFSET(getStruct<T>, {0x418, 24, 0, 0})
	CMember(UCommonTextBlock*)                         TextBlock_Title                                             OFFSET(get<T>, {0x430, 8, 0, 0})
	CMember(UCommonTextBlock*)                         TextBlock_Description                                       OFFSET(get<T>, {0x438, 8, 0, 0})
};

/// Class /Script/FortniteUI.HUDLayoutToolV2_VirtualCanvas
/// Size: 0x0068 (0x000190 - 0x0001F8)
class UHUDLayoutToolV2_VirtualCanvas : public UContentWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 504;

public:
};

/// Class /Script/FortniteUI.HUDLayoutToolV2_VirtualCanvasSlot
/// Size: 0x0010 (0x000038 - 0x000048)
class UHUDLayoutToolV2_VirtualCanvasSlot : public UPanelSlot
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 72;

public:
};

/// Class /Script/FortniteUI.CreateHUDWidgetDragDropOperation
/// Size: 0x0010 (0x000090 - 0x0000A0)
class UCreateHUDWidgetDragDropOperation : public UDragDropOperation
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 160;

public:
};

/// Class /Script/FortniteUI.FortMobileHUDContextModel
/// Size: 0x00A8 (0x000030 - 0x0000D8)
class UFortMobileHUDContextModel : public UDataAsset
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 216;

public:
	SMember(FText)                                     ContextLayoutName                                           OFFSET(getStruct<T>, {0x30, 24, 0, 0})
	DMember(int32_t)                                   DisplayOrderPriority                                        OFFSET(get<int32_t>, {0x48, 4, 0, 0})
	DMember(bool)                                      bIsEditingContextByDefault                                  OFFSET(get<bool>, {0x4C, 1, 0, 0})
	CMember(UPaperSprite*)                             ContextIcon                                                 OFFSET(get<T>, {0x50, 8, 0, 0})
	SMember(FGameplayTag)                              ContextLayoutSaveTag                                        OFFSET(getStruct<T>, {0x58, 4, 0, 0})
	SMember(FFortMobileContextFilter)                  ContextFilter                                               OFFSET(getStruct<T>, {0x60, 64, 0, 0})
	SMember(FGameplayTagContainer)                     UseableHUDWidgetTags                                        OFFSET(getStruct<T>, {0xA0, 32, 0, 0})
	CMember(TArray<FFortMobileHUDContextModelExtension>) Extensions                                                OFFSET(get<T>, {0xC0, 16, 0, 0})
	CMember(EContextLayoutAccessLevel)                 ContextLayoutAccessLevel                                    OFFSET(get<T>, {0xD0, 1, 0, 0})
};

/// Class /Script/FortniteUI.MyFortMobileHUDWidgetCustomPropertyModel_NumberDiscrete
/// Size: 0x0050 (0x000068 - 0x0000B8)
class UMyFortMobileHUDWidgetCustomPropertyModel_NumberDiscrete : public UFortMobileHUDWidgetCustomPropertyModel_Number
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 184;

public:
	CMember(TMap<int32_t, FText>)                      PropertyOptions                                             OFFSET(get<T>, {0x68, 80, 0, 0})
};

/// Class /Script/FortniteUI.UFortMobileHUDWidgetCustomPropertyModel_QuickbarLocks
/// Size: 0x0008 (0x000068 - 0x000070)
class UUFortMobileHUDWidgetCustomPropertyModel_QuickbarLocks : public UFortMobileHUDWidgetCustomPropertyModel_Number
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 112;

public:
	DMember(int32_t)                                   MaximumDisplayedOptions                                     OFFSET(get<int32_t>, {0x68, 4, 0, 0})
};

/// Class /Script/FortniteUI.CollectionNPCServiceContainer
/// Size: 0x0058 (0x0002C0 - 0x000318)
class UCollectionNPCServiceContainer : public UUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 792;

public:
	CMember(UDynamicEntryBox*)                         EntryBox_ServiceGroups                                      OFFSET(get<T>, {0x2C0, 8, 0, 0})
	DMember(int32_t)                                   MaxGroupSize                                                OFFSET(get<int32_t>, {0x2C8, 4, 0, 0})
	DMember(bool)                                      bExcludeAlwaysAvailableServices                             OFFSET(get<bool>, {0x2CC, 1, 0, 0})
	DMember(bool)                                      bShowLinesBetweenServices                                   OFFSET(get<bool>, {0x2CD, 1, 0, 0})
	CMember(UCollectionScreenServiceVisualData*)       SharedServiceVisualData                                     OFFSET(get<T>, {0x2D0, 8, 0, 0})
	CMember(TArray<UDataTable*>)                       GameFeatureLootTierData                                     OFFSET(get<T>, {0x2D8, 16, 0, 0})
	CMember(TArray<UDataTable*>)                       GameFeatureLootPackageData                                  OFFSET(get<T>, {0x2E8, 16, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.CollectionNPCServiceContainer.BP_PopulateServiceData
	// void BP_PopulateServiceData(bool bShowProgress, int32_t CurrentBenefitsLvl, int32_t TotalBenefitsLvl);                   // [0x1d9241c] Event|Protected|BlueprintEvent 
};

/// Class /Script/FortniteUI.CollectionNPCServiceGroup
/// Size: 0x0008 (0x0002C0 - 0x0002C8)
class UCollectionNPCServiceGroup : public UUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 712;

public:
	CMember(UDynamicEntryBox*)                         EntryBox_Services                                           OFFSET(get<T>, {0x2C0, 8, 0, 0})
};

/// Class /Script/FortniteUI.CollectionNPCServiceWidget
/// Size: 0x0000 (0x0002C0 - 0x0002C0)
class UCollectionNPCServiceWidget : public UUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 704;

public:
};

/// Class /Script/FortniteUI.CollectionScreenServiceVisualData
/// Size: 0x0080 (0x000030 - 0x0000B0)
class UCollectionScreenServiceVisualData : public UDataAsset
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 176;

public:
	CMember(UDataTable*)                               ServiceDataTable                                            OFFSET(get<T>, {0x30, 8, 0, 0})
	CMember(UDataTable*)                               SpecializationDataTable                                     OFFSET(get<T>, {0x38, 8, 0, 0})
	SMember(FGameplayTag)                              SeasonDataTableServicesTag                                  OFFSET(getStruct<T>, {0x40, 4, 0, 0})
	SMember(FGameplayTag)                              SeasonDataTableSalesTag                                     OFFSET(getStruct<T>, {0x44, 4, 0, 0})
	SMember(FGameplayTag)                              NpcPricingKeyRemapsTag                                      OFFSET(getStruct<T>, {0x48, 4, 0, 0})
	CMember(UCurveTable*)                              ItemCostTable                                               OFFSET(get<T>, {0x50, 8, 0, 0})
	CMember(UCurveTable*)                              ServiceCostTable                                            OFFSET(get<T>, {0x58, 8, 0, 0})
	SMember(FGameplayTagContainer)                     AllowedServiceTagsForIcon                                   OFFSET(getStruct<T>, {0x60, 32, 0, 0})
	SMember(FGameplayTag)                              SpecializationTagRoot                                       OFFSET(getStruct<T>, {0x80, 4, 0, 0})
	SMember(FText)                                     ItemNameAndCountFmt                                         OFFSET(getStruct<T>, {0x88, 24, 0, 0})
	CMember(TArray<FGameplayTag>)                      SellServiceTagOrdered                                       OFFSET(get<T>, {0xA0, 16, 0, 0})
};

/// Class /Script/FortniteUI.CommonTagVisibilityWidget
/// Size: 0x0048 (0x000190 - 0x0001D8)
class UCommonTagVisibilityWidget : public UContentWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 472;

public:
	SMember(FGameplayTagContainer)                     HUDElementTag                                               OFFSET(getStruct<T>, {0x190, 32, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.CommonTagVisibilityWidget.OnVisibilitySetEvent
	// void OnVisibilitySetEvent(ESlateVisibility InVisibility);                                                                // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.CommonTagVisibilityWidget.Initialize
	// void Initialize(ULocalPlayer* OwningLocalPlayer, APlayerController* OwningPlayerController);                             // [0x2e552d0] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.CommonTagVisibilityWidget.HandleOnHUDElementVisibilityChanged
	// void HandleOnHUDElementVisibilityChanged(FGameplayTagContainer& HiddenHUDElementTags);                                   // [0x30f1430] Final|Native|Protected|HasOutParms 
};

/// Class /Script/FortniteUI.BacchusBoundActionButton
/// Size: 0x0040 (0x0014B0 - 0x0014F0)
class UBacchusBoundActionButton : public UCommonBoundActionButton
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 5360;

public:
	CMember(UClass*)                                   KeyboardStyle                                               OFFSET(get<T>, {0x14A8, 8, 0, 0})
	CMember(UClass*)                                   LargeKeyboardStyle                                          OFFSET(get<T>, {0x14B0, 8, 0, 0})
	CMember(UClass*)                                   GamepadStyle                                                OFFSET(get<T>, {0x14B8, 8, 0, 0})
	CMember(UClass*)                                   LargeGamepadStyle                                           OFFSET(get<T>, {0x14C0, 8, 0, 0})
	DMember(bool)                                      bUseAdditionalStyle                                         OFFSET(get<bool>, {0x14C8, 1, 0, 0})
	CMember(UClass*)                                   KeyboardAdditionalStyle                                     OFFSET(get<T>, {0x14D0, 8, 0, 0})
	CMember(UClass*)                                   LargeKeyboardAdditionalStyle                                OFFSET(get<T>, {0x14D8, 8, 0, 0})
	CMember(UClass*)                                   GamepadAdditionalStyle                                      OFFSET(get<T>, {0x14E0, 8, 0, 0})
	CMember(UClass*)                                   LargeGamepadAdditionalStyle                                 OFFSET(get<T>, {0x14E8, 8, 0, 0})
};

/// Class /Script/FortniteUI.CMSBackgroundWidget
/// Size: 0x0040 (0x000400 - 0x000440)
class UCMSBackgroundWidget : public UCommonActivatableWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1088;

public:
	DMember(float)                                     OlderBackgroundStreamoutSeconds                             OFFSET(get<float>, {0x418, 4, 0, 0})
	DMember(bool)                                      bDeactivateOnClose                                          OFFSET(get<bool>, {0x41C, 1, 0, 0})
	CMember(UImage*)                                   Image_Background                                            OFFSET(get<T>, {0x420, 8, 0, 0})
	CMember(UCommonButtonBase*)                        Button_Close                                                OFFSET(get<T>, {0x428, 8, 0, 0})
	CMember(UCommonButtonBase*)                        Button_TouchClose                                           OFFSET(get<T>, {0x430, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.CMSBackgroundWidget.OnStartingDownloadBackground
	// void OnStartingDownloadBackground();                                                                                     // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.CMSBackgroundWidget.OnDownloadBackgroundComplete
	// void OnDownloadBackgroundComplete(UTexture2D* NewBackground);                                                            // [0x1d9241c] Event|Protected|BlueprintEvent 
};

/// Class /Script/FortniteUI.FortBoundActionButton
/// Size: 0x0030 (0x0014B0 - 0x0014E0)
class UFortBoundActionButton : public UCommonBoundActionButton
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 5344;

public:
	CMember(UClass*)                                   KeyboardStyle                                               OFFSET(get<T>, {0x14A8, 8, 0, 0})
	CMember(UClass*)                                   LargeKeyboardStyle                                          OFFSET(get<T>, {0x14B0, 8, 0, 0})
	CMember(UClass*)                                   GamepadStyle                                                OFFSET(get<T>, {0x14B8, 8, 0, 0})
	CMember(UClass*)                                   LargeGamepadStyle                                           OFFSET(get<T>, {0x14C0, 8, 0, 0})
	CMember(UClass*)                                   MobileStyle                                                 OFFSET(get<T>, {0x14C8, 8, 0, 0})
	CMember(UClass*)                                   LargeMobileStyle                                            OFFSET(get<T>, {0x14D0, 8, 0, 0})
};

/// Class /Script/FortniteUI.FortClickThroughButton
/// Size: 0x0010 (0x0005D0 - 0x0005E0)
class UFortClickThroughButton : public UButton
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1504;

public:
};

/// Class /Script/FortniteUI.FortCommittableButtonGroup
/// Size: 0x0010 (0x0001B0 - 0x0001C0)
class UFortCommittableButtonGroup : public UCommonButtonGroupLegacy
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 448;

public:
	SMember(FMulticastInlineDelegate)                  OnButtonCommitted                                           OFFSET(getStruct<T>, {0x1B0, 16, 0, 0})
};

/// Class /Script/FortniteUI.FortPageDotItem
/// Size: 0x0000 (0x000028 - 0x000028)
class UFortPageDotItem : public UObject
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 40;

public:
};

/// Class /Script/FortniteUI.FortDottedPagination
/// Size: 0x0018 (0x0002C0 - 0x0002D8)
class UFortDottedPagination : public UUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 728;

public:
	DMember(bool)                                      bUseWrapping                                                OFFSET(get<bool>, {0x2C0, 1, 0, 0})
	CMember(UListView*)                                ListView_Dots                                               OFFSET(get<T>, {0x2D0, 8, 0, 0})
};

/// Class /Script/FortniteUI.FortLazyImage
/// Size: 0x0030 (0x0003B0 - 0x0003E0)
class UFortLazyImage : public UCommonLazyImage
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 992;

public:
	DMember(bool)                                      bApplyDropShadow                                            OFFSET(get<bool>, {0x3B0, 1, 0, 0})
	SMember(FLinearColor)                              ShadowColorAndOpacity                                       OFFSET(getStruct<T>, {0x3B4, 16, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortLazyImage.SetShadowColorAndOpacity
	// void SetShadowColorAndOpacity(FLinearColor InColorAndOpacity);                                                           // [0x91dfea4] Final|Native|Public|HasDefaults|BlueprintCallable 
	// Function /Script/FortniteUI.FortLazyImage.SetFortBrushSize
	// void SetFortBrushSize(TEnumAsByte<EFortBrushSize> FortBrushSize);                                                        // [0x91df34c] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortLazyImage.SetBrushFromURL
	// void SetBrushFromURL(FString CMSImageURL, bool bMatchSize);                                                              // [0x91dea1c] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortLazyImage.SetBrushFromItemInstance
	// void SetBrushFromItemInstance(UFortItem* ItemInstance);                                                                  // [0x91de99c] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortLazyImage.SetBrushFromItemDefinition
	// void SetBrushFromItemDefinition(UFortItemDefinition* ItemDefinition);                                                    // [0x5a18618] Native|Public|BlueprintCallable 
};

/// Class /Script/FortniteUI.FortMaterialProgressBarStyle
/// Size: 0x00D8 (0x000028 - 0x000100)
class UFortMaterialProgressBarStyle : public UObject
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 256;

public:
	SMember(FName)                                     BackgroundColorParamName                                    OFFSET(getStruct<T>, {0x28, 4, 0, 0})
	SMember(FLinearColor)                              BackgroundColor                                             OFFSET(getStruct<T>, {0x2C, 16, 0, 0})
	SMember(FFortMaterialProgressBarSectionStyle)      BarSectionStyles                                            OFFSET(getStruct<T>, {0x3C, 192, 0, 0})
};

/// Class /Script/FortniteUI.FortMaterialProgressBar
/// Size: 0x0100 (0x0002E8 - 0x0003E8)
class UFortMaterialProgressBar : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1000;

public:
	CMember(UClass*)                                   style                                                       OFFSET(get<T>, {0x2E8, 8, 0, 0})
	SMember(FName)                                     BackgroundColorParamName                                    OFFSET(getStruct<T>, {0x2F0, 4, 0, 0})
	SMember(FLinearColor)                              BackgroundColor                                             OFFSET(getStruct<T>, {0x2F4, 16, 0, 0})
	CMember(EFortMaterialProgressBarSectionOverflowBehavior) OverflowBehavior                                      OFFSET(get<T>, {0x304, 1, 0, 0})
	SMember(FFortMaterialProgressBarSectionInfo)       BarSectionInfo                                              OFFSET(getStruct<T>, {0x308, 208, 0, 0})
	CMember(UCommonBorder*)                            ProgressBar                                                 OFFSET(get<T>, {0x3D8, 8, 0, 0})
	CMember(UMaterialInstanceDynamic*)                 ProgressBarMID                                              OFFSET(get<T>, {0x3E0, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortMaterialProgressBar.SetStyle
	// void SetStyle(UClass* BarStyle);                                                                                         // [0x91e0088] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortMaterialProgressBar.SetProgressBarSectionPercent
	// void SetProgressBarSectionPercent(TEnumAsByte<EFortMaterialProgressBarSection> BarSection, float Percent);               // [0x91df9a0] Final|RequiredAPI|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortMaterialProgressBar.SetProgressBarSectionColor
	// void SetProgressBarSectionColor(TEnumAsByte<EFortMaterialProgressBarSection> BarSection, FLinearColor Color, EFortMaterialProgressBarSectionColorNumber ColorNumber); // [0x91df6e8] Final|Native|Public|HasDefaults|BlueprintCallable 
	// Function /Script/FortniteUI.FortMaterialProgressBar.SetBackgroundColor
	// void SetBackgroundColor(FLinearColor Color);                                                                             // [0x91de840] Final|Native|Public|HasDefaults|BlueprintCallable 
};

/// Class /Script/FortniteUI.FortMultiSizeImage
/// Size: 0x04B8 (0x000178 - 0x000630)
class UFortMultiSizeImage : public UWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1584;

public:
	SMember(FFortMultiSizeBrush)                       MultiSizeBrush                                              OFFSET(getStruct<T>, {0x180, 1152, 0, 0})
	CMember(TEnumAsByte<EFortBrushSize>)               BrushSize                                                   OFFSET(get<T>, {0x600, 1, 0, 0})
	SMember(FLinearColor)                              ColorAndOpacity                                             OFFSET(getStruct<T>, {0x604, 16, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortMultiSizeImage.SetMultiSizeBrush
	// void SetMultiSizeBrush(FFortMultiSizeBrush& MultiSizeBrush);                                                             // [0x91df544] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/FortniteUI.FortMultiSizeImage.SetColorAndOpacity
	// void SetColorAndOpacity(FLinearColor& Color);                                                                            // [0x91df220] Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable 
	// Function /Script/FortniteUI.FortMultiSizeImage.SetBrushSize
	// void SetBrushSize(TEnumAsByte<EFortBrushSize> BrushSize);                                                                // [0x91df194] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/FortniteUI.FortRelativeAnchorCanvasSlot
/// Size: 0x0010 (0x000038 - 0x000048)
class UFortRelativeAnchorCanvasSlot : public UPanelSlot
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 72;

public:
	CMember(TWeakObjectPtr<UWidget*>)                  AnchorWidget                                                OFFSET(get<T>, {0x38, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortRelativeAnchorCanvasSlot.SetAnchorWidget
	// void SetAnchorWidget(UWidget* NewAnchorWidget);                                                                          // [0x91de7c0] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/FortniteUI.FortRelativeAnchorCanvas
/// Size: 0x0018 (0x000190 - 0x0001A8)
class UFortRelativeAnchorCanvas : public UPanelWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 424;

public:
	DMember(int32_t)                                   ZLayerOffset                                                OFFSET(get<int32_t>, {0x190, 4, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortRelativeAnchorCanvas.SetZLayerOffset
	// void SetZLayerOffset(int32_t Value);                                                                                     // [0x91e0208] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortRelativeAnchorCanvas.AddSlot
	// UFortRelativeAnchorCanvasSlot* AddSlot(UWidget* ContentWidget, UWidget* AnchorWidget);                                   // [0x91db298] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/FortniteUI.FortSimpleMaterialProgressBar
/// Size: 0x00D0 (0x0002E8 - 0x0003B8)
class UFortSimpleMaterialProgressBar : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 952;

public:
	SMember(FMulticastInlineDelegate)                  OnFillAnimationFinished                                     OFFSET(getStruct<T>, {0x2E8, 16, 0, 0})
	DMember(bool)                                      bOverrideDefaultColorA                                      OFFSET(get<bool>, {0x2F8, 1, 0, 0})
	SMember(FLinearColor)                              CachedColorA                                                OFFSET(getStruct<T>, {0x2FC, 16, 0, 0})
	DMember(bool)                                      bOverrideDefaultColorB                                      OFFSET(get<bool>, {0x30C, 1, 0, 0})
	SMember(FLinearColor)                              CachedColorB                                                OFFSET(getStruct<T>, {0x310, 16, 0, 0})
	DMember(bool)                                      bOverrideDefaultColorBackground                             OFFSET(get<bool>, {0x320, 1, 0, 0})
	SMember(FLinearColor)                              CachedColorBackground                                       OFFSET(getStruct<T>, {0x324, 16, 0, 0})
	DMember(bool)                                      bOverrideDefaultEnableColoredSegments                       OFFSET(get<bool>, {0x334, 1, 0, 0})
	DMember(bool)                                      bCachedEnableColoredSegments                                OFFSET(get<bool>, {0x335, 1, 0, 0})
	DMember(bool)                                      bOverrideDefaultSegmentColor                                OFFSET(get<bool>, {0x336, 1, 0, 0})
	SMember(FLinearColor)                              CachedSegmentColor                                          OFFSET(getStruct<T>, {0x338, 16, 0, 0})
	DMember(bool)                                      bOverrideDefaultSegments                                    OFFSET(get<bool>, {0x348, 1, 0, 0})
	DMember(int32_t)                                   Segments                                                    OFFSET(get<int32_t>, {0x34C, 4, 0, 0})
	DMember(bool)                                      bOverrideDefaultSegmentEdge                                 OFFSET(get<bool>, {0x350, 1, 0, 0})
	DMember(float)                                     SegmentEdge                                                 OFFSET(get<float>, {0x354, 4, 0, 0})
	DMember(bool)                                      bOverrideDefaultFillEdgeSoftness                            OFFSET(get<bool>, {0x358, 1, 0, 0})
	DMember(float)                                     FillEdgeSoftness                                            OFFSET(get<float>, {0x35C, 4, 0, 0})
	DMember(bool)                                      bOverrideDefaultGlowEdge                                    OFFSET(get<bool>, {0x360, 1, 0, 0})
	DMember(float)                                     GlowEdge                                                    OFFSET(get<float>, {0x364, 4, 0, 0})
	DMember(bool)                                      bOverrideDefaultGlowSoftness                                OFFSET(get<bool>, {0x368, 1, 0, 0})
	DMember(float)                                     GlowSoftness                                                OFFSET(get<float>, {0x36C, 4, 0, 0})
	DMember(bool)                                      bOverrideDefaultOutlineScale                                OFFSET(get<bool>, {0x370, 1, 0, 0})
	DMember(float)                                     OutlineScale                                                OFFSET(get<float>, {0x374, 4, 0, 0})
	DMember(bool)                                      bUseStroke                                                  OFFSET(get<bool>, {0x378, 1, 0, 0})
	CMember(UMaterialInterface*)                       StrokeMaterial                                              OFFSET(get<T>, {0x380, 8, 0, 0})
	CMember(UMaterialInterface*)                       NoStrokeMaterial                                            OFFSET(get<T>, {0x388, 8, 0, 0})
	SMember(FName)                                     ProgressParamName                                           OFFSET(getStruct<T>, {0x390, 4, 0, 0})
	CMember(UImage*)                                   Image_Bar                                                   OFFSET(get<T>, {0x398, 8, 0, 0})
	CMember(UWidgetAnimation*)                         BoundAnim_FillBar                                           OFFSET(get<T>, {0x3A0, 8, 0, 0})
	CMember(UMaterialInstanceDynamic*)                 CachedMID                                                   OFFSET(get<T>, {0x3A8, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortSimpleMaterialProgressBar.SetStartProgress
	// void SetStartProgress(float StartProgress);                                                                              // [0x91e0008] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortSimpleMaterialProgressBar.SetSegments
	// void SetSegments(int32_t NumSegments);                                                                                   // [0x91dfc44] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortSimpleMaterialProgressBar.SetSegmentColor
	// void SetSegmentColor(FLinearColor SegmentColor);                                                                         // [0x91dfae8] Final|Native|Public|HasDefaults|BlueprintCallable 
	// Function /Script/FortniteUI.FortSimpleMaterialProgressBar.SetProgress
	// void SetProgress(float Progress);                                                                                        // [0x107ceb8] Final|RequiredAPI|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortSimpleMaterialProgressBar.SetEnableColoredSegments
	// void SetEnableColoredSegments(bool bEnableColoredSegments);                                                              // [0x91df2c4] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortSimpleMaterialProgressBar.SetColorBackground
	// void SetColorBackground(FLinearColor ColorBackground);                                                                   // [0x264bb24] Final|Native|Public|HasDefaults|BlueprintCallable 
	// Function /Script/FortniteUI.FortSimpleMaterialProgressBar.SetColorB
	// void SetColorB(FLinearColor ColorB);                                                                                     // [0x257a4e0] Final|Native|Public|HasDefaults|BlueprintCallable 
	// Function /Script/FortniteUI.FortSimpleMaterialProgressBar.SetColorA
	// void SetColorA(FLinearColor ColorA);                                                                                     // [0x257a720] Final|Native|Public|HasDefaults|BlueprintCallable 
	// Function /Script/FortniteUI.FortSimpleMaterialProgressBar.OnFillAnimationFinished__DelegateSignature
	// void OnFillAnimationFinished__DelegateSignature();                                                                       // [0x1d9241c] MulticastDelegate|Public|Delegate 
	// Function /Script/FortniteUI.FortSimpleMaterialProgressBar.AnimateProgressFromStart
	// void AnimateProgressFromStart(float Start, float End, float AnimSpeed);                                                  // [0x91db41c] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortSimpleMaterialProgressBar.AnimateProgressFromCurrent
	// void AnimateProgressFromCurrent(float End, float AnimSpeed);                                                             // [0x26eaa18] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/FortniteUI.FortEventTeamMatchHistoryEntryData
/// Size: 0x0058 (0x000028 - 0x000080)
class UFortEventTeamMatchHistoryEntryData : public UObject
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 128;

public:
	DMember(int32_t)                                   MatchNumber                                                 OFFSET(get<int32_t>, {0x28, 4, 0, 0})
	DMember(int32_t)                                   Eliminations                                                OFFSET(get<int32_t>, {0x2C, 4, 0, 0})
	DMember(int32_t)                                   CreativeScore                                               OFFSET(get<int32_t>, {0x30, 4, 0, 0})
	CMember(TArray<int32_t>)                           AlternativeStats                                            OFFSET(get<T>, {0x38, 16, 0, 0})
	DMember(int32_t)                                   Placement                                                   OFFSET(get<int32_t>, {0x48, 4, 0, 0})
	DMember(int32_t)                                   SecondsAlive                                                OFFSET(get<int32_t>, {0x4C, 4, 0, 0})
	DMember(bool)                                      bShowEliminations                                           OFFSET(get<bool>, {0x50, 1, 0, 0})
	DMember(bool)                                      bIsLive                                                     OFFSET(get<bool>, {0x51, 1, 0, 0})
	DMember(bool)                                      bIsReplayAvailable                                          OFFSET(get<bool>, {0x52, 1, 0, 0})
	SMember(FString)                                   SessionId                                                   OFFSET(getStruct<T>, {0x58, 16, 0, 0})
	CMember(TArray<FString>)                           TeamAccountIds                                              OFFSET(get<T>, {0x68, 16, 0, 0})
	DMember(bool)                                      bIsScoreContributor                                         OFFSET(get<bool>, {0x78, 1, 0, 0})
};

/// Class /Script/FortniteUI.FortEventTeamMatchHistoryStat
/// Size: 0x0010 (0x0002C0 - 0x0002D0)
class UFortEventTeamMatchHistoryStat : public UUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 720;

public:
	CMember(UWidget*)                                  Widget_Icon                                                 OFFSET(get<T>, {0x2C0, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Widget_Score                                                OFFSET(get<T>, {0x2C8, 8, 0, 0})
};

/// Class /Script/FortniteUI.FortEventTeamMatchHistoryEntry
/// Size: 0x0080 (0x0014E0 - 0x001560)
class UFortEventTeamMatchHistoryEntry : public UCommonButtonLegacy
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 5472;

public:
	CMember(UCommonTextBlock*)                         Text_MatchNumber                                            OFFSET(get<T>, {0x14E8, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_TimeAlive                                              OFFSET(get<T>, {0x14F0, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_Eliminations                                           OFFSET(get<T>, {0x14F8, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_Placement                                              OFFSET(get<T>, {0x1500, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_CreativeScore                                          OFFSET(get<T>, {0x1508, 8, 0, 0})
	CMember(UOverlay*)                                 Overlay_OnlineStatus                                        OFFSET(get<T>, {0x1510, 8, 0, 0})
	CMember(UCommonBorder*)                            Border_InteractionContent                                   OFFSET(get<T>, {0x1518, 8, 0, 0})
	CMember(UWidget*)                                  Icon_Eliminations                                           OFFSET(get<T>, {0x1520, 8, 0, 0})
	CMember(UWidget*)                                  Icon_Placement                                              OFFSET(get<T>, {0x1528, 8, 0, 0})
	CMember(UWidget*)                                  Icon_CreativeScore                                          OFFSET(get<T>, {0x1530, 8, 0, 0})
	CMember(UFortEventTeamMatchHistoryStat*)           Widget_AltStat0                                             OFFSET(get<T>, {0x1538, 8, 0, 0})
	CMember(UFortEventTeamMatchHistoryStat*)           Widget_AltStat1                                             OFFSET(get<T>, {0x1540, 8, 0, 0})
	CMember(UFortEventTeamMatchHistoryStat*)           Widget_AltStat2                                             OFFSET(get<T>, {0x1548, 8, 0, 0})
	CMember(UFortEventTeamMatchHistoryStat*)           Widget_AltStat3                                             OFFSET(get<T>, {0x1550, 8, 0, 0})
	CMember(UFortEventTeamMatchHistoryEntryData*)      MatchData                                                   OFFSET(get<T>, {0x1558, 8, 0, 0})
};

/// Class /Script/FortniteUI.FortEventTeamMatchHistoryModal
/// Size: 0x0048 (0x000570 - 0x0005B8)
class UFortEventTeamMatchHistoryModal : public UFortActivatablePanel
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1464;

public:
	CMember(UCommonListView*)                          ListView_MatchHistory                                       OFFSET(get<T>, {0x570, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_TeamNames                                              OFFSET(get<T>, {0x578, 8, 0, 0})
	CMember(UFortEventTeamMatchHistoryStat*)           Widget_AltStat0                                             OFFSET(get<T>, {0x580, 8, 0, 0})
	CMember(UFortEventTeamMatchHistoryStat*)           Widget_AltStat1                                             OFFSET(get<T>, {0x588, 8, 0, 0})
	CMember(UFortEventTeamMatchHistoryStat*)           Widget_AltStat2                                             OFFSET(get<T>, {0x590, 8, 0, 0})
	CMember(UFortEventTeamMatchHistoryStat*)           Widget_AltStat3                                             OFFSET(get<T>, {0x598, 8, 0, 0})
	CMember(UFortEventLeaderboardEntryData*)           LeaderboardEntryData                                        OFFSET(get<T>, {0x5A0, 8, 0, 0})
	CMember(UFortEventTeamMatchHistoryEntryData*)      LastClickedMatchHistoryEntry                                OFFSET(get<T>, {0x5A8, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortEventTeamMatchHistoryModal.SetupMatchHistory
	// void SetupMatchHistory(UFortEventLeaderboardEntryData* DataForDisplay, FString TournamentId, FString EventWindowId, FString LeaderboardGroupingKey, FString LeaderboardInstanceId); // [0x91e0294] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.FortEventTeamMatchHistoryModal.OnSetupMatchHistory
	// void OnSetupMatchHistory(FString TournamentId, FString EventWindowId);                                                   // [0x1d9241c] Event|Protected|BlueprintEvent 
};

/// Class /Script/FortniteUI.FortFlagImage
/// Size: 0x0010 (0x0003E0 - 0x0003F0)
class UFortFlagImage : public UFortLazyImage
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1008;

public:
};

/// Class /Script/FortniteUI.FortFlagSelectionModal
/// Size: 0x00B8 (0x000570 - 0x000628)
class UFortFlagSelectionModal : public UFortActivatablePanel
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1576;

public:
	CMember(UFortFlagObject*)                          SelectedFlag                                                OFFSET(get<T>, {0x570, 8, 0, 0})
	DMember(float)                                     FlagConfirmSpinnerDelay                                     OFFSET(get<float>, {0x578, 4, 0, 0})
	CMember(UCommonTextBlock*)                         Text_Confirmation                                           OFFSET(get<T>, {0x598, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_CurrentFlagRegionName                                  OFFSET(get<T>, {0x5A0, 8, 0, 0})
	CMember(UFortFlagImage*)                           CurrentFlagImage                                            OFFSET(get<T>, {0x5A8, 8, 0, 0})
	CMember(UFortFlagImage*)                           ConfirmationCurrentFlagImage                                OFFSET(get<T>, {0x5B0, 8, 0, 0})
	CMember(UFortFlagImage*)                           ConfirmationTargetFlagImage                                 OFFSET(get<T>, {0x5B8, 8, 0, 0})
	CMember(UCommonTileView*)                          TileView_FlagOptions                                        OFFSET(get<T>, {0x5C0, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_FlagRegionName                                         OFFSET(get<T>, {0x5C8, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_ChangeRegionBlock                                      OFFSET(get<T>, {0x5D0, 8, 0, 0})
	CMember(UCommonButtonBase*)                        Button_Change                                               OFFSET(get<T>, {0x5D8, 8, 0, 0})
	CMember(UCommonButtonBase*)                        Button_ConfirmationCancel                                   OFFSET(get<T>, {0x5E0, 8, 0, 0})
	CMember(UCommonButtonBase*)                        Button_ConfirmationConfirm                                  OFFSET(get<T>, {0x5E8, 8, 0, 0})
	CMember(UCommonButtonBase*)                        Button_Cancel                                               OFFSET(get<T>, {0x5F0, 8, 0, 0})
	CMember(UCommonButtonLegacy*)                      Button_CloseMobile                                          OFFSET(get<T>, {0x5F8, 8, 0, 0})
	CMember(UImage*)                                   Image_Spinner                                               OFFSET(get<T>, {0x600, 8, 0, 0})
};

/// Class /Script/FortniteUI.FortFlagObject
/// Size: 0x0050 (0x000028 - 0x000078)
class UFortFlagObject : public UObject
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 120;

public:
	SMember(FString)                                   RegionId                                                    OFFSET(getStruct<T>, {0x28, 16, 0, 0})
	SMember(FText)                                     DisplayName                                                 OFFSET(getStruct<T>, {0x38, 24, 0, 0})
	CMember(TWeakObjectPtr<UTexture2D*>)               FlagTexture                                                 OFFSET(get<T>, {0x50, 32, 0, 0})
	DMember(bool)                                      bSelected                                                   OFFSET(get<bool>, {0x70, 1, 0, 0})
};

/// Class /Script/FortniteUI.FortFlagTileButton
/// Size: 0x0030 (0x0014E0 - 0x001510)
class UFortFlagTileButton : public UCommonButtonLegacy
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 5392;

public:
	SMember(FName)                                     IconParamName                                               OFFSET(getStruct<T>, {0x14E8, 4, 0, 0})
	CMember(UFortFlagObject*)                          SourceObject                                                OFFSET(get<T>, {0x14F0, 8, 0, 0})
	CMember(UFortFlagImage*)                           FlagImage                                                   OFFSET(get<T>, {0x14F8, 8, 0, 0})
	CMember(UImage*)                                   Image_Active                                                OFFSET(get<T>, {0x1500, 8, 0, 0})
};

/// Class /Script/FortniteUI.FortTournamentAbandonMatchDialog
/// Size: 0x0020 (0x000570 - 0x000590)
class UFortTournamentAbandonMatchDialog : public UFortActivatablePanel
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1424;

public:
	CMember(UCommonButtonBase*)                        Button_LeaveMatch                                           OFFSET(get<T>, {0x570, 8, 0, 0})
	CMember(UCommonButtonBase*)                        Button_ContinueMatch                                        OFFSET(get<T>, {0x578, 8, 0, 0})
	CMember(UCommonDateTimeTextBlock*)                 Text_LeaveMatchTime                                         OFFSET(get<T>, {0x580, 8, 0, 0})
};

/// Class /Script/FortniteUI.ContentBrowserFilterEntry
/// Size: 0x0050 (0x0014E0 - 0x001530)
class UContentBrowserFilterEntry : public UCommonButtonLegacy
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 5424;

public:
	SMember(FMulticastInlineDelegate)                  OnFilterEnabled                                             OFFSET(getStruct<T>, {0x14E0, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnFilterSelected                                            OFFSET(getStruct<T>, {0x14F0, 16, 0, 0})
	CMember(UCommonTextBlock*)                         TextBlock_FilterName                                        OFFSET(get<T>, {0x1500, 8, 0, 0})
	DMember(bool)                                      bFilterActive                                               OFFSET(get<bool>, {0x1508, 1, 0, 0})
	CMember(UContentBrowserTag*)                       tag                                                         OFFSET(get<T>, {0x1510, 8, 0, 0})
	SMember(FText)                                     ButtonText                                                  OFFSET(getStruct<T>, {0x1518, 24, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.ContentBrowserFilterEntry.UpdateCheckMarkState
	// void UpdateCheckMarkState(bool bIsChecked);                                                                              // [0x1d9241c] Event|Public|BlueprintCallable|BlueprintEvent 
	// Function /Script/FortniteUI.ContentBrowserFilterEntry.UpdateButtonText
	// void UpdateButtonText();                                                                                                 // [0x91e2084] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.ContentBrowserFilterEntry.SetIsFilterActive
	// void SetIsFilterActive(bool bInFilterActive);                                                                            // [0x91df3cc] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.ContentBrowserFilterEntry.IsFilterActive
	// bool IsFilterActive();                                                                                                   // [0x91ddd50] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/FortniteUI.ContentBrowserTag
/// Size: 0x0020 (0x000028 - 0x000048)
class UContentBrowserTag : public UObject
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 72;

public:
	SMember(FName)                                     TagID                                                       OFFSET(getStruct<T>, {0x28, 4, 0, 0})
	SMember(FText)                                     TagName                                                     OFFSET(getStruct<T>, {0x30, 24, 0, 0})
};

/// Class /Script/FortniteUI.ContentBrowserFiltersPanel
/// Size: 0x0080 (0x0002E8 - 0x000368)
class UContentBrowserFiltersPanel : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 872;

public:
	SMember(FMulticastInlineDelegate)                  OnFilterChanged                                             OFFSET(getStruct<T>, {0x2E8, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnFocusChanged                                              OFFSET(getStruct<T>, {0x2F8, 16, 0, 0})
	CMember(UClass*)                                   FilterEntryWidgetClass                                      OFFSET(get<T>, {0x308, 8, 0, 0})
	CMember(UVerticalBox*)                             Box_Filters                                                 OFFSET(get<T>, {0x310, 8, 0, 0})
	CMember(UScrollBox*)                               ScrollBox_FilterScroll                                      OFFSET(get<T>, {0x318, 8, 0, 0})
	CMember(UContentBrowserFilterEntry*)               Button_All                                                  OFFSET(get<T>, {0x320, 8, 0, 0})
	CMember(USearchPanel*)                             SearchPanel                                                 OFFSET(get<T>, {0x328, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.ContentBrowserFiltersPanel.HandleShowAll
	// void HandleShowAll(bool bShowAllItems, UObject* ListItemObject);                                                         // [0x91dd818] Final|Native|Private 
	// Function /Script/FortniteUI.ContentBrowserFiltersPanel.HandleSearchTextChanged
	// void HandleSearchTextChanged(FText& Text);                                                                               // [0x91dd77c] Final|Native|Private|HasOutParms 
	// Function /Script/FortniteUI.ContentBrowserFiltersPanel.HandleFilterSelected
	// void HandleFilterSelected(bool bIsFilterEnabled, UContentBrowserFilterEntry* Entry);                                     // [0x91dd104] Final|Native|Private 
	// Function /Script/FortniteUI.ContentBrowserFiltersPanel.HandleFilterEnabled
	// void HandleFilterEnabled(bool bIsFilterEnabled, UObject* ListItemObject);                                                // [0x91dd040] Final|Native|Private 
	// Function /Script/FortniteUI.ContentBrowserFiltersPanel.GetFilterCount
	// int32_t GetFilterCount();                                                                                                // [0x91dc090] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/FortniteUI.AthenaAccountContext
/// Size: 0x0000 (0x000030 - 0x000030)
class UAthenaAccountContext : public UBlueprintContextBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 48;

public:
};

/// Class /Script/FortniteUI.AthenaHUDContext
/// Size: 0x0470 (0x000030 - 0x0004A0)
class UAthenaHUDContext : public UBlueprintContextBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1184;

public:
	SMember(FMulticastInlineDelegate)                  OnLocalPlayerWon                                            OFFSET(getStruct<T>, {0x38, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnLocalPlayerDeathOnWin                                     OFFSET(getStruct<T>, {0x48, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnLocalTeamWon                                              OFFSET(getStruct<T>, {0x58, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnLocalTeamLost                                             OFFSET(getStruct<T>, {0x68, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnLocalPlayerLost                                           OFFSET(getStruct<T>, {0x78, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnLocalPlayerKilledPlayer                                   OFFSET(getStruct<T>, {0x88, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnLocalPlayerDBNOStateChanged                               OFFSET(getStruct<T>, {0x98, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnPawnEmoteStopped                                          OFFSET(getStruct<T>, {0xA8, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnUIGameplayCue                                             OFFSET(getStruct<T>, {0xB8, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnLocalPlayerBeginSkydiving                                 OFFSET(getStruct<T>, {0xC8, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnAthenaAutoFireChanged                                     OFFSET(getStruct<T>, {0xD8, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnPlayerFiredWeapon                                         OFFSET(getStruct<T>, {0xE8, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnShowUrgentQuestMessage                                    OFFSET(getStruct<T>, {0xF8, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnDuelChange                                                OFFSET(getStruct<T>, {0x108, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnLowPerformanceMode                                        OFFSET(getStruct<T>, {0x118, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnPTTStateChange                                            OFFSET(getStruct<T>, {0x128, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnCanPTTChange                                              OFFSET(getStruct<T>, {0x138, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  ShowMobilePickerDelegate                                    OFFSET(getStruct<T>, {0x148, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnPlayerNameChangeDelegate                                  OFFSET(getStruct<T>, {0x158, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnResurrectingNowDelegate                                   OFFSET(getStruct<T>, {0x168, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnAllWinnersAnnouncedDelegate                               OFFSET(getStruct<T>, {0x178, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnSignalQualityChangeDelegate                               OFFSET(getStruct<T>, {0x188, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnForwardStartedFalling                                     OFFSET(getStruct<T>, {0x198, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnSpecialActorListChanged                                   OFFSET(getStruct<T>, {0x1A8, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnFireStopped                                               OFFSET(getStruct<T>, {0x1D0, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnPostGameWidgetPlacementChange                             OFFSET(getStruct<T>, {0x1E0, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnForceStartPostGameFlow                                    OFFSET(getStruct<T>, {0x1F0, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnForceAllQuickbarsMinimizedChanged                         OFFSET(getStruct<T>, {0x200, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnPlaylistExtensionWidgetCreatedNotSupported                OFFSET(getStruct<T>, {0x210, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnClearPlaylistExtensionWidgetNotSupported                  OFFSET(getStruct<T>, {0x220, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnStartPostGameMenu                                         OFFSET(getStruct<T>, {0x230, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnRecoverFromPostGameMenu                                   OFFSET(getStruct<T>, {0x240, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnOverrideInventoryPanel                                    OFFSET(getStruct<T>, {0x250, 16, 0, 0})
	CMember(TWeakObjectPtr<UWidget*>)                  MoveButtonWidgetPtr                                         OFFSET(get<T>, {0x420, 8, 0, 0})
	SMember(FAthenaWinnerInfo)                         WinnerInfo                                                  OFFSET(getStruct<T>, {0x428, 32, 0, 0})
	DMember(bool)                                      bMoveButtonMode                                             OFFSET(get<bool>, {0x449, 1, 0, 0})
	DMember(bool)                                      bPendingAttachToHUD                                         OFFSET(get<bool>, {0x44A, 1, 0, 0})
	DMember(bool)                                      bLocalPlayerWonMatch                                        OFFSET(get<bool>, {0x44B, 1, 0, 0})
	CMember(TWeakObjectPtr<AFortPlayerPawnAthena*>)    BoundPlayerPawn                                             OFFSET(get<T>, {0x44C, 8, 0, 0})
	CMember(UAthenaPlayerViewModel*)                   PlayerViewModel                                             OFFSET(get<T>, {0x458, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.AthenaHUDContext.VictoryStingerTimeUntilFadeOut
	// float VictoryStingerTimeUntilFadeOut();                                                                                  // [0x91e2230] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.AthenaHUDContext.UseTapToShoot
	// bool UseTapToShoot();                                                                                                    // [0x823d698] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.AthenaHUDContext.UseOrRleoadFromHUDStop
	// void UseOrRleoadFromHUDStop();                                                                                           // [0x91e2204] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.AthenaHUDContext.UseOrRleoadFromHUDStart
	// void UseOrRleoadFromHUDStart();                                                                                          // [0x91e21d8] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.AthenaHUDContext.UpdateSelectedWidgetMoveOffsetVector
	// void UpdateSelectedWidgetMoveOffsetVector(FVector2D& VectorOffset, float fMoveScale);                                    // [0x91e2098] Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable 
	// Function /Script/FortniteUI.AthenaHUDContext.TryBestUseForActor
	// void TryBestUseForActor(AActor* ActorToUse);                                                                             // [0x91e1fcc] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.AthenaHUDContext.TakeMovementInputFromHUD
	// void TakeMovementInputFromHUD(FVector2D MoveVector);                                                                     // [0x91e1e70] Final|Native|Public|HasDefaults|BlueprintCallable 
	// Function /Script/FortniteUI.AthenaHUDContext.TakeLookStickInputFromHUD
	// void TakeLookStickInputFromHUD(FVector2D LookStickPosition);                                                             // [0x91e1d14] Final|Native|Public|HasDefaults|BlueprintCallable 
	// Function /Script/FortniteUI.AthenaHUDContext.TakeLookInputFromHUD
	// void TakeLookInputFromHUD(FRotator LookRotator);                                                                         // [0x91e1bac] Final|Native|Public|HasDefaults|BlueprintCallable 
	// Function /Script/FortniteUI.AthenaHUDContext.TakeItemSelectionInputFromHUD
	// void TakeItemSelectionInputFromHUD(int32_t TouchIndex, int32_t SlotIdx, bool& bIsUsing, EFortQuickBars InQuickBar, bool bReloadOrUseIfAlreadySelected, bool bStopUseImmediately); // [0x91e18a0] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/FortniteUI.AthenaHUDContext.SwitchToPrimaryQuickbar
	// void SwitchToPrimaryQuickbar();                                                                                          // [0x91e1874] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.AthenaHUDContext.SwapQuickBarFocusFromHUD
	// void SwapQuickBarFocusFromHUD(EFortQuickBars InQuickBar, int32_t SlotOverride);                                          // [0x91e179c] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.AthenaHUDContext.StopTargettingFromHUD
	// void StopTargettingFromHUD();                                                                                            // [0x91e1764] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.AthenaHUDContext.StopItemSelectionInputFromHUD
	// void StopItemSelectionInputFromHUD(int32_t TouchIndex, int32_t SlotIdx, EFortQuickBars InQuickBar);                      // [0x91e166c] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.AthenaHUDContext.StartPostGameMenu
	// void StartPostGameMenu();                                                                                                // [0x91e1650] Final|Native|Public|BlueprintCallable|Const 
	// Function /Script/FortniteUI.AthenaHUDContext.SimpleFireStop
	// void SimpleFireStop();                                                                                                   // [0x91e1440] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.AthenaHUDContext.SimpleFireStart
	// void SimpleFireStart();                                                                                                  // [0x91e142c] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.AthenaHUDContext.ShowUrgentQuestMessage
	// void ShowUrgentQuestMessage(FUrgentQuestData& UrgentQuestData);                                                          // [0x91e1334] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/FortniteUI.AthenaHUDContext.ShowMobilePicker__DelegateSignature
	// void ShowMobilePicker__DelegateSignature();                                                                              // [0x1d9241c] MulticastDelegate|Public|Delegate 
	// Function /Script/FortniteUI.AthenaHUDContext.ShowMobilePicker
	// void ShowMobilePicker();                                                                                                 // [0x91e1318] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.AthenaHUDContext.ShowMarkerGameModeMessage
	// void ShowMarkerGameModeMessage(int32_t PlayerId, int32_t InstanceID);                                                    // [0x91e1238] Final|Native|Public|BlueprintCallable|Const 
	// Function /Script/FortniteUI.AthenaHUDContext.ShowGameModeMessage
	// void ShowGameModeMessage();                                                                                              // [0x91e1208] Final|Native|Public|BlueprintCallable|Const 
	// Function /Script/FortniteUI.AthenaHUDContext.ShouldVictoryUIPushEmoteInput
	// bool ShouldVictoryUIPushEmoteInput();                                                                                    // [0x91e11cc] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.AthenaHUDContext.ShouldPlayCustomEndScreenAtLoss
	// bool ShouldPlayCustomEndScreenAtLoss();                                                                                  // [0x91e1100] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.AthenaHUDContext.ShouldDisplayScoreUI
	// bool ShouldDisplayScoreUI();                                                                                             // [0x91e10dc] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.AthenaHUDContext.ShouldDisplayPlacement
	// bool ShouldDisplayPlacement();                                                                                           // [0x91e10b8] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.AthenaHUDContext.ShouldAlwaysDisplaySquadInfo
	// bool ShouldAlwaysDisplaySquadInfo();                                                                                     // [0x91e1034] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.AthenaHUDContext.SetTargetingToggleable
	// void SetTargetingToggleable(bool bNewValue);                                                                             // [0x91e0168] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.AthenaHUDContext.SetSelectWidgetToMoveMode
	// void SetSelectWidgetToMoveMode(bool bSet);                                                                               // [0x91dfd08] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.AthenaHUDContext.SetSelectedInventoryItem
	// void SetSelectedInventoryItem(UFortItem* Item);                                                                          // [0x91dfda4] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.AthenaHUDContext.SetResourceMaterial
	// void SetResourceMaterial(TEnumAsByte<EFortResourceType> NewMaterial);                                                    // [0x91dfa64] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.AthenaHUDContext.SetPTTState
	// void SetPTTState(EPTTState NewPushToTalkState);                                                                          // [0x91df5e8] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.AthenaHUDContext.SetPostGameWidgetPlacement
	// void SetPostGameWidgetPlacement(FName WidgetPlacement);                                                                  // [0x91df668] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.AthenaHUDContext.SetLockOnStickCoords
	// void SetLockOnStickCoords(FVector2D& LockOnCoords);                                                                      // [0x91df4cc] Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable 
	// Function /Script/FortniteUI.AthenaHUDContext.SetLocalPlayerWonMatch
	// void SetLocalPlayerWonMatch(bool bLocalPlayerWon);                                                                       // [0x91df44c] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.AthenaHUDContext.SelectWidgetToMove
	// void SelectWidgetToMove(UWidget* Widget);                                                                                // [0x91de6c0] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.AthenaHUDContext.ReloadFromHUD
	// void ReloadFromHUD();                                                                                                    // [0x91de694] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.AthenaHUDContext.RecoverFromPostGameMenu
	// void RecoverFromPostGameMenu();                                                                                          // [0x91de678] Final|Native|Public|BlueprintCallable|Const 
	// Function /Script/FortniteUI.AthenaHUDContext.PushGameOverEmoteInput
	// void PushGameOverEmoteInput();                                                                                           // [0x91de650] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.AthenaHUDContext.PTTStateChange__DelegateSignature
	// void PTTStateChange__DelegateSignature(EPTTState NewPushToTalkState);                                                    // [0x1d9241c] MulticastDelegate|Public|Delegate 
	// Function /Script/FortniteUI.AthenaHUDContext.OwnerOrWeaponHasTag
	// bool OwnerOrWeaponHasTag(FGameplayTag InTag);                                                                            // [0x91de4f0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.AthenaHUDContext.OverrideInventoryPanel
	// void OverrideInventoryPanel(UUserWidget* Widget);                                                                        // [0x91de460] Final|Native|Public|BlueprintCallable|Const 
	// Function /Script/FortniteUI.AthenaHUDContext.OnStartPostGameMenu__DelegateSignature
	// void OnStartPostGameMenu__DelegateSignature();                                                                           // [0x1d9241c] MulticastDelegate|Public|Delegate 
	// Function /Script/FortniteUI.AthenaHUDContext.OnSpecialActorListChanged__DelegateSignature
	// void OnSpecialActorListChanged__DelegateSignature();                                                                     // [0x1d9241c] MulticastDelegate|Public|Delegate 
	// Function /Script/FortniteUI.AthenaHUDContext.OnSignalQualityChange__DelegateSignature
	// void OnSignalQualityChange__DelegateSignature(float NewQuality);                                                         // [0x1d9241c] MulticastDelegate|Public|Delegate 
	// Function /Script/FortniteUI.AthenaHUDContext.OnShowUrgentQuestMessage__DelegateSignature
	// void OnShowUrgentQuestMessage__DelegateSignature(FUrgentQuestData& UrgentQuestData, float EventTimeRemaining);           // [0x1d9241c] MulticastDelegate|Public|Delegate|HasOutParms 
	// Function /Script/FortniteUI.AthenaHUDContext.OnResurrectingNow__DelegateSignature
	// void OnResurrectingNow__DelegateSignature(bool bResurrectingNow);                                                        // [0x1d9241c] MulticastDelegate|Public|Delegate 
	// Function /Script/FortniteUI.AthenaHUDContext.OnRecoverFromPostGameMenu__DelegateSignature
	// void OnRecoverFromPostGameMenu__DelegateSignature();                                                                     // [0x1d9241c] MulticastDelegate|Public|Delegate 
	// Function /Script/FortniteUI.AthenaHUDContext.OnReadyForWinnerInfoDisplay
	// void OnReadyForWinnerInfoDisplay();                                                                                      // [0x91de44c] Final|Native|Private 
	// Function /Script/FortniteUI.AthenaHUDContext.OnPostGameWidgetPlacement__DelegateSignature
	// void OnPostGameWidgetPlacement__DelegateSignature(FName WidgetPlacement);                                                // [0x1d9241c] MulticastDelegate|Public|Delegate 
	// Function /Script/FortniteUI.AthenaHUDContext.OnPlaylistExtensionWidgetCreatedNotSupported__DelegateSignature
	// void OnPlaylistExtensionWidgetCreatedNotSupported__DelegateSignature(EUIExtensionSlot ExtensionSlot, UUserWidget* Widget); // [0x1d9241c] MulticastDelegate|Public|Delegate 
	// Function /Script/FortniteUI.AthenaHUDContext.OnPlayerNameChange__DelegateSignature
	// void OnPlayerNameChange__DelegateSignature(FString NewName);                                                             // [0x1d9241c] MulticastDelegate|Public|Delegate 
	// Function /Script/FortniteUI.AthenaHUDContext.OnPlayerFiredWeapon__DelegateSignature
	// void OnPlayerFiredWeapon__DelegateSignature();                                                                           // [0x1d9241c] MulticastDelegate|Public|Delegate 
	// Function /Script/FortniteUI.AthenaHUDContext.OnPawnEmoteStopped__DelegateSignature
	// void OnPawnEmoteStopped__DelegateSignature(UFortItemDefinition* MontageItemDef, AFortPawn* PawnEmoting);                 // [0x1d9241c] MulticastDelegate|Public|Delegate 
	// Function /Script/FortniteUI.AthenaHUDContext.OnOverrideInventoryPanel__DelegateSignature
	// void OnOverrideInventoryPanel__DelegateSignature(UUserWidget* Widget);                                                   // [0x1d9241c] MulticastDelegate|Public|Delegate 
	// Function /Script/FortniteUI.AthenaHUDContext.OnLowPerformanceMode__DelegateSignature
	// void OnLowPerformanceMode__DelegateSignature(bool bInLowPerformanceMode);                                                // [0x1d9241c] MulticastDelegate|Public|Delegate 
	// Function /Script/FortniteUI.AthenaHUDContext.OnLocalTeamWon__DelegateSignature
	// void OnLocalTeamWon__DelegateSignature();                                                                                // [0x1d9241c] MulticastDelegate|Public|Delegate 
	// Function /Script/FortniteUI.AthenaHUDContext.OnLocalTeamLost__DelegateSignature
	// void OnLocalTeamLost__DelegateSignature();                                                                               // [0x1d9241c] MulticastDelegate|Public|Delegate 
	// Function /Script/FortniteUI.AthenaHUDContext.OnLocalPlayerWon__DelegateSignature
	// void OnLocalPlayerWon__DelegateSignature();                                                                              // [0x1d9241c] MulticastDelegate|Public|Delegate 
	// Function /Script/FortniteUI.AthenaHUDContext.OnLocalPlayerLost__DelegateSignature
	// void OnLocalPlayerLost__DelegateSignature(EEndOfMatchReason LostReason);                                                 // [0x1d9241c] MulticastDelegate|Public|Delegate 
	// Function /Script/FortniteUI.AthenaHUDContext.OnLocalPlayerKilledPlayer__DelegateSignature
	// void OnLocalPlayerKilledPlayer__DelegateSignature(AFortPlayerStateAthena* Player);                                       // [0x1d9241c] MulticastDelegate|Public|Delegate 
	// Function /Script/FortniteUI.AthenaHUDContext.OnLocalPlayerDeathOnWin__DelegateSignature
	// void OnLocalPlayerDeathOnWin__DelegateSignature();                                                                       // [0x1d9241c] MulticastDelegate|Public|Delegate 
	// Function /Script/FortniteUI.AthenaHUDContext.OnLocalPlayerDBNOStateChanged__DelegateSignature
	// void OnLocalPlayerDBNOStateChanged__DelegateSignature(bool bIsDBNO);                                                     // [0x1d9241c] MulticastDelegate|Public|Delegate 
	// Function /Script/FortniteUI.AthenaHUDContext.OnLocalPlayerBeginSkydiving__DelegateSignature
	// void OnLocalPlayerBeginSkydiving__DelegateSignature();                                                                   // [0x1d9241c] MulticastDelegate|Public|Delegate 
	// Function /Script/FortniteUI.AthenaHUDContext.OnForwardStartedFalling__DelegateSignature
	// void OnForwardStartedFalling__DelegateSignature();                                                                       // [0x1d9241c] MulticastDelegate|Public|Delegate 
	// Function /Script/FortniteUI.AthenaHUDContext.OnForceStartPostGameFlow__DelegateSignature
	// void OnForceStartPostGameFlow__DelegateSignature();                                                                      // [0x1d9241c] MulticastDelegate|Public|Delegate 
	// Function /Script/FortniteUI.AthenaHUDContext.OnForceAllQuickbarsMinimizedChanged__DelegateSignature
	// void OnForceAllQuickbarsMinimizedChanged__DelegateSignature(bool bEnabled);                                              // [0x1d9241c] MulticastDelegate|Public|Delegate 
	// Function /Script/FortniteUI.AthenaHUDContext.OnFireStopped__DelegateSignature
	// void OnFireStopped__DelegateSignature(int32_t StopFireIndex);                                                            // [0x1d9241c] MulticastDelegate|Public|Delegate 
	// Function /Script/FortniteUI.AthenaHUDContext.OnDuelStarted__DelegateSignature
	// void OnDuelStarted__DelegateSignature(EDuelState DuelState, FDuelOverlayData& DuelOverlayData);                          // [0x1d9241c] MulticastDelegate|Public|Delegate|HasOutParms 
	// Function /Script/FortniteUI.AthenaHUDContext.OnClearPlaylistExtensionWidgetNotSupported__DelegateSignature
	// void OnClearPlaylistExtensionWidgetNotSupported__DelegateSignature();                                                    // [0x1d9241c] MulticastDelegate|Public|Delegate 
	// Function /Script/FortniteUI.AthenaHUDContext.OnCanPTTChange__DelegateSignature
	// void OnCanPTTChange__DelegateSignature();                                                                                // [0x1d9241c] MulticastDelegate|Public|Delegate 
	// Function /Script/FortniteUI.AthenaHUDContext.OnAthenaHUDAllWinnersAnnounced__DelegateSignature
	// void OnAthenaHUDAllWinnersAnnounced__DelegateSignature(FAthenaWinnerInfo& WinnerInfo);                                   // [0x1d9241c] MulticastDelegate|Public|Delegate|HasOutParms 
	// Function /Script/FortniteUI.AthenaHUDContext.OnAthenaAutoFireChanged__DelegateSignature
	// void OnAthenaAutoFireChanged__DelegateSignature(bool bEntering);                                                         // [0x1d9241c] MulticastDelegate|Public|Delegate 
	// Function /Script/FortniteUI.AthenaHUDContext.OnAllWinnersAnnounced
	// void OnAllWinnersAnnounced();                                                                                            // [0x91de324] Final|Native|Private 
	// Function /Script/FortniteUI.AthenaHUDContext.LookFireFromHUDStop
	// void LookFireFromHUDStop(int32_t TouchIndex, UWidget* DebugWidget);                                                      // [0x91de188] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.AthenaHUDContext.LookFireFromHUDStart
	// void LookFireFromHUDStart(int32_t TouchIndex, UWidget* DebugWidget);                                                     // [0x91de0c4] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.AthenaHUDContext.JumpFromHudStart
	// void JumpFromHudStart(int32_t TouchIndex);                                                                               // [0x91de000] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.AthenaHUDContext.JumpFromHudEnd
	// void JumpFromHudEnd();                                                                                                   // [0x91ddfec] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.AthenaHUDContext.IsVictoryUICinematic
	// bool IsVictoryUICinematic();                                                                                             // [0x91ddfb0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.AthenaHUDContext.IsUsingScope
	// bool IsUsingScope();                                                                                                     // [0x91ddf8c] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.AthenaHUDContext.IsTargeting
	// bool IsTargeting();                                                                                                      // [0x91ddf18] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.AthenaHUDContext.IsRunningOnBattery
	// bool IsRunningOnBattery();                                                                                               // [0x91ddee0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.AthenaHUDContext.IsOperatingTurret
	// bool IsOperatingTurret();                                                                                                // [0x91ddea0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.AthenaHUDContext.IsMovingSelectedWidget
	// bool IsMovingSelectedWidget();                                                                                           // [0x91dde4c] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.AthenaHUDContext.IsInSelectWidgetToMoveMode
	// bool IsInSelectWidgetToMoveMode();                                                                                       // [0x91dde34] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.AthenaHUDContext.IsInBuildMode
	// bool IsInBuildMode();                                                                                                    // [0x91dddf4] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.AthenaHUDContext.IsFiringFromTouch
	// bool IsFiringFromTouch(int32_t TouchIndex);                                                                              // [0x91ddd68] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.AthenaHUDContext.IsCurrentWeaponFiring
	// bool IsCurrentWeaponFiring();                                                                                            // [0x91ddcfc] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.AthenaHUDContext.IsCurrentWeaponChargeable
	// bool IsCurrentWeaponChargeable();                                                                                        // [0x91ddcd8] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.AthenaHUDContext.IsCrouching
	// bool IsCrouching();                                                                                                      // [0x91ddc9c] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.AthenaHUDContext.IsAutoRunEnabled
	// bool IsAutoRunEnabled();                                                                                                 // [0x91ddc78] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.AthenaHUDContext.IsActionBound
	// bool IsActionBound(FName ActionName);                                                                                    // [0x91ddb7c] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.AthenaHUDContext.HideGameModeMessage
	// void HideGameModeMessage();                                                                                              // [0x91ddb4c] Final|Native|Public|BlueprintCallable|Const 
	// Function /Script/FortniteUI.AthenaHUDContext.HasWifi
	// bool HasWifi();                                                                                                          // [0x2c6cedc] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.AthenaHUDContext.HasLockOnTarget
	// bool HasLockOnTarget();                                                                                                  // [0x91dda78] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.AthenaHUDContext.HasFiringTouch
	// bool HasFiringTouch();                                                                                                   // [0x91dda5c] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.AthenaHUDContext.HasAutofireTarget
	// bool HasAutofireTarget();                                                                                                // [0x91dda38] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.AthenaHUDContext.HandleWeaponChanged
	// void HandleWeaponChanged(AFortPawn* InPawn, AFortWeapon* InNewWeapon, AFortWeapon* InPlayerWeapon);                      // [0x91dd8f0] Final|Native|Private 
	// Function /Script/FortniteUI.AthenaHUDContext.HandleUIGameplayCue
	// void HandleUIGameplayCue(FName CueName, TEnumAsByte<EGameplayCueEvent> EventType, FGameplayCueParameters& Parameters);   // [0x2af3f04] Final|Native|Private|HasOutParms 
	// Function /Script/FortniteUI.AthenaHUDContext.HandleSpectatorViewTargetChanged
	// void HandleSpectatorViewTargetChanged();                                                                                 // [0x91dd8dc] Final|Native|Private 
	// Function /Script/FortniteUI.AthenaHUDContext.HandlePawnEmoteStopped
	// void HandlePawnEmoteStopped(UFortItemDefinition* MontageItemDef, AFortPawn* PawnEmoting);                                // [0x91dd6b8] Final|Native|Private 
	// Function /Script/FortniteUI.AthenaHUDContext.HandleOnNPCUnconvertEvent
	// void HandleOnNPCUnconvertEvent(AFortPawn* UnconvertedFortPawn, EUnconvertReason UnconvertReason);                        // [0x91dd450] Final|Native|Private 
	// Function /Script/FortniteUI.AthenaHUDContext.HandleOnNPCConvertEvent
	// void HandleOnNPCConvertEvent(AFortPawn* ConvertedFortPawn);                                                              // [0x91dd1dc] Final|Native|Private 
	// Function /Script/FortniteUI.AthenaHUDContext.HandleLocalPlayerDBNOStateChanged
	// void HandleLocalPlayerDBNOStateChanged(AFortPawn* FortPawn, bool bIsDBNO);                                               // [0x2eb75fc] Final|Native|Private 
	// Function /Script/FortniteUI.AthenaHUDContext.HandleLocalPlayerBeginSkydiving
	// void HandleLocalPlayerBeginSkydiving();                                                                                  // [0x91dd1c8] Final|Native|Private 
	// Function /Script/FortniteUI.AthenaHUDContext.GetWinnerText
	// void GetWinnerText(FText& ReturnText, FText& WinnerName);                                                                // [0x91dcf38] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/FortniteUI.AthenaHUDContext.GetVictoryText
	// FText GetVictoryText();                                                                                                  // [0x91dce90] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.AthenaHUDContext.GetVictoryStinger
	// USoundCue* GetVictoryStinger();                                                                                          // [0x91dce6c] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.AthenaHUDContext.GetTouchInteractMode
	// ETouchInteractMode GetTouchInteractMode();                                                                               // [0x91dce24] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.AthenaHUDContext.GetSquadSize
	// int32_t GetSquadSize();                                                                                                  // [0x91dccc8] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.AthenaHUDContext.GetSquadConnectedCount
	// int32_t GetSquadConnectedCount();                                                                                        // [0x91dcc88] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.AthenaHUDContext.GetPTTState
	// EPTTState GetPTTState();                                                                                                 // [0x3310594] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.AthenaHUDContext.GetPlayerName
	// FString GetPlayerName();                                                                                                 // [0x91dc528] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.AthenaHUDContext.GetPlayerColor
	// FLinearColor GetPlayerColor();                                                                                           // [0x91dc33c] Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.AthenaHUDContext.GetLocalTime
	// void GetLocalTime(int32_t& Hours, int32_t& Minutes);                                                                     // [0x91dc230] Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.AthenaHUDContext.GetLocalPlayerWonMatch
	// bool GetLocalPlayerWonMatch();                                                                                           // [0x91dc218] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.AthenaHUDContext.GetJumpPressedTouchIndex
	// int32_t GetJumpPressedTouchIndex();                                                                                      // [0x3310760] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.AthenaHUDContext.GetInteractPressedTouchIndex
	// int32_t GetInteractPressedTouchIndex();                                                                                  // [0x33102c4] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.AthenaHUDContext.GetInLowPerformanceMode
	// bool GetInLowPerformanceMode();                                                                                          // [0x3309aa8] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.AthenaHUDContext.GetHUDInfoDataAsset
	// UFortAthenaHUDInfoDataAsset* GetHUDInfoDataAsset();                                                                      // [0x91dc138] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.AthenaHUDContext.GetGliderDisplayName
	// FText GetGliderDisplayName();                                                                                            // [0x91dc0f4] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.AthenaHUDContext.GetGameOverDelayTime
	// float GetGameOverDelayTime();                                                                                            // [0x91dc0cc] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.AthenaHUDContext.GetCustomDBNOWidgetClass
	// TWeakObjectPtr<UClass*> GetCustomDBNOWidgetClass();                                                                      // [0x91dc04c] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.AthenaHUDContext.GetCustomDBNOReviveMaterial
	// TWeakObjectPtr<UMaterialInterface*> GetCustomDBNOReviveMaterial();                                                       // [0x91dc008] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.AthenaHUDContext.GetCanPTT
	// bool GetCanPTT();                                                                                                        // [0x33105ac] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.AthenaHUDContext.GetBoundActions
	// TArray<FName> GetBoundActions();                                                                                         // [0x91dbca8] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.AthenaHUDContext.GetBatteryLevel
	// float GetBatteryLevel();                                                                                                 // [0x79d8448] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.AthenaHUDContext.ForwardOnSpecialActorListChanged
	// void ForwardOnSpecialActorListChanged(FSpecialActorRepData& SpecialActorData);                                           // [0x91dbb2c] Final|Native|Private|HasOutParms 
	// Function /Script/FortniteUI.AthenaHUDContext.ForceVictoryRoyaleUI
	// void ForceVictoryRoyaleUI();                                                                                             // [0x91dbb18] Final|Native|Public  
	// Function /Script/FortniteUI.AthenaHUDContext.ForceStartPostGameFlow
	// void ForceStartPostGameFlow();                                                                                           // [0x91dbb04] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.AthenaHUDContext.ForceFireFromHUDStop
	// void ForceFireFromHUDStop();                                                                                             // [0x91dbac0] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.AthenaHUDContext.FireFromHUDStop
	// void FireFromHUDStop(int32_t TouchIndex, UWidget* DebugWidget);                                                          // [0x91db9fc] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.AthenaHUDContext.FireFromHUDStart
	// void FireFromHUDStart(int32_t TouchIndex, UWidget* DebugWidget);                                                         // [0x91db938] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.AthenaHUDContext.ExecuteActionNameFromHUDWithEventType
	// void ExecuteActionNameFromHUDWithEventType(FName ActionName, TEnumAsByte<EInputEvent> KeyEvent);                         // [0x91db874] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.AthenaHUDContext.ExecuteActionNameFromHUD
	// void ExecuteActionNameFromHUD(FName ActionName);                                                                         // [0x91db7f0] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.AthenaHUDContext.EndUseFromHUD
	// void EndUseFromHUD();                                                                                                    // [0x91db7c4] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.AthenaHUDContext.EnableAutoRunFromHUD
	// void EnableAutoRunFromHUD(bool bEnable);                                                                                 // [0x91db744] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.AthenaHUDContext.DoesPlaylistUIExtensionSlotContainWidget
	// bool DoesPlaylistUIExtensionSlotContainWidget(EUIExtensionSlot PlaylistSlot);                                            // [0x91db674] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.AthenaHUDContext.DisplayPlayerWonTime
	// float DisplayPlayerWonTime();                                                                                            // [0x91db64c] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.AthenaHUDContext.CycleQuickbar
	// void CycleQuickbar();                                                                                                    // [0x91db624] Final|Native|Public|BlueprintCallable|Const 
	// Function /Script/FortniteUI.AthenaHUDContext.CurrentWeaponAllowsTargeting
	// bool CurrentWeaponAllowsTargeting();                                                                                     // [0x91db600] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.AthenaHUDContext.CanShootInVehicle
	// bool CanShootInVehicle();                                                                                                // [0x91db5ac] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.AthenaHUDContext.CanCurrentWeaponAutoFireFromReticle
	// bool CanCurrentWeaponAutoFireFromReticle();                                                                              // [0x91db564] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.AthenaHUDContext.CanAutoRun
	// bool CanAutoRun();                                                                                                       // [0x91db540] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.AthenaHUDContext.BeginUseFromHUD
	// void BeginUseFromHUD();                                                                                                  // [0x91db518] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/FortniteUI.AthenaInventoryContext
/// Size: 0x0060 (0x000030 - 0x000090)
class UAthenaInventoryContext : public UBlueprintContextBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 144;

public:
	SMember(FMulticastInlineDelegate)                  OnInventoryItemSelected                                     OFFSET(getStruct<T>, {0x30, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnInventorySwapStarted                                      OFFSET(getStruct<T>, {0x40, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnInventorySwapComplete                                     OFFSET(getStruct<T>, {0x50, 16, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.AthenaInventoryContext.StartOrFinishSwap
	// void StartOrFinishSwap(int32_t SlotIndex);                                                                               // [0x91e15d0] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.AthenaInventoryContext.SetSelectedInventoryItem
	// void SetSelectedInventoryItem(UFortItem* Item);                                                                          // [0x91dfe24] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.AthenaInventoryContext.OnAthenaInventorySwapStarted__DelegateSignature
	// void OnAthenaInventorySwapStarted__DelegateSignature(int32_t SlotIndex);                                                 // [0x1d9241c] MulticastDelegate|Public|Delegate 
	// Function /Script/FortniteUI.AthenaInventoryContext.OnAthenaInventorySwapComplete__DelegateSignature
	// void OnAthenaInventorySwapComplete__DelegateSignature();                                                                 // [0x1d9241c] MulticastDelegate|Public|Delegate 
	// Function /Script/FortniteUI.AthenaInventoryContext.OnAthenaInventoryItemSelected__DelegateSignature
	// void OnAthenaInventoryItemSelected__DelegateSignature(UFortItem* Item);                                                  // [0x1d9241c] MulticastDelegate|Public|Delegate 
	// Function /Script/FortniteUI.AthenaInventoryContext.IsSwapping
	// bool IsSwapping();                                                                                                       // [0x91ddf04] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.AthenaInventoryContext.GetSelectedInventoryItem
	// UFortItem* GetSelectedInventoryItem();                                                                                   // [0x91dcc64] Final|RequiredAPI|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.AthenaInventoryContext.CancelSwap
	// void CancelSwap();                                                                                                       // [0x91db5ec] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/FortniteUI.AthenaSpectatorUIContext
/// Size: 0x01F0 (0x000030 - 0x000220)
class UAthenaSpectatorUIContext : public UBlueprintContextBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 544;

public:
	CMember(TMap<FUniqueNetIdRepl, UAthenaRemotePlayerViewData*>) PlayerDataMap                                    OFFSET(get<T>, {0x30, 80, 0, 0})
	CMember(TMap<char, UAthenaRemoteSquadViewData*>)   InSessionSquadDataMap                                       OFFSET(get<T>, {0x80, 80, 0, 0})
	CMember(AFortPlayerControllerSpectating*)          SpectatingPC                                                OFFSET(get<T>, {0x120, 8, 0, 0})
	SMember(FUniqueNetIdRepl)                          FollowedPlayerUID                                           OFFSET(getStruct<T>, {0x128, 48, 0, 0})
	SMember(FUniqueNetIdRepl)                          ReplayRelevancyPlayerUID                                    OFFSET(getStruct<T>, {0x158, 48, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.AthenaSpectatorUIContext.OnPlayerStateAdded
	// void OnPlayerStateAdded(AFortPlayerStateAthena* FPSA);                                                                   // [0x2b2d250] Final|Native|Private 
	// Function /Script/FortniteUI.AthenaSpectatorUIContext.OnPlayerControllerSet
	// void OnPlayerControllerSet();                                                                                            // [0x91de438] Final|Native|Private 
	// Function /Script/FortniteUI.AthenaSpectatorUIContext.OnPlayerBecameRelevant
	// void OnPlayerBecameRelevant(AFortPlayerState* FPS);                                                                      // [0x1915028] Final|Native|Private 
	// Function /Script/FortniteUI.AthenaSpectatorUIContext.OnPlayerBecameIrrelevant
	// void OnPlayerBecameIrrelevant(AFortPlayerState* FPS);                                                                    // [0x1914f00] Final|Native|Private 
	// Function /Script/FortniteUI.AthenaSpectatorUIContext.OnPawnForReplayRelevancyChanged
	// void OnPawnForReplayRelevancyChanged(AFortPawn* InPawnForReplayRelevancy);                                               // [0x91de3b8] Final|Native|Private 
	// Function /Script/FortniteUI.AthenaSpectatorUIContext.OnGameStateSet
	// void OnGameStateSet(AFortGameState* InGameState);                                                                        // [0x91de338] Final|Native|Private 
	// Function /Script/FortniteUI.AthenaSpectatorUIContext.OnFollowedPlayerChanged
	// void OnFollowedPlayerChanged(AFortPlayerControllerSpectating* SpectatorPC, AFortPlayerState* NewFollowedPlayer);         // [0x2b3898c] Final|Native|Private 
	// Function /Script/FortniteUI.AthenaSpectatorUIContext.GetPlayerData
	// UAthenaRemotePlayerViewData* GetPlayerData(FUniqueNetIdRepl PlayerUID);                                                  // [0x91dc384] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.AthenaSpectatorUIContext.GetPipMode
	// bool GetPipMode();                                                                                                       // [0x91dc324] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.AthenaSpectatorUIContext.GetFollowedPlayerData
	// UAthenaRemotePlayerViewData* GetFollowedPlayerData();                                                                    // [0x91dc0a8] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/FortniteUI.CMSContext
/// Size: 0x0688 (0x000030 - 0x0006B8)
class UCMSContext : public UBlueprintContextBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1720;

public:
	SMember(FCmsJsonMessages)                          CachedCmsMessages                                           OFFSET(getStruct<T>, {0x148, 616, 0, 0})
	CMember(UFortPlayerSurveyInterpreter*)             PlayerSurveyInterpreter                                     OFFSET(get<T>, {0x3B8, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.CMSContext.ShouldAutoOpenNews
	// bool ShouldAutoOpenNews();                                                                                               // [0x91e1058] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.CMSContext.MarkPlaylistInformationAsViewed
	// void MarkPlaylistInformationAsViewed();                                                                                  // [0x91de2d4] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.CMSContext.MarkNewsAsShown
	// void MarkNewsAsShown();                                                                                                  // [0x91de24c] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.CMSContext.IsNewPlaylistInformationAvailable
	// bool IsNewPlaylistInformationAvailable();                                                                                // [0x91dde88] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.CMSContext.HasScoringRuleDisplayInfo
	// bool HasScoringRuleDisplayInfo(FName RuleName);                                                                          // [0x91dda9c] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.CMSContext.GetSurvivalCMSText
	// bool GetSurvivalCMSText(FText& Title, FText& Body);                                                                      // [0x91dcd0c] Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.CMSContext.GetScoringRuleDisplayInfo
	// FFortShowdownScoringRuleDisplayInfo GetScoringRuleDisplayInfo(FName RuleName);                                           // [0x91dcbb0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.CMSContext.GetLatestSubgameInfo
	// FSubgameScreenSource GetLatestSubgameInfo();                                                                             // [0x91dc1d4] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.CMSContext.GetLatestDynamicBackgrounds
	// FDynamicBackgroundsSource GetLatestDynamicBackgrounds();                                                                 // [0x91dc198] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.CMSContext.GetLatestCreativeAds
	// FCreativeAdSource GetLatestCreativeAds();                                                                                // [0x91dc15c] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/FortniteUI.CreativeHUDLContext
/// Size: 0x0140 (0x000030 - 0x000170)
class UCreativeHUDLContext : public UBlueprintContextBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 368;

public:
	SMember(FMulticastInlineDelegate)                  OnRotationAxisChanged                                       OFFSET(getStruct<T>, {0x30, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnScaleAxisChanged                                          OFFSET(getStruct<T>, {0x40, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnCreativeGhostChanged                                      OFFSET(getStruct<T>, {0x50, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnCreativeInvulnerableChanged                               OFFSET(getStruct<T>, {0x60, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnCreativeHeatmapToggled                                    OFFSET(getStruct<T>, {0x70, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnDropToFloorChanged                                        OFFSET(getStruct<T>, {0x80, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnPrecisionChanged                                          OFFSET(getStruct<T>, {0x90, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnMoveToolLineOfSightBlockingChanged                        OFFSET(getStruct<T>, {0xA0, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnMoveToolEquippedChanged                                   OFFSET(getStruct<T>, {0xB0, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnMoveToolScaleModified                                     OFFSET(getStruct<T>, {0xC0, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnCreativeQuickMenuDisplayedChanged                         OFFSET(getStruct<T>, {0xD0, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnMoveToolRotationModified                                  OFFSET(getStruct<T>, {0xE0, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnCreativeQuickbarEnabledChanged                            OFFSET(getStruct<T>, {0xF0, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnCreativeModeEnabledChanged                                OFFSET(getStruct<T>, {0x100, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnCreativeQuickbarActiveChanged                             OFFSET(getStruct<T>, {0x110, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnCreativeQuickbarEquippedChanged                           OFFSET(getStruct<T>, {0x120, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnPropPlaySoundCountdownChanged                             OFFSET(getStruct<T>, {0x130, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnPropLockInPlaceChanged                                    OFFSET(getStruct<T>, {0x140, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnIsCreativeModeratorModeActiveChanged                      OFFSET(getStruct<T>, {0x150, 16, 0, 0})
	CMember(AFortCreativeMoveTool*)                    CurrentMoveTool                                             OFFSET(get<T>, {0x160, 8, 0, 0})
	DMember(bool)                                      bPropLockedInPlace                                          OFFSET(get<bool>, {0x168, 1, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.CreativeHUDLContext.OnWeaponEquipped
	// void OnWeaponEquipped(AFortWeapon* NewWeapon, AFortWeapon* PrevWeapon);                                                  // [0x92064dc] Final|Native|Public  
	// Function /Script/FortniteUI.CreativeHUDLContext.OnPlayerPawnSet
	// void OnPlayerPawnSet();                                                                                                  // [0x92064c8] Final|Native|Public  
	// Function /Script/FortniteUI.CreativeHUDLContext.OnPlayerControllerSet
	// void OnPlayerControllerSet();                                                                                            // [0x92064b4] Final|Native|Public  
	// Function /Script/FortniteUI.CreativeHUDLContext.OnCreativeQuickbarComponentLoaded
	// void OnCreativeQuickbarComponentLoaded();                                                                                // [0x92064a0] Final|Native|Public  
	// Function /Script/FortniteUI.CreativeHUDLContext.IsPropLockedInPlace
	// bool IsPropLockedInPlace();                                                                                              // [0x2eb6f1c] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.CreativeHUDLContext.HandleOnCreativeModeEnabledChanged
	// void HandleOnCreativeModeEnabledChanged(bool bIsEnabled);                                                                // [0x92058b8] Final|Native|Public  
	// Function /Script/FortniteUI.CreativeHUDLContext.GetScaleAxis
	// EScaleAxis GetScaleAxis();                                                                                               // [0x9203994] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.CreativeHUDLContext.GetRotationAxis
	// FRotator GetRotationAxis();                                                                                              // [0x920392c] Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.CreativeHUDLContext.GetPrecisionLevel
	// void GetPrecisionLevel(bool& SnappingEnabled, char& GridSnappingIndex);                                                  // [0x9203784] Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.CreativeHUDLContext.GetOwningPlayerState
	// AFortPlayerState* GetOwningPlayerState();                                                                                // [0x920328c] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.CreativeHUDLContext.GetOwningPlayerPawn
	// AFortPlayerPawn* GetOwningPlayerPawn();                                                                                  // [0x9203268] Final|Native|Public|Const 
	// Function /Script/FortniteUI.CreativeHUDLContext.GetDropToFloorEnabled
	// bool GetDropToFloorEnabled();                                                                                            // [0x9200a84] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.CreativeHUDLContext.GetCurrentHitTraceRule
	// EHitTraceRule GetCurrentHitTraceRule();                                                                                  // [0x91ff454] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.CreativeHUDLContext.GetCreativeItemListSourceFromPlaylist
	// UDataTable* GetCreativeItemListSourceFromPlaylist();                                                                     // [0x91fe9ec] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.CreativeHUDLContext.ForwardOnScaleAxisChanged
	// void ForwardOnScaleAxisChanged(EScaleAxis Axis);                                                                         // [0x91fd8dc] Final|Native|Public  
	// Function /Script/FortniteUI.CreativeHUDLContext.ForwardOnRotationAxisChanged
	// void ForwardOnRotationAxisChanged(char AxisIndex);                                                                       // [0x91fd85c] Final|Native|Public  
	// Function /Script/FortniteUI.CreativeHUDLContext.ForwardOnPropLockedInPlacedChanged
	// void ForwardOnPropLockedInPlacedChanged(bool bLockedInPlace);                                                            // [0x91fd7c8] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.CreativeHUDLContext.ForwardOnPrecisionChanged
	// void ForwardOnPrecisionChanged(bool bPrecisionOn, char GridSnapIndex);                                                   // [0x91fd704] Final|Native|Public  
	// Function /Script/FortniteUI.CreativeHUDLContext.ForwardOnMoveToolScaleModified
	// void ForwardOnMoveToolScaleModified(FVector currentVector);                                                              // [0x91fd51c] Final|Native|Public|HasDefaults 
	// Function /Script/FortniteUI.CreativeHUDLContext.ForwardOnMoveToolRotationModified
	// void ForwardOnMoveToolRotationModified(FQuat currentRotationOffset);                                                     // [0x91fd3b4] Final|Native|Public|HasDefaults 
	// Function /Script/FortniteUI.CreativeHUDLContext.ForwardOnLOSChanged
	// void ForwardOnLOSChanged(EHitTraceRule HitTraceRule);                                                                    // [0x91fd318] Final|Native|Public  
	// Function /Script/FortniteUI.CreativeHUDLContext.ForwardOnDropToFloorChanged
	// void ForwardOnDropToFloorChanged(bool bDropToFloorOn);                                                                   // [0x91fd298] Final|Native|Public  
	// Function /Script/FortniteUI.CreativeHUDLContext.ForwardOnCreativeQuickMenuDisplayedChanged
	// void ForwardOnCreativeQuickMenuDisplayedChanged(bool bIsDisplayed);                                                      // [0x91fd088] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.CreativeHUDLContext.ForwardOnCreativeQuickbarEquippedChanged
	// void ForwardOnCreativeQuickbarEquippedChanged(bool bIsEquipped);                                                         // [0x91fd218] Final|Native|Public  
	// Function /Script/FortniteUI.CreativeHUDLContext.ForwardOnCreativeQuickbarEnabledChanged
	// void ForwardOnCreativeQuickbarEnabledChanged(bool bIsEnabled);                                                           // [0x91fd198] Final|Native|Public  
	// Function /Script/FortniteUI.CreativeHUDLContext.ForwardOnCreativeQuickbarActiveChanged
	// void ForwardOnCreativeQuickbarActiveChanged(bool bIsActive);                                                             // [0x91fd118] Final|Native|Public  
	// Function /Script/FortniteUI.CreativeHUDLContext.ForwardOnCreativeInvulnerableChanged
	// void ForwardOnCreativeInvulnerableChanged(bool bIsInvulnerable);                                                         // [0x91fd008] Final|Native|Public  
	// Function /Script/FortniteUI.CreativeHUDLContext.ForwardOnCreativeHeatmapTogged
	// void ForwardOnCreativeHeatmapTogged(bool bIsHeatmapToggled);                                                             // [0x91fcf88] Final|Native|Public  
	// Function /Script/FortniteUI.CreativeHUDLContext.ForwardOnCreativeGhostChanged
	// void ForwardOnCreativeGhostChanged(bool bIsGhostEnabled);                                                                // [0x91fcf08] Final|Native|Public  
};

/// Class /Script/FortniteUI.FortAccountStatsContext
/// Size: 0x0000 (0x000030 - 0x000030)
class UFortAccountStatsContext : public UBlueprintContextBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 48;

public:
};

/// Class /Script/FortniteUI.FortActivityImageContext
/// Size: 0x0190 (0x000030 - 0x0001C0)
class UFortActivityImageContext : public UFortLocalPlayerSubsystem
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 448;

public:
	CMember(TMap<FString, FFortActivityImageCache>)    SmallCachedImageMap                                         OFFSET(get<T>, {0x30, 80, 0, 0})
	CMember(TMap<FString, FFortActivityImageCache>)    LargeCachedImageMap                                         OFFSET(get<T>, {0x80, 80, 0, 0})
	CMember(TMap<FString, FFortActivityCompressedImageCache>) CompressedImageMap                                   OFFSET(get<T>, {0xD0, 80, 0, 0})
	CMember(TMap<FString, FFortActivityImageRequest>)  PendingImageKeys                                            OFFSET(get<T>, {0x120, 80, 0, 0})
	CMember(TMap<FString, FFortActivityImageRequest>)  PendingCompressedImageKeys                                  OFFSET(get<T>, {0x170, 80, 0, 0})
};

/// Class /Script/FortniteUI.FortFrontEndContext
/// Size: 0x0418 (0x000030 - 0x000448)
class UFortFrontEndContext : public UFortLocalPlayerSubsystem
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1096;

public:
	SMember(FMulticastInlineDelegate)                  OnLobbyPlayerGadgetsClicked                                 OFFSET(getStruct<T>, {0x38, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnRadialPickerStatusChanged                                 OFFSET(getStruct<T>, {0x78, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnFrontEndCameraChanged                                     OFFSET(getStruct<T>, {0x88, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnTheaterPinClicked                                         OFFSET(getStruct<T>, {0x98, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnSetPreviewedSceneTheater                                  OFFSET(getStruct<T>, {0xA8, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnTheaterSelected                                           OFFSET(getStruct<T>, {0xB8, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnTheaterDataChanged                                        OFFSET(getStruct<T>, {0xC8, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnTheaterTileClicked                                        OFFSET(getStruct<T>, {0xD8, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnTheaterTileDoubleClicked                                  OFFSET(getStruct<T>, {0xF8, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnTheaterTileFocused                                        OFFSET(getStruct<T>, {0x108, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnTheaterTileUnfocused                                      OFFSET(getStruct<T>, {0x118, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnShouldShowPhoenixDisplayChanged                           OFFSET(getStruct<T>, {0x128, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnVaultItemViewed                                           OFFSET(getStruct<T>, {0x150, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnVaultItemsViewed                                          OFFSET(getStruct<T>, {0x160, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnSeasonTabVariantPreviewInfoChanged                        OFFSET(getStruct<T>, {0x170, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnPlayerLoggedOut                                           OFFSET(getStruct<T>, {0x190, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnMainTabSelected                                           OFFSET(getStruct<T>, {0x1B8, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnSocialImportClosed                                        OFFSET(getStruct<T>, {0x1C8, 16, 0, 0})
	SMember(FFortFrontEndFeatureStruct)                Features                                                    OFFSET(getStruct<T>, {0x1D8, 240, 0, 0})
	SMember(FUnlockableVariantPreviewInfo)             SeasonTabVariantPreviewInfo                                 OFFSET(getStruct<T>, {0x2D0, 40, 0, 0})
	CMember(UFortServerBrowserHelper*)                 ServerBrowserHelper                                         OFFSET(get<T>, {0x3E8, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortFrontEndContext.ViewVaultItemsFromOffer
	// void ViewVaultItemsFromOffer(FCatalogOffer& CatalogOffer, bool bIgnoreCurrentlyEquippedFavorites, EFortPawnDisplayContext DisplayContext); // [0x920c7a4] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/FortniteUI.FortFrontEndContext.ViewVaultItems
	// void ViewVaultItems(TArray<UFortItem*>& ItemsToView, bool bIgnoreCurrentlyEquippedFavorites, EFortPawnDisplayContext DisplayContext); // [0x920c4d0] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/FortniteUI.FortFrontEndContext.ViewVaultItemFromDefinition
	// void ViewVaultItemFromDefinition(UFortItemDefinition* ItemToViewDefinition, bool bIgnoreCurrentlyEquippedFavorites, EFortPawnDisplayContext DisplayContext); // [0x920c398] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortFrontEndContext.ViewVaultItem
	// void ViewVaultItem(UFortItem* ItemToView, bool bIgnoreCurrentlyEquippedFavorites, EFortPawnDisplayContext DisplayContext); // [0x920c28c] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortFrontEndContext.ShowSocialImport
	// UFortSocialImportPanel* ShowSocialImport(UClass* PanelClass);                                                            // [0x920b00c] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortFrontEndContext.ShouldShowSocialImport
	// bool ShouldShowSocialImport();                                                                                           // [0x920ad04] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortFrontEndContext.ShouldShowPhoenixDisplay
	// bool ShouldShowPhoenixDisplay();                                                                                         // [0x8af1f34] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortFrontEndContext.ShouldShowAccountItemWarning
	// bool ShouldShowAccountItemWarning();                                                                                     // [0x920ac74] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortFrontEndContext.SetSelectedTheater
	// void SetSelectedTheater(FString TheaterId);                                                                              // [0x920a59c] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortFrontEndContext.SetSeasonTabVariantPreviewInfo
	// void SetSeasonTabVariantPreviewInfo(FUnlockableVariantPreviewInfo Info);                                                 // [0x920a420] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortFrontEndContext.SetLocalVariantPreview
	// void SetLocalVariantPreview(UAthenaCosmeticItemDefinition* CosmeticItem, FGameplayTag VariantChannelTag, FGameplayTag VariantTag, FString CustomData); // [0x9209f1c] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortFrontEndContext.SetFrontEndVisibility
	// void SetFrontEndVisibility(bool bHideHeader, bool bHideFooter, bool bHideChatWidget);                                    // [0x9209b04] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortFrontEndContext.SetFrontEndCamera
	// void SetFrontEndCamera(EFrontEndCamera NewState, FViewTargetTransitionParams TransitionParams);                          // [0x21a0144] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortFrontEndContext.SetDefaultLocalVariantPreview
	// void SetDefaultLocalVariantPreview(UAthenaCosmeticItemDefinition* CosmeticItem);                                         // [0x92099a8] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortFrontEndContext.SetCurrentLockerSubslotIndex
	// void SetCurrentLockerSubslotIndex(int32_t NewIndex);                                                                     // [0x9209870] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortFrontEndContext.SelectTileForQuest
	// bool SelectTileForQuest(UFortQuestItem* QuestItem, float& OutCriticalMissionDifficultyOverrideMin, float& OutCriticalMissionDifficultyOverrideMax); // [0x9207f48] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/FortniteUI.FortFrontEndContext.SelectDefaultTheaterTile
	// void SelectDefaultTheaterTile();                                                                                         // [0x9207f14] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortFrontEndContext.SelectDefaultTheater
	// void SelectDefaultTheater();                                                                                             // [0x9207f00] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortFrontEndContext.PushContentWidget_Adv
	// void PushContentWidget_Adv(UWidget* Widget, bool bHideHeader, bool bHideFooter, bool bHideChatWidget);                   // [0x9206910] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortFrontEndContext.PlayLevelUpEffect
	// void PlayLevelUpEffect();                                                                                                // [0x920660c] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortFrontEndContext.PlayEvolutionEffect
	// void PlayEvolutionEffect();                                                                                              // [0x92065a0] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortFrontEndContext.OnPlayerProfileInitialized
	// void OnPlayerProfileInitialized();                                                                                       // [0x32e0fdc] Final|Native|Private 
	// Function /Script/FortniteUI.FortFrontEndContext.IsTileMissionAlertRewardClaimed
	// bool IsTileMissionAlertRewardClaimed(AFortTheaterMapTile* Tile);                                                         // [0x9206350] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortFrontEndContext.IsCelebrateEffectPlaying
	// bool IsCelebrateEffectPlaying();                                                                                         // [0x9206000] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortFrontEndContext.IsActiveTileMissionValid
	// bool IsActiveTileMissionValid();                                                                                         // [0x9205f20] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortFrontEndContext.Is4PlayerTile
	// bool Is4PlayerTile(AFortTheaterMapTile* Tile);                                                                           // [0x9205d58] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortFrontEndContext.HideAthenaStoreNewItemBang
	// void HideAthenaStoreNewItemBang();                                                                                       // [0x9205bfc] Final|Native|Public|BlueprintCallable|Const 
	// Function /Script/FortniteUI.FortFrontEndContext.HandleDynamicSocialImportClosed
	// void HandleDynamicSocialImportClosed();                                                                                  // [0x9205704] Final|Native|Private 
	// Function /Script/FortniteUI.FortFrontEndContext.GetUITestingClass
	// UClass* GetUITestingClass();                                                                                             // [0x5ce3900] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortFrontEndContext.GetUIOrderedAllTheaterData
	// bool GetUIOrderedAllTheaterData(TArray<FFortTheaterMapData>& OutAllTheaterData);                                         // [0x9205514] Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortFrontEndContext.GetTileMissionDetails
	// bool GetTileMissionDetails(AFortTheaterMapTile* Tile, FFortMissionDetails& MissionDetails);                              // [0x9204b00] Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortFrontEndContext.GetTheaterData
	// bool GetTheaterData(FString TheaterId, FFortTheaterMapData& OutTheaterData);                                             // [0x92043a8] Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortFrontEndContext.GetSelectedTheaterId
	// FString GetSelectedTheaterId();                                                                                          // [0x9203b7c] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortFrontEndContext.GetSelectedTheaterData
	// bool GetSelectedTheaterData(FFortTheaterMapData& OutTheaterData);                                                        // [0x9203a8c] Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortFrontEndContext.GetSelectableGadgets
	// void GetSelectableGadgets(TArray<UFortWorldItem*>& SelectableGadgets, TArray<UFortWorldItem*>& LastSelectedGadgets);     // [0x7bd9b10] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/FortniteUI.FortFrontEndContext.GetSeasonTabVariantPreviewInfo
	// FUnlockableVariantPreviewInfo GetSeasonTabVariantPreviewInfo();                                                          // [0x9203a20] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortFrontEndContext.GetPostMaxAccountLevelUpRewards
	// void GetPostMaxAccountLevelUpRewards(TArray<FFortItemQuantityPair>& Rewards, int32_t RewardOffset);                      // [0x9203590] Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortFrontEndContext.GetOutpostCoreLevelByTheaterId
	// bool GetOutpostCoreLevelByTheaterId(FString TheaterId, int32_t& OutCoreLevel);                                           // [0x9202b88] Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortFrontEndContext.GetOutpostCoreLevelByItemDefinition
	// bool GetOutpostCoreLevelByItemDefinition(UFortOutpostItemDefinition* OutpostCoreItemDef, int32_t& OutCoreLevel);         // [0x9202ab8] Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortFrontEndContext.GetMCPRegionText
	// FText GetMCPRegionText();                                                                                                // [0x26d5490] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortFrontEndContext.GetMCPRegion
	// FText GetMCPRegion();                                                                                                    // [0x9202698] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortFrontEndContext.GetMaxAvailableDifficulty
	// FGameDifficultyInfo GetMaxAvailableDifficulty(bool bIncludeMissionAlertTiles);                                           // [0x92026dc] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortFrontEndContext.GetItemFromItemQuantityPair
	// UFortItemDefinition* GetItemFromItemQuantityPair(FFortItemQuantityPair& InPair);                                         // [0x81ac9d8] Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortFrontEndContext.GetInventoryFilterForAccountItemWarning
	// EFortFrontendInventoryFilter GetInventoryFilterForAccountItemWarning();                                                  // [0x92020cc] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortFrontEndContext.GetHighestEnduranceWaveReachedByItemDefinition
	// bool GetHighestEnduranceWaveReachedByItemDefinition(UFortOutpostItemDefinition* OutpostCoreItemDef, int32_t& HighestWaveNumber); // [0x9201d1c] Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortFrontEndContext.GetHeroPlayerPawnForCurrentDisplayedItem
	// AFortPlayerPawn* GetHeroPlayerPawnForCurrentDisplayedItem();                                                             // [0x9201c68] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortFrontEndContext.GetHeroPlayerPawnByIndex
	// AFortPlayerPawn* GetHeroPlayerPawnByIndex(int32_t PartyMemberIndex);                                                     // [0x9201bb8] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortFrontEndContext.GetFrontEndCamera
	// EFrontEndCamera GetFrontEndCamera();                                                                                     // [0x21a099c] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortFrontEndContext.GetFocusedOrActiveTileMissionDetails
	// bool GetFocusedOrActiveTileMissionDetails(FFortMissionDetails& MissionDetails);                                          // [0x9200dac] Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortFrontEndContext.GetFocusedOrActiveTile
	// AFortTheaterMapTile* GetFocusedOrActiveTile();                                                                           // [0x9200d88] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortFrontEndContext.GetFeatureState
	// void GetFeatureState(EFortFrontEndFeature Feature, EFortFrontEndFeatureState& OutFeatureState, EFortFrontEndFeatureStateReason& OutReason); // [0x9200b28] Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortFrontEndContext.GetCurrentTheaterName
	// FText GetCurrentTheaterName();                                                                                           // [0x91ff52c] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortFrontEndContext.GetCurrentLockerSubslotIndex
	// int32_t GetCurrentLockerSubslotIndex();                                                                                  // [0x8f39554] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortFrontEndContext.GetCriticalMissionRewards
	// void GetCriticalMissionRewards(TArray<FFortMissionRewardInfo>& RewardList);                                              // [0x91ff28c] Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortFrontEndContext.GetAvailableDifficulties
	// TArray<FGameDifficultyInfo> GetAvailableDifficulties(bool bIncludeMissionAlertTiles);                                    // [0x91fe33c] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortFrontEndContext.GetAllTheaterData
	// bool GetAllTheaterData(TArray<FFortTheaterMapData>& OutAllTheaterData);                                                  // [0x91fe264] Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortFrontEndContext.GetActiveTileMissionDetails
	// bool GetActiveTileMissionDetails(FFortMissionDetails& MissionDetails);                                                   // [0x91fe04c] Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortFrontEndContext.GetActiveTile
	// AFortTheaterMapTile* GetActiveTile();                                                                                    // [0x91fe028] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortFrontEndContext.GetAccountLevelUpRewards
	// void GetAccountLevelUpRewards(TArray<FFortItemQuantityPair>& Rewards, int32_t AccountLevel);                             // [0x91fd9f0] Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortFrontEndContext.ClearSelectedTheater
	// void ClearSelectedTheater();                                                                                             // [0x91fc534] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortFrontEndContext.ClearLocalPreview
	// void ClearLocalPreview(bool StopUsingLocalPreview);                                                                      // [0x91fc4a0] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortFrontEndContext.CanShowLockerSlotType
	// bool CanShowLockerSlotType(EAthenaCustomizationCategory SlotType);                                                       // [0x91fbcd8] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortFrontEndContext.CanFindTileForQuest
	// bool CanFindTileForQuest(UFortQuestItem* QuestItem);                                                                     // [0x91fba54] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortFrontEndContext.CanCompleteQuestInFocusedOrActiveTileMission
	// bool CanCompleteQuestInFocusedOrActiveTileMission(UFortQuestItem* QuestItem);                                            // [0x91fb990] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortFrontEndContext.BroadcastMainTabSelected
	// void BroadcastMainTabSelected(FName TabName);                                                                            // [0x91fb904] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortFrontEndContext.AreProfilesAvailableForWriting
	// bool AreProfilesAvailableForWriting();                                                                                   // [0x91fb808] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortFrontEndContext.AccountItemWarningShown
	// void AccountItemWarningShown();                                                                                          // [0x91fb420] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/FortniteUI.FortGlobalUIContext
/// Size: 0x0560 (0x000030 - 0x000590)
class UFortGlobalUIContext : public UFortLocalPlayerSubsystem
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1424;

public:
	SMember(FMulticastInlineDelegate)                  SubGameChanged                                              OFFSET(getStruct<T>, {0x50, 16, 0, 0})
	DMember(bool)                                      bShouldSubgameSelectStartOnCampaignUpsell                   OFFSET(get<bool>, {0xA0, 1, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnKeybindsChanged                                           OFFSET(getStruct<T>, {0xA8, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnInputActionHoldStarted                                    OFFSET(getStruct<T>, {0xB8, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnInputActionHoldStopped                                    OFFSET(getStruct<T>, {0xC8, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnRefreshHUDForRespawn                                      OFFSET(getStruct<T>, {0xD8, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnEnterVehicleDriver                                        OFFSET(getStruct<T>, {0xE8, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnEnterVehiclePassenger                                     OFFSET(getStruct<T>, {0xF8, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnExitVehicle                                               OFFSET(getStruct<T>, {0x108, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnVehicleSeatChanged                                        OFFSET(getStruct<T>, {0x118, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnScoreReportChanged                                        OFFSET(getStruct<T>, {0x158, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnLoadingScreenVisibilityChanged                            OFFSET(getStruct<T>, {0x1C8, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnLocalPlayerControllerConnectionChanged                    OFFSET(getStruct<T>, {0x1D8, 16, 0, 0})
	CMember(TMap<FName, UFortUIMessageManager*>)       MessageManagersByName                                       OFFSET(get<T>, {0x218, 80, 0, 0})
	CMember(TMap<EFortUIFeature, FFortUIFeatureStruct>) Features                                                   OFFSET(get<T>, {0x268, 80, 0, 0})
	CMember(UAthenaMatchReadyDesktopPopup*)            AthenaMatchReadyNotificationWidget                          OFFSET(get<T>, {0x3F8, 8, 0, 0})
	CMember(UFortHelpItem*)                            ActiveContextSpecificHelpItem                               OFFSET(get<T>, {0x410, 8, 0, 0})
	DMember(bool)                                      bIsUIVisible                                                OFFSET(get<bool>, {0x418, 1, 0, 0})
	DMember(bool)                                      bShowRateWidget                                             OFFSET(get<bool>, {0x419, 1, 0, 0})
	CMember(TMap<ESubGame, bool>)                      IsAllContentInstalledCacheMap                               OFFSET(get<T>, {0x420, 80, 0, 0})
	SMember(FText)                                     FeedbackTitle                                               OFFSET(getStruct<T>, {0x470, 24, 0, 0})
	SMember(FDateTime)                                 FirstLoginTime                                              OFFSET(getStruct<T>, {0x488, 8, 0, 0})
	SMember(FTimerHandle)                              AddictionMsgTimer                                           OFFSET(getStruct<T>, {0x490, 8, 0, 0})
	SMember(FUniqueNetIdRepl)                          CurrentLocalPlayerUniqueNetId                               OFFSET(getStruct<T>, {0x498, 48, 0, 0})
	DMember(bool)                                      bQuestMapTabRequested                                       OFFSET(get<bool>, {0x4DC, 1, 0, 0})
	SMember(FGameplayTag)                              QuestMapChallengeTabRequested                               OFFSET(getStruct<T>, {0x4E0, 4, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortGlobalUIContext.UnregisterScriptedActions
	// void UnregisterScriptedActions(TArray<UClass*>& ScriptedActions);                                                        // [0x920bbb8] Final|RequiredAPI|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/FortniteUI.FortGlobalUIContext.UnregisterScriptedAction
	// void UnregisterScriptedAction(UClass*& ScriptedAction);                                                                  // [0x920bafc] Final|RequiredAPI|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/FortniteUI.FortGlobalUIContext.UnregisterInputAction
	// void UnregisterInputAction(UUserWidget* UserWidget, FDataTableRowHandle InputActionRow);                                 // [0x920b954] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortGlobalUIContext.UnbindToFeatureState
	// void UnbindToFeatureState(EFortUIFeature Feature, FDelegateProperty Delegate);                                           // [0x920b87c] Final|RequiredAPI|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortGlobalUIContext.TetherChanged
	// void TetherChanged(bool bIsTethered);                                                                                    // [0x920b794] Final|Native|Public  
	// Function /Script/FortniteUI.FortGlobalUIContext.ShowWebURL
	// bool ShowWebURL(FString URL, EFortUrlType URLType);                                                                      // [0x920b0c0] Final|RequiredAPI|Native|Public 
	// Function /Script/FortniteUI.FortGlobalUIContext.ShowVehicleHealthBarOnPlayerHUD
	// bool ShowVehicleHealthBarOnPlayerHUD();                                                                                  // [0x920b09c] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortGlobalUIContext.ShowCreativeContentDownloadDialog
	// bool ShowCreativeContentDownloadDialog(FDelegateProperty& OnSubGameContentReadyCallback, FDelegateProperty& OnSubGameContentCanceledCallback); // [0x920aef4] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/FortniteUI.FortGlobalUIContext.ShowConsoleAccountPicker
	// void ShowConsoleAccountPicker(int32_t ControllerIndex, FDelegateProperty& CompletionDelegate);                           // [0x920ae0c] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/FortniteUI.FortGlobalUIContext.ShouldShowRateWidget
	// bool ShouldShowRateWidget();                                                                                             // [0x8280a3c] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortGlobalUIContext.ShouldShowPhoenixDisplay
	// bool ShouldShowPhoenixDisplay();                                                                                         // [0x920ac98] Final|Native|Private|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortGlobalUIContext.SetRatingWidgetFeedbackTitle
	// void SetRatingWidgetFeedbackTitle(FText& Title);                                                                         // [0x920a378] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/FortniteUI.FortGlobalUIContext.SetInputMode
	// void SetInputMode(EFortInputMode InMode);                                                                                // [0x302125c] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortGlobalUIContext.SetHideStwItemRefundHelp
	// void SetHideStwItemRefundHelp(bool bInHideHelp);                                                                         // [0x9209ce0] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortGlobalUIContext.SetHidePerkRecombobulatorHelp
	// void SetHidePerkRecombobulatorHelp(bool bInHideHelp);                                                                    // [0x9209c34] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortGlobalUIContext.SetCurrentInputPresetName
	// void SetCurrentInputPresetName(FString InputPresetName);                                                                 // [0x9209188] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortGlobalUIContext.SetCurrentCustomInputTemplatePresetName
	// void SetCurrentCustomInputTemplatePresetName(FString InputPresetName);                                                   // [0x9208aa0] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortGlobalUIContext.SetContextHelpItem
	// void SetContextHelpItem(UFortHelpItem* ContextSpecificHelpItem);                                                         // [0x9208a14] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortGlobalUIContext.SendLeaveZoneAnalytic
	// void SendLeaveZoneAnalytic();                                                                                            // [0x9208a00] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortGlobalUIContext.SendExperienceRatingAnalytic
	// void SendExperienceRatingAnalytic(FString RatingType, FString FeedbackSentBy, FText& RatingQuestion, int32_t& StarCount, FString GameSessionId, FString Comment); // [0x9208068] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/FortniteUI.FortGlobalUIContext.RunLauncherWithOptions
	// void RunLauncherWithOptions(FString Options);                                                                            // [0x9207850] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortGlobalUIContext.ReturnToSubGameSelect
	// void ReturnToSubGameSelect();                                                                                            // [0x920783c] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortGlobalUIContext.RegisterScriptedActions
	// void RegisterScriptedActions(TArray<UClass*>& ScriptedActions);                                                          // [0x9206f44] Final|RequiredAPI|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/FortniteUI.FortGlobalUIContext.RegisterScriptedAction
	// void RegisterScriptedAction(UClass*& ScriptedAction);                                                                    // [0x9206e88] Final|RequiredAPI|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/FortniteUI.FortGlobalUIContext.RegisterInputAction
	// void RegisterInputAction(UUserWidget* UserWidget, FDataTableRowHandle InputActionRow, FDelegateProperty CommitedEvent, int32_t InFilterPriority); // [0x9206aa4] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortGlobalUIContext.RefreshHUDForRespawn
	// void RefreshHUDForRespawn();                                                                                             // [0x9206a90] Final|Native|Public  
	// Function /Script/FortniteUI.FortGlobalUIContext.QuitGame
	// void QuitGame();                                                                                                         // [0x9206a7c] Final|RequiredAPI|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortGlobalUIContext.OnQueryFortBackendVersionDelegate__DelegateSignature
	// void OnQueryFortBackendVersionDelegate__DelegateSignature(FFortBackendVersion FortBackendVersion);                       // [0x1d9241c] MulticastDelegate|Public|Delegate 
	// Function /Script/FortniteUI.FortGlobalUIContext.OnLocalPlayerControllerConnectionChangedDelegate__DelegateSignature
	// void OnLocalPlayerControllerConnectionChangedDelegate__DelegateSignature(bool bConnected);                               // [0x1d9241c] MulticastDelegate|Public|Delegate 
	// Function /Script/FortniteUI.FortGlobalUIContext.OnLoadingScreenVisibilityChangedDelegate__DelegateSignature
	// void OnLoadingScreenVisibilityChangedDelegate__DelegateSignature(bool IsVisible);                                        // [0x1d9241c] MulticastDelegate|Public|Delegate 
	// Function /Script/FortniteUI.FortGlobalUIContext.Logout
	// void Logout();                                                                                                           // [0x920648c] Final|RequiredAPI|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortGlobalUIContext.IsUsingGamepad
	// bool IsUsingGamepad();                                                                                                   // [0x2ae709c] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortGlobalUIContext.IsPendingLogout
	// bool IsPendingLogout();                                                                                                  // [0x9206308] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortGlobalUIContext.IsMobileApp
	// bool IsMobileApp();                                                                                                      // [0x350d358] Final|RequiredAPI|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortGlobalUIContext.IsInZone
	// bool IsInZone();                                                                                                         // [0x1eb84b8] Final|RequiredAPI|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortGlobalUIContext.IsInOutpostZone
	// bool IsInOutpostZone();                                                                                                  // [0x92062cc] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortGlobalUIContext.IsGamepadAttached
	// bool IsGamepadAttached();                                                                                                // [0x2c6cedc] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortGlobalUIContext.IsDesktopPlatform
	// bool IsDesktopPlatform();                                                                                                // [0x2c6cedc] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortGlobalUIContext.IsCustomGamepadConfig
	// bool IsCustomGamepadConfig(int32_t ConfigIndex);                                                                         // [0x92061fc] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortGlobalUIContext.IsCurrentlyShowingLoadingScreen
	// bool IsCurrentlyShowingLoadingScreen();                                                                                  // [0x92061d8] Final|RequiredAPI|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortGlobalUIContext.IsCreativeModeAccessLimited
	// bool IsCreativeModeAccessLimited();                                                                                      // [0x92061b4] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortGlobalUIContext.IsAllContentInstalled
	// bool IsAllContentInstalled(ESubGame SubGame);                                                                            // [0x9205f74] Final|Native|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/FortniteUI.FortGlobalUIContext.InputActionHoldStopped
	// void InputActionHoldStopped(FName InputActionName, bool bCompletedSuccessfully);                                         // [0x297122c] Final|Native|Public  
	// Function /Script/FortniteUI.FortGlobalUIContext.InputActionHoldStarted
	// void InputActionHoldStarted(FName InputActionName, float HoldDuration);                                                  // [0x9205c94] Final|Native|Public  
	// Function /Script/FortniteUI.FortGlobalUIContext.HideBang
	// void HideBang(EFortBangType Type);                                                                                       // [0x9205c10] Final|RequiredAPI|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortGlobalUIContext.HandleVehicleSeatChanged
	// void HandleVehicleSeatChanged(int32_t SeatIndex);                                                                        // [0x9205a4c] Final|Native|Public  
	// Function /Script/FortniteUI.FortGlobalUIContext.GetUseActionName
	// FName GetUseActionName(ECommonInputType OverrideInputType);                                                              // [0x3080218] Final|RequiredAPI|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortGlobalUIContext.GetTrapPickerActionName
	// FName GetTrapPickerActionName(ECommonInputType OverrideInputType);                                                       // [0x9205478] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortGlobalUIContext.GetTrapHotbarActionName
	// FName GetTrapHotbarActionName(ECommonInputType OverrideInputType);                                                       // [0x92053e0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortGlobalUIContext.GetTrapConfirmActionName
	// FName GetTrapConfirmActionName(ECommonInputType OverrideInputType);                                                      // [0x9205344] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortGlobalUIContext.GetTopLevelHelpItems
	// void GetTopLevelHelpItems(TArray<UFortHelpItem*>& ActiveHelpEntries);                                                    // [0x9204c50] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/FortniteUI.FortGlobalUIContext.GetToggleInventoryActionName
	// FName GetToggleInventoryActionName();                                                                                    // [0x9204c24] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortGlobalUIContext.GetTargetActionName
	// FName GetTargetActionName(ECommonInputType OverrideInputType);                                                           // [0x920431c] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortGlobalUIContext.GetSwitchQuickBarActionName
	// FName GetSwitchQuickBarActionName(ECommonInputType OverrideInputType);                                                   // [0x9204280] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortGlobalUIContext.GetSubGame
	// ESubGame GetSubGame();                                                                                                   // [0x33f2f74] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortGlobalUIContext.GetSessionId
	// FString GetSessionId();                                                                                                  // [0x9204240] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortGlobalUIContext.GetSessionConnectString
	// FString GetSessionConnectString();                                                                                       // [0x9203bbc] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortGlobalUIContext.GetScoreReport
	// UFortUIScoreReport* GetScoreReport();                                                                                    // [0x92039fc] Final|RequiredAPI|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortGlobalUIContext.GetRotatePrimitiveClockwiseActionName
	// FName GetRotatePrimitiveClockwiseActionName(ECommonInputType OverrideInputType);                                         // [0x9203890] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortGlobalUIContext.GetQuestManager
	// UFortQuestManager* GetQuestManager(ESubGame SubGame);                                                                    // [0x30ab09c] Final|RequiredAPI|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortGlobalUIContext.GetPickerConfirmActionName
	// FName GetPickerConfirmActionName(EFortPickerMode PickerMode);                                                            // [0x92034ec] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortGlobalUIContext.GetPickerCancelActionName
	// FName GetPickerCancelActionName(EFortPickerMode PickerMode);                                                             // [0x9203404] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortGlobalUIContext.GetPerformBuildingImprovementInteractionActionName
	// FName GetPerformBuildingImprovementInteractionActionName(ECommonInputType OverrideInputType);                            // [0x9203368] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortGlobalUIContext.GetPerformBuildingEditInteractionActionName
	// FName GetPerformBuildingEditInteractionActionName(ECommonInputType OverrideInputType);                                   // [0x92032cc] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortGlobalUIContext.GetModuleIdAndVersion
	// FString GetModuleIdAndVersion();                                                                                         // [0x9202a28] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortGlobalUIContext.GetMessageManager
	// UFortUIMessageManager* GetMessageManager(FName ManagerName, bool& bCreatedNew);                                          // [0x9202794] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/FortniteUI.FortGlobalUIContext.GetLastMissionRewardReport
	// UFortUIRewardReport* GetLastMissionRewardReport();                                                                       // [0x92025dc] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortGlobalUIContext.GetLastGameSummaryInfo
	// FGameSummaryInfo GetLastGameSummaryInfo();                                                                               // [0x9202554] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortGlobalUIContext.GetKeyForAction
	// FKey GetKeyForAction(FName Action, bool bForceGamepadKey, FName PresetNameOverride);                                     // [0x9202430] Final|BlueprintCosmetic|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortGlobalUIContext.GetKBMPlayerInputPresetNamesForSubGame
	// void GetKBMPlayerInputPresetNamesForSubGame(ESubGame SubGame, TArray<FString>& InputPresetNames, TArray<FText>& InputPresetFriendlyNames); // [0x92022c8] Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortGlobalUIContext.GetKBMPlayerInputPresetDescriptionForSubGame
	// void GetKBMPlayerInputPresetDescriptionForSubGame(ESubGame SubGame, int32_t CurrentPreset, FText& InputPresetDescription, FText& InputPresetSubDescription); // [0x920211c] Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortGlobalUIContext.GetJumpActionName
	// FName GetJumpActionName();                                                                                               // [0x92020f0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortGlobalUIContext.GetInputTypeIcon
	// UTexture2D* GetInputTypeIcon(ECommonInputType InputType);                                                                // [0x9201fe4] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortGlobalUIContext.GetInputPriority
	// int32_t GetInputPriority(EInputPriority Priority);                                                                       // [0x2fbd150] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortGlobalUIContext.GetInputActionGroup
	// bool GetInputActionGroup(FName& ActionName, EFortInputActionGroup& OutInputActionGroup);                                 // [0x9201ed8] Final|BlueprintCosmetic|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortGlobalUIContext.GetHoagieBoostName
	// FName GetHoagieBoostName(ECommonInputType OverrideInputType);                                                            // [0x9201dec] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortGlobalUIContext.GetHideStwItemRefundHelp
	// bool GetHideStwItemRefundHelp();                                                                                         // [0x9201cd4] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortGlobalUIContext.GetHidePerkRecombobulatorHelp
	// bool GetHidePerkRecombobulatorHelp();                                                                                    // [0x9201c8c] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortGlobalUIContext.GetFireActionName
	// FName GetFireActionName();                                                                                               // [0x9200c48] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortGlobalUIContext.GetFeedbackTitle
	// FText GetFeedbackTitle();                                                                                                // [0x8300e34] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortGlobalUIContext.GetFeatureState
	// void GetFeatureState(EFortUIFeature Feature, EFortUIFeatureState& OutFeatureState, EFortUIFeatureStateReason& OutReason); // [0x27e49cc] Final|RequiredAPI|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure 
	// Function /Script/FortniteUI.FortGlobalUIContext.GetCustomGamepadInputPresetName
	// FString GetCustomGamepadInputPresetName();                                                                               // [0x91ff5a8] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortGlobalUIContext.GetCurrentInputPresetName
	// FString GetCurrentInputPresetName();                                                                                     // [0x91ff48c] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortGlobalUIContext.GetCreativeToggleInvulnerablityName
	// FName GetCreativeToggleInvulnerablityName();                                                                             // [0x91ff238] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortGlobalUIContext.GetCreativeToggleHeatmapName
	// FName GetCreativeToggleHeatmapName();                                                                                    // [0x91ff1e4] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortGlobalUIContext.GetCreativeToggleGhostName
	// FName GetCreativeToggleGhostName();                                                                                      // [0x91ff190] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortGlobalUIContext.GetCreativeSpawnModeratorBotName
	// FName GetCreativeSpawnModeratorBotName();                                                                                // [0x91ff13c] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortGlobalUIContext.GetCreativeQuickbarActivateClutchName
	// FName GetCreativeQuickbarActivateClutchName();                                                                           // [0x91ff0e8] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortGlobalUIContext.GetCreativeMoveToolMultiSelectName
	// FName GetCreativeMoveToolMultiSelectName();                                                                              // [0x91ff094] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortGlobalUIContext.GetCreativeMoveToolEquippedGrabOrLetGoName
	// FName GetCreativeMoveToolEquippedGrabOrLetGoName();                                                                      // [0x91ff040] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortGlobalUIContext.GetCreativeMoveToolEquippedDeleteName
	// FName GetCreativeMoveToolEquippedDeleteName();                                                                           // [0x91fefec] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortGlobalUIContext.GetCreativeMoveToolEquippedCopyGrabOrDuplicateName
	// FName GetCreativeMoveToolEquippedCopyGrabOrDuplicateName();                                                              // [0x91fef98] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortGlobalUIContext.GetCreativeMoveToolClearMultiSelectName
	// FName GetCreativeMoveToolClearMultiSelectName();                                                                         // [0x91fef44] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortGlobalUIContext.GetCreativeMoveObjectsFreelySwitchAxisName
	// FName GetCreativeMoveObjectsFreelySwitchAxisName();                                                                      // [0x91feef0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortGlobalUIContext.GetCreativeMoveObjectsFreelyRotateCounterclockwiseName
	// FName GetCreativeMoveObjectsFreelyRotateCounterclockwiseName();                                                          // [0x91fee9c] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortGlobalUIContext.GetCreativeMoveObjectsFreelyRotateClockwiseName
	// FName GetCreativeMoveObjectsFreelyRotateClockwiseName();                                                                 // [0x91fee48] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortGlobalUIContext.GetCreativeMoveObjectsFreelyPushName
	// FName GetCreativeMoveObjectsFreelyPushName();                                                                            // [0x91fedf4] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortGlobalUIContext.GetCreativeMoveObjectsFreelyPullName
	// FName GetCreativeMoveObjectsFreelyPullName();                                                                            // [0x91feda0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortGlobalUIContext.GetCreativeMoveObjectsFreelyExitName
	// FName GetCreativeMoveObjectsFreelyExitName();                                                                            // [0x91fed4c] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortGlobalUIContext.GetCreativeMoveObjectsFreelyDuplicateName
	// FName GetCreativeMoveObjectsFreelyDuplicateName();                                                                       // [0x91fecf8] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortGlobalUIContext.GetCreativeMoveObjectsFreelyDropToFloorName
	// FName GetCreativeMoveObjectsFreelyDropToFloorName();                                                                     // [0x91feca4] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortGlobalUIContext.GetCreativeMoveObjectsFreelyChangePrecisionLevelName
	// FName GetCreativeMoveObjectsFreelyChangePrecisionLevelName();                                                            // [0x91fec50] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortGlobalUIContext.GetCreativeMoveBuildingsOnGridRotateCounterclockwiseName
	// FName GetCreativeMoveBuildingsOnGridRotateCounterclockwiseName();                                                        // [0x91febfc] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortGlobalUIContext.GetCreativeMoveBuildingsOnGridRotateClockwiseName
	// FName GetCreativeMoveBuildingsOnGridRotateClockwiseName();                                                               // [0x91feba8] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortGlobalUIContext.GetCreativeMoveBuildingsOnGridMirrorName
	// FName GetCreativeMoveBuildingsOnGridMirrorName();                                                                        // [0x91feb54] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortGlobalUIContext.GetCreativeMoveBuildingsOnGridExitName
	// FName GetCreativeMoveBuildingsOnGridExitName();                                                                          // [0x91feb00] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortGlobalUIContext.GetCreativeMoveBuildingsOnGridDuplicateName
	// FName GetCreativeMoveBuildingsOnGridDuplicateName();                                                                     // [0x91feaac] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortGlobalUIContext.GetCreativeModeLimitedAccessEndTime
	// FDateTime GetCreativeModeLimitedAccessEndTime();                                                                         // [0x91fea40] Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortGlobalUIContext.GetCreativeFlyUpActionName
	// FName GetCreativeFlyUpActionName();                                                                                      // [0x91fe998] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortGlobalUIContext.GetCreativeFlyDownActionName
	// FName GetCreativeFlyDownActionName();                                                                                    // [0x91fe944] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortGlobalUIContext.GetCreativeDespawnModeratorBotName
	// FName GetCreativeDespawnModeratorBotName();                                                                              // [0x91fe8f0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortGlobalUIContext.GetCollectionBookManager
	// UFortCollectionBookManager* GetCollectionBookManager();                                                                  // [0x91fe8cc] Final|RequiredAPI|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortGlobalUIContext.GetChangeMaterialActionName
	// FName GetChangeMaterialActionName();                                                                                     // [0x91fe874] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortGlobalUIContext.GetBuildConfirmActionName
	// FName GetBuildConfirmActionName(ECommonInputType OverrideInputType);                                                     // [0x91fe6ec] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortGlobalUIContext.GetBrushForKey
	// bool GetBrushForKey(FKey Key, FSlateBrush& Brush);                                                                       // [0x91fe450] Final|BlueprintCosmetic|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortGlobalUIContext.GetAltInteractionActionName
	// FName GetAltInteractionActionName(ECommonInputType OverrideInputType);                                                   // [0x2f9e1e8] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortGlobalUIContext.GetAllPlayerInputPresetNamesForSubGame
	// void GetAllPlayerInputPresetNamesForSubGame(ESubGame SubGame, TArray<FString>& InputPresetNames, TArray<FText>& InputPresetFriendlyNames); // [0x91fe0fc] Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortGlobalUIContext.GetActionForKey
	// FName GetActionForKey(FName PresetName, FKey Key, EFortInputActionGroup InputActionGroup, bool bIsUsingGamepad);         // [0x91fdba8] Final|BlueprintCosmetic|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortGlobalUIContext.ForceSetFeatureState
	// void ForceSetFeatureState(EFortUIFeature Feature, EFortUIFeatureState ForcedState, EFortUIFeatureStateReason Reason);    // [0x91fcdf4] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortGlobalUIContext.ExitVehicle
	// void ExitVehicle();                                                                                                      // [0x91fcde0] Final|Native|Public  
	// Function /Script/FortniteUI.FortGlobalUIContext.EnterVehiclePassenger
	// void EnterVehiclePassenger();                                                                                            // [0x91fcdcc] Final|Native|Public  
	// Function /Script/FortniteUI.FortGlobalUIContext.EnterVehicleDriver
	// void EnterVehicleDriver();                                                                                               // [0x91fcdb8] Final|Native|Public  
	// Function /Script/FortniteUI.FortGlobalUIContext.DrawAttention
	// void DrawAttention(UWidget* BaseWidget);                                                                                 // [0x91fcc70] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortGlobalUIContext.DisplayStateContent
	// void DisplayStateContent(bool bDisplay);                                                                                 // [0x91fcbf0] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortGlobalUIContext.CopyToClipboard
	// void CopyToClipboard(FString ClipboardText);                                                                             // [0x91fc548] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortGlobalUIContext.ContentInstallationProgress
	// float ContentInstallationProgress(ESubGame SubGame);                                                                     // [0x816c320] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortGlobalUIContext.ClearRatingWidgetInfo
	// void ClearRatingWidgetInfo();                                                                                            // [0x91fc51c] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortGlobalUIContext.ClearLastMissionReports
	// void ClearLastMissionReports();                                                                                          // [0x91fc48c] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortGlobalUIContext.ClearLastGameSummaryInfo
	// void ClearLastGameSummaryInfo();                                                                                         // [0x91fc444] Final|Native|Public|BlueprintCallable|Const 
	// Function /Script/FortniteUI.FortGlobalUIContext.CheckFlag
	// void CheckFlag(FString FlagName, EFlagStatus& OutStatus);                                                                // [0x91fbd64] Final|RequiredAPI|Native|Static|Public|HasOutParms|BlueprintCallable 
	// Function /Script/FortniteUI.FortGlobalUIContext.CanPlay
	// bool CanPlay(ESubGame SubGame, FText& DenialReason);                                                                     // [0x91fbbd0] Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortGlobalUIContext.CanMatchmake
	// bool CanMatchmake(ESubGame SubGame, FText& DenialReason);                                                                // [0x91fbae4] Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure 
	// Function /Script/FortniteUI.FortGlobalUIContext.BindToFeatureStateAndInitialize
	// void BindToFeatureStateAndInitialize(EFortUIFeature Feature, FDelegateProperty Delegate);                                // [0x91fb82c] Final|RequiredAPI|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortGlobalUIContext.AllowQuit
	// bool AllowQuit();                                                                                                        // [0x33b2e48] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortGlobalUIContext.AllowLogout
	// bool AllowLogout();                                                                                                      // [0x91fb6f4] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/FortniteUI.FocusedBuildingDynamicData
/// Size: 0x0000 (0x000030 - 0x000030)
class UFocusedBuildingDynamicData : public UPrimaryDataAsset
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 48;

public:
};

/// Class /Script/FortniteUI.FortHUDContext
/// Size: 0x06C8 (0x000030 - 0x0006F8)
class UFortHUDContext : public UBlueprintContextBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1784;

public:
	SMember(FMulticastInlineDelegate)                  OnCursorModeChanging                                        OFFSET(getStruct<T>, {0x38, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnCursorModeChanged                                         OFFSET(getStruct<T>, {0x48, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnRequestPromptDisplay                                      OFFSET(getStruct<T>, {0x58, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnGameViewportActivationChanged                             OFFSET(getStruct<T>, {0x68, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnMgmtMenuTabChangeRequested                                OFFSET(getStruct<T>, {0x78, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnGetHUDElementWidgetsForTags                               OFFSET(getStruct<T>, {0x88, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnIndicatorModeChanged                                      OFFSET(getStruct<T>, {0x98, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnContextualReticleChanged                                  OFFSET(getStruct<T>, {0xA8, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnVehicleFocused                                            OFFSET(getStruct<T>, {0xB8, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnPawnFocused                                               OFFSET(getStruct<T>, {0xC8, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnBuildingFocused                                           OFFSET(getStruct<T>, {0xD8, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnActorFocusedForCreative                                   OFFSET(getStruct<T>, {0xE8, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnFocusedBuildingStateChanged                               OFFSET(getStruct<T>, {0xF8, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnFocusedBuildingHealthChanged                              OFFSET(getStruct<T>, {0x108, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnFocusedBuildingBigHealthChanged                           OFFSET(getStruct<T>, {0x118, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnFocusedBuildingRepairCostChanged                          OFFSET(getStruct<T>, {0x128, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnFocusedBuildingAttachedTrapDurabilityChanged              OFFSET(getStruct<T>, {0x138, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnFocusedBuildingAttachedTrapChanged                        OFFSET(getStruct<T>, {0x148, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnFocusedBuildingDynamicDataReceived                        OFFSET(getStruct<T>, {0x158, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnDamagedResourceBuilding                                   OFFSET(getStruct<T>, {0x168, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnDamagedResourceVehicle                                    OFFSET(getStruct<T>, {0x178, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnPlayerCanInteract                                         OFFSET(getStruct<T>, {0x188, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnInteractUpdated                                           OFFSET(getStruct<T>, {0x198, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnPlayerTargetingChanged                                    OFFSET(getStruct<T>, {0x1A8, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnScoreChanged                                              OFFSET(getStruct<T>, {0x1B8, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnScoreStatChanged                                          OFFSET(getStruct<T>, {0x1C8, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnZoneCompleted                                             OFFSET(getStruct<T>, {0x1D8, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnPawnSet                                                   OFFSET(getStruct<T>, {0x1E8, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnDamageReceived                                            OFFSET(getStruct<T>, {0x1F8, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnUnableToPerformAction                                     OFFSET(getStruct<T>, {0x208, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnLocalPlayerMaxHealthChanged                               OFFSET(getStruct<T>, {0x218, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnLocalPlayerHealthChanged                                  OFFSET(getStruct<T>, {0x228, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnLocalPlayerDied                                           OFFSET(getStruct<T>, {0x238, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnLocalPlayerSpawned                                        OFFSET(getStruct<T>, {0x248, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnLocalPlayerRevived                                        OFFSET(getStruct<T>, {0x258, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnHUDScaleChanged                                           OFFSET(getStruct<T>, {0x268, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnReticleSettingsChanged                                    OFFSET(getStruct<T>, {0x278, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnLocalPlayerKillsChanged                                   OFFSET(getStruct<T>, {0x288, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnLocalPlayerPlaceChanged                                   OFFSET(getStruct<T>, {0x298, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnLocalPlayerViewTargetChanged                              OFFSET(getStruct<T>, {0x2A8, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnToggledBattleMapLive                                      OFFSET(getStruct<T>, {0x2B8, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnLocalPlayerMaxShieldChanged                               OFFSET(getStruct<T>, {0x2C8, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnLocalPlayerShieldChanged                                  OFFSET(getStruct<T>, {0x2D8, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnLocalPlayerMaxStaminaChanged                              OFFSET(getStruct<T>, {0x2E8, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnLocalPlayerStaminaChanged                                 OFFSET(getStruct<T>, {0x2F8, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnToggleScoreboard                                          OFFSET(getStruct<T>, {0x308, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnEndOfDayRecap                                             OFFSET(getStruct<T>, {0x318, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnWaveCombatStart                                           OFFSET(getStruct<T>, {0x328, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnWaveBasedModifiersApplied                                 OFFSET(getStruct<T>, {0x338, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnActiveGameplayModifiersChanged                            OFFSET(getStruct<T>, {0x348, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnHordeTierInitialized                                      OFFSET(getStruct<T>, {0x358, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnHordeTierComplete                                         OFFSET(getStruct<T>, {0x368, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnHordeWaveComplete                                         OFFSET(getStruct<T>, {0x378, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnBuildingMaterialCycled                                    OFFSET(getStruct<T>, {0x388, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnHighlightsCountChanged                                    OFFSET(getStruct<T>, {0x398, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnHUDStateRefreshed                                         OFFSET(getStruct<T>, {0x3A8, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnShouldTriggerCooldownUpdate                               OFFSET(getStruct<T>, {0x3B8, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnRequestSetInZoneTitleBarVisibility                        OFFSET(getStruct<T>, {0x3C8, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnUIGameplayCue                                             OFFSET(getStruct<T>, {0x3F0, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnWeaponEquippedDelegate                                    OFFSET(getStruct<T>, {0x400, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnWeaponUnEquippedDelegate                                  OFFSET(getStruct<T>, {0x410, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnWeaponHudKeyActionUpdated                                 OFFSET(getStruct<T>, {0x420, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnAbilityDecisionWindowStackUpdated                         OFFSET(getStruct<T>, {0x430, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnWorldDaysElapsedChanged                                   OFFSET(getStruct<T>, {0x440, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnNumSurvivorsRescuedChanged                                OFFSET(getStruct<T>, {0x450, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnEarnedBadgesChanged                                       OFFSET(getStruct<T>, {0x460, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnPotentialBadgesChanged                                    OFFSET(getStruct<T>, {0x470, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnMissionManagerCreated                                     OFFSET(getStruct<T>, {0x480, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnMissionsUpdated                                           OFFSET(getStruct<T>, {0x490, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnFocusedMissionChanged                                     OFFSET(getStruct<T>, {0x4A0, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnTheaterUniqueIDChanged                                    OFFSET(getStruct<T>, {0x4B0, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnZoneDifficultyInfoRowChanged                              OFFSET(getStruct<T>, {0x4C0, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnDifficultyIncreaseRewardTierChanged                       OFFSET(getStruct<T>, {0x4D0, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnDifficultyIncreaseRewardsChanged                          OFFSET(getStruct<T>, {0x4E0, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnMissionGeneratorChanged                                   OFFSET(getStruct<T>, {0x4F0, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnMissionRewardsChanged                                     OFFSET(getStruct<T>, {0x500, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnPointOfInterestAdded                                      OFFSET(getStruct<T>, {0x510, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnPointOfInterestRemoved                                    OFFSET(getStruct<T>, {0x520, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnHUDElementVisibilityChanged                               OFFSET(getStruct<T>, {0x548, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnLocalChallengesVisibilityChanged                          OFFSET(getStruct<T>, {0x558, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnDebugHUDObjectiveHeightChangedDelegate                    OFFSET(getStruct<T>, {0x578, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnBuildModeChanged                                          OFFSET(getStruct<T>, {0x588, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnPersonalVehicleModeChanged                                OFFSET(getStruct<T>, {0x598, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnPlayerVehicleStateChanged                                 OFFSET(getStruct<T>, {0x5A8, 16, 0, 0})
	CMember(TArray<FString>)                           HotfixElementsToHide                                        OFFSET(get<T>, {0x5D0, 16, 0, 0})
	DMember(bool)                                      bDebugHudObjectiveHeight                                    OFFSET(get<bool>, {0x5E0, 1, 0, 0})
	DMember(bool)                                      bPendingAttachToHUD                                         OFFSET(get<bool>, {0x5E1, 1, 0, 0})
	CMember(TWeakObjectPtr<AFortPlayerState*>)         OwningPlayerState                                           OFFSET(get<T>, {0x5E4, 8, 0, 0})
	CMember(TWeakObjectPtr<ABuildingActor*>)           CurFocusedBuilding                                          OFFSET(get<T>, {0x5EC, 8, 0, 0})
	CMember(TWeakObjectPtr<ABuildingTrap*>)            CurFocusedTrap                                              OFFSET(get<T>, {0x5F4, 8, 0, 0})
	CMember(TWeakObjectPtr<ABuildingActor*>)           BuildingFocusCandidates                                     OFFSET(get<T>, {0x608, 24, 0, 0})
	CMember(TWeakObjectPtr<AFortPlayerPawn*>)          BoundPlayerPawn                                             OFFSET(get<T>, {0x620, 8, 0, 0})
	CMember(TWeakObjectPtr<AFortWeapon*>)              CachedCurrentWeapon                                         OFFSET(get<T>, {0x6DC, 8, 0, 0})
	CMember(TWeakObjectPtr<AFortWeapon*>)              CachedPreviousWeapon                                        OFFSET(get<T>, {0x6E4, 8, 0, 0})
	CMember(TWeakObjectPtr<UFortTouchControlRegion*>)  TouchControlRegion                                          OFFSET(get<T>, {0x6EC, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortHUDContext.UpdateTrapAttachedToBuilding
	// void UpdateTrapAttachedToBuilding();                                                                                     // [0x920c278] Final|Native|Private 
	// Function /Script/FortniteUI.FortHUDContext.TriggerCooldownUpdate
	// void TriggerCooldownUpdate();                                                                                            // [0x920b84c] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortHUDContext.ToggleFullScreenMap
	// void ToggleFullScreenMap();                                                                                              // [0x920b814] Final|Native|Public|BlueprintCallable|Const 
	// Function /Script/FortniteUI.FortHUDContext.ShowAerialFeedback
	// void ShowAerialFeedback(FName BoundActionName, FText& FeedbackText);                                                     // [0x920ad28] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/FortniteUI.FortHUDContext.ShouldOnlyShowNextPrevBuildingSlotKeybinds
	// bool ShouldOnlyShowNextPrevBuildingSlotKeybinds();                                                                       // [0x920ac50] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortHUDContext.SetPreparingMgmtMenu
	// void SetPreparingMgmtMenu(bool bPreparing);                                                                              // [0x920a2f8] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortHUDContext.SetIsLocalChallengesVisible
	// void SetIsLocalChallengesVisible(bool bIsVisible);                                                                       // [0x9209e88] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortHUDContext.SetIndicatorsState
	// void SetIndicatorsState(EFortIndicatorState NewState);                                                                   // [0x9209e08] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortHUDContext.SetIndicatorsAllowed
	// void SetIndicatorsAllowed(bool bIndicatorsAllowed);                                                                      // [0x9209d8c] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortHUDContext.SetHUDElementVisibility
	// void SetHUDElementVisibility(FGameplayTagContainer& HUDElementTags, bool bHideElements, FName& ReasonName);              // [0x2e2f9b8] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/FortniteUI.FortHUDContext.SetCursorModeLocked
	// void SetCursorModeLocked(bool bLocked);                                                                                  // [0x92098ec] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortHUDContext.SendFocusedBuildingDynamicData
	// void SendFocusedBuildingDynamicData(UFocusedBuildingDynamicData* DynamicData);                                           // [0x9208970] Final|Native|Public|BlueprintCallable|Const 
	// Function /Script/FortniteUI.FortHUDContext.RequestPromptDisplay
	// void RequestPromptDisplay(FFortHUDTagPromptData& PromptData, FGameplayTag& tag);                                         // [0x9207714] Final|Native|Private|HasOutParms|BlueprintCallable 
	// Function /Script/FortniteUI.FortHUDContext.RequestMgmtMenuTab
	// void RequestMgmtMenuTab(FName TabName);                                                                                  // [0x9207694] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortHUDContext.RemovePointOfInterest
	// void RemovePointOfInterest(AActor* PointOfInterest);                                                                     // [0x9207604] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortHUDContext.PreviewItemPickUp
	// bool PreviewItemPickUp(UFortItem* InItem, EFortQuickBars InQuickBarType, int32_t& OutSlotIndex, TMap<int32_t, int32_t>& OutItemsToPush, TArray<int32_t>& OutItemsToDrop); // [0x9206678] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/FortniteUI.FortHUDContext.IsPreparingMgmtMenu
	// bool IsPreparingMgmtMenu();                                                                                              // [0x330fe74] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortHUDContext.IsLocalChallengesVisible
	// bool IsLocalChallengesVisible();                                                                                         // [0x92062f0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortHUDContext.IsInEditMode
	// bool IsInEditMode();                                                                                                     // [0x9206288] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortHUDContext.IsInCursorMode
	// bool IsInCursorMode();                                                                                                   // [0x340d7c0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortHUDContext.IsContextTutorialActive
	// bool IsContextTutorialActive(FGameplayTag TutorialType);                                                                 // [0x9206054] Final|Native|Private|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortHUDContext.HideAerialFeedback
	// void HideAerialFeedback();                                                                                               // [0x9205bc4] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortHUDContext.HandleVehicleStateChanged
	// void HandleVehicleStateChanged(AFortPlayerPawn* PlayerPawn, AActor* NewVehicle, AActor* OldVehicle);                     // [0x9205acc] Final|Native|Private 
	// Function /Script/FortniteUI.FortHUDContext.HandleUIGameplayCue
	// void HandleUIGameplayCue(FName CueName, TEnumAsByte<EGameplayCueEvent> EventType, FGameplayCueParameters& Parameters);   // [0x2af3dc8] Final|Native|Private|HasOutParms 
	// Function /Script/FortniteUI.FortHUDContext.HandleToggledBattleMapLive
	// void HandleToggledBattleMapLive(ABattleMapPawnLive* NewSpectatorPawn);                                                   // [0x92059cc] Final|Native|Private 
	// Function /Script/FortniteUI.FortHUDContext.HandleSpectatorViewTargetChanged
	// void HandleSpectatorViewTargetChanged();                                                                                 // [0x92059b8] Final|Native|Private 
	// Function /Script/FortniteUI.FortHUDContext.HandlePersonalVehicleModeChanged
	// void HandlePersonalVehicleModeChanged(bool bEnteredVehicle);                                                             // [0x9205938] Final|Native|Private 
	// Function /Script/FortniteUI.FortHUDContext.HandleLocalPlayerViewTargetChanged
	// void HandleLocalPlayerViewTargetChanged();                                                                               // [0x92058a4] Final|Native|Private 
	// Function /Script/FortniteUI.FortHUDContext.HandleLocalPlayerPlaceChanged
	// void HandleLocalPlayerPlaceChanged();                                                                                    // [0x9205890] Final|Native|Private 
	// Function /Script/FortniteUI.FortHUDContext.HandleLocalPlayerKillsChanged
	// void HandleLocalPlayerKillsChanged();                                                                                    // [0x920587c] Final|Native|Private 
	// Function /Script/FortniteUI.FortHUDContext.HandleLocalPlayerBuildCostChanged
	// void HandleLocalPlayerBuildCostChanged();                                                                                // [0x9205864] Final|Native|Private 
	// Function /Script/FortniteUI.FortHUDContext.HandleLocalPawnSpawned
	// void HandleLocalPawnSpawned();                                                                                           // [0x9205850] Final|Native|Private 
	// Function /Script/FortniteUI.FortHUDContext.HandleLocalPawnRevived
	// void HandleLocalPawnRevived(AController* EventInstigator);                                                               // [0x92057d0] Final|Native|Private 
	// Function /Script/FortniteUI.FortHUDContext.HandleLocalPawnDied
	// void HandleLocalPawnDied(FFortPlayerDeathReport& DeathReport);                                                           // [0x920572c] Final|Native|Private|HasOutParms 
	// Function /Script/FortniteUI.FortHUDContext.HandleFocusedBuildingAbilitySystemComponentInitialized
	// void HandleFocusedBuildingAbilitySystemComponentInitialized();                                                           // [0x9205718] Final|Native|Private 
	// Function /Script/FortniteUI.FortHUDContext.HandleBuildingModeChanged
	// void HandleBuildingModeChanged(bool bEntering);                                                                          // [0x9205684] Final|Native|Private 
	// Function /Script/FortniteUI.FortHUDContext.HandleActorFocusedForCreative
	// void HandleActorFocusedForCreative(AActor* NewActor);                                                                    // [0x92055f4] Final|Native|Private|BlueprintCallable 
	// Function /Script/FortniteUI.FortHUDContext.GetTimeToDelayEndOfDayZoneWidgetDisplay
	// float GetTimeToDelayEndOfDayZoneWidgetDisplay();                                                                         // [0x9204bfc] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortHUDContext.GetScoreDisplayFactor
	// float GetScoreDisplayFactor();                                                                                           // [0x92039d0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortHUDContext.GetPotentialBadges
	// TArray<FFortBadgeCount> GetPotentialBadges();                                                                            // [0x9203748] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortHUDContext.GetPlayerStateZone
	// AFortPlayerStateZone* GetPlayerStateZone();                                                                              // [0x920356c] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortHUDContext.GetNumAllowedDifficultyIncreases
	// int32_t GetNumAllowedDifficultyIncreases();                                                                              // [0x9202a68] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortHUDContext.GetMissionRewards
	// void GetMissionRewards(TArray<UFortItem*>& MissionRewards, TArray<UFortItem*>& MissionAlertRewards);                     // [0x9202914] Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortHUDContext.GetMissionOverviewObjectives
	// TArray<FZoneLoadingScreenHeadingConfig> GetMissionOverviewObjectives();                                                  // [0x9202878] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortHUDContext.GetMissionManager
	// AFortMissionManager* GetMissionManager();                                                                                // [0x9202854] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortHUDContext.GetLocalPlayerPlacement
	// int32_t GetLocalPlayerPlacement();                                                                                       // [0x9202674] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortHUDContext.GetLocalPlayerHasWinningPlacement
	// bool GetLocalPlayerHasWinningPlacement();                                                                                // [0x9202650] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortHUDContext.GetLocalPlayerHasPlacement
	// bool GetLocalPlayerHasPlacement();                                                                                       // [0x920262c] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortHUDContext.GetLocalPlayerHasLosingPlacement
	// bool GetLocalPlayerHasLosingPlacement();                                                                                 // [0x9202600] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortHUDContext.GetIndicatorsState
	// EFortIndicatorState GetIndicatorsState();                                                                                // [0x9201eb4] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortHUDContext.GetHUDElementWidgetsForTags
	// void GetHUDElementWidgetsForTags(FGameplayTagContainer& HUDElementTags, TArray<UFortHUDElementWidget*>& OutWidgets);     // [0x9200ec0] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/FortniteUI.FortHUDContext.GetGameStateZone
	// AFortGameStateZone* GetGameStateZone();                                                                                  // [0x9200e9c] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortHUDContext.GetFocusedMission
	// AFortMission* GetFocusedMission();                                                                                       // [0x9200d40] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortHUDContext.GetFocusedBuildingInfo
	// bool GetFocusedBuildingInfo(FFortFocusedBuildingInfo& OutBuildingInfo);                                                  // [0x9200ca0] Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortHUDContext.GetEarnedBadges
	// TArray<FEarnedBadgeEntry> GetEarnedBadges();                                                                             // [0x9200abc] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortHUDContext.GetDifficultyIncreaseRewardsTier
	// int32_t GetDifficultyIncreaseRewardsTier();                                                                              // [0x9200a60] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortHUDContext.GetDifficultyIncreaseRewardsDifference
	// void GetDifficultyIncreaseRewardsDifference(int32_t BaseDifficultyIncreaseTier, int32_t ComparedDifficultyIncreaseTier, TArray<FFortItemDelta>& RewardDeltaInfo); // [0x920033c] Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortHUDContext.GetDifficultyIncreaseRewards
	// void GetDifficultyIncreaseRewards(int32_t DifficultyIncreaseTier, TArray<FFortItemDelta>& DifficultyIncreaseRewards);    // [0x91ffc4c] Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortHUDContext.GetCurrentPrimaryMissionTags
	// FGameplayTagContainer GetCurrentPrimaryMissionTags();                                                                    // [0x91ff4cc] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortHUDContext.GetCurrentHUDState
	// FFortHUDState GetCurrentHUDState();                                                                                      // [0x91ff3fc] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortHUDContext.GetCurrentHero
	// UFortHero* GetCurrentHero();                                                                                             // [0x91ff414] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortHUDContext.GetCurrentFocusedBuilding
	// ABuildingActor* GetCurrentFocusedBuilding();                                                                             // [0x91ff3d4] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortHUDContext.GetCurrentBasicMissionInfo
	// bool GetCurrentBasicMissionInfo(FFortBasicMissionInfo& BasicMissionInfo);                                                // [0x91ff324] Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortHUDContext.GetBuildingActorInfo
	// bool GetBuildingActorInfo(ABuildingActor* BuildingActor, FFortFocusedBuildingInfo& OutBuildingInfo);                     // [0x91fe788] Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortHUDContext.GetBluGloManager
	// AFortBluGloManager* GetBluGloManager();                                                                                  // [0x91fe42c] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortHUDContext.GetAccountLevelUpRewards
	// void GetAccountLevelUpRewards(TArray<FFortItemQuantityPair>& Rewards, int32_t AccountLevel);                             // [0x91fd9f0] Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortHUDContext.ForwardOnWeaponUnEquipped
	// void ForwardOnWeaponUnEquipped();                                                                                        // [0x91fd9dc] Final|Native|Private 
	// Function /Script/FortniteUI.FortHUDContext.ForwardOnWeaponHudKeyActionUpdated
	// void ForwardOnWeaponHudKeyActionUpdated(AFortWeapon* Weapon);                                                            // [0x91fd95c] Final|Native|Private 
	// Function /Script/FortniteUI.FortHUDContext.ForwardOnWeaponEquipped
	// void ForwardOnWeaponEquipped(AFortWeapon* NewWeapon, AFortWeapon* PrevWeapon);                                           // [0x28c9a14] Final|Native|Private 
	// Function /Script/FortniteUI.FortHUDContext.ForwardOnNumSurvivorsRescuedChanged
	// void ForwardOnNumSurvivorsRescuedChanged(int32_t NumSurvivorsRescued);                                                   // [0x91fd684] Final|Native|Private 
	// Function /Script/FortniteUI.FortHUDContext.ForwardOnMissionsUpdated
	// void ForwardOnMissionsUpdated();                                                                                         // [0x91fd398] Final|Native|Private 
	// Function /Script/FortniteUI.FortHUDContext.ForwardOnAbilityDecisionWindowStackUpdated
	// void ForwardOnAbilityDecisionWindowStackUpdated();                                                                       // [0x91fceec] Final|Native|Private 
	// Function /Script/FortniteUI.FortHUDContext.EnterCursorMode
	// void EnterCursorMode(FName ActionName, UUserWidget* CursorModeWidget);                                                   // [0x91fccf4] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortHUDContext.EnterCameraMode
	// void EnterCameraMode();                                                                                                  // [0x91fcce0] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortHUDContext.AreIndicatorsEnabled
	// bool AreIndicatorsEnabled();                                                                                             // [0x91fb7e0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortHUDContext.AreHUDElementsVisible
	// bool AreHUDElementsVisible(FGameplayTagContainer& HUDElementTags);                                                       // [0x91fb718] Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortHUDContext.AddPointOfInterest
	// void AddPointOfInterest(AActor* PointOfInterest, FText DisplayText, UTexture2D* DisplayImage, bool bSpecifyColor, FLinearColor ImageColor); // [0x91fb474] Final|Native|Public|HasDefaults|BlueprintCallable 
};

/// Class /Script/FortniteUI.FortInventoryContext
/// Size: 0x02D8 (0x000030 - 0x000308)
class UFortInventoryContext : public UBlueprintContextBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 776;

public:
	SMember(FMulticastInlineDelegate)                  OnMcpWorldItemsChanged                                      OFFSET(getStruct<T>, {0x30, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnMcpOutpostItemsChanged                                    OFFSET(getStruct<T>, {0x40, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnWorldItemListChanged                                      OFFSET(getStruct<T>, {0x50, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnOutpostItemListChanged                                    OFFSET(getStruct<T>, {0x60, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnItemPickedUp                                              OFFSET(getStruct<T>, {0x70, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnQuickbarContentsChanged                                   OFFSET(getStruct<T>, {0x80, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnQuickbarRecordsChanged                                    OFFSET(getStruct<T>, {0x90, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnQuickbarSlotFocusChanged                                  OFFSET(getStruct<T>, {0xA0, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnQuickbarSecondarySlotFocusChanged                         OFFSET(getStruct<T>, {0xB0, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnQuickbarForceFullUpdate                                   OFFSET(getStruct<T>, {0xC0, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnWorldItemsChanged                                         OFFSET(getStruct<T>, {0xD0, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnCraftItemFailed                                           OFFSET(getStruct<T>, {0x100, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnVaultItemLimitStateChangedEvent                           OFFSET(getStruct<T>, {0x120, 16, 0, 0})
	CMember(TMap<UFortSchematicItemDefinition*, bool>) SchematicLockedStates                                       OFFSET(get<T>, {0x178, 80, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortInventoryContext.WouldExceedMaxStackSize
	// bool WouldExceedMaxStackSize(UFortItemDefinition* ItemDefinition, int32_t QuantityToTest);                               // [0x923ef28] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortInventoryContext.WillAllItemsSlotInCollectionBook
	// bool WillAllItemsSlotInCollectionBook(TArray<UFortItem*>& Items);                                                        // [0x923ee7c] Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure 
	// Function /Script/FortniteUI.FortInventoryContext.UpdateLastSeenResearchPointCollectionNodes
	// void UpdateLastSeenResearchPointCollectionNodes();                                                                       // [0x923eb30] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortInventoryContext.UpdateLastSeenHomebasePoints
	// void UpdateLastSeenHomebasePoints();                                                                                     // [0x923eb08] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortInventoryContext.RemoveItemFromQuickBar
	// bool RemoveItemFromQuickBar(UFortItem* Item);                                                                            // [0x923ce5c] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortInventoryContext.MakeItemQuantityPair
	// FFortItemQuantityPair MakeItemQuantityPair(UFortItemDefinition* ItemDefinition, int32_t ItemQuantity);                   // [0x923af1c] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortInventoryContext.MakeItemInstanceQuantityPair
	// FFortItemInstanceQuantityPair MakeItemInstanceQuantityPair(UFortItem* Item, TEnumAsByte<EFortInventoryType> InventoryType, int32_t ItemQuantity); // [0x923ae1c] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortInventoryContext.IsTrapAvailableForBuilding
	// bool IsTrapAvailableForBuilding(ABuildingSMActor* Actor);                                                                // [0x923a9e0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortInventoryContext.HasUnseenResearchPointCollectionNodes
	// bool HasUnseenResearchPointCollectionNodes();                                                                            // [0x923a410] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortInventoryContext.HasUnseenHomebasePoints
	// bool HasUnseenHomebasePoints();                                                                                          // [0x923a3d8] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortInventoryContext.HasUnavailableItemsInStorage
	// bool HasUnavailableItemsInStorage();                                                                                     // [0x923a36c] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortInventoryContext.HasTrapReadyForBuilding
	// bool HasTrapReadyForBuilding(ABuildingSMActor* BuildingToAttachTo);                                                      // [0x923a2a4] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortInventoryContext.HasGameplayTagContainerExact
	// bool HasGameplayTagContainerExact(FGameplayTagContainer GameplayTagContainer);                                           // [0x923a058] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortInventoryContext.HasGameplayTagContainer
	// bool HasGameplayTagContainer(FGameplayTagContainer GameplayTagContainer);                                                // [0x9239ecc] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortInventoryContext.HandleMcpProfilesInitialized
	// void HandleMcpProfilesInitialized();                                                                                     // [0x2f64dcc] Final|Native|Private 
	// Function /Script/FortniteUI.FortInventoryContext.GetVaultItemLimitStatus
	// EVaultItemLimitStatus GetVaultItemLimitStatus();                                                                         // [0x7523eb4] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortInventoryContext.GetVaultItemLimit
	// int32_t GetVaultItemLimit();                                                                                             // [0x9239d20] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortInventoryContext.GetUserFriendlyTags
	// TArray<FText> GetUserFriendlyTags(UFortItem* Item, bool bAddWeaponTier);                                                 // [0x9239c44] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/FortniteUI.FortInventoryContext.GetUpgradeItemRarityRecipeFromItemDefintion
	// FRecipe GetUpgradeItemRarityRecipeFromItemDefintion(UFortItemDefinition* ItemDefinition);                                // [0x92399e0] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortInventoryContext.GetUnseenTransformKeys
	// void GetUnseenTransformKeys(EConversionControlKeyRequest RequestType, EInventoryContentSortType SortType, TArray<UFortAccountItem*>& TransformKeys); // [0x92398c8] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/FortniteUI.FortInventoryContext.GetTrapAttachTypeName
	// FText GetTrapAttachTypeName(ABuildingSMActor* Actor);                                                                    // [0x92394ec] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortInventoryContext.GetTransmogSacrificeDataFromItemDefintion
	// bool GetTransmogSacrificeDataFromItemDefintion(UFortItemDefinition* ItemDefinition, FTransmogSacrifice& OutTransmogData); // [0x92393f0] Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortInventoryContext.GetTransformKeys
	// void GetTransformKeys(EConversionControlKeyRequest RequestType, EInventoryContentSortType SortType, TArray<UFortAccountItem*>& TransformKeys); // [0x92392d8] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/FortniteUI.FortInventoryContext.GetTotalItemQuantityByDefinition
	// int32_t GetTotalItemQuantityByDefinition(UFortItemDefinition* ItemDefinition);                                           // [0x923910c] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortInventoryContext.GetTierText
	// FText GetTierText(EFortItemTier Tier);                                                                                   // [0x9238a3c] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/FortniteUI.FortInventoryContext.GetStorageOverflowFromAddingItem
	// int32_t GetStorageOverflowFromAddingItem(UFortWorldItem* Item, int32_t Count);                                           // [0x92387d8] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortInventoryContext.GetStorageNumItems
	// int32_t GetStorageNumItems();                                                                                            // [0x9238790] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortInventoryContext.GetStorageCapacity
	// int32_t GetStorageCapacity();                                                                                            // [0x923876c] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortInventoryContext.GetResourceItemDefinition
	// UFortResourceItemDefinition* GetResourceItemDefinition(TEnumAsByte<EFortResourceType> ResourceType);                     // [0x9238204] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortInventoryContext.GetResourceCount
	// int32_t GetResourceCount(TEnumAsByte<EFortResourceType> ResourceType);                                                   // [0x9238178] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortInventoryContext.GetRecyclingWarningText
	// FText GetRecyclingWarningText(EItemRecyclingWarning Warning, bool WereAnyItemsAnimate);                                  // [0x9238070] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/FortniteUI.FortInventoryContext.GetQuickBarSlottedItem
	// UFortItem* GetQuickBarSlottedItem(EFortQuickBars InQuickBar, int32_t Slot);                                              // [0x9237a60] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortInventoryContext.GetQuickbarFocus
	// void GetQuickbarFocus(EFortQuickBars& OutQuickBar, int32_t& OutSlot, int32_t& OutSecondarySlot, int32_t& OutPreviousFocusedSlot); // [0x9237b48] Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortInventoryContext.GetNumOfItemToMulch
	// int32_t GetNumOfItemToMulch(UFortItem* Item);                                                                            // [0x92374b4] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortInventoryContext.GetNumItemsToMulch
	// int32_t GetNumItemsToMulch();                                                                                            // [0x9237490] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortInventoryContext.GetNumInInventory
	// int32_t GetNumInInventory(UFortItemDefinition* ItemDefinition, bool bIncludeReserved);                                   // [0x92373cc] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortInventoryContext.GetLevelsPerItemPromotion
	// int32_t GetLevelsPerItemPromotion();                                                                                     // [0x92370f8] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortInventoryContext.GetItemsToMulchBP
	// TArray<UFortItem*> GetItemsToMulchBP();                                                                                  // [0x9237094] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortInventoryContext.GetItemStackCount_Creative
	// FText GetItemStackCount_Creative(int32_t Quantity);                                                                      // [0x9236f60] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/FortniteUI.FortInventoryContext.GetItemInstancesByDefinition
	// void GetItemInstancesByDefinition(UFortItemDefinition* ItemDefinition, TArray<UFortItem*>& Items);                       // [0x9236de8] Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortInventoryContext.GetEquippedWeapon
	// AFortWeapon* GetEquippedWeapon();                                                                                        // [0x2be62ac] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortInventoryContext.GetDeployableBaseOverflowFromAddingItem
	// int32_t GetDeployableBaseOverflowFromAddingItem(UFortWorldItem* Item, int32_t Count);                                    // [0x9236220] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortInventoryContext.GetDeployableBaseItemCounts
	// void GetDeployableBaseItemCounts(int32_t& ItemsCount, int32_t& MaxItemsCount, int32_t& OverflowItemsCount);              // [0x92360ac] Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortInventoryContext.GetCurrentResourceItemDefinition
	// UFortResourceItemDefinition* GetCurrentResourceItemDefinition();                                                         // [0x9236034] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortInventoryContext.GetCurrentResourceCount
	// int32_t GetCurrentResourceCount();                                                                                       // [0x9236010] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortInventoryContext.GetCurrentAmmoItemDefinition
	// UFortWorldItemDefinition* GetCurrentAmmoItemDefinition();                                                                // [0x9235f74] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortInventoryContext.GetCountOfVaultLimitedItems
	// int32_t GetCountOfVaultLimitedItems();                                                                                   // [0x816cc50] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortInventoryContext.GetConversionRecipesFromItemDefintion
	// TArray<FRecipe> GetConversionRecipesFromItemDefintion(UFortItemDefinition* ItemDefinition);                              // [0x9235d7c] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortInventoryContext.GetBackpackOverflowFromAddingItem
	// int32_t GetBackpackOverflowFromAddingItem(UFortWorldItem* Item, int32_t Count);                                          // [0x9235574] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortInventoryContext.GetBackpackItemCounts
	// void GetBackpackItemCounts(int32_t& ItemsCount, int32_t& MaxItemsCount, int32_t& OverflowItemsCount);                    // [0x923544c] Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortInventoryContext.GetAccountItemsByType
	// void GetAccountItemsByType(EFortItemType ItemType, TArray<UFortAccountItem*>& Items);                                    // [0x9234fcc] Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortInventoryContext.GetAccountItemsByFilterType
	// void GetAccountItemsByFilterType(FString SearchText, EInventoryContentSortType SortType, EFortInventoryFilter Subtype, TArray<UFortAccountItem*>& OutItemList); // [0x9234844] Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortInventoryContext.ForceItemsChanged
	// void ForceItemsChanged(TArray<EFortInventoryFilter>& InventoryFilters);                                                  // [0x9233d84] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/FortniteUI.FortInventoryContext.EquipItem
	// void EquipItem(UFortItem* Item);                                                                                         // [0x9232d9c] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortInventoryContext.EnumerateRecyclingWarningsForItems
	// void EnumerateRecyclingWarningsForItems(TArray<UFortItem*>& Items, TArray<EItemRecyclingWarning>& OutWarnings);          // [0x92320bc] Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure 
	// Function /Script/FortniteUI.FortInventoryContext.DropItemOnQuickBar
	// bool DropItemOnQuickBar(UFortItem* Item, EFortQuickBars TargetQuickbar, int32_t TargetSlot);                             // [0x9231ea0] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortInventoryContext.DropItem
	// bool DropItem(UFortWorldItem* ItemBeingDropped, int32_t Quantity);                                                       // [0x9231ddc] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortInventoryContext.DropCreativeItemOnQuickBar
	// bool DropCreativeItemOnQuickBar(UFortItem* Item, EFortQuickBars TargetQuickbar, int32_t TargetSlot);                     // [0x9231ce0] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortInventoryContext.DestroyWorldItem
	// void DestroyWorldItem(UFortItem* Item);                                                                                  // [0x92318bc] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortInventoryContext.CraftSchematic
	// bool CraftSchematic(UFortSchematicItem* SchematicItem, EFortCraftFailCause& FailCause, EFortItemTier RequestedTier, int32_t CraftCount); // [0x92315c0] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/FortniteUI.FortInventoryContext.CraftAndSlotSchematic
	// bool CraftAndSlotSchematic(UFortSchematicItem* SchematicItem, int32_t PostCraftSlot, EFortCraftFailCause& FailCause, EFortItemTier RequestedTier, int32_t CraftCount); // [0x923128c] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/FortniteUI.FortInventoryContext.CanUpgradeItemRarity
	// bool CanUpgradeItemRarity(UFortItem* Item, TArray<EItemEvolutionRestrictionReason>& OutRestrictionReasons);              // [0x923082c] Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure 
	// Function /Script/FortniteUI.FortInventoryContext.CanSwapItem
	// bool CanSwapItem(UFortItem* Item, EFortQuickBars TargetQuickbar, int32_t TargetSlot);                                    // [0x9230690] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortInventoryContext.CanRecycle
	// bool CanRecycle(UFortItem* Item, TArray<EItemRecyclingRestrictionReason>& OutRestrictionReasons);                        // [0x922fe30] Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortInventoryContext.CanItemBePromoted
	// bool CanItemBePromoted(UFortItem* Item, TArray<FFortItemQuantityPair>& Costs);                                           // [0x922fd10] Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortInventoryContext.CanItemBeMulched
	// bool CanItemBeMulched(UFortItem* Item, FText& OutRestrictionReasons);                                                    // [0x922fc24] Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortInventoryContext.CanEvolve
	// bool CanEvolve(UFortItem* Item, TArray<EItemEvolutionRestrictionReason>& OutRestrictionReasons);                         // [0x922f53c] Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortInventoryContext.CanCraftSchematic
	// bool CanCraftSchematic(UFortSchematicItem* SchematicItem, EFortCraftFailCause& FailCause, EFortItemTier RequestedTier, int32_t CraftCount); // [0x922f19c] Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortInventoryContext.AreAnyItemsUnseenForInventoryFilter
	// bool AreAnyItemsUnseenForInventoryFilter(EFortFrontendInventoryFilter InventoryFilter);                                  // [0x922efac] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortInventoryContext.AreAnyItemsInanimate
	// bool AreAnyItemsInanimate(TArray<UFortItem*>& Items);                                                                    // [0x922eec8] Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure 
	// Function /Script/FortniteUI.FortInventoryContext.AreAnyItemsAnimate
	// bool AreAnyItemsAnimate(TArray<UFortItem*>& Items);                                                                      // [0x922ede4] Final|Native|Static|Public|HasOutParms|BlueprintCallable|BlueprintPure 
};

/// Class /Script/FortniteUI.FortLeaderboardContext
/// Size: 0x0000 (0x000030 - 0x000030)
class UFortLeaderboardContext : public UBlueprintContextBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 48;

public:
};

/// Class /Script/FortniteUI.FortPickerContext
/// Size: 0x01E0 (0x000030 - 0x000210)
class UFortPickerContext : public UBlueprintContextBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 528;

public:
	SMember(FMulticastInlineDelegate)                  OnShowPicker                                                OFFSET(getStruct<T>, {0x30, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnPickerConfirm                                             OFFSET(getStruct<T>, {0x40, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnPickerCancel                                              OFFSET(getStruct<T>, {0x50, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnPickerOptionMoved                                         OFFSET(getStruct<T>, {0x60, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnPickerOptionChosen                                        OFFSET(getStruct<T>, {0x70, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnPickerRefreshItems                                        OFFSET(getStruct<T>, {0x80, 16, 0, 0})
	CMember(TArray<FItemDefOptionData>)                CustomPickerMenuItems                                       OFFSET(get<T>, {0xA8, 16, 0, 0})
	CMember(TArray<FSquadQuickChatOptionData>)         SquadChatMenuItems                                          OFFSET(get<T>, {0xB8, 16, 0, 0})
	CMember(TMap<UFortItemDefinition*, FTrackedTrapTimeAndCount>) TrackedTrapsMap                                  OFFSET(get<T>, {0xC8, 80, 0, 0})
	CMember(UFortPickerData*)                          PickerData                                                  OFFSET(get<T>, {0x120, 8, 0, 0})
	CMember(TArray<UFortSchematicItem*>)               AccountTrapSchematics                                       OFFSET(get<T>, {0x128, 16, 0, 0})
	CMember(TArray<FFortPickerTemporaryWheel>)         AvailableWheels                                             OFFSET(get<T>, {0x138, 16, 0, 0})
	DMember(int32_t)                                   CurrentWheelIndex                                           OFFSET(get<int32_t>, {0x148, 4, 0, 0})
	CMember(TMap<UObject*, int32_t>)                   ConsumableStackCount                                        OFFSET(get<T>, {0x158, 80, 0, 0})
	CMember(TMap<FGameplayTag, FText>)                 CategoryTitles                                              OFFSET(get<T>, {0x1B0, 80, 0, 0})
	CMember(TArray<FGameplayTag>)                      CategoryTags                                                OFFSET(get<T>, {0x200, 16, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortPickerContext.UseLeftThumbstick
	// bool UseLeftThumbstick();                                                                                                // [0x923ee2c] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortPickerContext.ShowRadialPickerMenu
	// void ShowRadialPickerMenu(EFortPickerToDisplay PickerType, int32_t WheelIndex, UObject* ContextObject);                  // [0x923dd28] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortPickerContext.SetFortPickerData
	// void SetFortPickerData(UFortPickerData* Data);                                                                           // [0x340f464] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortPickerContext.RestoreInputAxes
	// void RestoreInputAxes();                                                                                                 // [0x923cfc4] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortPickerContext.PickerOptionAccepted
	// void PickerOptionAccepted(int32_t Option);                                                                               // [0x923cadc] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortPickerContext.PickerCanceled
	// void PickerCanceled();                                                                                                   // [0x923cac8] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortPickerContext.LegacySwitchToAdjacentWheel
	// void LegacySwitchToAdjacentWheel(int32_t SelectionDirection);                                                            // [0x923acdc] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortPickerContext.GetRadialPickerOptionItem
	// void GetRadialPickerOptionItem(int32_t Index, UFortItem*& Item, bool& bOptionEnabled);                                   // [0x9237f50] Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortPickerContext.GetRadialPickerOptionImageAndLabel
	// void GetRadialPickerOptionImageAndLabel(int32_t Index, FText& Label, FSlateBrush& Brush, TWeakObjectPtr<UTexture2D*>& Icon, bool& bOptionEnabled, bool& bIsLocked); // [0x9237cd4] Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortPickerContext.GetPickerWheelAdjacency
	// void GetPickerWheelAdjacency(bool& bCanPageLeft, bool& bCanPageRight);                                                   // [0x92377a4] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/FortniteUI.FortPickerContext.GetNumPickerOptions
	// int32_t GetNumPickerOptions();                                                                                           // [0x9237544] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortPickerContext.GetListPickerOption
	// UFortItem* GetListPickerOption(int32_t Index);                                                                           // [0x9237124] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortPickerContext.GetCurrentWheelIndex
	// int32_t GetCurrentWheelIndex();                                                                                          // [0x9236058] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortPickerContext.GetCurrentPickerDisplayName
	// FText GetCurrentPickerDisplayName();                                                                                     // [0x9235f98] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortPickerContext.GetAdjacentPickerWheelInformation
	// void GetAdjacentPickerWheelInformation(int32_t Direction, FText& AdjacentTitle, bool& bCanPageThisDirection);            // [0x92350b0] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/FortniteUI.FortPickerContext.DoesRadialCloseOnRelease
	// bool DoesRadialCloseOnRelease();                                                                                         // [0x9231c3c] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/FortniteUI.FortSettingsContext
/// Size: 0x00D8 (0x000030 - 0x000108)
class UFortSettingsContext : public UBlueprintContextBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 264;

public:
	DMember(float)                                     MinGammaValue                                               OFFSET(get<float>, {0x3C, 4, 0, 0})
	DMember(float)                                     MaxGammaValue                                               OFFSET(get<float>, {0x40, 4, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortSettingsContext.YawInversionReset
	// void YawInversionReset(bool bInChecked);                                                                                 // [0x923f15c] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortSettingsContext.YawInversionChanged
	// void YawInversionChanged(bool bInChecked);                                                                               // [0x923f0dc] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortSettingsContext.YawForMotionInversionReset
	// void YawForMotionInversionReset(bool bInChecked);                                                                        // [0x923f05c] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortSettingsContext.YawForMotionInversionChanged
	// void YawForMotionInversionChanged(bool bInChecked);                                                                      // [0x923f05c] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortSettingsContext.UpdateGammaSettings
	// void UpdateGammaSettings(float GammaValue);                                                                              // [0x923ea88] Final|Native|Public|BlueprintCallable|Const 
	// Function /Script/FortniteUI.FortSettingsContext.TouchVerticalSensitivityValueChanged
	// void TouchVerticalSensitivityValueChanged(float NewValue);                                                               // [0x923e91c] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortSettingsContext.TouchTargetingMultiplierValueChanged
	// void TouchTargetingMultiplierValueChanged(float NewValue);                                                               // [0x923e89c] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortSettingsContext.TouchLookSensitivityChanged
	// void TouchLookSensitivityChanged(float NewValue);                                                                        // [0x923e81c] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortSettingsContext.TouchLookAccelerationMultiplierValueChanged
	// void TouchLookAccelerationMultiplierValueChanged(float NewValue);                                                        // [0x923e79c] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortSettingsContext.TouchEditModeMultiplierValueChanged
	// void TouchEditModeMultiplierValueChanged(float NewValue);                                                                // [0x923e71c] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortSettingsContext.TouchDragScopedSensitivityValueChanged
	// void TouchDragScopedSensitivityValueChanged(float NewValue);                                                             // [0x923e69c] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortSettingsContext.TouchBuildingMultiplierValueChanged
	// void TouchBuildingMultiplierValueChanged(float NewValue);                                                                // [0x923e61c] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortSettingsContext.TargetingToggleChanged
	// void TargetingToggleChanged(bool bInChecked);                                                                            // [0x923e59c] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortSettingsContext.TargetingMultiplierValueChanged
	// void TargetingMultiplierValueChanged(float NewValue);                                                                    // [0x923e51c] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortSettingsContext.TapInteractChanged
	// void TapInteractChanged(bool bInChecked);                                                                                // [0x923e49c] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortSettingsContext.SprintToggleChanged
	// void SprintToggleChanged(bool bInChecked);                                                                               // [0x923e358] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortSettingsContext.SprintCancelsReloadChanged
	// void SprintCancelsReloadChanged(bool bInChecked);                                                                        // [0x56ae764] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortSettingsContext.SoundFXVolumeChanged
	// void SoundFXVolumeChanged(float NewValue);                                                                               // [0x923e2d8] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortSettingsContext.SliderSettingReset
	// void SliderSettingReset(ESettingType InSettingType, FText NameText, float PreviousValue, float NewValue);                // [0x923e13c] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortSettingsContext.SliderSettingChanged
	// void SliderSettingChanged(ESettingType InSettingType, FText NameText, float PreviousValue, float NewValue);              // [0x923dfe0] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortSettingsContext.ShowViewerCountChanged
	// void ShowViewerCountChanged(bool bInChecked);                                                                            // [0x923df38] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortSettingsContext.ShowTemperatureChanged
	// void ShowTemperatureChanged(bool IsChecked);                                                                             // [0x923dec8] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortSettingsContext.ShowSeasonLevelChanged
	// void ShowSeasonLevelChanged(bool bInChanged);                                                                            // [0x923de34] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortSettingsContext.SetVoiceChatSettings
	// void SetVoiceChatSettings(ESocialCommsPermission NewValue);                                                              // [0x923dc80] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortSettingsContext.SetVoiceChatPTTEnabled
	// void SetVoiceChatPTTEnabled(bool bNewValue);                                                                             // [0x923dc00] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortSettingsContext.SetVoiceChatEnabled
	// void SetVoiceChatEnabled(bool bNewValue);                                                                                // [0x923db80] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortSettingsContext.SetVoiceChat3DEnabled
	// void SetVoiceChat3DEnabled(bool bNewValue);                                                                              // [0x923db00] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortSettingsContext.SetVisualizeAudioSources
	// void SetVisualizeAudioSources(bool bEnable);                                                                             // [0x923da80] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortSettingsContext.SetSubtitlesEnabled
	// void SetSubtitlesEnabled(bool bNewValue);                                                                                // [0x923da00] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortSettingsContext.SetShowVoiceIndicators
	// void SetShowVoiceIndicators(bool bInChecked);                                                                            // [0x923d900] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortSettingsContext.SetQuality
	// void SetQuality(int32_t NewQuality);                                                                                     // [0x923d890] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortSettingsContext.SetLockPrimaryInputMethodToMouse
	// void SetLockPrimaryInputMethodToMouse(bool bLock);                                                                       // [0x923d810] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortSettingsContext.SetIgnoreGamepadInput
	// void SetIgnoreGamepadInput(bool bIgnore);                                                                                // [0x923d790] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortSettingsContext.SetEnableRudderControl
	// void SetEnableRudderControl(bool bEnable);                                                                               // [0x923d710] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortSettingsContext.SetColorBlindStrength
	// void SetColorBlindStrength(int32_t InColorBlindStrength);                                                                // [0x923d690] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortSettingsContext.SetColorBlindMode
	// void SetColorBlindMode(int32_t InMode);                                                                                  // [0x923d610] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortSettingsContext.SetAutoJoinGameVoiceChannel
	// void SetAutoJoinGameVoiceChannel(bool bInChecked);                                                                       // [0x923d590] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortSettingsContext.SetAllowSidekickFeature1
	// void SetAllowSidekickFeature1(bool bInChecked);                                                                          // [0x923d4fc] Final|Native|Public  
	// Function /Script/FortniteUI.FortSettingsContext.SetAllowGameVolumeWhenMinimized
	// void SetAllowGameVolumeWhenMinimized(EFortAllowBackgroundAudioSetting NewValue);                                         // [0x923d478] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortSettingsContext.ScopedMultiplierValueChanged
	// void ScopedMultiplierValueChanged(float NewValue);                                                                       // [0x923d3f8] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortSettingsContext.SafeZoneChanged
	// void SafeZoneChanged(float NewValue);                                                                                    // [0x923d388] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortSettingsContext.RudderMaxThrottleChanged
	// void RudderMaxThrottleChanged(float NewValue);                                                                           // [0x923d308] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortSettingsContext.RudderDeadZoneChanged
	// void RudderDeadZoneChanged(float NewValue);                                                                              // [0x923d288] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortSettingsContext.RotatorSettingReset
	// void RotatorSettingReset(ESettingType InSettingType, FText NameText, int32_t PreviousValue, int32_t NewValue);           // [0x923d130] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortSettingsContext.RotatorSettingChanged
	// void RotatorSettingChanged(ESettingType InSettingType, FText NameText, int32_t PreviousValue, int32_t NewValue);         // [0x923cfd8] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortSettingsContext.ResetGamepadMoveStickDeadZone
	// void ResetGamepadMoveStickDeadZone();                                                                                    // [0x923cf58] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortSettingsContext.ResetGamepadLookStickDeadZone
	// void ResetGamepadLookStickDeadZone();                                                                                    // [0x923ceec] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortSettingsContext.PowerSaverModeChanged
	// void PowerSaverModeChanged(bool bInChecked);                                                                             // [0x923cddc] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortSettingsContext.PitchInversionReset
	// void PitchInversionReset(bool bInChecked);                                                                               // [0x923cd5c] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortSettingsContext.PitchInversionChanged
	// void PitchInversionChanged(bool bInChecked);                                                                             // [0x923ccdc] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortSettingsContext.PitchForMotionInversionReset
	// void PitchForMotionInversionReset(bool bInChecked);                                                                      // [0x923cc5c] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortSettingsContext.PitchForMotionInversionChanged
	// void PitchForMotionInversionChanged(bool bInChecked);                                                                    // [0x923cc5c] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortSettingsContext.PitchForAircraftSecondaryInversionReset
	// void PitchForAircraftSecondaryInversionReset(bool bInChecked);                                                           // [0x923cbdc] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortSettingsContext.PitchForAircraftSecondaryInversionChanged
	// void PitchForAircraftSecondaryInversionChanged(bool bInChecked);                                                         // [0x923cbdc] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortSettingsContext.PitchForAircraftPrimaryInversionReset
	// void PitchForAircraftPrimaryInversionReset(bool bInChecked);                                                             // [0x923cb5c] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortSettingsContext.PitchForAircraftPrimaryInversionChanged
	// void PitchForAircraftPrimaryInversionChanged(bool bInChecked);                                                           // [0x923cb5c] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortSettingsContext.PeripheralLightingChanged
	// void PeripheralLightingChanged(bool bInChecked);                                                                         // [0x923ca48] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortSettingsContext.OpenSettingsIfSaved
	// void OpenSettingsIfSaved();                                                                                              // [0x923ca34] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortSettingsContext.OnTurboBuildReset
	// void OnTurboBuildReset(bool bInChecked);                                                                                 // [0x923c9b4] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortSettingsContext.OnTurboBuildChanged
	// void OnTurboBuildChanged(bool bInChecked);                                                                               // [0x923c934] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortSettingsContext.OnTouchEditChanged
	// void OnTouchEditChanged(bool bInChecked);                                                                                // [0x923c8b4] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortSettingsContext.OnSmartBuildChanged
	// void OnSmartBuildChanged(bool bInChecked);                                                                               // [0x923c814] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortSettingsContext.OnSlideButtonHoldTimeChanged
	// void OnSlideButtonHoldTimeChanged(float NewValue);                                                                       // [0x923c794] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortSettingsContext.OnShowGlobalChatEnabledChanged
	// void OnShowGlobalChatEnabledChanged(bool bInChecked);                                                                    // [0x923c714] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortSettingsContext.OnShadowPlayHighlightsChanged
	// void OnShadowPlayHighlightsChanged(bool bInChecked);                                                                     // [0x923c694] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortSettingsContext.OnReplayRecordingPreferenceChanged
	// void OnReplayRecordingPreferenceChanged(bool bInChecked);                                                                // [0x923c614] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortSettingsContext.OnQuickEditChanged
	// void OnQuickEditChanged(bool bInChecked);                                                                                // [0x923c594] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortSettingsContext.OnPlayerSurveysAllowedChanged
	// void OnPlayerSurveysAllowedChanged(bool bInChecked);                                                                     // [0x923c514] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortSettingsContext.OnPlaceDangerMarkerWhenTargetingChanged
	// void OnPlaceDangerMarkerWhenTargetingChanged(bool bInChecked);                                                           // [0x923c494] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortSettingsContext.OnLocalNotificationsChanged
	// void OnLocalNotificationsChanged(bool bInChecked);                                                                       // [0x923c394] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortSettingsContext.OnLargeTeamsReplayRecordingPreferenceChanged
	// void OnLargeTeamsReplayRecordingPreferenceChanged(bool bInChecked);                                                      // [0x923c314] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortSettingsContext.OnHUDScaleChanged
	// void OnHUDScaleChanged(float bInHUDScale);                                                                               // [0x923c294] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortSettingsContext.OnGamepadAutoRunChanged
	// void OnGamepadAutoRunChanged(bool bInChecked);                                                                           // [0x923c214] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortSettingsContext.OnForceFeedbackChanged
	// void OnForceFeedbackChanged(bool bInChecked);                                                                            // [0x923c194] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortSettingsContext.OnFocusOnFirstBuildingPieceWhenQuickbarSwappedChangedAthena
	// void OnFocusOnFirstBuildingPieceWhenQuickbarSwappedChangedAthena(bool bInChecked);                                       // [0x923c114] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortSettingsContext.OnFocusOnFirstBuildingPieceWhenQuickbarSwappedChanged
	// void OnFocusOnFirstBuildingPieceWhenQuickbarSwappedChanged(bool bInChecked);                                             // [0x923c094] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortSettingsContext.OnEnableTryBuildOnFocusChanged
	// void OnEnableTryBuildOnFocusChanged(bool bInChecked);                                                                    // [0x923c014] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortSettingsContext.OnEnablePreferredItemSlotsChanged
	// void OnEnablePreferredItemSlotsChanged(bool bInChanged);                                                                 // [0x923bf74] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortSettingsContext.OnEditModeAimAssistChanged
	// void OnEditModeAimAssistChanged(bool bInChecked);                                                                        // [0x923bef4] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortSettingsContext.OnEditConfirmOnReleaseChanged
	// void OnEditConfirmOnReleaseChanged(bool bInChecked);                                                                     // [0x923be74] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortSettingsContext.OnEditButtonHoldTimeChanged
	// void OnEditButtonHoldTimeChanged(float NewValue);                                                                        // [0x923bdf4] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortSettingsContext.OnDisablePreEditsWhenPlacingBuildingChanged
	// void OnDisablePreEditsWhenPlacingBuildingChanged(bool bInChecked);                                                       // [0x923bd74] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortSettingsContext.OnCrossplayPreferenceChanged
	// void OnCrossplayPreferenceChanged(bool bInChecked);                                                                      // [0x923bcf4] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortSettingsContext.OnCreativeTurboDeleteReset
	// void OnCreativeTurboDeleteReset(bool bInChecked);                                                                        // [0x923bc74] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortSettingsContext.OnCreativeTurboDeleteChanged
	// void OnCreativeTurboDeleteChanged(bool bInChecked);                                                                      // [0x923bc74] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortSettingsContext.OnCreativeModeReplayRecordingPreferenceChanged
	// void OnCreativeModeReplayRecordingPreferenceChanged(bool bInChecked);                                                    // [0x923bbf4] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortSettingsContext.OnContextTutorialChanged
	// void OnContextTutorialChanged(bool bInChecked);                                                                          // [0x923bb74] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortSettingsContext.OnClipRemindersEnabledChanged
	// void OnClipRemindersEnabledChanged(bool bInChecked);                                                                     // [0x923bae0] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortSettingsContext.OnBuildingPossessionChanged
	// void OnBuildingPossessionChanged(bool bInChecked);                                                                       // [0x923ba60] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortSettingsContext.OnAutoSortConsumablesToRightChanged
	// void OnAutoSortConsumablesToRightChanged(bool bInChecked);                                                               // [0x923b9e0] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortSettingsContext.OnAutoPickupWeaponsConsolePCChanged
	// void OnAutoPickupWeaponsConsolePCChanged(bool bInChecked);                                                               // [0x923b960] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortSettingsContext.OnAutoPickupWeaponsChanged
	// void OnAutoPickupWeaponsChanged(bool bInChecked);                                                                        // [0x923b8e0] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortSettingsContext.OnAutoOpenDoorsChanged
	// void OnAutoOpenDoorsChanged(bool bInChecked);                                                                            // [0x923b860] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortSettingsContext.OnAutoClamberChanged
	// void OnAutoClamberChanged(bool bInChecked);                                                                              // [0x923b7cc] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortSettingsContext.OnAutoChangeMaterialReset
	// void OnAutoChangeMaterialReset(bool bInChecked);                                                                         // [0x923b74c] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortSettingsContext.OnAutoChangeMaterialChanged
	// void OnAutoChangeMaterialChanged(bool bInChecked);                                                                       // [0x923b6cc] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortSettingsContext.OnAimAssistReset
	// void OnAimAssistReset(bool bInChecked);                                                                                  // [0x923b64c] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortSettingsContext.OnAimAssistChanged
	// void OnAimAssistChanged(bool bInChecked);                                                                                // [0x923b5cc] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortSettingsContext.MusicVolumeChanged
	// void MusicVolumeChanged(float NewValue);                                                                                 // [0x923b54c] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortSettingsContext.MouseSensitivityYChanged
	// void MouseSensitivityYChanged(float NewValue);                                                                           // [0x923b4cc] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortSettingsContext.MouseSensitivityXChanged
	// void MouseSensitivityXChanged(float NewValue);                                                                           // [0x923b44c] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortSettingsContext.MouseSensitivityMultiplierForAircraftChanged
	// void MouseSensitivityMultiplierForAircraftChanged(float NewValue);                                                       // [0x923b3cc] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortSettingsContext.MotionTargetingMultiplierValueChanged
	// void MotionTargetingMultiplierValueChanged(float NewValue);                                                              // [0x923b34c] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortSettingsContext.MotionScopedMultiplierValueChanged
	// void MotionScopedMultiplierValueChanged(float NewValue);                                                                 // [0x923b2cc] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortSettingsContext.MotionHarvestingToolMultiplierValueChanged
	// void MotionHarvestingToolMultiplierValueChanged(float NewValue);                                                         // [0x923b24c] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortSettingsContext.MotionControlEnabledValueChanged
	// void MotionControlEnabledValueChanged(bool NewValue);                                                                    // [0x923b1cc] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortSettingsContext.MotionAxisValueChanged
	// void MotionAxisValueChanged(int32_t NewValue);                                                                           // [0x923b14c] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortSettingsContext.MasterVolumeChanged
	// void MasterVolumeChanged(float NewValue);                                                                                // [0x923b0bc] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortSettingsContext.InWorldInteractChanged
	// void InWorldInteractChanged(bool bInChecked);                                                                            // [0x923a6d8] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortSettingsContext.HoldToSwapPickupChanged
	// void HoldToSwapPickupChanged(bool bInChecked);                                                                           // [0x923a658] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortSettingsContext.HideOtherPlayerNamesChanged
	// void HideOtherPlayerNamesChanged(bool bInChecked);                                                                       // [0x923a4dc] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortSettingsContext.HiddenMatchmakingDelayMaxReset
	// void HiddenMatchmakingDelayMaxReset();                                                                                   // [0x923a4c8] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortSettingsContext.HiddenMatchmakingDelayMaxChanged
	// void HiddenMatchmakingDelayMaxChanged(int32_t InValue);                                                                  // [0x923a448] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortSettingsContext.GyroSensitivityValueChanged
	// void GyroSensitivityValueChanged(float NewValue);                                                                        // [0x9239e4c] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortSettingsContext.GetYawInversionState
	// bool GetYawInversionState();                                                                                             // [0x9239e28] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortSettingsContext.GetYawForMotionInversionState
	// bool GetYawForMotionInversionState();                                                                                    // [0x9239e04] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortSettingsContext.GetVoiceChatSettings
	// ESocialCommsPermission GetVoiceChatSettings();                                                                           // [0x9239dc8] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortSettingsContext.GetVoiceChatPTTEnabled
	// bool GetVoiceChatPTTEnabled();                                                                                           // [0x9239da4] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortSettingsContext.GetVoiceChatEnabled
	// bool GetVoiceChatEnabled();                                                                                              // [0x9239d80] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortSettingsContext.GetVoiceChat3DEnabled
	// bool GetVoiceChat3DEnabled();                                                                                            // [0x9239d5c] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortSettingsContext.GetVisualizeAudioSources
	// bool GetVisualizeAudioSources();                                                                                         // [0x9239d38] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortSettingsContext.GetTurboBuild
	// bool GetTurboBuild();                                                                                                    // [0x923959c] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortSettingsContext.GetTouchVerticalSensitivityValue
	// float GetTouchVerticalSensitivityValue();                                                                                // [0x92392b0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortSettingsContext.GetTouchTargetingMultiplierValue
	// float GetTouchTargetingMultiplierValue();                                                                                // [0x9239288] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortSettingsContext.GetTouchLookSensitivityValue
	// float GetTouchLookSensitivityValue();                                                                                    // [0x9239260] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortSettingsContext.GetTouchLookAccelerationMultiplier
	// float GetTouchLookAccelerationMultiplier();                                                                              // [0x9239238] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortSettingsContext.GetTouchEditState
	// bool GetTouchEditState();                                                                                                // [0x9239214] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortSettingsContext.GetTouchEditModeMultiplierValue
	// float GetTouchEditModeMultiplierValue();                                                                                 // [0x92391ec] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortSettingsContext.GetTouchDragScopedSensitivityValue
	// float GetTouchDragScopedSensitivityValue();                                                                              // [0x92391c4] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortSettingsContext.GetTouchBuildingMultiplierValue
	// float GetTouchBuildingMultiplierValue();                                                                                 // [0x923919c] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortSettingsContext.GetTargetTypeIndicatorVisible
	// bool GetTargetTypeIndicatorVisible();                                                                                    // [0x92389b4] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortSettingsContext.GetTargetingToggleState
	// bool GetTargetingToggleState();                                                                                          // [0x9238a18] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortSettingsContext.GetTargetingMultiplierValue
	// float GetTargetingMultiplierValue();                                                                                     // [0x92389f0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortSettingsContext.GetTapInteractState
	// bool GetTapInteractState();                                                                                              // [0x9238990] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortSettingsContext.GetSubtitlesEnabled
	// bool GetSubtitlesEnabled();                                                                                              // [0x923896c] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortSettingsContext.GetSprintToggleState
	// bool GetSprintToggleState();                                                                                             // [0x9238748] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortSettingsContext.GetSprintCancelsReloadState
	// bool GetSprintCancelsReloadState();                                                                                      // [0x2a1f97c] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortSettingsContext.GetSoundFXVolumeValue
	// float GetSoundFXVolumeValue();                                                                                           // [0x9238720] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortSettingsContext.GetSmartBuildState
	// bool GetSmartBuildState();                                                                                               // [0x9238620] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortSettingsContext.GetSliderSettingValue
	// float GetSliderSettingValue(ESettingType InSettingType);                                                                 // [0x9238590] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortSettingsContext.GetSlideButtonHoldTimeValue
	// float GetSlideButtonHoldTimeValue();                                                                                     // [0x9238568] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortSettingsContext.GetShowVoiceIndicators
	// bool GetShowVoiceIndicators();                                                                                           // [0x9238544] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortSettingsContext.GetShowViewerCountEnabled
	// bool GetShowViewerCountEnabled();                                                                                        // [0x9238520] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortSettingsContext.GetShowTemperature
	// bool GetShowTemperature();                                                                                               // [0x92384fc] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortSettingsContext.GetShowSeasonLevel
	// bool GetShowSeasonLevel();                                                                                               // [0x92384bc] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortSettingsContext.GetShowGlobalChatEnabled
	// bool GetShowGlobalChatEnabled();                                                                                         // [0x9238498] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortSettingsContext.GetShadowPlayHighlightsEnabled
	// bool GetShadowPlayHighlightsEnabled();                                                                                   // [0x9238474] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortSettingsContext.GetSettingDisplayNames
	// TArray<FText> GetSettingDisplayNames(ESettingType InSettingType);                                                        // [0x92383b0] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortSettingsContext.GetScopedMultiplierValue
	// float GetScopedMultiplierValue();                                                                                        // [0x9238388] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortSettingsContext.GetSafeZoneValue
	// float GetSafeZoneValue();                                                                                                // [0x9238360] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortSettingsContext.GetRudderMaxThrottle
	// float GetRudderMaxThrottle();                                                                                            // [0x9238338] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortSettingsContext.GetRudderDeadZone
	// float GetRudderDeadZone();                                                                                               // [0x9238310] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortSettingsContext.GetRotatorSettingValue
	// int32_t GetRotatorSettingValue(ESettingType InSettingType);                                                              // [0x9238284] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortSettingsContext.GetReplayRecordingEnabled
	// bool GetReplayRecordingEnabled();                                                                                        // [0x9238154] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortSettingsContext.GetQuickEditState
	// bool GetQuickEditState();                                                                                                // [0x9237b24] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortSettingsContext.GetQuality
	// int32_t GetQuality();                                                                                                    // [0x9237a3c] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortSettingsContext.GetPreferredItemSlotType
	// EFortPreferredItemSlotItemType GetPreferredItemSlotType(int32_t SlotIndex);                                              // [0x92379b0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortSettingsContext.GetPowerSaverMode
	// bool GetPowerSaverMode();                                                                                                // [0x923798c] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortSettingsContext.GetPlayerSurveysAllowed
	// bool GetPlayerSurveysAllowed();                                                                                          // [0x9237968] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortSettingsContext.GetPlaceDangerMarkerWhenTargeting
	// bool GetPlaceDangerMarkerWhenTargeting();                                                                                // [0x9237944] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortSettingsContext.GetPitchInversionState
	// bool GetPitchInversionState();                                                                                           // [0x9237920] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortSettingsContext.GetPitchForMotionInversionState
	// bool GetPitchForMotionInversionState();                                                                                  // [0x92378fc] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortSettingsContext.GetPitchForAircraftSecondaryInversionState
	// bool GetPitchForAircraftSecondaryInversionState();                                                                       // [0x92378d8] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortSettingsContext.GetPitchForAircraftPrimaryInversionState
	// bool GetPitchForAircraftPrimaryInversionState();                                                                         // [0x92378b4] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortSettingsContext.GetPeripheralLightingEnabled
	// bool GetPeripheralLightingEnabled();                                                                                     // [0x9237780] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortSettingsContext.GetMusicVolumeValue
	// float GetMusicVolumeValue();                                                                                             // [0x92373a4] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortSettingsContext.GetMouseSensitivityValue
	// FVector2D GetMouseSensitivityValue();                                                                                    // [0x9237374] Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortSettingsContext.GetMouseSensitivityMultiplierForAircraft
	// float GetMouseSensitivityMultiplierForAircraft();                                                                        // [0x923734c] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortSettingsContext.GetMotionTargetingMultiplierValue
	// float GetMotionTargetingMultiplierValue();                                                                               // [0x9237324] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortSettingsContext.GetMotionScopedMultiplierValue
	// float GetMotionScopedMultiplierValue();                                                                                  // [0x92372fc] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortSettingsContext.GetMotionHarvestingToolMultiplierValue
	// float GetMotionHarvestingToolMultiplierValue();                                                                          // [0x92372d4] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortSettingsContext.GetMotionControlsEnabledValue
	// bool GetMotionControlsEnabledValue();                                                                                    // [0x92372b0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortSettingsContext.GetMotionAxisValue
	// int32_t GetMotionAxisValue();                                                                                            // [0x923728c] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortSettingsContext.GetMotionAxisNames
	// TArray<FText> GetMotionAxisNames();                                                                                      // [0x9237250] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortSettingsContext.GetMasterVolumeValue
	// float GetMasterVolumeValue();                                                                                            // [0x9237228] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortSettingsContext.GetLockPrimaryInputMethodToMouse
	// bool GetLockPrimaryInputMethodToMouse();                                                                                 // [0x9237204] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortSettingsContext.GetLocalNotificationsState
	// bool GetLocalNotificationsState();                                                                                       // [0x92371e0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortSettingsContext.GetLargeTeamsReplayRecordingEnabled
	// bool GetLargeTeamsReplayRecordingEnabled();                                                                              // [0x92370d4] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortSettingsContext.GetInWorldInteractState
	// bool GetInWorldInteractState();                                                                                          // [0x9236dc4] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortSettingsContext.GetIgnoreGamepadInput
	// bool GetIgnoreGamepadInput();                                                                                            // [0x9236da0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortSettingsContext.GetHUDScaleRaw
	// float GetHUDScaleRaw();                                                                                                  // [0x9236c24] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortSettingsContext.GetHUDScale
	// float GetHUDScale();                                                                                                     // [0x9236bfc] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortSettingsContext.GetHoldToSwapPickupState
	// bool GetHoldToSwapPickupState();                                                                                         // [0x9236d7c] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortSettingsContext.GetHitNumbersMode
	// EHitNumbersMode GetHitNumbersMode();                                                                                     // [0x9236d58] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortSettingsContext.GetHitFeedbackMode
	// EHitFeedbackMode GetHitFeedbackMode();                                                                                   // [0x9236d34] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortSettingsContext.GetHideOtherPlayerNames
	// bool GetHideOtherPlayerNames();                                                                                          // [0x9236d10] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortSettingsContext.GetHiddenMatchmakingDelayMax
	// int32_t GetHiddenMatchmakingDelayMax();                                                                                  // [0x9236c4c] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortSettingsContext.GetGyroSensitivityValue
	// float GetGyroSensitivityValue();                                                                                         // [0x9236b90] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortSettingsContext.GetGammaSettings
	// float GetGammaSettings();                                                                                                // [0x9236b68] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortSettingsContext.GetGamepadTargetingMultiplierValue
	// float GetGamepadTargetingMultiplierValue();                                                                              // [0x9236b40] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortSettingsContext.GetGamepadScopedMultiplierValue
	// float GetGamepadScopedMultiplierValue();                                                                                 // [0x9236b18] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortSettingsContext.GetGamepadMoveStickDeadZone
	// float GetGamepadMoveStickDeadZone();                                                                                     // [0x9236af0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortSettingsContext.GetGamepadLookStickDeadZone
	// float GetGamepadLookStickDeadZone();                                                                                     // [0x9236ac8] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortSettingsContext.GetGamepadLookSensitivityValue
	// FVector2D GetGamepadLookSensitivityValue();                                                                              // [0x9236a98] Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortSettingsContext.GetGamepadEditModeMultiplierValue
	// float GetGamepadEditModeMultiplierValue();                                                                               // [0x9236a70] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortSettingsContext.GetGamepadBuildingMultiplierValue
	// float GetGamepadBuildingMultiplierValue();                                                                               // [0x9236a48] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortSettingsContext.GetGamepadAutoRunState
	// bool GetGamepadAutoRunState();                                                                                           // [0x9236a24] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortSettingsContext.GetForceFeedbackState
	// bool GetForceFeedbackState();                                                                                            // [0x9236978] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortSettingsContext.GetFocusOnFirstBuildingPieceWhenQuickbarSwappedStateAthena
	// bool GetFocusOnFirstBuildingPieceWhenQuickbarSwappedStateAthena();                                                       // [0x9236954] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortSettingsContext.GetFocusOnFirstBuildingPieceWhenQuickbarSwappedState
	// bool GetFocusOnFirstBuildingPieceWhenQuickbarSwappedState();                                                             // [0x9236930] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortSettingsContext.GetFirstPersonCameraState
	// bool GetFirstPersonCameraState();                                                                                        // [0x923690c] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortSettingsContext.GetEnableTryBuildOnFocus
	// bool GetEnableTryBuildOnFocus();                                                                                         // [0x92368e8] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortSettingsContext.GetEnableRudderControl
	// bool GetEnableRudderControl();                                                                                           // [0x92368c4] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortSettingsContext.GetEnablePreferredItemSlots
	// bool GetEnablePreferredItemSlots();                                                                                      // [0x9236884] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortSettingsContext.GetEditModeAimAssistState
	// bool GetEditModeAimAssistState();                                                                                        // [0x9236860] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortSettingsContext.GetEditConfirmOnReleaseState
	// bool GetEditConfirmOnReleaseState();                                                                                     // [0x923683c] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortSettingsContext.GetEditButtonHoldTimeValue
	// float GetEditButtonHoldTimeValue();                                                                                      // [0x9236814] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortSettingsContext.GetDoubleTapAutorunToggleState
	// bool GetDoubleTapAutorunToggleState();                                                                                   // [0x92367f0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortSettingsContext.GetDisablePreEditsWhenPlacingBuildingState
	// bool GetDisablePreEditsWhenPlacingBuildingState();                                                                       // [0x9236654] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortSettingsContext.GetDialogVolumeValue
	// float GetDialogVolumeValue();                                                                                            // [0x923662c] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortSettingsContext.GetDamageNumbersScale
	// float GetDamageNumbersScale();                                                                                           // [0x9236070] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortSettingsContext.GetCrossplayPreference
	// bool GetCrossplayPreference();                                                                                           // [0x9235f50] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortSettingsContext.GetCreativeTurboDelete
	// bool GetCreativeTurboDelete();                                                                                           // [0x9235f2c] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortSettingsContext.GetCreativeModeReplayRecordingEnabled
	// bool GetCreativeModeReplayRecordingEnabled();                                                                            // [0x9235f08] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortSettingsContext.GetContextTutorialState
	// bool GetContextTutorialState();                                                                                          // [0x9235d58] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortSettingsContext.GetColorBlindStrength
	// int32_t GetColorBlindStrength();                                                                                         // [0x92359c0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortSettingsContext.GetColorBlindModeNames
	// TArray<FText> GetColorBlindModeNames();                                                                                  // [0x9235984] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortSettingsContext.GetColorBlindMode
	// int32_t GetColorBlindMode();                                                                                             // [0x9235960] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortSettingsContext.GetClipRemindersEnabled
	// bool GetClipRemindersEnabled();                                                                                          // [0x9235924] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortSettingsContext.GetCinematicsVolume
	// float GetCinematicsVolume();                                                                                             // [0x92358fc] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortSettingsContext.GetChatVolumeValue
	// float GetChatVolumeValue();                                                                                              // [0x9235810] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortSettingsContext.GetBuildingPossessionShown
	// bool GetBuildingPossessionShown();                                                                                       // [0x9235708] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortSettingsContext.GetAutoSortConsumablesToRight
	// bool GetAutoSortConsumablesToRight();                                                                                    // [0x9235404] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortSettingsContext.GetAutorunLockZonePreferenceMobile
	// EAutorunLockZonePreferenceMobile GetAutorunLockZonePreferenceMobile();                                                   // [0x9235428] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortSettingsContext.GetAutoPickupWeaponsConsolePC
	// bool GetAutoPickupWeaponsConsolePC();                                                                                    // [0x92353e0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortSettingsContext.GetAutoPickupWeapons
	// bool GetAutoPickupWeapons();                                                                                             // [0x92353bc] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortSettingsContext.GetAutoOpenDoors
	// bool GetAutoOpenDoors();                                                                                                 // [0x9235398] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortSettingsContext.GetAutoJoinGameVoiceChannel
	// bool GetAutoJoinGameVoiceChannel();                                                                                      // [0x9235374] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortSettingsContext.GetAutoEquipState
	// bool GetAutoEquipState();                                                                                                // [0x9235350] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortSettingsContext.GetAutoClamberEnabled
	// bool GetAutoClamberEnabled();                                                                                            // [0x9235314] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortSettingsContext.GetAutoChangeMaterial
	// bool GetAutoChangeMaterial();                                                                                            // [0x92352f0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortSettingsContext.GetAnonymousModeEnabled
	// bool GetAnonymousModeEnabled();                                                                                          // [0x92352cc] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortSettingsContext.GetAnonymousCharacterModeEnabled
	// bool GetAnonymousCharacterModeEnabled();                                                                                 // [0x92352a8] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortSettingsContext.GetAllowSidekickFeature1
	// bool GetAllowSidekickFeature1();                                                                                         // [0x923526c] Final|Native|Public|Const 
	// Function /Script/FortniteUI.FortSettingsContext.GetAllowGameVolumeWhenMinimized
	// EFortAllowBackgroundAudioSetting GetAllowGameVolumeWhenMinimized();                                                      // [0x9235230] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortSettingsContext.GetAimAssistState
	// bool GetAimAssistState();                                                                                                // [0x923520c] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortSettingsContext.GamepadTargetingMultiplierValueChanged
	// void GamepadTargetingMultiplierValueChanged(float NewValue);                                                             // [0x92347c4] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortSettingsContext.GamepadScopedMultiplierValueChanged
	// void GamepadScopedMultiplierValueChanged(float NewValue);                                                                // [0x9234744] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortSettingsContext.GamepadMoveStickDeadZoneChanged
	// void GamepadMoveStickDeadZoneChanged(float NewValue);                                                                    // [0x92346c4] Final|Native|Public|BlueprintCallable|Const 
	// Function /Script/FortniteUI.FortSettingsContext.GamepadLookStickDeadZoneChanged
	// void GamepadLookStickDeadZoneChanged(float NewValue);                                                                    // [0x9234644] Final|Native|Public|BlueprintCallable|Const 
	// Function /Script/FortniteUI.FortSettingsContext.GamepadLookSensitivityYChanged
	// void GamepadLookSensitivityYChanged(float NewValue);                                                                     // [0x92345c4] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortSettingsContext.GamepadLookSensitivityXChanged
	// void GamepadLookSensitivityXChanged(float NewValue);                                                                     // [0x9234544] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortSettingsContext.GamepadEditModeMultiplierValueChanged
	// void GamepadEditModeMultiplierValueChanged(float NewValue);                                                              // [0x92344c4] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortSettingsContext.GamepadBuildingMultiplierValueChanged
	// void GamepadBuildingMultiplierValueChanged(float NewValue);                                                              // [0x9234444] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortSettingsContext.FirstPersonCameraChanged
	// void FirstPersonCameraChanged(bool bInChecked);                                                                          // [0x9233d04] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortSettingsContext.DoubleTapAutorunToggleChanged
	// void DoubleTapAutorunToggleChanged(bool bToggleState);                                                                   // [0x9231c60] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortSettingsContext.DialogVolumeChanged
	// void DialogVolumeChanged(float NewValue);                                                                                // [0x92319e4] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortSettingsContext.CinematicsVolumeChanged
	// void CinematicsVolumeChanged(float NewValue);                                                                            // [0x92311b0] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortSettingsContext.ChatVolumeChanged
	// void ChatVolumeChanged(float NewValue);                                                                                  // [0x92310f8] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortSettingsContext.AutorunLockZonePreferenceMobileChanged
	// void AutorunLockZonePreferenceMobileChanged(int32_t InAutorunLockZonePreference);                                        // [0x922f11c] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortSettingsContext.AutoEquipChanged
	// void AutoEquipChanged(bool bInChecked);                                                                                  // [0x922f09c] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortSettingsContext.AnonymousModeChanged
	// void AnonymousModeChanged(bool bInChecked);                                                                              // [0x922ed64] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortSettingsContext.AnonymousCharacterModeChanged
	// void AnonymousCharacterModeChanged(bool bInChecked);                                                                     // [0x922ece4] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/FortniteUI.FortStoreContext
/// Size: 0x00F0 (0x000030 - 0x000120)
class UFortStoreContext : public UBlueprintContextBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 288;

public:
	SMember(FMulticastInlineDelegate)                  OnStoreStateChange                                          OFFSET(getStruct<T>, {0x58, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnStoreSkipOpenChanged                                      OFFSET(getStruct<T>, {0x68, 16, 0, 0})
	CMember(TArray<FCardPackOffer>)                    Offers                                                      OFFSET(get<T>, {0x78, 16, 0, 0})
	CMember(TArray<FCard>)                             CardList                                                    OFFSET(get<T>, {0x88, 16, 0, 0})
	DMember(int32_t)                                   CardIndex                                                   OFFSET(get<int32_t>, {0x98, 4, 0, 0})
	SMember(FOpenedCardPack)                           OpenedCardPack                                              OFFSET(getStruct<T>, {0xA0, 16, 0, 0})
	CMember(EFortRarity)                               LastCardRarity                                              OFFSET(get<T>, {0xB0, 1, 0, 0})
	CMember(TArray<FCard>)                             PurchasedItemList                                           OFFSET(get<T>, {0xB8, 16, 0, 0})
	CMember(TArray<UFortCardPackItem*>)                PurchasedCardPacks                                          OFFSET(get<T>, {0xC8, 16, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortStoreContext.SetSkipOpening
	// void SetSkipOpening(bool bSkipOpen);                                                                                     // [0x923d980] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortStoreContext.MakeChoice
	// bool MakeChoice(int32_t ChoiceIdx, UFortAccountItemDefinition* ChoiceItemDefinition);                                    // [0x923ad5c] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortStoreContext.IsWaitingForMcp
	// bool IsWaitingForMcp();                                                                                                  // [0x923acc4] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortStoreContext.IsOpeningDirectPack
	// bool IsOpeningDirectPack();                                                                                              // [0x923a994] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortStoreContext.IsItemMissingFromCollectionBook
	// bool IsItemMissingFromCollectionBook(UFortItemDefinition* ItemDefinition);                                               // [0x923a790] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortStoreContext.GetStoreState
	// EFortStoreState GetStoreState();                                                                                         // [0x2af32dc] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortStoreContext.GetSkipOpening
	// bool GetSkipOpening();                                                                                                   // [0x5b5f6e8] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortStoreContext.GetPackOpeningLimit
	// int32_t GetPackOpeningLimit();                                                                                           // [0x9237764] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortStoreContext.GetOwnedSurvivorCount
	// int32_t GetOwnedSurvivorCount(UFortItem* SurvivorItem);                                                                  // [0x92376d4] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortStoreContext.GetOwnedItemCount
	// int32_t GetOwnedItemCount(UFortItemDefinition* ItemDefinition);                                                          // [0x923762c] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortStoreContext.GetNumUnopenedCardPacksRemaining
	// int32_t GetNumUnopenedCardPacksRemaining(UFortCardPackItemDefinition* PackType, bool bCountChoicePacks);                 // [0x9237568] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortStoreContext.GetChoiceCards
	// TArray<FCard> GetChoiceCards(int32_t CardIdx);                                                                           // [0x9235838] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortStoreContext.GetCard
	// bool GetCard(int32_t CardIdx, FCard& ResultOut);                                                                         // [0x923572c] Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortStoreContext.FireInteractionAnalyticsEvent
	// void FireInteractionAnalyticsEvent(FString Interaction, FString Details);                                                // [0x9233040] Final|Native|Public|BlueprintCallable|Const 
	// Function /Script/FortniteUI.FortStoreContext.ExitSummary
	// bool ExitSummary();                                                                                                      // [0x9232e60] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortStoreContext.ExitCurrencyStore
	// bool ExitCurrencyStore();                                                                                                // [0x9232e1c] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortStoreContext.EnterCurrencyStore
	// bool EnterCurrencyStore();                                                                                               // [0x9232098] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortStoreContext.DoesItemSlotExistInCollectionBook
	// bool DoesItemSlotExistInCollectionBook(UFortItemDefinition* ItemDefinition);                                             // [0x9231b60] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortStoreContext.ChoiceResultComplete
	// bool ChoiceResultComplete();                                                                                             // [0x9231178] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortStoreContext.CardPackOpeningComplete
	// bool CardPackOpeningComplete();                                                                                          // [0x92310d4] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortStoreContext.CardPackDestroyComplete
	// bool CardPackDestroyComplete();                                                                                          // [0x92310b0] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortStoreContext.CardFrontRevealComplete
	// bool CardFrontRevealComplete();                                                                                          // [0x9231078] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortStoreContext.CardFlipComplete
	// bool CardFlipComplete();                                                                                                 // [0x9230fe0] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortStoreContext.CardExitComplete
	// bool CardExitComplete();                                                                                                 // [0x9230fa8] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortStoreContext.CardEntryComplete
	// bool CardEntryComplete();                                                                                                // [0x9230f70] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortStoreContext.CardBackRevealComplete
	// bool CardBackRevealComplete();                                                                                           // [0x9230f38] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortStoreContext.CardAddedToSummaryComplete
	// bool CardAddedToSummaryComplete();                                                                                       // [0x9230f14] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/FortniteUI.FortTooltipUIContext
/// Size: 0x0000 (0x000030 - 0x000030)
class UFortTooltipUIContext : public UBlueprintContextBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 48;

public:
};

/// Class /Script/FortniteUI.FortTutorialContext
/// Size: 0x0118 (0x000030 - 0x000148)
class UFortTutorialContext : public UBlueprintContextBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 328;

public:
	SMember(FMulticastInlineDelegate)                  OnUpdateTutorialAnnouncement                                OFFSET(getStruct<T>, {0x30, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnNewAnnouncementStartedOnClientDelegate                    OFFSET(getStruct<T>, {0x40, 16, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortTutorialContext.UpdateTutorialAnnouncement
	// void UpdateTutorialAnnouncement(FFortClientAnnouncementData_Tutorial AnnouncementData, bool bShow);                      // [0x923eb58] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortTutorialContext.UnhideTutorialCallout
	// void UnhideTutorialCallout(FName WidgetName, FName TutorialQuestObjectiveName, ETutorialType TutorialType);              // [0x9231f9c] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortTutorialContext.UnhideAllTutorialCallouts
	// void UnhideAllTutorialCallouts();                                                                                        // [0x923ea70] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortTutorialContext.TryGetActivePrimaryAnnouncement
	// AFortClientAnnouncement* TryGetActivePrimaryAnnouncement();                                                              // [0x923ea20] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortTutorialContext.TryClearingPendingQuest
	// void TryClearingPendingQuest(UFortQuestItem* Quest);                                                                     // [0x923e99c] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortTutorialContext.StartTutorial
	// void StartTutorial(FName WidgetName, ETutorialType TutorialType);                                                        // [0x923e3d8] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortTutorialContext.SkipTutorial
	// void SkipTutorial();                                                                                                     // [0x923dfb8] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortTutorialContext.ShouldPromptToSkipTutorial
	// bool ShouldPromptToSkipTutorial();                                                                                       // [0x923dd04] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortTutorialContext.OnNewAnnouncementStartedOnClient
	// void OnNewAnnouncementStartedOnClient(AFortClientAnnouncement* NewAnnouncement);                                         // [0x923c414] Final|Native|Public  
	// Function /Script/FortniteUI.FortTutorialContext.IsTutorialCalloutVisible
	// bool IsTutorialCalloutVisible(FName WidgetName);                                                                         // [0x923abe8] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortTutorialContext.IsObjectiveNextTutorialObjective
	// bool IsObjectiveNextTutorialObjective(UFortQuestItem* Quest, FName TutorialObjectiveName);                               // [0x923a898] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortTutorialContext.HideTutorialCallout
	// void HideTutorialCallout(FName WidgetName, FName TutorialQuestObjectiveName, ETutorialType TutorialType);                // [0x923a55c] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortTutorialContext.GetTutorialData
	// bool GetTutorialData(FName& TutorialObjectiveName, FFortUITutorialData& OutTutorialData);                                // [0x9239660] Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortTutorialContext.GetTutorialCallouts
	// void GetTutorialCallouts(TArray<FName>& WidgetNames);                                                                    // [0x92395c0] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/FortniteUI.FortTutorialContext.GetHiddenTutorialCallouts
	// void GetHiddenTutorialCallouts(TArray<FName>& WidgetNames);                                                              // [0x9236c70] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/FortniteUI.FortTutorialContext.FinishTutorial
	// void FinishTutorial(UFortQuestItem* Quest, FName WidgetName, ETutorialType TutorialType);                                // [0x9232ed0] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortTutorialContext.EnableTutorialCallout
	// void EnableTutorialCallout(FName WidgetName, FName TutorialQuestObjectiveName, ETutorialType TutorialType);              // [0x9231f9c] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortTutorialContext.DisableTutorialCallout
	// void DisableTutorialCallout(FName WidgetName, FName TutorialQuestObjectiveName, ETutorialType TutorialType);             // [0x9231a64] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortTutorialContext.ContinueTutorial
	// void ContinueTutorial();                                                                                                 // [0x9231248] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortTutorialContext.ClearTutorialCallouts
	// void ClearTutorialCallouts();                                                                                            // [0x9231230] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortTutorialContext.CanStartTutorial
	// bool CanStartTutorial(UFortQuestItem* Quest, FName WidgetName, ETutorialType TutorialType);                              // [0x9230594] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/FortniteUI.FortUIDataConfigurationContext
/// Size: 0x0000 (0x000030 - 0x000030)
class UFortUIDataConfigurationContext : public UBlueprintContextBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 48;

public:
};

/// Class /Script/FortniteUI.PrmSubsystem
/// Size: 0x00B0 (0x000030 - 0x0000E0)
class UPrmSubsystem : public ULocalPlayerSubsystem
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 224;

public:
	CMember(UPrmMotdPage*)                             BrMotd                                                      OFFSET(get<T>, {0x70, 8, 0, 0})
	CMember(UMotdListViewModel*)                       DynamicMotds                                                OFFSET(get<T>, {0x78, 8, 0, 0})
};

/// Class /Script/FortniteUI.FortConversationTask
/// Size: 0x0030 (0x000400 - 0x000430)
class UFortConversationTask : public UCommonActivatableWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1072;

public:
};

/// Class /Script/FortniteUI.CreativeContentBrowserItemInfo
/// Size: 0x0000 (0x0002E8 - 0x0002E8)
class UCreativeContentBrowserItemInfo : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 744;

public:
};

/// Class /Script/FortniteUI.FortCreativeDynamicUIDirector
/// Size: 0x0118 (0x0002B0 - 0x0003C8)
class AFortCreativeDynamicUIDirector : public ADynamicUIDirectorBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 968;

public:
	CMember(TMap<FGameplayTag, UDynamicUIScene*>)      CreativeScenesMap                                           OFFSET(get<T>, {0x2B0, 80, 0, 0})
	CMember(TMap<FGameplayTag, UDynamicUIScene*>)      ActiveScenesMap                                             OFFSET(get<T>, {0x300, 80, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortCreativeDynamicUIDirector.OnPlayerEnteredSpatialGameplayActor
	// void OnPlayerEnteredSpatialGameplayActor(FEventMessageTag Channel, FPlayerEnterSpatialActorContext& Context);            // [0x92a582c] Final|Native|Protected|HasOutParms 
};

/// Class /Script/FortniteUI.FortCoreGamerObjectiveRadial
/// Size: 0x0040 (0x0002C0 - 0x000300)
class UFortCoreGamerObjectiveRadial : public UUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 768;

public:
	DMember(int32_t)                                   TrackedIndex                                                OFFSET(get<int32_t>, {0x2C0, 4, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortCoreGamerObjectiveRadial.UpdateCaptureState
	// void UpdateCaptureState(ECaptureState NewCaptureState, ECaptureState OldCaptureState, char TrackedStateOwnerTeam, float Progress); // [0x92a8538] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.FortCoreGamerObjectiveRadial.OnTrackedObjectiveUpdated
	// void OnTrackedObjectiveUpdated(FTrackedObjective& CurrentTrackedObjective);                                              // [0x1d9241c] Event|Public|HasOutParms|BlueprintEvent 
	// Function /Script/FortniteUI.FortCoreGamerObjectiveRadial.OnTrackedObjectiveSet
	// void OnTrackedObjectiveSet(FTrackedObjective& NewTrackedObjective);                                                      // [0x1d9241c] Event|Public|HasOutParms|BlueprintEvent 
	// Function /Script/FortniteUI.FortCoreGamerObjectiveRadial.OnObjectiveOwningTeamChanged
	// void OnObjectiveOwningTeamChanged(char NewTeam, char OldTeam, bool bForceUpdate);                                        // [0x1d9241c] Event|Public|BlueprintCallable|BlueprintEvent 
	// Function /Script/FortniteUI.FortCoreGamerObjectiveRadial.OnObjectiveDisabled
	// void OnObjectiveDisabled();                                                                                              // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.FortCoreGamerObjectiveRadial.OnObjectiveContested
	// void OnObjectiveContested();                                                                                             // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.FortCoreGamerObjectiveRadial.OnObjectiveCaptured
	// void OnObjectiveCaptured(char OwningTeam);                                                                               // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.FortCoreGamerObjectiveRadial.OnObjectiveBeingNeutralized
	// void OnObjectiveBeingNeutralized(char NeutralizingTeam, float Percentage);                                               // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.FortCoreGamerObjectiveRadial.OnObjectiveBeingDeneutralized
	// void OnObjectiveBeingDeneutralized(char DeneutralizingTeam, float Percentage);                                           // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.FortCoreGamerObjectiveRadial.OnObjectiveBeingDecaptured
	// void OnObjectiveBeingDecaptured(char DecapturingTeam, float Percentage);                                                 // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.FortCoreGamerObjectiveRadial.OnObjectiveBeingCaptured
	// void OnObjectiveBeingCaptured(char CapturingTeam, float Percentage);                                                     // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.FortCoreGamerObjectiveRadial.OnObjectiveBecameNeutral
	// void OnObjectiveBecameNeutral();                                                                                         // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.FortCoreGamerObjectiveRadial.OnMinigameStateChanged
	// void OnMinigameStateChanged(EFortMinigameState NewMinigameState);                                                        // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.FortCoreGamerObjectiveRadial.IsUsingGameCamera
	// bool IsUsingGameCamera();                                                                                                // [0x92a5674] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortCoreGamerObjectiveRadial.HandleTrackedObjectiveUpdated
	// void HandleTrackedObjectiveUpdated(int32_t InTrackedIndex);                                                              // [0x92a29a8] Final|Native|Protected 
	// Function /Script/FortniteUI.FortCoreGamerObjectiveRadial.HandleTrackedObjectiveTeamUpdated
	// void HandleTrackedObjectiveTeamUpdated(int32_t InTrackedIndex);                                                          // [0x92a2928] Final|Native|Protected 
	// Function /Script/FortniteUI.FortCoreGamerObjectiveRadial.GetObjectiveTracker
	// UFortMinigameObjectiveTrackerComponent* GetObjectiveTracker();                                                           // [0x92a10f0] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortCoreGamerObjectiveRadial.GetNormalizedDistanceFromScreenCenter
	// float GetNormalizedDistanceFromScreenCenter();                                                                           // [0x92a10a8] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortCoreGamerObjectiveRadial.GetMinigame
	// AFortMinigame* GetMinigame();                                                                                            // [0x92a1014] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/FortniteUI.FortCoreGamerObjectiveWidget
/// Size: 0x0078 (0x0003C0 - 0x000438)
class UFortCoreGamerObjectiveWidget : public UMinigameWidgetBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1080;

public:
	CMember(UClass*)                                   ObjectiveRadialClass                                        OFFSET(get<T>, {0x3C0, 8, 0, 0})
	CMember(UClass*)                                   DestructibleTrackerClass                                    OFFSET(get<T>, {0x3C8, 8, 0, 0})
	SMember(FMargin)                                   ObjectivePadding                                            OFFSET(getStruct<T>, {0x3D0, 16, 0, 0})
	CMember(UHorizontalBox*)                           ObjectiveContainer                                          OFFSET(get<T>, {0x3E0, 8, 0, 0})
	CMember(TMap<int32_t, UFortCoreGamerObjectiveRadial*>) TrackedObjectiveWidgetMap                               OFFSET(get<T>, {0x3E8, 80, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortCoreGamerObjectiveWidget.HandleTrackedObjectiveRemoved
	// void HandleTrackedObjectiveRemoved(int32_t TrackedIndex);                                                                // [0x92a28a8] Final|Native|Protected 
	// Function /Script/FortniteUI.FortCoreGamerObjectiveWidget.HandleTrackedObjectiveAdded
	// void HandleTrackedObjectiveAdded(int32_t TrackedIndex);                                                                  // [0x92a2828] Final|Native|Protected 
	// Function /Script/FortniteUI.FortCoreGamerObjectiveWidget.GetOwnerPlayerTeam
	// char GetOwnerPlayerTeam();                                                                                               // [0x92a1114] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/FortniteUI.FortCoreGamerScoreTracker
/// Size: 0x0008 (0x0003C0 - 0x0003C8)
class UFortCoreGamerScoreTracker : public UMinigameWidgetBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 968;

public:
};

/// Class /Script/FortniteUI.FortCoreGamerScoreTrackerRow
/// Size: 0x0000 (0x0002C0 - 0x0002C0)
class UFortCoreGamerScoreTrackerRow : public UUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 704;

public:
};

/// Class /Script/FortniteUI.FortCreativeAdsView
/// Size: 0x0010 (0x0002C0 - 0x0002D0)
class UFortCreativeAdsView : public UUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 720;

public:
	CMember(TArray<FCreativeAdData>)                   CreativeAdList                                              OFFSET(get<T>, {0x2C0, 16, 0, 0})
};

/// Class /Script/FortniteUI.FortCreativeAdTile
/// Size: 0x0070 (0x0002E8 - 0x000358)
class UFortCreativeAdTile : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 856;

public:
	CMember(UEpicCMSImage*)                            Image_CreativeAd                                            OFFSET(get<T>, {0x2E8, 8, 0, 0})
	SMember(FCreativeAdData)                           CMSAdEntry                                                  OFFSET(getStruct<T>, {0x2F0, 104, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortCreativeAdTile.PopulateAdTile
	// void PopulateAdTile(FCreativeAdData& Entry);                                                                             // [0x92a5b90] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/FortniteUI.FortCreativeAdTile.OnCMSDataUpdated
	// void OnCMSDataUpdated();                                                                                                 // [0x1d9241c] Event|Public|BlueprintEvent 
};

/// Class /Script/FortniteUI.FortCreativeAffiliatePanel
/// Size: 0x0000 (0x000570 - 0x000570)
class UFortCreativeAffiliatePanel : public UFortActivatablePanel
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1392;

public:
};

/// Class /Script/FortniteUI.FortCreativeBossInfo
/// Size: 0x0038 (0x0003C0 - 0x0003F8)
class UFortCreativeBossInfo : public UMinigameWidgetBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1016;

public:
	DMember(bool)                                      bShowHealthbarIfLocalPlayerIsBoss                           OFFSET(get<bool>, {0x3C0, 1, 0, 0})
	CMember(UCommonTextBlock*)                         Text_PlayerName                                             OFFSET(get<T>, {0x3C8, 8, 0, 0})
	CMember(UImage*)                                   Image_HealthBar                                             OFFSET(get<T>, {0x3D0, 8, 0, 0})
	CMember(UImage*)                                   Image_ShieldBar                                             OFFSET(get<T>, {0x3D8, 8, 0, 0})
	CMember(UImage*)                                   Image_DBNOBar                                               OFFSET(get<T>, {0x3E0, 8, 0, 0})
	CMember(AFortPlayerStateAthena*)                   BossPlayerState                                             OFFSET(get<T>, {0x3E8, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortCreativeBossInfo.OnBossPlayerStateChanged
	// void OnBossPlayerStateChanged(AFortPlayerStateAthena* PlayerState, UCreativePlayerHealthInfoComponent* HealthInfoComponent); // [0x92a56d4] Final|Native|Private 
	// Function /Script/FortniteUI.FortCreativeBossInfo.HandleHitPointsChanged
	// void HandleHitPointsChanged(AFortPlayerState* PlayerState, float Health, float HealthMax, float Shield, float ShieldMax); // [0x92a1d00] Final|Native|Private 
};

/// Class /Script/FortniteUI.FortCreativeCaptureScreenshotHUD
/// Size: 0x0000 (0x000400 - 0x000400)
class UFortCreativeCaptureScreenshotHUD : public UCommonActivatableWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1024;

public:
};

/// Class /Script/FortniteUI.FortCreativeChannelBrowser
/// Size: 0x0020 (0x000400 - 0x000420)
class UFortCreativeChannelBrowser : public UCommonActivatableWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1056;

public:
};

/// Class /Script/FortniteUI.FortCreativeDeviceBrowser
/// Size: 0x0340 (0x000400 - 0x000740)
class UFortCreativeDeviceBrowser : public UCommonActivatableWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1856;

public:
	CMember(UCommonListView*)                          ListView_Devices                                            OFFSET(get<T>, {0x418, 8, 0, 0})
	CMember(UFortCreativeDeviceBrowserListView*)       ListView_Subscriptions                                      OFFSET(get<T>, {0x420, 8, 0, 0})
	CMember(TArray<int32_t>)                           CreativeDeviceInfo                                          OFFSET(get<T>, {0x438, 16, 0, 0})
	CMember(TMap<int32_t, FCreativeDeviceInfo>)        CreativeDeviceInfoMap                                       OFFSET(get<T>, {0x448, 80, 0, 0})
	CMember(TMap<int32_t, FCreativeDeviceCached>)      KnownDevicesMap                                             OFFSET(get<T>, {0x498, 80, 0, 0})
	CMember(UCommonButtonBase*)                        Button_Select                                               OFFSET(get<T>, {0x540, 8, 0, 0})
	CMember(UCommonButtonBase*)                        Button_Teleport                                             OFFSET(get<T>, {0x548, 8, 0, 0})
	CMember(TWeakObjectPtr<UObject*>)                  Selected_ListView_Devices_Teleport_Target                   OFFSET(get<T>, {0x550, 8, 0, 0})
	CMember(TWeakObjectPtr<UObject*>)                  Selected_ListView_Subscriptions_Teleport_Target             OFFSET(get<T>, {0x558, 8, 0, 0})
	SMember(FString)                                   CurrentSearchString                                         OFFSET(getStruct<T>, {0x578, 16, 0, 0})
	CMember(UCommonButtonBase*)                        Button_TextSearch                                           OFFSET(get<T>, {0x588, 8, 0, 0})
	CMember(EDeviceTrackingSortingType)                CurrentSort                                                 OFFSET(get<T>, {0x592, 1, 0, 0})
	CMember(EDeviceTrackingFilterType)                 CurrentFilter                                               OFFSET(get<T>, {0x593, 1, 0, 0})
	SMember(FName)                                     CurrentSortName                                             OFFSET(getStruct<T>, {0x594, 4, 0, 0})
	SMember(FName)                                     CurrentFilterName                                           OFFSET(getStruct<T>, {0x598, 4, 0, 0})
	CMember(UAthenaCustomizationPickerSortAndFilterBlade*) Blade_SortAndFilter                                     OFFSET(get<T>, {0x5A0, 8, 0, 0})
	CMember(UFortCTAButton*)                           Button_SortAndFilter                                        OFFSET(get<T>, {0x5A8, 8, 0, 0})
	CMember(UCommonButtonBase*)                        Button_CloseSortAndFilterBlade                              OFFSET(get<T>, {0x5B0, 8, 0, 0})
	CMember(UCommonButtonBase*)                        Button_Back                                                 OFFSET(get<T>, {0x5B8, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_SortTag                                                OFFSET(get<T>, {0x5C0, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_FilterTag                                              OFFSET(get<T>, {0x5C8, 8, 0, 0})
	CMember(EDeviceTrackingSortingType)                DefaultSort                                                 OFFSET(get<T>, {0x5D0, 1, 0, 0})
	CMember(TMap<EDeviceTrackingSortingType, FName>)   SortEnumToSortNameMap                                       OFFSET(get<T>, {0x5D8, 80, 0, 0})
	CMember(TMap<FName, FText>)                        SortNameToSortDisplayText                                   OFFSET(get<T>, {0x628, 80, 0, 0})
	CMember(EDeviceTrackingFilterType)                 DefaultFilter                                               OFFSET(get<T>, {0x678, 1, 0, 0})
	CMember(TMap<EDeviceTrackingFilterType, FName>)    FilterEnumToFilterNameMap                                   OFFSET(get<T>, {0x680, 80, 0, 0})
	CMember(TMap<FName, FText>)                        FilterNameToFilterDisplayText                               OFFSET(get<T>, {0x6D0, 80, 0, 0})
	CMember(UCommonListView*)                          ListView_Traversal_Device                                   OFFSET(get<T>, {0x728, 8, 0, 0})
	CMember(UFortCreativeDeviceBrowserListView*)       ListView_Traversal_Subscriptions                            OFFSET(get<T>, {0x730, 8, 0, 0})
	CMember(UWidget*)                                  TraversalDialog                                             OFFSET(get<T>, {0x738, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortCreativeDeviceBrowser.SetSortByName
	// void SetSortByName(FName SortName);                                                                                      // [0x92a80f0] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortCreativeDeviceBrowser.SetSort
	// void SetSort(EDeviceTrackingSortingType NewSortToUse);                                                                   // [0x92a8070] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortCreativeDeviceBrowser.SetSearchString
	// void SetSearchString(FString SearchString);                                                                              // [0x92a79bc] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortCreativeDeviceBrowser.SetFilterByName
	// void SetFilterByName(FName FilterName);                                                                                  // [0x92a78bc] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortCreativeDeviceBrowser.SetFilter
	// void SetFilter(EDeviceTrackingFilterType NewFilterToUse);                                                                // [0x92a783c] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortCreativeDeviceBrowser.RequestTeleportByListItem
	// void RequestTeleportByListItem(UObject* ListItem);                                                                       // [0x92a76c4] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.FortCreativeDeviceBrowser.RequestTeleportByGUID
	// void RequestTeleportByGUID(int32_t TeleportTargetGUID);                                                                  // [0x92a7644] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.FortCreativeDeviceBrowser.RequestTeleport
	// void RequestTeleport();                                                                                                  // [0x92a7618] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.FortCreativeDeviceBrowser.RequestSelectDevice
	// bool RequestSelectDevice(int32_t DeviceTrackingGUIDToAssign);                                                            // [0x92a758c] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.FortCreativeDeviceBrowser.RequestPageBasicDeviceTrackingInfos
	// bool RequestPageBasicDeviceTrackingInfos(bool bAddRequestedPageToCurrentPage, FString SearchString, EDeviceTrackingFilterType Filter, EDeviceTrackingSortingType Sort); // [0x92a6e34] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.FortCreativeDeviceBrowser.RequestPage
	// bool RequestPage(bool bAddRequestedPageToCurrentPage, FString SearchString, EDeviceTrackingFilterType& Filter, EDeviceTrackingSortingType& SortToUse); // [0x92a66c4] Final|Native|Protected|HasOutParms|BlueprintCallable 
	// Function /Script/FortniteUI.FortCreativeDeviceBrowser.RequestCloseUI
	// void RequestCloseUI();                                                                                                   // [0x92a6698] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.FortCreativeDeviceBrowser.OpenTraversalDialog
	// void OpenTraversalDialog();                                                                                              // [0x92a5ab8] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortCreativeDeviceBrowser.OnTeleporting
	// void OnTeleporting();                                                                                                    // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortCreativeDeviceBrowser.OnSelectedDeviceNoSubscriptions
	// void OnSelectedDeviceNoSubscriptions(FCreativeDeviceInfo& SelectedDeviceInfo);                                           // [0x1d9241c] Event|Protected|HasOutParms|BlueprintEvent 
	// Function /Script/FortniteUI.FortCreativeDeviceBrowser.OnSelectedDeviceInfoFailed
	// void OnSelectedDeviceInfoFailed();                                                                                       // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortCreativeDeviceBrowser.OnListViewRefreshNeeded
	// void OnListViewRefreshNeeded();                                                                                          // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortCreativeDeviceBrowser.OnDeviceInfosPageUpdated
	// void OnDeviceInfosPageUpdated();                                                                                         // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortCreativeDeviceBrowser.OnDeviceDetailsInfoReceived
	// void OnDeviceDetailsInfoReceived(FCreativeDeviceInfo& SelectedDeviceInfo);                                               // [0x1d9241c] Event|Protected|HasOutParms|BlueprintEvent 
	// Function /Script/FortniteUI.FortCreativeDeviceBrowser.IsTraversalEnabled
	// bool IsTraversalEnabled();                                                                                               // [0x92a48f4] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortCreativeDeviceBrowser.IsTraversalDialogOpen
	// bool IsTraversalDialogOpen();                                                                                            // [0x816d180] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortCreativeDeviceBrowser.IsTraversalAllowed
	// bool IsTraversalAllowed(int32_t DeviceTrackingGUID);                                                                     // [0x92a4868] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortCreativeDeviceBrowser.IsTeleportEnabled
	// bool IsTeleportEnabled();                                                                                                // [0x92a4844] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortCreativeDeviceBrowser.IsTeleportAllowed
	// bool IsTeleportAllowed();                                                                                                // [0x92a4820] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortCreativeDeviceBrowser.IsBrowsingSubscriptions
	// bool IsBrowsingSubscriptions();                                                                                          // [0x92a2b90] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortCreativeDeviceBrowser.IsBrowsingDevices
	// bool IsBrowsingDevices();                                                                                                // [0x92a2b6c] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortCreativeDeviceBrowser.HandleButtonTextSearchClicked
	// void HandleButtonTextSearchClicked();                                                                                    // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortCreativeDeviceBrowser.GetTeleportActorFromListViewObject
	// AActor* GetTeleportActorFromListViewObject(UObject* ListViewObject);                                                     // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortCreativeDeviceBrowser.GetSearchInputDelay
	// float GetSearchInputDelay();                                                                                             // [0x92a13ec] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortCreativeDeviceBrowser.GetScrollOffsetToRequestNewPage
	// float GetScrollOffsetToRequestNewPage();                                                                                 // [0x92a13bc] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortCreativeDeviceBrowser.GetRequestDelay
	// float GetRequestDelay();                                                                                                 // [0x92a1270] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortCreativeDeviceBrowser.GetNumDevicesCached
	// int32_t GetNumDevicesCached();                                                                                           // [0x92a10d0] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortCreativeDeviceBrowser.GetDeviceGUIDFromListViewObject
	// int32_t GetDeviceGUIDFromListViewObject(UObject* ListViewObject);                                                        // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortCreativeDeviceBrowser.GetCurrentTeleportTargetGUID
	// int32_t GetCurrentTeleportTargetGUID();                                                                                  // [0x92a0ae0] Final|Native|Protected|BlueprintCallable|BlueprintPure 
	// Function /Script/FortniteUI.FortCreativeDeviceBrowser.GetCurrentTeleportTarget
	// AActor* GetCurrentTeleportTarget();                                                                                      // [0x92a0abc] Final|Native|Protected|BlueprintCallable|BlueprintPure 
	// Function /Script/FortniteUI.FortCreativeDeviceBrowser.DebugPrintCreativeDeviceWithBindingsInfo
	// void DebugPrintCreativeDeviceWithBindingsInfo();                                                                         // [0x2cf4738] Final|Native|Protected|BlueprintCallable|Const 
	// Function /Script/FortniteUI.FortCreativeDeviceBrowser.DebugPrintCreativeDeviceInfo
	// void DebugPrintCreativeDeviceInfo();                                                                                     // [0x2cf4738] Final|Native|Protected|BlueprintCallable|Const 
	// Function /Script/FortniteUI.FortCreativeDeviceBrowser.CreateSubscriptionListMessage
	// UEventBrowserSubscriptionListEntryObj* CreateSubscriptionListMessage(UObject* Outer, FString Message);                   // [0x92a03c4] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortCreativeDeviceBrowser.CreateSubscriptionListItem
	// UEventBrowserSubscriptionListEntryObj* CreateSubscriptionListItem(UObject* Outer, FCreativeDeviceSubscription& Subscription); // [0x92a028c] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/FortniteUI.FortCreativeDeviceBrowser.CreateSubscriptionListHeader
	// UEventBrowserSubscriptionListEntryObj* CreateSubscriptionListHeader(UObject* Outer, bool bIsEvent);                      // [0x92a01b0] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortCreativeDeviceBrowser.CloseTraversalDialog
	// void CloseTraversalDialog();                                                                                             // [0x92a019c] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/FortniteUI.EventBrowserSubscriptionListEntryObj
/// Size: 0x0088 (0x000028 - 0x0000B0)
class UEventBrowserSubscriptionListEntryObj : public UObject
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 176;

public:
	DMember(bool)                                      bIsEvent                                                    OFFSET(get<bool>, {0x28, 1, 0, 0})
	DMember(bool)                                      bIsHeader                                                   OFFSET(get<bool>, {0x29, 1, 0, 0})
	DMember(int32_t)                                   DeviceTrackingGUID                                          OFFSET(get<int32_t>, {0x2C, 4, 0, 0})
	SMember(FString)                                   DisplayName                                                 OFFSET(getStruct<T>, {0x30, 16, 0, 0})
	SMember(FCreativeDeviceSubscription)               Subscription                                                OFFSET(getStruct<T>, {0x40, 112, 0, 0})
};

/// Class /Script/FortniteUI.FortCreativeDeviceBrowserListEntry
/// Size: 0x0010 (0x001490 - 0x0014A0)
class UFortCreativeDeviceBrowserListEntry : public UCommonButtonBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 5280;

public:
};

/// Class /Script/FortniteUI.FortCreativeDeviceBrowserListView
/// Size: 0x0000 (0x000BD0 - 0x000BD0)
class UFortCreativeDeviceBrowserListView : public UCommonListView
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 3024;

public:
};

/// Class /Script/FortniteUI.FortCreativeExitDialog
/// Size: 0x0020 (0x000400 - 0x000420)
class UFortCreativeExitDialog : public UCommonActivatableWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1056;

public:
	CMember(UCommonButtonBase*)                        Button_Confirm                                              OFFSET(get<T>, {0x400, 8, 0, 0})
	CMember(UCommonButtonBase*)                        Button_Back                                                 OFFSET(get<T>, {0x408, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortCreativeExitDialog.OnConfirmClicked
	// void OnConfirmClicked();                                                                                                 // [0x92a5798] Final|Native|Public  
	// Function /Script/FortniteUI.FortCreativeExitDialog.OnBackClicked
	// void OnBackClicked();                                                                                                    // [0x34111d4] Final|Native|Public  
};

/// Class /Script/FortniteUI.FortCreativeGameInfoMapTab
/// Size: 0x01C8 (0x000400 - 0x0005C8)
class UFortCreativeGameInfoMapTab : public UCommonActivatableWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1480;

public:
	SMember(FAthenaMapScreenContainerTabInfo)          MapTabInfo                                                  OFFSET(getStruct<T>, {0x428, 72, 0, 0})
	CMember(UFortCreativeMiniGameInfo*)                MinigameInfo_Header                                         OFFSET(get<T>, {0x470, 8, 0, 0})
	CMember(UCommonActivatableWidgetSwitcher*)         Switcher_MainContent                                        OFFSET(get<T>, {0x478, 8, 0, 0})
	CMember(UFortIslandDescriptionWidget*)             IslandDescription_GameInfoContent                           OFFSET(get<T>, {0x480, 8, 0, 0})
	CMember(UWidget*)                                  Widget_LikeAndFavoriteContent                               OFFSET(get<T>, {0x488, 8, 0, 0})
	CMember(UWidget*)                                  Widget_MiscellaneousContent                                 OFFSET(get<T>, {0x490, 8, 0, 0})
	CMember(UWidget*)                                  Widget_CreditsContent                                       OFFSET(get<T>, {0x498, 8, 0, 0})
	CMember(UCommonButtonBase*)                        Button_Exit                                                 OFFSET(get<T>, {0x4A0, 8, 0, 0})
	CMember(UFortExpressYourSupportFavoriteButton*)    Button_Favorite                                             OFFSET(get<T>, {0x4A8, 8, 0, 0})
	CMember(UFortExpressYourSupportThumbsUpButton*)    Button_Like                                                 OFFSET(get<T>, {0x4B0, 8, 0, 0})
	CMember(UCommonButtonBase*)                        Button_Respawn                                              OFFSET(get<T>, {0x4B8, 8, 0, 0})
	CMember(UCommonButtonBase*)                        Button_ClearSavedData                                       OFFSET(get<T>, {0x4C0, 8, 0, 0})
	CMember(UCommonButtonBase*)                        Button_GameInfoSubTab                                       OFFSET(get<T>, {0x4C8, 8, 0, 0})
	CMember(UCommonButtonBase*)                        Button_LikeAndFavoriteSubTab                                OFFSET(get<T>, {0x4D0, 8, 0, 0})
	CMember(UCommonButtonBase*)                        Button_MiscellaneousSubTab                                  OFFSET(get<T>, {0x4D8, 8, 0, 0})
	CMember(UCommonButtonBase*)                        Button_CreditsSubTab                                        OFFSET(get<T>, {0x4E0, 8, 0, 0})
	CMember(UCommonButtonGroupBase*)                   ButtonGroup_SubTabs                                         OFFSET(get<T>, {0x4E8, 8, 0, 0})
	CMember(UFortCreativeCreatorAttributions*)         CreatorAttributions                                         OFFSET(get<T>, {0x4F0, 8, 0, 0})
	CMember(UClass*)                                   ConfirmationWindowClass                                     OFFSET(get<T>, {0x4F8, 8, 0, 0})
	SMember(FText)                                     RespawnConfirmationTitle                                    OFFSET(getStruct<T>, {0x500, 24, 0, 0})
	SMember(FText)                                     RespawnConfirmationDescription                              OFFSET(getStruct<T>, {0x518, 24, 0, 0})
	SMember(FText)                                     RespawnConfirmButtonName                                    OFFSET(getStruct<T>, {0x530, 24, 0, 0})
	SMember(FText)                                     ClearSavedDataConfirmationTitle                             OFFSET(getStruct<T>, {0x548, 24, 0, 0})
	SMember(FText)                                     ClearSavedDataConfirmationDescription                       OFFSET(getStruct<T>, {0x560, 24, 0, 0})
	SMember(FText)                                     ClearSavedDataConfirmButtonName                             OFFSET(getStruct<T>, {0x578, 24, 0, 0})
	SMember(FText)                                     ClearSavedDataPostConfirmationText                          OFFSET(getStruct<T>, {0x590, 24, 0, 0})
	CMember(TWeakObjectPtr<UTexture2D*>)               ClearSavedDataConfirmationIcon                              OFFSET(get<T>, {0x5A8, 32, 0, 0})
};

/// Class /Script/FortniteUI.FortCreativeIslandDetailsPanel
/// Size: 0x0198 (0x0002E8 - 0x000480)
class UFortCreativeIslandDetailsPanel : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1152;

public:
	CMember(UImage*)                                   Image_Island                                                OFFSET(get<T>, {0x2E8, 8, 0, 0})
	CMember(UImage*)                                   Image_LoadingSpinner                                        OFFSET(get<T>, {0x2F0, 8, 0, 0})
	CMember(UScrollBox*)                               ScrollBox_Details                                           OFFSET(get<T>, {0x2F8, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_IslandDescription                                      OFFSET(get<T>, {0x300, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_Creator                                                OFFSET(get<T>, {0x308, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_IslandName                                             OFFSET(get<T>, {0x310, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_PublishedIslandCode                                    OFFSET(get<T>, {0x318, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_MaximumNumberOfPlayers                                 OFFSET(get<T>, {0x320, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_MatchmakingDescription                                 OFFSET(get<T>, {0x328, 8, 0, 0})
	SMember(FSlateBrush)                               DefaultImageIslandBrush                                     OFFSET(getStruct<T>, {0x330, 192, 0, 0})
	SMember(FText)                                     MaxNumberOfPlayerTextFormat                                 OFFSET(getStruct<T>, {0x3F0, 24, 0, 0})
	SMember(FText)                                     MatchmakingOffText                                          OFFSET(getStruct<T>, {0x408, 24, 0, 0})
	SMember(FText)                                     MatchmakingKeepFullText                                     OFFSET(getStruct<T>, {0x420, 24, 0, 0})
	SMember(FText)                                     MatchmakingRespectPartiesTextFormat                         OFFSET(getStruct<T>, {0x438, 24, 0, 0})
	SMember(FDataTableRowHandle)                       ScrollUpInputRowHandle                                      OFFSET(getStruct<T>, {0x450, 16, 0, 0})
	SMember(FDataTableRowHandle)                       ScrollDownInputRowHandle                                    OFFSET(getStruct<T>, {0x460, 16, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortCreativeIslandDetailsPanel.UpdateLinkCodeVisuals
	// void UpdateLinkCodeVisuals(UFortGameActivity* Activity);                                                                 // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortCreativeIslandDetailsPanel.ClearLinkCodeVisuals
	// void ClearLinkCodeVisuals();                                                                                             // [0x1d9241c] Event|Protected|BlueprintEvent 
};

/// Class /Script/FortniteUI.FortCreativeIslandLink
/// Size: 0x00C8 (0x000028 - 0x0000F0)
class UFortCreativeIslandLink : public UObject
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 240;

public:
	SMember(FOnlineLinkId)                             LinkId                                                      OFFSET(getStruct<T>, {0x28, 24, 0, 0})
	SMember(FString)                                   CreatorUsername                                             OFFSET(getStruct<T>, {0x40, 16, 0, 0})
	SMember(FString)                                   SupportCode                                                 OFFSET(getStruct<T>, {0x50, 16, 0, 0})
	SMember(FString)                                   Title                                                       OFFSET(getStruct<T>, {0x60, 16, 0, 0})
	SMember(FString)                                   Tagline                                                     OFFSET(getStruct<T>, {0x70, 16, 0, 0})
	CMember(TArray<FString>)                           DescriptionTags                                             OFFSET(get<T>, {0x80, 16, 0, 0})
	SMember(FString)                                   Introduction                                                OFFSET(getStruct<T>, {0x90, 16, 0, 0})
	SMember(FString)                                   ImageUrl                                                    OFFSET(getStruct<T>, {0xA0, 16, 0, 0})
	CMember(EFortCreativeIslandLinkCategory)           category                                                    OFFSET(get<T>, {0xB0, 1, 0, 0})
	DMember(bool)                                      bDummyLink                                                  OFFSET(get<bool>, {0xB1, 1, 0, 0})
	DMember(int32_t)                                   Matchmaking_MaximumNumberOfPlayers                          OFFSET(get<int32_t>, {0xB4, 4, 0, 0})
	SMember(FString)                                   Matchmaking_MMSType                                         OFFSET(getStruct<T>, {0xB8, 16, 0, 0})
	DMember(int32_t)                                   Matchmaking_PlayersPerTeam                                  OFFSET(get<int32_t>, {0xC8, 4, 0, 0})
	SMember(FDateTime)                                 SortDate                                                    OFFSET(getStruct<T>, {0xD0, 8, 0, 0})
	CMember(EOnlineLinkModerationStatus)               ModerationStatus                                            OFFSET(get<T>, {0xD8, 1, 0, 0})
};

/// Class /Script/FortniteUI.FortCreativeIslandLinkEntry
/// Size: 0x0010 (0x0014E0 - 0x0014F0)
class UFortCreativeIslandLinkEntry : public UCommonButtonLegacy
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 5360;

public:
};

/// Class /Script/FortniteUI.FortCreativeIslandLinkScreen
/// Size: 0x0178 (0x000570 - 0x0006E8)
class UFortCreativeIslandLinkScreen : public UFortActivatablePanel
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1768;

public:
	DMember(int32_t)                                   NumDebugIslandLinks                                         OFFSET(get<int32_t>, {0x570, 4, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnCreativeIslandCodeConfirmed                               OFFSET(getStruct<T>, {0x578, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnEditableTextIslandLinkModified                            OFFSET(getStruct<T>, {0x588, 16, 0, 0})
	SMember(FText)                                     MatchmakingOffDescription                                   OFFSET(getStruct<T>, {0x598, 24, 0, 0})
	SMember(FText)                                     MatchmakingKeepFullDescription                              OFFSET(getStruct<T>, {0x5B0, 24, 0, 0})
	SMember(FText)                                     MatchmakingRespectPartiesDescription                        OFFSET(getStruct<T>, {0x5C8, 24, 0, 0})
	CMember(UEditableText*)                            EditableText_IslandLink                                     OFFSET(get<T>, {0x5E0, 8, 0, 0})
	CMember(UListView*)                                ListView_IslandLinks                                        OFFSET(get<T>, {0x5E8, 8, 0, 0})
	CMember(UScrollBox*)                               ScrollBox_Details                                           OFFSET(get<T>, {0x5F0, 8, 0, 0})
	CMember(UFortCreativeIslandLink*)                  LastLinkQueried                                             OFFSET(get<T>, {0x5F8, 8, 0, 0})
	CMember(UFortCreativeIslandLink*)                  UserEnteredIslandLink                                       OFFSET(get<T>, {0x600, 8, 0, 0})
	CMember(UCommonButtonLegacy*)                      Button_Select                                               OFFSET(get<T>, {0x608, 8, 0, 0})
	CMember(UCommonButtonLegacy*)                      Button_CloseMobile                                          OFFSET(get<T>, {0x610, 8, 0, 0})
	CMember(UCommonButtonLegacy*)                      Button_Cancel                                               OFFSET(get<T>, {0x618, 8, 0, 0})
	CMember(UCommonButtonLegacy*)                      Button_Refresh                                              OFFSET(get<T>, {0x620, 8, 0, 0})
	CMember(UCommonButtonLegacy*)                      Button_Remove                                               OFFSET(get<T>, {0x628, 8, 0, 0})
	CMember(UCommonWidgetSwitcherLegacy*)              Switcher_Tabs                                               OFFSET(get<T>, {0x630, 8, 0, 0})
	SMember(FCachedIslandsGroup)                       FavoriteIslands                                             OFFSET(getStruct<T>, {0x638, 40, 0, 0})
	SMember(FCachedIslandsGroup)                       IslandHistory                                               OFFSET(getStruct<T>, {0x660, 40, 0, 0})
	CMember(AFortAthenaCreativePortal*)                TargetPortal                                                OFFSET(get<T>, {0x688, 8, 0, 0})
	SMember(FDateTime)                                 LastRefreshTime                                             OFFSET(getStruct<T>, {0x690, 8, 0, 0})
	SMember(FOnlineLinkId)                             LastTestedLinkId                                            OFFSET(getStruct<T>, {0x698, 24, 0, 0})
	DMember(bool)                                      bCodeLookupRequestInFlight                                  OFFSET(get<bool>, {0x6B0, 1, 0, 0})
	DMember(bool)                                      bFriendsGetRequestInFlight                                  OFFSET(get<bool>, {0x6B1, 1, 0, 0})
	DMember(bool)                                      bFavoritesOnlyMode                                          OFFSET(get<bool>, {0x6B2, 1, 0, 0})
	SMember(FDataTableRowHandle)                       DetailsScrollUpInputRowHandle                               OFFSET(getStruct<T>, {0x6B8, 16, 0, 0})
	SMember(FDataTableRowHandle)                       DetailsScrollDownInputRowHandle                             OFFSET(getStruct<T>, {0x6C8, 16, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortCreativeIslandLinkScreen.SetTargetPortal
	// void SetTargetPortal(AFortAthenaCreativePortal* Portal);                                                                 // [0x92a8170] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortCreativeIslandLinkScreen.SetFavoritesOnlyMode
	// void SetFavoritesOnlyMode(bool bFavoritesOnly);                                                                          // [0x92a77ac] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortCreativeIslandLinkScreen.RemoveIslandFromHistory
	// void RemoveIslandFromHistory(FOnlineLinkId& LinkCode);                                                                   // [0x92a65fc] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/FortniteUI.FortCreativeIslandLinkScreen.RemoveIslandFromFavorites
	// void RemoveIslandFromFavorites(UFortCreativeIslandLink* LinkEntry);                                                      // [0x92a63b8] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortCreativeIslandLinkScreen.OnCreativeIslandLinkValidated
	// void OnCreativeIslandLinkValidated(EFortActivityValidationResult Error, bool IsValidModerationState);                    // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortCreativeIslandLinkScreen.OnCreativeIslandLinksPopulated
	// void OnCreativeIslandLinksPopulated();                                                                                   // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortCreativeIslandLinkScreen.IsPartyEligible
	// bool IsPartyEligible(UFortCreativeIslandLink* IslandLink);                                                               // [0x92a46a8] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortCreativeIslandLinkScreen.HandleIslandSelectionChanged
	// void HandleIslandSelectionChanged(UObject* Item);                                                                        // [0x92a2274] Final|Native|Private 
	// Function /Script/FortniteUI.FortCreativeIslandLinkScreen.HandleIslandLinkCommitted
	// void HandleIslandLinkCommitted(FText& InText, TEnumAsByte<ETextCommit> CommitInfo);                                      // [0x92a2120] Final|Native|Private|HasOutParms 
	// Function /Script/FortniteUI.FortCreativeIslandLinkScreen.HandleIslandLinkChanged
	// void HandleIslandLinkChanged(FText& Text);                                                                               // [0x92a2084] Final|Native|Private|HasOutParms 
	// Function /Script/FortniteUI.FortCreativeIslandLinkScreen.GetTextFromLinkId
	// FText GetTextFromLinkId(FOnlineLinkId& LinkId);                                                                          // [0x92a1920] Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortCreativeIslandLinkScreen.GetMatchmakingTypeDescription
	// FText GetMatchmakingTypeDescription(UFortCreativeIslandLink* IslandLink);                                                // [0x92a0d6c] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortCreativeIslandLinkScreen.GetLinkIdFromInput
	// FOnlineLinkId GetLinkIdFromInput();                                                                                      // [0x92a0d0c] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortCreativeIslandLinkScreen.AddIslandToFavorites
	// void AddIslandToFavorites(UFortCreativeIslandLink* LinkEntry);                                                           // [0x929fce8] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/FortniteUI.FortCreativeIslandLinkScreenServerBrowser
/// Size: 0x0038 (0x0006E8 - 0x000720)
class UFortCreativeIslandLinkScreenServerBrowser : public UFortCreativeIslandLinkScreen
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1824;

public:
	CMember(UFortCreativeIslandLink*)                  LastSelectedIsland                                          OFFSET(get<T>, {0x718, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortCreativeIslandLinkScreenServerBrowser.SetLastSelectedIsland
	// void SetLastSelectedIsland(UFortCreativeIslandLink* InLastSelectedIsland);                                               // [0x92a793c] Final|Native|Protected|BlueprintCallable 
};

/// Class /Script/FortniteUI.FortCreativeIslandSelectTab
/// Size: 0x0040 (0x000400 - 0x000440)
class UFortCreativeIslandSelectTab : public UCommonActivatableWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1088;

public:
};

/// Class /Script/FortniteUI.FortCreativeIslandSelectCodeTab
/// Size: 0x0060 (0x000440 - 0x0004A0)
class UFortCreativeIslandSelectCodeTab : public UFortCreativeIslandSelectTab
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1184;

public:
	CMember(UCommonButtonBase*)                        Button_Select                                               OFFSET(get<T>, {0x440, 8, 0, 0})
	CMember(UEditableText*)                            EditableText_IslandLink                                     OFFSET(get<T>, {0x448, 8, 0, 0})
	CMember(UFortCreativeIslandDetailsPanel*)          IslandDetailsPanel                                          OFFSET(get<T>, {0x450, 8, 0, 0})
	CMember(UCommonButtonBase*)                        Button_Favorite                                             OFFSET(get<T>, {0x458, 8, 0, 0})
	CMember(UWidget*)                                  Widget_LaunchError                                          OFFSET(get<T>, {0x460, 8, 0, 0})
	CMember(UFortGameActivityProvider*)                ActivityProvider                                            OFFSET(get<T>, {0x468, 8, 0, 0})
	CMember(UFortGameActivity*)                        LastActivityQueried                                         OFFSET(get<T>, {0x490, 8, 0, 0})
	CMember(UFortGameActivity*)                        UserEnteredActivity                                         OFFSET(get<T>, {0x498, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortCreativeIslandSelectCodeTab.OnActivityValidatedWithEmptyIslandLink
	// void OnActivityValidatedWithEmptyIslandLink();                                                                           // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortCreativeIslandSelectCodeTab.OnActivityValidated
	// void OnActivityValidated(EFortActivityValidationResult ValidateResult);                                                  // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortCreativeIslandSelectCodeTab.OnActivityClear
	// void OnActivityClear();                                                                                                  // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortCreativeIslandSelectCodeTab.HandleActivityCommitted
	// void HandleActivityCommitted(FText& InText, TEnumAsByte<ETextCommit> CommitInfo);                                        // [0x92a1b38] Final|Native|Protected|HasOutParms|BlueprintCallable 
	// Function /Script/FortniteUI.FortCreativeIslandSelectCodeTab.HandleActivityChanged
	// void HandleActivityChanged(FText& Text);                                                                                 // [0x92a1a9c] Final|Native|Protected|HasOutParms|BlueprintCallable 
};

/// Class /Script/FortniteUI.FortCreativeIslandSelectV2
/// Size: 0x0088 (0x000400 - 0x000488)
class UFortCreativeIslandSelectV2 : public UCommonActivatableWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1160;

public:
	CMember(TArray<UFortCreativeIslandSelectTabData*>) TabData                                                     OFFSET(get<T>, {0x400, 16, 0, 0})
	CMember(UFortCreativeIslandSelectScreen*)          IslandSelect_Base                                           OFFSET(get<T>, {0x440, 8, 0, 0})
	CMember(TArray<UFortCreativeIslandSelectTab*>)     Tabs                                                        OFFSET(get<T>, {0x470, 16, 0, 0})
};

/// Class /Script/FortniteUI.FortCreativeIslandSelectDiscovery
/// Size: 0x0020 (0x000488 - 0x0004A8)
class UFortCreativeIslandSelectDiscovery : public UFortCreativeIslandSelectV2
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1192;

public:
	CMember(UFortCreativeDiscoverySurfaceManager*)     Manager                                                     OFFSET(get<T>, {0x488, 8, 0, 0})
	SMember(FName)                                     DiscoverySurfaceName                                        OFFSET(getStruct<T>, {0x490, 4, 0, 0})
	CMember(UClass*)                                   SurfaceWidget                                               OFFSET(get<T>, {0x498, 8, 0, 0})
	DMember(uint32_t)                                  InsertDiscoveryTabsAtIndex                                  OFFSET(get<uint32_t>, {0x4A0, 4, 0, 0})
};

/// Class /Script/FortniteUI.FortCreativeIslandSelectListTab
/// Size: 0x0098 (0x000440 - 0x0004D8)
class UFortCreativeIslandSelectListTab : public UFortCreativeIslandSelectTab
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1240;

public:
	CMember(UListView*)                                ListView_Activities                                         OFFSET(get<T>, {0x440, 8, 0, 0})
	CMember(UCommonButtonBase*)                        Button_Select                                               OFFSET(get<T>, {0x448, 8, 0, 0})
	CMember(UCommonButtonBase*)                        Button_Remove                                               OFFSET(get<T>, {0x450, 8, 0, 0})
	CMember(UCommonButtonBase*)                        Button_Favorite                                             OFFSET(get<T>, {0x458, 8, 0, 0})
	CMember(UWidgetSwitcher*)                          Switcher_IslandsList                                        OFFSET(get<T>, {0x460, 8, 0, 0})
	CMember(UOverlay*)                                 Overlay_IslandListContent                                   OFFSET(get<T>, {0x468, 8, 0, 0})
	CMember(UOverlay*)                                 Overlay_NoIslandsContent                                    OFFSET(get<T>, {0x470, 8, 0, 0})
	CMember(UOverlay*)                                 Overlay_NoFavorites                                         OFFSET(get<T>, {0x478, 8, 0, 0})
	CMember(UTextBlock*)                               Text_NoIslands                                              OFFSET(get<T>, {0x480, 8, 0, 0})
	CMember(UUserWidget*)                              Widget_LaunchError                                          OFFSET(get<T>, {0x488, 8, 0, 0})
	CMember(UImage*)                                   Image_LoadingIndicator                                      OFFSET(get<T>, {0x490, 8, 0, 0})
	CMember(UFortCreativeIslandDetailsPanel*)          IslandDetailsPanel                                          OFFSET(get<T>, {0x498, 8, 0, 0})
	CMember(UFortGameActivityProvider*)                ActivityProvider                                            OFFSET(get<T>, {0x4A8, 8, 0, 0})
	CMember(UObject*)                                  LastItemToTriggerLoading                                    OFFSET(get<T>, {0x4B0, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortCreativeIslandSelectListTab.HandleListScrolled
	// void HandleListScrolled(float ItemOffset, float DistanceRemaining);                                                      // [0x92a2374] Final|Native|Protected 
	// Function /Script/FortniteUI.FortCreativeIslandSelectListTab.HandleIslandSelectionChanged
	// void HandleIslandSelectionChanged(UObject* Item);                                                                        // [0x92a22f4] Final|Native|Protected 
};

/// Class /Script/FortniteUI.FortCreativeIslandSelectScreen
/// Size: 0x0038 (0x0002C0 - 0x0002F8)
class UFortCreativeIslandSelectScreen : public UUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 760;

public:
	CMember(UFortCreativeTabGroup*)                    Tab_Group                                                   OFFSET(get<T>, {0x2C0, 8, 0, 0})
	CMember(UCommonActivatableWidgetSwitcher*)         Widget_Switcher                                             OFFSET(get<T>, {0x2C8, 8, 0, 0})
	CMember(UCommonButtonBase*)                        Button_CloseMobile                                          OFFSET(get<T>, {0x2D0, 8, 0, 0})
	CMember(UCommonButtonBase*)                        Button_Cancel                                               OFFSET(get<T>, {0x2D8, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortCreativeIslandSelectScreen.HandleTabChanged
	// void HandleTabChanged(int32_t TabIndex);                                                                                 // [0x92a27a4] Native|Protected     
};

/// Class /Script/FortniteUI.FortCreativeIslandSelectTabData
/// Size: 0x0050 (0x000030 - 0x000080)
class UFortCreativeIslandSelectTabData : public UPrimaryDataAsset
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 128;

public:
	CMember(EFortCreativeIslandSelectTabType)          TabType                                                     OFFSET(get<T>, {0x30, 1, 0, 0})
	SMember(FText)                                     Title                                                       OFFSET(getStruct<T>, {0x38, 24, 0, 0})
	SMember(FText)                                     EmptyTabDescription                                         OFFSET(getStruct<T>, {0x50, 24, 0, 0})
	DMember(int32_t)                                   IndexOverride                                               OFFSET(get<int32_t>, {0x68, 4, 0, 0})
	CMember(UClass*)                                   WidgetClass                                                 OFFSET(get<T>, {0x70, 8, 0, 0})
	CMember(UClass*)                                   DataProvider                                                OFFSET(get<T>, {0x78, 8, 0, 0})
};

/// Class /Script/FortniteUI.FortCreativeItemDetailsSidePanel
/// Size: 0x0030 (0x0002C0 - 0x0002F0)
class UFortCreativeItemDetailsSidePanel : public UUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 752;

public:
	CMember(TArray<FString>)                           SpecialItemTags                                             OFFSET(get<T>, {0x2C0, 16, 0, 0})
	CMember(UImage*)                                   Image_SelectedItem                                          OFFSET(get<T>, {0x2D0, 8, 0, 0})
	CMember(UCommonVisibilitySwitcher*)                Switcher_Details                                            OFFSET(get<T>, {0x2D8, 8, 0, 0})
	CMember(UCreativeContentBrowserItemInfo*)          ContentBrowserItemInfo_ItemDetails                          OFFSET(get<T>, {0x2E0, 8, 0, 0})
	CMember(UFortItemDetailsHostPanel*)                ItemInspectionMainItemDetails_LegacyDetailsPanel            OFFSET(get<T>, {0x2E8, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortCreativeItemDetailsSidePanel.SetSpecialItemTagVisibility
	// void SetSpecialItemTagVisibility(FString SpecialItemTag);                                                                // [0x1d9241c] RequiredAPI|Event|Public|BlueprintCallable|BlueprintEvent 
};

/// Class /Script/FortniteUI.FortCreativeItemListWrapper
/// Size: 0x0000 (0x000570 - 0x000570)
class UFortCreativeItemListWrapper : public UFortActivatablePanel
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1392;

public:
};

/// Class /Script/FortniteUI.FortCreativeMatchmakingDetails
/// Size: 0x0048 (0x000400 - 0x000448)
class UFortCreativeMatchmakingDetails : public UCommonActivatableWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1096;

public:
	CMember(UCommonButtonBase*)                        Button_Confirm                                              OFFSET(get<T>, {0x400, 8, 0, 0})
	CMember(UCommonButtonBase*)                        Button_Cancel                                               OFFSET(get<T>, {0x408, 8, 0, 0})
	CMember(TArray<UCommonTextBlock*>)                 Text_Bullets                                                OFFSET(get<T>, {0x410, 16, 0, 0})
	CMember(UCommonTextBlock*)                         Text_IslandName                                             OFFSET(get<T>, {0x420, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_LinkCode                                               OFFSET(get<T>, {0x428, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_Creator                                                OFFSET(get<T>, {0x430, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_PlayerCount                                            OFFSET(get<T>, {0x438, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_IslandDescription                                      OFFSET(get<T>, {0x440, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortCreativeMatchmakingDetails.SetupInfo
	// void SetupInfo(FCreativeLoadedLinkData& LinkData);                                                                       // [0x92a81f0] Final|Native|Protected|HasOutParms|BlueprintCallable 
	// Function /Script/FortniteUI.FortCreativeMatchmakingDetails.Open
	// void Open();                                                                                                             // [0x92a59ec] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.FortCreativeMatchmakingDetails.Close
	// void Close();                                                                                                            // [0x34111d4] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.FortCreativeMatchmakingDetails.BP_SetupInfo
	// void BP_SetupInfo(FCreativeLoadedLinkData& LinkData);                                                                    // [0x1d9241c] Event|Protected|HasOutParms|BlueprintEvent 
	// Function /Script/FortniteUI.FortCreativeMatchmakingDetails.BP_Open
	// void BP_Open();                                                                                                          // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortCreativeMatchmakingDetails.BP_InitialSetup
	// void BP_InitialSetup();                                                                                                  // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortCreativeMatchmakingDetails.BP_Confirm
	// void BP_Confirm();                                                                                                       // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortCreativeMatchmakingDetails.BP_Cancel
	// void BP_Cancel();                                                                                                        // [0x1d9241c] Event|Protected|BlueprintEvent 
};

/// Class /Script/FortniteUI.FortCreativeMatchmakingHUD
/// Size: 0x0008 (0x000400 - 0x000408)
class UFortCreativeMatchmakingHUD : public UCommonActivatableWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1032;

public:
	CMember(UFortKeybindWidget*)                       KeybindWidget_MMHUD                                         OFFSET(get<T>, {0x400, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortCreativeMatchmakingHUD.Open
	// void Open();                                                                                                             // [0x92a5a64] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.FortCreativeMatchmakingHUD.OnMatchmakingComplete
	// void OnMatchmakingComplete(bool bSuccess);                                                                               // [0x92a57ac] Final|Native|Protected 
	// Function /Script/FortniteUI.FortCreativeMatchmakingHUD.CancelMatchmaking
	// void CancelMatchmaking();                                                                                                // [0x92a0160] Final|Native|Protected 
	// Function /Script/FortniteUI.FortCreativeMatchmakingHUD.BP_PartyLeaderSetup
	// void BP_PartyLeaderSetup();                                                                                              // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortCreativeMatchmakingHUD.BP_OnMatchmakingComplete
	// void BP_OnMatchmakingComplete(bool bSuccess);                                                                            // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortCreativeMatchmakingHUD.BP_OnKeybindComplete
	// void BP_OnKeybindComplete(AFortPlayerControllerAthena* FortPC);                                                          // [0x1d9241c] Event|Protected|BlueprintEvent 
};

/// Class /Script/FortniteUI.FortCreativeMyIslandUtils
/// Size: 0x0000 (0x000028 - 0x000028)
class UFortCreativeMyIslandUtils : public UObject
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 40;

public:
};

/// Class /Script/FortniteUI.FortCreativePlayerInfoIndicator
/// Size: 0x0090 (0x0003D0 - 0x000460)
class UFortCreativePlayerInfoIndicator : public UFortActorIndicatorWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1120;

public:
	SMember(FVector)                                   RelativeLocationWhileDBNO                                   OFFSET(getStruct<T>, {0x3D0, 24, 0, 0})
	SMember(FVector)                                   RelativeLocationWhileAlive                                  OFFSET(getStruct<T>, {0x3E8, 24, 0, 0})
	SMember(FVector2D)                                 ScreenSpaceOffsetToScale                                    OFFSET(getStruct<T>, {0x400, 16, 0, 0})
	CMember(TArray<EFortMinigameState>)                ValidMinigameTypesToShowIndicator                           OFFSET(get<T>, {0x410, 16, 0, 0})
	DMember(bool)                                      bKeepTargetUntilNewValidTarget                              OFFSET(get<bool>, {0x420, 1, 0, 0})
	CMember(UImage*)                                   Image_HealthBar                                             OFFSET(get<T>, {0x428, 8, 0, 0})
	CMember(UImage*)                                   Image_ShieldBar                                             OFFSET(get<T>, {0x430, 8, 0, 0})
	CMember(UImage*)                                   Image_DBNOBar                                               OFFSET(get<T>, {0x438, 8, 0, 0})
	CMember(AFortPlayerStateAthena*)                   TrackedPlayerState                                          OFFSET(get<T>, {0x440, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortCreativePlayerInfoIndicator.HandlePlayerExitedVolume
	// void HandlePlayerExitedVolume(APlayerState* Client, AFortVolume* Volume);                                                // [0x92a25b8] Final|Native|Private 
	// Function /Script/FortniteUI.FortCreativePlayerInfoIndicator.HandlePlayerEnteredVolume
	// void HandlePlayerEnteredVolume(APlayerState* Client, AFortVolume* Volume);                                               // [0x92a24f4] Final|Native|Private 
	// Function /Script/FortniteUI.FortCreativePlayerInfoIndicator.HandleMinigameStateChanged
	// void HandleMinigameStateChanged(AFortMinigame* Minigame, EFortMinigameState MinigameState);                              // [0x92a2438] Final|Native|Private 
	// Function /Script/FortniteUI.FortCreativePlayerInfoIndicator.HandleIndicatorRulesChanged
	// void HandleIndicatorRulesChanged(EPlayerIndicatorDisplayMode DisplayMode);                                               // [0x92a2008] Final|Native|Private 
	// Function /Script/FortniteUI.FortCreativePlayerInfoIndicator.HandleHitPointsChanged
	// void HandleHitPointsChanged(AFortPlayerState* PlayerState, float Health, float HealthMax, float Shield, float ShieldMax); // [0x92a1e84] Final|Native|Private 
};

/// Class /Script/FortniteUI.FortCreativePlayOptions
/// Size: 0x0030 (0x000570 - 0x0005A0)
class UFortCreativePlayOptions : public UFortActivatablePanel
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1440;

public:
	CMember(UFortCreativeServersView*)                 View_CreativeOptionsServers                                 OFFSET(get<T>, {0x588, 8, 0, 0})
	CMember(UCommonButtonLegacy*)                      Button_Play                                                 OFFSET(get<T>, {0x590, 8, 0, 0})
	CMember(UCommonButtonLegacy*)                      Button_Cancel                                               OFFSET(get<T>, {0x598, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortCreativePlayOptions.ShouldShowImportPlatformFriendsOption
	// bool ShouldShowImportPlatformFriendsOption();                                                                            // [0x92a84fc] Final|Native|Private|BlueprintCallable 
	// Function /Script/FortniteUI.FortCreativePlayOptions.ImportPlatformFriends
	// void ImportPlatformFriends();                                                                                            // [0x92a2b58] Final|Native|Private|BlueprintCallable 
	// Function /Script/FortniteUI.FortCreativePlayOptions.HandleCancelClicked
	// void HandleCancelClicked();                                                                                              // [0x34111d4] Final|Native|Private|BlueprintCallable 
};

/// Class /Script/FortniteUI.FortCreativePropertyEditorDialogBase
/// Size: 0x0050 (0x000400 - 0x000450)
class UFortCreativePropertyEditorDialogBase : public UCommonActivatableWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1104;

public:
	CMember(UCanvasPanelSlot*)                         PanelSlot                                                   OFFSET(get<T>, {0x400, 8, 0, 0})
	DMember(bool)                                      bIsOpen                                                     OFFSET(get<bool>, {0x420, 1, 0, 0})
	DMember(bool)                                      bShouldDisableMessageKnobsDialogActionsWhileOpen            OFFSET(get<bool>, {0x421, 1, 0, 0})
	CMember(UWidgetAnimation*)                         Anim_IntroOutro                                             OFFSET(get<T>, {0x428, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortCreativePropertyEditorDialogBase.Reset
	// void Reset();                                                                                                            // [0x2ee9a3c] Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortCreativePropertyEditorDialogBase.Open
	// void Open();                                                                                                             // [0x92a5aa4] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortCreativePropertyEditorDialogBase.OnShowLoadingSpinnerChanged
	// void OnShowLoadingSpinnerChanged(bool bShowingLoadingSpinner);                                                           // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortCreativePropertyEditorDialogBase.OnOutroAnimFinished
	// void OnOutroAnimFinished();                                                                                              // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortCreativePropertyEditorDialogBase.OnOpen
	// void OnOpen();                                                                                                           // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortCreativePropertyEditorDialogBase.OnIntroAnimFinished
	// void OnIntroAnimFinished();                                                                                              // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortCreativePropertyEditorDialogBase.OnInputMethodChanged
	// void OnInputMethodChanged(ECommonInputType InputType);                                                                   // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortCreativePropertyEditorDialogBase.OnClose
	// void OnClose();                                                                                                          // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortCreativePropertyEditorDialogBase.GetOwningEditWidget
	// UCreativePropertyEditWidgetUserOptionBase* GetOwningEditWidget();                                                        // [0x92a1138] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortCreativePropertyEditorDialogBase.Close
	// void Close();                                                                                                            // [0x92a0188] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortCreativePropertyEditorDialogBase.AddOption
	// void AddOption(UObject* Object);                                                                                         // [0x836d954] Native|Public|BlueprintCallable 
};

/// Class /Script/FortniteUI.FortCreativePropertyEditorColorPickerDialog
/// Size: 0x0040 (0x000450 - 0x000490)
class UFortCreativePropertyEditorColorPickerDialog : public UFortCreativePropertyEditorDialogBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1168;

public:
	CMember(UCommonTileView*)                          TileView_Swatches                                           OFFSET(get<T>, {0x450, 8, 0, 0})
	CMember(UEditableTextBox*)                         EditableText_Search                                         OFFSET(get<T>, {0x458, 8, 0, 0})
	SMember(FDataTableRowHandle)                       SearchInputRowHandle                                        OFFSET(getStruct<T>, {0x460, 16, 0, 0})
	CMember(TArray<UObject*>)                          UnfilteredListItems                                         OFFSET(get<T>, {0x470, 16, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortCreativePropertyEditorColorPickerDialog.OnSearchInput
	// void OnSearchInput();                                                                                                    // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.FortCreativePropertyEditorColorPickerDialog.HandleSearchTextChanged
	// void HandleSearchTextChanged(FText& SearchText);                                                                         // [0x92a267c] Final|Native|Private|HasOutParms 
	// Function /Script/FortniteUI.FortCreativePropertyEditorColorPickerDialog.GetItemIndexFromUnfilteredItemList
	// int32_t GetItemIndexFromUnfilteredItemList(UObject* Item);                                                               // [0x92a0c48] Final|Native|Protected|BlueprintCallable|BlueprintPure 
};

/// Class /Script/FortniteUI.FortCreativePropertyEditorEventBindingDialog
/// Size: 0x0108 (0x000450 - 0x000558)
class UFortCreativePropertyEditorEventBindingDialog : public UFortCreativePropertyEditorDialogBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1368;

public:
	CMember(UCommonListView*)                          ListView_Entries                                            OFFSET(get<T>, {0x450, 8, 0, 0})
	CMember(UEditableTextBox*)                         EditableText_Search                                         OFFSET(get<T>, {0x458, 8, 0, 0})
	SMember(FDataTableRowHandle)                       BackInputRowHandle                                          OFFSET(getStruct<T>, {0x460, 16, 0, 0})
	SMember(FDataTableRowHandle)                       SearchInputRowHandle                                        OFFSET(getStruct<T>, {0x470, 16, 0, 0})
	SMember(FText)                                     SearchHintTextDevices                                       OFFSET(getStruct<T>, {0x480, 24, 0, 0})
	SMember(FText)                                     SearchHintTextEvents                                        OFFSET(getStruct<T>, {0x498, 24, 0, 0})
	SMember(FText)                                     SearchHintTextFunctions                                     OFFSET(getStruct<T>, {0x4B0, 24, 0, 0})
	CMember(TArray<UObject*>)                          UnfilteredListItems                                         OFFSET(get<T>, {0x4C8, 16, 0, 0})
	CMember(TArray<FBasicDeviceTrackingInfo>)          FullTrackingInfoList                                        OFFSET(get<T>, {0x4D8, 16, 0, 0})
	CMember(UFortCreativePropertyEditorEventBindingDialogListItemProxy*) SelectedItemProxy                         OFFSET(get<T>, {0x4F0, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortCreativePropertyEditorEventBindingDialog.OnUnfilteredListItemsSet
	// void OnUnfilteredListItemsSet();                                                                                         // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortCreativePropertyEditorEventBindingDialog.OnSearchInput
	// void OnSearchInput();                                                                                                    // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortCreativePropertyEditorEventBindingDialog.IsSearchEnabled
	// bool IsSearchEnabled();                                                                                                  // [0x92a47e4] Final|Native|Static|Protected|BlueprintCallable|BlueprintPure 
	// Function /Script/FortniteUI.FortCreativePropertyEditorEventBindingDialog.HandleSearchTextChanged
	// void HandleSearchTextChanged(FText& SearchText);                                                                         // [0x92a2708] Final|Native|Private|HasOutParms 
};

/// Class /Script/FortniteUI.FortCreativePropertyEditorEventBindingDialogListEntry
/// Size: 0x0010 (0x001490 - 0x0014A0)
class UFortCreativePropertyEditorEventBindingDialogListEntry : public UCommonButtonBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 5280;

public:
	CMember(UCommonTextBlock*)                         Text_EntryName                                              OFFSET(get<T>, {0x1498, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortCreativePropertyEditorEventBindingDialogListEntry.OnDisplayNameSet
	// void OnDisplayNameSet(FText& DisplayName);                                                                               // [0x1d9241c] Event|Protected|HasOutParms|BlueprintEvent 
};

/// Class /Script/FortniteUI.FortCreativePropertyEditorEventBindingDialogListItemProxy
/// Size: 0x0038 (0x000028 - 0x000060)
class UFortCreativePropertyEditorEventBindingDialogListItemProxy : public UObject
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 96;

public:
};

/// Class /Script/FortniteUI.FortCreativePropertyEditorFilter
/// Size: 0x00A8 (0x0002E8 - 0x000390)
class UFortCreativePropertyEditorFilter : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 912;

public:
	SMember(FMulticastInlineDelegate)                  OnSelectedFilterChanged                                     OFFSET(getStruct<T>, {0x2E8, 16, 0, 0})
	CMember(UCommonTextBlock*)                         Text_FilterName                                             OFFSET(get<T>, {0x2F8, 8, 0, 0})
	CMember(UDynamicEntryBox*)                         EntryBox_FilterButtons                                      OFFSET(get<T>, {0x300, 8, 0, 0})
	CMember(UCommonButtonBase*)                        Button_PreviousFilter                                       OFFSET(get<T>, {0x308, 8, 0, 0})
	CMember(UCommonButtonBase*)                        Button_NextFilter                                           OFFSET(get<T>, {0x310, 8, 0, 0})
	CMember(UClass*)                                   TabButtonStyle                                              OFFSET(get<T>, {0x318, 8, 0, 0})
	CMember(TArray<FFortTabListRegistrationInfo>)      TabInfos                                                    OFFSET(get<T>, {0x320, 16, 0, 0})
	CMember(UCommonButtonGroupBase*)                   FilterButtonGroup                                           OFFSET(get<T>, {0x330, 8, 0, 0})
	CMember(TMap<UCommonButtonBase*, FFortTabListRegistrationInfo>) FilterButtonToTabInfoMap                       OFFSET(get<T>, {0x338, 80, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortCreativePropertyEditorFilter.OnSelectedFilterChanged__DelegateSignature
	// void OnSelectedFilterChanged__DelegateSignature(FName SelectedFilterId, FName PreviouslySelectedFilterId);               // [0x1d9241c] MulticastDelegate|Public|Delegate 
	// Function /Script/FortniteUI.FortCreativePropertyEditorFilter.OnFilterButtonCreated
	// void OnFilterButtonCreated(UCommonButtonBase* FilterButton, FFortTabListRegistrationInfo& TabInfo);                      // [0x1d9241c] Event|Protected|HasOutParms|BlueprintEvent 
	// Function /Script/FortniteUI.FortCreativePropertyEditorFilter.GetSelectedFilterButtonId
	// FName GetSelectedFilterButtonId();                                                                                       // [0x92a141c] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/FortniteUI.FortCreativePropertyEditorLevelListDialog
/// Size: 0x0010 (0x000450 - 0x000460)
class UFortCreativePropertyEditorLevelListDialog : public UFortCreativePropertyEditorDialogBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1120;

public:
	CMember(UFortEditableFilteredCountedTextBox*)      FilteredTextEntry_Widget                                    OFFSET(get<T>, {0x450, 8, 0, 0})
	CMember(UCommonListView*)                          ListView_Levels                                             OFFSET(get<T>, {0x458, 8, 0, 0})
};

/// Class /Script/FortniteUI.FortCreativePropertyEditorInstancedLevelListDialog
/// Size: 0x0008 (0x000460 - 0x000468)
class UFortCreativePropertyEditorInstancedLevelListDialog : public UFortCreativePropertyEditorLevelListDialog
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1128;

public:
	CMember(UCommonButtonBase*)                        IconButton_NewLevel                                         OFFSET(get<T>, {0x460, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortCreativePropertyEditorInstancedLevelListDialog.ValidateLevelNameText
	// bool ValidateLevelNameText(FString LevelName);                                                                           // [0x92a8678] Final|Native|Protected|BlueprintCallable 
};

/// Class /Script/FortniteUI.CreativePropertyEditWidgetBase
/// Size: 0x01A8 (0x000400 - 0x0005A8)
class UCreativePropertyEditWidgetBase : public UCommonActivatableWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1448;

public:
	CMember(UUserWidget*)                              ExtraContentWidget                                          OFFSET(get<T>, {0x400, 8, 0, 0})
	CMember(UFortCreativePropertyEditorDialogBase*)    DialogWidget                                                OFFSET(get<T>, {0x408, 8, 0, 0})
	CMember(UClass*)                                   ExtraContentWidgetClass                                     OFFSET(get<T>, {0x4D0, 8, 0, 0})
	DMember(bool)                                      bAutoCreateDialogWidget                                     OFFSET(get<bool>, {0x4D8, 1, 0, 0})
	CMember(UClass*)                                   DialogWidgetClass                                           OFFSET(get<T>, {0x4E0, 8, 0, 0})
	DMember(float)                                     DeviceOptionValueMin                                        OFFSET(get<float>, {0x4E8, 4, 0, 0})
	DMember(float)                                     DeviceOptionValueMax                                        OFFSET(get<float>, {0x4EC, 4, 0, 0})
	CMember(TArray<FText>)                             AvailableStepperValueLabels                                 OFFSET(get<T>, {0x508, 16, 0, 0})
	DMember(int32_t)                                   CurrentIndexInStepperValue                                  OFFSET(get<int32_t>, {0x518, 4, 0, 0})
	DMember(int32_t)                                   StartingIndexInStepperValue                                 OFFSET(get<int32_t>, {0x51C, 4, 0, 0})
	SMember(FGameplayTagContainer)                     CachedGrantedContextTags                                    OFFSET(getStruct<T>, {0x520, 32, 0, 0})
	DMember(bool)                                      bAlwaysShowEditWidget                                       OFFSET(get<bool>, {0x540, 1, 0, 0})
	CMember(UCommonButtonLegacy*)                      Button_Collapse                                             OFFSET(get<T>, {0x578, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.CreativePropertyEditWidgetBase.SetIsModified
	// void SetIsModified(bool bModified);                                                                                      // [0x936106c] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.CreativePropertyEditWidgetBase.SetCurrentIndexInStepperValue
	// void SetCurrentIndexInStepperValue(int32_t InStepperValue);                                                              // [0x9360ca8] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.CreativePropertyEditWidgetBase.RequestSelected
	// void RequestSelected(UObject* ObjectToSelect, bool bNavigateToItem);                                                     // [0x9360b18] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.CreativePropertyEditWidgetBase.RequestDeviceName
	// FText RequestDeviceName();                                                                                               // [0x9360998] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.CreativePropertyEditWidgetBase.RequestCloseDialog
	// void RequestCloseDialog(bool bSetFocusToOptionsList);                                                                    // [0x9360914] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.CreativePropertyEditWidgetBase.RefreshGrantedContextTags
	// bool RefreshGrantedContextTags();                                                                                        // [0x90972d4] Native|Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.CreativePropertyEditWidgetBase.OnEditWidgetSelectedChanged
	// void OnEditWidgetSelectedChanged(bool bSelected);                                                                        // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.CreativePropertyEditWidgetBase.OnEditDialogOpenStateChanged
	// void OnEditDialogOpenStateChanged(bool bIsOpen);                                                                         // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.CreativePropertyEditWidgetBase.IsDialogOpen
	// bool IsDialogOpen();                                                                                                     // [0x935f634] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.CreativePropertyEditWidgetBase.GetStepperLabelForIndex
	// FText GetStepperLabelForIndex(int32_t Index);                                                                            // [0x935ccd0] Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.CreativePropertyEditWidgetBase.GetIsModified
	// bool GetIsModified();                                                                                                    // [0x6781380] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.CreativePropertyEditWidgetBase.GetEntryDisplayValue
	// FText GetEntryDisplayValue();                                                                                            // [0x935c804] Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.CreativePropertyEditWidgetBase.GetEntryDisplayName
	// FText GetEntryDisplayName();                                                                                             // [0x935c7bc] Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.CreativePropertyEditWidgetBase.GetEntryDescriptionText
	// FText GetEntryDescriptionText();                                                                                         // [0x935c774] Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.CreativePropertyEditWidgetBase.BP_PostInitEditWidget
	// void BP_PostInitEditWidget();                                                                                            // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.CreativePropertyEditWidgetBase.BP_OnModified
	// void BP_OnModified(bool bModified);                                                                                      // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.CreativePropertyEditWidgetBase.BP_OnEditWidgetClicked
	// void BP_OnEditWidgetClicked();                                                                                           // [0x1d9241c] Event|Protected|BlueprintEvent 
};

/// Class /Script/FortniteUI.CreativePropertyEditWidgetUserOptionBase
/// Size: 0x0008 (0x0005A8 - 0x0005B0)
class UCreativePropertyEditWidgetUserOptionBase : public UCreativePropertyEditWidgetBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1456;

public:
	CMember(UObject*)                                  OptionDataObject                                            OFFSET(get<T>, {0x5A8, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.CreativePropertyEditWidgetUserOptionBase.GetInitializingObject
	// UObject* GetInitializingObject();                                                                                        // [0x935c870] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/FortniteUI.FortCreativePropertyEditWidgetEventBinding
/// Size: 0x0030 (0x0005B0 - 0x0005E0)
class UFortCreativePropertyEditWidgetEventBinding : public UCreativePropertyEditWidgetUserOptionBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1504;

public:
	CMember(UCommonTextBlock*)                         Text_PropertyName                                           OFFSET(get<T>, {0x5B0, 8, 0, 0})
	CMember(UCommonButtonBase*)                        Button_AddBinding                                           OFFSET(get<T>, {0x5B8, 8, 0, 0})
	CMember(UClass*)                                   EntryClass                                                  OFFSET(get<T>, {0x5C0, 8, 0, 0})
	SMember(FDataTableRowHandle)                       ShowHideBindingsInputAction                                 OFFSET(getStruct<T>, {0x5C8, 16, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortCreativePropertyEditWidgetEventBinding.OnShowBindings
	// void OnShowBindings();                                                                                                   // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortCreativePropertyEditWidgetEventBinding.OnPropertyNameSet
	// void OnPropertyNameSet(FText& PropertyName);                                                                             // [0x1d9241c] Event|Protected|HasOutParms|BlueprintEvent 
	// Function /Script/FortniteUI.FortCreativePropertyEditWidgetEventBinding.OnNumEventReferencesChanged
	// void OnNumEventReferencesChanged(int32_t NumEventReferences);                                                            // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortCreativePropertyEditWidgetEventBinding.OnNumAvailableDevicesChanged
	// void OnNumAvailableDevicesChanged(int32_t NumAvailableDevices);                                                          // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortCreativePropertyEditWidgetEventBinding.OnIsAnySubItemSelectedChanged
	// void OnIsAnySubItemSelectedChanged(bool bIsAnySubItemSelected);                                                          // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortCreativePropertyEditWidgetEventBinding.OnHideBindings
	// void OnHideBindings();                                                                                                   // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortCreativePropertyEditWidgetEventBinding.IsShowingBindings
	// bool IsShowingBindings();                                                                                                // [0x92a47fc] Final|Native|Private|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortCreativePropertyEditWidgetEventBinding.GetEventReferenceType
	// EFortGameplayEventReferenceType GetEventReferenceType();                                                                 // [0x92a0ba0] Final|Native|Private|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/FortniteUI.FortCreativePropertyEditWidgetEventBindingButton
/// Size: 0x0010 (0x001490 - 0x0014A0)
class UFortCreativePropertyEditWidgetEventBindingButton : public UCommonButtonBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 5280;

public:
	CMember(UCommonTextBlock*)                         Text_Name                                                   OFFSET(get<T>, {0x1490, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortCreativePropertyEditWidgetEventBindingButton.OnTextSet
	// void OnTextSet(FText& Text);                                                                                             // [0x1d9241c] Event|Protected|HasOutParms|BlueprintEvent 
	// Function /Script/FortniteUI.FortCreativePropertyEditWidgetEventBindingButton.OnIsDisplayingButtonOptionsSet
	// void OnIsDisplayingButtonOptionsSet(bool bIsDisplayingButtonOptions);                                                    // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortCreativePropertyEditWidgetEventBindingButton.OnEventReferenceTypeSet
	// void OnEventReferenceTypeSet(EFortGameplayEventReferenceType EventReferenceType);                                        // [0x1d9241c] Event|Protected|BlueprintEvent 
};

/// Class /Script/FortniteUI.FortCreativePropertyListEntryBase
/// Size: 0x0068 (0x000400 - 0x000468)
class UFortCreativePropertyListEntryBase : public UCommonActivatableWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1128;

public:
};

/// Class /Script/FortniteUI.FortCreativePropertyEditWidgetEventBindingEntry
/// Size: 0x0048 (0x000468 - 0x0004B0)
class UFortCreativePropertyEditWidgetEventBindingEntry : public UFortCreativePropertyListEntryBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1200;

public:
	CMember(UFortCreativePropertyEditWidgetEventBindingButton*) Button_SelectDevice                                OFFSET(get<T>, {0x468, 8, 0, 0})
	CMember(UFortCreativePropertyEditWidgetEventBindingButton*) Button_SelectOption                                OFFSET(get<T>, {0x470, 8, 0, 0})
	SMember(FDataTableRowHandle)                       SelectDeviceAdditionalAction                                OFFSET(getStruct<T>, {0x478, 16, 0, 0})
	SMember(FDataTableRowHandle)                       SelectOptionAdditionalAction                                OFFSET(getStruct<T>, {0x488, 16, 0, 0})
	CMember(UWidget*)                                  LastFocusedButton                                           OFFSET(get<T>, {0x498, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortCreativePropertyEditWidgetEventBindingEntry.OnOptionDisplayNameSet
	// void OnOptionDisplayNameSet(FText& OptionDisplayName);                                                                   // [0x1d9241c] Event|Protected|HasOutParms|BlueprintEvent 
	// Function /Script/FortniteUI.FortCreativePropertyEditWidgetEventBindingEntry.OnIsParentItemSelectedChanged
	// void OnIsParentItemSelectedChanged(bool bIsParentItemSelected);                                                          // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortCreativePropertyEditWidgetEventBindingEntry.OnEntrySelectedStateChanged
	// void OnEntrySelectedStateChanged(bool bIsSelected);                                                                      // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortCreativePropertyEditWidgetEventBindingEntry.OnDeviceDisplayNameSet
	// void OnDeviceDisplayNameSet(FText& DeviceDisplayName);                                                                   // [0x1d9241c] Event|Protected|HasOutParms|BlueprintEvent 
};

/// Class /Script/FortniteUI.FortCreativePropertyListItemBase
/// Size: 0x0008 (0x000028 - 0x000030)
class UFortCreativePropertyListItemBase : public UObject
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 48;

public:
};

/// Class /Script/FortniteUI.FortCreativePropertyEventBindingListItem
/// Size: 0x0060 (0x000030 - 0x000090)
class UFortCreativePropertyEventBindingListItem : public UFortCreativePropertyListItemBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 144;

public:
};

/// Class /Script/FortniteUI.FortCreativePropertyKnobEntry
/// Size: 0x00D0 (0x001490 - 0x001560)
class UFortCreativePropertyKnobEntry : public UCommonButtonBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 5472;

public:
	SMember(FMulticastInlineDelegate)                  OnKnobEntryEditWidgetStateChanged                           OFFSET(getStruct<T>, {0x1498, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnKnobEntryEditWidgetContextTagsChanged                     OFFSET(getStruct<T>, {0x14A8, 16, 0, 0})
	CMember(UCreativePropertyEditWidgetBase*)          EntryEditWidget                                             OFFSET(get<T>, {0x14B8, 8, 0, 0})
	CMember(UClass*)                                   FallbackEditWidget                                          OFFSET(get<T>, {0x14C0, 8, 0, 0})
	CMember(UClass*)                                   FallbackUserOptionEditWidget                                OFFSET(get<T>, {0x14C8, 8, 0, 0})
	CMember(UClass*)                                   FallbackStringUserOptionEditWidget                          OFFSET(get<T>, {0x14D0, 8, 0, 0})
	CMember(UClass*)                                   FallbackMusicUserOptionEditWidget                           OFFSET(get<T>, {0x14D8, 8, 0, 0})
	CMember(UClass*)                                   FallbackMessageComponentEditWidget                          OFFSET(get<T>, {0x14E0, 8, 0, 0})
	CMember(UClass*)                                   FallbackDeviceButtonComponentEditWidget                     OFFSET(get<T>, {0x14E8, 8, 0, 0})
	CMember(UClass*)                                   FallbackColorUserOptionEditWidget                           OFFSET(get<T>, {0x14F0, 8, 0, 0})
	CMember(UClass*)                                   FallbackIconUserOptionEditWidget                            OFFSET(get<T>, {0x14F8, 8, 0, 0})
	CMember(UClass*)                                   FallbackEventDescriptorUserOptionEditWidget                 OFFSET(get<T>, {0x1500, 8, 0, 0})
	CMember(UClass*)                                   FallbackEventFunctionUserOptionEditWidget                   OFFSET(get<T>, {0x1508, 8, 0, 0})
	CMember(UClass*)                                   FallbackNumericUserOptionEditWidget                         OFFSET(get<T>, {0x1510, 8, 0, 0})
	CMember(UCommonVisibilitySwitcher*)                Switcher_Content                                            OFFSET(get<T>, {0x1518, 8, 0, 0})
	CMember(UPanelWidget*)                             Panel_SummaryBox                                            OFFSET(get<T>, {0x1520, 8, 0, 0})
	CMember(UPanelWidget*)                             Panel_ContentBox                                            OFFSET(get<T>, {0x1528, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_DisplayName                                            OFFSET(get<T>, {0x1530, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_DisplayedValue                                         OFFSET(get<T>, {0x1538, 8, 0, 0})
	CMember(UNamedSlot*)                               NamedSlot_ExtraContent                                      OFFSET(get<T>, {0x1540, 8, 0, 0})
	CMember(UPanelWidget*)                             Panel_DebugText                                             OFFSET(get<T>, {0x1548, 8, 0, 0})
	CMember(UCreativePropertyEditWidgetBase*)          CustomEditWidgetForSanitizeQuery                            OFFSET(get<T>, {0x1550, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortCreativePropertyKnobEntry.SetIsModified
	// void SetIsModified(bool bModified);                                                                                      // [0x92f4750] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.FortCreativePropertyKnobEntry.OnKnobEntryEditWidgetStateChanged__DelegateSignature
	// void OnKnobEntryEditWidgetStateChanged__DelegateSignature(bool bOpened);                                                 // [0x1d9241c] MulticastDelegate|Public|Delegate 
	// Function /Script/FortniteUI.FortCreativePropertyKnobEntry.OnKnobEntryEditWidgetContextTagsChanged__DelegateSignature
	// void OnKnobEntryEditWidgetContextTagsChanged__DelegateSignature();                                                       // [0x1d9241c] MulticastDelegate|Public|Delegate 
	// Function /Script/FortniteUI.FortCreativePropertyKnobEntry.GetIsModified
	// bool GetIsModified();                                                                                                    // [0x92f1804] Final|Native|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/FortniteUI.FortCreativePropertyKnobEntry.ForceFocusWidget
	// void ForceFocusWidget();                                                                                                 // [0x92f0f60] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortCreativePropertyKnobEntry.ClearModified
	// void ClearModified();                                                                                                    // [0x92f0c00] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortCreativePropertyKnobEntry.BP_PostInitSummaryData
	// void BP_PostInitSummaryData(UCreativePropertyEditWidgetBase* CustomEditWidget);                                          // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortCreativePropertyKnobEntry.BP_OnModified
	// void BP_OnModified(bool bModified);                                                                                      // [0x1d9241c] Event|Protected|BlueprintEvent 
};

/// Class /Script/FortniteUI.FortCreativePropertyNumericEntry
/// Size: 0x0000 (0x000820 - 0x000820)
class UFortCreativePropertyNumericEntry : public USpinBox
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 2080;

public:
};

/// Class /Script/FortniteUI.FortCreativePublishModal
/// Size: 0x00B0 (0x000400 - 0x0004B0)
class UFortCreativePublishModal : public UCommonActivatableWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1200;

public:
	DMember(int32_t)                                   DescriptionEntryCharLimit                                   OFFSET(get<int32_t>, {0x400, 4, 0, 0})
	DMember(int32_t)                                   NameEntryCharLimit                                          OFFSET(get<int32_t>, {0x404, 4, 0, 0})
	DMember(bool)                                      bFakePublishingFlow                                         OFFSET(get<bool>, {0x408, 1, 0, 0})
	CMember(UCommonAnimatedSwitcher*)                  Switcher_Content                                            OFFSET(get<T>, {0x410, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_IslandCode                                             OFFSET(get<T>, {0x418, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_ErrorInNameField                                       OFFSET(get<T>, {0x420, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_ErrorInDescriptionField                                OFFSET(get<T>, {0x428, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_ErrorInRequiredTags                                    OFFSET(get<T>, {0x430, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_ErrorInIslandBudget                                    OFFSET(get<T>, {0x438, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_ErrorOnPublish                                         OFFSET(get<T>, {0x440, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_CharCountTitle                                         OFFSET(get<T>, {0x448, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_CharCountDesc                                          OFFSET(get<T>, {0x450, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_IslandPublishedSuccess                                 OFFSET(get<T>, {0x458, 8, 0, 0})
	CMember(UCommonButtonBase*)                        Button_Submit                                               OFFSET(get<T>, {0x460, 8, 0, 0})
	CMember(UCommonButtonBase*)                        Button_CopyCode                                             OFFSET(get<T>, {0x468, 8, 0, 0})
	CMember(UCheckBox*)                                CheckBox_ClearAllPlayersData                                OFFSET(get<T>, {0x470, 8, 0, 0})
	CMember(UEditableTextBox*)                         EditText_Name                                               OFFSET(get<T>, {0x478, 8, 0, 0})
	CMember(UEditableTextBox*)                         EditText_Description                                        OFFSET(get<T>, {0x480, 8, 0, 0})
	DMember(int32_t)                                   NumTagsRequiredToPublish                                    OFFSET(get<int32_t>, {0x488, 4, 0, 0})
	CMember(AFortVolume*)                              VolumeToPublish                                             OFFSET(get<T>, {0x490, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortCreativePublishModal.OnValidCheckComplete
	// void OnValidCheckComplete(bool bSuccess);                                                                                // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortCreativePublishModal.OnPublishSuccess
	// void OnPublishSuccess();                                                                                                 // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortCreativePublishModal.OnPublishError
	// void OnPublishError(FText& ErrorText);                                                                                   // [0x1d9241c] Event|Protected|HasOutParms|BlueprintEvent 
	// Function /Script/FortniteUI.FortCreativePublishModal.OnPublishBegin
	// void OnPublishBegin();                                                                                                   // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortCreativePublishModal.OnNameTextCommitted
	// void OnNameTextCommitted();                                                                                              // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortCreativePublishModal.OnDescriptionTextCommitted
	// void OnDescriptionTextCommitted();                                                                                       // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortCreativePublishModal.OnCodeCopied
	// void OnCodeCopied();                                                                                                     // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortCreativePublishModal.HandleNameTextCommitted
	// void HandleNameTextCommitted(FText& Text, TEnumAsByte<ETextCommit> CommittMethod);                                       // [0x92f34b4] Final|Native|Private|HasOutParms 
	// Function /Script/FortniteUI.FortCreativePublishModal.HandleNameTextChanged
	// void HandleNameTextChanged(FText& Text);                                                                                 // [0x92f3418] Final|Native|Private|HasOutParms 
	// Function /Script/FortniteUI.FortCreativePublishModal.HandleDescriptionTextCommitted
	// void HandleDescriptionTextCommitted(FText& Text, TEnumAsByte<ETextCommit> CommittMethod);                                // [0x92f1ab0] Final|Native|Private|HasOutParms 
	// Function /Script/FortniteUI.FortCreativePublishModal.HandleDescriptionTextChanged
	// void HandleDescriptionTextChanged(FText& Text);                                                                          // [0x92f1a14] Final|Native|Private|HasOutParms 
	// Function /Script/FortniteUI.FortCreativePublishModal.BP_Reset
	// void BP_Reset();                                                                                                         // [0x1d9241c] Event|Protected|BlueprintEvent 
};

/// Class /Script/FortniteUI.FortCreativeRichTextEditorWidget
/// Size: 0x0148 (0x000400 - 0x000548)
class UFortCreativeRichTextEditorWidget : public UCommonActivatableWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1352;

public:
	CMember(UMultiLineEditableText*)                   EditableText                                                OFFSET(get<T>, {0x400, 8, 0, 0})
	CMember(UWrapBox*)                                 WordButtons_WBox                                            OFFSET(get<T>, {0x408, 8, 0, 0})
	CMember(UDynamicEntryBox*)                         EntryBox_StyleButtons                                       OFFSET(get<T>, {0x410, 8, 0, 0})
	CMember(UCommonButtonBase*)                        Style_Tab_Button                                            OFFSET(get<T>, {0x418, 8, 0, 0})
	CMember(UCommonButtonBase*)                        Text_Tab_Button                                             OFFSET(get<T>, {0x420, 8, 0, 0})
	CMember(UWidgetSwitcher*)                          PanelSwitcher                                               OFFSET(get<T>, {0x428, 8, 0, 0})
	CMember(UWidget*)                                  Text_Overlay                                                OFFSET(get<T>, {0x430, 8, 0, 0})
	CMember(UWidget*)                                  Style_Overlay                                               OFFSET(get<T>, {0x438, 8, 0, 0})
	CMember(UCommonButtonBase*)                        RemoveStyles_Button                                         OFFSET(get<T>, {0x440, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_CharCount                                              OFFSET(get<T>, {0x448, 8, 0, 0})
	CMember(UFortConfirmationWindow*)                  ConfirmationWindow                                          OFFSET(get<T>, {0x450, 8, 0, 0})
	CMember(UCommonButtonGroupBase*)                   TabsButtonGroup                                             OFFSET(get<T>, {0x458, 8, 0, 0})
	DMember(bool)                                      bIsLineBreakAllowed                                         OFFSET(get<bool>, {0x460, 1, 0, 0})
	DMember(int32_t)                                   EntryCharLimit                                              OFFSET(get<int32_t>, {0x464, 4, 0, 0})
	DMember(bool)                                      bStylingInProgress                                          OFFSET(get<bool>, {0x468, 1, 0, 0})
	CMember(UFortCreativeRichTextWordButton*)          LastSelectedWordButton                                      OFFSET(get<T>, {0x470, 8, 0, 0})
	CMember(TArray<FStyleButtonReference>)             StyleButtonReferences                                       OFFSET(get<T>, {0x478, 16, 0, 0})
	CMember(TSet<UFortCreativeRichTextWordButton*>)    Set_SelectedWordButtons                                     OFFSET(get<T>, {0x488, 80, 0, 0})
	CMember(UClass*)                                   WordButtonClass                                             OFFSET(get<T>, {0x4D8, 8, 0, 0})
	CMember(UClass*)                                   StyleButtonClass                                            OFFSET(get<T>, {0x4E0, 8, 0, 0})
	CMember(UDataTable*)                               RichTextStylesTable                                         OFFSET(get<T>, {0x4E8, 8, 0, 0})
	SMember(FText)                                     SampleText                                                  OFFSET(getStruct<T>, {0x4F0, 24, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortCreativeRichTextEditorWidget.ShowConfirmationDialog
	// void ShowConfirmationDialog(EConfirmDialogType DialogType);                                                              // [0x92f51d8] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.FortCreativeRichTextEditorWidget.SetRichStyleSetOverride
	// void SetRichStyleSetOverride(UDataTable* RichStyleSetOverride);                                                          // [0x92f47d0] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortCreativeRichTextEditorWidget.SetEntryCharLimit
	// void SetEntryCharLimit(int32_t InCharLimit);                                                                             // [0x92f45d4] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortCreativeRichTextEditorWidget.SetAllowStyleEditing
	// void SetAllowStyleEditing(bool InAllowStyleEditing);                                                                     // [0x92f44d4] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortCreativeRichTextEditorWidget.SetAllowLineBreaks
	// void SetAllowLineBreaks(bool InAllowLineBreaks);                                                                         // [0x92f4454] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortCreativeRichTextEditorWidget.OnWordButtonCreated
	// void OnWordButtonCreated(UFortCreativeRichTextWordButton* WordButton);                                                   // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortCreativeRichTextEditorWidget.OnUpdateWordButtonLabel
	// void OnUpdateWordButtonLabel(FText& ButtonText);                                                                         // [0x1d9241c] Event|Protected|HasOutParms|BlueprintEvent 
	// Function /Script/FortniteUI.FortCreativeRichTextEditorWidget.OnUpdateCommitCancelState
	// void OnUpdateCommitCancelState(bool Enabled);                                                                            // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortCreativeRichTextEditorWidget.OnUpdateButtonsVisibility
	// void OnUpdateButtonsVisibility();                                                                                        // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortCreativeRichTextEditorWidget.OnStyleButtonSelectedChanged
	// void OnStyleButtonSelectedChanged(UCommonButtonBase* Button, bool Selected);                                             // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortCreativeRichTextEditorWidget.OnStyleButtonCreated
	// void OnStyleButtonCreated(UCommonButtonBase* Button, FString Label, FString FormattedText, UDataTable* TextStyleSet, bool bIsDefaultButton); // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortCreativeRichTextEditorWidget.OnInitializedFinished
	// void OnInitializedFinished();                                                                                            // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortCreativeRichTextEditorWidget.OnFormatError
	// void OnFormatError(FText& Description);                                                                                  // [0x1d9241c] Event|Protected|HasOutParms|BlueprintEvent 
	// Function /Script/FortniteUI.FortCreativeRichTextEditorWidget.OnCharLimitReached
	// void OnCharLimitReached(bool bIsReached);                                                                                // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortCreativeRichTextEditorWidget.IsStyleEditorEnabled
	// bool IsStyleEditorEnabled();                                                                                             // [0x92f3d00] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/FortniteUI.FortCreativeRichTextEditorWidget.HandleWordButtonHovered
	// void HandleWordButtonHovered(UFortCreativeRichTextWordButton* Button);                                                   // [0x92f3b54] Final|Native|Private 
	// Function /Script/FortniteUI.FortCreativeRichTextEditorWidget.HandleWordButtonClicked
	// void HandleWordButtonClicked(UFortCreativeRichTextWordButton* Button);                                                   // [0x92f3ad4] Final|Native|Private 
	// Function /Script/FortniteUI.FortCreativeRichTextEditorWidget.HandleTextChanged
	// void HandleTextChanged(FText& Text);                                                                                     // [0x92f39a4] Final|Native|Private|HasOutParms 
	// Function /Script/FortniteUI.FortCreativeRichTextEditorWidget.HandleTabButtonSelected
	// void HandleTabButtonSelected(UCommonButtonBase* AssociatedButton, int32_t ButtonIndex);                                  // [0x92f38e0] Final|Native|Private 
	// Function /Script/FortniteUI.FortCreativeRichTextEditorWidget.HandleStyleButtonClicked
	// void HandleStyleButtonClicked(UCommonButtonBase* Button, int32_t Index);                                                 // [0x92f381c] Final|Native|Private 
	// Function /Script/FortniteUI.FortCreativeRichTextEditorWidget.GetTextInRange
	// FString GetTextInRange();                                                                                                // [0x92f19ac] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.FortCreativeRichTextEditorWidget.GetButtonContext
	// EButtonContext GetButtonContext();                                                                                       // [0x92f0f74] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.FortCreativeRichTextEditorWidget.ClearSelectedWordButtons
	// void ClearSelectedWordButtons();                                                                                         // [0x92f0c14] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.FortCreativeRichTextEditorWidget.CanShowStyleEditor
	// bool CanShowStyleEditor();                                                                                               // [0x92f0be0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortCreativeRichTextEditorWidget.BP_WordButtonHovered
	// void BP_WordButtonHovered(UFortCreativeRichTextWordButton* Button);                                                      // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortCreativeRichTextEditorWidget.BP_DialogConfirmed
	// void BP_DialogConfirmed(EConfirmDialogType DialogType);                                                                  // [0x1d9241c] Event|Protected|BlueprintEvent 
};

/// Class /Script/FortniteUI.FortCreativeRichTextWordButton
/// Size: 0x0030 (0x001490 - 0x0014C0)
class UFortCreativeRichTextWordButton : public UCommonButtonBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 5312;

public:
	CMember(URichTextBlock*)                           Rich_Text                                                   OFFSET(get<T>, {0x1490, 8, 0, 0})
	CMember(UClass*)                                   ButtonStyle                                                 OFFSET(get<T>, {0x1498, 8, 0, 0})
	SMember(FString)                                   RawText                                                     OFFSET(getStruct<T>, {0x14A0, 16, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortCreativeRichTextWordButton.OnButtonInitialized
	// void OnButtonInitialized();                                                                                              // [0x1d9241c] Event|Protected|BlueprintEvent 
};

/// Class /Script/FortniteUI.FortCreativeServerOptionTile
/// Size: 0x0020 (0x0014E0 - 0x001500)
class UFortCreativeServerOptionTile : public UCommonButtonLegacy
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 5376;

public:
	CMember(UCommonTextBlock*)                         Text_JoinServerType                                         OFFSET(get<T>, {0x14E0, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_JoinServerPlayerCount                                  OFFSET(get<T>, {0x14E8, 8, 0, 0})
	CMember(UFortCreativeServerInfo*)                  Server                                                      OFFSET(get<T>, {0x14F0, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortCreativeServerOptionTile.SetBPData
	// void SetBPData(UFortCreativeServerInfo* ServerInfo);                                                                     // [0x1d9241c] Event|Protected|BlueprintEvent 
};

/// Class /Script/FortniteUI.FortCreativeServerInfo
/// Size: 0x0050 (0x000028 - 0x000078)
class UFortCreativeServerInfo : public UObject
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 120;

public:
	DMember(int32_t)                                   CurrentPlayerCount                                          OFFSET(get<int32_t>, {0x28, 4, 0, 0})
	DMember(int32_t)                                   MaxPlayerCount                                              OFFSET(get<int32_t>, {0x2C, 4, 0, 0})
	CMember(TArray<FString>)                           MatchFriendsList                                            OFFSET(get<T>, {0x30, 16, 0, 0})
	SMember(FString)                                   OwnerName                                                   OFFSET(getStruct<T>, {0x40, 16, 0, 0})
	CMember(UFortSocialUser*)                          FriendInMatch                                               OFFSET(get<T>, {0x50, 8, 0, 0})
	CMember(EFortCreativeServerPrivacySetting)         PrivacySetting                                              OFFSET(get<T>, {0x58, 1, 0, 0})
	DMember(bool)                                      IsNewServer                                                 OFFSET(get<bool>, {0x59, 1, 0, 0})
	SMember(FText)                                     ServerTypeText                                              OFFSET(getStruct<T>, {0x60, 24, 0, 0})
};

/// Class /Script/FortniteUI.FortCreativeServersView
/// Size: 0x0040 (0x0002E8 - 0x000328)
class UFortCreativeServersView : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 808;

public:
	DMember(int32_t)                                   MaxSuggestedServers                                         OFFSET(get<int32_t>, {0x2E8, 4, 0, 0})
	DMember(bool)                                      bShowDebugServers                                           OFFSET(get<bool>, {0x2EC, 1, 0, 0})
	CMember(UClass*)                                   TileItemClass                                               OFFSET(get<T>, {0x2F0, 8, 0, 0})
	CMember(UCommonButtonGroupLegacy*)                 ServerButtonGroup                                           OFFSET(get<T>, {0x2F8, 8, 0, 0})
	CMember(UScrollBox*)                               ScrollBox_ServerList                                        OFFSET(get<T>, {0x300, 8, 0, 0})
	CMember(TArray<UFortCreativeServerInfo*>)          ServerList                                                  OFFSET(get<T>, {0x308, 16, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortCreativeServersView.RefreshServerList
	// void RefreshServerList();                                                                                                // [0x92f423c] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.FortCreativeServersView.OnCreativeServerListRefreshed
	// void OnCreativeServerListRefreshed();                                                                                    // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.FortCreativeServersView.NavigateServerRight
	// void NavigateServerRight();                                                                                              // [0x92f3d50] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.FortCreativeServersView.NavigateServerLeft
	// void NavigateServerLeft();                                                                                               // [0x92f3d3c] Final|Native|Protected|BlueprintCallable 
};

/// Class /Script/FortniteUI.FortCreativeStartScreen
/// Size: 0x00E0 (0x000400 - 0x0004E0)
class UFortCreativeStartScreen : public UCommonActivatableWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1248;

public:
	CMember(AFortMinigame*)                            CurrentMinigame                                             OFFSET(get<T>, {0x498, 8, 0, 0})
	CMember(AActor*)                                   CurrentContainer                                            OFFSET(get<T>, {0x4A0, 8, 0, 0})
	CMember(UInputComponent*)                          IgnoreToggleInventoryInputComponent                         OFFSET(get<T>, {0x4A8, 8, 0, 0})
	CMember(UFortCreativeMiniGameInfo*)                MinigameInfo                                                OFFSET(get<T>, {0x4B0, 8, 0, 0})
	CMember(UFortHoldableButton*)                      HoldableButton_Start                                        OFFSET(get<T>, {0x4B8, 8, 0, 0})
	CMember(UCommonButtonBase*)                        Button_MoreInfo                                             OFFSET(get<T>, {0x4C0, 8, 0, 0})
	CMember(UWidgetAnimation*)                         BoundAnim_StartGame                                         OFFSET(get<T>, {0x4C8, 8, 0, 0})
	DMember(float)                                     AutoStartTimerPeriod                                        OFFSET(get<float>, {0x4D4, 4, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortCreativeStartScreen.IsNewCreativeStartScreenEnabled
	// bool IsNewCreativeStartScreenEnabled();                                                                                  // [0x92f3ce8] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/FortniteUI.FortCreativeStartScreen.HandleVolumeMinigameChanged
	// void HandleVolumeMinigameChanged(AFortMinigame* Minigame);                                                               // [0x92f3a54] Final|Native|Private 
	// Function /Script/FortniteUI.FortCreativeStartScreen.HandleMinigameStateChanged
	// void HandleMinigameStateChanged(AFortMinigame* Minigame, EFortMinigameState MinigameState);                              // [0x92f1ee8] Final|Native|Private 
	// Function /Script/FortniteUI.FortCreativeStartScreen.HandleInGameLoadScreenChanged
	// void HandleInGameLoadScreenChanged(AFortPlayerControllerAthena* PlayerController, bool bEnableLoadScreen, FText HUDReasonText); // [0x92f1dc0] Final|Native|Private 
	// Function /Script/FortniteUI.FortCreativeStartScreen.HandleFullScreenMapToggled
	// void HandleFullScreenMapToggled(bool bMapVisible);                                                                       // [0x92f1d40] Final|Native|Private 
};

/// Class /Script/FortniteUI.FortCreativeTabGroup
/// Size: 0x0050 (0x0002C0 - 0x000310)
class UFortCreativeTabGroup : public UUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 784;

public:
	SMember(FMulticastInlineDelegate)                  OnCurrentTabChanged                                         OFFSET(getStruct<T>, {0x2C0, 16, 0, 0})
	CMember(UClass*)                                   TabButtonClass                                              OFFSET(get<T>, {0x2D0, 8, 0, 0})
	CMember(USoundBase*)                               TabOnHoveredSound                                           OFFSET(get<T>, {0x2E8, 8, 0, 0})
	CMember(USoundBase*)                               TabOnPressedSound                                           OFFSET(get<T>, {0x2F0, 8, 0, 0})
	CMember(UClass*)                                   TabButtonStyle                                              OFFSET(get<T>, {0x2F8, 8, 0, 0})
	CMember(UAthenaScrollBox*)                         Tab_Box                                                     OFFSET(get<T>, {0x300, 8, 0, 0})
	CMember(UCommonButtonGroupBase*)                   TabGroup                                                    OFFSET(get<T>, {0x308, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortCreativeTabGroup.PreviousTab
	// void PreviousTab();                                                                                                      // [0x92f4170] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortCreativeTabGroup.OnTabButtonAdded
	// void OnTabButtonAdded(UCommonButtonBase* Button, FText& TabName, FSlateBrush& TabIcon);                                  // [0x1d9241c] Event|Public|HasOutParms|BlueprintEvent 
	// Function /Script/FortniteUI.FortCreativeTabGroup.OnSimpleTabButtonAdded
	// void OnSimpleTabButtonAdded(UCommonButtonBase* Button, FText& TabName);                                                  // [0x1d9241c] Event|Public|HasOutParms|BlueprintEvent 
	// Function /Script/FortniteUI.FortCreativeTabGroup.OnCurrentTabChanged__DelegateSignature
	// void OnCurrentTabChanged__DelegateSignature(int32_t CurrentTabIndex);                                                    // [0x1d9241c] MulticastDelegate|Public|Delegate 
	// Function /Script/FortniteUI.FortCreativeTabGroup.NextTab
	// void NextTab();                                                                                                          // [0x92f3d64] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/FortniteUI.FortCreativeTeamSelectWidget
/// Size: 0x0000 (0x000570 - 0x000570)
class UFortCreativeTeamSelectWidget : public UFortActivatablePanel
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1392;

public:
};

/// Class /Script/FortniteUI.FortExpressYourSupportToggleButton
/// Size: 0x0050 (0x001490 - 0x0014E0)
class UFortExpressYourSupportToggleButton : public UCommonButtonBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 5344;

public:
	CMember(UCommonTextBlock*)                         Text_NormalText                                             OFFSET(get<T>, {0x1490, 8, 0, 0})
	SMember(FText)                                     ToggledOnText                                               OFFSET(getStruct<T>, {0x1498, 24, 0, 0})
	SMember(FText)                                     ToggledOffText                                              OFFSET(getStruct<T>, {0x14B0, 24, 0, 0})
	SMember(FText)                                     ToggledOnHoveredText                                        OFFSET(getStruct<T>, {0x14C8, 24, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortExpressYourSupportToggleButton.LeaveCreativeSupportButtonEnabled
	// bool LeaveCreativeSupportButtonEnabled();                                                                                // [0x3409eb8] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/FortniteUI.FortExpressYourSupportToggleButton.LeaveCreativeFavoriteButtonEnabled
	// bool LeaveCreativeFavoriteButtonEnabled();                                                                               // [0x3409ed0] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
};

/// Class /Script/FortniteUI.FortExpressYourSupportFavoriteButton
/// Size: 0x0030 (0x0014E0 - 0x001510)
class UFortExpressYourSupportFavoriteButton : public UFortExpressYourSupportToggleButton
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 5392;

public:
	CMember(UFortGameActivity*)                        Activity                                                    OFFSET(get<T>, {0x14E0, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortExpressYourSupportFavoriteButton.SetActivity
	// void SetActivity(UFortGameActivity* NewActivity);                                                                        // [0x92f43d4] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortExpressYourSupportFavoriteButton.Refresh
	// void Refresh();                                                                                                          // [0x92f41bc] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/FortniteUI.FortExpressYourSupportThumbsUpButton
/// Size: 0x0040 (0x0014E0 - 0x001520)
class UFortExpressYourSupportThumbsUpButton : public UFortExpressYourSupportToggleButton
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 5408;

public:
	CMember(UFortSidebarOnboardTooltipWidget*)         SidebarOnboardingLikeIsland                                 OFFSET(get<T>, {0x14E0, 8, 0, 0})
	SMember(FString)                                   SourceName                                                  OFFSET(getStruct<T>, {0x14E8, 16, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortExpressYourSupportThumbsUpButton.TrySendLikeAnalytic
	// void TrySendLikeAnalytic(AFortPlayerPawn* Pawn);                                                                         // [0x92f535c] Final|Native|Protected 
	// Function /Script/FortniteUI.FortExpressYourSupportThumbsUpButton.Refresh
	// void Refresh();                                                                                                          // [0x92f41d0] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortExpressYourSupportThumbsUpButton.GetCreatorName
	// FString GetCreatorName();                                                                                                // [0x92f1014] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/FortniteUI.FortIslandDescriptionLineData
/// Size: 0x0018 (0x000028 - 0x000040)
class UFortIslandDescriptionLineData : public UObject
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 64;

public:
	SMember(FText)                                     IslandDescriptionLine                                       OFFSET(getStruct<T>, {0x28, 24, 0, 0})
};

/// Class /Script/FortniteUI.FortIslandDescriptionListEntry
/// Size: 0x0010 (0x0002E8 - 0x0002F8)
class UFortIslandDescriptionListEntry : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 760;

public:
	CMember(UCommonTextBlock*)                         Text_IslandDescriptionLine                                  OFFSET(get<T>, {0x2F0, 8, 0, 0})
};

/// Class /Script/FortniteUI.FortIslandDescriptionWidget
/// Size: 0x0008 (0x0002E8 - 0x0002F0)
class UFortIslandDescriptionWidget : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 752;

public:
	CMember(UCommonListView*)                          ListView_IslandDescriptionLines                             OFFSET(get<T>, {0x2E8, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortIslandDescriptionWidget.OnDescriptionChanged
	// void OnDescriptionChanged(bool bIsEmptyDescription);                                                                     // [0x1d9241c] Event|Protected|BlueprintEvent 
};

/// Class /Script/FortniteUI.FortTrapCreativeConfigMenu
/// Size: 0x0000 (0x000570 - 0x000570)
class UFortTrapCreativeConfigMenu : public UFortActivatablePanel
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1392;

public:
};

/// Class /Script/FortniteUI.FortUserOptionEventContainerProxy
/// Size: 0x0138 (0x000088 - 0x0001C0)
class UFortUserOptionEventContainerProxy : public UFortUserOptionProxy
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 448;

public:
	CMember(TMap<int32_t, FBasicDeviceTrackingInfo>)   DeviceGuidToBasicDeviceInfo                                 OFFSET(get<T>, {0xA0, 80, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortUserOptionEventContainerProxy.OnRequestedDeviceChanged
	// void OnRequestedDeviceChanged(int32_t DeviceGuid);                                                                       // [0x92f3de8] Final|Native|Private 
	// Function /Script/FortniteUI.FortUserOptionEventContainerProxy.OnMatchmakingDialogDeactivated
	// void OnMatchmakingDialogDeactivated();                                                                                   // [0x92f3dc0] Final|Native|Private 
};

/// Class /Script/FortniteUI.FortUIGameFeatureAction_AddCreativeContentBrowserTab
/// Size: 0x0010 (0x000028 - 0x000038)
class UFortUIGameFeatureAction_AddCreativeContentBrowserTab : public UFortUIGameFeatureAction
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 56;

public:
	CMember(TArray<FCreativeContentBrowserTabInitializer>) CreativeContentBrowserTabInitializersToAdd              OFFSET(get<T>, {0x28, 16, 0, 0})
};

/// Class /Script/FortniteUI.FortCreativeVolumeWidget
/// Size: 0x0008 (0x0002C0 - 0x0002C8)
class UFortCreativeVolumeWidget : public UUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 712;

public:
};

/// Class /Script/FortniteUI.FortCreativeHeatmapOverBudgetWidget
/// Size: 0x0000 (0x0002C8 - 0x0002C8)
class UFortCreativeHeatmapOverBudgetWidget : public UFortCreativeVolumeWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 712;

public:
};

/// Class /Script/FortniteUI.FortCreativeSimplePlayerMetricInformationWidget
/// Size: 0x0000 (0x0002C8 - 0x0002C8)
class UFortCreativeSimplePlayerMetricInformationWidget : public UFortCreativeVolumeWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 712;

public:
};

/// Class /Script/FortniteUI.FortCreativeVolumePerformanceMetricWidget
/// Size: 0x0048 (0x0002C8 - 0x000310)
class UFortCreativeVolumePerformanceMetricWidget : public UFortCreativeVolumeWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 784;

public:
	SMember(FVolumePerformanceMetrics)                 LastVolumePerformanceMetrics                                OFFSET(getStruct<T>, {0x2C8, 52, 0, 0})
	CMember(EFortBudgetCategory)                       VolumePerformanceMetricCategory                             OFFSET(get<T>, {0x2FC, 1, 0, 0})
	DMember(int32_t)                                   LastCostPreviewOfSelectedActor                              OFFSET(get<int32_t>, {0x300, 4, 0, 0})
	DMember(int32_t)                                   HighestCellLastCostPreviewOfSelectedActor                   OFFSET(get<int32_t>, {0x304, 4, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortCreativeVolumePerformanceMetricWidget.OnVolumePerformanceMetricsUpdated
	// void OnVolumePerformanceMetricsUpdated(FVolumePerformanceMetrics& VolumePerformanceMetrics);                             // [0x92f40e0] Final|Native|Protected|HasOutParms 
	// Function /Script/FortniteUI.FortCreativeVolumePerformanceMetricWidget.OnVolumeManagerVolumeStateChanged
	// void OnVolumeManagerVolumeStateChanged(ESpatialLoadingState VolumeState, AFortVolume* Volume);                           // [0x92f401c] Final|Native|Protected 
	// Function /Script/FortniteUI.FortCreativeVolumePerformanceMetricWidget.BP_OnVolumePerformanceMetricsUpdated
	// void BP_OnVolumePerformanceMetricsUpdated(FVolumePerformanceMetrics& VolumePerformanceMetrics);                          // [0x1d9241c] Event|Protected|HasOutParms|BlueprintEvent 
	// Function /Script/FortniteUI.FortCreativeVolumePerformanceMetricWidget.BP_OnCostPreviewOfSelectedActorUpdated
	// void BP_OnCostPreviewOfSelectedActorUpdated(int32_t CostPreviewOfSelectedActor, int32_t HighestCellCostPreviewOfSelectedActor); // [0x1d9241c] Event|Protected|BlueprintEvent 
};

/// Class /Script/FortniteUI.FortStandardGlobalActionDetailsDataSource
/// Size: 0x0048 (0x000028 - 0x000070)
class UFortStandardGlobalActionDetailsDataSource : public UObject
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 112;

public:
	CMember(UFortGlobalUIContext*)                     GlobalUIContext                                             OFFSET(get<T>, {0x30, 8, 0, 0})
	CMember(UCommonInputSubsystem*)                    CommonInputSubsystem                                        OFFSET(get<T>, {0x38, 8, 0, 0})
	CMember(TWeakObjectPtr<AFortPlayerController*>)    FortPlayerController                                        OFFSET(get<T>, {0x40, 8, 0, 0})
	SMember(FFortGlobalActionDetailsFunctionContext)   ActionDetailsContext                                        OFFSET(getStruct<T>, {0x5A, 1, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortStandardGlobalActionDetailsDataSource.SetGlobalUIContext
	// void SetGlobalUIContext(UFortGlobalUIContext* Value);                                                                    // [0x92f46d0] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortStandardGlobalActionDetailsDataSource.SetGlobalAction
	// void SetGlobalAction(EFortGlobalAction Value);                                                                           // [0x92f4650] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortStandardGlobalActionDetailsDataSource.SetCommonInputSubsystem
	// void SetCommonInputSubsystem(UCommonInputSubsystem* Value);                                                              // [0x92f4554] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortStandardGlobalActionDetailsDataSource.SetActionDetailsContext
	// void SetActionDetailsContext(FFortGlobalActionDetailsFunctionContext& Value);                                            // [0x92f42c8] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/FortniteUI.FortStandardGlobalActionDetailsDataSource.HandlePlayerControllerChanged
	// void HandlePlayerControllerChanged(UObject* Source);                                                                     // [0x92f37a0] Final|Native|Protected 
	// Function /Script/FortniteUI.FortStandardGlobalActionDetailsDataSource.FortNameDataSourceOnChangeInternalDelegate__DelegateSignature
	// void FortNameDataSourceOnChangeInternalDelegate__DelegateSignature(UObject* Source);                                     // [0x1d9241c] MulticastDelegate|Public|Delegate 
	// Function /Script/FortniteUI.FortStandardGlobalActionDetailsDataSource.ConstructWithDefaultContexts
	// UFortStandardGlobalActionDetailsDataSource* ConstructWithDefaultContexts(UObject* Outer, UWidget* ContextWidget, EFortGlobalAction GlobalAction, FFortGlobalActionDetailsFunctionContext& ActionDetailsContext); // [0x92f0ddc] Final|Native|Static|Public|HasOutParms|BlueprintCallable 
	// Function /Script/FortniteUI.FortStandardGlobalActionDetailsDataSource.Construct
	// UFortStandardGlobalActionDetailsDataSource* Construct(UObject* Outer, UFortGlobalUIContext* GlobalUIContext, UCommonInputSubsystem* CommonInputSubsystem, EFortGlobalAction GlobalAction, FFortGlobalActionDetailsFunctionContext& ActionDetailsContext); // [0x92f0c50] Final|Native|Static|Public|HasOutParms|BlueprintCallable 
};

/// Class /Script/FortniteUI.FortTimerTimespanDataSource
/// Size: 0x0038 (0x000028 - 0x000060)
class UFortTimerTimespanDataSource : public UObject
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 96;

public:
};

/// Class /Script/FortniteUI.ActivityBrowserBlueprintLibrary
/// Size: 0x0000 (0x000028 - 0x000028)
class UActivityBrowserBlueprintLibrary : public UBlueprintFunctionLibrary
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 40;

public:
};

/// Class /Script/FortniteUI.FortActivityBrowserModeSetListEntry
/// Size: 0x0020 (0x001490 - 0x0014B0)
class UFortActivityBrowserModeSetListEntry : public UCommonButtonBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 5296;

public:
};

/// Class /Script/FortniteUI.FortActivityBrowserSoloButton
/// Size: 0x0050 (0x001580 - 0x0015D0)
class UFortActivityBrowserSoloButton : public UFortTextButton
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 5584;

public:
	SMember(FText)                                     SecondaryText                                               OFFSET(getStruct<T>, {0x1578, 24, 0, 0})
	CMember(UClass*)                                   SecondaryTextStyle                                          OFFSET(get<T>, {0x1590, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_Secondary                                              OFFSET(get<T>, {0x1598, 8, 0, 0})
	DMember(bool)                                      bEnableMobileOverrides                                      OFFSET(get<bool>, {0x15A0, 1, 0, 0})
	DMember(int32_t)                                   MinWidthOverride                                            OFFSET(get<int32_t>, {0x15A4, 4, 0, 0})
	DMember(int32_t)                                   MinHeightOverride                                           OFFSET(get<int32_t>, {0x15A8, 4, 0, 0})
	SMember(FMargin)                                   TextPaddingOverride                                         OFFSET(getStruct<T>, {0x15AC, 16, 0, 0})
	DMember(int32_t)                                   FontSizeOverride                                            OFFSET(get<int32_t>, {0x15BC, 4, 0, 0})
	CMember(UMaterialInterface*)                       MaterialOverride                                            OFFSET(get<T>, {0x15C0, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortActivityBrowserSoloButton.SetSecondaryText
	// void SetSecondaryText(FText& InSecondaryText);                                                                           // [0x92f485c] Final|Native|Public|HasOutParms|BlueprintCallable 
};

/// Class /Script/FortniteUI.FortActivityBrowserTag
/// Size: 0x0010 (0x0002C0 - 0x0002D0)
class UFortActivityBrowserTag : public UUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 720;

public:
	CMember(UCommonTextBlock*)                         Text_TagDescription                                         OFFSET(get<T>, {0x2C0, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortActivityBrowserTag.SetTextAndType
	// void SetTextAndType(FText& InText, EFortActivityBrowserTagType NewTagType);                                              // [0x92f4fe0] Final|RequiredAPI|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/FortniteUI.FortActivityBrowserTag.OnTagUpdated
	// void OnTagUpdated();                                                                                                     // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortActivityBrowserTag.GetTagType
	// EFortActivityBrowserTagType GetTagType();                                                                                // [0x92f1994] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/FortniteUI.FortActivityDetailsDisplay
/// Size: 0x00D8 (0x0002E8 - 0x0003C0)
class UFortActivityDetailsDisplay : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 960;

public:
	CMember(TArray<FString>)                           XpTagMnemonicWhitelist                                      OFFSET(get<T>, {0x350, 16, 0, 0})
	DMember(float)                                     IntroDelay                                                  OFFSET(get<float>, {0x360, 4, 0, 0})
	DMember(float)                                     DetailsScrollStartDelay                                     OFFSET(get<float>, {0x364, 4, 0, 0})
	DMember(float)                                     DetailsScrollSpeed                                          OFFSET(get<float>, {0x368, 4, 0, 0})
	DMember(float)                                     DetailsScrollEndDelay                                       OFFSET(get<float>, {0x36C, 4, 0, 0})
	CMember(UCommonRichTextBlock*)                     Text_ActivityOrigin                                         OFFSET(get<T>, {0x370, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_ActivityName                                           OFFSET(get<T>, {0x378, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_ActivityDescription                                    OFFSET(get<T>, {0x380, 8, 0, 0})
	CMember(UScrollBox*)                               ScrollBox_ActivityDescription                               OFFSET(get<T>, {0x388, 8, 0, 0})
	CMember(UDynamicEntryBox*)                         EntryBox_ActivityTags                                       OFFSET(get<T>, {0x390, 8, 0, 0})
	CMember(UWidgetAnimation*)                         DetailsIntro                                                OFFSET(get<T>, {0x398, 8, 0, 0})
	CMember(UWidgetAnimation*)                         DetailsOutro                                                OFFSET(get<T>, {0x3A0, 8, 0, 0})
	CMember(UCommonButtonBase*)                        Button_Accept                                               OFFSET(get<T>, {0x3A8, 8, 0, 0})
	CMember(UCommonButtonBase*)                        Button_Details                                              OFFSET(get<T>, {0x3B0, 8, 0, 0})
	CMember(UCommonButtonBase*)                        Button_Favorite                                             OFFSET(get<T>, {0x3B8, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortActivityDetailsDisplay.UpdateLinkCode
	// void UpdateLinkCode(FText& LinkCode, bool bIsCreativeActivity);                                                          // [0x1d9241c] Event|Protected|HasOutParms|BlueprintEvent 
	// Function /Script/FortniteUI.FortActivityDetailsDisplay.UpdateCCU
	// void UpdateCCU(int32_t CCUCount);                                                                                        // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortActivityDetailsDisplay.ToggleFavorite
	// void ToggleFavorite();                                                                                                   // [0x92f5348] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.FortActivityDetailsDisplay.ResetWidgetState
	// void ResetWidgetState();                                                                                                 // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortActivityDetailsDisplay.OnPartySizeChanged
	// void OnPartySizeChanged(int32_t PartySize);                                                                              // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortActivityDetailsDisplay.OnParentActivated
	// void OnParentActivated();                                                                                                // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortActivityDetailsDisplay.OnOutroAnimationFinished
	// void OnOutroAnimationFinished();                                                                                         // [0x92f3dd4] Final|Native|Private 
	// Function /Script/FortniteUI.FortActivityDetailsDisplay.OnLocalPlayerPromotedToLeader
	// void OnLocalPlayerPromotedToLeader();                                                                                    // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortActivityDetailsDisplay.OnLocalPlayerDemoted
	// void OnLocalPlayerDemoted();                                                                                             // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortActivityDetailsDisplay.OnIsFavoriteChanged
	// void OnIsFavoriteChanged(bool bIsFavorite, bool bPlayAnimation);                                                         // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortActivityDetailsDisplay.OnFriendsPlayingChanged
	// void OnFriendsPlayingChanged(int32_t NumPlaying);                                                                        // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortActivityDetailsDisplay.OnDetailsUpdated
	// void OnDetailsUpdated(bool bIsDetailsValid, bool bIsFavoritable);                                                        // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortActivityDetailsDisplay.OnDescriptionScrollRestarted
	// void OnDescriptionScrollRestarted();                                                                                     // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortActivityDetailsDisplay.IsDownloadRequired
	// bool IsDownloadRequired();                                                                                               // [0x92f3c58] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortActivityDetailsDisplay.IsDisplayingCategory
	// bool IsDisplayingCategory();                                                                                             // [0x92f3c40] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortActivityDetailsDisplay.IsActivityEpicOriginal
	// bool IsActivityEpicOriginal();                                                                                           // [0x92f3bf8] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortActivityDetailsDisplay.IsActivityEpicCreated
	// bool IsActivityEpicCreated();                                                                                            // [0x92f3bd4] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortActivityDetailsDisplay.GetSelectedGameActivity
	// UFortGameActivity* GetSelectedGameActivity();                                                                            // [0x92f1860] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortActivityDetailsDisplay.GetInvalidActivityReason
	// EFortInvalidActivityReason GetInvalidActivityReason();                                                                   // [0x92f17b4] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortActivityDetailsDisplay.GetCreatorTextFormat
	// FText GetCreatorTextFormat(FText& CreatorName);                                                                          // [0x92f16b8] Native|Event|Protected|HasOutParms|BlueprintEvent 
	// Function /Script/FortniteUI.FortActivityDetailsDisplay.GetContentWarningStrings
	// TArray<FString> GetContentWarningStrings();                                                                              // [0x92f0fd8] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortActivityDetailsDisplay.AcceptActivity
	// void AcceptActivity();                                                                                                   // [0x92f0bcc] Final|Native|Protected|BlueprintCallable 
};

/// Class /Script/FortniteUI.FortActivityDetailsDisplayHero
/// Size: 0x0000 (0x0002E8 - 0x0002E8)
class UFortActivityDetailsDisplayHero : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 744;

public:
};

/// Class /Script/FortniteUI.FortActivityView
/// Size: 0x0050 (0x000400 - 0x000450)
class UFortActivityView : public UCommonActivatableWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1104;

public:
};

/// Class /Script/FortniteUI.FortActivityDetailsModal
/// Size: 0x0120 (0x000450 - 0x000570)
class UFortActivityDetailsModal : public UFortActivityView
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1392;

public:
	DMember(bool)                                      bIsCreatorPageAccessEnabled                                 OFFSET(get<bool>, {0x451, 1, 0, 0})
	DMember(bool)                                      bShouldForceCreatorPageFirstTimeTooltip                     OFFSET(get<bool>, {0x452, 1, 0, 0})
	DMember(bool)                                      bIsUEFNAttributionsAccessEnabled                            OFFSET(get<bool>, {0x453, 1, 0, 0})
	CMember(UCommonTextBlock*)                         Text_LinkCode                                               OFFSET(get<T>, {0x458, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_LinkCodeVersion                                        OFFSET(get<T>, {0x460, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_VersionSubmode                                         OFFSET(get<T>, {0x468, 8, 0, 0})
	CMember(UFortActivityDetailsDisplay*)              DetailsDisplay_SelectedActivity                             OFFSET(get<T>, {0x470, 8, 0, 0})
	CMember(UCommonButtonBase*)                        Button_CloseTouch                                           OFFSET(get<T>, {0x478, 8, 0, 0})
	CMember(UCommonButtonBase*)                        Button_Back                                                 OFFSET(get<T>, {0x480, 8, 0, 0})
	CMember(UCommonButtonBase*)                        Button_BackBoard                                            OFFSET(get<T>, {0x488, 8, 0, 0})
	CMember(UFortActivityVideoCycle*)                  ActivityVideoCycle                                          OFFSET(get<T>, {0x490, 8, 0, 0})
	CMember(UCommonButtonBase*)                        Button_Favorite                                             OFFSET(get<T>, {0x498, 8, 0, 0})
	CMember(UFortActivityModeSetSelection*)            List_SubModeList                                            OFFSET(get<T>, {0x4A0, 8, 0, 0})
	CMember(UFortActivitySquadFillButton*)             Button_SquadFillButton                                      OFFSET(get<T>, {0x4A8, 8, 0, 0})
	CMember(UFortActivityPrivacyButton*)               Button_PrivacyButton                                        OFFSET(get<T>, {0x4B0, 8, 0, 0})
	CMember(UCommonButtonBase*)                        Button_CreatorPage                                          OFFSET(get<T>, {0x4B8, 8, 0, 0})
	CMember(UCommonButtonBase*)                        Button_Attributions                                         OFFSET(get<T>, {0x4C0, 8, 0, 0})
	CMember(UCommonActivatableWidget*)                 ActivityDetailsModal_CreatorPageTooltip                     OFFSET(get<T>, {0x4C8, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortActivityDetailsModal.OnSubModeSelectionChanged
	// void OnSubModeSelectionChanged();                                                                                        // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortActivityDetailsModal.OnShowSubModeFirstTimeNotification
	// void OnShowSubModeFirstTimeNotification(FText& ActivityAndSettingText);                                                  // [0x1d9241c] Event|Protected|HasOutParms|BlueprintEvent 
	// Function /Script/FortniteUI.FortActivityDetailsModal.OnSelectedSubModeTextChanged
	// void OnSelectedSubModeTextChanged(FText& ActivityText, FText& SettingText);                                              // [0x1d9241c] Event|Protected|HasOutParms|BlueprintEvent 
	// Function /Script/FortniteUI.FortActivityDetailsModal.OnPreviewImageChanged
	// void OnPreviewImageChanged(bool bIsLoading, UTexture* Texture);                                                          // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortActivityDetailsModal.OnIsFavoriteChanged
	// void OnIsFavoriteChanged(bool bIsFavorite);                                                                              // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortActivityDetailsModal.IsModeSetActivity
	// bool IsModeSetActivity();                                                                                                // [0x92f3cc4] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortActivityDetailsModal.IsLocalPlayerPartyLeader
	// bool IsLocalPlayerPartyLeader();                                                                                         // [0x92f3c7c] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortActivityDetailsModal.IsCreativeModeSetActivity
	// bool IsCreativeModeSetActivity();                                                                                        // [0x92f3c1c] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortActivityDetailsModal.GetSelectedGameActivity
	// UFortGameActivity* GetSelectedGameActivity();                                                                            // [0x92f18e0] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortActivityDetailsModal.GetInvalidActivityReason
	// EFortInvalidActivityReason GetInvalidActivityReason();                                                                   // [0x92f17d8] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/FortniteUI.FortActivityHabaneroButton
/// Size: 0x0030 (0x001490 - 0x0014C0)
class UFortActivityHabaneroButton : public UCommonButtonBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 5312;

public:
	DMember(bool)                                      bCommitSelectionOnClick                                     OFFSET(get<bool>, {0x1490, 1, 0, 0})
	CMember(UFortHabaneroTierWidget*)                  HabaneroWidget                                              OFFSET(get<T>, {0x1498, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortActivityHabaneroButton.ToggleFillOnlyVisibility
	// void ToggleFillOnlyVisibility(bool bIsFillOnlyEnabled);                                                                  // [0x1d9241c] RequiredAPI|Event|Public|BlueprintCallable|BlueprintEvent 
	// Function /Script/FortniteUI.FortActivityHabaneroButton.RefreshHabaneroSelection
	// void RefreshHabaneroSelection();                                                                                         // [0x92f41e4] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortActivityHabaneroButton.OnHabaneroAvailabilityChanged
	// void OnHabaneroAvailabilityChanged(bool bIsAvailable);                                                                   // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortActivityHabaneroButton.OnDesiredHabaneroSelectionChanged
	// void OnDesiredHabaneroSelectionChanged(bool bIsSelected);                                                                // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortActivityHabaneroButton.CommitCurrentHabaneroSelection
	// void CommitCurrentHabaneroSelection();                                                                                   // [0x92f0c3c] Final|RequiredAPI|Native|Public|BlueprintCallable|Const 
};

/// Class /Script/FortniteUI.FortActivityModeSetSelection
/// Size: 0x0010 (0x000BD0 - 0x000BE0)
class UFortActivityModeSetSelection : public UCommonListView
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 3040;

public:
	CMember(UFortGameActivity*)                        CachedGameActivity                                          OFFSET(get<T>, {0xBD0, 8, 0, 0})
	CMember(UFortGameActivity*)                        SavedActivity                                               OFFSET(get<T>, {0xBD8, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortActivityModeSetSelection.SetSelectedMnemonic
	// UFortGameActivity* SetSelectedMnemonic(FString Mnemonic);                                                                // [0x92f4930] Final|RequiredAPI|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortActivityModeSetSelection.SetActivity
	// void SetActivity(UFortGameActivity* GameActivity);                                                                       // [0x92f4354] Final|RequiredAPI|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortActivityModeSetSelection.GetSelectedLinkId
	// FOnlineLinkId GetSelectedLinkId();                                                                                       // [0x92f1914] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/FortniteUI.FortActivityPrivacyButton
/// Size: 0x0020 (0x001490 - 0x0014B0)
class UFortActivityPrivacyButton : public UCommonButtonBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 5296;

public:
};

/// Class /Script/FortniteUI.FortActivityScaleFontList
/// Size: 0x0010 (0x000028 - 0x000038)
class UFortActivityScaleFontList : public UObject
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 56;

public:
	CMember(TArray<FFortActivityScaleFontData>)        ScaleData                                                   OFFSET(get<T>, {0x28, 16, 0, 0})
};

/// Class /Script/FortniteUI.FortActivityScalingTextBlock
/// Size: 0x0000 (0x000380 - 0x000380)
class UFortActivityScalingTextBlock : public UCommonTextBlock
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 896;

public:
};

/// Class /Script/FortniteUI.FortActivitySquadFillButton
/// Size: 0x0040 (0x001490 - 0x0014D0)
class UFortActivitySquadFillButton : public UCommonButtonBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 5328;

public:
	SMember(FText)                                     FillOnlyText                                                OFFSET(getStruct<T>, {0x1490, 24, 0, 0})
	DMember(bool)                                      bCommitSelectionOnClick                                     OFFSET(get<bool>, {0x14A8, 1, 0, 0})
	DMember(bool)                                      bIsPrivateGameSelected                                      OFFSET(get<bool>, {0x14A9, 1, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortActivitySquadFillButton.ToggleFillOnlyVisibility
	// void ToggleFillOnlyVisibility(bool bIsFillOnlyEnabled);                                                                  // [0x1d9241c] RequiredAPI|Event|Public|BlueprintCallable|BlueprintEvent 
	// Function /Script/FortniteUI.FortActivitySquadFillButton.RefreshSquadFillSelection
	// void RefreshSquadFillSelection();                                                                                        // [0x92f4264] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortActivitySquadFillButton.RefreshSquadFillAvailability
	// void RefreshSquadFillAvailability();                                                                                     // [0x92f4250] Final|RequiredAPI|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortActivitySquadFillButton.OnSquadFillAvailabilityChanged
	// void OnSquadFillAvailabilityChanged(bool bIsAvailable);                                                                  // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortActivitySquadFillButton.OnDesiredSquadFillSelectionChanged
	// void OnDesiredSquadFillSelectionChanged(bool bIsSelected);                                                               // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortActivitySquadFillButton.GetPreferredDisabledFillOption
	// bool GetPreferredDisabledFillOption();                                                                                   // [0x92f183c] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortActivitySquadFillButton.CommitCurrentFillSelection
	// void CommitCurrentFillSelection();                                                                                       // [0x92f0c28] Final|RequiredAPI|Native|Public|BlueprintCallable|Const 
};

/// Class /Script/FortniteUI.FortActivityVideoCycle
/// Size: 0x0060 (0x0002E8 - 0x000348)
class UFortActivityVideoCycle : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 840;

public:
	CMember(UClass*)                                   MovieWidgetClass                                            OFFSET(get<T>, {0x2F0, 8, 0, 0})
	CMember(UFortActivatableMovieWidget*)              ActivityMovieWidget                                         OFFSET(get<T>, {0x2F8, 8, 0, 0})
	DMember(float)                                     MovieStartDelay                                             OFFSET(get<float>, {0x300, 4, 0, 0})
	DMember(float)                                     MovieRestartDelay                                           OFFSET(get<float>, {0x304, 4, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortActivityVideoCycle.PlayVideoOutro
	// void PlayVideoOutro();                                                                                                   // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.FortActivityVideoCycle.PlayVideoIntro
	// void PlayVideoIntro();                                                                                                   // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.FortActivityVideoCycle.HandleVideoCycleClosed
	// void HandleVideoCycleClosed();                                                                                           // [0x92f3a40] Final|Native|Private 
	// Function /Script/FortniteUI.FortActivityVideoCycle.HandleMovieWidgetMediaStarted
	// void HandleMovieWidgetMediaStarted();                                                                                    // [0x92f3404] Final|Native|Private 
	// Function /Script/FortniteUI.FortActivityVideoCycle.HandleMovieWidgetMediaPreEndEvent
	// void HandleMovieWidgetMediaPreEndEvent();                                                                                // [0x92f33f0] Final|Native|Private 
	// Function /Script/FortniteUI.FortActivityVideoCycle.HandleMovieWidgetMediaOpenFailed
	// void HandleMovieWidgetMediaOpenFailed(FString FailedUrl);                                                                // [0x92f2688] Final|Native|Private 
	// Function /Script/FortniteUI.FortActivityVideoCycle.HandleMovieWidgetMediaOpened
	// void HandleMovieWidgetMediaOpened(FString OpenedUrl);                                                                    // [0x92f2d3c] Final|Native|Private 
	// Function /Script/FortniteUI.FortActivityVideoCycle.HandleMovieWidgetMediaError
	// void HandleMovieWidgetMediaError(FString StreamedVideoError);                                                            // [0x92f1fd4] Final|Native|Private 
	// Function /Script/FortniteUI.FortActivityVideoCycle.HandleMovieWidgetMediaEndReached
	// void HandleMovieWidgetMediaEndReached();                                                                                 // [0x92f1fc0] Final|Native|Private 
	// Function /Script/FortniteUI.FortActivityVideoCycle.HandleMovieWidgetMediaClosed
	// void HandleMovieWidgetMediaClosed();                                                                                     // [0x92f1fac] Final|Native|Private 
};

/// Class /Script/FortniteUI.FortDiscoverSurfaceCache
/// Size: 0x0030 (0x000028 - 0x000058)
class UFortDiscoverSurfaceCache : public UObject
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 88;

public:
	CMember(TArray<FCachedSurfaceData>)                CachedSurfacesData                                          OFFSET(get<T>, {0x28, 16, 0, 0})
	CMember(UFortGameActivityProvider*)                CachedWinterfestActivityProvider                            OFFSET(get<T>, {0x38, 8, 0, 0})
};

/// Class /Script/FortniteUI.FortDiscoverProviderViewModel
/// Size: 0x00C0 (0x000068 - 0x000128)
class UFortDiscoverProviderViewModel : public UMVVMViewModelBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 296;

public:
	SMember(FString)                                   PanelName                                                   OFFSET(getStruct<T>, {0x68, 16, 0, 0})
	CMember(TArray<UFortActivityViewModel*>)           Activities                                                  OFFSET(get<T>, {0x78, 16, 0, 0})
	SMember(FString)                                   PanelDisplayName                                            OFFSET(getStruct<T>, {0x88, 16, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortDiscoverProviderViewModel.StopVisibleImpression
	// void StopVisibleImpression();                                                                                            // [0x9321840] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortDiscoverProviderViewModel.StartVisibleImpressions
	// void StartVisibleImpressions();                                                                                          // [0x9321754] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortDiscoverProviderViewModel.ResetImpressions
	// void ResetImpressions();                                                                                                 // [0x931e94c] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortDiscoverProviderViewModel.GetIslandCount
	// int32_t GetIslandCount();                                                                                                // [0x52549b0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/FortniteUI.MotdDiscoveryAction
/// Size: 0x0078 (0x000030 - 0x0000A8)
class UMotdDiscoveryAction : public UMotdActionBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 168;

public:
};

/// Class /Script/FortniteUI.FortDynamicUIPlayerProxy
/// Size: 0x0008 (0x000030 - 0x000038)
class UFortDynamicUIPlayerProxy : public ULocalPlayerSubsystem
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 56;

public:
};

/// Class /Script/FortniteUI.EmergencyNoticeBase
/// Size: 0x0008 (0x0002E8 - 0x0002F0)
class UEmergencyNoticeBase : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 752;

public:
	CMember(UBorder*)                                  Border_TestBG                                               OFFSET(get<T>, {0x2E8, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.EmergencyNoticeBase.ShowNotice
	// void ShowNotice(FText& Title, FText& Body);                                                                              // [0x1d9241c] Event|Protected|HasOutParms|BlueprintEvent 
	// Function /Script/FortniteUI.EmergencyNoticeBase.HideNotice
	// void HideNotice();                                                                                                       // [0x1d9241c] Event|Protected|BlueprintEvent 
};

/// Class /Script/FortniteUI.FortShowdownDetailView
/// Size: 0x0490 (0x0002E8 - 0x000778)
class UFortShowdownDetailView : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1912;

public:
	SMember(FFortTournamentDisplayInfo)                TournamentDisplayInfo                                       OFFSET(getStruct<T>, {0x300, 464, 0, 0})
	SMember(FShowdownTournamentEntry)                  CMSTournamentData                                           OFFSET(getStruct<T>, {0x4D0, 480, 0, 0})
	CMember(UCommonTextBlock*)                         Text_TimeRemaining                                          OFFSET(get<T>, {0x6B0, 8, 0, 0})
	CMember(UTextBlock*)                               Text_DebugId                                                OFFSET(get<T>, {0x6B8, 8, 0, 0})
	CMember(UEpicCMSImage*)                            Image_PosterFront                                           OFFSET(get<T>, {0x6C0, 8, 0, 0})
	CMember(UEpicCMSImage*)                            Image_PosterBack                                            OFFSET(get<T>, {0x6C8, 8, 0, 0})
	CMember(UEpicCMSImage*)                            Image_LoadingScreen                                         OFFSET(get<T>, {0x6D0, 8, 0, 0})
	CMember(UEpicCMSImage*)                            Image_PlaylistTile                                          OFFSET(get<T>, {0x6D8, 8, 0, 0})
	SMember(FText)                                     TimeRemainingFormat                                         OFFSET(getStruct<T>, {0x6E0, 24, 0, 0})
	DMember(bool)                                      bTimeRemainingShowSeconds                                   OFFSET(get<bool>, {0x6F8, 1, 0, 0})
	DMember(bool)                                      bTimeRemainingUppercase                                     OFFSET(get<bool>, {0x6F9, 1, 0, 0})
	CMember(ETimespanAsTextFormat)                     TimeRemainingFormatType                                     OFFSET(get<T>, {0x6FA, 1, 0, 0})
	SMember(FMargin)                                   TitlePaddingMobile                                          OFFSET(getStruct<T>, {0x6FC, 16, 0, 0})
	DMember(bool)                                      bRefreshDataOnUpdateEventState                              OFFSET(get<bool>, {0x70C, 1, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortShowdownDetailView.ShouldShowCrossplayError
	// bool ShouldShowCrossplayError();                                                                                         // [0x964896c] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortShowdownDetailView.SetTournament
	// void SetTournament(FString TournamentId, FString EventId, bool bForceRefreshUI);                                         // [0x9646e20] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortShowdownDetailView.RefreshDataBP
	// void RefreshDataBP();                                                                                                    // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortShowdownDetailView.IsWorldCupQualifierEvent
	// bool IsWorldCupQualifierEvent();                                                                                         // [0x9641774] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortShowdownDetailView.IsSeriesPointLeaderboardAvailable
	// bool IsSeriesPointLeaderboardAvailable();                                                                                // [0x9641644] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortShowdownDetailView.IsPreviousDisplayedWindowFromDifferentVisualRound
	// bool IsPreviousDisplayedWindowFromDifferentVisualRound(bool bGroupByVisualRoundNumber);                                  // [0x9641364] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortShowdownDetailView.IsFloatingLeaderboardAvailable
	// bool IsFloatingLeaderboardAvailable();                                                                                   // [0x9640c64] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortShowdownDetailView.IsFirstDisplayedWindow
	// bool IsFirstDisplayedWindow(bool bGroupByVisualRoundNumber);                                                             // [0x9640b94] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortShowdownDetailView.IsEventLeaderboardAvailable
	// bool IsEventLeaderboardAvailable();                                                                                      // [0x9640b10] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortShowdownDetailView.HasScoreInEvent
	// bool HasScoreInEvent();                                                                                                  // [0x9640974] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortShowdownDetailView.HasRemainingVisualRounds
	// bool HasRemainingVisualRounds();                                                                                         // [0x9640884] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortShowdownDetailView.GetWindowSessionDisplayString
	// FText GetWindowSessionDisplayString();                                                                                   // [0x963dde8] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortShowdownDetailView.GetWindowRoundDisplayString
	// FText GetWindowRoundDisplayString();                                                                                     // [0x963dd6c] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortShowdownDetailView.GetWindowRoundAndSessionDisplayString
	// FText GetWindowRoundAndSessionDisplayString();                                                                           // [0x963dcd4] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortShowdownDetailView.GetTournamentTimeState
	// EFortShowdownEventState GetTournamentTimeState();                                                                        // [0x963dcb0] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortShowdownDetailView.GetTournamentTimeLeft
	// FTimespan GetTournamentTimeLeft();                                                                                       // [0x963dc84] Final|Native|Protected|HasDefaults|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortShowdownDetailView.GetTournamentSeriesId
	// FString GetTournamentSeriesId();                                                                                         // [0x963dc44] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortShowdownDetailView.GetTournamentScoringRules
	// TArray<FFortShowdownScoringRuleInfo> GetTournamentScoringRules();                                                        // [0x963d5b0] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.FortShowdownDetailView.GetTournamentPinUnlockScore
	// int32_t GetTournamentPinUnlockScore();                                                                                   // [0x963d598] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortShowdownDetailView.GetTournamentNextEvent
	// FString GetTournamentNextEvent();                                                                                        // [0x963d558] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortShowdownDetailView.GetTournamentMatchType
	// EFortShowdownMatchType GetTournamentMatchType();                                                                         // [0x963d534] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortShowdownDetailView.GetTournamentMatchCap
	// int32_t GetTournamentMatchCap();                                                                                         // [0x963d4d8] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortShowdownDetailView.GetTournamentId
	// FString GetTournamentId();                                                                                               // [0x963d480] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortShowdownDetailView.GetTournamentEvents
	// TArray<FString> GetTournamentEvents(bool bGroupByRoundNumber);                                                           // [0x963d3d8] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.FortShowdownDetailView.GetTournamentEndTime
	// FDateTime GetTournamentEndTime();                                                                                        // [0x963d368] Final|Native|Protected|HasDefaults|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortShowdownDetailView.GetTournamentEligibility
	// EFortEventWindowEligibility GetTournamentEligibility();                                                                  // [0x963d344] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortShowdownDetailView.GetTournamentBestScore
	// int32_t GetTournamentBestScore();                                                                                        // [0x963d320] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortShowdownDetailView.GetTournamentBestPinState
	// EFortShowdownPinState GetTournamentBestPinState();                                                                       // [0x963d2e0] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortShowdownDetailView.GetTournamentBeginTime
	// FDateTime GetTournamentBeginTime();                                                                                      // [0x963d270] Final|Native|Protected|HasDefaults|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortShowdownDetailView.GetSeriesPointLeaderboardIds
	// void GetSeriesPointLeaderboardIds(FString& OutEventId, FString& OutEventWindowId);                                       // [0x963c4c8] Final|Native|Protected|HasOutParms|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortShowdownDetailView.GetNumEventVisualRounds
	// int32_t GetNumEventVisualRounds();                                                                                       // [0x963a9ac] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortShowdownDetailView.GetEventWindowVisualRoundNumber
	// int32_t GetEventWindowVisualRoundNumber();                                                                               // [0x9637ec4] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortShowdownDetailView.GetEventWindowSessionNumber
	// int32_t GetEventWindowSessionNumber();                                                                                   // [0x9637ea0] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortShowdownDetailView.GetEventWindowEligibility
	// EFortEventWindowEligibility GetEventWindowEligibility();                                                                 // [0x9637e7c] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortShowdownDetailView.GetEventTimeState
	// EFortShowdownEventState GetEventTimeState();                                                                             // [0x32d4200] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortShowdownDetailView.GetEventTimespanAsText
	// FText GetEventTimespanAsText(FTimespan InTimeRemaining, bool bShowSeconds, ETimespanAsTextFormat FormatType);            // [0x9637ac8] Final|Native|Protected|HasDefaults|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortShowdownDetailView.GetEventTimeLeft
	// FTimespan GetEventTimeLeft();                                                                                            // [0x9637a9c] Final|Native|Protected|HasDefaults|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortShowdownDetailView.GetEventTimeAsText
	// FText GetEventTimeAsText(FDateTime DateTime, EFortDateTimeStyle style);                                                  // [0x9637800] Final|Native|Protected|HasDefaults|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortShowdownDetailView.GetEventResultsSummary
	// FFortShowdownEventBestResultsSummary GetEventResultsSummary();                                                           // [0x9637758] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.FortShowdownDetailView.GetEventPlayerParticipationState
	// EFortShowdownEventState GetEventPlayerParticipationState();                                                              // [0x9637734] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortShowdownDetailView.GetEventPinState
	// EFortShowdownPinState GetEventPinState();                                                                                // [0x96376cc] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortShowdownDetailView.GetEventLeaderboardRank
	// int32_t GetEventLeaderboardRank();                                                                                       // [0x963767c] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortShowdownDetailView.GetEventLeaderboardPercentile
	// float GetEventLeaderboardPercentile();                                                                                   // [0x9637654] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortShowdownDetailView.GetEventIdForEligibilityToken
	// FString GetEventIdForEligibilityToken(FString Token);                                                                    // [0x9636fa4] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortShowdownDetailView.GetEventId
	// FString GetEventId();                                                                                                    // [0x2ff3e80] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortShowdownDetailView.GetEventEndTime
	// FDateTime GetEventEndTime();                                                                                             // [0x9636f7c] Final|Native|Protected|HasDefaults|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortShowdownDetailView.GetEventDateAsText
	// FText GetEventDateAsText(FDateTime DateTime, EFortDateTimeStyle style);                                                  // [0x9636ce0] Final|Native|Protected|HasDefaults|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortShowdownDetailView.GetEventBeginTime
	// FDateTime GetEventBeginTime();                                                                                           // [0x9636cb8] Final|Native|Protected|HasDefaults|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortShowdownDetailView.GetCurrentRegionName
	// FText GetCurrentRegionName();                                                                                            // [0x963668c] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortShowdownDetailView.GetCurrentEventTeamNumMatchesPlayed
	// int32_t GetCurrentEventTeamNumMatchesPlayed();                                                                           // [0x963660c] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortShowdownDetailView.GetCurrentEventScore
	// int32_t GetCurrentEventScore();                                                                                          // [0x96365e8] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortShowdownDetailView.GetCurrentEventAlternativeScore
	// int32_t GetCurrentEventAlternativeScore();                                                                               // [0x963621c] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortShowdownDetailView.GetBestEventScore
	// int32_t GetBestEventScore();                                                                                             // [0x9636398] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortShowdownDetailView.GetAlternativeResultsSummary
	// FFortShowdownEventBestResultsSummary GetAlternativeResultsSummary();                                                     // [0x96361e0] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.FortShowdownDetailView.DoDisplayRoundNumber
	// bool DoDisplayRoundNumber(bool bGroupByRoundNumber);                                                                     // [0x9635880] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortShowdownDetailView.DoCalloutMFARequirement
	// bool DoCalloutMFARequirement();                                                                                          // [0x963585c] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortShowdownDetailView.ConvertCMSStringToColor
	// FLinearColor ConvertCMSStringToColor(FString ColorString);                                                               // [0x9635084] Final|Native|Protected|HasDefaults|BlueprintCallable 
	// Function /Script/FortniteUI.FortShowdownDetailView.CanUseAlternativeScore
	// bool CanUseAlternativeScore();                                                                                           // [0x9634f10] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortShowdownDetailView.CanGroupTournamentEventsByVisualRoundNumber
	// bool CanGroupTournamentEventsByVisualRoundNumber();                                                                      // [0x9634e2c] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortShowdownDetailView.BP_ResetDetailView
	// void BP_ResetDetailView();                                                                                               // [0x1d9241c] Event|Protected|BlueprintEvent 
};

/// Class /Script/FortniteUI.FortShowdownDivisionEventView
/// Size: 0x0000 (0x000778 - 0x000778)
class UFortShowdownDivisionEventView : public UFortShowdownDetailView
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1912;

public:
};

/// Class /Script/FortniteUI.FortArenaPersonalDivisionView
/// Size: 0x0040 (0x000778 - 0x0007B8)
class UFortArenaPersonalDivisionView : public UFortShowdownDivisionEventView
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1976;

public:
	CMember(UFortLazyImage*)                           Image_CurrentDivisionFancy                                  OFFSET(get<T>, {0x778, 8, 0, 0})
	CMember(UFortLazyImage*)                           Image_CurrentDivisionPlain                                  OFFSET(get<T>, {0x780, 8, 0, 0})
	CMember(UProgressBar*)                             Bar_DivisionProgress                                        OFFSET(get<T>, {0x788, 8, 0, 0})
	CMember(UCommonTextBlock*)                         CommonText_DivisionProgress                                 OFFSET(get<T>, {0x790, 8, 0, 0})
	CMember(UFortLazyImage*)                           Image_NextDivision                                          OFFSET(get<T>, {0x798, 8, 0, 0})
	CMember(URichTextBlock*)                           RichText_TitleName                                          OFFSET(get<T>, {0x7A0, 8, 0, 0})
	CMember(UCommonTextBlock*)                         CommonText_DivisionRank                                     OFFSET(get<T>, {0x7A8, 8, 0, 0})
	CMember(UCommonTextBlock*)                         CommonText_TotalHype                                        OFFSET(get<T>, {0x7B0, 8, 0, 0})
};

/// Class /Script/FortniteUI.FortArenaPersonalViewTab
/// Size: 0x0008 (0x000400 - 0x000408)
class UFortArenaPersonalViewTab : public UCommonActivatableWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1032;

public:
	CMember(UFortArenaPersonalDivisionView*)           EventView_PersonalHype                                      OFFSET(get<T>, {0x400, 8, 0, 0})
};

/// Class /Script/FortniteUI.FortLeaderboardListViewWrapper
/// Size: 0x0020 (0x000400 - 0x000420)
class UFortLeaderboardListViewWrapper : public UCommonActivatableWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1056;

public:
	CMember(UListView*)                                ListView_LeaderboardEntries                                 OFFSET(get<T>, {0x408, 8, 0, 0})
	CMember(UHorizontalBox*)                           Content_LoadingEntries                                      OFFSET(get<T>, {0x410, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortLeaderboardListViewWrapper.OnLeaderboardEntryAdded
	// void OnLeaderboardEntryAdded(ELeaderboardDisplayType NewDisplayType);                                                    // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.FortLeaderboardListViewWrapper.OnLeaderboardDisplayTypeChanged
	// void OnLeaderboardDisplayTypeChanged(ELeaderboardDisplayType NewDisplayType);                                            // [0x1d9241c] Event|Public|BlueprintEvent 
};

/// Class /Script/FortniteUI.FortLeaderboardViewTab
/// Size: 0x0028 (0x000400 - 0x000428)
class UFortLeaderboardViewTab : public UCommonActivatableWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1064;

public:
	CMember(UTextBlock*)                               Text_DebugId                                                OFFSET(get<T>, {0x400, 8, 0, 0})
	DMember(bool)                                      bDisplayTabHeaders                                          OFFSET(get<bool>, {0x408, 1, 0, 0})
	CMember(UCommonWidgetSwitcherLegacy*)              Switcher_LeaderboardEntries                                 OFFSET(get<T>, {0x410, 8, 0, 0})
	CMember(UFortLeaderboardListViewWrapper*)          ActivatableContent_LeaderboardListWrapper                   OFFSET(get<T>, {0x418, 8, 0, 0})
	CMember(UCommonBorder*)                            Content_NoLeaderboardEntries                                OFFSET(get<T>, {0x420, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortLeaderboardViewTab.OnLeaderboardDisplayTypeChanged
	// void OnLeaderboardDisplayTypeChanged(ELeaderboardDisplayType NewDisplayType);                                            // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.FortLeaderboardViewTab.GetListView
	// UListView* GetListView();                                                                                                // [0x931b960] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/FortniteUI.FortCompetitiveLeaderboardScreen
/// Size: 0x0060 (0x000400 - 0x000460)
class UFortCompetitiveLeaderboardScreen : public UCommonActivatableWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1120;

public:
	CMember(TArray<UFortEventLeaderboardEntryData*>)   LeaderboardEntries                                          OFFSET(get<T>, {0x400, 16, 0, 0})
	CMember(UFortEventLeaderboardEntryData*)           MyEntryData                                                 OFFSET(get<T>, {0x410, 8, 0, 0})
	CMember(UFortEventLeaderboardEntryData*)           EntryToShowDetails                                          OFFSET(get<T>, {0x420, 8, 0, 0})
	SMember(FString)                                   RepresentedEventId                                          OFFSET(getStruct<T>, {0x430, 16, 0, 0})
	SMember(FString)                                   RepresentedEventWindowId                                    OFFSET(getStruct<T>, {0x440, 16, 0, 0})
	CMember(UFortLeaderboardViewTab*)                  ActivatableContent_LeaderboardTab                           OFFSET(get<T>, {0x458, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortCompetitiveLeaderboardScreen.SetEvent
	// void SetEvent(FString EventId, FString EventWindowId);                                                                   // [0x931ecc4] Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.FortCompetitiveLeaderboardScreen.RequestNextPage
	// void RequestNextPage();                                                                                                  // [0x931e8b8] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.FortCompetitiveLeaderboardScreen.OnLeaderboardEntrySelected
	// void OnLeaderboardEntrySelected(UFortEventLeaderboardEntryData* EntryData);                                              // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortCompetitiveLeaderboardScreen.OnLeaderboardDisplayTypeChanged
	// void OnLeaderboardDisplayTypeChanged(ELeaderboardDisplayType NewDisplayType);                                            // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortCompetitiveLeaderboardScreen.HandleLeaderboardSetInView
	// void HandleLeaderboardSetInView();                                                                                       // [0x931d5e8] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.FortCompetitiveLeaderboardScreen.GetMyLeaderboardEntry
	// UFortEventLeaderboardEntryData* GetMyLeaderboardEntry();                                                                 // [0x931bba0] Final|Native|Protected|BlueprintCallable 
};

/// Class /Script/FortniteUI.FortEventLeaderboardEntryData
/// Size: 0x0078 (0x000028 - 0x0000A0)
class UFortEventLeaderboardEntryData : public UObject
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 160;

public:
};

/// Class /Script/FortniteUI.FortEventLeaderboardTeammateEntry
/// Size: 0x0010 (0x0002E8 - 0x0002F8)
class UFortEventLeaderboardTeammateEntry : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 760;

public:
	CMember(UCommonTextBlock*)                         Text_PlayerName                                             OFFSET(get<T>, {0x2E8, 8, 0, 0})
	CMember(UFortFlagImage*)                           IdentityFlag                                                OFFSET(get<T>, {0x2F0, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortEventLeaderboardTeammateEntry.SetPlayerName
	// void SetPlayerName(FString PlayerName);                                                                                  // [0x9320d38] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortEventLeaderboardTeammateEntry.SetPlayerFlag
	// void SetPlayerFlag(TWeakObjectPtr<UTexture2D*> PlayerFlag);                                                              // [0x9320c34] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortEventLeaderboardTeammateEntry.OnLeaderboardEntrySelected
	// void OnLeaderboardEntrySelected();                                                                                       // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.FortEventLeaderboardTeammateEntry.OnLeaderboardEntryDeselected
	// void OnLeaderboardEntryDeselected();                                                                                     // [0x1d9241c] Event|Public|BlueprintEvent 
};

/// Class /Script/FortniteUI.FortEventLeaderboardEntry
/// Size: 0x0020 (0x0014E0 - 0x001500)
class UFortEventLeaderboardEntry : public UCommonButtonLegacy
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 5376;

public:
	CMember(UFortFlagImage*)                           FlagImage                                                   OFFSET(get<T>, {0x14E8, 8, 0, 0})
	CMember(UDynamicEntryBox*)                         DynamicEntryBox_TeamEntries                                 OFFSET(get<T>, {0x14F0, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortEventLeaderboardEntry.SetPlayerFlag
	// void SetPlayerFlag(TWeakObjectPtr<UTexture2D*> PlayerFlag);                                                              // [0x9320b30] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.FortEventLeaderboardEntry.InitializeTeamTextEntry
	// void InitializeTeamTextEntry(UUserWidget* TeamEntryWidget, FText& Usernames);                                            // [0x1d9241c] Event|Protected|HasOutParms|BlueprintEvent 
	// Function /Script/FortniteUI.FortEventLeaderboardEntry.DisplayTeamUsernames
	// void DisplayTeamUsernames(UFortEventLeaderboardEntryData* LeaderboardEntryData);                                         // [0x931a3bc] Final|Native|Protected|BlueprintCallable 
};

/// Class /Script/FortniteUI.FortEventLeaderboardScreen
/// Size: 0x00C8 (0x000460 - 0x000528)
class UFortEventLeaderboardScreen : public UFortCompetitiveLeaderboardScreen
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1320;

public:
	CMember(ETournamentDisplayType)                    EventDisplayType                                            OFFSET(get<T>, {0x460, 1, 0, 0})
	SMember(FDataTableRowHandle)                       TabViewLeftAction                                           OFFSET(getStruct<T>, {0x468, 16, 0, 0})
	SMember(FDataTableRowHandle)                       TabViewRightAction                                          OFFSET(getStruct<T>, {0x478, 16, 0, 0})
	CMember(UScrollBox*)                               ScrollBox_ViewButtons                                       OFFSET(get<T>, {0x488, 8, 0, 0})
	CMember(UCommonActionWidget*)                      ActionWidget_TabLeft                                        OFFSET(get<T>, {0x490, 8, 0, 0})
	CMember(UCommonActionWidget*)                      ActionWidget_TabRight                                       OFFSET(get<T>, {0x498, 8, 0, 0})
	CMember(UCommonButtonBase*)                        Button_ViewLiveGames                                        OFFSET(get<T>, {0x4A0, 8, 0, 0})
	CMember(UCommonButtonGroupBase*)                   ViewButtonGroup                                             OFFSET(get<T>, {0x4A8, 8, 0, 0})
	CMember(UClass*)                                   TabsClass                                                   OFFSET(get<T>, {0x4B0, 8, 0, 0})
	CMember(TMap<UCommonButtonBase*, FFortLeaderboardRequestIds>) TabButtonsToLeaderboardsIds                      OFFSET(get<T>, {0x4B8, 80, 0, 0})
	DMember(bool)                                      bIsMainLeaderboardNonWindow                                 OFFSET(get<bool>, {0x508, 1, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortEventLeaderboardScreen.OnTabVisibilityChange
	// void OnTabVisibilityChange(bool bIsVisible);                                                                             // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortEventLeaderboardScreen.OnShowLeaderboard
	// void OnShowLeaderboard();                                                                                                // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortEventLeaderboardScreen.OnDetailsPanelUpdate
	// void OnDetailsPanelUpdate(bool bShowDetailsPanel);                                                                       // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortEventLeaderboardScreen.InitializeTabButton
	// void InitializeTabButton(UCommonButtonBase* TabButton, FText& TabText);                                                  // [0x1d9241c] Event|Protected|HasOutParms|BlueprintEvent 
	// Function /Script/FortniteUI.FortEventLeaderboardScreen.HandleViewTabSelectionChanged
	// void HandleViewTabSelectionChanged(UCommonButtonBase* TabButton, int32_t TabIdx);                                        // [0x931dde4] Final|Native|Private 
};

/// Class /Script/FortniteUI.FortEventLevelNavigationActorIndicator
/// Size: 0x0000 (0x0002E8 - 0x0002E8)
class UFortEventLevelNavigationActorIndicator : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 744;

public:
};

/// Class /Script/FortniteUI.AthenaSpatialFrontend
/// Size: 0x0090 (0x000400 - 0x000490)
class UAthenaSpatialFrontend : public UCommonActivatableWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1168;

public:
	CMember(UUserWidget*)                              PersistentScreenWidget                                      OFFSET(get<T>, {0x400, 8, 0, 0})
	SMember(FGameplayTagContainer)                     HidePersistentScreenCameraTags                              OFFSET(getStruct<T>, {0x408, 32, 0, 0})
	DMember(bool)                                      bHideCameraSpatialScreenOnTransistion                       OFFSET(get<bool>, {0x428, 1, 0, 0})
	CMember(EFortBangType)                             BangType                                                    OFFSET(get<T>, {0x429, 1, 0, 0})
	CMember(UCommonLazyWidget*)                        Lazy_ActiveScreen                                           OFFSET(get<T>, {0x430, 8, 0, 0})
	SMember(FGameplayTag)                              StartingActiveCamera                                        OFFSET(getStruct<T>, {0x438, 4, 0, 0})
	SMember(FGameplayTag)                              ChallengesCameraTag                                         OFFSET(getStruct<T>, {0x43C, 4, 0, 0})
	SMember(FDataTableRowHandle)                       SelectObjectInputAction                                     OFFSET(getStruct<T>, {0x440, 16, 0, 0})
	DMember(bool)                                      bEnableSpatialInputPreprocessingByDefault                   OFFSET(get<bool>, {0x454, 1, 0, 0})
	CMember(UFortGameStateComponent_EventLevel*)       EventGameStateComponent                                     OFFSET(get<T>, {0x458, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.AthenaSpatialFrontend.OnSelectedNavObjectChanged
	// void OnSelectedNavObjectChanged();                                                                                       // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaSpatialFrontend.OnEventLevelTransitionComplete
	// void OnEventLevelTransitionComplete(FGameplayTag& ActiveCamera);                                                         // [0x1d9241c] Event|Protected|HasOutParms|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaSpatialFrontend.OnEventLevelTransitionBegin
	// void OnEventLevelTransitionBegin(FGameplayTag& TargetCamera, AFortEventLevelNavigationActor* TargetNavActor);            // [0x1d9241c] Event|Protected|HasOutParms|BlueprintEvent 
};

/// Class /Script/FortniteUI.FortEventLevelScreen
/// Size: 0x0020 (0x000490 - 0x0004B0)
class UFortEventLevelScreen : public UAthenaSpatialFrontend
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1200;

public:
	CMember(UFortEventLevelData*)                      EventLevelScreenData                                        OFFSET(get<T>, {0x490, 8, 0, 0})
	CMember(UFortActivatableVideoPanel*)               CinematicMovieWidgetInstance                                OFFSET(get<T>, {0x498, 8, 0, 0})
	SMember(FTimerHandle)                              StreamedVideoOpeningTimer                                   OFFSET(getStruct<T>, {0x4A0, 8, 0, 0})
	DMember(bool)                                      bCollapseTopbar                                             OFFSET(get<bool>, {0x4A8, 1, 0, 0})
	DMember(bool)                                      bCollapseBottombar                                          OFFSET(get<bool>, {0x4A9, 1, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortEventLevelScreen.StreamedVideoOpeningTimedOut
	// void StreamedVideoOpeningTimedOut();                                                                                     // [0x93233a8] Final|Native|Private 
	// Function /Script/FortniteUI.FortEventLevelScreen.StreamedVideoOnUrlSuccess
	// void StreamedVideoOnUrlSuccess(FString OpenedUrl);                                                                       // [0x9322cfc] Final|Native|Private 
	// Function /Script/FortniteUI.FortEventLevelScreen.StreamedVideoOnUrlFailure
	// void StreamedVideoOnUrlFailure(FString OpenedUrl);                                                                       // [0x9322650] Final|Native|Private 
	// Function /Script/FortniteUI.FortEventLevelScreen.StreamedVideoOnSkipButtonClicked
	// void StreamedVideoOnSkipButtonClicked();                                                                                 // [0x932263c] Final|Native|Private 
	// Function /Script/FortniteUI.FortEventLevelScreen.StreamedVideoOnSkipBeforeVideoURLReceived
	// void StreamedVideoOnSkipBeforeVideoURLReceived();                                                                        // [0x9322628] Final|Native|Private 
	// Function /Script/FortniteUI.FortEventLevelScreen.StreamedVideoOnOpenFailure
	// void StreamedVideoOnOpenFailure(FString OpenedUrl);                                                                      // [0x9321f74] Final|Native|Private 
	// Function /Script/FortniteUI.FortEventLevelScreen.StreamedVideoOnMediaPlayerEndReached
	// void StreamedVideoOnMediaPlayerEndReached();                                                                             // [0x9321f60] Final|Native|Private 
	// Function /Script/FortniteUI.FortEventLevelScreen.StreamedVideoOnMediaOpened
	// void StreamedVideoOnMediaOpened(FString OpenedUrl);                                                                      // [0x93218ac] Final|Native|Private 
	// Function /Script/FortniteUI.FortEventLevelScreen.OnEventCinematicVideoFinished
	// void OnEventCinematicVideoFinished();                                                                                    // [0x77e3f28] Native|Protected     
};

/// Class /Script/FortniteUI.ChallengeScreenCategoryTab
/// Size: 0x0020 (0x0014E0 - 0x001500)
class UChallengeScreenCategoryTab : public UCommonButtonLegacy
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 5376;

public:
	CMember(UCommonTextBlock*)                         Text_TabName                                                OFFSET(get<T>, {0x14E0, 8, 0, 0})
};

/// Class /Script/FortniteUI.FortPersistentLeaderboardScreen
/// Size: 0x0088 (0x000460 - 0x0004E8)
class UFortPersistentLeaderboardScreen : public UFortCompetitiveLeaderboardScreen
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1256;

public:
	DMember(bool)                                      bAllowMeTab                                                 OFFSET(get<bool>, {0x460, 1, 0, 0})
	SMember(FDataTableRowHandle)                       ColorSchemeRowHandle                                        OFFSET(getStruct<T>, {0x468, 16, 0, 0})
	SMember(FDataTableRowHandle)                       TabViewLeftAction                                           OFFSET(getStruct<T>, {0x478, 16, 0, 0})
	SMember(FDataTableRowHandle)                       TabViewRightAction                                          OFFSET(getStruct<T>, {0x488, 16, 0, 0})
	CMember(UCommonButtonLegacy*)                      Button_Close                                                OFFSET(get<T>, {0x498, 8, 0, 0})
	CMember(UCommonButtonLegacy*)                      Button_Back                                                 OFFSET(get<T>, {0x4A0, 8, 0, 0})
	CMember(UDynamicEntryBox*)                         EntryBox_ViewButtons                                        OFFSET(get<T>, {0x4A8, 8, 0, 0})
	CMember(UCommonActionWidget*)                      ActionWidget_TabLeft                                        OFFSET(get<T>, {0x4B0, 8, 0, 0})
	CMember(UCommonActionWidget*)                      ActionWidget_TabRight                                       OFFSET(get<T>, {0x4B8, 8, 0, 0})
	CMember(UCommonActivatableWidgetSwitcher*)         Switcher_ViewTabs                                           OFFSET(get<T>, {0x4C0, 8, 0, 0})
	CMember(UFortArenaPersonalViewTab*)                ActivatableContent_MeViewTab                                OFFSET(get<T>, {0x4C8, 8, 0, 0})
	CMember(UCommonButtonLegacy*)                      GlobalTabButton                                             OFFSET(get<T>, {0x4D0, 8, 0, 0})
	CMember(UCommonButtonLegacy*)                      MeTabButton                                                 OFFSET(get<T>, {0x4D8, 8, 0, 0})
	CMember(UCommonButtonGroupLegacy*)                 ViewButtonGroup                                             OFFSET(get<T>, {0x4E0, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortPersistentLeaderboardScreen.SetupForEvent
	// void SetupForEvent(FString EventId, FString EventWindowId);                                                              // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortPersistentLeaderboardScreen.OnLeaderboardTabsLoaded
	// void OnLeaderboardTabsLoaded(bool bNoLeaderboardTabs);                                                                   // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortPersistentLeaderboardScreen.OnColorize
	// void OnColorize(FFortTournamentDisplayInfo ColorInfo);                                                                   // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortPersistentLeaderboardScreen.HandleViewTabSelectionChanged
	// void HandleViewTabSelectionChanged(UCommonButtonLegacy* TabButton, int32_t TabIdx);                                      // [0x931dea8] Final|Native|Private 
};

/// Class /Script/FortniteUI.FortPlayerBanned
/// Size: 0x0000 (0x000570 - 0x000570)
class UFortPlayerBanned : public UFortActivatablePanel
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1392;

public:
};

/// Class /Script/FortniteUI.FortSocialBanModal
/// Size: 0x0010 (0x000538 - 0x000548)
class UFortSocialBanModal : public UCommonActivatablePanelLegacy
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1352;

public:
	CMember(UCommonButtonLegacy*)                      Button_CloseModal                                           OFFSET(get<T>, {0x538, 8, 0, 0})
	CMember(UCommonRichTextBlock*)                     RichText_TimeRemaining                                      OFFSET(get<T>, {0x540, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortSocialBanModal.OnDisplayModeSet
	// void OnDisplayModeSet(bool bIsBanned);                                                                                   // [0x1d9241c] Event|Protected|BlueprintEvent 
};

/// Class /Script/FortniteUI.FortReportActioned
/// Size: 0x0000 (0x000570 - 0x000570)
class UFortReportActioned : public UFortActivatablePanel
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1392;

public:
};

/// Class /Script/FortniteUI.FireModeCustomOptionButton
/// Size: 0x0010 (0x001490 - 0x0014A0)
class UFireModeCustomOptionButton : public UCommonButtonBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 5280;

public:
	CMember(UCommonTextBlock*)                         Text_CustomOptionName                                       OFFSET(get<T>, {0x1490, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FireModeCustomOptionButton.SetCustomOptionName
	// void SetCustomOptionName(FText NewName);                                                                                 // [0x931ec28] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/FortniteUI.FireModeSelectionReminderModal
/// Size: 0x0030 (0x000400 - 0x000430)
class UFireModeSelectionReminderModal : public UCommonActivatableWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1072;

public:
	CMember(UCommonButtonBase*)                        Button_Confirm                                              OFFSET(get<T>, {0x418, 8, 0, 0})
	CMember(UCommonButtonBase*)                        Button_Cancel                                               OFFSET(get<T>, {0x420, 8, 0, 0})
	CMember(UCommonButtonBase*)                        Button_TouchClose                                           OFFSET(get<T>, {0x428, 8, 0, 0})
};

/// Class /Script/FortniteUI.FireModeSelectionScreen
/// Size: 0x0030 (0x000400 - 0x000430)
class UFireModeSelectionScreen : public UCommonActivatableWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1072;

public:
	CMember(UCommonButtonGroupBase*)                   ButtonGroup_FireModeTiles                                   OFFSET(get<T>, {0x408, 8, 0, 0})
	CMember(UPanelWidget*)                             FireModeTileRow                                             OFFSET(get<T>, {0x410, 8, 0, 0})
	CMember(UCommonButtonBase*)                        Button_Confirm                                              OFFSET(get<T>, {0x418, 8, 0, 0})
	CMember(UPanelWidget*)                             MobileCloseButtonContainer                                  OFFSET(get<T>, {0x420, 8, 0, 0})
	CMember(UCommonButtonBase*)                        Button_TouchClose                                           OFFSET(get<T>, {0x428, 8, 0, 0})
};

/// Class /Script/FortniteUI.FireModeTile
/// Size: 0x0110 (0x001490 - 0x0015A0)
class UFireModeTile : public UCommonButtonBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 5536;

public:
	CMember(TMap<EFireModeType, FText>)                FireModeNames                                               OFFSET(get<T>, {0x1490, 80, 0, 0})
	SMember(FText)                                     FireModeDescription                                         OFFSET(getStruct<T>, {0x14E0, 24, 0, 0})
	SMember(FText)                                     RecommendedTag                                              OFFSET(getStruct<T>, {0x14F8, 24, 0, 0})
	SMember(FText)                                     CustomOptionsTabName                                        OFFSET(getStruct<T>, {0x1510, 24, 0, 0})
	CMember(EFireModeType)                             PresetFireModeType                                          OFFSET(get<T>, {0x1528, 1, 0, 0})
	CMember(EFireModeType)                             CustomOption1                                               OFFSET(get<T>, {0x1529, 1, 0, 0})
	CMember(EFireModeType)                             CustomOption2                                               OFFSET(get<T>, {0x152A, 1, 0, 0})
	SMember(FString)                                   VideoUID                                                    OFFSET(getStruct<T>, {0x1530, 16, 0, 0})
	CMember(UMediaTexture*)                            VideoTexture                                                OFFSET(get<T>, {0x1540, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_RecommendedTag                                         OFFSET(get<T>, {0x1548, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_Title                                                  OFFSET(get<T>, {0x1550, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_Description                                            OFFSET(get<T>, {0x1558, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_CustomOptionsTabName                                   OFFSET(get<T>, {0x1560, 8, 0, 0})
	CMember(UButton*)                                  Button_ToggleCustomOptions                                  OFFSET(get<T>, {0x1568, 8, 0, 0})
	CMember(UFireModeCustomOptionButton*)              Button_CustomOption1                                        OFFSET(get<T>, {0x1570, 8, 0, 0})
	CMember(UFireModeCustomOptionButton*)              Button_CustomOption2                                        OFFSET(get<T>, {0x1578, 8, 0, 0})
	CMember(UFortFireModeStreamingVideo*)              VideoPlayer                                                 OFFSET(get<T>, {0x1580, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FireModeTile.UpdateDisplayedText
	// void UpdateDisplayedText();                                                                                              // [0x93235b8] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FireModeTile.SetIsCustomOptionsPanelOpen
	// void SetIsCustomOptionsPanelOpen(bool bIsOpen);                                                                          // [0x931fa54] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FireModeTile.OnMoviePlaybackChanged
	// void OnMoviePlaybackChanged(bool bIsPlaying);                                                                            // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FireModeTile.OnCustomOptionsPanelToggled
	// void OnCustomOptionsPanelToggled(bool bIsOpen);                                                                          // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FireModeTile.HandleVideoPlayerPlaybackResumed
	// void HandleVideoPlayerPlaybackResumed();                                                                                 // [0x931ddd0] Final|Native|Private 
	// Function /Script/FortniteUI.FireModeTile.HandleToggleCustomOptionsClicked
	// void HandleToggleCustomOptionsClicked();                                                                                 // [0x931ddbc] Final|Native|Private 
};

/// Class /Script/FortniteUI.FortAbilitiesPageTileBase
/// Size: 0x0030 (0x0014E0 - 0x001510)
class UFortAbilitiesPageTileBase : public UCommonButtonLegacy
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 5392;

public:
	CMember(UCommonWidgetSwitcherLegacy*)              SwitcherAbilityBindingSwitcher                              OFFSET(get<T>, {0x14E0, 8, 0, 0})
	CMember(UFortKeybindWidget*)                       KeybindAbilityKeybind                                       OFFSET(get<T>, {0x14E8, 8, 0, 0})
	CMember(UFortKeybindWidget*)                       KeybindAbilityKeybindCombo1                                 OFFSET(get<T>, {0x14F0, 8, 0, 0})
	CMember(UFortKeybindWidget*)                       KeybindAbilityKeybindCombo2                                 OFFSET(get<T>, {0x14F8, 8, 0, 0})
	DMember(int32_t)                                   QuickBarSlot                                                OFFSET(get<int32_t>, {0x1500, 4, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortAbilitiesPageTileBase.UpdateGamepadKeyBindingText
	// void UpdateGamepadKeyBindingText();                                                                                      // [0x9323650] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/FortniteUI.FortAccountLinkingWindow
/// Size: 0x00C8 (0x000570 - 0x000638)
class UFortAccountLinkingWindow : public UFortActivatablePanel
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1592;

public:
	CMember(UCommonWidgetSwitcherLegacy*)              Switcher_Main                                               OFFSET(get<T>, {0x5E0, 8, 0, 0})
	CMember(UBackgroundBlur*)                          HaveEpicAccountBlur                                         OFFSET(get<T>, {0x5E8, 8, 0, 0})
	CMember(UBackgroundBlur*)                          SkipSignInBlur                                              OFFSET(get<T>, {0x5F0, 8, 0, 0})
	CMember(UCommonWidgetSwitcherLegacy*)              Switcher_NoThanks                                           OFFSET(get<T>, {0x5F8, 8, 0, 0})
	CMember(UCircularThrobber*)                        Throbber_LoginDelay                                         OFFSET(get<T>, {0x600, 8, 0, 0})
	CMember(UCommonButtonLegacy*)                      Button_Signup                                               OFFSET(get<T>, {0x608, 8, 0, 0})
	CMember(UCommonButtonLegacy*)                      Button_Login                                                OFFSET(get<T>, {0x610, 8, 0, 0})
	CMember(UCommonButtonLegacy*)                      Button_NoThanks                                             OFFSET(get<T>, {0x618, 8, 0, 0})
	CMember(UCommonButtonLegacy*)                      Button_SkipSignInSignup                                     OFFSET(get<T>, {0x620, 8, 0, 0})
	CMember(UCommonButtonLegacy*)                      Button_SkipSignInLogin                                      OFFSET(get<T>, {0x628, 8, 0, 0})
	CMember(UCommonButtonLegacy*)                      Button_SkipSignInNoThanks                                   OFFSET(get<T>, {0x630, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortAccountLinkingWindow.HandleSkipSignUpClicked
	// void HandleSkipSignUpClicked();                                                                                          // [0x931dd58] Final|Native|Protected 
	// Function /Script/FortniteUI.FortAccountLinkingWindow.HandleSkipNoThanksClicked
	// void HandleSkipNoThanksClicked();                                                                                        // [0x931dd80] Final|Native|Protected 
	// Function /Script/FortniteUI.FortAccountLinkingWindow.HandleSkipLoginClicked
	// void HandleSkipLoginClicked();                                                                                           // [0x931d634] Final|Native|Protected 
	// Function /Script/FortniteUI.FortAccountLinkingWindow.HandleSignupClicked
	// void HandleSignupClicked();                                                                                              // [0x931dd58] Final|Native|Protected 
	// Function /Script/FortniteUI.FortAccountLinkingWindow.HandleNoThanksClicked
	// void HandleNoThanksClicked();                                                                                            // [0x931dd30] Final|Native|Protected 
	// Function /Script/FortniteUI.FortAccountLinkingWindow.HandleLoginClicked
	// void HandleLoginClicked();                                                                                               // [0x931d634] Final|Native|Protected 
	// Function /Script/FortniteUI.FortAccountLinkingWindow.FortNewPlatformReceipt__DelegateSignature
	// void FortNewPlatformReceipt__DelegateSignature();                                                                        // [0x1d9241c] MulticastDelegate|Public|Delegate 
};

/// Class /Script/FortniteUI.FortAccountPinLinkingWindow
/// Size: 0x0100 (0x000570 - 0x000670)
class UFortAccountPinLinkingWindow : public UFortActivatablePanel
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1648;

public:
	CMember(UCommonWidgetSwitcherLegacy*)              Switcher_Main                                               OFFSET(get<T>, {0x600, 8, 0, 0})
	CMember(UBackgroundBlur*)                          Blur_PinGrantCodeInfo                                       OFFSET(get<T>, {0x608, 8, 0, 0})
	CMember(UBackgroundBlur*)                          Blur_InitialRequest                                         OFFSET(get<T>, {0x610, 8, 0, 0})
	CMember(UBackgroundBlur*)                          Blur_SkipSignIn                                             OFFSET(get<T>, {0x618, 8, 0, 0})
	CMember(UCommonWidgetSwitcherLegacy*)              Switcher_NoThanks                                           OFFSET(get<T>, {0x620, 8, 0, 0})
	CMember(UCircularThrobber*)                        Throbber_LoginDelay                                         OFFSET(get<T>, {0x628, 8, 0, 0})
	CMember(UCommonButtonLegacy*)                      Button_CreateEpicAccount                                    OFFSET(get<T>, {0x630, 8, 0, 0})
	CMember(UCommonButtonLegacy*)                      Button_GoLinking                                            OFFSET(get<T>, {0x638, 8, 0, 0})
	CMember(UCommonButtonLegacy*)                      Button_SkipLinking                                          OFFSET(get<T>, {0x640, 8, 0, 0})
	CMember(UCommonButtonLegacy*)                      Button_CancelPinRequest                                     OFFSET(get<T>, {0x648, 8, 0, 0})
	CMember(UCommonButtonLegacy*)                      Button_SkipGoBackLinking                                    OFFSET(get<T>, {0x650, 8, 0, 0})
	CMember(UCommonButtonLegacy*)                      Button_SkipSignInNoThanks                                   OFFSET(get<T>, {0x658, 8, 0, 0})
	CMember(UHorizontalBox*)                           Container_CreateEpicAccount                                 OFFSET(get<T>, {0x660, 8, 0, 0})
	CMember(UFortPinGrantCodeInfoWidget*)              PinGrantCodeInfoWidget                                      OFFSET(get<T>, {0x668, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortAccountPinLinkingWindow.UpdateExpiringTime
	// void UpdateExpiringTime(int32_t RemainingTime);                                                                          // [0x93235cc] Final|Native|Public  
	// Function /Script/FortniteUI.FortAccountPinLinkingWindow.ShowPinLoading
	// void ShowPinLoading();                                                                                                   // [0x9321738] Final|Native|Public  
	// Function /Script/FortniteUI.FortAccountPinLinkingWindow.ShowCurrentPinInfo
	// void ShowCurrentPinInfo();                                                                                               // [0x9321724] Final|Native|Public  
	// Function /Script/FortniteUI.FortAccountPinLinkingWindow.SetPinGrantInfo
	// void SetPinGrantInfo(FString PinCode, FString ActivationURL, FText& InfoText);                                           // [0x931fe10] Final|Native|Public|HasOutParms 
	// Function /Script/FortniteUI.FortAccountPinLinkingWindow.SetInitialSection
	// void SetInitialSection();                                                                                                // [0x931fa40] Final|Native|Public  
	// Function /Script/FortniteUI.FortAccountPinLinkingWindow.PinCodeIssue
	// void PinCodeIssue(FText& ErrorMessage, FText& InfoText);                                                                 // [0x931e690] Final|Native|Public|HasOutParms 
	// Function /Script/FortniteUI.FortAccountPinLinkingWindow.HandleSkipNoThanksClicked
	// void HandleSkipNoThanksClicked();                                                                                        // [0x931dd94] Final|Native|Protected 
	// Function /Script/FortniteUI.FortAccountPinLinkingWindow.HandleSkipLinkingClicked
	// void HandleSkipLinkingClicked();                                                                                         // [0x931dd6c] Final|Native|Protected 
	// Function /Script/FortniteUI.FortAccountPinLinkingWindow.HandleLinkAccountClicked
	// void HandleLinkAccountClicked();                                                                                         // [0x931d620] Final|Native|Protected 
	// Function /Script/FortniteUI.FortAccountPinLinkingWindow.HandleGoBackToInitialRequest
	// void HandleGoBackToInitialRequest();                                                                                     // [0x931d5d4] Final|Native|Protected 
	// Function /Script/FortniteUI.FortAccountPinLinkingWindow.HandleGenerateCodeClicked
	// void HandleGenerateCodeClicked();                                                                                        // [0x931d5c0] Final|Native|Protected 
	// Function /Script/FortniteUI.FortAccountPinLinkingWindow.HandleCreateAccountClicked
	// void HandleCreateAccountClicked();                                                                                       // [0x931d5ac] Final|Native|Protected 
	// Function /Script/FortniteUI.FortAccountPinLinkingWindow.HandleCancelPinRequestClicked
	// void HandleCancelPinRequestClicked();                                                                                    // [0x931d598] Final|Native|Protected 
	// Function /Script/FortniteUI.FortAccountPinLinkingWindow.FortNewPlatformReceipt__DelegateSignature
	// void FortNewPlatformReceipt__DelegateSignature();                                                                        // [0x1d9241c] MulticastDelegate|Public|Delegate 
	// Function /Script/FortniteUI.FortAccountPinLinkingWindow.CreateHeadlessAccount
	// void CreateHeadlessAccount();                                                                                            // [0x931a378] Final|Native|Public  
};

/// Class /Script/FortniteUI.FortActorCanvas
/// Size: 0x0058 (0x000190 - 0x0001E8)
class UFortActorCanvas : public UPanelWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 488;

public:
	SMember(FGameplayTagContainer)                     DefaultHUDElementTags                                       OFFSET(getStruct<T>, {0x190, 32, 0, 0})
	DMember(bool)                                      bDrawElementsInOrder                                        OFFSET(get<bool>, {0x1B0, 1, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortActorCanvas.OnHUDElementVisibilityChanged
	// void OnHUDElementVisibilityChanged(FGameplayTagContainer& HiddenHUDElementTags);                                         // [0x2e92dc0] Final|Native|Protected|HasOutParms 
	// Function /Script/FortniteUI.FortActorCanvas.AddActorIndicator
	// UFortActorCanvasSlot* AddActorIndicator(UFortActorIndicatorWidget* Indicator);                                           // [0x2fb8fe4] Final|RequiredAPI|Native|Public|BlueprintCallable 
};

/// Class /Script/FortniteUI.FortActorCanvasSlot
/// Size: 0x0018 (0x000038 - 0x000050)
class UFortActorCanvasSlot : public UPanelSlot
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 80;

public:
	CMember(TEnumAsByte<EHorizontalAlignment>)         HorizontalAlignment                                         OFFSET(get<T>, {0x38, 1, 0, 0})
	CMember(TEnumAsByte<EVerticalAlignment>)           VerticalAlignment                                           OFFSET(get<T>, {0x39, 1, 0, 0})
	DMember(bool)                                      bCanAutoRemove                                              OFFSET(get<bool>, {0x3A, 1, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortActorCanvasSlot.SetVerticalAlignment
	// void SetVerticalAlignment(TEnumAsByte<EVerticalAlignment> InVerticalAlignment);                                          // [0x32fdc04] Final|RequiredAPI|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortActorCanvasSlot.SetHorizontalAlignment
	// void SetHorizontalAlignment(TEnumAsByte<EHorizontalAlignment> InHorizontalAlignment);                                    // [0x31b4a8c] Final|RequiredAPI|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortActorCanvasSlot.SetCanAutoRemove
	// void SetCanAutoRemove(bool bAllowAutoRemove);                                                                            // [0x2fb9074] Final|RequiredAPI|Native|Public|BlueprintCallable 
};

/// Class /Script/FortniteUI.FortAffiliateEntry
/// Size: 0x0020 (0x0014E0 - 0x001500)
class UFortAffiliateEntry : public UCommonButtonLegacy
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 5376;

public:
	CMember(UCommonTextBlock*)                         OptionDisplayName                                           OFFSET(get<T>, {0x14F8, 8, 0, 0})
};

/// Class /Script/FortniteUI.FortAffiliateEntryData
/// Size: 0x0010 (0x000028 - 0x000038)
class UFortAffiliateEntryData : public UObject
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 56;

public:
	SMember(FString)                                   AffiliateName                                               OFFSET(getStruct<T>, {0x28, 16, 0, 0})
};

/// Class /Script/FortniteUI.FortAffilateModal
/// Size: 0x0028 (0x000570 - 0x000598)
class UFortAffilateModal : public UFortActivatablePanel
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1432;

public:
	SMember(FString)                                   SourceName                                                  OFFSET(getStruct<T>, {0x570, 16, 0, 0})
	CMember(UCommonButtonBase*)                        AcceptButton                                                OFFSET(get<T>, {0x580, 8, 0, 0})
	CMember(UEditableText*)                            AffiliateKey                                                OFFSET(get<T>, {0x588, 8, 0, 0})
	CMember(UListView*)                                AffiliateSuggestionList                                     OFFSET(get<T>, {0x590, 8, 0, 0})
};

/// Class /Script/FortniteUI.FortAnnouncementWidget
/// Size: 0x0008 (0x0002E8 - 0x0002F0)
class UFortAnnouncementWidget : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 752;

public:
	CMember(AFortClientAnnouncement*)                  BoundAnnouncement                                           OFFSET(get<T>, {0x2E8, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortAnnouncementWidget.UpdateWidgetData
	// void UpdateWidgetData(AFortClientAnnouncement* Announcement);                                                            // [0x1d9241c] BlueprintCosmetic|Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.FortAnnouncementWidget.GetTextForAction
	// FText GetTextForAction(FName& ActionName);                                                                               // [0x931ccf0] Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortAnnouncementWidget.FindFirstUnboundAction
	// FName FindFirstUnboundAction(FText AnnouncementBody);                                                                    // [0x931a5e8] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortAnnouncementWidget.BindUpdateEvents
	// void BindUpdateEvents(AFortClientAnnouncement* Announcement);                                                            // [0x931a254] Final|BlueprintCosmetic|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortAnnouncementWidget.AnnouncementStopped
	// void AnnouncementStopped(AFortClientAnnouncement* Announcement);                                                         // [0x1d9241c] BlueprintCosmetic|Event|Public|BlueprintEvent 
};

/// Class /Script/FortniteUI.FortMatchmakingWidgetBase
/// Size: 0x0000 (0x000328 - 0x000328)
class UFortMatchmakingWidgetBase : public UFortHUDElementWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 808;

public:
};

/// Class /Script/FortniteUI.FortAthenaCreativeMatchmakingWidget
/// Size: 0x0020 (0x000328 - 0x000348)
class UFortAthenaCreativeMatchmakingWidget : public UFortMatchmakingWidgetBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 840;

public:
	DMember(bool)                                      bIsCreativeHUD                                              OFFSET(get<bool>, {0x340, 1, 1, 0})


	/// Functions
	// Function /Script/FortniteUI.FortAthenaCreativeMatchmakingWidget.TogglePlayerReadyState
	// void TogglePlayerReadyState();                                                                                           // [0x932343c] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.FortAthenaCreativeMatchmakingWidget.SetupOwningPlayerForReadyCheckInput
	// void SetupOwningPlayerForReadyCheckInput();                                                                              // [0x93216b8] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortAthenaCreativeMatchmakingWidget.SetOwningPlayerReadyState
	// void SetOwningPlayerReadyState(bool bInReadyState);                                                                      // [0x931fd50] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.FortAthenaCreativeMatchmakingWidget.OnUpdatedSquadReadyInformationBP
	// void OnUpdatedSquadReadyInformationBP(int32_t SquadMembers, int32_t ReadySquadMembers, bool AmIReady);                   // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortAthenaCreativeMatchmakingWidget.OnPlaySimpleIntroOutroWithDelay
	// void OnPlaySimpleIntroOutroWithDelay(float InDelay);                                                                     // [0x1d9241c] RequiredAPI|Event|Public|BlueprintCallable|BlueprintEvent 
	// Function /Script/FortniteUI.FortAthenaCreativeMatchmakingWidget.NativeOnHideWidget
	// void NativeOnHideWidget();                                                                                               // [0x931e5fc] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.FortAthenaCreativeMatchmakingWidget.InGameMathcmakingUpdateCheckFailed
	// void InGameMathcmakingUpdateCheckFailed(EUpdateCompletionStatus Status);                                                 // [0x931e0c8] Final|Native|Private 
	// Function /Script/FortniteUI.FortAthenaCreativeMatchmakingWidget.HasAnyPlayerOptedOutOfCrossPlatformPlay
	// bool HasAnyPlayerOptedOutOfCrossPlatformPlay();                                                                          // [0x931e038] Final|Native|Protected|BlueprintCallable|BlueprintPure 
	// Function /Script/FortniteUI.FortAthenaCreativeMatchmakingWidget.HandlePartyLeaderReadinessChangedBP
	// void HandlePartyLeaderReadinessChangedBP(EGameReadiness GameReadiness, int32_t SquadMemberIndex);                        // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortAthenaCreativeMatchmakingWidget.HandleMatchmakingPartyReadyBP
	// void HandleMatchmakingPartyReadyBP();                                                                                    // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortAthenaCreativeMatchmakingWidget.HandleInGameReadinessChangedBP
	// void HandleInGameReadinessChangedBP(EGameReadiness GameReadiness, int32_t SquadMemberIndex);                             // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortAthenaCreativeMatchmakingWidget.GetIsDestPlaylistCreativeRoyale
	// bool GetIsDestPlaylistCreativeRoyale();                                                                                  // [0x931b8e0] Final|Native|Protected|BlueprintCallable|BlueprintPure 
	// Function /Script/FortniteUI.FortAthenaCreativeMatchmakingWidget.DisableOwningPlayerForReadyCheckInput
	// void DisableOwningPlayerForReadyCheckInput();                                                                            // [0x931a3a8] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/FortniteUI.FortAthenaMatchmakingTile
/// Size: 0x0110 (0x0014E0 - 0x0015F0)
class UFortAthenaMatchmakingTile : public UCommonButtonLegacy
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 5616;

public:
	CMember(UEpicCMSImage*)                            GameModeImage                                               OFFSET(get<T>, {0x14E0, 8, 0, 0})
	CMember(UCommonBorder*)                            AdSpace                                                     OFFSET(get<T>, {0x14E8, 8, 0, 0})
	CMember(UCommonTextBlock*)                         AdText                                                      OFFSET(get<T>, {0x14F0, 8, 0, 0})
	CMember(UCommonTextBlock*)                         SpecialAdText                                               OFFSET(get<T>, {0x14F8, 8, 0, 0})
	CMember(UCommonTextBlock*)                         GameModeName                                                OFFSET(get<T>, {0x1500, 8, 0, 0})
	CMember(UCommonTextBlock*)                         SubGameModeName                                             OFFSET(get<T>, {0x1508, 8, 0, 0})
	DMember(int32_t)                                   BorderDisplayStyle                                          OFFSET(get<int32_t>, {0x1510, 4, 0, 0})
	SMember(FAthenaPlaylistEntry)                      CMSPlaylistEntry                                            OFFSET(getStruct<T>, {0x1518, 120, 0, 0})
	CMember(UFortActiveFriendsViolator*)               Violator_ActiveFriends                                      OFFSET(get<T>, {0x1590, 8, 0, 0})
	SMember(FPlaylistFrontEndData)                     TilePlaylistData                                            OFFSET(getStruct<T>, {0x1598, 80, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortAthenaMatchmakingTile.UpdateTileAvailability
	// void UpdateTileAvailability(bool Available);                                                                             // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.FortAthenaMatchmakingTile.TilePlaylistSetAsMatchmakingPlaylist
	// void TilePlaylistSetAsMatchmakingPlaylist();                                                                             // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.FortAthenaMatchmakingTile.SetTileSize
	// void SetTileSize(int32_t NumRowTiles);                                                                                   // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.FortAthenaMatchmakingTile.SetDefaultImage
	// void SetDefaultImage();                                                                                                  // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.FortAthenaMatchmakingTile.PopulateTextFieldsFromCMS
	// void PopulateTextFieldsFromCMS();                                                                                        // [0x931e81c] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortAthenaMatchmakingTile.PlaylistChanged
	// void PlaylistChanged(FPlaylistFrontEndData& PlaylistToRepresent);                                                        // [0x1d9241c] Event|Public|HasOutParms|BlueprintEvent 
	// Function /Script/FortniteUI.FortAthenaMatchmakingTile.OnCMSDataUpdated
	// void OnCMSDataUpdated();                                                                                                 // [0x1d9241c] Event|Public|BlueprintEvent 
};

/// Class /Script/FortniteUI.FortAthenaMatchmakingWidgetLegacy
/// Size: 0x0268 (0x000328 - 0x000590)
class UFortAthenaMatchmakingWidgetLegacy : public UFortMatchmakingWidgetBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1424;

public:
	CMember(TWeakObjectPtr<UClass*>)                   HabaneroAnimatedMessageClass                                OFFSET(get<T>, {0x328, 32, 0, 0})
	CMember(UFortGameActivity*)                        CachedGameActivity                                          OFFSET(get<T>, {0x3D8, 8, 0, 0})
	SMember(FText)                                     RegionLockTitle                                             OFFSET(getStruct<T>, {0x450, 24, 0, 0})
	CMember(TWeakObjectPtr<UClass*>)                   CampaignReadyScreenClass                                    OFFSET(get<T>, {0x468, 32, 0, 0})
	DMember(bool)                                      bPlaylistHasSquadFillOption                                 OFFSET(get<bool>, {0x488, 1, 0, 0})
	DMember(bool)                                      bPlaylistCanFillWithParty                                   OFFSET(get<bool>, {0x489, 1, 0, 0})
	DMember(bool)                                      bHasPlaylistPrivateMatchOption                              OFFSET(get<bool>, {0x48A, 1, 0, 0})
	CMember(UFortHabaneroDisplayData*)                 HabaneroDisplayData                                         OFFSET(get<T>, {0x518, 8, 0, 0})
	CMember(UClass*)                                   UEKittWidgetSubclass                                        OFFSET(get<T>, {0x520, 8, 0, 0})
	CMember(UFortUEKittWidget*)                        UEKittWidget                                                OFFSET(get<T>, {0x528, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_FillStatus                                             OFFSET(get<T>, {0x530, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_PrivateMatch                                           OFFSET(get<T>, {0x538, 8, 0, 0})
	CMember(UFortCTAButton*)                           Button_SquadFill                                            OFFSET(get<T>, {0x540, 8, 0, 0})
	CMember(UFortCTAButton*)                           Button_PrivateMatch                                         OFFSET(get<T>, {0x548, 8, 0, 0})
	CMember(UFortShowdownDetailView*)                  ShowdownViolator                                            OFFSET(get<T>, {0x550, 8, 0, 0})
	CMember(UAthenaMatchmakingViolator*)               BasicViolator                                               OFFSET(get<T>, {0x558, 8, 0, 0})
	DMember(int8_t)                                    MaxMatchmakingReminderTooltips                              OFFSET(get<int8_t>, {0x560, 1, 0, 0})
	SMember(FText)                                     FixedRankedSeasonText                                       OFFSET(getStruct<T>, {0x568, 24, 0, 0})
	CMember(UFortMatchmakingSuggestionWidget*)         SuggestionWidget                                            OFFSET(get<T>, {0x580, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortAthenaMatchmakingWidgetLegacy.ShouldShowMatchmakingDetails
	// void ShouldShowMatchmakingDetails(bool bShow);                                                                           // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortAthenaMatchmakingWidgetLegacy.SetShowingPartyHabaneroNotification
	// void SetShowingPartyHabaneroNotification(bool bShowNotification);                                                        // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortAthenaMatchmakingWidgetLegacy.SetShowingDiscoveryEntryFlowToolTip
	// void SetShowingDiscoveryEntryFlowToolTip(bool bShowTooltip);                                                             // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortAthenaMatchmakingWidgetLegacy.RequestPlay
	// void RequestPlay();                                                                                                      // [0x931e8cc] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.FortAthenaMatchmakingWidgetLegacy.PlaylistChanged
	// void PlaylistChanged(FPlaylistFrontEndData& NewPlaylist, FText& PlaylistCMSOverrideName, EFortLobbyType LobbyType);      // [0x1d9241c] Event|Protected|HasOutParms|BlueprintEvent 
	// Function /Script/FortniteUI.FortAthenaMatchmakingWidgetLegacy.PlaylistActivityChanged
	// void PlaylistActivityChanged(FPlaylistFrontEndData& NewPlaylist, FText& ActivityName, EFortLobbyType LobbyType);         // [0x1d9241c] Event|Protected|HasOutParms|BlueprintEvent 
	// Function /Script/FortniteUI.FortAthenaMatchmakingWidgetLegacy.OnViolatorStyleRefreshed
	// void OnViolatorStyleRefreshed(EFortMatchmakingViolatorStyle NewViolatorStyle);                                           // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortAthenaMatchmakingWidgetLegacy.OnStartMatchClicked
	// void OnStartMatchClicked();                                                                                              // [0x931e67c] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.FortAthenaMatchmakingWidgetLegacy.OnSquadFillButtonEnabledStateUpdated
	// void OnSquadFillButtonEnabledStateUpdated(bool bIsLocalPlayerPartyLeader, bool bIsMatchmaking);                          // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortAthenaMatchmakingWidgetLegacy.OnSocialUserSittingOut
	// void OnSocialUserSittingOut();                                                                                           // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortAthenaMatchmakingWidgetLegacy.OnShowChildActivityFirstTimeNotification
	// void OnShowChildActivityFirstTimeNotification();                                                                         // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortAthenaMatchmakingWidgetLegacy.OnSetViewDetailsButtonVisibility
	// void OnSetViewDetailsButtonVisibility(bool bVisible);                                                                    // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortAthenaMatchmakingWidgetLegacy.OnSetStartMatchButtonVisibility
	// void OnSetStartMatchButtonVisibility(bool bVisible);                                                                     // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortAthenaMatchmakingWidgetLegacy.OnSetSquadFillText
	// void OnSetSquadFillText(FText& Text);                                                                                    // [0x1d9241c] Event|Protected|HasOutParms|BlueprintEvent 
	// Function /Script/FortniteUI.FortAthenaMatchmakingWidgetLegacy.OnSetSquadFillButtonEnabled
	// void OnSetSquadFillButtonEnabled(bool bEnabled);                                                                         // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortAthenaMatchmakingWidgetLegacy.OnSetPlayButtonVisibility
	// void OnSetPlayButtonVisibility(bool bVisible);                                                                           // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortAthenaMatchmakingWidgetLegacy.OnSetPlayButtonText
	// void OnSetPlayButtonText(FText& PlayButtonText);                                                                         // [0x1d9241c] Event|Protected|HasOutParms|BlueprintEvent 
	// Function /Script/FortniteUI.FortAthenaMatchmakingWidgetLegacy.OnSetPlayButtonSecondaryText
	// void OnSetPlayButtonSecondaryText(FText& PlayButtonSecondaryText);                                                       // [0x1d9241c] Event|Protected|HasOutParms|BlueprintEvent 
	// Function /Script/FortniteUI.FortAthenaMatchmakingWidgetLegacy.OnSetPlayButtonEnabled
	// void OnSetPlayButtonEnabled(bool bEnabled);                                                                              // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortAthenaMatchmakingWidgetLegacy.OnSetPartySizeWarningVisibility
	// void OnSetPartySizeWarningVisibility(bool bVisible);                                                                     // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortAthenaMatchmakingWidgetLegacy.OnSetPartySizeWarningText
	// void OnSetPartySizeWarningText(FText& Text);                                                                             // [0x1d9241c] Event|Protected|HasOutParms|BlueprintEvent 
	// Function /Script/FortniteUI.FortAthenaMatchmakingWidgetLegacy.OnSetMatchmakingModeButtonText
	// void OnSetMatchmakingModeButtonText();                                                                                   // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortAthenaMatchmakingWidgetLegacy.OnSetMatchmakingModeButtonEnabled
	// void OnSetMatchmakingModeButtonEnabled(bool bEnabled);                                                                   // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortAthenaMatchmakingWidgetLegacy.OnSetMatchmakingMessageText
	// void OnSetMatchmakingMessageText(FText& Text);                                                                           // [0x1d9241c] Event|Protected|HasOutParms|BlueprintEvent 
	// Function /Script/FortniteUI.FortAthenaMatchmakingWidgetLegacy.OnSetMatchmakingHeaderText
	// void OnSetMatchmakingHeaderText(FText& Text);                                                                            // [0x1d9241c] Event|Protected|HasOutParms|BlueprintEvent 
	// Function /Script/FortniteUI.FortAthenaMatchmakingWidgetLegacy.OnSetHabaneroText
	// void OnSetHabaneroText(FText& HabaneroString, EHabaneroDisplayState& State);                                             // [0x1d9241c] Event|Protected|HasOutParms|BlueprintEvent 
	// Function /Script/FortniteUI.FortAthenaMatchmakingWidgetLegacy.OnSetContentDownloadProgressText
	// void OnSetContentDownloadProgressText(FText& Text);                                                                      // [0x1d9241c] Event|Protected|HasOutParms|BlueprintEvent 
	// Function /Script/FortniteUI.FortAthenaMatchmakingWidgetLegacy.OnSetContentDownloadProgressBar
	// void OnSetContentDownloadProgressBar(float Progress);                                                                    // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortAthenaMatchmakingWidgetLegacy.OnSetContentBeaconDownloadVisibility
	// void OnSetContentBeaconDownloadVisibility(bool bVisible);                                                                // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortAthenaMatchmakingWidgetLegacy.OnSetCancelButtonVisibility
	// void OnSetCancelButtonVisibility(bool bVisible);                                                                         // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortAthenaMatchmakingWidgetLegacy.OnSetCancelButtonText
	// void OnSetCancelButtonText(FText& CancelButtonText);                                                                     // [0x1d9241c] Event|Protected|HasOutParms|BlueprintEvent 
	// Function /Script/FortniteUI.FortAthenaMatchmakingWidgetLegacy.OnSetCancelButtonEnabled
	// void OnSetCancelButtonEnabled(bool bEnabled);                                                                            // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortAthenaMatchmakingWidgetLegacy.OnPrivateMatchTextChanged
	// void OnPrivateMatchTextChanged(FText& Text);                                                                             // [0x1d9241c] Event|Protected|HasOutParms|BlueprintEvent 
	// Function /Script/FortniteUI.FortAthenaMatchmakingWidgetLegacy.OnPrivateMatchButtonEnabledStateUpdated
	// void OnPrivateMatchButtonEnabledStateUpdated(bool bIsLocalPlayerPartyLeader, bool bIsMatchmaking);                       // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortAthenaMatchmakingWidgetLegacy.OnPreStartMatchmaking
	// void OnPreStartMatchmaking();                                                                                            // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortAthenaMatchmakingWidgetLegacy.OnPlayClicked
	// void OnPlayClicked();                                                                                                    // [0x931e668] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.FortAthenaMatchmakingWidgetLegacy.OnPlayButtonLockStateChanged
	// void OnPlayButtonLockStateChanged(bool bLockState);                                                                      // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortAthenaMatchmakingWidgetLegacy.OnModeLockedVisibility
	// void OnModeLockedVisibility(bool bVisible);                                                                              // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortAthenaMatchmakingWidgetLegacy.OnMatchmakingModeButtonClicked
	// void OnMatchmakingModeButtonClicked();                                                                                   // [0x931e654] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.FortAthenaMatchmakingWidgetLegacy.OnMatchmakingFinishedBlueprint
	// void OnMatchmakingFinishedBlueprint(bool bSuccess, UFortPlaylistAthena* Playlist);                                       // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortAthenaMatchmakingWidgetLegacy.OnLocalPlayerSittingOut
	// void OnLocalPlayerSittingOut();                                                                                          // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortAthenaMatchmakingWidgetLegacy.OnLocalPlayerPromotedToLeader
	// void OnLocalPlayerPromotedToLeader();                                                                                    // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortAthenaMatchmakingWidgetLegacy.OnHabaneroStateUpdated
	// void OnHabaneroStateUpdated(bool bIsHabaneroEnabled, bool bIsHabaneroIsland);                                            // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortAthenaMatchmakingWidgetLegacy.OnGetPlayButtonEnabled
	// bool OnGetPlayButtonEnabled();                                                                                           // [0x1d9241c] Event|Public|BlueprintEvent|Const 
	// Function /Script/FortniteUI.FortAthenaMatchmakingWidgetLegacy.OnGetPlayButtonCachedGeometry
	// FGeometry OnGetPlayButtonCachedGeometry();                                                                               // [0x1d9241c] Event|Public|BlueprintEvent|Const 
	// Function /Script/FortniteUI.FortAthenaMatchmakingWidgetLegacy.OnCancelClicked
	// void OnCancelClicked();                                                                                                  // [0x931e640] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.FortAthenaMatchmakingWidgetLegacy.OnBlackoutCountdownVisibility
	// void OnBlackoutCountdownVisibility(bool bVisible);                                                                       // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortAthenaMatchmakingWidgetLegacy.OnBlackoutCountdownText
	// void OnBlackoutCountdownText(FText& Text);                                                                               // [0x1d9241c] Event|Protected|HasOutParms|BlueprintEvent 
	// Function /Script/FortniteUI.FortAthenaMatchmakingWidgetLegacy.OnAvailablePlaylistsUpdated
	// void OnAvailablePlaylistsUpdated();                                                                                      // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortAthenaMatchmakingWidgetLegacy.IsSquadFillEnabled
	// bool IsSquadFillEnabled();                                                                                               // [0x931e588] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortAthenaMatchmakingWidgetLegacy.IsSinglePlayerActivity
	// bool IsSinglePlayerActivity();                                                                                           // [0x931e568] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortAthenaMatchmakingWidgetLegacy.IsPrivateMatchEnabled
	// bool IsPrivateMatchEnabled();                                                                                            // [0x931e51c] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortAthenaMatchmakingWidgetLegacy.IsAnyCreativeModeSelectActivity
	// bool IsAnyCreativeModeSelectActivity();                                                                                  // [0x2a1caf0] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortAthenaMatchmakingWidgetLegacy.HandleSquadFillClicked
	// void HandleSquadFillClicked();                                                                                           // [0x931dda8] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.FortAthenaMatchmakingWidgetLegacy.HandlePrivateMatchClicked
	// void HandlePrivateMatchClicked();                                                                                        // [0x931dd44] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.FortAthenaMatchmakingWidgetLegacy.HandleMatchMakingModeCalled
	// void HandleMatchMakingModeCalled(FString IslandMnemonic, FName InPlaylistName);                                          // [0x931d650] Final|Native|Private 
	// Function /Script/FortniteUI.FortAthenaMatchmakingWidgetLegacy.GetSinglePlayerMatchText
	// FText GetSinglePlayerMatchText();                                                                                        // [0x931bddc] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortAthenaMatchmakingWidgetLegacy.GetPrivateMatchText
	// FText GetPrivateMatchText();                                                                                             // [0x931bc64] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortAthenaMatchmakingWidgetLegacy.GetFillStatusText
	// FText GetFillStatusText();                                                                                               // [0x289ed28] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortAthenaMatchmakingWidgetLegacy.GetCreativeModeSelectText
	// FText GetCreativeModeSelectText();                                                                                       // [0x931b224] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortAthenaMatchmakingWidgetLegacy.GetButtonPublicMatchText
	// FText GetButtonPublicMatchText();                                                                                        // [0x931b1dc] Native|Event|Protected|BlueprintEvent|Const 
	// Function /Script/FortniteUI.FortAthenaMatchmakingWidgetLegacy.GetButtonPrivateMatchText
	// FText GetButtonPrivateMatchText();                                                                                       // [0x931b194] Native|Event|Protected|BlueprintEvent|Const 
	// Function /Script/FortniteUI.FortAthenaMatchmakingWidgetLegacy.GetButtonModeSetTextFromIslandExtension
	// FGameSelectionButtonInfo GetButtonModeSetTextFromIslandExtension();                                                      // [0x27179bc] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/FortniteUI.FortAthenaTabsScreenBase
/// Size: 0x0040 (0x000400 - 0x000440)
class UFortAthenaTabsScreenBase : public UCommonActivatableWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1088;

public:
	CMember(TArray<EFortUIFeature>)                    TabsUIFeature                                               OFFSET(get<T>, {0x400, 16, 0, 0})
	CMember(UCommonWidgetSwitcherLegacy*)              TabContentSwitcher                                          OFFSET(get<T>, {0x410, 8, 0, 0})
	CMember(UFortMtxStoreRootBase*)                    StoreMain_Root                                              OFFSET(get<T>, {0x418, 8, 0, 0})
	SMember(FGameplayTag)                              SeasonTrailerAutoplayEndingCamera                           OFFSET(getStruct<T>, {0x420, 4, 0, 0})
};

/// Class /Script/FortniteUI.FortBangInterface
/// Size: 0x0000 (0x000028 - 0x000028)
class UFortBangInterface : public UInterface
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 40;

public:
};

/// Class /Script/FortniteUI.FortBangWrapperOld
/// Size: 0x0048 (0x000190 - 0x0001D8)
class UFortBangWrapperOld : public UContentWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 472;

public:
	CMember(EFortBangSize)                             Size                                                        OFFSET(get<T>, {0x198, 1, 0, 0})
	SMember(FVector2D)                                 Offset                                                      OFFSET(getStruct<T>, {0x1A0, 16, 0, 0})
	CMember(EFortBangType)                             BangType                                                    OFFSET(get<T>, {0x1B0, 1, 0, 0})
	SMember(FName)                                     TutorialNameID                                              OFFSET(getStruct<T>, {0x1B4, 4, 0, 0})
	CMember(EFortTutorialGlowType)                     TutorialGlowType                                            OFFSET(get<T>, {0x1B8, 1, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortBangWrapperOld.SetBangVisibility
	// void SetBangVisibility(bool InVisible);                                                                                  // [0x931e960] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/FortniteUI.FortBangWrapper_NUI
/// Size: 0x0018 (0x0002E8 - 0x000300)
class UFortBangWrapper_NUI : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 768;

public:
	CMember(EFortBangType)                             BangType                                                    OFFSET(get<T>, {0x2F0, 1, 0, 0})
	SMember(FName)                                     TutorialNameID                                              OFFSET(getStruct<T>, {0x2F4, 4, 0, 0})
	CMember(UNamedSlot*)                               ContentSlot                                                 OFFSET(get<T>, {0x2F8, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortBangWrapper_NUI.UnregisterTutorialNameID
	// void UnregisterTutorialNameID();                                                                                         // [0x93234a8] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortBangWrapper_NUI.SetTutorialNameID
	// void SetTutorialNameID(FName InTutorialNameID);                                                                          // [0x93215e8] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortBangWrapper_NUI.SetBangType
	// void SetBangType(EFortBangType NewBangType);                                                                             // [0x1d0d594] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortBangWrapper_NUI.SetBangStateBP
	// void SetBangStateBP(bool bEnabled, int32_t Count);                                                                       // [0x1d0d398] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortBangWrapper_NUI.OnTutorialCalloutFinished
	// void OnTutorialCalloutFinished();                                                                                        // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortBangWrapper_NUI.OnStopCallout
	// void OnStopCallout();                                                                                                    // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortBangWrapper_NUI.OnStartCallout
	// void OnStartCallout(FName TutorialObjectiveName, ETutorialType TutorialType);                                            // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortBangWrapper_NUI.OnBangStateChanged
	// void OnBangStateChanged(bool bEnabled, int32_t Count);                                                                   // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortBangWrapper_NUI.AsyncPlaySound2D
	// void AsyncPlaySound2D(UObject* WorldContextObject, TWeakObjectPtr<USoundBase*> SoundToLoad, float VolumeMultiplier, float PitchMultiplier, float StartTime); // [0x931a058] Final|BlueprintCosmetic|Native|Public|BlueprintCallable 
};

/// Class /Script/FortniteUI.FortButtonStyle
/// Size: 0x2368 (0x000028 - 0x002390)
class UFortButtonStyle : public UObject
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 9104;

public:
	SMember(FFortStateStyle)                           NormalBase                                                  OFFSET(getStruct<T>, {0x30, 1184, 0, 0})
	SMember(FFortStateStyle)                           NormalHovered                                               OFFSET(getStruct<T>, {0x4D0, 1184, 0, 0})
	SMember(FFortStateStyle)                           NormalPressed                                               OFFSET(getStruct<T>, {0x970, 1184, 0, 0})
	SMember(FFortStateStyle)                           SelectedBase                                                OFFSET(getStruct<T>, {0xE10, 1184, 0, 0})
	SMember(FFortStateStyle)                           SelectedHovered                                             OFFSET(getStruct<T>, {0x12B0, 1184, 0, 0})
	SMember(FFortStateStyle)                           SelectedPressed                                             OFFSET(getStruct<T>, {0x1750, 1184, 0, 0})
	SMember(FFortStateStyle)                           Disabled                                                    OFFSET(getStruct<T>, {0x1BF0, 1184, 0, 0})
	SMember(FFortMultiSizeMargin)                      ButtonPadding                                               OFFSET(getStruct<T>, {0x2090, 96, 0, 0})
	SMember(FFortMultiSizeFont)                        Font                                                        OFFSET(getStruct<T>, {0x20F0, 528, 0, 0})
	SMember(FFortMultiSizeMargin)                      CustomPadding                                               OFFSET(getStruct<T>, {0x2300, 96, 0, 0})
	SMember(FSlateSound)                               PressedSlateSound                                           OFFSET(getStruct<T>, {0x2360, 24, 0, 0})
	SMember(FSlateSound)                               HoveredSlateSound                                           OFFSET(getStruct<T>, {0x2378, 24, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortButtonStyle.GetMarginBySizeFromMultiSizeMargin
	// FMargin GetMarginBySizeFromMultiSizeMargin(FFortMultiSizeMargin& MultiSizeMargin, TEnumAsByte<EFortBrushSize> Size);     // [0x931b9c0] Final|Native|Static|Public|HasOutParms|BlueprintCallable 
	// Function /Script/FortniteUI.FortButtonStyle.GetFontBySizeFromMultiSizeFont
	// FSlateFontInfo GetFontBySizeFromMultiSizeFont(FFortMultiSizeFont& MultiSizeFont, TEnumAsByte<EFortBrushSize> Size);      // [0x931b690] Final|Native|Static|Public|HasOutParms|BlueprintCallable 
	// Function /Script/FortniteUI.FortButtonStyle.GetFontBySize
	// FSlateFontInfo GetFontBySize(TEnumAsByte<EFortBrushSize> Size);                                                          // [0x931b5d8] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortButtonStyle.GetCustomPaddingBySize
	// FMargin GetCustomPaddingBySize(TEnumAsByte<EFortBrushSize> Size);                                                        // [0x931b4d4] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortButtonStyle.GetButtonPaddingBySize
	// FMargin GetButtonPaddingBySize(TEnumAsByte<EFortBrushSize> Size);                                                        // [0x931b0d0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortButtonStyle.GetBrushBySizeFromMultiSizeBrush
	// FSlateBrush GetBrushBySizeFromMultiSizeBrush(FFortMultiSizeBrush& MultiSizeBrush, TEnumAsByte<EFortBrushSize> Size);     // [0x931ae80] Final|Native|Static|Public|HasOutParms|BlueprintCallable 
};

/// Class /Script/FortniteUI.FortBaseButton
/// Size: 0x0840 (0x0002D0 - 0x000B10)
class UFortBaseButton : public UFortUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 2832;

public:
	SMember(FMulticastInlineDelegate)                  EnabledChanged                                              OFFSET(getStruct<T>, {0x2D8, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  SelectedChanged                                             OFFSET(getStruct<T>, {0x2E8, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  ButtonClicked                                               OFFSET(getStruct<T>, {0x2F8, 16, 0, 0})
	CMember(EFortBangSize)                             BangSize                                                    OFFSET(get<T>, {0x308, 1, 0, 0})
	SMember(FVector2D)                                 BangOffset                                                  OFFSET(getStruct<T>, {0x310, 16, 0, 0})
	CMember(EFortBangType)                             BangType                                                    OFFSET(get<T>, {0x320, 1, 0, 0})
	SMember(FName)                                     TutorialNameID                                              OFFSET(getStruct<T>, {0x324, 4, 0, 0})
	CMember(EFortTutorialGlowType)                     TutorialGlowType                                            OFFSET(get<T>, {0x328, 1, 0, 0})
	CMember(UClass*)                                   style                                                       OFFSET(get<T>, {0x330, 8, 0, 0})
	CMember(TEnumAsByte<EFortBrushSize>)               BrushSize                                                   OFFSET(get<T>, {0x338, 1, 0, 0})
	SMember(FSlateSound)                               PressedSlateSoundOverride                                   OFFSET(getStruct<T>, {0x340, 24, 0, 0})
	SMember(FSlateSound)                               HoveredSlateSoundOverride                                   OFFSET(getStruct<T>, {0x358, 24, 0, 0})
	DMember(bool)                                      bSelectable                                                 OFFSET(get<bool>, {0x370, 1, 0, 0})
	SMember(FName)                                     SelectionGroup                                              OFFSET(getStruct<T>, {0x374, 4, 0, 0})
	DMember(bool)                                      bToggleable                                                 OFFSET(get<bool>, {0x378, 1, 0, 0})
	DMember(bool)                                      bClickable                                                  OFFSET(get<bool>, {0x379, 1, 0, 0})
	CMember(TEnumAsByte<EButtonClickMethod>)           ClickMethod                                                 OFFSET(get<T>, {0x37A, 1, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortBaseButton.SetStyle
	// void SetStyle(UClass* InStyle);                                                                                          // [0x93214f4] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortBaseButton.SetSelectionGroup
	// void SetSelectionGroup(FName InSelectionGroup);                                                                          // [0x9321468] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortBaseButton.SetSelected
	// void SetSelected(bool InSelected);                                                                                       // [0x93213e8] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortBaseButton.SetHovered
	// void SetHovered(bool InHovered);                                                                                         // [0x931f988] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortBaseButton.SetClickMethod
	// void SetClickMethod(TEnumAsByte<EButtonClickMethod> InClickMethod);                                                      // [0x931eaf0] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortBaseButton.SetClickable
	// void SetClickable(bool InClickable);                                                                                     // [0x931eb84] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortBaseButton.SetBrushSize
	// void SetBrushSize(TEnumAsByte<EFortBrushSize> InSize);                                                                   // [0x931ea60] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortBaseButton.SetBangVisibility
	// void SetBangVisibility(bool bVisible);                                                                                   // [0x931e9e0] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortBaseButton.OnButtonClicked
	// void OnButtonClicked();                                                                                                  // [0x931a698] Final|Native|Protected 
	// Function /Script/FortniteUI.FortBaseButton.GetStyle
	// UFortButtonStyle* GetStyle();                                                                                            // [0x931be2c] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortBaseButton.GetSelectionGroupIndex
	// int32_t GetSelectionGroupIndex();                                                                                        // [0x931bd9c] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortBaseButton.GetSelected
	// bool GetSelected();                                                                                                      // [0x931bd5c] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortBaseButton.GetCurrentStateStyle
	// FFortStateStyle GetCurrentStateStyle();                                                                                  // [0x931b444] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortBaseButton.GetCurrentFont
	// FSlateFontInfo GetCurrentFont();                                                                                         // [0x931b31c] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortBaseButton.GetCurrentCustomPadding
	// FMargin GetCurrentCustomPadding();                                                                                       // [0x931b2c8] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortBaseButton.GetCurrentButtonPadding
	// FMargin GetCurrentButtonPadding();                                                                                       // [0x931b274] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortBaseButton.ForceClick
	// void ForceClick();                                                                                                       // [0x931a698] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/FortniteUI.FortBorderStyleList
/// Size: 0x0008 (0x0002E8 - 0x0002F0)
class UFortBorderStyleList : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 752;

public:
	SMember(FName)                                     BordersPath                                                 OFFSET(getStruct<T>, {0x2E8, 4, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortBorderStyleList.GetBorderStyles
	// TArray<TWeakObjectPtr> GetBorderStyles();                                                                                // [0x931addc] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/FortniteUI.FortBuildingInfoIndicatorWidget
/// Size: 0x0000 (0x0003D0 - 0x0003D0)
class UFortBuildingInfoIndicatorWidget : public UFortActorIndicatorWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 976;

public:
};

/// Class /Script/FortniteUI.FortButtonInternalWidget
/// Size: 0x0010 (0x0005D0 - 0x0005E0)
class UFortButtonInternalWidget : public UButton
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1504;

public:
	DMember(bool)                                      IsClickable                                                 OFFSET(get<bool>, {0x5C8, 1, 0, 0})
};

/// Class /Script/FortniteUI.FortChatContainer
/// Size: 0x0048 (0x000318 - 0x000360)
class UFortChatContainer : public USocialChatContainer
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 864;

public:
	CMember(TWeakObjectPtr<USocialChatChannel*>)       CacheChannelForPlatformMessage                              OFFSET(get<T>, {0x330, 8, 0, 0})
	CMember(USocialChatChannel*)                       CombinedChannel                                             OFFSET(get<T>, {0x340, 8, 0, 0})
	CMember(UClass*)                                   ActionMenuClass                                             OFFSET(get<T>, {0x348, 8, 0, 0})
	CMember(UFortSocialInteractionMenu*)               ActionMenu                                                  OFFSET(get<T>, {0x350, 8, 0, 0})
	CMember(UMenuAnchor*)                              MenuAnchor_MessageActions                                   OFFSET(get<T>, {0x358, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortChatContainer.OnSendButtonDisplayChanged
	// void OnSendButtonDisplayChanged(bool bShowSendButton);                                                                   // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortChatContainer.IsTextChatRestricted
	// bool IsTextChatRestricted();                                                                                             // [0x931e5d8] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortChatContainer.HandleGetMenuContentForAnchor
	// UUserWidget* HandleGetMenuContentForAnchor();                                                                            // [0x8399f2c] Final|Native|Private 
	// Function /Script/FortniteUI.FortChatContainer.GetTextChatDisabledText
	// FText GetTextChatDisabledText();                                                                                         // [0x931ccb4] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/FortniteUI.FortChatMessageEntry
/// Size: 0x0000 (0x000420 - 0x000420)
class UFortChatMessageEntry : public USocialChatMessageEntry
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1056;

public:
};

/// Class /Script/FortniteUI.FortCMSInfoCarousel
/// Size: 0x0088 (0x000570 - 0x0005F8)
class UFortCMSInfoCarousel : public UFortActivatablePanel
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1528;

public:
	CMember(TMap<FString, UClass*>)                    MessageWidgetLayoutMap                                      OFFSET(get<T>, {0x570, 80, 0, 0})
	CMember(UCommonWidgetCarousel*)                    Carousel                                                    OFFSET(get<T>, {0x5C0, 8, 0, 0})
	CMember(UCommonWidgetCarouselNavBar*)              CarouselNavBar                                              OFFSET(get<T>, {0x5C8, 8, 0, 0})
	SMember(FString)                                   CMSInfoId                                                   OFFSET(getStruct<T>, {0x5D0, 16, 0, 0})
	DMember(float)                                     AutoScrollInterval                                          OFFSET(get<float>, {0x5E0, 4, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortCMSInfoCarousel.NavigatePageRight
	// void NavigatePageRight();                                                                                                // [0x931e62c] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.FortCMSInfoCarousel.NavigatePageLeft
	// void NavigatePageLeft();                                                                                                 // [0x931e618] Final|Native|Protected|BlueprintCallable 
};

/// Class /Script/FortniteUI.FortCreativeContentBrowserTabPanelBase
/// Size: 0x0048 (0x000400 - 0x000448)
class UFortCreativeContentBrowserTabPanelBase : public UCommonActivatableWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1096;

public:
	SMember(FMulticastInlineDelegate)                  OnSelectionChanged                                          OFFSET(getStruct<T>, {0x400, 16, 0, 0})
	SMember(FName)                                     TabName                                                     OFFSET(getStruct<T>, {0x414, 4, 0, 0})
	SMember(FText)                                     TabLabel                                                    OFFSET(getStruct<T>, {0x418, 24, 0, 0})
	CMember(TArray<FName>)                             LastFilters                                                 OFFSET(get<T>, {0x430, 16, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortCreativeContentBrowserTabPanelBase.SelectTab
	// void SelectTab();                                                                                                        // [0x1d9241c] Event|Public|BlueprintCallable|BlueprintEvent 
	// Function /Script/FortniteUI.FortCreativeContentBrowserTabPanelBase.GetSelectedItemIndex
	// int32_t GetSelectedItemIndex();                                                                                          // [0x931bd74] Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortCreativeContentBrowserTabPanelBase.GetItemType
	// EFortCreativeItemType GetItemType();                                                                                     // [0x931b938] Native|Public|BlueprintCallable|BlueprintPure 
};

/// Class /Script/FortniteUI.FortCreativeOptionsCategory
/// Size: 0x0048 (0x0002C0 - 0x000308)
class UFortCreativeOptionsCategory : public UUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 776;

public:
	SMember(FCreativeOptionCategoryData)               OptionCategory                                              OFFSET(getStruct<T>, {0x2C0, 32, 0, 0})
	CMember(TArray<UFortCreativeOption*>)              CreativeOptions                                             OFFSET(get<T>, {0x2E0, 16, 0, 0})
	CMember(UFortCreativeGlobalOptions*)               GlobalOptionsUI                                             OFFSET(get<T>, {0x2F0, 8, 0, 0})
	CMember(UCommonListView*)                          ListView_Options                                            OFFSET(get<T>, {0x2F8, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_CategoryText                                           OFFSET(get<T>, {0x300, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortCreativeOptionsCategory.OnSelectionUpdated
	// void OnSelectionUpdated(UFortMatchmakingKnobsSpinnerButton* CurrentSelection);                                           // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.FortCreativeOptionsCategory.GetOptionsList
	// UCommonListView* GetOptionsList();                                                                                       // [0x931bc0c] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/FortniteUI.FortCreativeGlobalOptions
/// Size: 0x0088 (0x000570 - 0x0005F8)
class UFortCreativeGlobalOptions : public UFortActivatablePanel
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1528;

public:
	DMember(int32_t)                                   CachedLastUsedIndexInCategory                               OFFSET(get<int32_t>, {0x588, 4, 0, 0})
	CMember(UFortCreativeOptionsBundle*)               OptionsAsset                                                OFFSET(get<T>, {0x5A0, 8, 0, 0})
	CMember(UFortCreativeOptionsCategory*)             Category_Player                                             OFFSET(get<T>, {0x5C8, 8, 0, 0})
	CMember(UFortCreativeOptionsCategory*)             Category_MoveTool                                           OFFSET(get<T>, {0x5D0, 8, 0, 0})
	CMember(UCommonButtonLegacy*)                      Button_Accept                                               OFFSET(get<T>, {0x5D8, 8, 0, 0})
	CMember(UCommonButtonLegacy*)                      Button_Cancel                                               OFFSET(get<T>, {0x5E0, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_ToolTipText                                            OFFSET(get<T>, {0x5E8, 8, 0, 0})
	CMember(UImage*)                                   Image_DisplayImage                                          OFFSET(get<T>, {0x5F0, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortCreativeGlobalOptions.UpdateCachedIndices
	// void UpdateCachedIndices();                                                                                              // [0x93234bc] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.FortCreativeGlobalOptions.SetListDataSource
	// void SetListDataSource(TEnumAsByte<UFortMatchmakingKnobsDataSource> ListType);                                           // [0x931fcc4] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortCreativeGlobalOptions.GetOptionListFromMemoryPointer
	// UFortCreativeOptionsCategory* GetOptionListFromMemoryPointer();                                                          // [0x931bbd0] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/FortniteUI.FortCreativeInfoIndicatorWidget
/// Size: 0x0000 (0x0003D0 - 0x0003D0)
class UFortCreativeInfoIndicatorWidget : public UFortActorIndicatorWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 976;

public:
};

/// Class /Script/FortniteUI.FortCreativeIslandPanel
/// Size: 0x0018 (0x000328 - 0x000340)
class UFortCreativeIslandPanel : public UFortHUDElementWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 832;

public:
	SMember(FMulticastInlineDelegate)                  OnSupportCreator                                            OFFSET(getStruct<T>, {0x328, 16, 0, 0})
	CMember(UInputComponent*)                          PanelInputComponent                                         OFFSET(get<T>, {0x338, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortCreativeIslandPanel.PushPanelInputComponent
	// void PushPanelInputComponent(APlayerController* PlayerController);                                                       // [0x931e830] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortCreativeIslandPanel.PopPanelInputComponent
	// void PopPanelInputComponent(APlayerController* PlayerController);                                                        // [0x931e79c] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortCreativeIslandPanel.GetSupportCode
	// FString GetSupportCode();                                                                                                // [0x931be50] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/FortniteUI.FortCreativeIslandSelect
/// Size: 0x0010 (0x000570 - 0x000580)
class UFortCreativeIslandSelect : public UFortActivatablePanel
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1408;

public:
	CMember(UCommonButtonGroupLegacy*)                 TabButtonGroup                                              OFFSET(get<T>, {0x570, 8, 0, 0})
	CMember(UCommonListView*)                          ListView_IslandList                                         OFFSET(get<T>, {0x578, 8, 0, 0})
};

/// Class /Script/FortniteUI.FortCreativeIslandNamingModal
/// Size: 0x0048 (0x000570 - 0x0005B8)
class UFortCreativeIslandNamingModal : public UFortActivatablePanel
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1464;

public:
	SMember(FText)                                     InitialDisplayText                                          OFFSET(getStruct<T>, {0x570, 24, 0, 0})
	SMember(FText)                                     DefaultIslandName                                           OFFSET(getStruct<T>, {0x588, 24, 0, 0})
	CMember(UFortEditableFilteredCountedTextBox*)      FilteredTextEntryWidget_Name                                OFFSET(get<T>, {0x5A0, 8, 0, 0})
	CMember(UCommonButtonLegacy*)                      Button_Confirm                                              OFFSET(get<T>, {0x5A8, 8, 0, 0})
	CMember(UFortCreativeRealEstatePlotItemDefinition*) TemplateRealEstatePlotDefinition                           OFFSET(get<T>, {0x5B0, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortCreativeIslandNamingModal.InitFromPlotItemDefinition
	// void InitFromPlotItemDefinition(UFortCreativeRealEstatePlotItemDefinition* RealEstateItemDefinition);                    // [0x931e318] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortCreativeIslandNamingModal.InitFromIslandLink
	// void InitFromIslandLink(UFortCreativeIslandLink* IslandLink);                                                            // [0x931e1cc] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/FortniteUI.FortCreativeIslandGeneration
/// Size: 0x00B0 (0x000570 - 0x000620)
class UFortCreativeIslandGeneration : public UFortActivatablePanel
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1568;

public:
	CMember(UDataRegistry*)                            IslandTemplateDataTable                                     OFFSET(get<T>, {0x570, 8, 0, 0})
	CMember(TArray<UFortCreativeRealEstatePlotItemDefinition*>) FilteredIslandTemplateDefinitions                  OFFSET(get<T>, {0x578, 16, 0, 0})
	CMember(UCommonTileView*)                          StartingIslandsTileView                                     OFFSET(get<T>, {0x588, 8, 0, 0})
	CMember(UCommonTileView*)                          TemplateIslandsTileView                                     OFFSET(get<T>, {0x590, 8, 0, 0})
	CMember(UCommonButtonLegacy*)                      AcceptButton                                                OFFSET(get<T>, {0x598, 8, 0, 0})
	CMember(UCommonTextBlock*)                         IslandTemplateNameText                                      OFFSET(get<T>, {0x5A0, 8, 0, 0})
	CMember(UCommonTextBlock*)                         IslandDescriptionText                                       OFFSET(get<T>, {0x5A8, 8, 0, 0})
	CMember(UCommonTextBlock*)                         PublishedIslandName                                         OFFSET(get<T>, {0x5B0, 8, 0, 0})
	CMember(UCommonTextBlock*)                         PublishedIslandCode                                         OFFSET(get<T>, {0x5B8, 8, 0, 0})
	CMember(UCommonTextBlock*)                         PublishedIslandAuthor                                       OFFSET(get<T>, {0x5C0, 8, 0, 0})
	CMember(UCommonTextBlock*)                         PublishedIslandBulletOne                                    OFFSET(get<T>, {0x5C8, 8, 0, 0})
	CMember(UCommonTextBlock*)                         PublishedIslandBulletTwo                                    OFFSET(get<T>, {0x5D0, 8, 0, 0})
	CMember(UCommonTextBlock*)                         PublishedIslandBulletThree                                  OFFSET(get<T>, {0x5D8, 8, 0, 0})
	CMember(UCommonButtonGroupLegacy*)                 TabButtonGroup                                              OFFSET(get<T>, {0x5E0, 8, 0, 0})
	SMember(FCachedIslandsGroup)                       CachedTemplateIslands                                       OFFSET(getStruct<T>, {0x5E8, 40, 0, 0})
	CMember(TArray<UFortCreativeIslandLink*>)          IslandLinks                                                 OFFSET(get<T>, {0x610, 16, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortCreativeIslandGeneration.TemplateIslandsOnHoveredItemChanged
	// void TemplateIslandsOnHoveredItemChanged(UObject* Item, bool bIsHovered);                                                // [0x7867994] Final|Native|Private 
	// Function /Script/FortniteUI.FortCreativeIslandGeneration.TemplateIslandsOnCurrentItemSelectionChanged
	// void TemplateIslandsOnCurrentItemSelectionChanged(UObject* Item);                                                        // [0x93233bc] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortCreativeIslandGeneration.StartingIslandsOnHoveredItemChanged
	// void StartingIslandsOnHoveredItemChanged(UObject* Item, bool bIsHovered);                                                // [0x7867994] Final|Native|Private 
	// Function /Script/FortniteUI.FortCreativeIslandGeneration.StartingIslandsOnCurrentItemSelectionChanged
	// void StartingIslandsOnCurrentItemSelectionChanged(UObject* Item);                                                        // [0x93217c0] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortCreativeIslandGeneration.SetupIslandTemplateData
	// void SetupIslandTemplateData();                                                                                          // [0x9321674] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortCreativeIslandGeneration.OnSelectionUpdated
	// void OnSelectionUpdated(UFortCreativeIslandTemplateButton* CurrentSelection);                                            // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.FortCreativeIslandGeneration.OnIslandFilterComplete
	// void OnIslandFilterComplete();                                                                                           // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortCreativeIslandGeneration.HandleNoOptionsLoaded
	// void HandleNoOptionsLoaded();                                                                                            // [0x1d9241c] Event|Public|BlueprintCallable|BlueprintEvent 
	// Function /Script/FortniteUI.FortCreativeIslandGeneration.HandleCancelClicked
	// void HandleCancelClicked();                                                                                              // [0x6c63f7c] Native|Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.FortCreativeIslandGeneration.GetShowTemplateIslands
	// bool GetShowTemplateIslands();                                                                                           // [0x931bdc0] Final|Native|Public|BlueprintCallable|BlueprintPure 
};

/// Class /Script/FortniteUI.FortCreativeIslandTemplateButton
/// Size: 0x00E0 (0x001690 - 0x001770)
class UFortCreativeIslandTemplateButton : public UAthenaCreativeItemTileButton
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 6000;

public:
	SMember(FVector2D)                                 FeaturedIslandTemplateImageSize                             OFFSET(getStruct<T>, {0x1690, 16, 0, 0})
	CMember(UFortLazyImage*)                           TemplateImage                                               OFFSET(get<T>, {0x16A0, 8, 0, 0})
	SMember(FSlateBrush)                               DefaultFeaturedTemplateImage                                OFFSET(getStruct<T>, {0x16B0, 192, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortCreativeIslandTemplateButton.GetPlotTemplateDefinition
	// UFortCreativeRealEstatePlotItemDefinition* GetPlotTemplateDefinition();                                                  // [0x931bc40] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortCreativeIslandTemplateButton.GetIslandLink
	// UFortCreativeIslandLink* GetIslandLink();                                                                                // [0x931b914] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/FortniteUI.FortCreativeItemListMenu
/// Size: 0x0450 (0x000400 - 0x000850)
class UFortCreativeItemListMenu : public UCommonActivatableWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 2128;

public:
	CMember(UClass*)                                   PanelDataClass                                              OFFSET(get<T>, {0x430, 8, 0, 0})
	CMember(UDataTable*)                               ItemListCategorySource                                      OFFSET(get<T>, {0x438, 8, 0, 0})
	CMember(UFortCreativeItemListPanelData*)           ItemListPanelData                                           OFFSET(get<T>, {0x440, 8, 0, 0})
	CMember(UClass*)                                   InventoryTabClass                                           OFFSET(get<T>, {0x448, 8, 0, 0})
	CMember(UClass*)                                   LevelManagementTabClass                                     OFFSET(get<T>, {0x450, 8, 0, 0})
	CMember(UClass*)                                   InventoryTabButton                                          OFFSET(get<T>, {0x458, 8, 0, 0})
	SMember(FMulticastInlineDelegate)                  BP_OnItemSelected                                           OFFSET(getStruct<T>, {0x468, 16, 0, 0})
	CMember(UFortCreativeItemListTabPanel*)            ChestTabPanel                                               OFFSET(get<T>, {0x478, 8, 0, 0})
	CMember(UFortCreativeLevelManagementTabPanel*)     LevelManagementTabPanel                                     OFFSET(get<T>, {0x480, 8, 0, 0})
	CMember(UFortCreativeItemListTabPanel*)            SubItemsTabPanel                                            OFFSET(get<T>, {0x488, 8, 0, 0})
	SMember(FName)                                     TabNameID                                                   OFFSET(getStruct<T>, {0x490, 4, 0, 0})
	SMember(FFortTabButtonLabelInfo)                   TabButtonLabelInfo                                          OFFSET(getStruct<T>, {0x4A0, 240, 0, 0})
	SMember(FAthenaMapScreenContainerTabInfo)          MapScreenContainerTabInfo                                   OFFSET(getStruct<T>, {0x590, 72, 0, 0})
	DMember(bool)                                      bAddItemToInventoryOnEquip                                  OFFSET(get<bool>, {0x5D8, 1, 0, 0})
	DMember(bool)                                      bLoadItemsOnInitialized                                     OFFSET(get<bool>, {0x5D9, 1, 0, 0})
	DMember(int32_t)                                   LastUsedSlot                                                OFFSET(get<int32_t>, {0x5DC, 4, 0, 0})
	SMember(FName)                                     LastSelectedTab                                             OFFSET(getStruct<T>, {0x5E0, 4, 0, 0})
	CMember(TMap<FName, UFortCreativeItemListTabPanel*>) TabMap                                                    OFFSET(get<T>, {0x618, 80, 0, 0})
	CMember(UFortTabListWidgetBase_Legacy*)            TabList_Categories                                          OFFSET(get<T>, {0x7A8, 8, 0, 0})
	CMember(UCommonWidgetSwitcherLegacy*)              Switcher_Categories                                         OFFSET(get<T>, {0x7B0, 8, 0, 0})
	CMember(UWidgetSwitcher*)                          Switcher_NoItemInChest                                      OFFSET(get<T>, {0x7B8, 8, 0, 0})
	CMember(UWidgetSwitcher*)                          Switcher_CommandBar                                         OFFSET(get<T>, {0x7C0, 8, 0, 0})
	CMember(UFortCreativeMenuQuickbar*)                MenuQuickbar_QuickBars                                      OFFSET(get<T>, {0x7C8, 8, 0, 0})
	CMember(UCommonButtonLegacy*)                      Button_ResetChest                                           OFFSET(get<T>, {0x7D0, 8, 0, 0})
	CMember(UCommonButtonLegacy*)                      Button_CreateChest                                          OFFSET(get<T>, {0x7D8, 8, 0, 0})
	CMember(UCommonButtonLegacy*)                      Button_AddToQuickBar                                        OFFSET(get<T>, {0x7E0, 8, 0, 0})
	CMember(UCommonButtonLegacy*)                      Button_OpenItem                                             OFFSET(get<T>, {0x7E8, 8, 0, 0})
	CMember(UCommonButtonLegacy*)                      Button_PlaceNow                                             OFFSET(get<T>, {0x7F0, 8, 0, 0})
	CMember(UCommonButtonLegacy*)                      Button_Equip                                                OFFSET(get<T>, {0x7F8, 8, 0, 0})
	CMember(UCommonButtonLegacy*)                      Button_AddToChest                                           OFFSET(get<T>, {0x800, 8, 0, 0})
	CMember(UCommonButtonLegacy*)                      Button_Drop                                                 OFFSET(get<T>, {0x808, 8, 0, 0})
	CMember(UCommonButtonLegacy*)                      Button_CreateLlama                                          OFFSET(get<T>, {0x810, 8, 0, 0})
	CMember(UCommonButtonLegacy*)                      Button_RemoveFromChest                                      OFFSET(get<T>, {0x818, 8, 0, 0})
	CMember(UOverlay*)                                 Overlay_SearchFilters                                       OFFSET(get<T>, {0x820, 8, 0, 0})
	CMember(UContentBrowserFiltersPanel*)              FiltersPanel                                                OFFSET(get<T>, {0x828, 8, 0, 0})
	CMember(UCommonVisibilitySwitcher*)                Switcher_SidePanels                                         OFFSET(get<T>, {0x830, 8, 0, 0})
	CMember(UFortCreativeItemDetailsSidePanel*)        ItemDetailsSidePanel_DefaultSidePanel                       OFFSET(get<T>, {0x838, 8, 0, 0})
	CMember(UWidgetSwitcher*)                          Switcher_InventoryPermission                                OFFSET(get<T>, {0x840, 8, 0, 0})
	CMember(UWidgetSwitcher*)                          Switcher_EditorConnected                                    OFFSET(get<T>, {0x848, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortCreativeItemListMenu.VerifyPermissionsToCreativeInventory
	// void VerifyPermissionsToCreativeInventory();                                                                             // [0x93628e0] Final|Native|Private 
	// Function /Script/FortniteUI.FortCreativeItemListMenu.UpdateDetailsPanel
	// void UpdateDetailsPanel();                                                                                               // [0x93625bc] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortCreativeItemListMenu.SwitchItemDetailsPanel
	// void SwitchItemDetailsPanel(bool bUseLegacy);                                                                            // [0x9361db4] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortCreativeItemListMenu.SpawnContainer
	// void SpawnContainer(UClass* SupplyDropClass);                                                                            // [0x9361b40] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortCreativeItemListMenu.SetSubTabOpened
	// void SetSubTabOpened(bool bIsOpened);                                                                                    // [0x936176c] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortCreativeItemListMenu.SetIsItemCommandsEnabled
	// void SetIsItemCommandsEnabled(bool bInIsItemCommandEnabled);                                                             // [0x9360fec] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortCreativeItemListMenu.RefreshChestWidgetState
	// void RefreshChestWidgetState();                                                                                          // [0x93605e8] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortCreativeItemListMenu.PlaceSelectionInMoveTool
	// bool PlaceSelectionInMoveTool();                                                                                         // [0x9360578] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortCreativeItemListMenu.OpenSelection
	// bool OpenSelection();                                                                                                    // [0x935fc9c] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortCreativeItemListMenu.OnSelectionOpened
	// void OnSelectionOpened(FFortItemEntry& PreviousSelectedItem, FName PreviousTab);                                         // [0x1d9241c] Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// Function /Script/FortniteUI.FortCreativeItemListMenu.OnSearchFiltersVisibilityChanged
	// void OnSearchFiltersVisibilityChanged(ESlateVisibility NewVisibility);                                                   // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.FortCreativeItemListMenu.OnItemsLoaded
	// void OnItemsLoaded();                                                                                                    // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.FortCreativeItemListMenu.OnItemEquipped
	// void OnItemEquipped(FFortItemEntry& EquippedItemEntry);                                                                  // [0x1d9241c] Event|Protected|HasOutParms|BlueprintEvent 
	// Function /Script/FortniteUI.FortCreativeItemListMenu.OnExitSubTab
	// void OnExitSubTab();                                                                                                     // [0x1d9241c] Event|Public|BlueprintCallable|BlueprintEvent 
	// Function /Script/FortniteUI.FortCreativeItemListMenu.OnCursorModeChanged
	// void OnCursorModeChanged(bool bCursorModeEnabled, FName ActionName, UUserWidget* CursorModeContentWidget);               // [0x935f834] Final|Native|Private 
	// Function /Script/FortniteUI.FortCreativeItemListMenu.OnCreativeQuickbarComponentLoaded
	// void OnCreativeQuickbarComponentLoaded();                                                                                // [0x935f780] Final|Native|Public  
	// Function /Script/FortniteUI.FortCreativeItemListMenu.OnContentRatingFilterChanged
	// void OnContentRatingFilterChanged();                                                                                     // [0x935f76c] Final|Native|Private 
	// Function /Script/FortniteUI.FortCreativeItemListMenu.NativeOnItemsRefreshed
	// void NativeOnItemsRefreshed();                                                                                           // [0x935f758] Final|Native|Public  
	// Function /Script/FortniteUI.FortCreativeItemListMenu.NativeOnItemsLoaded
	// void NativeOnItemsLoaded();                                                                                              // [0x935f744] Final|Native|Public  
	// Function /Script/FortniteUI.FortCreativeItemListMenu.LoadItems
	// void LoadItems();                                                                                                        // [0x935f6d0] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortCreativeItemListMenu.IsSubTabOpened
	// bool IsSubTabOpened();                                                                                                   // [0x935f6a4] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortCreativeItemListMenu.InitializeTabs
	// void InitializeTabs();                                                                                                   // [0x935f5dc] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortCreativeItemListMenu.HandleTabSelected
	// void HandleTabSelected(FName TabID);                                                                                     // [0x935f46c] Final|Native|Private|BlueprintCallable 
	// Function /Script/FortniteUI.FortCreativeItemListMenu.HandleSelectionChanged
	// void HandleSelectionChanged(UFortCreativeContentBrowserTabPanelBase* Tab);                                               // [0x935f3ec] Final|Native|Private 
	// Function /Script/FortniteUI.FortCreativeItemListMenu.HandleQuickbarPanelIsFocused
	// void HandleQuickbarPanelIsFocused(bool bIsFocused);                                                                      // [0x935f290] Final|Native|Private 
	// Function /Script/FortniteUI.FortCreativeItemListMenu.HandleItemDetailsInputAction
	// void HandleItemDetailsInputAction();                                                                                     // [0x935e84c] Final|Native|Private 
	// Function /Script/FortniteUI.FortCreativeItemListMenu.HandleFilterPanelIsFocused
	// void HandleFilterPanelIsFocused(bool bIsFocused);                                                                        // [0x935d3a0] Final|Native|Private 
	// Function /Script/FortniteUI.FortCreativeItemListMenu.HandleFilterChanged
	// void HandleFilterChanged();                                                                                              // [0x935d38c] Final|Native|Private 
	// Function /Script/FortniteUI.FortCreativeItemListMenu.HandleEquipItem
	// void HandleEquipItem(FFortItemEntry& ItemEntry);                                                                         // [0x935d2c8] Final|Native|Private|HasOutParms 
	// Function /Script/FortniteUI.FortCreativeItemListMenu.HandleChestItemCountChanged
	// void HandleChestItemCountChanged(int32_t Count);                                                                         // [0x935d154] Final|Native|Private 
	// Function /Script/FortniteUI.FortCreativeItemListMenu.HandleAddSelectionToMoveToolComplete
	// void HandleAddSelectionToMoveToolComplete();                                                                             // [0x935cf44] Final|Native|Private 
	// Function /Script/FortniteUI.FortCreativeItemListMenu.GetLastSelectedTabName
	// FName GetLastSelectedTabName();                                                                                          // [0x935ca80] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortCreativeItemListMenu.GetCurrentTab
	// UFortCreativeContentBrowserTabPanelBase* GetCurrentTab();                                                                // [0x935c638] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortCreativeItemListMenu.GetCurrentSelection
	// FFortItemEntry GetCurrentSelection();                                                                                    // [0x935c5d4] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortCreativeItemListMenu.EquipSelection
	// bool EquipSelection();                                                                                                   // [0x935ab1c] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortCreativeItemListMenu.EquipItem
	// bool EquipItem(FFortItemEntry& ItemEntry);                                                                               // [0x935aa54] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/FortniteUI.FortCreativeItemListMenu.DropItem
	// bool DropItem(FFortItemEntry& SelectedItem);                                                                             // [0x935a96c] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/FortniteUI.FortCreativeItemListMenu.CanEquip
	// bool CanEquip(FFortItemEntry& SelectedItem);                                                                             // [0x935a614] Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortCreativeItemListMenu.CanDropItem
	// bool CanDropItem(FFortItemEntry& SelectedItem);                                                                          // [0x935a54c] Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortCreativeItemListMenu.CanAddToChest
	// bool CanAddToChest(FFortItemEntry& SelectedItem);                                                                        // [0x935a484] Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortCreativeItemListMenu.BroadcastOnItemEquipped
	// void BroadcastOnItemEquipped(FFortItemEntry ItemToSpawn);                                                                // [0x935a2cc] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortCreativeItemListMenu.BroadcastOnCloseFromContentBrowser
	// void BroadcastOnCloseFromContentBrowser();                                                                               // [0x935a2b0] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortCreativeItemListMenu.AddSelectionToQuickBar
	// bool AddSelectionToQuickBar();                                                                                           // [0x935a0d8] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/FortniteUI.FortCreativeItemListPanelData
/// Size: 0x0038 (0x000028 - 0x000060)
class UFortCreativeItemListPanelData : public UObject
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 96;

public:
	CMember(TArray<UFortItemDefinition*>)              AllItems                                                    OFFSET(get<T>, {0x28, 16, 0, 0})
	CMember(TArray<FItemListCategoryArray>)            CategoryList                                                OFFSET(get<T>, {0x38, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnLoadItemsComplete                                         OFFSET(getStruct<T>, {0x48, 16, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortCreativeItemListPanelData.LoadItems
	// void LoadItems(UObject* Target);                                                                                         // [0x8f3b3d8] Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortCreativeItemListPanelData.GetInteractionText
	// FText GetInteractionText();                                                                                              // [0x597b8c0] Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortCreativeItemListPanelData.GetCreativeItemListPanelData
	// UFortCreativeItemListPanelData* GetCreativeItemListPanelData(UObject* Target, UClass* PanelDataClass);                   // [0x935b810] Final|RequiredAPI|Native|Static|Public|BlueprintCallable|BlueprintPure 
};

/// Class /Script/FortniteUI.FortCreativeItemListTabPanel
/// Size: 0x03B8 (0x000448 - 0x000800)
class UFortCreativeItemListTabPanel : public UFortCreativeContentBrowserTabPanelBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 2048;

public:
	SMember(FMulticastInlineDelegate)                  OnSourceItemCountChanged                                    OFFSET(getStruct<T>, {0x450, 16, 0, 0})
	SMember(FDataTableRowHandle)                       ItemDetailsInputRowHandle                                   OFFSET(getStruct<T>, {0x460, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnItemDetailsInputAction                                    OFFSET(getStruct<T>, {0x478, 16, 0, 0})
	CMember(UAthenaCreativeItemTileView*)              CreativeTileView_ItemOptions                                OFFSET(get<T>, {0x488, 8, 0, 0})
	SMember(FFortItemEntry)                            CurrentItemEntry                                            OFFSET(getStruct<T>, {0x490, 408, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnItemCountChanged                                          OFFSET(getStruct<T>, {0x628, 16, 0, 0})
	CMember(TArray<FFortItemEntry>)                    Items                                                       OFFSET(get<T>, {0x638, 16, 0, 0})
	CMember(TArray<FFortItemEntry>)                    SourceItems                                                 OFFSET(get<T>, {0x648, 16, 0, 0})
	CMember(UFortCreativeItemListMenu*)                CreativeItemListMenuParent                                  OFFSET(get<T>, {0x7F8, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortCreativeItemListTabPanel.RestoreLastSelection
	// void RestoreLastSelection();                                                                                             // [0x9360c0c] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortCreativeItemListTabPanel.RemoveSelectedItem
	// void RemoveSelectedItem();                                                                                               // [0x93607a0] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortCreativeItemListTabPanel.ItemEquipped
	// void ItemEquipped(FFortItemEntry& Item);                                                                                 // [0x1d9241c] Event|Public|HasOutParms|BlueprintEvent 
	// Function /Script/FortniteUI.FortCreativeItemListTabPanel.IsEmpty
	// bool IsEmpty();                                                                                                          // [0x935f664] Final|Native|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/FortniteUI.FortCreativeItemListTabPanel.GetCollapseBorderPadFlagForCategory
	// bool GetCollapseBorderPadFlagForCategory();                                                                              // [0x935b7d4] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortCreativeItemListTabPanel.GetCardSizeForCategory
	// EFortItemCardSize GetCardSizeForCategory();                                                                              // [0x935b774] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortCreativeItemListTabPanel.FocusCurrentSelection
	// void FocusCurrentSelection();                                                                                            // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.FortCreativeItemListTabPanel.ClearFilteredItems
	// void ClearFilteredItems();                                                                                               // [0x935a874] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortCreativeItemListTabPanel.ClearAllItems
	// void ClearAllItems();                                                                                                    // [0x935a84c] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortCreativeItemListTabPanel.CanPlayerCreateInVolume
	// bool CanPlayerCreateInVolume();                                                                                          // [0x935a6dc] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortCreativeItemListTabPanel.AddItemToSource
	// void AddItemToSource(FFortItemEntry& ItemToAdd);                                                                         // [0x9359fd4] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/FortniteUI.FortCreativeItemListTabPanel.AddItem
	// void AddItem(FFortItemEntry& ItemToAdd);                                                                                 // [0x9359f10] Final|Native|Public|HasOutParms|BlueprintCallable 
};

/// Class /Script/FortniteUI.FortCreativeLevelManagementTabPanel
/// Size: 0x0158 (0x000448 - 0x0005A0)
class UFortCreativeLevelManagementTabPanel : public UFortCreativeContentBrowserTabPanelBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1440;

public:
	CMember(ULevelManagementListView*)                 LevelManagementListView_Options                             OFFSET(get<T>, {0x448, 8, 0, 0})
	SMember(FSlateBrush)                               LevelManagementBrush                                        OFFSET(getStruct<T>, {0x450, 192, 0, 0})
	DMember(bool)                                      bIsUsingSidePanel                                           OFFSET(get<bool>, {0x510, 1, 0, 0})
	SMember(FLevelInstanceListElement)                 CurrentLevelEntry                                           OFFSET(getStruct<T>, {0x518, 56, 0, 0})
	CMember(TArray<FLevelInstanceListElement>)         LevelEntries                                                OFFSET(get<T>, {0x558, 16, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortCreativeLevelManagementTabPanel.LevelListUpdated
	// void LevelListUpdated();                                                                                                 // [0x935f6bc] Final|Native|Private 
	// Function /Script/FortniteUI.FortCreativeLevelManagementTabPanel.HandleLevelDeleteClicked
	// void HandleLevelDeleteClicked(FLevelInstanceListElement& LevelInstanceListElement);                                      // [0x935e860] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/FortniteUI.FortCreativeLevelManagementTabPanel.ClearAllItems
	// void ClearAllItems();                                                                                                    // [0x935a860] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/FortniteUI.FortCreativeMenuQuickbar
/// Size: 0x0088 (0x000400 - 0x000488)
class UFortCreativeMenuQuickbar : public UCommonActivatableWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1160;

public:
	SMember(FMulticastInlineDelegate)                  OnFocusChanged                                              OFFSET(getStruct<T>, {0x400, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnEquipItem                                                 OFFSET(getStruct<T>, {0x410, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnQuickbarStateChanged                                      OFFSET(getStruct<T>, {0x420, 16, 0, 0})
	CMember(UFortItemDefinition*)                      CurrentItemDefinition                                       OFFSET(get<T>, {0x430, 8, 0, 0})
	CMember(EFortCreativeItemType)                     CurrentType                                                 OFFSET(get<T>, {0x438, 1, 0, 0})
	CMember(UWidgetSwitcher*)                          Switcher_QuickBars                                          OFFSET(get<T>, {0x468, 8, 0, 0})
	CMember(UAthenaQuickbarEditorBase*)                AthenaQuickbar_Creative                                     OFFSET(get<T>, {0x470, 8, 0, 0})
	CMember(UAthenaQuickbarEditorBase*)                AthenaQuickbar_Trap                                         OFFSET(get<T>, {0x478, 8, 0, 0})
	CMember(UAthenaQuickbarEditorBase*)                AthenaQuickbar_Primary                                      OFFSET(get<T>, {0x480, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortCreativeMenuQuickbar.ShowQuickbar
	// void ShowQuickbar(EFortContentBrowserQuickbarState InQuickbarState);                                                     // [0x9361ac0] Final|RequiredAPI|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortCreativeMenuQuickbar.OnQuickbarHighlight
	// void OnQuickbarHighlight();                                                                                              // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.FortCreativeMenuQuickbar.HandleAddItemToQuickbarAction
	// void HandleAddItemToQuickbarAction(EFortQuickBars QuickBarType, int32_t SlotNum, UFortItemDefinition* ItemDefinition);   // [0x935ce4c] Final|Native|Protected|BlueprintCallable 
};

/// Class /Script/FortniteUI.FortItemListOptionProxy
/// Size: 0x0028 (0x000088 - 0x0000B0)
class UFortItemListOptionProxy : public UFortUserOptionProxy
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 176;

public:
};

/// Class /Script/FortniteUI.FortCreativeMessageKnobsDialog
/// Size: 0x0320 (0x0006A8 - 0x0009C8)
class UFortCreativeMessageKnobsDialog : public UFortMatchmakingKnobsModal
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 2504;

public:
	SMember(FDataTableRowHandle)                       MainMenuInputRowHandle                                      OFFSET(getStruct<T>, {0x6A8, 16, 0, 0})
	CMember(UFortCreativePropertyEditorDialogBase*)    CurrentDialog                                               OFFSET(get<T>, {0x6B8, 8, 0, 0})
	CMember(UObject*)                                  CachedSelectedPreFilterOption                               OFFSET(get<T>, {0x6C0, 8, 0, 0})
	CMember(UClass*)                                   LegacyEntryWidgetClass                                      OFFSET(get<T>, {0x728, 8, 0, 0})
	CMember(UClass*)                                   AdvancedEntryWidgetClass                                    OFFSET(get<T>, {0x730, 8, 0, 0})
	CMember(TArray<FFortItemListOptionBucket>)         ItemListBuckets                                             OFFSET(get<T>, {0x808, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnFilterListCompleted                                       OFFSET(getStruct<T>, {0x818, 16, 0, 0})
	CMember(UCanvasPanel*)                             CanvasPanel_OptionsDialog                                   OFFSET(get<T>, {0x828, 8, 0, 0})
	CMember(UBackgroundBlur*)                          BackgroundBlur_ConfirmDialog                                OFFSET(get<T>, {0x838, 8, 0, 0})
	SMember(FText)                                     ItemName                                                    OFFSET(getStruct<T>, {0x840, 24, 0, 0})
	CMember(UCommonActionWidget*)                      Action_SelectedItemAdditionalAction                         OFFSET(get<T>, {0x858, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_SelectedItemAdditionalAction                           OFFSET(get<T>, {0x860, 8, 0, 0})
	CMember(UClass*)                                   ConfirmationDialogClass                                     OFFSET(get<T>, {0x868, 8, 0, 0})
	CMember(UAthenaConfirmationWindow*)                CachedConfirmationDialogWidget                              OFFSET(get<T>, {0x870, 8, 0, 0})
	CMember(UFortCTAButton*)                           Button_EventBrowser                                         OFFSET(get<T>, {0x998, 8, 0, 0})
	CMember(TWeakObjectPtr<UClass*>)                   SoftDeviceBrowserClass                                      OFFSET(get<T>, {0x9A0, 32, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortCreativeMessageKnobsDialog.ShouldShowAdditonalActionButtons
	// bool ShouldShowAdditonalActionButtons();                                                                                 // [0x9361a88] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortCreativeMessageKnobsDialog.SetOptionsButtonsEnabled
	// void SetOptionsButtonsEnabled(bool bInButtonsEnabled);                                                                   // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortCreativeMessageKnobsDialog.SetFocusToItem
	// void SetFocusToItem(UObject* Item);                                                                                      // [0x9360dd8] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.FortCreativeMessageKnobsDialog.RemoveTagFilter
	// void RemoveTagFilter(bool UpdateSelection);                                                                              // [0x9360838] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortCreativeMessageKnobsDialog.RemoveStringFilter
	// void RemoveStringFilter(bool UpdateSelection);                                                                           // [0x93607b4] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortCreativeMessageKnobsDialog.RemoveIsModifiedFilter
	// void RemoveIsModifiedFilter(bool UpdateSelection);                                                                       // [0x936071c] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortCreativeMessageKnobsDialog.RefreshUIOnDeviceButtonClicked
	// void RefreshUIOnDeviceButtonClicked();                                                                                   // [0x766dbc0] Native|Public        
	// Function /Script/FortniteUI.FortCreativeMessageKnobsDialog.RefreshTagFilterForGrantedContextTags
	// void RefreshTagFilterForGrantedContextTags(bool bRefreshOnlyWhenChanged, bool bUpdateSelectionForGamepad, bool bUpdateSelectForMouse); // [0x93605fc] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortCreativeMessageKnobsDialog.OnShowLoadingSpinnerChanged
	// void OnShowLoadingSpinnerChanged(bool bShowLoadingSpinner);                                                              // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortCreativeMessageKnobsDialog.OnEntryAdditionalActionChanged
	// void OnEntryAdditionalActionChanged();                                                                                   // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortCreativeMessageKnobsDialog.OnDialogOpenStateChanged
	// void OnDialogOpenStateChanged(bool bIsOpen);                                                                             // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortCreativeMessageKnobsDialog.OnConfirmationDialogWidgetCreated
	// void OnConfirmationDialogWidgetCreated();                                                                                // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortCreativeMessageKnobsDialog.NativeHandleOnRenameInput
	// void NativeHandleOnRenameInput();                                                                                        // [0x935f6e4] Final|Native|Protected|BlueprintCallable|Const 
	// Function /Script/FortniteUI.FortCreativeMessageKnobsDialog.IsAnyFilterActive
	// bool IsAnyFilterActive();                                                                                                // [0x935f5f0] Final|Native|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/FortniteUI.FortCreativeMessageKnobsDialog.HasClearItemsConfirmation
	// bool HasClearItemsConfirmation();                                                                                        // [0x2a17188] Native|Protected|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortCreativeMessageKnobsDialog.HandleMainMenuInput
	// void HandleMainMenuInput();                                                                                              // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortCreativeMessageKnobsDialog.HandleDeviceBrowserButtonPressed
	// void HandleDeviceBrowserButtonPressed();                                                                                 // [0x935d2b4] Final|Native|Private|BlueprintCallable 
	// Function /Script/FortniteUI.FortCreativeMessageKnobsDialog.HandleClearItemsClicked
	// void HandleClearItemsClicked();                                                                                          // [0x766dba8] Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.FortCreativeMessageKnobsDialog.GetOptionsListScrollSpeed
	// float GetOptionsListScrollSpeed();                                                                                       // [0x1d9241c] Event|Protected|BlueprintCallable|BlueprintEvent|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortCreativeMessageKnobsDialog.GetItemCount
	// int32_t GetItemCount();                                                                                                  // [0x935ca58] Native|Protected|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortCreativeMessageKnobsDialog.GetDesiredAdditionalActionButtonsVisiblity
	// ESlateVisibility GetDesiredAdditionalActionButtonsVisiblity(ESlateVisibility RequestedVisibility);                       // [0x935c6a0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortCreativeMessageKnobsDialog.GetConfirmationDialogWidget
	// UAthenaConfirmationWindow* GetConfirmationDialogWidget();                                                                // [0x935b7ec] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.FortCreativeMessageKnobsDialog.GetClearItemsConfirmationText
	// FText GetClearItemsConfirmationText();                                                                                   // [0x935b78c] Native|Protected|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortCreativeMessageKnobsDialog.GenerateFilteredEntries
	// void GenerateFilteredEntries(bool bUpdateSelectionForGamepad, bool bUpdateSelectionForMouse);                            // [0x935b648] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortCreativeMessageKnobsDialog.FilterEntriesByTag
	// void FilterEntriesByTag(FGameplayTagContainer Tags, bool UpdateSelection);                                               // [0x935b30c] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortCreativeMessageKnobsDialog.FilterEntriesByString
	// void FilterEntriesByString(FString FilterString, bool UpdateSelection);                                                  // [0x935ac14] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortCreativeMessageKnobsDialog.FilterEntriesByIsModified
	// void FilterEntriesByIsModified(bool bShowUnmodifiedEntries, bool UpdateSelection);                                       // [0x935ab40] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortCreativeMessageKnobsDialog.DisableFilters
	// void DisableFilters();                                                                                                   // [0x935a944] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortCreativeMessageKnobsDialog.ContainsItem
	// bool ContainsItem();                                                                                                     // [0x6664e5c] Native|Protected|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortCreativeMessageKnobsDialog.CloseDialog
	// void CloseDialog(bool bSetFocusToOptionsList);                                                                           // [0x935a8b0] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.FortCreativeMessageKnobsDialog.CheckDestructiveSettings
	// bool CheckDestructiveSettings();                                                                                         // [0x935a714] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortCreativeMessageKnobsDialog.BP_DialogConfirmed
	// void BP_DialogConfirmed();                                                                                               // [0x1d9241c] Event|Public|BlueprintEvent 
};

/// Class /Script/FortniteUI.FortCreativeMiniGameInfo
/// Size: 0x0088 (0x0002C0 - 0x000348)
class UFortCreativeMiniGameInfo : public UUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 840;

public:
	SMember(FMulticastInlineDelegate)                  OnSupportCreator                                            OFFSET(getStruct<T>, {0x2C0, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnToggleDetails                                             OFFSET(getStruct<T>, {0x2D0, 16, 0, 0})
	CMember(UCommonTextBlock*)                         Text_Name                                                   OFFSET(get<T>, {0x2E0, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_CreatorName                                            OFFSET(get<T>, {0x2E8, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_SupportCode                                            OFFSET(get<T>, {0x2F0, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_Bullet1                                                OFFSET(get<T>, {0x2F8, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_Bullet2                                                OFFSET(get<T>, {0x300, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_Bullet3                                                OFFSET(get<T>, {0x308, 8, 0, 0})
	CMember(UDynamicEntryBox*)                         EntryBox_MiniGameTags                                       OFFSET(get<T>, {0x310, 8, 0, 0})
	DMember(int32_t)                                   SizeFont_Bullet_Mobile                                      OFFSET(get<int32_t>, {0x318, 4, 0, 0})
	CMember(UInputComponent*)                          PanelInputComponent                                         OFFSET(get<T>, {0x320, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortCreativeMiniGameInfo.PushPanelInputComponent
	// void PushPanelInputComponent();                                                                                          // [0x93605b0] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.FortCreativeMiniGameInfo.PopPanelInputComponent
	// void PopPanelInputComponent();                                                                                           // [0x936059c] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.FortCreativeMiniGameInfo.OnVisible
	// void OnVisible();                                                                                                        // [0x935fbd0] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.FortCreativeMiniGameInfo.OnTextSet
	// void OnTextSet();                                                                                                        // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortCreativeMiniGameInfo.OnSupportCodeChanged
	// void OnSupportCodeChanged(FText& SupportCode);                                                                           // [0x935fa90] Native|Event|Protected|HasOutParms|BlueprintEvent 
	// Function /Script/FortniteUI.FortCreativeMiniGameInfo.OnPublishedIslandCodeDisplayChanged
	// void OnPublishedIslandCodeDisplayChanged(ECreativePublishedIslandCodeDisplay PublishedIslandCodeDisplay);                // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortCreativeMiniGameInfo.OnMiniGameStartedFromInputComponent
	// void OnMiniGameStartedFromInputComponent();                                                                              // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortCreativeMiniGameInfo.OnIslandTitleChanged
	// void OnIslandTitleChanged(FText& IslandName);                                                                            // [0x935f9dc] Native|Event|Protected|HasOutParms|BlueprintEvent 
	// Function /Script/FortniteUI.FortCreativeMiniGameInfo.OnIslandCodeChanged
	// void OnIslandCodeChanged(FText& SupportCode);                                                                            // [0x1d9241c] Event|Protected|HasOutParms|BlueprintEvent 
	// Function /Script/FortniteUI.FortCreativeMiniGameInfo.OnGameInfoBulletsChanged
	// void OnGameInfoBulletsChanged(TArray<FString>& GameInfoBullets);                                                         // [0x935f940] Native|Event|Protected|HasOutParms|BlueprintEvent 
	// Function /Script/FortniteUI.FortCreativeMiniGameInfo.OnCreatorNameChanged
	// void OnCreatorNameChanged(FText& CreatorName);                                                                           // [0x935f794] Native|Event|Protected|HasOutParms|BlueprintEvent 
	// Function /Script/FortniteUI.FortCreativeMiniGameInfo.IsStartGameEnabled
	// bool IsStartGameEnabled();                                                                                               // [0x935f680] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortCreativeMiniGameInfo.HandleCreativePlotLinkedVolumeChanged
	// void HandleCreativePlotLinkedVolumeChanged(AFortVolume* CreativeLinkedVolume);                                           // [0x935d1d4] Final|Native|Private 
	// Function /Script/FortniteUI.FortCreativeMiniGameInfo.GetIslandDescriptionTags
	// TArray<FCreativeIslandDescriptionTag> GetIslandDescriptionTags();                                                        // [0x935c9f8] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortCreativeMiniGameInfo.GetIslandDescriptionLocationData
	// void GetIslandDescriptionLocationData(FMargin& Margin, TEnumAsByte<EHorizontalAlignment>& Alignment);                    // [0x935c8fc] Final|Native|Protected|HasOutParms|BlueprintCallable|BlueprintPure 
	// Function /Script/FortniteUI.FortCreativeMiniGameInfo.GetCreatorInformation
	// void GetCreatorInformation(FString& OutCreatorName, FString& OutSupportCode);                                            // [0x935b8d4] Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortCreativeMiniGameInfo.ForceRefresh
	// bool ForceRefresh(bool bSetupInputComponent);                                                                            // [0x935b5b8] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortCreativeMiniGameInfo.AreDetailsToggleable
	// bool AreDetailsToggleable();                                                                                             // [0x935a1c0] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/FortniteUI.FortCreativeMoreInfoPanel
/// Size: 0x0048 (0x000400 - 0x000448)
class UFortCreativeMoreInfoPanel : public UCommonActivatableWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1096;

public:
	CMember(UFortEditableFilteredCountedTextBox*)      FilteredText_IslandTitle                                    OFFSET(get<T>, {0x408, 8, 0, 0})
	CMember(UFortEditableFilteredCountedTextBox*)      FilteredText_IslandIntroduction1                            OFFSET(get<T>, {0x410, 8, 0, 0})
	CMember(UFortEditableFilteredCountedTextBox*)      FilteredText_IslandIntroduction2                            OFFSET(get<T>, {0x418, 8, 0, 0})
	CMember(UFortEditableFilteredCountedTextBox*)      FilteredText_IslandIntroduction3                            OFFSET(get<T>, {0x420, 8, 0, 0})
	CMember(UCommonButtonBase*)                        Button_Apply                                                OFFSET(get<T>, {0x428, 8, 0, 0})
	CMember(UCommonButtonBase*)                        Button_Clear                                                OFFSET(get<T>, {0x430, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortCreativeMoreInfoPanel.SetIslandTitle
	// void SetIslandTitle(FText& IslandTitle);                                                                                 // [0x9361184] Final|Native|Protected|HasOutParms|BlueprintCallable 
	// Function /Script/FortniteUI.FortCreativeMoreInfoPanel.SetIslandIntroduction
	// void SetIslandIntroduction(TArray<FText>& IslandIntroduction);                                                           // [0x93610ec] Final|Native|Protected|HasOutParms|BlueprintCallable 
	// Function /Script/FortniteUI.FortCreativeMoreInfoPanel.OnUpdatePlotData
	// void OnUpdatePlotData(TArray<FString>& Errors, FCreativeIslandInfo& IslandInfo);                                         // [0x1d9241c] Event|Protected|HasOutParms|BlueprintEvent 
	// Function /Script/FortniteUI.FortCreativeMoreInfoPanel.OnIsUpdatingChanged
	// void OnIsUpdatingChanged(bool bIsUpdating);                                                                              // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortCreativeMoreInfoPanel.OnIslandMetaDataUpdateTimedOut
	// void OnIslandMetaDataUpdateTimedOut();                                                                                   // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortCreativeMoreInfoPanel.OnIslandMetaDataUpdateComplete
	// void OnIslandMetaDataUpdateComplete(FString Error);                                                                      // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortCreativeMoreInfoPanel.HandleIslandMetaDataUpdateComplete
	// void HandleIslandMetaDataUpdateComplete(FString Error);                                                                  // [0x935e198] Final|Native|Private 
};

/// Class /Script/FortniteUI.FortCreativePermissionOptions
/// Size: 0x0010 (0x0006A8 - 0x0006B8)
class UFortCreativePermissionOptions : public UFortMatchmakingKnobsModal
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1720;

public:
	DMember(bool)                                      bCanEdit                                                    OFFSET(get<bool>, {0x6B0, 1, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortCreativePermissionOptions.OnApplyChanges
	// void OnApplyChanges(bool bSuccessful);                                                                                   // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortCreativePermissionOptions.ArePermisionChecksEnabled
	// bool ArePermisionChecksEnabled();                                                                                        // [0x935a1e4] Final|Native|Protected|BlueprintCallable|Const 
};

/// Class /Script/FortniteUI.CreativePropertyEditWidgetStringBase
/// Size: 0x0030 (0x0005B0 - 0x0005E0)
class UCreativePropertyEditWidgetStringBase : public UCreativePropertyEditWidgetUserOptionBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1504;

public:
	CMember(UFortEditableFilteredCountedTextBox*)      FilteredTextEntry_Widget                                    OFFSET(get<T>, {0x5B0, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.CreativePropertyEditWidgetStringBase.HandlesCharLimitValidation
	// bool HandlesCharLimitValidation();                                                                                       // [0x935f4ec] Native|Event|Protected|BlueprintEvent|Const 
	// Function /Script/FortniteUI.CreativePropertyEditWidgetStringBase.GetEntryCharacterLimit
	// int32_t GetEntryCharacterLimit();                                                                                        // [0x935c738] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/FortniteUI.CreativePropertyEditWidgetMusicTrackBase
/// Size: 0x0000 (0x0005B0 - 0x0005B0)
class UCreativePropertyEditWidgetMusicTrackBase : public UCreativePropertyEditWidgetUserOptionBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1456;

public:
};

/// Class /Script/FortniteUI.CreativePropertyEditWidgetMessageComponentBase
/// Size: 0x0010 (0x0005A8 - 0x0005B8)
class UCreativePropertyEditWidgetMessageComponentBase : public UCreativePropertyEditWidgetBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1464;

public:
	CMember(UEditableText*)                            EditableText_NumericEntry                                   OFFSET(get<T>, {0x5A8, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.CreativePropertyEditWidgetMessageComponentBase.HandleChannelNumericEntryCommitted
	// void HandleChannelNumericEntryCommitted(FText& InText, TEnumAsByte<ETextCommit> CommitInfo);                             // [0x935cff8] Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// Function /Script/FortniteUI.CreativePropertyEditWidgetMessageComponentBase.HandleChannelNumericEntryChanged
	// void HandleChannelNumericEntryChanged(FText& Text);                                                                      // [0x935cf58] Native|Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
};

/// Class /Script/FortniteUI.CreativePropertyEditWidgetDirectNumericInputBase
/// Size: 0x0010 (0x0005B0 - 0x0005C0)
class UCreativePropertyEditWidgetDirectNumericInputBase : public UCreativePropertyEditWidgetUserOptionBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1472;

public:
	CMember(UFortCreativePropertyNumericEntry*)        CreativeProperty_NumericEntry                               OFFSET(get<T>, {0x5B8, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.CreativePropertyEditWidgetDirectNumericInputBase.TryGetCurrentOptionValue
	// void TryGetCurrentOptionValue(FString& Data);                                                                            // [0x9361e38] Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.CreativePropertyEditWidgetDirectNumericInputBase.SetNumericEntryEditable
	// void SetNumericEntryEditable(bool bIsEditable);                                                                          // [0x93612e4] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.CreativePropertyEditWidgetDirectNumericInputBase.ParseTeamOrClassOptionsAsString
	// FString ParseTeamOrClassOptionsAsString(FString OriginalString);                                                         // [0x935fecc] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.CreativePropertyEditWidgetDirectNumericInputBase.OnRotated
	// void OnRotated();                                                                                                        // [0x935fa7c] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.CreativePropertyEditWidgetDirectNumericInputBase.HandleNumericEntryCommited
	// void HandleNumericEntryCommited(float InValue, TEnumAsByte<ETextCommit> CommitInfo);                                     // [0x935f078] Native|Event|Public|BlueprintCallable|BlueprintEvent 
	// Function /Script/FortniteUI.CreativePropertyEditWidgetDirectNumericInputBase.HandleNumericEntryChanged
	// void HandleNumericEntryChanged(float InValue);                                                                           // [0x935eff4] Native|Event|Public|BlueprintCallable|BlueprintEvent 
	// Function /Script/FortniteUI.CreativePropertyEditWidgetDirectNumericInputBase.CheckIsNumeircValueModified
	// void CheckIsNumeircValueModified();                                                                                      // [0x935a738] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.CreativePropertyEditWidgetDirectNumericInputBase.BP_PostNumericUpdateEditWidget
	// void BP_PostNumericUpdateEditWidget(bool IsCustomValue);                                                                 // [0x1d9241c] Event|Public|BlueprintEvent 
};

/// Class /Script/FortniteUI.CreativePropertyEditWidgetDeviceButtonComponentBase
/// Size: 0x0008 (0x0005A8 - 0x0005B0)
class UCreativePropertyEditWidgetDeviceButtonComponentBase : public UCreativePropertyEditWidgetBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1456;

public:
	CMember(UFortCreativeDeviceButtonComponent*)       DeviceButtonComponent                                       OFFSET(get<T>, {0x5A8, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.CreativePropertyEditWidgetDeviceButtonComponentBase.GetDeviceButtonComponent
	// UFortCreativeDeviceButtonComponent* GetDeviceButtonComponent();                                                          // [0x935c720] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.CreativePropertyEditWidgetDeviceButtonComponentBase.GetButtonLabel
	// FText GetButtonLabel();                                                                                                  // [0x935b70c] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/FortniteUI.CreativePropertyEditWidgetTintedIconIntBase
/// Size: 0x0010 (0x0005B0 - 0x0005C0)
class UCreativePropertyEditWidgetTintedIconIntBase : public UCreativePropertyEditWidgetUserOptionBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1472;

public:
	CMember(TArray<UColorOptionObjectWrapper*>)        ColorOptionObjects                                          OFFSET(get<T>, {0x5B0, 16, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.CreativePropertyEditWidgetTintedIconIntBase.GetCustomValueOption
	// FPlaylistOptionTintedIconIntValue GetCustomValueOption();                                                                // [0x935c65c] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/FortniteUI.CreativePropertyEditWidgetIconBase
/// Size: 0x0010 (0x0005B0 - 0x0005C0)
class UCreativePropertyEditWidgetIconBase : public UCreativePropertyEditWidgetUserOptionBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1472;

public:
	CMember(TArray<UIconOptionObjectWrapper*>)         IconOptionObjects                                           OFFSET(get<T>, {0x5B0, 16, 0, 0})
};

/// Class /Script/FortniteUI.CreativePropertyEditWidgetLevelListBase
/// Size: 0x0010 (0x0005B0 - 0x0005C0)
class UCreativePropertyEditWidgetLevelListBase : public UCreativePropertyEditWidgetUserOptionBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1472;

public:
	CMember(TArray<ULevelOptionObjectWrapper*>)        LevelOptionObjects                                          OFFSET(get<T>, {0x5B0, 16, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.CreativePropertyEditWidgetLevelListBase.UpdateCurrentLevelOptionName
	// void UpdateCurrentLevelOptionName(FText& UpdatedLevelName);                                                              // [0x9362520] Final|Native|Public|HasOutParms|BlueprintCallable 
};

/// Class /Script/FortniteUI.CreativePropertyEditWidgetInstancedLevelList
/// Size: 0x0030 (0x0005C0 - 0x0005F0)
class UCreativePropertyEditWidgetInstancedLevelList : public UCreativePropertyEditWidgetLevelListBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1520;

public:
	CMember(TArray<ULevelOptionObjectWrapper*>)        OldLevelOptionObjects                                       OFFSET(get<T>, {0x5C0, 16, 0, 0})
	DMember(bool)                                      bWaitingForNewLevel                                         OFFSET(get<bool>, {0x5D0, 1, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnNewLevelResult                                            OFFSET(getStruct<T>, {0x5D8, 16, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.CreativePropertyEditWidgetInstancedLevelList.HandleNewLevelButtonClicked
	// void HandleNewLevelButtonClicked();                                                                                      // [0x935efe0] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.CreativePropertyEditWidgetInstancedLevelList.ClientLevelListUpdated
	// void ClientLevelListUpdated();                                                                                           // [0x935a89c] Final|Native|Protected 
};

/// Class /Script/FortniteUI.CreativePropertyEditWidgetStatListBase
/// Size: 0x0010 (0x0005B0 - 0x0005C0)
class UCreativePropertyEditWidgetStatListBase : public UCreativePropertyEditWidgetUserOptionBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1472;

public:
	CMember(TArray<FCreativeStatOption>)               StatOptions                                                 OFFSET(get<T>, {0x5B0, 16, 0, 0})
};

/// Class /Script/FortniteUI.FortCreativePublishOptions
/// Size: 0x00B0 (0x000400 - 0x0004B0)
class UFortCreativePublishOptions : public UCommonActivatableWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1200;

public:
	CMember(EFortCreativePlotPermission)               CurrentPermissionsEnum                                      OFFSET(get<T>, {0x408, 1, 0, 0})
	CMember(UPanelWidget*)                             Panel_IslandBackup                                          OFFSET(get<T>, {0x410, 8, 0, 0})
	CMember(UPanelWidget*)                             Panel_IslandRestore                                         OFFSET(get<T>, {0x418, 8, 0, 0})
	CMember(UPanelWidget*)                             Panel_OptInForDeviceUpgrades                                OFFSET(get<T>, {0x420, 8, 0, 0})
	CMember(UPanelWidget*)                             Panel_OptInForMemorySystemUpgrades                          OFFSET(get<T>, {0x428, 8, 0, 0})
	CMember(UCommonAnimatedSwitcher*)                  Switcher_IslandPublish                                      OFFSET(get<T>, {0x430, 8, 0, 0})
	CMember(UPanelWidget*)                             Panel_IslandPublish                                         OFFSET(get<T>, {0x438, 8, 0, 0})
	CMember(UPanelWidget*)                             Panel_HowToPublish                                          OFFSET(get<T>, {0x440, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_RestoreTime                                            OFFSET(get<T>, {0x448, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_OnCooldown                                             OFFSET(get<T>, {0x450, 8, 0, 0})
	CMember(UCommonButtonBase*)                        Button_Publish                                              OFFSET(get<T>, {0x458, 8, 0, 0})
	CMember(TWeakObjectPtr<UClass*>)                   SoftPublishModalClass                                       OFFSET(get<T>, {0x460, 32, 0, 0})
	CMember(TWeakObjectPtr<UClass*>)                   SoftCreateBuildModalClass                                   OFFSET(get<T>, {0x480, 32, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortCreativePublishOptions.UpdateTimeSinceLastBackup
	// void UpdateTimeSinceLastBackup(FDateTime LastBackup);                                                                    // [0x936278c] Final|Native|Public|HasDefaults 
	// Function /Script/FortniteUI.FortCreativePublishOptions.UpdatePermissions
	// void UpdatePermissions(EFortCreativePlotPermission Permissions);                                                         // [0x9362650] Final|Native|Public|BlueprintCallable|Const 
	// Function /Script/FortniteUI.FortCreativePublishOptions.ShouldUseLegacyPublishUI
	// bool ShouldUseLegacyPublishUI();                                                                                         // [0x9361aa0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortCreativePublishOptions.RestoreMyIslandFromBackup
	// void RestoreMyIslandFromBackup();                                                                                        // [0x9360c20] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortCreativePublishOptions.ResetMyCurrentCreativePlot
	// void ResetMyCurrentCreativePlot();                                                                                       // [0x9360be4] Final|Native|Public|BlueprintCallable|Const 
	// Function /Script/FortniteUI.FortCreativePublishOptions.OptInForMemorySystemUpgrades
	// void OptInForMemorySystemUpgrades();                                                                                     // [0x935fe54] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortCreativePublishOptions.OptInForDeviceUpgrades
	// void OptInForDeviceUpgrades();                                                                                           // [0x935fdfc] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortCreativePublishOptions.OnSaveStateChanged
	// void OnSaveStateChanged(bool bSuccess);                                                                                  // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.FortCreativePublishOptions.OnRestoreStateChanged
	// void OnRestoreStateChanged(bool bReady);                                                                                 // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.FortCreativePublishOptions.OnRestoreMyIslandFromBackup
	// void OnRestoreMyIslandFromBackup(bool bSuccess);                                                                         // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.FortCreativePublishOptions.OnDataInitialized
	// void OnDataInitialized();                                                                                                // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortCreativePublishOptions.OnBackupMyIsland
	// void OnBackupMyIsland(bool bSuccess);                                                                                    // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.FortCreativePublishOptions.InitializeData
	// void InitializeData();                                                                                                   // [0x2ee9a3c] Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortCreativePublishOptions.CheckpointSaveStateChanged
	// void CheckpointSaveStateChanged(EBackupSaveState SaveState);                                                             // [0x935a7cc] Final|Native|Public  
	// Function /Script/FortniteUI.FortCreativePublishOptions.CheckpointRestoreStateChanged
	// void CheckpointRestoreStateChanged(EBackupSaveState SaveState);                                                          // [0x935a74c] Final|Native|Public  
	// Function /Script/FortniteUI.FortCreativePublishOptions.BackupMyIsland
	// void BackupMyIsland();                                                                                                   // [0x935a228] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/FortniteUI.FortCreativeQuestHUDWidget
/// Size: 0x0038 (0x0003C0 - 0x0003F8)
class UFortCreativeQuestHUDWidget : public UMinigameWidgetBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1016;

public:
	CMember(UCreativeQuestComponent*)                  LastKnownQuestComponent                                     OFFSET(get<T>, {0x3C8, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_CurrentAmount                                          OFFSET(get<T>, {0x3D0, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_TargetAmount                                           OFFSET(get<T>, {0x3D8, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_QuestName                                              OFFSET(get<T>, {0x3E0, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_QuestDetails                                           OFFSET(get<T>, {0x3E8, 8, 0, 0})
	DMember(int32_t)                                   questIndex                                                  OFFSET(get<int32_t>, {0x3F0, 4, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortCreativeQuestHUDWidget.SetToQuest
	// void SetToQuest(int32_t questIndex, bool bForceUpdate);                                                                  // [0x93617ec] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.FortCreativeQuestHUDWidget.SetQuestIndex
	// void SetQuestIndex(int32_t newQuestIndex);                                                                               // [0x93616f0] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.FortCreativeQuestHUDWidget.OnQuestChanged
	// void OnQuestChanged(UCreativeQuestComponent* CurrentQuestComponent, bool bHasActiveQuest);                               // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortCreativeQuestHUDWidget.OnProgressChanged
	// void OnProgressChanged();                                                                                                // [0x1d9241c] Event|Protected|BlueprintEvent 
};

/// Class /Script/FortniteUI.FortErrorWindow
/// Size: 0x00A8 (0x000570 - 0x000618)
class UFortErrorWindow : public UFortActivatablePanel
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1560;

public:
	CMember(UCommonTextBlock*)                         CommonText_Title                                            OFFSET(get<T>, {0x570, 8, 0, 0})
	CMember(UCommonTextBlock*)                         CommonText_MainError                                        OFFSET(get<T>, {0x578, 8, 0, 0})
	CMember(UScrollBox*)                               ScrollBox_MainError                                         OFFSET(get<T>, {0x580, 8, 0, 0})
	CMember(UTextBlock*)                               TextBlock_MainErrorCode                                     OFFSET(get<T>, {0x588, 8, 0, 0})
	CMember(UTextBlock*)                               TextBlock_OverflowErrorCodes                                OFFSET(get<T>, {0x590, 8, 0, 0})
	CMember(UWidgetSwitcher*)                          WidgetSwitcher_SeverityImage                                OFFSET(get<T>, {0x598, 8, 0, 0})
	CMember(UImage*)                                   Image_Mild                                                  OFFSET(get<T>, {0x5A0, 8, 0, 0})
	CMember(UImage*)                                   Image_Severe                                                OFFSET(get<T>, {0x5A8, 8, 0, 0})
	CMember(UCommonButtonLegacy*)                      CommonButton_Close                                          OFFSET(get<T>, {0x5B0, 8, 0, 0})
	SMember(FDataTableRowHandle)                       BackActionRowHandle                                         OFFSET(getStruct<T>, {0x5B8, 16, 0, 0})
	CMember(TArray<FText>)                             MildTitles                                                  OFFSET(get<T>, {0x5C8, 16, 0, 0})
	CMember(TArray<FText>)                             SevereTitles                                                OFFSET(get<T>, {0x5D8, 16, 0, 0})
	DMember(uint32_t)                                  MaxOverflowErrorCodes                                       OFFSET(get<uint32_t>, {0x5E8, 4, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortErrorWindow.OnOverrideCloseButtonText
	// void OnOverrideCloseButtonText(FText& OverrideText);                                                                     // [0x1d9241c] Event|Protected|HasOutParms|BlueprintEvent 
};

/// Class /Script/FortniteUI.FortResourceCountWidget
/// Size: 0x0020 (0x000328 - 0x000348)
class UFortResourceCountWidget : public UFortHUDElementWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 840;

public:
	CMember(UCommonTextBlock*)                         Text_ResourceCount                                          OFFSET(get<T>, {0x328, 8, 0, 0})
	CMember(UFortResourceItemDefinition*)              ResourceItemDefinition                                      OFFSET(get<T>, {0x330, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_ResourceName                                           OFFSET(get<T>, {0x338, 8, 0, 0})
	CMember(UFortLazyImage*)                           LazyImage_ResourceIcon                                      OFFSET(get<T>, {0x340, 8, 0, 0})
};

/// Class /Script/FortniteUI.FortGlobalCashWidget
/// Size: 0x0000 (0x000348 - 0x000348)
class UFortGlobalCashWidget : public UFortResourceCountWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 840;

public:
};

/// Class /Script/FortniteUI.FortGlobalSeasonResourceWidget
/// Size: 0x0000 (0x0002E8 - 0x0002E8)
class UFortGlobalSeasonResourceWidget : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 744;

public:
};

/// Class /Script/FortniteUI.FortHoldableButton
/// Size: 0x00A0 (0x001490 - 0x001530)
class UFortHoldableButton : public UCommonButtonBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 5424;

public:
	DMember(bool)                                      bIsHoldableButton                                           OFFSET(get<bool>, {0x1490, 1, 0, 0})
	DMember(bool)                                      bBindHoldToAction                                           OFFSET(get<bool>, {0x1491, 1, 0, 0})
	DMember(bool)                                      bIgnoreLongPress                                            OFFSET(get<bool>, {0x1492, 1, 0, 0})
	DMember(bool)                                      bKeybindingTriggersHoldEvents                               OFFSET(get<bool>, {0x1493, 1, 0, 0})
	DMember(float)                                     HoldTime                                                    OFFSET(get<float>, {0x1494, 4, 0, 0})
	DMember(float)                                     StartingHoldPercentage                                      OFFSET(get<float>, {0x1498, 4, 0, 0})
	DMember(float)                                     QualifyingHoldTime                                          OFFSET(get<float>, {0x149C, 4, 0, 0})
	DMember(bool)                                      bHoldCancelledFromMovement                                  OFFSET(get<bool>, {0x14A0, 1, 0, 0})
	CMember(UClass*)                                   HoldPromptTextStyle                                         OFFSET(get<T>, {0x14A8, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortHoldableButton.SetEnableButtonHold
	// void SetEnableButtonHold(bool bInEnableButtonHold);                                                                      // [0x9360d58] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortHoldableButton.OnHoldRequiredChanged
	// void OnHoldRequiredChanged(bool bHoldRequired);                                                                          // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortHoldableButton.GetIsHoldRequired
	// bool GetIsHoldRequired();                                                                                                // [0x935c8d0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortHoldableButton.GetHoldPromptTextStyle
	// UCommonTextStyle* GetHoldPromptTextStyle();                                                                              // [0x935c84c] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortHoldableButton.BP_OnHoldStarted
	// void BP_OnHoldStarted(float HoldPercentage, bool bInUseSecondaryHoldAnimation);                                          // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortHoldableButton.BP_OnHoldReset
	// void BP_OnHoldReset();                                                                                                   // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortHoldableButton.BP_OnHoldIncreased
	// void BP_OnHoldIncreased(float HoldPercentage);                                                                           // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortHoldableButton.BP_OnHoldEnded
	// void BP_OnHoldEnded(float HoldPercentage, bool bInUseSecondaryHoldAnimation);                                            // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortHoldableButton.BP_OnHoldDecreased
	// void BP_OnHoldDecreased(float HoldPercentage);                                                                           // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortHoldableButton.BP_OnHoldCompleted
	// void BP_OnHoldCompleted();                                                                                               // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortHoldableButton.BP_OnActionProgressIncreased
	// void BP_OnActionProgressIncreased(float HoldPercentage);                                                                 // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortHoldableButton.BP_OnActionProgressDecreased
	// void BP_OnActionProgressDecreased(float HoldPercentage);                                                                 // [0x1d9241c] Event|Protected|BlueprintEvent 
};

/// Class /Script/FortniteUI.FortHUDBuildingPossessionWidget
/// Size: 0x0008 (0x000328 - 0x000330)
class UFortHUDBuildingPossessionWidget : public UFortHUDElementWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 816;

public:
	CMember(UImage*)                                   DotImage                                                    OFFSET(get<T>, {0x328, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortHUDBuildingPossessionWidget.UpdateOnBuildingFocused
	// void UpdateOnBuildingFocused(ABuildingActor* FocusedBuilding);                                                           // [0x93625d0] Final|Native|Private 
};

/// Class /Script/FortniteUI.FortHUDCenterPopupMessageWidget
/// Size: 0x0030 (0x000328 - 0x000358)
class UFortHUDCenterPopupMessageWidget : public UFortHUDElementWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 856;

public:
	CMember(TWeakObjectPtr<UClass*>)                   CenterPopupModalWidgetClass                                 OFFSET(get<T>, {0x328, 32, 0, 0})
	CMember(UCommonActivatablePanelLegacy*)            CenterPopupModalWidget                                      OFFSET(get<T>, {0x350, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortHUDCenterPopupMessageWidget.UpdateState
	// void UpdateState();                                                                                                      // [0x93626f8] Final|BlueprintCosmetic|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortHUDCenterPopupMessageWidget.OnModalDisplayed
	// void OnModalDisplayed(ECenterPopupMessageStateEnum NewState, UCommonActivatablePanelLegacy* ModalPopup);                 // [0x1d9241c] BlueprintCosmetic|Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortHUDCenterPopupMessageWidget.GetCenterPopupMessageState
	// ECenterPopupMessageStateEnum GetCenterPopupMessageState();                                                               // [0x92f3c40] Final|BlueprintCosmetic|Native|Public|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/FortniteUI.FortHudContextTutorialIndicatorBall
/// Size: 0x0008 (0x000328 - 0x000330)
class UFortHudContextTutorialIndicatorBall : public UFortHUDElementWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 816;

public:
	DMember(bool)                                      bCanArrowAnimationPlay                                      OFFSET(get<bool>, {0x328, 1, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortHudContextTutorialIndicatorBall.SetArrowOrientation
	// void SetArrowOrientation(float Angle);                                                                                   // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.FortHudContextTutorialIndicatorBall.PlayIntroAnimation
	// void PlayIntroAnimation();                                                                                               // [0x1d9241c] Event|Public|BlueprintEvent 
};

/// Class /Script/FortniteUI.FortHudContextTutorialTipsBase
/// Size: 0x0100 (0x000400 - 0x000500)
class UFortHudContextTutorialTipsBase : public UCommonActivatableWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1280;

public:
	CMember(TArray<FContextPosition>)                  PositionPerPlatform                                         OFFSET(get<T>, {0x440, 16, 0, 0})
	SMember(FFortPrioritizedWidgetData)                PrioritizationData                                          OFFSET(getStruct<T>, {0x450, 2, 0, 0})
	CMember(UCanvasPanel*)                             CanvasPanel_Container                                       OFFSET(get<T>, {0x458, 8, 0, 0})
	CMember(UCanvasPanel*)                             CanvasPanel_Ball                                            OFFSET(get<T>, {0x460, 8, 0, 0})
	CMember(UOverlay*)                                 Overlay_Container                                           OFFSET(get<T>, {0x468, 8, 0, 0})
	CMember(UFortHudContextTutorialIndicatorBall*)     ContextTutorialBall                                         OFFSET(get<T>, {0x470, 8, 0, 0})
	CMember(UFortHudContextTutorialIndicatorBall*)     ContextTutorialBallParented                                 OFFSET(get<T>, {0x478, 8, 0, 0})
	CMember(UCommonActionWidget*)                      TipActionWidget                                             OFFSET(get<T>, {0x480, 8, 0, 0})
	CMember(UFortRichTextBlockKeybind*)                RichTextBlock_Message                                       OFFSET(get<T>, {0x488, 8, 0, 0})
	DMember(float)                                     MaxLerpSpeedPercentPerSecond                                OFFSET(get<float>, {0x490, 4, 0, 0})
	SMember(FDataTableRowHandle)                       CloseObjectInputAction                                      OFFSET(getStruct<T>, {0x498, 16, 0, 0})
	DMember(float)                                     UpdateWorldMarkersInterval                                  OFFSET(get<float>, {0x4F4, 4, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortHudContextTutorialTipsBase.UnregisterCloseButtonInput
	// void UnregisterCloseButtonInput();                                                                                       // [0x936250c] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.FortHudContextTutorialTipsBase.StopIntroAnimation
	// void StopIntroAnimation();                                                                                               // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortHudContextTutorialTipsBase.StartWorldMarkerOutroAnimation
	// void StartWorldMarkerOutroAnimation(int32_t InPlayerId, int32_t InInstanceID);                                           // [0x9361cfc] Final|Native|Protected|BlueprintCallable|Const 
	// Function /Script/FortniteUI.FortHudContextTutorialTipsBase.StartWorldMarkerIntroAnimation
	// void StartWorldMarkerIntroAnimation();                                                                                   // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortHudContextTutorialTipsBase.StartLerpContextTutorialBall
	// void StartLerpContextTutorialBall(int32_t InPlayerId, int32_t InInstanceID, float TotalTime, float StartDelay);          // [0x9361bc0] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.FortHudContextTutorialTipsBase.SetPosition
	// void SetPosition(FVector2D Position, TEnumAsByte<EHorizontalAlignment> HorizontalAlignment, TEnumAsByte<EVerticalAlignment> VerticalAlignment); // [0x9361364] Final|Native|Protected|HasDefaults|BlueprintCallable 
	// Function /Script/FortniteUI.FortHudContextTutorialTipsBase.SetDefaultPlatformPosition
	// void SetDefaultPlatformPosition();                                                                                       // [0x9360d44] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.FortHudContextTutorialTipsBase.RegisterCloseButtonInput
	// void RegisterCloseButtonInput();                                                                                         // [0x9360708] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.FortHudContextTutorialTipsBase.OnButtonCloseProgressImplementation
	// void OnButtonCloseProgressImplementation(float Progress);                                                                // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortHudContextTutorialTipsBase.OnButtonCloseImplementation
	// void OnButtonCloseImplementation();                                                                                      // [0x1d9241c] Event|Protected|BlueprintEvent 
};

/// Class /Script/FortniteUI.FortHUDEquipProgressBase
/// Size: 0x0058 (0x000328 - 0x000380)
class UFortHUDEquipProgressBase : public UFortHUDElementWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 896;

public:
	CMember(UImage*)                                   Image_ProgressBar                                           OFFSET(get<T>, {0x328, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_TimeRemaining                                          OFFSET(get<T>, {0x330, 8, 0, 0})
	SMember(FGameplayTagContainer)                     RelevantGameplayCueTags                                     OFFSET(getStruct<T>, {0x338, 32, 0, 0})
	SMember(FName)                                     ProgressBarMaterialParamName                                OFFSET(getStruct<T>, {0x358, 4, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortHUDEquipProgressBase.OnTimeRemainingChanged
	// void OnTimeRemainingChanged(float TimeRemaining);                                                                        // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortHUDEquipProgressBase.OnProgressStarted
	// void OnProgressStarted(float Duration);                                                                                  // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortHUDEquipProgressBase.OnProgressEnded
	// void OnProgressEnded();                                                                                                  // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortHUDEquipProgressBase.HandleUIGameplayCueEvent
	// void HandleUIGameplayCueEvent(FName CueName, TEnumAsByte<EGameplayCueEvent> EventType, FGameplayCueParameters& Parameters); // [0x28cdeec] Final|Native|Private|HasOutParms 
	// Function /Script/FortniteUI.FortHUDEquipProgressBase.HandleReplayScrubComplete
	// void HandleReplayScrubComplete();                                                                                        // [0x935f3d8] Final|Native|Private 
	// Function /Script/FortniteUI.FortHUDEquipProgressBase.HandleFollowedPlayerChanged
	// void HandleFollowedPlayerChanged(AFortPlayerControllerSpectating* SpectatorPC, AFortPlayerState* NewFollowedPlayer);     // [0x2e71588] Final|Native|Private 
};

/// Class /Script/FortniteUI.FortHUDObjectiveSizeInterface
/// Size: 0x0000 (0x000028 - 0x000028)
class UFortHUDObjectiveSizeInterface : public UInterface
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 40;

public:
};

/// Class /Script/FortniteUI.FortHUDQualityLevelSelectTimer
/// Size: 0x0040 (0x0002E8 - 0x000328)
class UFortHUDQualityLevelSelectTimer : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 808;

public:
	CMember(UImage*)                                   Image_ProgressBar                                           OFFSET(get<T>, {0x300, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_TimeRemaining                                          OFFSET(get<T>, {0x308, 8, 0, 0})
	DMember(float)                                     TimerDuration                                               OFFSET(get<float>, {0x310, 4, 0, 0})
	SMember(FName)                                     ProgressBarMaterialParamName                                OFFSET(getStruct<T>, {0x314, 4, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortHUDQualityLevelSelectTimer.UpdateTimeRemainingText
	// void UpdateTimeRemainingText(float TimeRemaining);                                                                       // [0x936270c] Final|Native|Private 
	// Function /Script/FortniteUI.FortHUDQualityLevelSelectTimer.OnTimeRemainingChanged
	// void OnTimeRemainingChanged(float TimeRemaining);                                                                        // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortHUDQualityLevelSelectTimer.OnProgressStarted
	// void OnProgressStarted(float Duration);                                                                                  // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortHUDQualityLevelSelectTimer.OnProgressEnded
	// void OnProgressEnded();                                                                                                  // [0x1d9241c] Event|Protected|BlueprintEvent 
};

/// Class /Script/FortniteUI.FortHUDTagPromptWidgetBase
/// Size: 0x0010 (0x000328 - 0x000338)
class UFortHUDTagPromptWidgetBase : public UFortHUDElementWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 824;

public:
	SMember(FMulticastInlineDelegate)                  OnOpenedOrClosed                                            OFFSET(getStruct<T>, {0x328, 16, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortHUDTagPromptWidgetBase.OpenWidget
	// void OpenWidget(FFortHUDTagPromptData& PrompData);                                                                       // [0x935fd5c] Native|Event|Public|HasOutParms|BlueprintEvent 
	// Function /Script/FortniteUI.FortHUDTagPromptWidgetBase.CloseWidget
	// void CloseWidget();                                                                                                      // [0x1f2d1ac] Native|Event|Public|BlueprintCallable|BlueprintEvent 
};

/// Class /Script/FortniteUI.FortHUDTagPromptContainerWidget
/// Size: 0x0108 (0x000328 - 0x000430)
class UFortHUDTagPromptContainerWidget : public UFortHUDElementWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1072;

public:
	CMember(UFortHUDTagPromptTagMapping*)              TagMappingData                                              OFFSET(get<T>, {0x368, 8, 0, 0})
	DMember(float)                                     CoolDownTime                                                OFFSET(get<float>, {0x370, 4, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnOpenedOrClosed                                            OFFSET(getStruct<T>, {0x378, 16, 0, 0})
	CMember(TMap<FGameplayTag, float>)                 TagToTimeMap                                                OFFSET(get<T>, {0x388, 80, 0, 0})
	SMember(FFortHUDTagPromptData)                     PromptDataToShow                                            OFFSET(getStruct<T>, {0x3D8, 72, 0, 0})
	CMember(UOverlay*)                                 OverlayWidget                                               OFFSET(get<T>, {0x420, 8, 0, 0})
	SMember(FFortPrioritizedWidgetData)                PrioritizationData                                          OFFSET(getStruct<T>, {0x428, 2, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortHUDTagPromptContainerWidget.RequestPromptDataActivation
	// void RequestPromptDataActivation(FFortHUDTagPromptData& PromptData, FGameplayTag& tag);                                  // [0x9360a14] Final|Native|Public|HasOutParms 
	// Function /Script/FortniteUI.FortHUDTagPromptContainerWidget.OpenWidget
	// void OpenWidget(FFortHUDTagPromptData& PrompData);                                                                       // [0x935fcc0] Final|Native|Public|HasOutParms 
	// Function /Script/FortniteUI.FortHUDTagPromptContainerWidget.OnWidgetBaseOpenedOrClosed
	// void OnWidgetBaseOpenedOrClosed(bool bNewlyOpened);                                                                      // [0x935fc08] Final|Native|Public  
	// Function /Script/FortniteUI.FortHUDTagPromptContainerWidget.CloseWidget
	// void CloseWidget();                                                                                                      // [0x935a930] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/FortniteUI.FortHUDTargetUnderReticleWidget
/// Size: 0x0048 (0x0002E8 - 0x000330)
class UFortHUDTargetUnderReticleWidget : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 816;

public:
	CMember(TScriptInterface<Class>)                   Target                                                      OFFSET(get<T>, {0x2E8, 16, 0, 0})
	DMember(bool)                                      bKeepTargetUntilNewValidTarget                              OFFSET(get<bool>, {0x2F8, 1, 0, 0})
	SMember(FGameplayTagContainer)                     TargetRequiredTags                                          OFFSET(getStruct<T>, {0x300, 32, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortHUDTargetUnderReticleWidget.Setup
	// void Setup(bool bInKeepTargetUntilNewValidTarget, FGameplayTagContainer InTargetRequiredTags);                           // [0x93618b0] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.FortHUDTargetUnderReticleWidget.OnTargetHealthChanged
	// void OnTargetHealthChanged();                                                                                            // [0x8c92878] Native|Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortHUDTargetUnderReticleWidget.OnTargetDied
	// void OnTargetDied();                                                                                                     // [0x1339cf4] Native|Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortHUDTargetUnderReticleWidget.OnTargetDestroyed
	// void OnTargetDestroyed();                                                                                                // [0x1a6975c] Native|Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortHUDTargetUnderReticleWidget.OnTargetChanged
	// void OnTargetChanged();                                                                                                  // [0x1f2d1ac] Native|Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortHUDTargetUnderReticleWidget.OnTargetActorDestroyed
	// void OnTargetActorDestroyed(AActor* DestroyedActor);                                                                     // [0x935fb30] Final|Native|Private 
	// Function /Script/FortniteUI.FortHUDTargetUnderReticleWidget.HandleOnHUDTargetUnderReticle
	// void HandleOnHUDTargetUnderReticle(TScriptInterface<Class>& NewTarget);                                                  // [0x935f200] Final|Native|Protected|HasOutParms 
	// Function /Script/FortniteUI.FortHUDTargetUnderReticleWidget.ClearTarget
	// void ClearTarget();                                                                                                      // [0x935a888] Final|Native|Private|BlueprintCallable 
};

/// Class /Script/FortniteUI.FortInfoWindow
/// Size: 0x0008 (0x000570 - 0x000578)
class UFortInfoWindow : public UFortActivatablePanel
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1400;

public:
	CMember(UCommonListView*)                          InfoEntries                                                 OFFSET(get<T>, {0x570, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortInfoWindow.GetListWidget
	// UWidget* GetListWidget(UObject* Item);                                                                                   // [0x935cad0] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/FortniteUI.FortInputControllerData
/// Size: 0x0000 (0x0000E8 - 0x0000E8)
class UFortInputControllerData : public UCommonInputBaseControllerData
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 232;

public:
};

/// Class /Script/FortniteUI.FortInteractionIndicatorWidget
/// Size: 0x00B0 (0x0003D0 - 0x000480)
class UFortInteractionIndicatorWidget : public UFortActorIndicatorWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1152;

public:
	CMember(UCommonVisibilitySwitcher*)                Switcher_PrimaryContext                                     OFFSET(get<T>, {0x3D0, 8, 0, 0})
	CMember(UCommonVisibilitySwitcher*)                Switcher_SecondaryContext                                   OFFSET(get<T>, {0x3D8, 8, 0, 0})
	CMember(TMap<UClass*, UFortInteractContextInfoWidget*>) PrimaryContextOverrideMap                              OFFSET(get<T>, {0x3E0, 80, 0, 0})
	CMember(TMap<UClass*, UFortInteractContextInfoWidget*>) SecondaryContextOverrideMap                            OFFSET(get<T>, {0x430, 80, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortInteractionIndicatorWidget.HandleRemoveContextOverride
	// void HandleRemoveContextOverride(UClass* ContextOverrideWidget, bool bPrimary);                                          // [0x935f310] Final|Native|Private 
	// Function /Script/FortniteUI.FortInteractionIndicatorWidget.HandleImprovedDBNOStateChanged
	// void HandleImprovedDBNOStateChanged(bool bImprovedDBNOEnabled);                                                          // [0x935e118] Final|Native|Private 
	// Function /Script/FortniteUI.FortInteractionIndicatorWidget.HandleAddContextOverride
	// void HandleAddContextOverride(UClass* ContextOverrideWidget, bool bPrimary);                                             // [0x935cd84] Final|Native|Private 
	// Function /Script/FortniteUI.FortInteractionIndicatorWidget.ActivateContextOverride
	// UFortInteractContextInfoWidget* ActivateContextOverride(UClass*& ContextOverrideWidget, UFortInteractContextInfo* ContextInfo, bool bPrimary); // [0x9359c54] Final|Native|Private|HasOutParms|BlueprintCallable 
};

/// Class /Script/FortniteUI.FortItemCooldownWidget
/// Size: 0x00F0 (0x0002E8 - 0x0003D8)
class UFortItemCooldownWidget : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 984;

public:
	SMember(FMulticastInlineDelegate)                  OnCooldownStartedEvent                                      OFFSET(getStruct<T>, {0x2E8, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnCooldownStoppedEvent                                      OFFSET(getStruct<T>, {0x2F8, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnCooldownUpdatedEvent                                      OFFSET(getStruct<T>, {0x308, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnAmmoRegenerationUpdated_Delegate                          OFFSET(getStruct<T>, {0x318, 16, 0, 0})
	CMember(UCommonTextBlock*)                         CooldownText                                                OFFSET(get<T>, {0x328, 8, 0, 0})
	CMember(UImage*)                                   CooldownImage                                               OFFSET(get<T>, {0x330, 8, 0, 0})
	CMember(UImage*)                                   CooldownChargingImage                                       OFFSET(get<T>, {0x338, 8, 0, 0})
	SMember(FName)                                     CooldownMaterialParameterName                               OFFSET(getStruct<T>, {0x340, 4, 0, 0})
	CMember(TArray<EFortItemCooldownType>)             CooldownTypesSupported                                      OFFSET(get<T>, {0x348, 16, 0, 0})
	SMember(FEventMessageTag)                          DirectProgressUpdateTag                                     OFFSET(getStruct<T>, {0x358, 4, 0, 0})
	CMember(UMaterialInstanceDynamic*)                 CooldownPercentageMID                                       OFFSET(get<T>, {0x360, 8, 0, 0})
	DMember(bool)                                      bAmmoRegenAvailableState                                    OFFSET(get<bool>, {0x368, 1, 0, 0})
	DMember(bool)                                      bDirectUpdateState                                          OFFSET(get<bool>, {0x369, 1, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortItemCooldownWidget.TryStartUpdateCooldown_BP
	// void TryStartUpdateCooldown_BP();                                                                                        // [0x93624f8] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortItemCooldownWidget.SetItem
	// void SetItem(UFortWorldItem* InWorldItem);                                                                               // [0x9361264] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortItemCooldownWidget.OnWorldItemDestroyed
	// void OnWorldItemDestroyed();                                                                                             // [0x935fc88] Final|Native|Private 
	// Function /Script/FortniteUI.FortItemCooldownWidget.OnCooldownUpdated
	// void OnCooldownUpdated(EFortItemCooldownType CooldownType, float CooldownDuration, float CooldownRemaining, float CooldownPercentage); // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.FortItemCooldownWidget.OnCooldownStopped
	// void OnCooldownStopped(EFortItemCooldownType CooldownType);                                                              // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.FortItemCooldownWidget.OnCooldownStarted
	// void OnCooldownStarted(EFortItemCooldownType CooldownType, float CooldownDuration);                                      // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.FortItemCooldownWidget.OnAmmoRegenerationUpdated
	// void OnAmmoRegenerationUpdated(bool bOutAmmoRegenAvailableState);                                                        // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.FortItemCooldownWidget.HandleLocalPlayerSpawned
	// void HandleLocalPlayerSpawned();                                                                                         // [0x935efcc] Final|Native|Private 
	// Function /Script/FortniteUI.FortItemCooldownWidget.HandleLocalPlayerRevived
	// void HandleLocalPlayerRevived();                                                                                         // [0x935efcc] Final|Native|Private 
	// Function /Script/FortniteUI.FortItemCooldownWidget.HandleLocalPlayerDied
	// void HandleLocalPlayerDied(FFortPlayerDeathReport& DeathReport);                                                         // [0x935ef28] Final|Native|Private|HasOutParms 
};

/// Class /Script/FortniteUI.FortItemShopSubsystem
/// Size: 0x0008 (0x000030 - 0x000038)
class UFortItemShopSubsystem : public UWorldSubsystem
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 56;

public:
	CMember(UFortCommunityVotingManager*)              VotingManager                                               OFFSET(get<T>, {0x30, 8, 0, 0})
};

/// Class /Script/FortniteUI.FortItemWidget_NUI
/// Size: 0x0028 (0x000178 - 0x0001A0)
class UFortItemWidget_NUI : public UWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 416;

public:
	CMember(TWeakObjectPtr<UFortItem*>)                ItemToRepresent                                             OFFSET(get<T>, {0x178, 8, 0, 0})
	CMember(TScriptInterface<Class>)                   ItemViewContext                                             OFFSET(get<T>, {0x180, 16, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortItemWidget_NUI.SetItemViewContext
	// void SetItemViewContext(TScriptInterface<Class> ItemViewContext);                                                        // [0x939cd04] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortItemWidget_NUI.SetItemToRepresent
	// void SetItemToRepresent(UFortItem* ItemToRepresent);                                                                     // [0x939cc84] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/FortniteUI.FortKeybindWidget
/// Size: 0x08A8 (0x0002E8 - 0x000B90)
class UFortKeybindWidget : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 2960;

public:
	SMember(FName)                                     BoundAction                                                 OFFSET(getStruct<T>, {0x2E8, 4, 0, 0})
	CMember(UInputAction*)                             BoundInputAction                                            OFFSET(get<T>, {0x2F0, 8, 0, 0})
	CMember(UInputMappingContext*)                     InputContextOverride                                        OFFSET(get<T>, {0x2F8, 8, 0, 0})
	CMember(TArray<FName>)                             BoundActionFallbacks                                        OFFSET(get<T>, {0x300, 16, 0, 0})
	DMember(float)                                     AxisScale                                                   OFFSET(get<float>, {0x310, 4, 0, 0})
	SMember(FKey)                                      BoundKeyFallback                                            OFFSET(getStruct<T>, {0x318, 24, 0, 0})
	CMember(ECommonInputType)                          InputTypeOverride                                           OFFSET(get<T>, {0x330, 1, 0, 0})
	CMember(ECommonGamepadType)                        GamepadTypeOverride                                         OFFSET(get<T>, {0x331, 1, 0, 0})
	SMember(FName)                                     PresetNameOverride                                          OFFSET(getStruct<T>, {0x334, 4, 0, 0})
	DMember(bool)                                      bForcedHoldKeybind                                          OFFSET(get<bool>, {0x338, 1, 0, 0})
	CMember(EFortKeybindForcedHoldStatus)              ForcedHoldKeybindStatus                                     OFFSET(get<T>, {0x339, 1, 0, 0})
	DMember(bool)                                      bIsHoldKeybind                                              OFFSET(get<bool>, {0x33A, 1, 0, 0})
	DMember(bool)                                      bShowKeybindBorder                                          OFFSET(get<bool>, {0x33B, 1, 0, 0})
	SMember(FVector2D)                                 FrameSize                                                   OFFSET(getStruct<T>, {0x340, 16, 0, 0})
	DMember(bool)                                      bShowTimeCountDown                                          OFFSET(get<bool>, {0x350, 1, 0, 0})
	SMember(FKey)                                      BoundKey                                                    OFFSET(getStruct<T>, {0x358, 24, 0, 0})
	SMember(FSlateBrush)                               HoldProgressBrush                                           OFFSET(getStruct<T>, {0x370, 192, 0, 0})
	SMember(FSlateBrush)                               KeyBindTextBorder                                           OFFSET(getStruct<T>, {0x430, 192, 0, 0})
	DMember(bool)                                      bShowUnboundStatus                                          OFFSET(get<bool>, {0x4F0, 1, 0, 0})
	SMember(FSlateFontInfo)                            KeyBindTextFont                                             OFFSET(getStruct<T>, {0x4F8, 88, 0, 0})
	SMember(FSlateFontInfo)                            CountdownTextFont                                           OFFSET(getStruct<T>, {0x550, 88, 0, 0})
	SMember(FMeasuredText)                             CountdownText                                               OFFSET(getStruct<T>, {0x5A8, 48, 0, 0})
	SMember(FMeasuredText)                             KeybindText                                                 OFFSET(getStruct<T>, {0x5D8, 48, 0, 0})
	SMember(FMargin)                                   KeybindTextPadding                                          OFFSET(getStruct<T>, {0x608, 16, 0, 0})
	SMember(FVector2D)                                 KeybindFrameMinimumSize                                     OFFSET(getStruct<T>, {0x618, 16, 0, 0})
	SMember(FName)                                     PercentageMaterialParameterName                             OFFSET(getStruct<T>, {0x628, 4, 0, 0})
	CMember(UMaterialInstanceDynamic*)                 ProgressPercentageMID                                       OFFSET(get<T>, {0x630, 8, 0, 0})
	CMember(TEnumAsByte<EFortBrushSize>)               BrushSize                                                   OFFSET(get<T>, {0x638, 1, 0, 0})
	SMember(FFortMultiSizeBrush)                       FrameMultiBrush                                             OFFSET(getStruct<T>, {0x640, 1152, 0, 0})
	SMember(FSlateBrush)                               CachedKeyBrush                                              OFFSET(getStruct<T>, {0xAD0, 192, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortKeybindWidget.UpdateKeybindWidget
	// void UpdateKeybindWidget();                                                                                              // [0x2acd2b8] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortKeybindWidget.StopHoldProgress
	// void StopHoldProgress(FName HoldActionName, bool bCompletedSuccessfully);                                                // [0x273e980] Final|RequiredAPI|Native|Public 
	// Function /Script/FortniteUI.FortKeybindWidget.StartHoldProgress
	// void StartHoldProgress(FName HoldActionName, float HoldDuration);                                                        // [0x939e198] Final|RequiredAPI|Native|Public 
	// Function /Script/FortniteUI.FortKeybindWidget.SetShowProgressCountDown
	// void SetShowProgressCountDown(bool bShow);                                                                               // [0x939de14] Final|RequiredAPI|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortKeybindWidget.SetPresetNameOverride
	// void SetPresetNameOverride(FName NewValue);                                                                              // [0x939d6e4] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortKeybindWidget.SetInputContextOverride
	// void SetInputContextOverride(UInputMappingContext* NewContextOverride);                                                  // [0x939cbfc] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortKeybindWidget.SetForcedHoldKeybindStatus
	// void SetForcedHoldKeybindStatus(EFortKeybindForcedHoldStatus InForcedHoldKeybindStatus);                                 // [0x939cb78] Final|RequiredAPI|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortKeybindWidget.SetForcedHoldKeybind
	// void SetForcedHoldKeybind(bool InForcedHoldKeybind);                                                                     // [0x939caf0] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortKeybindWidget.SetBrushSize
	// void SetBrushSize(TEnumAsByte<EFortBrushSize> InBrushSize);                                                              // [0x939c7b8] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortKeybindWidget.SetBoundKey
	// void SetBoundKey(FKey NewBoundAction);                                                                                   // [0x939c5b4] Final|RequiredAPI|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortKeybindWidget.SetBoundInputAction
	// void SetBoundInputAction(UInputAction* NewAction);                                                                       // [0x939c52c] Final|RequiredAPI|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortKeybindWidget.SetBoundAction
	// void SetBoundAction(FName NewBoundAction);                                                                               // [0x2f0790c] Final|RequiredAPI|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortKeybindWidget.SetAxisScale
	// void SetAxisScale(float NewValue);                                                                                       // [0x939c4ac] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortKeybindWidget.IsHoldKeybind
	// bool IsHoldKeybind();                                                                                                    // [0x9397a30] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortKeybindWidget.IsBoundKeyValid
	// bool IsBoundKeyValid();                                                                                                  // [0x9397970] Final|Native|Public|Const 
	// Function /Script/FortniteUI.FortKeybindWidget.GetBrushSize
	// TEnumAsByte<EFortBrushSize> GetBrushSize();                                                                              // [0x330fc20] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortKeybindWidget.GetBrushForKey
	// bool GetBrushForKey(TEnumAsByte<EFortBrushSize> InBrushSize, FSlateBrush& Brush);                                        // [0x9395dc4] Final|Native|Protected|HasOutParms|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/FortniteUI.FortLegacySlateBridgeWidget
/// Size: 0x0018 (0x000188 - 0x0001A0)
class UFortLegacySlateBridgeWidget : public UNativeWidgetHost
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 416;

public:
	CMember(EFortLegacySlateWidget)                    ContainedWidgetType                                         OFFSET(get<T>, {0x188, 1, 0, 0})
	DMember(float)                                     DPIScaleFactor                                              OFFSET(get<float>, {0x18C, 4, 0, 0})
	SMember(FDelegateProperty)                         OnClose                                                     OFFSET(getStruct<T>, {0x190, 12, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortLegacySlateBridgeWidget.UpdateSlateWidget
	// void UpdateSlateWidget(EFortLegacySlateWidget SlateWidgetType);                                                          // [0x939e764] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortLegacySlateBridgeWidget.SetOnCloseHandler
	// void SetOnCloseHandler(FDelegateProperty& OnCloseHandler);                                                               // [0x939d47c] Final|Native|Public|HasOutParms|BlueprintCallable 
};

/// Class /Script/FortniteUI.FortLoadingVideoPlayer
/// Size: 0x00E0 (0x000028 - 0x000108)
class UFortLoadingVideoPlayer : public UObject
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 264;

public:
	CMember(UMediaPlayer*)                             VideoPlayer                                                 OFFSET(get<T>, {0xD0, 8, 0, 0})
	CMember(UMediaTexture*)                            VideoTexture                                                OFFSET(get<T>, {0xD8, 8, 0, 0})
	CMember(UMediaSoundComponent*)                     SoundComponent                                              OFFSET(get<T>, {0xE0, 8, 0, 0})
	CMember(UFortStreamMediaSource*)                   MediaSource                                                 OFFSET(get<T>, {0xE8, 8, 0, 0})
	CMember(UFileMediaSource*)                         FileMediaSource                                             OFFSET(get<T>, {0xF8, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortLoadingVideoPlayer.RequestSuccess
	// void RequestSuccess(FString URL);                                                                                        // [0x939a3f4] Final|Native|Private 
	// Function /Script/FortniteUI.FortLoadingVideoPlayer.RequestFailure
	// void RequestFailure(FString URL);                                                                                        // [0x9399cb8] Final|Native|Private 
	// Function /Script/FortniteUI.FortLoadingVideoPlayer.GetMediaTexture
	// UMediaTexture* GetMediaTexture();                                                                                        // [0x834c048] Final|Native|Public  
	// Function /Script/FortniteUI.FortLoadingVideoPlayer.GetMediaPlayer
	// UMediaPlayer* GetMediaPlayer();                                                                                          // [0x834c574] Final|Native|Public  
};

/// Class /Script/FortniteUI.FortUserPermissions
/// Size: 0x0028 (0x000028 - 0x000050)
class UFortUserPermissions : public UObject
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 80;

public:
};

/// Class /Script/FortniteUI.FortMatchmakingKnobsSpinnerButton
/// Size: 0x0150 (0x0014F0 - 0x001640)
class UFortMatchmakingKnobsSpinnerButton : public UCommonRotator
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 5696;

public:
	SMember(FMulticastInlineDelegate)                  OnKnobDataInitialized                                       OFFSET(getStruct<T>, {0x1560, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnHandleOptionWidgetGenerated                               OFFSET(getStruct<T>, {0x1570, 16, 0, 0})
	CMember(UObject*)                                  OptionDataObj                                               OFFSET(get<T>, {0x1580, 8, 0, 0})
	CMember(APlayerState*)                             AssociatedPlayerState                                       OFFSET(get<T>, {0x1588, 8, 0, 0})
	CMember(UFortUserPermissions*)                     RepresentedPlayer                                           OFFSET(get<T>, {0x1590, 8, 0, 0})
	CMember(UFortCreativeOption*)                      CreativeOption                                              OFFSET(get<T>, {0x1598, 8, 0, 0})
	CMember(UMaterial*)                                DisplayImageMaterial                                        OFFSET(get<T>, {0x15D8, 8, 0, 0})
	CMember(USocialUser*)                              SocialUser                                                  OFFSET(get<T>, {0x15E0, 8, 0, 0})
	DMember(bool)                                      bCanDisableFromUserOption                                   OFFSET(get<bool>, {0x15E8, 1, 0, 0})
	CMember(USizeBox*)                                 SizeBox_TextEntry                                           OFFSET(get<T>, {0x15F0, 8, 0, 0})
	CMember(UFortEditableFilteredCountedTextBox*)      FilteredTextEntry_Widget                                    OFFSET(get<T>, {0x15F8, 8, 0, 0})
	CMember(UCommonTextBlock*)                         TextBlock_OptionDisplayName                                 OFFSET(get<T>, {0x1600, 8, 0, 0})
	DMember(bool)                                      bIsUserOptionEnabled                                        OFFSET(get<bool>, {0x1608, 1, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortMatchmakingKnobsSpinnerButton.ShouldHandleNavigation
	// void ShouldHandleNavigation(bool& bOutShouldHandleNavigation, EUINavigation NavigationType);                             // [0x1d9241c] Event|Protected|HasOutParms|BlueprintEvent 
	// Function /Script/FortniteUI.FortMatchmakingKnobsSpinnerButton.SetSpinnerOptionsVisiblity
	// void SetSpinnerOptionsVisiblity(bool bVisible);                                                                          // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.FortMatchmakingKnobsSpinnerButton.OnSpinnerRotated
	// void OnSpinnerRotated(int32_t Value, bool bUserInitiated);                                                               // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.FortMatchmakingKnobsSpinnerButton.OnNavigatedRight
	// void OnNavigatedRight();                                                                                                 // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.FortMatchmakingKnobsSpinnerButton.OnNavigatedLeft
	// void OnNavigatedLeft();                                                                                                  // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.FortMatchmakingKnobsSpinnerButton.OnMinigameVolumeEntered
	// void OnMinigameVolumeEntered(FEventMessageTag Channel, FPlayerEnterSpatialActorContextLegacyMinigame& PlayerEnteredVolumeContext); // [0x9398548] Final|Native|Protected|HasOutParms 
	// Function /Script/FortniteUI.FortMatchmakingKnobsSpinnerButton.OnLocalPlayerExperienceStateChanged
	// void OnLocalPlayerExperienceStateChanged(FEventMessageTag Channel, FSpatialGameplayActorLoadingStateUpdatedPlayerContext& StateContext); // [0x9398388] Final|Native|Protected|HasOutParms 
	// Function /Script/FortniteUI.FortMatchmakingKnobsSpinnerButton.OnLoadingStateChanged
	// void OnLoadingStateChanged(bool bCurrentlyLoading);                                                                      // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.FortMatchmakingKnobsSpinnerButton.OnIsUserOptionEnabledChanged
	// void OnIsUserOptionEnabledChanged();                                                                                     // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.FortMatchmakingKnobsSpinnerButton.HasMatchingTags
	// bool HasMatchingTags(FGameplayTagContainer Tags);                                                                        // [0x93975f8] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortMatchmakingKnobsSpinnerButton.GetTitleText
	// FText GetTitleText();                                                                                                    // [0x9396718] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortMatchmakingKnobsSpinnerButton.GetDescription
	// FText GetDescription();                                                                                                  // [0x9395ec0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/FortniteUI.FortMicIndicatorWidget
/// Size: 0x0030 (0x0002E8 - 0x000318)
class UFortMicIndicatorWidget : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 792;

public:
};

/// Class /Script/FortniteUI.FortModalContainerWidget
/// Size: 0x0058 (0x000178 - 0x0001D0)
class UFortModalContainerWidget : public UWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 464;

public:
	CMember(EModalContainerSize)                       SizeConstraint                                              OFFSET(get<T>, {0x180, 1, 0, 0})
	CMember(TArray<FFortModalContainerSizeEntry>)      DefaultSizeEntries                                          OFFSET(get<T>, {0x188, 16, 0, 0})
	CMember(UFortModalContainerData*)                  OverrideSizeEntries                                         OFFSET(get<T>, {0x198, 8, 0, 0})
	CMember(UWidget*)                                  TopContent                                                  OFFSET(get<T>, {0x1A0, 8, 0, 0})
	CMember(UWidget*)                                  MiddleContent                                               OFFSET(get<T>, {0x1A8, 8, 0, 0})
	CMember(UWidget*)                                  BottomContent                                               OFFSET(get<T>, {0x1B0, 8, 0, 0})
	CMember(UWidget*)                                  BackgroudContent                                            OFFSET(get<T>, {0x1B8, 8, 0, 0})
};

/// Class /Script/FortniteUI.FortMediaInfo
/// Size: 0x0018 (0x000028 - 0x000040)
class UFortMediaInfo : public UObject
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 64;

public:
	CMember(UMediaPlayer*)                             MediaPlayer                                                 OFFSET(get<T>, {0x28, 8, 0, 0})
	CMember(UMediaSource*)                             MediaSource                                                 OFFSET(get<T>, {0x30, 8, 0, 0})
	DMember(bool)                                      bVideoStreamed                                              OFFSET(get<bool>, {0x38, 1, 0, 0})
};

/// Class /Script/FortniteUI.FortMovieWidget
/// Size: 0x0038 (0x0002D0 - 0x000308)
class UFortMovieWidget : public UFortUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 776;

public:
	SMember(FMulticastInlineDelegate)                  OnMediaOpened                                               OFFSET(getStruct<T>, {0x2D0, 16, 0, 0})
	CMember(UMediaPlayer*)                             MediaPlayer                                                 OFFSET(get<T>, {0x2E0, 8, 0, 0})
	CMember(UMediaTexture*)                            MediaTexture                                                OFFSET(get<T>, {0x2E8, 8, 0, 0})
	DMember(bool)                                      bIncludeAudio                                               OFFSET(get<bool>, {0x2F0, 1, 0, 0})
	CMember(USoundClass*)                              SoundClass                                                  OFFSET(get<T>, {0x2F8, 8, 0, 0})
	CMember(UMediaSoundComponent*)                     SoundComponent                                              OFFSET(get<T>, {0x300, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortMovieWidget.SetMediaSource
	// bool SetMediaSource(UMediaPlayer* InMediaPlayer, UMediaSource* InMediaSource, FMediaPlayerOptions& PlayerOptions, bool bPlayOnOpen, bool bLooping); // [0x939cfe8] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/FortniteUI.FortMovieWidget.RequestStopMovie
	// void RequestStopMovie();                                                                                                 // [0x939a3e0] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortMovieWidget.RequestPlayMovie
	// void RequestPlayMovie(bool bShouldRewind);                                                                               // [0x939a364] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortMovieWidget.MediaDimensionsUpdated
	// void MediaDimensionsUpdated(float NewWidth, float NewHeight);                                                            // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.FortMovieWidget.HasPlayerForSource
	// bool HasPlayerForSource(UMediaSource* InMediaSource);                                                                    // [0x93977e4] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortMovieWidget.GetMediaTexture
	// UMediaTexture* GetMediaTexture();                                                                                        // [0x9396048] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortMovieWidget.GetMediaSoundComponent
	// UMediaSoundComponent* GetMediaSoundComponent();                                                                          // [0x84c0024] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortMovieWidget.GetMediaPlayer
	// UMediaPlayer* GetMediaPlayer();                                                                                          // [0x8a2ad0c] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortMovieWidget.CleanupMediaPlayer
	// void CleanupMediaPlayer();                                                                                               // [0x9394eac] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/FortniteUI.FortNodeCanvasInterface
/// Size: 0x0000 (0x000028 - 0x000028)
class UFortNodeCanvasInterface : public UInterface
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 40;

public:
};

/// Class /Script/FortniteUI.FortPickerData
/// Size: 0x00C0 (0x000030 - 0x0000F0)
class UFortPickerData : public UDataAsset
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 240;

public:
	CMember(TArray<FBuildingCategoryOptionData>)       BuildingCategories                                          OFFSET(get<T>, {0x30, 16, 0, 0})
	CMember(TArray<FBuildingOptionData>)               WallOptions                                                 OFFSET(get<T>, {0x40, 16, 0, 0})
	CMember(TArray<FBuildingOptionData>)               FloorOptions                                                OFFSET(get<T>, {0x50, 16, 0, 0})
	CMember(TArray<FBuildingOptionData>)               StairOptions                                                OFFSET(get<T>, {0x60, 16, 0, 0})
	CMember(TArray<FBuildingOptionData>)               RoofOptions                                                 OFFSET(get<T>, {0x70, 16, 0, 0})
	CMember(TArray<FItemCategoryOptionData>)           TrapCategories                                              OFFSET(get<T>, {0x80, 16, 0, 0})
	CMember(TArray<FItemCategoryOptionData>)           WeaponCategories                                            OFFSET(get<T>, {0x90, 16, 0, 0})
	CMember(TArray<FRadialOptionData>)                 SocialCategories                                            OFFSET(get<T>, {0xA0, 16, 0, 0})
	CMember(TArray<FChatOptionData>)                   ChatOptions                                                 OFFSET(get<T>, {0xB0, 16, 0, 0})
	CMember(TArray<UAthenaQuickChatBank*>)             SquadChatOptionBanks                                        OFFSET(get<T>, {0xC0, 16, 0, 0})
	CMember(TArray<FMapNoteOptionData>)                MapNoteOptions                                              OFFSET(get<T>, {0xD0, 16, 0, 0})
	CMember(TArray<FEmoteOptionData>)                  EmoteOptions                                                OFFSET(get<T>, {0xE0, 16, 0, 0})
};

/// Class /Script/FortniteUI.FortPinGrantCodeInfoWidget
/// Size: 0x0058 (0x0002E8 - 0x000340)
class UFortPinGrantCodeInfoWidget : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 832;

public:
	CMember(UCommonButtonBase*)                        Button_GenerateCode                                         OFFSET(get<T>, {0x2F8, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_PinCode                                                OFFSET(get<T>, {0x300, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_ErrorMsg                                               OFFSET(get<T>, {0x308, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_ActivationURL                                          OFFSET(get<T>, {0x310, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_CodeExpiringTime                                       OFFSET(get<T>, {0x318, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_Info                                                   OFFSET(get<T>, {0x320, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_PinPromptTypeTitle                                     OFFSET(get<T>, {0x328, 8, 0, 0})
	CMember(UVerticalBox*)                             Container_ActivationURL                                     OFFSET(get<T>, {0x330, 8, 0, 0})
	CMember(UCircularThrobber*)                        Throbber_GettingPinCode                                     OFFSET(get<T>, {0x338, 8, 0, 0})
};

/// Class /Script/FortniteUI.FortPlaylistUIExtensionLoader
/// Size: 0x00A8 (0x000028 - 0x0000D0)
class UFortPlaylistUIExtensionLoader : public UObject
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 208;

public:
	CMember(TMap<UObject*, UUserWidget*>)              ObjectBoundWidgets                                          OFFSET(get<T>, {0x38, 80, 0, 0})
	CMember(TArray<UUserWidget*>)                      OrphanWidgets                                               OFFSET(get<T>, {0x88, 16, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortPlaylistUIExtensionLoader.HandlePlaylistExtensionWidgetCreatedNotSupported
	// void HandlePlaylistExtensionWidgetCreatedNotSupported(EUIExtensionSlot ExtensionSlot, UUserWidget* Widget);              // [0x9396f30] Final|Native|Private 
	// Function /Script/FortniteUI.FortPlaylistUIExtensionLoader.HandleClearPlaylistExtensionWidgetNotSupported
	// void HandleClearPlaylistExtensionWidgetNotSupported();                                                                   // [0x9396910] Final|Native|Private 
};

/// Class /Script/FortniteUI.FortPlaylistUIExtensionPrioritizedWidgetSwitcher
/// Size: 0x0020 (0x000270 - 0x000290)
class UFortPlaylistUIExtensionPrioritizedWidgetSwitcher : public UFortPrioritizedWidgetSwitcher
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 656;

public:
	CMember(TEnumAsByte<EHorizontalAlignment>)         ContentHorizontalAlignment                                  OFFSET(get<T>, {0x270, 1, 0, 0})
	CMember(TEnumAsByte<EVerticalAlignment>)           ContentVerticalAlignment                                    OFFSET(get<T>, {0x271, 1, 0, 0})
	CMember(TArray<EUIExtensionSlot>)                  ExtensionSlots                                              OFFSET(get<T>, {0x278, 16, 0, 0})
	CMember(UFortPlaylistUIExtensionLoader*)           PlaylistUIExtensionLoader                                   OFFSET(get<T>, {0x288, 8, 0, 0})
};

/// Class /Script/FortniteUI.FortPlaylistUIExtensionSlot
/// Size: 0x0018 (0x000260 - 0x000278)
class UFortPlaylistUIExtensionSlot : public UDynamicEntryBox
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 632;

public:
	CMember(TArray<EUIExtensionSlot>)                  ExtensionSlots                                              OFFSET(get<T>, {0x260, 16, 0, 0})
	CMember(UFortPlaylistUIExtensionLoader*)           PlaylistUIExtensionLoader                                   OFFSET(get<T>, {0x270, 8, 0, 0})
};

/// Class /Script/FortniteUI.FortPlaysetInventoryPanelData
/// Size: 0x0000 (0x000060 - 0x000060)
class UFortPlaysetInventoryPanelData : public UFortCreativeItemListPanelData
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 96;

public:
};

/// Class /Script/FortniteUI.FortPopupMenu
/// Size: 0x0008 (0x000550 - 0x000558)
class UFortPopupMenu : public UCommonPopupMenuLegacy
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1368;

public:
};

/// Class /Script/FortniteUI.FortPopupMenu_Legacy
/// Size: 0x0008 (0x000550 - 0x000558)
class UFortPopupMenu_Legacy : public UCommonPopupMenuLegacy
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1368;

public:
};

/// Class /Script/FortniteUI.FortPortalHUDDetails
/// Size: 0x0038 (0x0003D0 - 0x000408)
class UFortPortalHUDDetails : public UFortActorIndicatorWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1032;

public:
	CMember(UAthenaMarkerPointer*)                     MarkerPointer                                               OFFSET(get<T>, {0x3D8, 8, 0, 0})
	CMember(UCommonActivatableWidgetSwitcher*)         MobileInfo_Matchmaking_Switcher                             OFFSET(get<T>, {0x400, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortPortalHUDDetails.SetCachedWorldPos
	// void SetCachedWorldPos(FVector InWorldPos);                                                                              // [0x939c848] Final|RequiredAPI|Native|Protected|HasDefaults|BlueprintCallable 
	// Function /Script/FortniteUI.FortPortalHUDDetails.SetActiveMatchmakingTextIndex
	// void SetActiveMatchmakingTextIndex(int32_t NewIndex);                                                                    // [0x939c42c] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.FortPortalHUDDetails.SetActiveContextInfo
	// void SetActiveContextInfo(UFortInteractContextInfo* ActiveContextInfo);                                                  // [0x939c3ac] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.FortPortalHUDDetails.HandleMatchmakingComplete
	// void HandleMatchmakingComplete(bool Success);                                                                            // [0x9396ce0] Final|Native|Protected 
	// Function /Script/FortniteUI.FortPortalHUDDetails.GetActiveContextInfo
	// UFortInteractContextInfo* GetActiveContextInfo();                                                                        // [0x9395d48] Final|Native|Protected|BlueprintCallable|BlueprintPure 
	// Function /Script/FortniteUI.FortPortalHUDDetails.ClearCachedWorldPos
	// void ClearCachedWorldPos();                                                                                              // [0x9394ee4] Final|RequiredAPI|Native|Protected|BlueprintCallable 
};

/// Class /Script/FortniteUI.FortQuestNotificationHandler
/// Size: 0x0010 (0x0001E0 - 0x0001F0)
class UFortQuestNotificationHandler : public UFortDialogNotificationHandler
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 496;

public:
	CMember(UFortQuestItem*)                           Quest                                                       OFFSET(get<T>, {0x1E0, 8, 0, 0})
};

/// Class /Script/FortniteUI.FortRebootCardsCollectedWidget
/// Size: 0x0008 (0x0002E8 - 0x0002F0)
class UFortRebootCardsCollectedWidget : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 752;

public:
	DMember(int32_t)                                   NumCardsCollected                                           OFFSET(get<int32_t>, {0x2E8, 4, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortRebootCardsCollectedWidget.OnRebootCardsCollectedChanged
	// void OnRebootCardsCollectedChanged();                                                                                    // [0x1d9241c] Event|Protected|BlueprintEvent 
};

/// Class /Script/FortniteUI.FortRedeemCodeBase
/// Size: 0x0008 (0x000570 - 0x000578)
class UFortRedeemCodeBase : public UFortActivatablePanel
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1400;

public:
	CMember(UEditableText*)                            EditableText_FriendCodeEntry                                OFFSET(get<T>, {0x570, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortRedeemCodeBase.RedeemFriendCode
	// void RedeemFriendCode(FString FriendCode);                                                                               // [0x9398ef0] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortRedeemCodeBase.OnRedeemFriendCodeComplete
	// void OnRedeemFriendCodeComplete(bool bSuccess, ERedeemCodeFailureReason FailureReason);                                  // [0x1d9241c] Event|Public|BlueprintEvent 
};

/// Class /Script/FortniteUI.FortResultsSummaryScreenWidget
/// Size: 0x0000 (0x0002E8 - 0x0002E8)
class UFortResultsSummaryScreenWidget : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 744;

public:
};

/// Class /Script/FortniteUI.FortResultsTeleportScreenWidget
/// Size: 0x0028 (0x0002E8 - 0x000310)
class UFortResultsTeleportScreenWidget : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 784;

public:
	DMember(float)                                     ExitTime                                                    OFFSET(get<float>, {0x2E8, 4, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortResultsTeleportScreenWidget.StartExitTimer
	// void StartExitTimer();                                                                                                   // [0x939e184] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortResultsTeleportScreenWidget.OnExitTimerFinished
	// void OnExitTimerFinished();                                                                                              // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.FortResultsTeleportScreenWidget.OnExitTimeRemainingUpdated
	// void OnExitTimeRemainingUpdated(int32_t TimeRemainingSeconds);                                                           // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.FortResultsTeleportScreenWidget.OnExitTimePercentagePassedUpdated
	// void OnExitTimePercentagePassedUpdated(float Percent);                                                                   // [0x1d9241c] Event|Public|BlueprintEvent 
};

/// Class /Script/FortniteUI.FortResultsWidget
/// Size: 0x00C8 (0x000538 - 0x000600)
class UFortResultsWidget : public UCommonActivatablePanelLegacy
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1536;

public:
	DMember(int32_t)                                   AdditionalGrantedMissionPoints                              OFFSET(get<int32_t>, {0x5B0, 4, 0, 0})
	CMember(TArray<UFortItem*>)                        RewardedBadges                                              OFFSET(get<T>, {0x5B8, 16, 0, 0})
	CMember(TArray<UFortItem*>)                        MissedBadges                                                OFFSET(get<T>, {0x5C8, 16, 0, 0})
	CMember(TArray<UFortItem*>)                        RewardedItems                                               OFFSET(get<T>, {0x5D8, 16, 0, 0})
	CMember(TArray<UFortItem*>)                        RewardedAccountItems                                        OFFSET(get<T>, {0x5E8, 16, 0, 0})
	CMember(UCommonUserWidget*)                        Radial_Picker                                               OFFSET(get<T>, {0x5F8, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortResultsWidget.TriggerSetupTeleportCameraEvent
	// void TriggerSetupTeleportCameraEvent();                                                                                  // [0x939e324] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortResultsWidget.ToggleChat
	// void ToggleChat(bool bShow);                                                                                             // [0x939e25c] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.FortResultsWidget.SendEndOfRoundUpVoteAnalytic
	// void SendEndOfRoundUpVoteAnalytic(FUniqueNetIdRepl& TargetId, FString TargetPlayerName);                                 // [0x939bc18] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/FortniteUI.FortResultsWidget.SendEndOfRoundScreenAnalytic
	// void SendEndOfRoundScreenAnalytic(FString ScreenName, bool Skipped, float TimeSpent);                                    // [0x939b4d8] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortResultsWidget.SendEndOfRoundFriendInviteAnalytic
	// void SendEndOfRoundFriendInviteAnalytic(FUniqueNetIdRepl& TargetId, FString TargetPlayerName);                           // [0x939ad44] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/FortniteUI.FortResultsWidget.RequestExitZone
	// void RequestExitZone();                                                                                                  // [0x9399c50] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortResultsWidget.LogXPData
	// void LogXPData();                                                                                                        // [0x9397c08] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortResultsWidget.IsDataFinalized
	// bool IsDataFinalized();                                                                                                  // [0x939799c] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortResultsWidget.HandlePickerCancel
	// void HandlePickerCancel(bool& bPassThrough);                                                                             // [0x9396ea0] Native|Protected|HasOutParms|BlueprintCallable 
	// Function /Script/FortniteUI.FortResultsWidget.HandleEmoteClicked
	// void HandleEmoteClicked(bool& bPassThrough);                                                                             // [0x9396ac0] Native|Protected|HasOutParms|BlueprintCallable 
	// Function /Script/FortniteUI.FortResultsWidget.GetZoneCompletionResultText
	// FText GetZoneCompletionResultText();                                                                                     // [0x93968bc] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortResultsWidget.GetZoneCompletionResult
	// EFortCompletionResult GetZoneCompletionResult();                                                                         // [0x939688c] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortResultsWidget.GetTotalMissionPointsEarned
	// int32_t GetTotalMissionPointsEarned();                                                                                   // [0x9396768] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortResultsWidget.GetRewardsByType
	// void GetRewardsByType(EFortRewardItemType Type, TArray<UFortItem*>& OutRewards);                                         // [0x93963b0] Final|Native|Public|HasOutParms|BlueprintCallable 
};

/// Class /Script/FortniteUI.FortRichTextBlockKeybind
/// Size: 0x0010 (0x000870 - 0x000880)
class UFortRichTextBlockKeybind : public UCommonRichTextBlock
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 2176;

public:
	CMember(UClass*)                                   KeybindWidgetClass                                          OFFSET(get<T>, {0x868, 8, 0, 0})
	SMember(FVector2D)                                 DesiredKeybindWidgetSize                                    OFFSET(getStruct<T>, {0x870, 16, 0, 0})
};

/// Class /Script/FortniteUI.FortRichTextBlockLegacy
/// Size: 0x0E08 (0x000178 - 0x000F80)
class UFortRichTextBlockLegacy : public UWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 3968;

public:
	SMember(FText)                                     Text                                                        OFFSET(getStruct<T>, {0x178, 24, 0, 0})
	CMember(UDataTable*)                               StyleSet                                                    OFFSET(get<T>, {0x190, 8, 0, 0})
	SMember(FMargin)                                   TextMargin                                                  OFFSET(getStruct<T>, {0x198, 16, 0, 0})
	DMember(float)                                     WrapTextAt                                                  OFFSET(get<float>, {0x1A8, 4, 0, 0})
	DMember(bool)                                      AutoWrapText                                                OFFSET(get<bool>, {0x1AC, 1, 0, 0})
	CMember(TEnumAsByte<ETextJustify>)                 Justification                                               OFFSET(get<T>, {0x1AD, 1, 0, 0})
	SMember(FButtonStyle)                              HyperlinkButtonStyle                                        OFFSET(getStruct<T>, {0x1B0, 944, 0, 0})
	SMember(FScrollBarStyle)                           ScrollBarStyle                                              OFFSET(getStruct<T>, {0x560, 1760, 0, 0})
	DMember(bool)                                      DisableTouchInput                                           OFFSET(get<bool>, {0xC40, 1, 0, 0})
	DMember(bool)                                      AllowContextMenu                                            OFFSET(get<bool>, {0xC41, 1, 0, 0})
	CMember(UClass*)                                   KeybindWidgetClass                                          OFFSET(get<T>, {0xC48, 8, 0, 0})
	SMember(FTextBlockStyle)                           DefaultTextStyle                                            OFFSET(getStruct<T>, {0xC70, 784, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortRichTextBlockLegacy.SetText
	// void SetText(FText InText);                                                                                              // [0x939e01c] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortRichTextBlockLegacy.EscapeStringForRichText
	// FString EscapeStringForRichText(FString InString);                                                                       // [0x93955f4] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
};

/// Class /Script/FortniteUI.FortSignInWidget
/// Size: 0x0070 (0x000538 - 0x0005A8)
class UFortSignInWidget : public UCommonActivatablePanelLegacy
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1448;

public:
	CMember(UClass*)                                   NormalBorderStyle                                           OFFSET(get<T>, {0x548, 8, 0, 0})
	CMember(UClass*)                                   HighlightBorderStyle                                        OFFSET(get<T>, {0x550, 8, 0, 0})
	SMember(FString)                                   ForgotPasswordURL                                           OFFSET(getStruct<T>, {0x558, 16, 0, 0})
	CMember(UEditableText*)                            EditText_Email                                              OFFSET(get<T>, {0x578, 8, 0, 0})
	CMember(UEditableText*)                            EditText_Password                                           OFFSET(get<T>, {0x580, 8, 0, 0})
	CMember(UCommonBorder*)                            Border_Email                                                OFFSET(get<T>, {0x588, 8, 0, 0})
	CMember(UCommonBorder*)                            Border_Password                                             OFFSET(get<T>, {0x590, 8, 0, 0})
	CMember(UCommonButtonLegacy*)                      Button_SignIn                                               OFFSET(get<T>, {0x598, 8, 0, 0})
	CMember(UCommonButtonLegacy*)                      Button_ForgotPassword                                       OFFSET(get<T>, {0x5A0, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortSignInWidget.UpdateSignInButton
	// void UpdateSignInButton(FText& Text);                                                                                    // [0x1f04bbc] Final|Native|Protected|HasOutParms 
	// Function /Script/FortniteUI.FortSignInWidget.HandleTextCommitted
	// void HandleTextCommitted(FText& Text, TEnumAsByte<ETextCommit> CommitMethod);                                            // [0x2e50780] Final|Native|Protected|HasOutParms 
};

/// Class /Script/FortniteUI.FortToastWidget
/// Size: 0x0028 (0x0002E8 - 0x000310)
class UFortToastWidget : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 784;

public:
	CMember(UFortUINotification*)                      CachedNotification                                          OFFSET(get<T>, {0x2E8, 8, 0, 0})
	DMember(float)                                     DefaultDisplayTime                                          OFFSET(get<float>, {0x2F0, 4, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortToastWidget.OnPlayOpenAnimation
	// void OnPlayOpenAnimation();                                                                                              // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortToastWidget.OnPlayCloseAnimation
	// void OnPlayCloseAnimation();                                                                                             // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortToastWidget.OnNotificationUpdated
	// void OnNotificationUpdated(UFortUINotification* Notification);                                                           // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortToastWidget.OnNotificationSet
	// void OnNotificationSet(UFortUINotification* Notification);                                                               // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortToastWidget.NotifyCloseAnimationFinished
	// void NotifyCloseAnimationFinished();                                                                                     // [0x9397da8] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.FortToastWidget.GetDisplayTime
	// float GetDisplayTime(bool& bOutDisplayTimeOverridden);                                                                   // [0x9395f10] Native|Event|Protected|HasOutParms|BlueprintCallable|BlueprintEvent|BlueprintPure|Const 
};

/// Class /Script/FortniteUI.FortSocialNotificationWidget
/// Size: 0x0038 (0x000310 - 0x000348)
class UFortSocialNotificationWidget : public UFortToastWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 840;

public:
	CMember(UFortSocialAvatarIcon*)                    Avatar_MemberIcon                                           OFFSET(get<T>, {0x310, 8, 0, 0})
	CMember(UFortPlayerAvatar*)                        PlayerAvatar                                                OFFSET(get<T>, {0x318, 8, 0, 0})
	CMember(USidebarSocialTagListBase*)                SidebarSocialTagList                                        OFFSET(get<T>, {0x320, 8, 0, 0})
	CMember(UFortKeybindWidget*)                       Action_HoldKeybindWidget                                    OFFSET(get<T>, {0x328, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortSocialNotificationWidget.OnUserStartedHoldActionNotification
	// void OnUserStartedHoldActionNotification();                                                                              // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortSocialNotificationWidget.OnTakeActionNotification
	// void OnTakeActionNotification();                                                                                         // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortSocialNotificationWidget.OnNewAvatarsEnabledChanged
	// void OnNewAvatarsEnabledChanged(bool bUsingNewAvatars);                                                                  // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortSocialNotificationWidget.OnInputModeChanged
	// void OnInputModeChanged(ECommonInputType NewInputType);                                                                  // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortSocialNotificationWidget.OnCursorModeChanged
	// void OnCursorModeChanged(bool bCursorModeEnabled);                                                                       // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortSocialNotificationWidget.OnCancelNotification
	// void OnCancelNotification();                                                                                             // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortSocialNotificationWidget.HoldReleased
	// void HoldReleased();                                                                                                     // [0x939795c] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.FortSocialNotificationWidget.HoldPressed
	// void HoldPressed();                                                                                                      // [0x9397948] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.FortSocialNotificationWidget.HoldAction
	// void HoldAction();                                                                                                       // [0x9397934] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.FortSocialNotificationWidget.HandleInputMethodChanged
	// void HandleInputMethodChanged(ECommonInputType NewInputType);                                                            // [0x9396be0] Final|Native|Private 
	// Function /Script/FortniteUI.FortSocialNotificationWidget.HandleCursorModeChanged
	// void HandleCursorModeChanged(bool bCursorModeEnabled, FName ActionName, UUserWidget* CustomWidget);                      // [0x93969b8] Final|Native|Private 
	// Function /Script/FortniteUI.FortSocialNotificationWidget.GetIsPlayerLeavingParty
	// bool GetIsPlayerLeavingParty();                                                                                          // [0x9396008] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortSocialNotificationWidget.GetIsPlayerJoiningParty
	// bool GetIsPlayerJoiningParty();                                                                                          // [0x9395fc8] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortSocialNotificationWidget.GetIsInGame
	// bool GetIsInGame();                                                                                                      // [0x2f66b54] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/FortniteUI.FortSpectatedPlayerSwitcher
/// Size: 0x0028 (0x0002C0 - 0x0002E8)
class UFortSpectatedPlayerSwitcher : public UUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 744;

public:
	DMember(int32_t)                                   MaxPlayersToShow                                            OFFSET(get<int32_t>, {0x2C0, 4, 0, 0})
	CMember(TArray<FPotentialSpectatorTarget>)         DisplayedTargets                                            OFFSET(get<T>, {0x2C8, 16, 0, 0})
	CMember(TArray<FPotentialSpectatorTarget>)         AvailableTargets                                            OFFSET(get<T>, {0x2D8, 16, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortSpectatedPlayerSwitcher.ShouldBeVisible
	// bool ShouldBeVisible();                                                                                                  // [0x2a1f97c] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortSpectatedPlayerSwitcher.OnDisplayedTargetsUpdated
	// void OnDisplayedTargetsUpdated();                                                                                        // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.FortSpectatedPlayerSwitcher.FocusWidget
	// void FocusWidget();                                                                                                      // [0x1d9241c] Event|Public|BlueprintCallable|BlueprintEvent 
};

/// Class /Script/FortniteUI.FortSpectatorRebootWidget
/// Size: 0x0018 (0x000328 - 0x000340)
class UFortSpectatorRebootWidget : public UFortHUDElementWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 832;

public:
	CMember(AFortPlayerStateAthena*)                   PlayerState                                                 OFFSET(get<T>, {0x328, 8, 0, 0})
	CMember(AFortPlayerStateAthena*)                   SpectatingTargetPlayerState                                 OFFSET(get<T>, {0x330, 8, 0, 0})
	CMember(TWeakObjectPtr<ABuildingGameplayActorSpawnMachine*>) CurrentInteractingRebootVan                       OFFSET(get<T>, {0x338, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortSpectatorRebootWidget.OnResurrectionStateChanged
	// void OnResurrectionStateChanged();                                                                                       // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortSpectatorRebootWidget.HandleOnSpectatingTargetChanged
	// void HandleOnSpectatingTargetChanged(AFortPlayerStateZone* PS);                                                          // [0x9396e20] Final|Native|Protected 
};

/// Class /Script/FortniteUI.FortSplashScreenWidget
/// Size: 0x0010 (0x000538 - 0x000548)
class UFortSplashScreenWidget : public UCommonActivatablePanelLegacy
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1352;

public:
};

/// Class /Script/FortniteUI.FortSquadSelectionMenu
/// Size: 0x0080 (0x000400 - 0x000480)
class UFortSquadSelectionMenu : public UCommonActivatableWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1152;

public:
	SMember(FDataTableRowHandle)                       ExitInputAction                                             OFFSET(getStruct<T>, {0x400, 16, 0, 0})
	CMember(UCommonButtonGroupLegacy*)                 ButtonGroup                                                 OFFSET(get<T>, {0x418, 8, 0, 0})
	CMember(UAthenaTeamSquadsEntryBox*)                TeamEntryBox_Squads                                         OFFSET(get<T>, {0x448, 8, 0, 0})
	CMember(UCommonButtonLegacy*)                      Button_ConfirmMove                                          OFFSET(get<T>, {0x450, 8, 0, 0})
	CMember(UCommonButtonLegacy*)                      Button_CancelMove                                           OFFSET(get<T>, {0x458, 8, 0, 0})
	CMember(UCommonRichTextBlock*)                     RichText_ActionPrompt                                       OFFSET(get<T>, {0x460, 8, 0, 0})
	CMember(UCommonButtonLegacy*)                      Button_ChangeParticipation                                  OFFSET(get<T>, {0x468, 8, 0, 0})
	CMember(UWidgetSwitcher*)                          Switcher_Buttons                                            OFFSET(get<T>, {0x470, 8, 0, 0})
	CMember(UOverlay*)                                 Mobile_Overlay                                              OFFSET(get<T>, {0x478, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortSquadSelectionMenu.OnLocalPlayerParticipationChanged
	// void OnLocalPlayerParticipationChanged(bool bIsParticipating);                                                           // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortSquadSelectionMenu.HandleMemberEntryClicked
	// void HandleMemberEntryClicked(UCommonButtonLegacy* MemberEntryButton, int32_t EntryIdx);                                 // [0x9396d5c] Final|Native|Private 
	// Function /Script/FortniteUI.FortSquadSelectionMenu.HandleExitAction
	// void HandleExitAction();                                                                                                 // [0x34111d4] Final|Native|Private|BlueprintCallable 
};

/// Class /Script/FortniteUI.FortStandaloneFrontend
/// Size: 0x0328 (0x000400 - 0x000728)
class UFortStandaloneFrontend : public UCommonActivatableWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1832;

public:
	DMember(bool)                                      bCosmeticRefreshOnClose                                     OFFSET(get<bool>, {0x410, 1, 0, 0})
	DMember(float)                                     DelayCloseActionTimeSeconds                                 OFFSET(get<float>, {0x414, 4, 0, 0})
	CMember(UFortPocketLevel*)                         PocketLevel                                                 OFFSET(get<T>, {0x418, 8, 0, 0})
	CMember(UPocketLevelInstance*)                     PocketLevelInstance                                         OFFSET(get<T>, {0x420, 8, 0, 0})
	SMember(FVector)                                   CameraLevelLocation                                         OFFSET(getStruct<T>, {0x428, 24, 0, 0})
	SMember(FDataTableRowHandle)                       BackActionRowHandle                                         OFFSET(getStruct<T>, {0x440, 16, 0, 0})
	CMember(UCommonWidgetSwitcherLegacy*)              Switcher_TabContent                                         OFFSET(get<T>, {0x450, 8, 0, 0})
	CMember(UWidget*)                                  Content_LoadingIndicator                                    OFFSET(get<T>, {0x458, 8, 0, 0})
	CMember(UAthenaCustomizationScreenBase*)           ActivatableContent_Locker                                   OFFSET(get<T>, {0x460, 8, 0, 0})
	DMember(bool)                                      bCloseOnDelayEnd                                            OFFSET(get<bool>, {0x478, 1, 0, 0})
	SMember(FFortAthenaLoadout)                        InitialLoadoutData                                          OFFSET(getStruct<T>, {0x480, 608, 0, 0})
	CMember(UCommonButtonBase*)                        Button_CloseTouch                                           OFFSET(get<T>, {0x6E0, 8, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnMenuClosed                                                OFFSET(getStruct<T>, {0x6E8, 16, 0, 0})
	SMember(FPrimaryContentSetup)                      PrimaryContentSetup                                         OFFSET(getStruct<T>, {0x708, 3, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortStandaloneFrontend.TriggerIncrementalGC
	// void TriggerIncrementalGC();                                                                                             // [0x939e310] Final|Native|Static|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.FortStandaloneFrontend.OnLoadingIndicatorShown
	// void OnLoadingIndicatorShown(bool bShown);                                                                               // [0x1d9241c] RequiredAPI|Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortStandaloneFrontend.OnCameraLevelLoaded
	// void OnCameraLevelLoaded();                                                                                              // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortStandaloneFrontend.OnBeginLoadingCameraLevel
	// void OnBeginLoadingCameraLevel();                                                                                        // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortStandaloneFrontend.HandleCloseRefreshComplete
	// void HandleCloseRefreshComplete(AFortPlayerPawn* FortPawn);                                                              // [0x9396938] Final|Native|Private 
	// Function /Script/FortniteUI.FortStandaloneFrontend.HandleCloseAction
	// void HandleCloseAction();                                                                                                // [0x9396924] Final|RequiredAPI|Native|Protected|BlueprintCallable 
};

/// Class /Script/FortniteUI.FortStandaloneItemShop
/// Size: 0x0058 (0x000728 - 0x000780)
class UFortStandaloneItemShop : public UFortStandaloneFrontend
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1920;

public:
	CMember(UDynamicEntryBox*)                         EntryBox_TabButtons                                         OFFSET(get<T>, {0x728, 8, 0, 0})
	SMember(FDataTableRowHandle)                       NextTabInputAction                                          OFFSET(getStruct<T>, {0x730, 16, 0, 0})
	SMember(FDataTableRowHandle)                       PreviousTabInputAction                                      OFFSET(getStruct<T>, {0x740, 16, 0, 0})
	CMember(UCommonButtonGroupBase*)                   TabsGroup                                                   OFFSET(get<T>, {0x750, 8, 0, 0})
	CMember(TArray<FStandaloneItemShopTabInfo>)        TabInfos                                                    OFFSET(get<T>, {0x758, 16, 0, 0})
	CMember(UAthenaItemShopScreen*)                    ActivatableContent_ItemShop                                 OFFSET(get<T>, {0x768, 8, 0, 0})
	CMember(UFortMtxStoreRootBase*)                    ActivatableContent_MtxStore                                 OFFSET(get<T>, {0x770, 8, 0, 0})
	CMember(UFortMPItemShopScreen*)                    ActivatableContent_MPItemShop                               OFFSET(get<T>, {0x778, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortStandaloneItemShop.SelectButtonAtIndex
	// void SelectButtonAtIndex(int32_t ButtonIndex);                                                                           // [0x939acc4] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.FortStandaloneItemShop.RegisterTab
	// void RegisterTab(FStandaloneItemShopTabInfo& TabInfo);                                                                   // [0x9399bb4] Final|Native|Protected|HasOutParms|BlueprintCallable 
	// Function /Script/FortniteUI.FortStandaloneItemShop.OnTabSelected
	// void OnTabSelected(int32_t TabIndex);                                                                                    // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortStandaloneItemShop.InitializeTabs
	// void InitializeTabs();                                                                                                   // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortStandaloneItemShop.HandleSelectedTabButtonChanged
	// void HandleSelectedTabButtonChanged(UCommonButtonBase* SelectedButton, int32_t ButtonIndex);                             // [0x93970a8] Final|Native|Protected 
	// Function /Script/FortniteUI.FortStandaloneItemShop.CreateTabs
	// void CreateTabs();                                                                                                       // [0x9394efc] Final|Native|Protected|BlueprintCallable 
};

/// Class /Script/FortniteUI.FortStandaloneModalPopup
/// Size: 0x0088 (0x000570 - 0x0005F8)
class UFortStandaloneModalPopup : public UFortActivatablePanel
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1528;

public:
	SMember(FDataTableRowHandle)                       buttonInputAction                                           OFFSET(getStruct<T>, {0x570, 16, 0, 0})
	CMember(UCommonButtonLegacy*)                      Button_Details                                              OFFSET(get<T>, {0x5D8, 8, 0, 0})
	CMember(UCommonButtonLegacy*)                      Button_Close                                                OFFSET(get<T>, {0x5E0, 8, 0, 0})
	CMember(UCommonBorder*)                            Border_TapToCloseZone                                       OFFSET(get<T>, {0x5E8, 8, 0, 0})
	CMember(UFortStoreFrontOfferWidgetBase_Legacy*)    ItemShopStandaloneOfferPreview                              OFFSET(get<T>, {0x5F0, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortStandaloneModalPopup.HandleInputActionButton
	// void HandleInputActionButton(bool& bPassThrough);                                                                        // [0x9396b64] Final|Native|Private|HasOutParms 
	// Function /Script/FortniteUI.FortStandaloneModalPopup.HandleDetailsButtonClicked
	// void HandleDetailsButtonClicked();                                                                                       // [0x814b4ec] Final|Native|Private 
	// Function /Script/FortniteUI.FortStandaloneModalPopup.Dismiss
	// void Dismiss();                                                                                                          // [0x9394f10] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/FortniteUI.FortStorefront
/// Size: 0x0000 (0x0002D0 - 0x0002D0)
class UFortStorefront : public UFortUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 720;

public:
};

/// Class /Script/FortniteUI.FortTabButtonInterface
/// Size: 0x0000 (0x000028 - 0x000028)
class UFortTabButtonInterface : public UInterface
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 40;

public:
};

/// Class /Script/FortniteUI.FortTabListWidgetBase
/// Size: 0x0090 (0x0003D8 - 0x000468)
class UFortTabListWidgetBase : public UCommonTabListWidgetBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1128;

public:
	SMember(FMulticastInlineDelegate)                  OnTabContentCreated                                         OFFSET(getStruct<T>, {0x3D8, 16, 0, 0})
	CMember(TArray<FFortTabListRegistrationInfo>)      PreregisteredTabInfoArray                                   OFFSET(get<T>, {0x400, 16, 0, 0})
	DMember(bool)                                      bHideSingleTab                                              OFFSET(get<bool>, {0x410, 1, 0, 0})
	CMember(ESlateVisibility)                          HideSingleTabVisibility                                     OFFSET(get<T>, {0x411, 1, 0, 0})
	CMember(TMap<FName, FFortTabButtonLabelInfo>)      RegisteredFortTabsById                                      OFFSET(get<T>, {0x418, 80, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortTabListWidgetBase.SetTabHiddenState
	// void SetTabHiddenState(FName TabNameID, bool bHidden);                                                                   // [0x939de94] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortTabListWidgetBase.RemoveAllDividers
	// void RemoveAllDividers();                                                                                                // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.FortTabListWidgetBase.RegisterFortTab
	// bool RegisterFortTab(FName TabNameID, UClass* TabButtonType, FFortTabButtonLabelInfo& LabelInfo, UWidget* ContentWidget); // [0x939973c] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/FortniteUI.FortTabListWidgetBase.RegisterDivider
	// void RegisterDivider(UClass* DividerWidgetType);                                                                         // [0x93995cc] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortTabListWidgetBase.RegisterAllPreregisteredTabInfos
	// void RegisterAllPreregisteredTabInfos();                                                                                 // [0x93995a4] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortTabListWidgetBase.OnTabContentCreated__DelegateSignature
	// void OnTabContentCreated__DelegateSignature(FName TabID, UCommonUserWidget* TabWidget);                                  // [0x1d9241c] MulticastDelegate|Public|Delegate 
	// Function /Script/FortniteUI.FortTabListWidgetBase.IsTabVisible
	// bool IsTabVisible(FName TabID);                                                                                          // [0x9397ae0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortTabListWidgetBase.IsLastTabActive
	// bool IsLastTabActive();                                                                                                  // [0x9397a48] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortTabListWidgetBase.IsFirstTabActive
	// bool IsFirstTabActive();                                                                                                 // [0x93979c0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortTabListWidgetBase.HandleDividerCreation
	// void HandleDividerCreation(UUserWidget* DividerWidget);                                                                  // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortTabListWidgetBase.GetVisibleTabCount
	// int32_t GetVisibleTabCount();                                                                                            // [0x2712a7c] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortTabListWidgetBase.GetPreregisteredTabInfo
	// bool GetPreregisteredTabInfo(FName TabNameID, FFortTabListRegistrationInfo& OutTabInfo);                                 // [0x9396180] Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure 
};

/// Class /Script/FortniteUI.FortTabListWidgetBase_Legacy
/// Size: 0x0090 (0x0003F8 - 0x000488)
class UFortTabListWidgetBase_Legacy : public UCommonTabListWidgetLegacy
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1160;

public:
	SMember(FMulticastInlineDelegate)                  OnTabContentCreated                                         OFFSET(getStruct<T>, {0x3F8, 16, 0, 0})
	CMember(TArray<FFortTabListRegistrationInfo>)      PreregisteredTabInfoArray                                   OFFSET(get<T>, {0x420, 16, 0, 0})
	DMember(bool)                                      bHideSingleTab                                              OFFSET(get<bool>, {0x430, 1, 0, 0})
	CMember(ESlateVisibility)                          HideSingleTabVisibility                                     OFFSET(get<T>, {0x431, 1, 0, 0})
	CMember(TMap<FName, FFortTabButtonLabelInfo>)      PendingTabLabelInfoMap                                      OFFSET(get<T>, {0x438, 80, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortTabListWidgetBase_Legacy.SetTabHiddenState
	// void SetTabHiddenState(FName TabNameID, bool bHidden);                                                                   // [0x939df58] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortTabListWidgetBase_Legacy.RemoveAllDividers
	// void RemoveAllDividers();                                                                                                // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.FortTabListWidgetBase_Legacy.RegisterFortTab
	// bool RegisterFortTab(FName TabNameID, UClass* TabButtonType, FFortTabButtonLabelInfo& LabelInfo, UWidget* ContentWidget); // [0x9399978] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/FortniteUI.FortTabListWidgetBase_Legacy.RegisterDivider
	// void RegisterDivider(UClass* DividerWidgetType);                                                                         // [0x9399684] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortTabListWidgetBase_Legacy.RegisterAllPreregisteredTabInfos
	// void RegisterAllPreregisteredTabInfos();                                                                                 // [0x93995b8] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortTabListWidgetBase_Legacy.OnTabContentCreated_Legacy__DelegateSignature
	// void OnTabContentCreated_Legacy__DelegateSignature(FName TabID, UCommonUserWidget* TabWidget);                           // [0x1d9241c] MulticastDelegate|Public|Delegate 
	// Function /Script/FortniteUI.FortTabListWidgetBase_Legacy.IsTabVisible
	// bool IsTabVisible(FName TabID);                                                                                          // [0x9397b7c] Final|Native|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/FortniteUI.FortTabListWidgetBase_Legacy.IsLastTabActive
	// bool IsLastTabActive();                                                                                                  // [0x9397a94] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortTabListWidgetBase_Legacy.IsFirstTabActive
	// bool IsFirstTabActive();                                                                                                 // [0x93979f8] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortTabListWidgetBase_Legacy.HandleDividerCreation
	// void HandleDividerCreation(UUserWidget* DividerWidget);                                                                  // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortTabListWidgetBase_Legacy.GetVisibleTabCount
	// int32_t GetVisibleTabCount();                                                                                            // [0x27132c4] Final|Native|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/FortniteUI.FortTabListWidgetBase_Legacy.GetPreregisteredTabInfo
	// bool GetPreregisteredTabInfo(FName TabNameID, FFortTabListRegistrationInfo& OutTabInfo);                                 // [0x93962b4] Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure 
};

/// Class /Script/FortniteUI.FortTextStyleList
/// Size: 0x0008 (0x0002E8 - 0x0002F0)
class UFortTextStyleList : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 752;

public:
	SMember(FName)                                     TextStylesPath                                              OFFSET(getStruct<T>, {0x2E8, 4, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortTextStyleList.GetTextStyles
	// TArray<TWeakObjectPtr> GetTextStyles();                                                                                  // [0x9396674] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/FortniteUI.FortTouchControlRegion
/// Size: 0x0180 (0x0002E8 - 0x000468)
class UFortTouchControlRegion : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1128;

public:
	SMember(FTimerHandle)                              AutorunLockDelayHandle                                      OFFSET(getStruct<T>, {0x2F8, 8, 0, 0})
	CMember(UFortTouchMoveStick*)                      RegisteredTouchMoveStick                                    OFFSET(get<T>, {0x300, 8, 0, 0})
	CMember(UFortTouchLookStick*)                      RegisteredTouchLookStick                                    OFFSET(get<T>, {0x308, 8, 0, 0})
	CMember(UFortAutorunLockZone*)                     RegisteredAutoRunLockTarget                                 OFFSET(get<T>, {0x310, 8, 0, 0})
	SMember(FVector2D)                                 LastMovePlayerRegionTouchOrigin                             OFFSET(getStruct<T>, {0x318, 16, 0, 0})
	SMember(FVector2D)                                 MovePlayerRegionTouchEndPos                                 OFFSET(getStruct<T>, {0x328, 16, 0, 0})
	SMember(FVector2D)                                 MoveVector                                                  OFFSET(getStruct<T>, {0x338, 16, 0, 0})
	DMember(bool)                                      bLastLookTouchWasTap                                        OFFSET(get<bool>, {0x348, 1, 1, 0})
	DMember(bool)                                      bIsLockedOn                                                 OFFSET(get<bool>, {0x348, 1, 1, 1})
	DMember(float)                                     MoveStickLastTouchTime                                      OFFSET(get<float>, {0x34C, 4, 0, 0})
	SMember(FVector2D)                                 MovePlayerRegionLastTouchPos                                OFFSET(getStruct<T>, {0x350, 16, 0, 0})
	SMember(FVector2D)                                 RotateCameraRegionLastTouchPos                              OFFSET(getStruct<T>, {0x360, 16, 0, 0})
	SMember(FVector2D)                                 RotateCameraPlayerRegionLastTouchDiff                       OFFSET(getStruct<T>, {0x370, 16, 0, 0})
	DMember(float)                                     RotateCameraLastTouchTime                                   OFFSET(get<float>, {0x380, 4, 0, 0})
	CMember(UCurveFloat*)                              RotateInertiaCurve                                          OFFSET(get<T>, {0x398, 8, 0, 0})
	SMember(FVector2D)                                 RotateStickPosition                                         OFFSET(getStruct<T>, {0x3A0, 16, 0, 0})
	SMember(FVector2D)                                 LockOnStickOrigin                                           OFFSET(getStruct<T>, {0x3B0, 16, 0, 0})
	SMember(FVector2D)                                 LockOnStickCurrentPos                                       OFFSET(getStruct<T>, {0x3C0, 16, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortTouchControlRegion.UpdateLockOnStickPosition
	// void UpdateLockOnStickPosition(FVector2D LocalPos);                                                                      // [0x939e608] Final|Native|Protected|HasDefaults|BlueprintCallable 
	// Function /Script/FortniteUI.FortTouchControlRegion.UpdateLockOnStickOrigin
	// void UpdateLockOnStickOrigin(FVector2D LocalPos, bool IsTouchStartEvent);                                                // [0x939e378] Final|Native|Protected|HasDefaults|BlueprintCallable 
	// Function /Script/FortniteUI.FortTouchControlRegion.SetMoveStickPos
	// void SetMoveStickPos(FVector2D NewMoveStickPos);                                                                         // [0x939d320] Final|Native|Protected|HasDefaults|BlueprintCallable 
	// Function /Script/FortniteUI.FortTouchControlRegion.SetLockOnStickPosition
	// void SetLockOnStickPosition(FVector2D LocalPos);                                                                         // [0x939ce8c] Final|Native|Protected|HasDefaults|BlueprintCallable 
	// Function /Script/FortniteUI.FortTouchControlRegion.SetFeedbackPosition
	// void SetFeedbackPosition(FGeometry& InGeometry, FPointerEvent& InGestureEvent);                                          // [0x939c9ac] Native|Event|Protected|HasOutParms|BlueprintCallable|BlueprintEvent 
	// Function /Script/FortniteUI.FortTouchControlRegion.RotatePlayerRegionTick
	// void RotatePlayerRegionTick(FGeometry& InGeometry, float DeltaTime);                                                     // [0x939ab38] Native|Event|Protected|HasOutParms|BlueprintCallable|BlueprintEvent 
	// Function /Script/FortniteUI.FortTouchControlRegion.ResetTouchState
	// void ResetTouchState();                                                                                                  // [0x939aaa0] Final|Native|Protected 
	// Function /Script/FortniteUI.FortTouchControlRegion.OnRotatePlayerRegionTouchStarted
	// void OnRotatePlayerRegionTouchStarted(FGeometry& InGeometry, FPointerEvent& InGestureEvent);                             // [0x9398dac] Native|Event|Protected|HasOutParms|BlueprintCallable|BlueprintEvent 
	// Function /Script/FortniteUI.FortTouchControlRegion.OnRotatePlayerRegionTouchMoved
	// void OnRotatePlayerRegionTouchMoved(FGeometry& InGeometry, FPointerEvent& InGestureEvent, FVector2D& MoveDelta);         // [0x9398c18] Native|Event|Protected|HasOutParms|HasDefaults|BlueprintCallable|BlueprintEvent 
	// Function /Script/FortniteUI.FortTouchControlRegion.OnRotatePlayerRegionTouchLost
	// void OnRotatePlayerRegionTouchLost(int32_t PointerIndex);                                                                // [0x9135608] Native|Event|Protected|BlueprintCallable|BlueprintEvent 
	// Function /Script/FortniteUI.FortTouchControlRegion.OnRotatePlayerRegionTouchEnded
	// void OnRotatePlayerRegionTouchEnded(FGeometry& InGeometry, FPointerEvent& InGestureEvent);                               // [0x9398ad4] Native|Event|Protected|HasOutParms|BlueprintCallable|BlueprintEvent 
	// Function /Script/FortniteUI.FortTouchControlRegion.OnRegionTouchStarted
	// void OnRegionTouchStarted(EFortTouchControlRegion Region, FGeometry& InGeometry, FPointerEvent& InGestureEvent);         // [0x1d9241c] Event|Public|HasOutParms|BlueprintEvent 
	// Function /Script/FortniteUI.FortTouchControlRegion.OnRegionTouchMoved
	// void OnRegionTouchMoved(EFortTouchControlRegion Region, FGeometry& InGeometry, FPointerEvent& InGestureEvent, FVector2D& MoveDelta); // [0x1d9241c] Event|Public|HasOutParms|HasDefaults|BlueprintEvent 
	// Function /Script/FortniteUI.FortTouchControlRegion.OnRegionTouchEnded
	// void OnRegionTouchEnded(EFortTouchControlRegion Region, FGeometry& InGeometry, FPointerEvent& InGestureEvent);           // [0x1d9241c] Event|Public|HasOutParms|BlueprintEvent 
	// Function /Script/FortniteUI.FortTouchControlRegion.OnMovePlayerRegionTouchStarted
	// void OnMovePlayerRegionTouchStarted(FGeometry& InGeometry, FPointerEvent& InGestureEvent);                               // [0x9398990] Native|Event|Protected|HasOutParms|BlueprintCallable|BlueprintEvent 
	// Function /Script/FortniteUI.FortTouchControlRegion.OnMovePlayerRegionTouchMoved
	// void OnMovePlayerRegionTouchMoved(FGeometry& InGeometry, FPointerEvent& InGestureEvent);                                 // [0x939884c] Native|Event|Protected|HasOutParms|BlueprintCallable|BlueprintEvent 
	// Function /Script/FortniteUI.FortTouchControlRegion.OnMovePlayerRegionTouchLost
	// void OnMovePlayerRegionTouchLost(int32_t PointerIndex);                                                                  // [0x910b7b4] Native|Event|Protected|BlueprintCallable|BlueprintEvent 
	// Function /Script/FortniteUI.FortTouchControlRegion.OnMovePlayerRegionTouchEnded
	// void OnMovePlayerRegionTouchEnded(FGeometry& InGeometry, FPointerEvent& InGestureEvent);                                 // [0x9398708] Native|Event|Protected|HasOutParms|BlueprintCallable|BlueprintEvent 
	// Function /Script/FortniteUI.FortTouchControlRegion.OnCursorModeChanged
	// void OnCursorModeChanged(bool bCursorModeEnabled, FName ActionName, UUserWidget* CustomWidget);                          // [0x93981c8] Final|Native|Protected 
	// Function /Script/FortniteUI.FortTouchControlRegion.OnBuildModeChanged
	// void OnBuildModeChanged(bool bBuildModeEnabled);                                                                         // [0x56ae764] Final|Native|Protected 
	// Function /Script/FortniteUI.FortTouchControlRegion.OnAdditionalTouchStarted
	// void OnAdditionalTouchStarted(FGeometry& InGeometry, FPointerEvent& InGestureEvent);                                     // [0x9398004] Native|Event|Protected|HasOutParms|BlueprintCallable|BlueprintEvent 
	// Function /Script/FortniteUI.FortTouchControlRegion.OnAdditionalTouchLost
	// void OnAdditionalTouchLost(int32_t PointerIndex);                                                                        // [0x9397f80] Native|Event|Protected|BlueprintCallable|BlueprintEvent 
	// Function /Script/FortniteUI.FortTouchControlRegion.OnAdditionalTouchEnded
	// void OnAdditionalTouchEnded(FGeometry& InGeometry, FPointerEvent& InGestureEvent);                                       // [0x9397e3c] Native|Event|Protected|HasOutParms|BlueprintCallable|BlueprintEvent 
	// Function /Script/FortniteUI.FortTouchControlRegion.MovePlayerRegionTick
	// void MovePlayerRegionTick(FGeometry& InGeometry, float DeltaTime);                                                       // [0x9397c1c] Native|Event|Protected|HasOutParms|BlueprintCallable|BlueprintEvent 
	// Function /Script/FortniteUI.FortTouchControlRegion.GetTouchStickRange
	// float GetTouchStickRange();                                                                                              // [0x9396864] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/FortniteUI.FortTouchLookStick
/// Size: 0x0050 (0x000370 - 0x0003C0)
class UFortTouchLookStick : public UBacchusHUDElement
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 960;

public:
	CMember(USizeBox*)                                 MainSizeBox                                                 OFFSET(get<T>, {0x370, 8, 0, 0})
	CMember(TWeakObjectPtr<UImage*>)                   FireImageRef                                                OFFSET(get<T>, {0x378, 32, 0, 0})
	SMember(FVector2D)                                 FireImageAbsoluteOffset                                     OFFSET(getStruct<T>, {0x398, 16, 0, 0})
	CMember(UBacchusActionButton*)                     Button_DBNOCarryThrow                                       OFFSET(get<T>, {0x3A8, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortTouchLookStick.SetTouchStickPositionLocal
	// void SetTouchStickPositionLocal(FVector2D TouchPosition);                                                                // [0x93dc25c] Final|Native|Public|HasDefaults|BlueprintCallable 
	// Function /Script/FortniteUI.FortTouchLookStick.SetTouchStickPositionAbsolute
	// void SetTouchStickPositionAbsolute(FVector2D TouchPosition);                                                             // [0x93dc100] Final|Native|Public|HasDefaults|BlueprintCallable 
	// Function /Script/FortniteUI.FortTouchLookStick.SetSize
	// void SetSize(float NewSize);                                                                                             // [0x93dbf24] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortTouchLookStick.SetFiringState
	// void SetFiringState(bool IsFiring);                                                                                      // [0x7bb04cc] Native|Event|Public|BlueprintCallable|BlueprintEvent 
	// Function /Script/FortniteUI.FortTouchLookStick.OnFireFromIndexStopped
	// void OnFireFromIndexStopped(int32_t StopFireIndex);                                                                      // [0x93d9674] Final|Native|Public  
	// Function /Script/FortniteUI.FortTouchLookStick.IsFireButtonUnderTouch
	// bool IsFireButtonUnderTouch(FVector2D TouchPosition);                                                                    // [0x93d8e8c] Native|Event|Public|HasDefaults|BlueprintCallable|BlueprintEvent|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortTouchLookStick.GetSize
	// float GetSize();                                                                                                         // [0x93d8798] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortTouchLookStick.GetShowAllTimeTime
	// bool GetShowAllTimeTime();                                                                                               // [0x8aaef88] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/FortniteUI.FortTouchMoveStick
/// Size: 0x0070 (0x000370 - 0x0003E0)
class UFortTouchMoveStick : public UBacchusHUDElement
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 992;

public:
	DMember(bool)                                      bIsTouched                                                  OFFSET(get<bool>, {0x379, 1, 0, 0})
	DMember(bool)                                      bMoveStickIsLocked                                          OFFSET(get<bool>, {0x37A, 1, 1, 0})
	DMember(bool)                                      bAlwaysShowWhenTouched                                      OFFSET(get<bool>, {0x37B, 1, 0, 0})
	DMember(float)                                     TouchStartTime                                              OFFSET(get<float>, {0x37C, 4, 0, 0})
	DMember(float)                                     LastTouchTime                                               OFFSET(get<float>, {0x380, 4, 0, 0})
	SMember(FVector2D)                                 TouchStartPos                                               OFFSET(getStruct<T>, {0x388, 16, 0, 0})
	SMember(FVector2D)                                 MoveStickPos                                                OFFSET(getStruct<T>, {0x398, 16, 0, 0})
	SMember(FGameplayTag)                              AlwaysShowPropertyTag                                       OFFSET(getStruct<T>, {0x3A8, 4, 0, 0})
	SMember(FGameplayTag)                              AutorunLockZoneSizePropertyTag                              OFFSET(getStruct<T>, {0x3AC, 4, 0, 0})
	CMember(USizeBox*)                                 SizeBox_AutorunLockZoneHidden                               OFFSET(get<T>, {0x3B0, 8, 0, 0})
	CMember(USizeBox*)                                 SizeBox_AutorunDirectionArrowSpaceSize                      OFFSET(get<T>, {0x3B8, 8, 0, 0})
	CMember(USizeBox*)                                 SizeBox_AutorunLockZoneSize                                 OFFSET(get<T>, {0x3C0, 8, 0, 0})
	CMember(UFortAutorunLockZone*)                     AutorunLockZone                                             OFFSET(get<T>, {0x3C8, 8, 0, 0})
	CMember(UImage*)                                   Image_AutorunDirectionArrow                                 OFFSET(get<T>, {0x3D0, 8, 0, 0})
	DMember(float)                                     DefaultAutorunLockZoneSize                                  OFFSET(get<float>, {0x3D8, 4, 0, 0})
	DMember(float)                                     DefaultAutorunLockZoneTopPadding                            OFFSET(get<float>, {0x3DC, 4, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortTouchMoveStick.SetStickPositionBP
	// void SetStickPositionBP(FVector2D NewPosition);                                                                          // [0x1d9241c] Event|Public|HasDefaults|BlueprintCallable|BlueprintEvent 
	// Function /Script/FortniteUI.FortTouchMoveStick.SetStickPosition
	// void SetStickPosition(FVector2D NewPosition);                                                                            // [0x93dbfa4] Final|Native|Public|HasDefaults|BlueprintCallable 
	// Function /Script/FortniteUI.FortTouchMoveStick.SetMovementLockStatus
	// void SetMovementLockStatus(bool MovementIsLocked);                                                                       // [0x718349c] Native|Event|Public|BlueprintCallable|BlueprintEvent 
	// Function /Script/FortniteUI.FortTouchMoveStick.OnDisplayAutorunLockZone
	// void OnDisplayAutorunLockZone(bool bShouldShowArrow);                                                                    // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.FortTouchMoveStick.IsTouched
	// bool IsTouched();                                                                                                        // [0x834bc98] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortTouchMoveStick.IsLocked
	// bool IsLocked();                                                                                                         // [0x93d9088] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortTouchMoveStick.HandleTouchStarted
	// void HandleTouchStarted();                                                                                               // [0x77e3f28] Native|Event|Public|BlueprintCallable|BlueprintEvent 
	// Function /Script/FortniteUI.FortTouchMoveStick.HandleTouchEnded
	// void HandleTouchEnded();                                                                                                 // [0x7826848] Native|Event|Public|BlueprintCallable|BlueprintEvent 
	// Function /Script/FortniteUI.FortTouchMoveStick.GetStickPosition
	// FVector2D GetStickPosition();                                                                                            // [0x93d8854] Final|Native|Public|HasDefaults|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortTouchMoveStick.GetHalfHeight
	// float GetHalfHeight();                                                                                                   // [0x93d79ec] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortTouchMoveStick.AllowMobileImprovedAutorun
	// bool AllowMobileImprovedAutorun();                                                                                       // [0x93d5c68] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
};

/// Class /Script/FortniteUI.FortUEKittWidget
/// Size: 0x00F0 (0x000400 - 0x0004F0)
class UFortUEKittWidget : public UCommonActivatableWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1264;

public:
	CMember(UUEKittTexture*)                           DisplayTexture                                              OFFSET(get<T>, {0x400, 8, 0, 0})
	DMember(bool)                                      bDisableWorldRendering                                      OFFSET(get<bool>, {0x408, 1, 0, 0})
	DMember(bool)                                      bAddAccountIdToUrl                                          OFFSET(get<bool>, {0x409, 1, 0, 0})
	DMember(bool)                                      bDelayedClose                                               OFFSET(get<bool>, {0x40A, 1, 0, 0})
	DMember(float)                                     CloseDelay                                                  OFFSET(get<float>, {0x40C, 4, 0, 0})
	DMember(bool)                                      bSendKeyOnOpenClose                                         OFFSET(get<bool>, {0x410, 1, 0, 0})
	SMember(FName)                                     OpenCloseKey                                                OFFSET(getStruct<T>, {0x414, 4, 0, 0})
	DMember(bool)                                      bEnableDynamicResolution                                    OFFSET(get<bool>, {0x418, 1, 0, 0})
	CMember(UCommonButtonLegacy*)                      Button_MatchmakingMode                                      OFFSET(get<T>, {0x430, 8, 0, 0})
	CMember(UFortLocalPlayer*)                         LocalPlayer                                                 OFFSET(get<T>, {0x438, 8, 0, 0})
	CMember(UFortGameInstance*)                        GameInstance                                                OFFSET(get<T>, {0x440, 8, 0, 0})
	CMember(AFortPlayerController*)                    PlayerController                                            OFFSET(get<T>, {0x448, 8, 0, 0})
	SMember(FString)                                   KittURL                                                     OFFSET(getStruct<T>, {0x450, 16, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortUEKittWidget.Setup
	// void Setup(UCommonButtonLegacy* InButton, bool bInAddToViewport);                                                        // [0x7867994] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortUEKittWidget.Open
	// void Open();                                                                                                             // [0x2cf4738] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortUEKittWidget.GetSetupDone
	// bool GetSetupDone();                                                                                                     // [0x33105ac] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortUEKittWidget.Close
	// void Close();                                                                                                            // [0x2cf4738] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortUEKittWidget.CheckEnabledForPlayer
	// bool CheckEnabledForPlayer(UWidget* ParentWidget);                                                                       // [0x93d6584] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/FortniteUI.FortUIBlueprintFunctionLibrary
/// Size: 0x0000 (0x000028 - 0x000028)
class UFortUIBlueprintFunctionLibrary : public UBlueprintFunctionLibrary
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 40;

public:
};

/// Class /Script/FortniteUI.FortUIBlueprintFunctionLibraryHelper
/// Size: 0x0000 (0x000028 - 0x000028)
class UFortUIBlueprintFunctionLibraryHelper : public UObject
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 40;

public:
};

/// Class /Script/FortniteUI.FortUIDataConfiguration
/// Size: 0x45E0 (0x000030 - 0x004610)
class UFortUIDataConfiguration : public UPrimaryDataAsset
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 17936;

public:
	SMember(FString)                                   DefaultUIDataConfigurationPath                              OFFSET(getStruct<T>, {0x38, 16, 0, 0})
	SMember(FString)                                   DefaultBROnlyUIDataConfigurationPath                        OFFSET(getStruct<T>, {0x48, 16, 0, 0})
	SMember(FString)                                   MobileBROnlyUIDataConfigurationPath                         OFFSET(getStruct<T>, {0x58, 16, 0, 0})
	SMember(FStateWidgetEntry)                         StateWidgetClasses                                          OFFSET(getStruct<T>, {0x68, 520, 0, 0})
	SMember(FStateWidgetEntry)                         CampaignFrontEndWidget                                      OFFSET(getStruct<T>, {0x270, 40, 0, 0})
	CMember(TWeakObjectPtr<UClass*>)                   StartupStateWidget_Login                                    OFFSET(get<T>, {0x298, 32, 0, 0})
	CMember(TWeakObjectPtr<UClass*>)                   StartupStateWidget_SubgameSelect                            OFFSET(get<T>, {0x2B8, 32, 0, 0})
	CMember(TWeakObjectPtr<UClass*>)                   AthenaStateWidget_Frontend                                  OFFSET(get<T>, {0x2D8, 32, 0, 0})
	CMember(TWeakObjectPtr<UClass*>)                   AthenaStateWidget_MobileFrontend                            OFFSET(get<T>, {0x2F8, 32, 0, 0})
	CMember(TWeakObjectPtr<UClass*>)                   AthenaStateWidget_NightNightMode                            OFFSET(get<T>, {0x318, 32, 0, 0})
	CMember(TWeakObjectPtr<UClass*>)                   AthenaStateWidget_HUD                                       OFFSET(get<T>, {0x338, 32, 0, 0})
	CMember(TWeakObjectPtr<UClass*>)                   AthenaStateWidget_MobileHUD                                 OFFSET(get<T>, {0x358, 32, 0, 0})
	CMember(TWeakObjectPtr<UClass*>)                   HUDLayoutToolV2SoftClass                                    OFFSET(get<T>, {0x378, 32, 0, 0})
	CMember(TWeakObjectPtr<UClass*>)                   AthenaStateWidget_Replay                                    OFFSET(get<T>, {0x398, 32, 0, 0})
	CMember(TWeakObjectPtr<UClass*>)                   MFA_ModalClass                                              OFFSET(get<T>, {0x3B8, 32, 0, 0})
	CMember(TWeakObjectPtr<UClass*>)                   EulaClass                                                   OFFSET(get<T>, {0x3D8, 32, 0, 0})
	CMember(TWeakObjectPtr<UClass*>)                   FactionScreenSoftClassRef                                   OFFSET(get<T>, {0x3F8, 32, 0, 0})
	CMember(TWeakObjectPtr<UClass*>)                   CreativeServerBrowserSoftClassRef                           OFFSET(get<T>, {0x418, 32, 0, 0})
	CMember(TWeakObjectPtr<UClass*>)                   RegionLockMessageWidgetClass                                OFFSET(get<T>, {0x438, 32, 0, 0})
	CMember(TWeakObjectPtr<UClass*>)                   ParentalControlsWidgetClass                                 OFFSET(get<T>, {0x458, 32, 0, 0})
	CMember(TMap<TEnumAsByte, int32_t>)                StandardImageBrushSizes                                     OFFSET(get<T>, {0x478, 80, 0, 0})
	CMember(TWeakObjectPtr<UFortMultiSizeBrushAsset*>) PowerRatingIconMultiSizeBrush                               OFFSET(get<T>, {0x4C8, 32, 0, 0})
	SMember(FLinearColor)                              PowerRatingEnchantedPositiveColorOverride                   OFFSET(getStruct<T>, {0x4E8, 16, 0, 0})
	SMember(FLinearColor)                              PowerRatingEnchantedNegativeColorOverride                   OFFSET(getStruct<T>, {0x4F8, 16, 0, 0})
	CMember(TWeakObjectPtr<UFortMultiSizeBrushAsset*>) FilledTierPipMultiSizeBrush                                 OFFSET(get<T>, {0x508, 32, 0, 0})
	CMember(TWeakObjectPtr<UFortMultiSizeBrushAsset*>) UnfilledTierPipMultiSizeBrush                               OFFSET(get<T>, {0x528, 32, 0, 0})
	CMember(TWeakObjectPtr<UFortMultiSizeBrushAsset*>) PreviewingTierPipMultiSizeBrush                             OFFSET(get<T>, {0x548, 32, 0, 0})
	CMember(TWeakObjectPtr<UFortMultiSizeBrushAsset*>) PromotedTierPipMultiSizeBrush                               OFFSET(get<T>, {0x568, 32, 0, 0})
	CMember(TWeakObjectPtr<UFortMultiSizeBrushAsset*>) UpgradeArrowMultiSizeBrush                                  OFFSET(get<T>, {0x588, 32, 0, 0})
	CMember(TWeakObjectPtr<UFortMultiSizeBrushAsset*>) ComparisonUpArrowMultiSizeBrush                             OFFSET(get<T>, {0x5A8, 32, 0, 0})
	SMember(FLinearColor)                              BetterComparisonResultColor                                 OFFSET(getStruct<T>, {0x5C8, 16, 0, 0})
	SMember(FLinearColor)                              WorseComparisonResultColor                                  OFFSET(getStruct<T>, {0x5D8, 16, 0, 0})
	CMember(TWeakObjectPtr<UFortMultiSizeBrushAsset*>) InventoryOverflowIndicatorMultiSizeBrush                    OFFSET(get<T>, {0x5E8, 32, 0, 0})
	CMember(TWeakObjectPtr<UFortMultiSizeBrushAsset*>) TrackedSchematicIndicatorMultiSizeBrush                     OFFSET(get<T>, {0x608, 32, 0, 0})
	CMember(TWeakObjectPtr<UFortMultiSizeBrushAsset*>) FavoritedItemIndicatorMultiSizeBrush                        OFFSET(get<T>, {0x628, 32, 0, 0})
	CMember(TMap<UClass*, TWeakObjectPtr>)             VariantToWidgetMaping                                       OFFSET(get<T>, {0x648, 80, 0, 0})
	CMember(TWeakObjectPtr<UClass*>)                   PlayerSurveyWidgetClass                                     OFFSET(get<T>, {0x698, 32, 0, 0})
	DMember(bool)                                      bEnableSocialFeatures                                       OFFSET(get<bool>, {0x6B8, 1, 0, 0})
	DMember(bool)                                      bEnableChat                                                 OFFSET(get<bool>, {0x6B9, 1, 0, 0})
	DMember(bool)                                      bEnablePartyFeatures                                        OFFSET(get<bool>, {0x6BA, 1, 0, 0})
	CMember(TMap<ESocialChannelType, FSocialChatMessageEntryStyle>) ChatChannelStyles                              OFFSET(get<T>, {0x6C0, 80, 0, 0})
	CMember(UClass*)                                   SocialPanelClass                                            OFFSET(get<T>, {0x710, 8, 0, 0})
	CMember(UClass*)                                   TeamMemberManageClass                                       OFFSET(get<T>, {0x718, 8, 0, 0})
	CMember(TWeakObjectPtr<UFortMultiSizeBrushAsset*>) UnlockedSquadSlotBorderMultiSizeBrush                       OFFSET(get<T>, {0x720, 32, 0, 0})
	CMember(TWeakObjectPtr<UFortMultiSizeBrushAsset*>) LockedSquadSlotBorderMultiSizeBrush                         OFFSET(get<T>, {0x740, 32, 0, 0})
	CMember(TWeakObjectPtr<UFortMultiSizeBrushAsset*>) ReadOnlySquadSlotBorderMultiSizeBrush                       OFFSET(get<T>, {0x760, 32, 0, 0})
	CMember(TWeakObjectPtr<UFortMultiSizeBrushAsset*>) DefenderIconMultiSizeBrush                                  OFFSET(get<T>, {0x780, 32, 0, 0})
	CMember(TWeakObjectPtr<UFortMultiSizeBrushAsset*>) AssaultDefenderIconMultiSizeBrush                           OFFSET(get<T>, {0x7A0, 32, 0, 0})
	CMember(TWeakObjectPtr<UFortMultiSizeBrushAsset*>) PistolDefenderIconMultiSizeBrush                            OFFSET(get<T>, {0x7C0, 32, 0, 0})
	CMember(TWeakObjectPtr<UFortMultiSizeBrushAsset*>) MeleeDefenderIconMultiSizeBrush                             OFFSET(get<T>, {0x7E0, 32, 0, 0})
	CMember(TWeakObjectPtr<UFortMultiSizeBrushAsset*>) SniperDefenderIconMultiSizeBrush                            OFFSET(get<T>, {0x800, 32, 0, 0})
	CMember(TWeakObjectPtr<UFortMultiSizeBrushAsset*>) ShotgunDefenderIconMultiSizeBrush                           OFFSET(get<T>, {0x820, 32, 0, 0})
	CMember(TWeakObjectPtr<UFortMultiSizeBrushAsset*>) LeadSurvivorIconMultiSizeBrush                              OFFSET(get<T>, {0x840, 32, 0, 0})
	CMember(TWeakObjectPtr<UFortMultiSizeBrushAsset*>) SurvivorIconMultiSizeBrush                                  OFFSET(get<T>, {0x860, 32, 0, 0})
	CMember(TWeakObjectPtr<UFortMultiSizeBrushAsset*>) TrapIconMultiSizeBrush                                      OFFSET(get<T>, {0x880, 32, 0, 0})
	CMember(TWeakObjectPtr<UClass*>)                   KeybindWidgetClass                                          OFFSET(get<T>, {0x8A0, 32, 0, 0})
	CMember(TWeakObjectPtr<UClass*>)                   HiddenCursorWidget                                          OFFSET(get<T>, {0x8C0, 32, 0, 0})
	CMember(TWeakObjectPtr<UClass*>)                   VirtualCursorWidget                                         OFFSET(get<T>, {0x8E0, 32, 0, 0})
	SMember(FRuntimeFloatCurve)                        UIScaleCurve                                                OFFSET(getStruct<T>, {0x900, 136, 0, 0})
	SMember(FRuntimeFloatCurve)                        FrontEndUIScaleCurve                                        OFFSET(getStruct<T>, {0x988, 136, 0, 0})
	CMember(TWeakObjectPtr<UDataTable*>)               EventsStyleDataTable                                        OFFSET(get<T>, {0xA10, 32, 0, 0})
	CMember(TWeakObjectPtr<UMaterialInterface*>)       DefaultDivisionRoundIcon                                    OFFSET(get<T>, {0xA30, 32, 0, 0})
	CMember(TMap<int32_t, TWeakObjectPtr>)             DivisionRoundToIcons                                        OFFSET(get<T>, {0xA50, 80, 0, 0})
	CMember(TMap<int32_t, TWeakObjectPtr>)             DivisionRoundToFancyIcons                                   OFFSET(get<T>, {0xAA0, 80, 0, 0})
	CMember(TMap<TEnumAsByte, UClass*>)                ItemCardPowerRatingTextStylesByBrushSize                    OFFSET(get<T>, {0xAF0, 80, 0, 0})
	CMember(TMap<TEnumAsByte, UClass*>)                ItemCardStackCountTextStylesByBrushSize                     OFFSET(get<T>, {0xB40, 80, 0, 0})
	CMember(TWeakObjectPtr<UMaterialInterface*>)       ItemCardLevelMeterMaterial                                  OFFSET(get<T>, {0xB90, 32, 0, 0})
	CMember(TWeakObjectPtr<UMaterialInterface*>)       ItemCardDurabilityMeterMaterial                             OFFSET(get<T>, {0xBB0, 32, 0, 0})
	SMember(FSlateBrush)                               ItemCardBackgroundPlateBrush                                OFFSET(getStruct<T>, {0xBD0, 192, 0, 0})
	SMember(FSlateBrush)                               ItemCardRarityGradientBrush                                 OFFSET(getStruct<T>, {0xC90, 192, 0, 0})
	SMember(FSlateBrush)                               ItemCardDefenderPortraitBackgroundBrush                     OFFSET(getStruct<T>, {0xD50, 192, 0, 0})
	SMember(FSlateBrush)                               ItemCardHeroPortraitBackgroundBrush                         OFFSET(getStruct<T>, {0xE10, 192, 0, 0})
	SMember(FSlateBrush)                               ItemCardLeadSurvivorPortraitBackgroundBrush                 OFFSET(getStruct<T>, {0xED0, 192, 0, 0})
	SMember(FSlateBrush)                               ItemCardSchematicBackgroundBrush                            OFFSET(getStruct<T>, {0xF90, 192, 0, 0})
	CMember(TWeakObjectPtr<UFortMultiSizeBrushAsset*>) ItemCardRewardTraitsBackgroundMultiSizeBrush                OFFSET(get<T>, {0x1050, 32, 0, 0})
	CMember(TWeakObjectPtr<UFortMultiSizeBrushAsset*>) ItemCardSchematicTraitsBackgroundMultiSizeBrush             OFFSET(get<T>, {0x1070, 32, 0, 0})
	CMember(TWeakObjectPtr<UClass*>)                   MatchReadyDesktopPopupWidgetType                            OFFSET(get<T>, {0x1090, 32, 0, 0})
	CMember(TWeakObjectPtr<UClass*>)                   PlayerFeedbackModalWidget                                   OFFSET(get<T>, {0x10B0, 32, 0, 0})
	DMember(bool)                                      bLimitedToES2Features                                       OFFSET(get<bool>, {0x10D0, 1, 0, 0})
	SMember(FWeightedBlendables)                       FrontEndFFPostProcessMaterials                              OFFSET(getStruct<T>, {0x10D8, 16, 0, 0})
	DMember(bool)                                      bUseSpecificPinataWeapon                                    OFFSET(get<bool>, {0x10E8, 1, 0, 0})
	DMember(bool)                                      bQuestVOEnabled                                             OFFSET(get<bool>, {0x10E9, 1, 0, 0})
	CMember(TMap<EFortItemCardSize, FVector2D>)        PersonnelAndSchematicCardSizes                              OFFSET(get<T>, {0x10F0, 80, 0, 0})
	CMember(TMap<EFortItemCardSize, FVector2D>)        OtherItemCardSizes                                          OFFSET(get<T>, {0x1140, 80, 0, 0})
	CMember(TMap<EFortItemCardSize, TWeakObjectPtr>)   PersonnelAndSchematicItemCardMaterial                       OFFSET(get<T>, {0x1190, 80, 0, 0})
	CMember(TMap<EFortItemCardSize, TWeakObjectPtr>)   CardPackItemCardMaterial                                    OFFSET(get<T>, {0x11E0, 80, 0, 0})
	CMember(TMap<EFortItemCardSize, TWeakObjectPtr>)   InstanceItemCardMaterial                                    OFFSET(get<T>, {0x1230, 80, 0, 0})
	CMember(TMap<EFortItemCardSize, TWeakObjectPtr>)   TransformKeyItemCardMaterial                                OFFSET(get<T>, {0x1280, 80, 0, 0})
	CMember(TMap<EFortItemCardSize, TWeakObjectPtr>)   CosmeticItemCardMaterial                                    OFFSET(get<T>, {0x12D0, 80, 0, 0})
	CMember(TArray<EFortItemType>)                     ItemTypesWhoseImagesReplaceCardBackgrounds                  OFFSET(get<T>, {0x1320, 16, 0, 0})
	CMember(TSet<EFortItemType>)                       ItemTypesToHideCountWhenCountEqualsOne                      OFFSET(get<T>, {0x1330, 80, 0, 0})
	CMember(TMap<EFortItemCardSize, TWeakObjectPtr>)   ItemCardDetailAreaMaterial                                  OFFSET(get<T>, {0x1380, 80, 0, 0})
	CMember(TWeakObjectPtr<UFortMultiSizeBrushAsset*>) FavoriteBookmarkMultiSizeBrush                              OFFSET(get<T>, {0x13D0, 32, 0, 0})
	CMember(TWeakObjectPtr<UFortMultiSizeBrushAsset*>) PermanentTransformKeykMultiSizeBrush                        OFFSET(get<T>, {0x13F0, 32, 0, 0})
	CMember(TWeakObjectPtr<UFortMultiSizeBrushAsset*>) ConsumableTransformKeykMultiSizeBrush                       OFFSET(get<T>, {0x1410, 32, 0, 0})
	CMember(TMap<FGameplayTag, TWeakObjectPtr>)        DefenderSubtypeWeaponTextures                               OFFSET(get<T>, {0x1430, 80, 0, 0})
	CMember(TMap<EFortBuffState, TWeakObjectPtr>)      EnchantedCustomRatingBlockBackgroundMaterial                OFFSET(get<T>, {0x1480, 80, 0, 0})
	CMember(TMap<EFortBuffState, TWeakObjectPtr>)      NormalCustomRatingBlockBackgroundMaterial                   OFFSET(get<T>, {0x14D0, 80, 0, 0})
	SMember(FMargin)                                   CustomRatingBlockBackgroundBrushMargin                      OFFSET(getStruct<T>, {0x1520, 16, 0, 0})
	CMember(TWeakObjectPtr<UMaterialInterface*>)       UniversalItemCardDurabilityMeterMaterial                    OFFSET(get<T>, {0x1530, 32, 0, 0})
	CMember(TWeakObjectPtr<UMaterialInterface*>)       UniversalItemCardLevelMeterMaterial                         OFFSET(get<T>, {0x1550, 32, 0, 0})
	CMember(TWeakObjectPtr<UMaterialInterface*>)       UniversalItemCardTraitIconMaterial                          OFFSET(get<T>, {0x1570, 32, 0, 0})
	CMember(TWeakObjectPtr<UMaterialInterface*>)       UniversalItemCardUnearnedTierIconMaterial                   OFFSET(get<T>, {0x1590, 32, 0, 0})
	CMember(TWeakObjectPtr<UMaterialInterface*>)       UniversalItemCardAvailableTierIconMaterial                  OFFSET(get<T>, {0x15B0, 32, 0, 0})
	CMember(TWeakObjectPtr<UMaterialInterface*>)       UniversalItemCardEarnedTierIconMaterial                     OFFSET(get<T>, {0x15D0, 32, 0, 0})
	CMember(TWeakObjectPtr<UMaterialInterface*>)       UniversalItemCardPromotedTierIconMaterial                   OFFSET(get<T>, {0x15F0, 32, 0, 0})
	CMember(TWeakObjectPtr<UFortItemDefinition*>)      MysteryItemDefinition                                       OFFSET(get<T>, {0x1610, 32, 0, 0})
	CMember(TWeakObjectPtr<UTexture2D*>)               LoadingCardTexture                                          OFFSET(get<T>, {0x1630, 32, 0, 0})
	SMember(FFortItemCard_XL_PersonnelAndSchematics_Configuration) ItemCardConfig_XXL_PersonnelAndSchematics       OFFSET(getStruct<T>, {0x1650, 1296, 0, 0})
	SMember(FFortItemCard_XL_ItemInstance_Configuration) ItemCardConfig_XXL_ItemInstance                           OFFSET(getStruct<T>, {0x1B60, 752, 0, 0})
	SMember(FFortItemCard_XL_TransformKey_Configuration) ItemCardConfig_XXL_TransformKey                           OFFSET(getStruct<T>, {0x1E50, 72, 0, 0})
	SMember(FFortItemCard_XL_PersonnelAndSchematics_Configuration) ItemCardConfig_XL_PersonnelAndSchematics        OFFSET(getStruct<T>, {0x1EA0, 1296, 0, 0})
	SMember(FFortItemCard_XL_ItemInstance_Configuration) ItemCardConfig_XL_ItemInstance                            OFFSET(getStruct<T>, {0x23B0, 752, 0, 0})
	SMember(FFortItemCard_XL_TransformKey_Configuration) ItemCardConfig_XL_TransformKey                            OFFSET(getStruct<T>, {0x26A0, 72, 0, 0})
	SMember(FFortItemCard_L_PersonnelAndSchematics_Configuration) ItemCardConfig_L_PersonnelAndSchematics          OFFSET(getStruct<T>, {0x26F0, 1168, 0, 0})
	SMember(FFortItemCard_L_ItemInstance_Configuration) ItemCardConfig_L_ItemInstance                              OFFSET(getStruct<T>, {0x2B80, 752, 0, 0})
	SMember(FFortItemCard_L_TransformKey_Configuration) ItemCardConfig_L_TransformKey                              OFFSET(getStruct<T>, {0x2E70, 72, 0, 0})
	SMember(FFortItemCard_M_PersonnelAndSchematics_Configuration) ItemCardConfig_M_PersonnelAndSchematics          OFFSET(getStruct<T>, {0x2EC0, 1168, 0, 0})
	SMember(FFortItemCard_M_ItemInstance_Configuration) ItemCardConfig_M_ItemInstance                              OFFSET(getStruct<T>, {0x3350, 752, 0, 0})
	SMember(FFortItemCard_M_TransformKey_Configuration) ItemCardConfig_M_TransformKey                              OFFSET(getStruct<T>, {0x3640, 72, 0, 0})
	SMember(FFortItemCard_S_PersonnelAndSchematics_Configuration) ItemCardConfig_S_PersonnelAndSchematics          OFFSET(getStruct<T>, {0x3690, 1168, 0, 0})
	SMember(FFortItemCard_S_ItemInstance_Configuration) ItemCardConfig_S_ItemInstance                              OFFSET(getStruct<T>, {0x3B20, 736, 0, 0})
	SMember(FFortItemCard_S_TransformKey_Configuration) ItemCardConfig_S_TransformKey                              OFFSET(getStruct<T>, {0x3E00, 72, 0, 0})
	SMember(FFortItemCard_XS_PersonnelAndSchematics_Configuration) ItemCardConfig_XS_PersonnelAndSchematics        OFFSET(getStruct<T>, {0x3E48, 72, 0, 0})
	SMember(FFortItemCard_XS_ItemInstance_Configuration) ItemCardConfig_XS_ItemInstance                            OFFSET(getStruct<T>, {0x3E90, 688, 0, 0})
	SMember(FFortItemCard_XS_TransformKey_Configuration) ItemCardConfig_XS_TransformKey                            OFFSET(getStruct<T>, {0x4140, 72, 0, 0})
	SMember(FFortItemCard_XS_PersonnelAndSchematics_Configuration) ItemCardConfig_XXS_PersonnelAndSchematics       OFFSET(getStruct<T>, {0x4188, 72, 0, 0})
	SMember(FFortItemCard_XXS_ItemInstance_Configuration) ItemCardConfig_XXS_ItemInstance                          OFFSET(getStruct<T>, {0x41D0, 40, 0, 0})
	SMember(FFortItemCard_XS_TransformKey_Configuration) ItemCardConfig_XXS_TransformKey                           OFFSET(getStruct<T>, {0x41F8, 72, 0, 0})
	CMember(TWeakObjectPtr<UDataTable*>)               HealthyGamingDataTable                                      OFFSET(get<T>, {0x4240, 32, 0, 0})
	CMember(TWeakObjectPtr<UDataTable*>)               TrapPickerGameplayTagSettings                               OFFSET(get<T>, {0x4260, 32, 0, 0})
	SMember(FFortUIPickerTrapSortScores)               TrapPickerSortScores                                        OFFSET(getStruct<T>, {0x4280, 20, 0, 0})
	CMember(UFortTooltipDisplayStatsLookupTable*)      ObjClassToTooltipStatsMap                                   OFFSET(get<T>, {0x4298, 8, 0, 0})
	CMember(TWeakObjectPtr<UClass*>)                   LoadingScreenBacchusTutorialWidget                          OFFSET(get<T>, {0x42A0, 32, 0, 0})
	CMember(TWeakObjectPtr<UClass*>)                   LoadingScreenReturnToKairosWidget                           OFFSET(get<T>, {0x42C0, 32, 0, 0})
	CMember(TWeakObjectPtr<USlateBrushAsset*>)         ActorCanvasArrowBrush                                       OFFSET(get<T>, {0x42E0, 32, 0, 0})
	CMember(TWeakObjectPtr<UDataTable*>)               UITutorialData                                              OFFSET(get<T>, {0x4300, 32, 0, 0})
	CMember(TWeakObjectPtr<UObject*>)                  PawnHealthBarPowerRatingBacking                             OFFSET(get<T>, {0x4320, 32, 0, 0})
	CMember(TArray<UFortUIDataProfileStats*>)          ProfileStatStyleSets                                        OFFSET(get<T>, {0x4340, 16, 0, 0})
	CMember(TMap<FName, TWeakObjectPtr>)               LegacyNativeUIBrushMap                                      OFFSET(get<T>, {0x4350, 80, 0, 0})
	CMember(TMap<FName, TWeakObjectPtr>)               LegacyNativeUIAssetMap                                      OFFSET(get<T>, {0x43A0, 80, 0, 0})
	CMember(TWeakObjectPtr<UClass*>)                   ItemPairsInspectionScreen                                   OFFSET(get<T>, {0x43F0, 32, 0, 0})
	CMember(TWeakObjectPtr<UClass*>)                   RealMoneyPurchaseSpecialInfoModal                           OFFSET(get<T>, {0x4410, 32, 0, 0})
	CMember(UAthenaItemShopConfiguration*)             ItemShopConfiguration                                       OFFSET(get<T>, {0x4430, 8, 0, 0})
	DMember(float)                                     AnalogRotateSpeed                                           OFFSET(get<float>, {0x4438, 4, 0, 0})
	DMember(float)                                     DragRotateSpeed                                             OFFSET(get<float>, {0x443C, 4, 0, 0})
	DMember(float)                                     TouchSwipeRotateRate                                        OFFSET(get<float>, {0x4440, 4, 0, 0})
	DMember(float)                                     MouseWheelZoomSpeed                                         OFFSET(get<float>, {0x4444, 4, 0, 0})
	DMember(float)                                     DragZoomSpeed                                               OFFSET(get<float>, {0x4448, 4, 0, 0})
	DMember(float)                                     TriggerZoomSpeed                                            OFFSET(get<float>, {0x444C, 4, 0, 0})
	DMember(float)                                     TouchZoomPinchRate                                          OFFSET(get<float>, {0x4450, 4, 0, 0})
	DMember(float)                                     ItemViewCompetingAxisInputThreshold                         OFFSET(get<float>, {0x4454, 4, 0, 0})
	CMember(TArray<EFortItemType>)                     ItemTypesToUseVaultCamera                                   OFFSET(get<T>, {0x4458, 16, 0, 0})
	CMember(UClass*)                                   FrontendItemViewSettingsManager                             OFFSET(get<T>, {0x4468, 8, 0, 0})
	CMember(TMap<FGameplayTag, TWeakObjectPtr>)        WidgetAliasesDefault                                        OFFSET(get<T>, {0x4470, 80, 0, 0})
	CMember(UFortVideoDisplayData*)                    VideoDisplayData                                            OFFSET(get<T>, {0x4510, 8, 0, 0})
	CMember(UFortSocialDisplayData*)                   SocialDisplayData                                           OFFSET(get<T>, {0x4518, 8, 0, 0})
	CMember(UAthenaChallengeDisplayData*)              ChallengeDisplayData                                        OFFSET(get<T>, {0x4520, 8, 0, 0})
	CMember(UAthenaTeamDisplayData*)                   SquadStyleData                                              OFFSET(get<T>, {0x4528, 8, 0, 0})
	CMember(UFortStoreDisplayData*)                    StoreDisplayData                                            OFFSET(get<T>, {0x4530, 8, 0, 0})
	CMember(UFortItemPresentationDisplayData*)         ItemPresentationDisplayData                                 OFFSET(get<T>, {0x4538, 8, 0, 0})
	CMember(UDataTable*)                               PipTest                                                     OFFSET(get<T>, {0x4540, 8, 0, 0})
	CMember(TWeakObjectPtr<UPaperSprite*>)             ResourceSprites                                             OFFSET(get<T>, {0x4550, 192, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortUIDataConfiguration.GetDefenderSubtypeIconMultiSizeBrushByTag
	// UFortMultiSizeBrushAsset* GetDefenderSubtypeIconMultiSizeBrushByTag(FGameplayTag DefenderSubtypeTag);                    // [0x93d77d0] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
};

/// Class /Script/FortniteUI.FortUIDataProfileStats
/// Size: 0x0050 (0x000030 - 0x000080)
class UFortUIDataProfileStats : public UDataAsset
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 128;

public:
	CMember(TMap<FGameplayTag, FFortUIStatStyle>)      ProfileStatStyles                                           OFFSET(get<T>, {0x30, 80, 0, 0})
};

/// Class /Script/FortniteUI.FortUIMessageItemWidget
/// Size: 0x0040 (0x0002E8 - 0x000328)
class UFortUIMessageItemWidget : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 808;

public:
	SMember(FMulticastInlineDelegate)                  OnMessageDisplayed                                          OFFSET(getStruct<T>, {0x2E8, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnMessageRemoved                                            OFFSET(getStruct<T>, {0x2F8, 16, 0, 0})
	SMember(FName)                                     MessageID                                                   OFFSET(getStruct<T>, {0x308, 4, 0, 0})
	DMember(int32_t)                                   StackSize                                                   OFFSET(get<int32_t>, {0x30C, 4, 0, 0})
	DMember(float)                                     DisplayDuration                                             OFFSET(get<float>, {0x310, 4, 0, 0})
	DMember(float)                                     RemoveDuration                                              OFFSET(get<float>, {0x314, 4, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortUIMessageItemWidget.OnStackSizeChanged
	// void OnStackSizeChanged(int32_t OldStackSize);                                                                           // [0x1d9241c] Event|Protected|BlueprintCallable|BlueprintEvent 
	// Function /Script/FortniteUI.FortUIMessageItemWidget.OnReturnedToPool
	// void OnReturnedToPool();                                                                                                 // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortUIMessageItemWidget.OnBeginRemove
	// void OnBeginRemove();                                                                                                    // [0x1d9241c] Event|Protected|BlueprintEvent 
};

/// Class /Script/FortniteUI.FortUIMessageManager
/// Size: 0x0080 (0x000028 - 0x0000A8)
class UFortUIMessageManager : public UObject
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 168;

public:
	SMember(FMulticastInlineDelegate)                  OnMessageAvailable                                          OFFSET(getStruct<T>, {0x28, 16, 0, 0})
	CMember(TArray<UFortUIMessageItemWidget*>)         MessageQueue                                                OFFSET(get<T>, {0x38, 16, 0, 0})
	CMember(TArray<TWeakObjectPtr>)                    CurrentlyDisplayedMessages                                  OFFSET(get<T>, {0x48, 16, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortUIMessageManager.HandleMessageRemoved
	// void HandleMessageRemoved(UFortUIMessageItemWidget* MessageItem);                                                        // [0x93d8a7c] Final|Native|Private 
	// Function /Script/FortniteUI.FortUIMessageManager.HandleMessageDisplayed
	// void HandleMessageDisplayed(UFortUIMessageItemWidget* MessageItem);                                                      // [0x93d89fc] Final|Native|Private 
	// Function /Script/FortniteUI.FortUIMessageManager.GetNumDisplayedItems
	// int32_t GetNumDisplayedItems();                                                                                          // [0x2711c6c] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortUIMessageManager.GetNextMessageInQueue
	// UFortUIMessageItemWidget* GetNextMessageInQueue();                                                                       // [0x93d85b0] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortUIMessageManager.AddMessageItem
	// UFortUIMessageItemWidget* AddMessageItem(UClass* MessageItemClass, APlayerController* OwningPlayer, FName MessageID, int32_t StackCount); // [0x93d5b2c] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/FortniteUI.UINavigationManager
/// Size: 0x0020 (0x000028 - 0x000048)
class UUINavigationManager : public UObject
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 72;

public:
	SMember(FMulticastInlineDelegate)                  OnNavigationEvent                                           OFFSET(getStruct<T>, {0x28, 16, 0, 0})
	CMember(TArray<FUINavigationEntry>)                NavigationStack                                             OFFSET(get<T>, {0x38, 16, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.UINavigationManager.PushNavigation
	// void PushNavigation(FText DisplayName, UObject* ObjectData, FName IdData, int32_t IntData, FDelegateProperty& OnNavigateTo, FDelegateProperty& OnNavigateFrom); // [0x93da774] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/FortniteUI.UINavigationManager.PopNavigation
	// void PopNavigation();                                                                                                    // [0x93d9aa0] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.UINavigationManager.NavigationToIndex
	// void NavigationToIndex(int32_t Index);                                                                                   // [0x93d95f4] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.UINavigationManager.GetStackSize
	// int32_t GetStackSize();                                                                                                  // [0x2ef69d0] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.UINavigationManager.GetDisplayName
	// FText GetDisplayName(int32_t Index);                                                                                     // [0x93d7924] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.UINavigationManager.ClearStack
	// void ClearStack();                                                                                                       // [0x93d6614] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/FortniteUI.FortUINavigationManager
/// Size: 0x0118 (0x000048 - 0x000160)
class UFortUINavigationManager : public UUINavigationManager
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 352;

public:
	SMember(FMulticastInlineDelegate)                  OnFeatureNavigateOp                                         OFFSET(getStruct<T>, {0x58, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnSquadSlotNavigateRequest                                  OFFSET(getStruct<T>, {0x78, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnPopContentStackOp                                         OFFSET(getStruct<T>, {0xC8, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnSquadNavigationOp                                         OFFSET(getStruct<T>, {0xD8, 16, 0, 0})
	CMember(TArray<FFortUINavigationRequest>)          NavigationRequests                                          OFFSET(get<T>, {0x138, 16, 0, 0})
	CMember(UUserWidget*)                              HiddenCursorWidget                                          OFFSET(get<T>, {0x148, 8, 0, 0})
	CMember(UUserWidget*)                              VirtualCursorWidget                                         OFFSET(get<T>, {0x150, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortUINavigationManager.TryGetPendingNavigationOp
	// bool TryGetPendingNavigationOp(FFortUINavigationOperation& NavigationOp);                                                // [0x93dd060] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/FortniteUI.FortUINavigationManager.SetScrollWidget
	// void SetScrollWidget(UWidget* Widget);                                                                                   // [0x93dbea4] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortUINavigationManager.PushItemManagementScreen
	// void PushItemManagementScreen(EFortFrontendInventoryFilter ItemManagementFilter, UFortItem* ItemToSelect, bool bShowAutoMulch); // [0x93da678] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortUINavigationManager.PushItemInspectionScreen
	// void PushItemInspectionScreen(UFortItem* ItemToInspect, EFortItemInspectionMode Mode, UFortItemTileView* CycleTileView, bool bReadOnly, bool bAllowFavoriting, bool bIsTemporaryItem, bool bAllowRarityUpgrading); // [0x93da450] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortUINavigationManager.PushHeroLoadoutScreen
	// void PushHeroLoadoutScreen(UFortCampaignHeroLoadoutItem* HeroLoadout);                                                   // [0x93da334] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortUINavigationManager.NavigateToItemManagementScreen
	// void NavigateToItemManagementScreen(EFortFrontendInventoryFilter Filter);                                                // [0x93d9490] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortUINavigationManager.NavigateToFeature
	// void NavigateToFeature(EFortUIFeature Feature);                                                                          // [0x93d9410] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortUINavigationManager.HasPendingNavigationOp
	// bool HasPendingNavigationOp(EFortUINavigationOp NavigationOp);                                                           // [0x93d8c14] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortUINavigationManager.CompletePendingNavigationOp
	// void CompletePendingNavigationOp(EFortUINavigationOp NavigationOp);                                                      // [0x93d662c] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortUINavigationManager.CenterWidget
	// void CenterWidget(UWidget* Widget);                                                                                      // [0x93d6504] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortUINavigationManager.CanNavigateToQuestObjective
	// bool CanNavigateToQuestObjective(UFortQuestItem* QuestItem);                                                             // [0x93d628c] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortUINavigationManager.AttemptPlayQuest
	// bool AttemptPlayQuest(UFortQuestItem* Quest);                                                                            // [0x93d5f18] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortUINavigationManager.AttemptMatchmakeForQuest
	// bool AttemptMatchmakeForQuest(UFortQuestItem* Quest, bool& OutContentNotDownloaded);                                     // [0x93d5e48] Final|Native|Public|HasOutParms|BlueprintCallable 
};

/// Class /Script/FortniteUI.FortUINotificationManager
/// Size: 0x0070 (0x000028 - 0x000098)
class UFortUINotificationManager : public UObject
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 152;

public:
	CMember(TArray<UFortUINotificationQueue*>)         UINotificationQueues                                        OFFSET(get<T>, {0x28, 16, 0, 0})
	CMember(UFortLocalPlayer*)                         LocalPlayer                                                 OFFSET(get<T>, {0x38, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortUINotificationManager.HandlePurchaseBattlePassOfferComplete
	// void HandlePurchaseBattlePassOfferComplete(bool bSuccess);                                                               // [0x93d8b98] Final|Native|Private 
	// Function /Script/FortniteUI.FortUINotificationManager.HandleProfileUpdated
	// void HandleProfileUpdated();                                                                                             // [0x93d8b10] Final|Native|Private 
	// Function /Script/FortniteUI.FortUINotificationManager.HandleBattlePassPageUnlockToast
	// void HandleBattlePassPageUnlockToast();                                                                                  // [0x93d89e8] Final|Native|Private 
};

/// Class /Script/FortniteUI.FortUIStateWidget_ForcedIntro
/// Size: 0x00B8 (0x000418 - 0x0004D0)
class UFortUIStateWidget_ForcedIntro : public UFortUIStateWidgetBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1232;

public:
	SMember(FString)                                   PlaylistPluginName                                          OFFSET(getStruct<T>, {0x418, 16, 0, 0})
	SMember(FName)                                     PlaylistName                                                OFFSET(getStruct<T>, {0x428, 4, 0, 0})
	SMember(FDateTime)                                 MatchmakingStartTime                                        OFFSET(getStruct<T>, {0x430, 8, 0, 0})
	DMember(float)                                     MatchmakingStartTimeRandomness                              OFFSET(get<float>, {0x438, 4, 0, 0})
	DMember(bool)                                      bUseMCPTime                                                 OFFSET(get<bool>, {0x43C, 1, 0, 0})
	DMember(float)                                     MaxWaitTimeForMeshConfig                                    OFFSET(get<float>, {0x440, 4, 0, 0})
	DMember(float)                                     InitialDelayBeforeMM                                        OFFSET(get<float>, {0x444, 4, 0, 0})
	DMember(float)                                     MMTimeoutTime                                               OFFSET(get<float>, {0x448, 4, 0, 0})
	DMember(int32_t)                                   MaxNumOfMMAttempts                                          OFFSET(get<int32_t>, {0x44C, 4, 0, 0})
	DMember(float)                                     TimeBetweenMMAttempts                                       OFFSET(get<float>, {0x450, 4, 0, 0})
	DMember(float)                                     TimeBetweenMMAttemptsMultiplier                             OFFSET(get<float>, {0x454, 4, 0, 0})
	DMember(bool)                                      bLocalOnlyOnFail                                            OFFSET(get<bool>, {0x459, 1, 0, 0})
	DMember(bool)                                      bSetToDefaulPlaylistOnDeactivated                           OFFSET(get<bool>, {0x45A, 1, 0, 0})
	DMember(bool)                                      bSetLocalHasSeenForcedIntroOnDeactivated                    OFFSET(get<bool>, {0x45B, 1, 0, 0})
	CMember(UAthenaLoadingScreenItemDefinition*)       LoadingScreenDefinition                                     OFFSET(get<T>, {0x460, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_ForcedIntroState                                       OFFSET(get<T>, {0x468, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortUIStateWidget_ForcedIntro.StartMatch
	// void StartMatch();                                                                                                       // [0x2cf4738] Final|Exec|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.FortUIStateWidget_ForcedIntro.OnNewForcedIntroTextDisplayState
	// void OnNewForcedIntroTextDisplayState(EForcedIntroTextDisplayState NewState);                                            // [0x93d96f4] Native|Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortUIStateWidget_ForcedIntro.GetPlaylistLoadingScreenWidget
	// TWeakObjectPtr<UClass*> GetPlaylistLoadingScreenWidget();                                                                // [0x93d8674] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/FortniteUI.FortUIStateWidget_ForcedIntro_Valkyrie
/// Size: 0x0000 (0x0004D0 - 0x0004D0)
class UFortUIStateWidget_ForcedIntro_Valkyrie : public UFortUIStateWidget_ForcedIntro
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1232;

public:
};

/// Class /Script/FortniteUI.FortUIStateWidget_ForcedPlaylist
/// Size: 0x0000 (0x0004D0 - 0x0004D0)
class UFortUIStateWidget_ForcedPlaylist : public UFortUIStateWidget_ForcedIntro
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1232;

public:
};

/// Class /Script/FortniteUI.FortUIStateWidget_NightNightBase
/// Size: 0x0048 (0x000418 - 0x000460)
class UFortUIStateWidget_NightNightBase : public UFortUIStateWidgetBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1120;

public:
	DMember(bool)                                      bEnableNightNightPatchCheck                                 OFFSET(get<bool>, {0x418, 1, 0, 0})
	DMember(float)                                     PatchCheckIntervalSeconds                                   OFFSET(get<float>, {0x41C, 4, 0, 0})
	DMember(float)                                     PatchCheckIntervalJitterSeconds                             OFFSET(get<float>, {0x420, 4, 0, 0})
	SMember(FDateTime)                                 GameShutdownTime                                            OFFSET(getStruct<T>, {0x438, 8, 0, 0})
	DMember(float)                                     GameShutdownTimeJitterSeconds                               OFFSET(get<float>, {0x440, 4, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortUIStateWidget_NightNightBase.OnToggleUIChanged
	// void OnToggleUIChanged(bool bHideUI);                                                                                    // [0x1d9241c] Event|Protected|BlueprintEvent 
};

/// Class /Script/FortniteUI.FortVehicleInfoIndicatorWidget
/// Size: 0x0010 (0x0003D0 - 0x0003E0)
class UFortVehicleInfoIndicatorWidget : public UFortActorIndicatorWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 992;

public:
	CMember(TWeakObjectPtr<AActor*>)                   CurrentVehicle                                              OFFSET(get<T>, {0x3D0, 8, 0, 0})
	DMember(float)                                     TimeToHideWhenDamaged                                       OFFSET(get<float>, {0x3D8, 4, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortVehicleInfoIndicatorWidget.SetVehicle
	// void SetVehicle(AActor* NewVehicle);                                                                                     // [0x93dc3b8] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortVehicleInfoIndicatorWidget.OnVehicleHealthChanged
	// void OnVehicleHealthChanged();                                                                                           // [0x2f57a8c] Native|Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.FortVehicleInfoIndicatorWidget.OnVehicleChanged
	// void OnVehicleChanged();                                                                                                 // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.FortVehicleInfoIndicatorWidget.GetControlledPawn
	// APawn* GetControlledPawn();                                                                                              // [0x93d772c] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/FortniteUI.EnableVOIPNotification
/// Size: 0x0008 (0x000100 - 0x000108)
class UEnableVOIPNotification : public UFortUINotification
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 264;

public:
};

/// Class /Script/FortniteUI.FortVoiceChannelChangePopup
/// Size: 0x00F8 (0x000310 - 0x000408)
class UFortVoiceChannelChangePopup : public UFortToastWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1032;

public:
	DMember(bool)                                      bEnableVoiceChatNotifyEverySession                          OFFSET(get<bool>, {0x318, 1, 0, 0})
	DMember(bool)                                      bToastMode                                                  OFFSET(get<bool>, {0x319, 1, 0, 0})
	DMember(float)                                     VisiblityInSeconds                                          OFFSET(get<float>, {0x31C, 4, 0, 0})
	SMember(FText)                                     GameChannelText                                             OFFSET(getStruct<T>, {0x320, 24, 0, 0})
	SMember(FText)                                     PartyChannelText                                            OFFSET(getStruct<T>, {0x338, 24, 0, 0})
	SMember(FText)                                     JustJoinedChannelText                                       OFFSET(getStruct<T>, {0x350, 24, 0, 0})
	SMember(FText)                                     StayedInChannelText                                         OFFSET(getStruct<T>, {0x368, 24, 0, 0})
	CMember(TWeakObjectPtr<UInputComponent*>)          CachedGameChannelRecommendationInputComponent               OFFSET(get<T>, {0x3B8, 8, 0, 0})
	CMember(UWidgetAnimation*)                         Anim_SimplePopup                                            OFFSET(get<T>, {0x3C0, 8, 0, 0})
	CMember(UCommonRichTextBlock*)                     Text_TopLine                                                OFFSET(get<T>, {0x3C8, 8, 0, 0})
	CMember(UCommonRichTextBlock*)                     Text_MiddleLine                                             OFFSET(get<T>, {0x3D0, 8, 0, 0})
	CMember(UCommonRichTextBlock*)                     Text_BottomLine                                             OFFSET(get<T>, {0x3D8, 8, 0, 0})
	CMember(UCommonButtonLegacy*)                      ActionButton                                                OFFSET(get<T>, {0x3E0, 8, 0, 0})
	CMember(UCommonButtonLegacy*)                      Button_JoinGameChat                                         OFFSET(get<T>, {0x3E8, 8, 0, 0})
	CMember(UCommonWidgetSwitcherLegacy*)              Switcher_InputButtons                                       OFFSET(get<T>, {0x3F0, 8, 0, 0})
	CMember(UFortKeybindWidget*)                       HoldKeybindWidget_Keyboard                                  OFFSET(get<T>, {0x3F8, 8, 0, 0})
	CMember(UFortKeybindWidget*)                       HoldKeybindWidget_GamePad                                   OFFSET(get<T>, {0x400, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortVoiceChannelChangePopup.OnInputModeChanged
	// void OnInputModeChanged(ECommonInputType NewInputType);                                                                  // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortVoiceChannelChangePopup.HandleOpenCloseAnimationFinished
	// void HandleOpenCloseAnimationFinished();                                                                                 // [0x93d8afc] Final|Native|Private 
};

/// Class /Script/FortniteUI.FortBuildWatermark
/// Size: 0x0018 (0x000328 - 0x000340)
class UFortBuildWatermark : public UFortHUDElementWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 832;

public:
	CMember(UTextBlock*)                               Text_BuildWatermark                                         OFFSET(get<T>, {0x328, 8, 0, 0})
	CMember(UTextBlock*)                               Text_McpVersion                                             OFFSET(get<T>, {0x330, 8, 0, 0})
	CMember(UTextBlock*)                               Text_CalendarOffset                                         OFFSET(get<T>, {0x338, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortBuildWatermark.UpdateWatermark
	// void UpdateWatermark();                                                                                                  // [0x1fb061c] Final|Native|Protected|BlueprintCallable 
};

/// Class /Script/FortniteUI.FortColorPicker
/// Size: 0x0118 (0x000400 - 0x000518)
class UFortColorPicker : public UCommonActivatableWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1304;

public:
	CMember(UUniformGridPanel*)                        GridPanel_Swatches                                          OFFSET(get<T>, {0x400, 8, 0, 0})
	CMember(UClass*)                                   SwatchTileClass                                             OFFSET(get<T>, {0x408, 8, 0, 0})
	CMember(UCommonButtonGroupLegacy*)                 ButtonGroup_Swatches                                        OFFSET(get<T>, {0x410, 8, 0, 0})
	CMember(UCommonButtonLegacy*)                      Button_CustomColor                                          OFFSET(get<T>, {0x418, 8, 0, 0})
	CMember(UFortColorPickerSwatchTile*)               Swatch_CustomColor                                          OFFSET(get<T>, {0x420, 8, 0, 0})
	CMember(UFortColorPickerComponent*)                ColorComponent_Component1                                   OFFSET(get<T>, {0x428, 8, 0, 0})
	CMember(UFortColorPickerComponent*)                ColorComponent_Component2                                   OFFSET(get<T>, {0x430, 8, 0, 0})
	CMember(UFortColorPickerComponent*)                ColorComponent_Component3                                   OFFSET(get<T>, {0x438, 8, 0, 0})
	CMember(UCommonButtonLegacy*)                      Button_SaveColor                                            OFFSET(get<T>, {0x440, 8, 0, 0})
	CMember(UFortColorPickerSwatchTile*)               Swatch_CustomColorPreview                                   OFFSET(get<T>, {0x448, 8, 0, 0})
	CMember(TArray<FLinearColor>)                      Swatches                                                    OFFSET(get<T>, {0x450, 16, 0, 0})
	DMember(bool)                                      bNullOptionAvailable                                        OFFSET(get<bool>, {0x460, 1, 0, 0})
	DMember(bool)                                      bAutoSelectColorOnInitialize                                OFFSET(get<bool>, {0x461, 1, 0, 0})
	SMember(FLinearColor)                              StartingCustomColor                                         OFFSET(getStruct<T>, {0x464, 32, 0, 0})
	DMember(int32_t)                                   SwatchRowCount                                              OFFSET(get<int32_t>, {0x484, 4, 0, 0})
	SMember(FLinearColor)                              NullOptionColor                                             OFFSET(getStruct<T>, {0x488, 16, 0, 0})
	CMember(EColorPickerType)                          ColorPickerType                                             OFFSET(get<T>, {0x498, 1, 0, 0})
	DMember(bool)                                      bInitializeCustomColorFromSelectedSwatch                    OFFSET(get<bool>, {0x499, 1, 0, 0})
	CMember(EColorPickerColorRepresentation)           CustomColorRepresentation                                   OFFSET(get<T>, {0x49A, 1, 0, 0})
	CMember(UMaterialInterface*)                       HueMaterial                                                 OFFSET(get<T>, {0x4A0, 8, 0, 0})
	SMember(FName)                                     HueMaterialParam                                            OFFSET(getStruct<T>, {0x4A8, 4, 0, 0})
	CMember(UMaterialInterface*)                       SaturationMaterial                                          OFFSET(get<T>, {0x4B0, 8, 0, 0})
	SMember(FName)                                     SaturationMaterialParam                                     OFFSET(getStruct<T>, {0x4B8, 4, 0, 0})
	CMember(UMaterialInterface*)                       ValueMaterial                                               OFFSET(get<T>, {0x4C0, 8, 0, 0})
	SMember(FName)                                     ValueMaterialParam                                          OFFSET(getStruct<T>, {0x4C8, 4, 0, 0})
	SMember(FLinearColor)                              CurrentColor                                                OFFSET(getStruct<T>, {0x4CC, 16, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortColorPicker.OnSetupColorPicker
	// void OnSetupColorPicker(EColorPickerType InColorPickerType);                                                             // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortColorPicker.HandleSwatchColorSelected
	// void HandleSwatchColorSelected(UCommonButtonLegacy* AssociatedButton, int32_t ButtonIndex);                              // [0x9401e3c] Final|Native|Private 
	// Function /Script/FortniteUI.FortColorPicker.BP_OnSwapColorPickerType
	// void BP_OnSwapColorPickerType(bool bToSwatch);                                                                           // [0x1d9241c] Event|Protected|BlueprintEvent 
};

/// Class /Script/FortniteUI.FortColorPickerComponent
/// Size: 0x0038 (0x0002E8 - 0x000320)
class UFortColorPickerComponent : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 800;

public:
	CMember(UCommonTextBlock*)                         Text_ComponentName                                          OFFSET(get<T>, {0x2E8, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_CurrentValue                                           OFFSET(get<T>, {0x2F0, 8, 0, 0})
	CMember(UFortColorPickerSlider*)                   ColorSlider_Component                                       OFFSET(get<T>, {0x2F8, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortColorPickerComponent.HandleOnValueChanged
	// void HandleOnValueChanged(float NormalizedNewValue);                                                                     // [0x9401a1c] Final|Native|Private 
};

/// Class /Script/FortniteUI.FortColorPickerSlider
/// Size: 0x0010 (0x0006E0 - 0x0006F0)
class UFortColorPickerSlider : public UAnalogSlider
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1776;

public:
	CMember(UMaterialInstanceDynamic*)                 DynamicSliderMaterialInstance                               OFFSET(get<T>, {0x6E0, 8, 0, 0})
};

/// Class /Script/FortniteUI.FortColorPickerSwatchTile
/// Size: 0x0030 (0x0014E0 - 0x001510)
class UFortColorPickerSwatchTile : public UCommonButtonLegacy
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 5392;

public:
	CMember(UImage*)                                   Image_Color                                                 OFFSET(get<T>, {0x14E0, 8, 0, 0})
	CMember(UImage*)                                   Image_Locked                                                OFFSET(get<T>, {0x14E8, 8, 0, 0})
	CMember(UImage*)                                   Image_Selected                                              OFFSET(get<T>, {0x14F0, 8, 0, 0})
	SMember(FName)                                     ImageColorParam                                             OFFSET(getStruct<T>, {0x14F8, 4, 0, 0})
	SMember(FLinearColor)                              SwatchColor                                                 OFFSET(getStruct<T>, {0x14FC, 16, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortColorPickerSwatchTile.OnSwatchLockedStateChanged
	// void OnSwatchLockedStateChanged(bool bSwatchLocked);                                                                     // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortColorPickerSwatchTile.OnSwatchColorSet
	// void OnSwatchColorSet(bool bInNullColor);                                                                                // [0x1d9241c] Event|Protected|BlueprintEvent 
};

/// Class /Script/FortniteUI.FortMobileEditableText
/// Size: 0x0000 (0x0004E0 - 0x0004E0)
class UFortMobileEditableText : public UEditableText
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1248;

public:


	/// Functions
	// Function /Script/FortniteUI.FortMobileEditableText.SetMobileFontSizeMultiplier
	// void SetMobileFontSizeMultiplier(float InMobileFontSizeMultiplier);                                                      // [0x9402694] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortMobileEditableText.GetMobileFontSizeMultiplier
	// float GetMobileFontSizeMultiplier();                                                                                     // [0x94009f0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/FortniteUI.FortMobileImage
/// Size: 0x0020 (0x0002B0 - 0x0002D0)
class UFortMobileImage : public UImage
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 720;

public:
	DMember(float)                                     MobileSizeMultiplier                                        OFFSET(get<float>, {0x2B0, 4, 0, 0})
};

/// Class /Script/FortniteUI.FortPlayerBanner
/// Size: 0x0118 (0x000178 - 0x000290)
class UFortPlayerBanner : public UWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 656;

public:
	DMember(bool)                                      bShowBorder                                                 OFFSET(get<bool>, {0x178, 1, 0, 0})
	DMember(bool)                                      bUseLargeTexture                                            OFFSET(get<bool>, {0x179, 1, 0, 0})
	DMember(bool)                                      bSquareShape                                                OFFSET(get<bool>, {0x17A, 1, 0, 0})
	SMember(FVector2D)                                 DesiredSize                                                 OFFSET(getStruct<T>, {0x180, 16, 0, 0})
	CMember(UMaterialInterface*)                       DefaultBorderlessBannerMaterial                             OFFSET(get<T>, {0x190, 8, 0, 0})
	CMember(UMaterialInterface*)                       DefaultBorderlessSquareBannerMaterial                       OFFSET(get<T>, {0x198, 8, 0, 0})
	SMember(FSlateBrush)                               BannerBrush                                                 OFFSET(getStruct<T>, {0x1A0, 192, 0, 0})
};

/// Class /Script/FortniteUI.FortPlayerPowerRating
/// Size: 0x0028 (0x0002E8 - 0x000310)
class UFortPlayerPowerRating : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 784;

public:
	SMember(FMulticastInlineDelegate)                  OnPowerRatingUpdated                                        OFFSET(getStruct<T>, {0x2E8, 16, 0, 0})
	CMember(EFortPlayerPowerRatingType)                PowerRatingType                                             OFFSET(get<T>, {0x2F8, 1, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortPlayerPowerRating.RepresentLocalPlayer
	// void RepresentLocalPlayer();                                                                                             // [0x94023d8] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortPlayerPowerRating.OnTeamPowerRatingUpdated
	// void OnTeamPowerRatingUpdated(int32_t TeamPowerRating);                                                                  // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortPlayerPowerRating.OnTeamMembershipChanged
	// void OnTeamMembershipChanged();                                                                                          // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortPlayerPowerRating.OnPowerRatingUpdated__DelegateSignature
	// void OnPowerRatingUpdated__DelegateSignature();                                                                          // [0x1d9241c] MulticastDelegate|Public|Delegate 
	// Function /Script/FortniteUI.FortPlayerPowerRating.OnPowerRatingProgressUpdated
	// void OnPowerRatingProgressUpdated(float BaseRatingProgress, float TeamRatingProgress);                                   // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortPlayerPowerRating.OnBasePowerRatingUpdated
	// void OnBasePowerRatingUpdated(int32_t BasePowerRating);                                                                  // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortPlayerPowerRating.HasTeamMembers
	// bool HasTeamMembers();                                                                                                   // [0x9401fe8] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortPlayerPowerRating.GetTeamPowerRating
	// int32_t GetTeamPowerRating();                                                                                            // [0x9401020] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortPlayerPowerRating.GetBasePowerRating
	// int32_t GetBasePowerRating();                                                                                            // [0x9400390] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/FortniteUI.FortPlayerPowerRatingToast
/// Size: 0x0030 (0x000310 - 0x000340)
class UFortPlayerPowerRatingToast : public UFortToastWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 832;

public:
	CMember(UCommonTextBlock*)                         Text_PowerDifference                                        OFFSET(get<T>, {0x310, 8, 0, 0})
	CMember(UFortPlayerBanner*)                        Banner_MemberBanner                                         OFFSET(get<T>, {0x318, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_PowerRating                                            OFFSET(get<T>, {0x320, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_Title                                                  OFFSET(get<T>, {0x328, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_Description                                            OFFSET(get<T>, {0x330, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortPlayerPowerRatingToast.ShowToast
	// void ShowToast();                                                                                                        // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortPlayerPowerRatingToast.HideToast
	// void HideToast();                                                                                                        // [0x9402038] Final|Native|Protected|BlueprintCallable 
};

/// Class /Script/FortniteUI.FortProgressWidget
/// Size: 0x0018 (0x0002E8 - 0x000300)
class UFortProgressWidget : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 768;

public:
	CMember(UCommonTextBlock*)                         Text_Title                                                  OFFSET(get<T>, {0x2E8, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_Description                                            OFFSET(get<T>, {0x2F0, 8, 0, 0})
	CMember(UImage*)                                   Image_MainIcon                                              OFFSET(get<T>, {0x2F8, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortProgressWidget.SetTitle
	// void SetTitle(FText Title);                                                                                              // [0x9402e14] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortProgressWidget.SetIcon
	// void SetIcon(FSlateBrush IconBrush);                                                                                     // [0x9402514] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortProgressWidget.SetDescription
	// void SetDescription(FText Description);                                                                                  // [0x9402478] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/FortniteUI.FortQuantitySelector
/// Size: 0x0038 (0x000570 - 0x0005A8)
class UFortQuantitySelector : public UFortActivatablePanel
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1448;

public:
	CMember(UCommonButtonLegacy*)                      Button_Confirm                                              OFFSET(get<T>, {0x570, 8, 0, 0})
	CMember(UCommonButtonLegacy*)                      Button_Cancel                                               OFFSET(get<T>, {0x578, 8, 0, 0})
	CMember(UFortItem*)                                Item                                                        OFFSET(get<T>, {0x580, 8, 0, 0})
	DMember(int32_t)                                   CurrentQuantity                                             OFFSET(get<int32_t>, {0x588, 4, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortQuantitySelector.OnQuantitySelectorInitialized
	// void OnQuantitySelectorInitialized(UFortItem* InItem, FText& TitleText, FText& ConfirmButtonText, FText& AdditionalInfoText, int32_t InitialQuantity, int32_t MaximumQuantity); // [0x1d9241c] Event|Protected|HasOutParms|BlueprintEvent 
	// Function /Script/FortniteUI.FortQuantitySelector.InitializeQuantitySelector
	// void InitializeQuantitySelector(UFortItem* InItem, FText TitleText, FText ConfirmButtonText, FText AdditionalInfoText, int32_t InitialQuantity, int32_t MaximumQuantity); // [0x940204c] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortQuantitySelector.GetItem
	// UFortItem* GetItem();                                                                                                    // [0x940092c] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/FortniteUI.FortEulaTab
/// Size: 0x0040 (0x000400 - 0x000440)
class UFortEulaTab : public UCommonActivatableWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1088;

public:
	SMember(FString)                                   EULAKeyToShow                                               OFFSET(getStruct<T>, {0x400, 16, 0, 0})
	CMember(UFortRichTextBlockLegacy*)                 Text_EULA                                                   OFFSET(get<T>, {0x420, 8, 0, 0})
	CMember(UWidgetSwitcher*)                          Switcher_TextSpinner                                        OFFSET(get<T>, {0x428, 8, 0, 0})
	CMember(UScrollBox*)                               ScrollBox_EULAText                                          OFFSET(get<T>, {0x430, 8, 0, 0})
	CMember(UImage*)                                   Image_Spinner                                               OFFSET(get<T>, {0x438, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortEulaTab.HandleDownloadEULAComplete
	// void HandleDownloadEULAComplete(bool bSuccessful, FText EULAText, FString Key);                                          // [0x94010cc] Final|Native|Private 
};

/// Class /Script/FortniteUI.FortLegalInfoWidget
/// Size: 0x0038 (0x000570 - 0x0005A8)
class UFortLegalInfoWidget : public UFortActivatablePanel
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1448;

public:
	CMember(UCommonWidgetSwitcherLegacy*)              WidgetSwitcher_Legal                                        OFFSET(get<T>, {0x570, 8, 0, 0})
	CMember(UFortTabListWidgetBase_Legacy*)            TabList_LegalOptions                                        OFFSET(get<T>, {0x578, 8, 0, 0})
	CMember(UCommonButtonBase*)                        Button_CloseTouch                                           OFFSET(get<T>, {0x580, 8, 0, 0})
	CMember(UCommonButtonBase*)                        Button_Close                                                OFFSET(get<T>, {0x588, 8, 0, 0})
	CMember(UCommonButtonBase*)                        Button_PrivacyPolicy                                        OFFSET(get<T>, {0x590, 8, 0, 0})
	CMember(UCommonButtonBase*)                        Button_FanContentPolicy                                     OFFSET(get<T>, {0x598, 8, 0, 0})
	CMember(UCommonButtonBase*)                        Button_TermsOfService                                       OFFSET(get<T>, {0x5A0, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortLegalInfoWidget.Close
	// void Close();                                                                                                            // [0x9400218] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.FortLegalInfoWidget.AddJapaneseEULATabs
	// void AddJapaneseEULATabs();                                                                                              // [0x1d9241c] Event|Protected|BlueprintEvent 
};

/// Class /Script/FortniteUI.FortConsoleProfileWidget
/// Size: 0x0018 (0x0002C0 - 0x0002D8)
class UFortConsoleProfileWidget : public UUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 728;

public:
	CMember(UTextBlock*)                               Text_Prefix                                                 OFFSET(get<T>, {0x2C8, 8, 0, 0})
	CMember(UTextBlock*)                               Text_DisplayName                                            OFFSET(get<T>, {0x2D0, 8, 0, 0})
};

/// Class /Script/FortniteUI.FortChatModalWrapper
/// Size: 0x0018 (0x000400 - 0x000418)
class UFortChatModalWrapper : public UCommonActivatableWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1048;

public:
	CMember(UFortChatContainer*)                       ChatContainer_Chat                                          OFFSET(get<T>, {0x400, 8, 0, 0})
};

/// Class /Script/FortniteUI.FortActivatableChatWidget
/// Size: 0x0038 (0x000400 - 0x000438)
class UFortActivatableChatWidget : public UCommonActivatableWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1080;

public:
	CMember(UFortChatModalWrapper*)                    Activatable_ModalBindings                                   OFFSET(get<T>, {0x418, 8, 0, 0})
	CMember(UCommonButtonBase*)                        Button_HoldToOpen                                           OFFSET(get<T>, {0x420, 8, 0, 0})
	CMember(UDataTable*)                               InputActionDataTable                                        OFFSET(get<T>, {0x428, 8, 0, 0})
	DMember(bool)                                      bActivationTriggeredManually                                OFFSET(get<bool>, {0x431, 1, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortActivatableChatWidget.HandleRequestChatClose
	// void HandleRequestChatClose();                                                                                           // [0x9401da0] Final|Native|Private|BlueprintCallable 
	// Function /Script/FortniteUI.FortActivatableChatWidget.HandleHoldButtonClicked
	// void HandleHoldButtonClicked();                                                                                          // [0x94018b0] Final|Native|Private|BlueprintCallable 
	// Function /Script/FortniteUI.FortActivatableChatWidget.FocusChat
	// void FocusChat(bool bFocus);                                                                                             // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.FortActivatableChatWidget.BacchusFrontendFocusChat
	// void BacchusFrontendFocusChat();                                                                                         // [0x940011c] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/FortniteUI.HudTalkingHead
/// Size: 0x0000 (0x000328 - 0x000328)
class UHudTalkingHead : public UFortHUDElementWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 808;

public:
};

/// Class /Script/FortniteUI.TalkingHead
/// Size: 0x0008 (0x0002E8 - 0x0002F0)
class UTalkingHead : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 752;

public:
};

/// Class /Script/FortniteUI.DynamicBackgroundDirector
/// Size: 0x01B8 (0x000290 - 0x000448)
class ADynamicBackgroundDirector : public AActor
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1096;

public:
	SMember(FMulticastInlineDelegate)                  BP_OnDonutSequenceInitiated                                 OFFSET(getStruct<T>, {0x2A8, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  BP_OnEnteredItemShop                                        OFFSET(getStruct<T>, {0x2B8, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  BP_OnEnteredStore                                           OFFSET(getStruct<T>, {0x2C8, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  BP_OnDonutSequencePlayDonutDrop                             OFFSET(getStruct<T>, {0x2D8, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  BP_OnEnvironmentChanged                                     OFFSET(getStruct<T>, {0x2E8, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  BP_OnEnvironmentBackgroundTextureChanged                    OFFSET(getStruct<T>, {0x2F8, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  BP_OnLobbyDataChanged                                       OFFSET(getStruct<T>, {0x308, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  BP_OnRequestShowBackground                                  OFFSET(getStruct<T>, {0x318, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  BP_OnRequestHideBackground                                  OFFSET(getStruct<T>, {0x328, 16, 0, 0})
	CMember(EDynamicBackgroudKey)                      DynamicBackgroundKey                                        OFFSET(get<T>, {0x338, 1, 0, 0})
	CMember(TMap<FString, UTexture2D*>)                TextureCache                                                OFFSET(get<T>, {0x340, 80, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.DynamicBackgroundDirector.TryForceSetupDonutStore
	// void TryForceSetupDonutStore();                                                                                          // [0x940317c] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.DynamicBackgroundDirector.SetIsInDonutSequence
	// void SetIsInDonutSequence(bool bIsInSequence);                                                                           // [0x33f8450] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.DynamicBackgroundDirector.ResetDonutShopSeen
	// void ResetDonutShopSeen();                                                                                               // [0x940243c] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.DynamicBackgroundDirector.RequestDonutUIPlayAnim
	// void RequestDonutUIPlayAnim();                                                                                           // [0x9402420] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.DynamicBackgroundDirector.RequestDelegate__DelegateSignature
	// void RequestDelegate__DelegateSignature();                                                                               // [0x1d9241c] MulticastDelegate|Public|Delegate 
	// Function /Script/FortniteUI.DynamicBackgroundDirector.OnLobbyDataChanged__DelegateSignature
	// void OnLobbyDataChanged__DelegateSignature(FFrontendLobbyData LobbyData);                                                // [0x1d9241c] MulticastDelegate|Public|Delegate 
	// Function /Script/FortniteUI.DynamicBackgroundDirector.OnEnvironmentChangedDynamic__DelegateSignature
	// void OnEnvironmentChangedDynamic__DelegateSignature(FString PresetEnvironmentName);                                      // [0x1d9241c] MulticastDelegate|Public|Delegate 
	// Function /Script/FortniteUI.DynamicBackgroundDirector.OnEnvironmentBackgroundTextureChangedDynamic__DelegateSignature
	// void OnEnvironmentBackgroundTextureChangedDynamic__DelegateSignature(UTexture* BackgroundImage);                         // [0x1d9241c] MulticastDelegate|Public|Delegate 
	// Function /Script/FortniteUI.DynamicBackgroundDirector.OnEnteredStore__DelegateSignature
	// void OnEnteredStore__DelegateSignature();                                                                                // [0x1d9241c] MulticastDelegate|Public|Delegate 
	// Function /Script/FortniteUI.DynamicBackgroundDirector.OnEnteredItemShop__DelegateSignature
	// void OnEnteredItemShop__DelegateSignature();                                                                             // [0x1d9241c] MulticastDelegate|Public|Delegate 
	// Function /Script/FortniteUI.DynamicBackgroundDirector.OnDonutSetupLateStore__DelegateSignature
	// void OnDonutSetupLateStore__DelegateSignature();                                                                         // [0x1d9241c] MulticastDelegate|Public|Delegate 
	// Function /Script/FortniteUI.DynamicBackgroundDirector.OnDonutSequencePlayDonutDrop__DelegateSignature
	// void OnDonutSequencePlayDonutDrop__DelegateSignature();                                                                  // [0x1d9241c] MulticastDelegate|Public|Delegate 
	// Function /Script/FortniteUI.DynamicBackgroundDirector.OnDonutSequenceInitiated__DelegateSignature
	// void OnDonutSequenceInitiated__DelegateSignature();                                                                      // [0x1d9241c] MulticastDelegate|Public|Delegate 
	// Function /Script/FortniteUI.DynamicBackgroundDirector.OnDonutSequenceInitiated
	// void OnDonutSequenceInitiated();                                                                                         // [0x940231c] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.DynamicBackgroundDirector.MarkDonutSequenceSeen
	// void MarkDonutSequenceSeen();                                                                                            // [0x9402308] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.DynamicBackgroundDirector.GetLoadedTexture
	// TWeakObjectPtr<UTexture*> GetLoadedTexture();                                                                            // [0x9400944] Final|Native|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/FortniteUI.DynamicBackgroundDirector.GetHasDonutShopSequenceBeenSeen
	// bool GetHasDonutShopSequenceBeenSeen();                                                                                  // [0x9400500] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.DynamicBackgroundDirector.GetBackgroundSource
	// EBackgroundSource GetBackgroundSource();                                                                                 // [0x3473df0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/FortniteUI.FortAthenaReward
/// Size: 0x0060 (0x0014E0 - 0x001540)
class UFortAthenaReward : public UCommonButtonLegacy
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 5440;

public:
	CMember(UFortItemDefinition*)                      SecondaryItemDefToRepresent                                 OFFSET(get<T>, {0x14E8, 8, 0, 0})
	CMember(UFortItemDefinition*)                      RepresentedItemDefinition                                   OFFSET(get<T>, {0x14F0, 8, 0, 0})
	CMember(UFortCosmeticItemCard*)                    ItemCard                                                    OFFSET(get<T>, {0x14F8, 8, 0, 0})
	CMember(UWidget*)                                  Widget_ClaimedImage                                         OFFSET(get<T>, {0x1500, 8, 0, 0})
	CMember(UWidget*)                                  Widget_LockedImage                                          OFFSET(get<T>, {0x1508, 8, 0, 0})
	CMember(UWidget*)                                  Widget_UnearnedTintOverlay                                  OFFSET(get<T>, {0x1510, 8, 0, 0})
	CMember(UWidget*)                                  Widget_OwnedBorder                                          OFFSET(get<T>, {0x1518, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortAthenaReward.UpdateRewardState
	// void UpdateRewardState(EFortAthenaRewardState StateToSetup, bool bEnabled);                                              // [0x940340c] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortAthenaReward.SetViewOnHovered
	// void SetViewOnHovered(bool bShouldViewOnHovered);                                                                        // [0x9402eb0] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortAthenaReward.SetupRewardItem
	// void SetupRewardItem(UFortItemDefinition* ItemDefToRepresent, int32_t Quantity);                                         // [0x9402f90] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortAthenaReward.OnStateUpdated
	// void OnStateUpdated(bool bClaimed);                                                                                      // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortAthenaReward.OnRepresentedItemSet
	// void OnRepresentedItemSet(UFortItem* RepresentedItem, bool IsEquipped);                                                  // [0x1d9241c] Event|Protected|BlueprintEvent 
};

/// Class /Script/FortniteUI.FortAthenaViewQuestsButton
/// Size: 0x0010 (0x0014E0 - 0x0014F0)
class UFortAthenaViewQuestsButton : public UCommonButtonLegacy
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 5360;

public:
};

/// Class /Script/FortniteUI.FortCodeOfConductScreen
/// Size: 0x0000 (0x000538 - 0x000538)
class UFortCodeOfConductScreen : public UCommonActivatablePanelLegacy
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1336;

public:
};

/// Class /Script/FortniteUI.FortColorCalibrationScreen
/// Size: 0x0008 (0x000538 - 0x000540)
class UFortColorCalibrationScreen : public UCommonActivatablePanelLegacy
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1344;

public:
};

/// Class /Script/FortniteUI.FortCreditsScreen
/// Size: 0x0018 (0x000538 - 0x000550)
class UFortCreditsScreen : public UCommonActivatablePanelLegacy
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1360;

public:
	CMember(UCommonButtonBase*)                        Button_CloseTouch                                           OFFSET(get<T>, {0x538, 8, 0, 0})
	SMember(FDataTableRowHandle)                       BackAction                                                  OFFSET(getStruct<T>, {0x540, 16, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortCreditsScreen.NativeConstruct
	// void NativeConstruct();                                                                                                  // [0x6c62144] Native|Protected     
	// Function /Script/FortniteUI.FortCreditsScreen.HandleBackActionInput
	// void HandleBackActionInput(bool& bBPassThrough);                                                                         // [0x9401038] Final|Native|Private|HasOutParms 
};

/// Class /Script/FortniteUI.FortStoreFrontOfferDetailsWidgetBase
/// Size: 0x0178 (0x0006B8 - 0x000830)
class UFortStoreFrontOfferDetailsWidgetBase : public UFortActivatablePanelWithItemPreview
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 2096;

public:
	SMember(FDataTableRowHandle)                       EnterViewModeInputActionRowHandle                           OFFSET(getStruct<T>, {0x700, 16, 0, 0})
	DMember(bool)                                      IsInItemViewMode                                            OFFSET(get<bool>, {0x710, 1, 0, 0})
	DMember(bool)                                      ShouldAllowItemViewModeAction                               OFFSET(get<bool>, {0x711, 1, 0, 0})
	DMember(bool)                                      bImmediatelyPurchased                                       OFFSET(get<bool>, {0x712, 1, 0, 0})
	CMember(TArray<UFortStoreFrontOfferInfo*>)         PagedItems                                                  OFFSET(get<T>, {0x718, 16, 0, 0})
	CMember(UFortStoreFrontOfferInfo*)                 OfferData                                                   OFFSET(get<T>, {0x728, 8, 0, 0})
	CMember(UFortVariantPicker*)                       Picker_VariantSelector                                      OFFSET(get<T>, {0x730, 8, 0, 0})
	CMember(UCommonTextBlock*)                         TextUndoAvailability                                        OFFSET(get<T>, {0x738, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_UndoBottomBarWarning                                   OFFSET(get<T>, {0x740, 8, 0, 0})
	CMember(UCommonButtonLegacy*)                      Button_Undo                                                 OFFSET(get<T>, {0x748, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_CosmeticWarning                                        OFFSET(get<T>, {0x750, 8, 0, 0})
	CMember(UClass*)                                   PurchaseModalClass                                          OFFSET(get<T>, {0x798, 8, 0, 0})
	CMember(UFortItem*)                                ItemToRepresent                                             OFFSET(get<T>, {0x7D0, 8, 0, 0})
	CMember(UFortItemDefinition*)                      SecondaryItemDefinition                                     OFFSET(get<T>, {0x7D8, 8, 0, 0})
	DMember(float)                                     TimeBetweenVariantsRestart                                  OFFSET(get<float>, {0x7E0, 4, 0, 0})
	DMember(float)                                     TimeBetweenVariants                                         OFFSET(get<float>, {0x7E4, 4, 0, 0})
	DMember(bool)                                      bShowRefundWarningWhileMatchmaking                          OFFSET(get<bool>, {0x7F2, 1, 0, 0})
	DMember(bool)                                      bShowRefundWarningWhileInZone                               OFFSET(get<bool>, {0x7F3, 1, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortStoreFrontOfferDetailsWidgetBase.UpdateItemViewModeBP
	// void UpdateItemViewModeBP();                                                                                             // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortStoreFrontOfferDetailsWidgetBase.ShowVaultItemFromItemReward
	// void ShowVaultItemFromItemReward(UFortAthenaReward* InItemReward);                                                       // [0x9649814] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.FortStoreFrontOfferDetailsWidgetBase.ShowVaultItem
	// void ShowVaultItem(UFortItem* InItemToRepresent);                                                                        // [0x9649794] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.FortStoreFrontOfferDetailsWidgetBase.ShowUndoInBottomBar
	// void ShowUndoInBottomBar();                                                                                              // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.FortStoreFrontOfferDetailsWidgetBase.ShowReloadMtx
	// void ShowReloadMtx();                                                                                                    // [0x9649780] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.FortStoreFrontOfferDetailsWidgetBase.ShowPurchasedOverlayWidget
	// void ShowPurchasedOverlayWidget(int32_t QuantityPurchased, TArray<FPurchasedItemInfo> PurchasedItems, bool bShowAsRefund, FString OfferId); // [0x9648a18] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.FortStoreFrontOfferDetailsWidgetBase.ShowItemPresentationScreen
	// void ShowItemPresentationScreen(TArray<FPurchasedItemInfo>& PurchasedItems);                                             // [0x90d8808] Final|Native|Protected|HasOutParms|BlueprintCallable 
	// Function /Script/FortniteUI.FortStoreFrontOfferDetailsWidgetBase.ShouldHavePurchaseConfirmation
	// bool ShouldHavePurchaseConfirmation();                                                                                   // [0x90d8754] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortStoreFrontOfferDetailsWidgetBase.ShouldDisplayOfferPurchasedOverlay
	// bool ShouldDisplayOfferPurchasedOverlay();                                                                               // [0x9648914] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortStoreFrontOfferDetailsWidgetBase.SetupOffer
	// void SetupOffer(UFortStoreFrontOfferInfo* InOfferData);                                                                  // [0x9648814] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortStoreFrontOfferDetailsWidgetBase.SetStoreRoot
	// void SetStoreRoot(UFortMtxStoreRootBase* InStoreRoot);                                                                   // [0x9646ba0] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortStoreFrontOfferDetailsWidgetBase.SetShouldAllowItemViewModeAction
	// void SetShouldAllowItemViewModeAction(bool Value);                                                                       // [0x9646b20] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortStoreFrontOfferDetailsWidgetBase.SetSecondaryItem
	// void SetSecondaryItem(UFortItemDefinition* ItemDefinition);                                                              // [0x9646aa0] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.FortStoreFrontOfferDetailsWidgetBase.SetPagedItems
	// void SetPagedItems(TArray<UFortStoreFrontOfferInfo*>& InPagedItems);                                                     // [0x964607c] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/FortniteUI.FortStoreFrontOfferDetailsWidgetBase.SetItemRewardSecondaryItem
	// void SetItemRewardSecondaryItem(UFortItemDefinition* ItemDef, TArray<FFortItemQuantityPair> AllItemQuantityPairs, UFortAthenaReward* RewardWidget); // [0x9645e58] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.FortStoreFrontOfferDetailsWidgetBase.SetIsInItemViewMode
	// void SetIsInItemViewMode(bool Value);                                                                                    // [0x9645dd0] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortStoreFrontOfferDetailsWidgetBase.SendUndoMtxReturnedAnalytic
	// void SendUndoMtxReturnedAnalytic(FString Interaction, FString PurchaseId, int32_t MtxReturned);                          // [0x9644c80] Final|Native|Public|BlueprintCallable|Const 
	// Function /Script/FortniteUI.FortStoreFrontOfferDetailsWidgetBase.SendShopInteractionAnalytic
	// void SendShopInteractionAnalytic(FString Interaction, float HoldTime);                                                   // [0x9643ef0] Final|Native|Public|BlueprintCallable|Const 
	// Function /Script/FortniteUI.FortStoreFrontOfferDetailsWidgetBase.SendSeasonPassInteractionAnalytic
	// void SendSeasonPassInteractionAnalytic(FString Interaction);                                                             // [0x9643138] Final|Native|Public|BlueprintCallable|Const 
	// Function /Script/FortniteUI.FortStoreFrontOfferDetailsWidgetBase.SendReloadMtxPurchaseSKUAnalytic
	// void SendReloadMtxPurchaseSKUAnalytic();                                                                                 // [0x9643124] Final|Native|Public|BlueprintCallable|Const 
	// Function /Script/FortniteUI.FortStoreFrontOfferDetailsWidgetBase.SendRealMoneyStoreInteractionAnalytic
	// void SendRealMoneyStoreInteractionAnalytic(FString Interaction);                                                         // [0x96423bc] Final|Native|Public|BlueprintCallable|Const 
	// Function /Script/FortniteUI.FortStoreFrontOfferDetailsWidgetBase.SendRealMoneyPurchase
	// void SendRealMoneyPurchase(int32_t PriceIndex, int32_t Quantity);                                                        // [0x96422fc] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.FortStoreFrontOfferDetailsWidgetBase.SendingToMainStore
	// void SendingToMainStore();                                                                                               // [0x9645990] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortStoreFrontOfferDetailsWidgetBase.RequestExternalPurchase
	// void RequestExternalPurchase(int32_t PriceIndex, int32_t Quantity);                                                      // [0x9641dc0] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortStoreFrontOfferDetailsWidgetBase.RegisterItemRewardInteraction
	// void RegisterItemRewardInteraction(UFortAthenaReward* InItemReward);                                                     // [0x9641cec] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.FortStoreFrontOfferDetailsWidgetBase.RefreshUndoState
	// void RefreshUndoState(UFortStoreFrontOfferInfo* OfferPurchased);                                                         // [0x9641c6c] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortStoreFrontOfferDetailsWidgetBase.RefreshOfferInfo
	// void RefreshOfferInfo();                                                                                                 // [0x9641c58] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortStoreFrontOfferDetailsWidgetBase.PurchaseOffer
	// void PurchaseOffer(FDelegateProperty& Callback, int32_t Quantity, float HoldTime);                                       // [0x9641a74] Final|Native|Protected|HasOutParms|BlueprintCallable 
	// Function /Script/FortniteUI.FortStoreFrontOfferDetailsWidgetBase.PurchaseAmountRight
	// void PurchaseAmountRight();                                                                                              // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.FortStoreFrontOfferDetailsWidgetBase.PurchaseAmountLeft
	// void PurchaseAmountLeft();                                                                                               // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.FortStoreFrontOfferDetailsWidgetBase.OnVariantChanged
	// void OnVariantChanged(FGameplayTag VariantChannel, FGameplayTag VariantTag, FString VariantCustomData, bool IsOwned);    // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortStoreFrontOfferDetailsWidgetBase.OnUpdateStatus
	// void OnUpdateStatus();                                                                                                   // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.FortStoreFrontOfferDetailsWidgetBase.OnUpdateItemRestrictionCallout
	// void OnUpdateItemRestrictionCallout(bool bShouldShow, FText& RestrictionText);                                           // [0x1d9241c] Event|Protected|HasOutParms|BlueprintEvent 
	// Function /Script/FortniteUI.FortStoreFrontOfferDetailsWidgetBase.OnPurchasingStarted
	// void OnPurchasingStarted();                                                                                              // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortStoreFrontOfferDetailsWidgetBase.OnEnterViewModeActionCommitted
	// void OnEnterViewModeActionCommitted(bool& PassThrough);                                                                  // [0x96419f0] Final|Native|Protected|HasOutParms 
	// Function /Script/FortniteUI.FortStoreFrontOfferDetailsWidgetBase.IsReloadMtxEnabled
	// bool IsReloadMtxEnabled();                                                                                               // [0x96415d8] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.FortStoreFrontOfferDetailsWidgetBase.HideUndoInBottomBar
	// void HideUndoInBottomBar();                                                                                              // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.FortStoreFrontOfferDetailsWidgetBase.HandleVaultItemsViewed
	// void HandleVaultItemsViewed(TArray<UFortItem*>& ItemsShown);                                                             // [0x9640654] Final|Native|Protected|HasOutParms 
	// Function /Script/FortniteUI.FortStoreFrontOfferDetailsWidgetBase.HandleRealMoneyPurchaseComplete
	// void HandleRealMoneyPurchaseComplete(bool bSuccess, TArray<FPurchasedItemInfo>& PurchasedItems);                         // [0x963fd2c] Final|Native|Private|HasOutParms 
	// Function /Script/FortniteUI.FortStoreFrontOfferDetailsWidgetBase.HandleGiftingItemPurchaseComplete
	// void HandleGiftingItemPurchaseComplete(bool bSuccess, TArray<FPurchasedItemInfo>& PurchasedItems, FString OfferId);      // [0x963e2a8] Final|Native|Private|HasOutParms 
	// Function /Script/FortniteUI.FortStoreFrontOfferDetailsWidgetBase.HandleCurrentlyViewedAccountInfoChanged
	// void HandleCurrentlyViewedAccountInfoChanged(FFortPublicAccountInfo NewInfo);                                            // [0x963df98] Final|Native|Protected 
	// Function /Script/FortniteUI.FortStoreFrontOfferDetailsWidgetBase.HandleBattlePassPurchaseComplete
	// void HandleBattlePassPurchaseComplete(bool bSuccess);                                                                    // [0x963deb4] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortStoreFrontOfferDetailsWidgetBase.GetPriceIndexToShow
	// int32_t GetPriceIndexToShow();                                                                                           // [0x963b38c] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.FortStoreFrontOfferDetailsWidgetBase.GetOfferInfoById
	// UFortStoreFrontOfferInfo* GetOfferInfoById(FString OfferId);                                                             // [0x963ab38] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortStoreFrontOfferDetailsWidgetBase.GetOfferInfo
	// UFortStoreFrontOfferInfo* GetOfferInfo();                                                                                // [0x7d290ac] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortStoreFrontOfferDetailsWidgetBase.FindItemQuantityPair
	// bool FindItemQuantityPair(UFortItemDefinition* ItemDefinition, TArray<FFortItemQuantityPair>& InItemQuantityPairs, FFortItemQuantityPair& OutItemQuantity); // [0x9635938] Final|Native|Static|Public|HasOutParms|BlueprintCallable 
	// Function /Script/FortniteUI.FortStoreFrontOfferDetailsWidgetBase.DeactivateUndoButton
	// void DeactivateUndoButton();                                                                                             // [0x96357f4] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.FortStoreFrontOfferDetailsWidgetBase.ConfirmUndo
	// void ConfirmUndo();                                                                                                      // [0x9635070] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.FortStoreFrontOfferDetailsWidgetBase.BP_OnOfferSet
	// void BP_OnOfferSet();                                                                                                    // [0x1d9241c] Event|Public|BlueprintEvent 
};

/// Class /Script/FortniteUI.FortDirectAcquisitionOfferDetailsWidget
/// Size: 0x00B0 (0x000830 - 0x0008E0)
class UFortDirectAcquisitionOfferDetailsWidget : public UFortStoreFrontOfferDetailsWidgetBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 2272;

public:
	CMember(UClass*)                                   VoteFeedbackClass                                           OFFSET(get<T>, {0x838, 8, 0, 0})
	CMember(UFortItemBaseWidget*)                      Item_InfoHeader                                             OFFSET(get<T>, {0x840, 8, 0, 0})
	CMember(UCommonButtonLegacy*)                      Button_CastVote                                             OFFSET(get<T>, {0x898, 8, 0, 0})
	CMember(UFortCommunityVotingVoteCounter*)          FlameCounter                                                OFFSET(get<T>, {0x8A0, 8, 0, 0})
	CMember(UFortCommunityVotingAvailableVotesWidget*) AvailableSparksWidget                                       OFFSET(get<T>, {0x8A8, 8, 0, 0})
	CMember(UOverlay*)                                 ComVoteFeedbackContainer                                    OFFSET(get<T>, {0x8B0, 8, 0, 0})
	CMember(UCommonButtonLegacy*)                      Button_SendGift                                             OFFSET(get<T>, {0x8B8, 8, 0, 0})
	CMember(UWidgetSwitcher*)                          Switcher_MtxAndVote                                         OFFSET(get<T>, {0x8C0, 8, 0, 0})
	CMember(UFortCommunityVotingThanksPopup*)          Com_ThanksForVotingMessage                                  OFFSET(get<T>, {0x8C8, 8, 0, 0})
	CMember(UAthenaItemShopOfferInspectionNavigator*)  OfferNavigator_ArrowNavigation                              OFFSET(get<T>, {0x8D0, 8, 0, 0})
	CMember(UFortStoreSkinDetailsPopup*)               StorePopup_Details                                          OFFSET(get<T>, {0x8D8, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortDirectAcquisitionOfferDetailsWidget.UpdateVoteCounter
	// void UpdateVoteCounter();                                                                                                // [0x94034ec] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.FortDirectAcquisitionOfferDetailsWidget.UpdateSwipeButtonsVisibility
	// void UpdateSwipeButtonsVisibility();                                                                                     // [0x94034d0] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.FortDirectAcquisitionOfferDetailsWidget.TriggerPurchaseChoiceRequest
	// void TriggerPurchaseChoiceRequest();                                                                                     // [0x90d9d60] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.FortDirectAcquisitionOfferDetailsWidget.IsMultiplePriceRealMoneyOffer
	// bool IsMultiplePriceRealMoneyOffer();                                                                                    // [0x9402290] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortDirectAcquisitionOfferDetailsWidget.HandleGetVBucksClicked
	// void HandleGetVBucksClicked();                                                                                           // [0x940189c] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.FortDirectAcquisitionOfferDetailsWidget.GetSalePriceFromLastAppStore
	// bool GetSalePriceFromLastAppStore(int32_t PriceIndex, FText& SalePrice, int32_t ItemQuantity);                           // [0x9400cec] Final|Native|Protected|HasOutParms|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortDirectAcquisitionOfferDetailsWidget.FocusOnWidget
	// void FocusOnWidget(UWidget* WidgetToFocus);                                                                              // [0x940027c] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.FortDirectAcquisitionOfferDetailsWidget.Dismiss
	// void Dismiss();                                                                                                          // [0x9400268] Final|Native|Protected|BlueprintCallable 
};

/// Class /Script/FortniteUI.FortGameEventNotifications
/// Size: 0x0090 (0x000328 - 0x0003B8)
class UFortGameEventNotifications : public UFortHUDElementWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 952;

public:
	CMember(UClass*)                                   DefaultEntryClass                                           OFFSET(get<T>, {0x370, 8, 0, 0})
	DMember(bool)                                      bHasPrioritizedWidgetFocus                                  OFFSET(get<bool>, {0x378, 1, 0, 0})
	DMember(bool)                                      bShowFeatQuests                                             OFFSET(get<bool>, {0x379, 1, 0, 0})
	DMember(bool)                                      bFeatShowNonVisibleObjectives                               OFFSET(get<bool>, {0x37A, 1, 0, 0})
	CMember(UFortNotificationEntry*)                   ActiveWidget                                                OFFSET(get<T>, {0x380, 8, 0, 0})
	CMember(TArray<UFortNotificationEntry*>)           WidgetQueue                                                 OFFSET(get<T>, {0x388, 16, 0, 0})
	CMember(UVerticalBox*)                             NotificationUpdatesBox                                      OFFSET(get<T>, {0x398, 8, 0, 0})
	CMember(TArray<FNotificationWidgetClass>)          NotificationClassPoolData                                   OFFSET(get<T>, {0x3A0, 16, 0, 0})
	SMember(FFortPrioritizedWidgetData)                PrioritizationData                                          OFFSET(getStruct<T>, {0x3B0, 2, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortGameEventNotifications.HandleNotificationUpdateFinished
	// void HandleNotificationUpdateFinished();                                                                                 // [0x94c16fc] Final|Native|Protected 
	// Function /Script/FortniteUI.FortGameEventNotifications.HandleDisplayDynamicQuestUpdate
	// void HandleDisplayDynamicQuestUpdate(UFortQuestObjectiveInfo* QuestObjective, bool DisplayStatusUpdate, bool DisplayAnnouncementUpdate); // [0x94c1404] Final|Native|Protected 
	// Function /Script/FortniteUI.FortGameEventNotifications.ActionFreedForNotifications
	// void ActionFreedForNotifications(FName ActionName);                                                                      // [0x94c0284] Final|Native|Protected 
};

/// Class /Script/FortniteUI.FortFrontendEventNotifications
/// Size: 0x0008 (0x0003B8 - 0x0003C0)
class UFortFrontendEventNotifications : public UFortGameEventNotifications
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 960;

public:
};

/// Class /Script/FortniteUI.FortFrontendLevelScriptActor
/// Size: 0x0040 (0x0002A8 - 0x0002E8)
class AFortFrontendLevelScriptActor : public AFortLevelScriptActor
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 744;

public:
	CMember(TWeakObjectPtr<AFortItemPreviewPedestal*>) CommanderPreviewPedestalActor                               OFFSET(get<T>, {0x2A8, 32, 0, 0})
	CMember(TWeakObjectPtr<AFortItemPreviewPedestal*>) HeroLoadoutPreviewPedestalActor                             OFFSET(get<T>, {0x2C8, 32, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortFrontendLevelScriptActor.GetHeroLoadoutPreviewPedestalActor
	// TWeakObjectPtr<AFortItemPreviewPedestal*> GetHeroLoadoutPreviewPedestalActor();                                          // [0x9400540] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortFrontendLevelScriptActor.GetFrontendLevelScript
	// AFortFrontendLevelScriptActor* GetFrontendLevelScript(UObject* WorldContextObject);                                      // [0x9400454] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/FortniteUI.FortFrontendLevelScriptActor.GetCommanderPreviewPedestalActor
	// TWeakObjectPtr<AFortItemPreviewPedestal*> GetCommanderPreviewPedestalActor();                                            // [0x94003a8] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/FortniteUI.FortItemPlacementActor
/// Size: 0x02D8 (0x000290 - 0x000568)
class AFortItemPlacementActor : public AActor
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1384;

public:
	CMember(UWidgetComponent*)                         WidgetComponent_LoadingIndicator                            OFFSET(get<T>, {0x298, 8, 0, 0})
	DMember(bool)                                      bIsActorHovered                                             OFFSET(get<bool>, {0x2A0, 1, 0, 0})
	CMember(AFortPlayerPawn*)                          CurrentPawn                                                 OFFSET(get<T>, {0x2A8, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortItemPlacementActor.OnUnhovered
	// void OnUnhovered();                                                                                                      // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortItemPlacementActor.OnRemovePreviewActor
	// void OnRemovePreviewActor();                                                                                             // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortItemPlacementActor.OnPreviewActorSpawned
	// void OnPreviewActorSpawned();                                                                                            // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortItemPlacementActor.OnItemClicked
	// void OnItemClicked();                                                                                                    // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortItemPlacementActor.OnHovered
	// void OnHovered();                                                                                                        // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortItemPlacementActor.OnHeroPawnSetupCompleted
	// void OnHeroPawnSetupCompleted();                                                                                         // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortItemPlacementActor.HandlePawnTouchBegin
	// void HandlePawnTouchBegin(TEnumAsByte<ETouchIndex> FingerIndex, AActor* TouchedActor);                                   // [0x9401ce0] Final|Native|Private 
	// Function /Script/FortniteUI.FortItemPlacementActor.HandlePawnFinishedApplyingCharacterParts
	// void HandlePawnFinishedApplyingCharacterParts(AFortPlayerPawn* Pawn);                                                    // [0x28afe1c] Final|Native|Private 
	// Function /Script/FortniteUI.FortItemPlacementActor.HandlePawnEndCursorOver
	// void HandlePawnEndCursorOver(AActor* TouchedActor);                                                                      // [0x2b0ea00] Final|Native|Private 
	// Function /Script/FortniteUI.FortItemPlacementActor.HandlePawnClicked
	// void HandlePawnClicked(AActor* TouchedActor, FKey ButtonPressed);                                                        // [0x9401a9c] Final|Native|Private 
	// Function /Script/FortniteUI.FortItemPlacementActor.HandlePawnBeginCursorOver
	// void HandlePawnBeginCursorOver(AActor* TouchedActor);                                                                    // [0x2f16fa4] Final|Native|Private 
	// Function /Script/FortniteUI.FortItemPlacementActor.HandleFinishedCharacterCustomization
	// void HandleFinishedCharacterCustomization(AFortPlayerPawn* InPawn);                                                      // [0x1865b40] Final|Native|Private 
	// Function /Script/FortniteUI.FortItemPlacementActor.HandleBoneTransformsFinalized
	// void HandleBoneTransformsFinalized();                                                                                    // [0x94010b8] Final|Native|Private 
};

/// Class /Script/FortniteUI.FortItemPreviewPedestal
/// Size: 0x0070 (0x000568 - 0x0005D8)
class AFortItemPreviewPedestal : public AFortItemPlacementActor
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1496;

public:
	CMember(TWeakObjectPtr<APlayerController*>)        ContextualPlayerController                                  OFFSET(get<T>, {0x570, 8, 0, 0})
	CMember(UFortHero*)                                TemporaryHeroInstance                                       OFFSET(get<T>, {0x578, 8, 0, 0})
	CMember(TArray<UCustomCharacterPart*>)             AdditionalCharacterParts                                    OFFSET(get<T>, {0x580, 16, 0, 0})
	CMember(USceneComponent*)                          WeaponPlacementComponent                                    OFFSET(get<T>, {0x5B8, 8, 0, 0})
	CMember(UChildActorComponent*)                     PreviewActorComponent                                       OFFSET(get<T>, {0x5C0, 8, 0, 0})
	CMember(UStaticMeshComponent*)                     PreviewStaticMeshComponent                                  OFFSET(get<T>, {0x5C8, 8, 0, 0})
	CMember(USkeletalMeshComponent*)                   PreviewSkelMeshComponent                                    OFFSET(get<T>, {0x5D0, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortItemPreviewPedestal.PreviewItemBP
	// void PreviewItemBP(UFortItem* Item);                                                                                     // [0x940234c] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortItemPreviewPedestal.ClearDisplay
	// void ClearDisplay();                                                                                                     // [0x94001f0] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/FortniteUI.FortOnboardingTooltipWidget
/// Size: 0x0038 (0x000400 - 0x000438)
class UFortOnboardingTooltipWidget : public UCommonActivatableWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1080;

public:
	CMember(UCommonButtonBase*)                        Dismiss_Button                                              OFFSET(get<T>, {0x408, 8, 0, 0})
	SMember(FGameplayTag)                              OnboardingTutorialId                                        OFFSET(getStruct<T>, {0x410, 4, 0, 0})
	DMember(bool)                                      bDesignTime_ShowTutorialDurationSeconds                     OFFSET(get<bool>, {0x414, 1, 0, 0})
	DMember(int32_t)                                   TutorialDurationSeconds                                     OFFSET(get<int32_t>, {0x418, 4, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortOnboardingTooltipWidget.OnShowTooltip
	// void OnShowTooltip();                                                                                                    // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortOnboardingTooltipWidget.OnEndTooltip
	// void OnEndTooltip();                                                                                                     // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortOnboardingTooltipWidget.NotifyCloseAnimationFinished
	// void NotifyCloseAnimationFinished();                                                                                     // [0x6c64588] Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.FortOnboardingTooltipWidget.GetSecondsBeforeClosing
	// int32_t GetSecondsBeforeClosing();                                                                                       // [0x9400f74] Native|Protected|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/FortniteUI.FortSeasonDataWidget
/// Size: 0x0028 (0x0002C0 - 0x0002E8)
class UFortSeasonDataWidget : public UUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 744;

public:
	DMember(float)                                     CurrentProgress                                             OFFSET(get<float>, {0x2C0, 4, 0, 0})
	DMember(int32_t)                                   CurrentXP                                                   OFFSET(get<int32_t>, {0x2C4, 4, 0, 0})
	DMember(int32_t)                                   XpToNextLevel                                               OFFSET(get<int32_t>, {0x2C8, 4, 0, 0})
	DMember(int32_t)                                   CurrentLevel                                                OFFSET(get<int32_t>, {0x2CC, 4, 0, 0})
	CMember(UAthenaChallengeRewards*)                  LevelRewards                                                OFFSET(get<T>, {0x2D0, 8, 0, 0})
	CMember(UFortSocialAvatarIcon*)                    SocialAvatarIcon                                            OFFSET(get<T>, {0x2D8, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortSeasonDataWidget.OnUpdatedRestedState
	// void OnUpdatedRestedState(bool bIsRested);                                                                               // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortSeasonDataWidget.OnSuperCharged
	// void OnSuperCharged();                                                                                                   // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortSeasonDataWidget.OnProgressUpdated
	// void OnProgressUpdated();                                                                                                // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortSeasonDataWidget.OnLevelChanged
	// void OnLevelChanged();                                                                                                   // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortSeasonDataWidget.OnBattlePassOwned
	// void OnBattlePassOwned();                                                                                                // [0x1d9241c] Event|Protected|BlueprintEvent 
};

/// Class /Script/FortniteUI.FortMobileShareButton
/// Size: 0x0030 (0x0014E0 - 0x001510)
class UFortMobileShareButton : public UCommonButtonLegacy
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 5392;

public:
};

/// Class /Script/FortniteUI.FortFriendCodeEntryBase
/// Size: 0x0070 (0x001510 - 0x001580)
class UFortFriendCodeEntryBase : public UFortMobileShareButton
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 5504;

public:
	SMember(FFriendCode)                               FriendCode                                                  OFFSET(getStruct<T>, {0x1510, 32, 0, 0})
	CMember(UCommonTextBlock*)                         LinkDataTextBox                                             OFFSET(get<T>, {0x1530, 8, 0, 0})
	SMember(FString)                                   DebugName                                                   OFFSET(getStruct<T>, {0x1538, 16, 0, 0})
	DMember(int32_t)                                   LengthOfCode                                                OFFSET(get<int32_t>, {0x1548, 4, 0, 0})
	SMember(FText)                                     SharedMessage                                               OFFSET(getStruct<T>, {0x1550, 24, 0, 0})
	SMember(FText)                                     SharedMessageNoInvite                                       OFFSET(getStruct<T>, {0x1568, 24, 0, 0})
};

/// Class /Script/FortniteUI.FortFriendCodeListBase
/// Size: 0x0028 (0x000570 - 0x000598)
class UFortFriendCodeListBase : public UFortActivatablePanel
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1432;

public:
	CMember(TArray<FFriendCode>)                       BacchusFriendCodes                                          OFFSET(get<T>, {0x570, 16, 0, 0})
	CMember(UClass*)                                   FriendCodeEntryClass                                        OFFSET(get<T>, {0x580, 8, 0, 0})
	CMember(UDynamicEntryBox*)                         EntryBox_FriendCodes                                        OFFSET(get<T>, {0x588, 8, 0, 0})
	CMember(URichTextBlock*)                           WarningText                                                 OFFSET(get<T>, {0x590, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortFriendCodeListBase.JustDesc
	// void JustDesc();                                                                                                         // [0x94022f4] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortFriendCodeListBase.DescAndURL
	// void DescAndURL();                                                                                                       // [0x9400254] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortFriendCodeListBase.CloseAndPopDialog
	// void CloseAndPopDialog();                                                                                                // [0x940022c] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/FortniteUI.FriendCodeEntryBase
/// Size: 0x0000 (0x0014E0 - 0x0014E0)
class UFriendCodeEntryBase : public UCommonButtonLegacy
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 5344;

public:
};

/// Class /Script/FortniteUI.FriendCodeListBase
/// Size: 0x0000 (0x000570 - 0x000570)
class UFriendCodeListBase : public UFortActivatablePanel
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1392;

public:
};

/// Class /Script/FortniteUI.FortMessageReceivedScreen
/// Size: 0x0020 (0x000570 - 0x000590)
class UFortMessageReceivedScreen : public UFortActivatablePanel
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1424;

public:
	SMember(FMulticastInlineDelegate)                  OnMessageClosed                                             OFFSET(getStruct<T>, {0x570, 16, 0, 0})
	CMember(UFortGiftBoxItem*)                         GiftBoxItem                                                 OFFSET(get<T>, {0x580, 8, 0, 0})
	CMember(UCommonLazyImage*)                         GiftBoxImage                                                OFFSET(get<T>, {0x588, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortMessageReceivedScreen.OnGiftBoxSet
	// void OnGiftBoxSet();                                                                                                     // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortMessageReceivedScreen.OnFinalGiftingComplete__DelegateSignature
	// void OnFinalGiftingComplete__DelegateSignature();                                                                        // [0x1d9241c] MulticastDelegate|Public|Delegate 
	// Function /Script/FortniteUI.FortMessageReceivedScreen.GetTournamentTitleFromCMS
	// bool GetTournamentTitleFromCMS(FString DisplayDataId, FString& OutTitle);                                                // [0x94ff828] Final|Native|Protected|HasOutParms|BlueprintCallable 
	// Function /Script/FortniteUI.FortMessageReceivedScreen.GetHeaderAssetString
	// FText GetHeaderAssetString(FString Param);                                                                               // [0x94febf0] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.FortMessageReceivedScreen.GetBodyAssetString
	// FText GetBodyAssetString(FString Param);                                                                                 // [0x94fe4ac] Final|Native|Protected|BlueprintCallable 
};

/// Class /Script/FortniteUI.AthenaGrantChallengeModal
/// Size: 0x0028 (0x000590 - 0x0005B8)
class UAthenaGrantChallengeModal : public UFortMessageReceivedScreen
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1464;

public:
	CMember(TArray<UFortChallengeBundleItemDefinition*>) BundleDefs                                                OFFSET(get<T>, {0x590, 16, 0, 0})
	CMember(UCommonTextBlock*)                         Text_ChallengeName                                          OFFSET(get<T>, {0x5A0, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_ChallengeContext                                       OFFSET(get<T>, {0x5A8, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_BodyCopy                                               OFFSET(get<T>, {0x5B0, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.AthenaGrantChallengeModal.ShowNextChallengePopup
	// void ShowNextChallengePopup();                                                                                           // [0x9403100] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.AthenaGrantChallengeModal.OnChallengeBundleSet
	// void OnChallengeBundleSet(FFortChallengeSetStyle& DisplayStyle);                                                         // [0x1d9241c] Event|Protected|HasOutParms|BlueprintEvent 
};

/// Class /Script/FortniteUI.FortCameraTargetPedestal
/// Size: 0x0368 (0x000290 - 0x0005F8)
class AFortCameraTargetPedestal : public AActor
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1528;

public:
	SMember(FGameplayTag)                              CameraTargetTag                                             OFFSET(getStruct<T>, {0x290, 4, 0, 0})
	CMember(UChildActorComponent*)                     PedestalBaseComponent                                       OFFSET(get<T>, {0x298, 8, 0, 0})
	CMember(UFortItem*)                                CurrentPrimaryItem                                          OFFSET(get<T>, {0x2A0, 8, 0, 0})
	CMember(AFortItemPreviewActor*)                    ItemPreviewActor                                            OFFSET(get<T>, {0x2A8, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortCameraTargetPedestal.OnItemPreviewCleared
	// void OnItemPreviewCleared();                                                                                             // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortCameraTargetPedestal.OnItemDisplayed
	// void OnItemDisplayed(EFortItemType ItemType);                                                                            // [0x1d9241c] Event|Protected|BlueprintEvent 
};

/// Class /Script/FortniteUI.ItemPreviewScene
/// Size: 0x00D0 (0x000290 - 0x000360)
class AItemPreviewScene : public AActor
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 864;

public:
	CMember(UChildActorComponent*)                     FocusCameraTargetComponent                                  OFFSET(get<T>, {0x290, 8, 0, 0})
	CMember(AFortCameraTargetPedestal*)                FocusCameraTargetPedestal                                   OFFSET(get<T>, {0x298, 8, 0, 0})
	CMember(TArray<AFortCameraTargetPedestal*>)        BackgroundCameraTargetPedestals                             OFFSET(get<T>, {0x2A0, 16, 0, 0})
	SMember(FFortItemViewSettings)                     ItemViewSettings                                            OFFSET(getStruct<T>, {0x2D0, 80, 0, 0})
	CMember(TArray<TWeakObjectPtr>)                    PedestalsLoading                                            OFFSET(get<T>, {0x320, 16, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.ItemPreviewScene.HandleItemShown
	// void HandleItemShown(UFortAccountItemDefinition* ItemViewed, AFortCameraTargetPedestal* Pedestal);                       // [0x94018c4] Final|Native|Private 
};

/// Class /Script/FortniteUI.FortItemPreviewSceneChanger
/// Size: 0x0130 (0x000290 - 0x0003C0)
class AFortItemPreviewSceneChanger : public AActor
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 960;

public:
	CMember(UCameraComponent*)                         TransitionCameraComponent                                   OFFSET(get<T>, {0x2A0, 8, 0, 0})
	CMember(UChildActorComponent*)                     PrimarySceneComponent                                       OFFSET(get<T>, {0x2A8, 8, 0, 0})
	CMember(UChildActorComponent*)                     SecondarySceneComponent                                     OFFSET(get<T>, {0x2B0, 8, 0, 0})
	SMember(FGameplayTag)                              SceneChangerTag                                             OFFSET(getStruct<T>, {0x2B8, 4, 0, 0})
	DMember(bool)                                      bHasEtherealBackground                                      OFFSET(get<bool>, {0x2BC, 1, 0, 0})
	CMember(USceneComponent*)                          SceneChangeRootComponent                                    OFFSET(get<T>, {0x2C0, 8, 0, 0})
	CMember(AItemPreviewScene*)                        PrimaryScene                                                OFFSET(get<T>, {0x2C8, 8, 0, 0})
	CMember(AItemPreviewScene*)                        SecondaryScene                                              OFFSET(get<T>, {0x2D0, 8, 0, 0})
	CMember(AItemPreviewScene*)                        SceneTransitioningTo                                        OFFSET(get<T>, {0x2D8, 8, 0, 0})
	CMember(AItemPreviewScene*)                        ActiveScene                                                 OFFSET(get<T>, {0x2E0, 8, 0, 0})
	DMember(float)                                     ZoomLevel                                                   OFFSET(get<float>, {0x328, 4, 0, 0})
	SMember(FRotator)                                  PedestalRotationOffset                                      OFFSET(getStruct<T>, {0x330, 24, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortItemPreviewSceneChanger.TickZoomLevel
	// void TickZoomLevel();                                                                                                    // [0x9403168] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.FortItemPreviewSceneChanger.TickPedestalRotationOffset
	// void TickPedestalRotationOffset();                                                                                       // [0x9403154] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.FortItemPreviewSceneChanger.OnUpdateBackgroundColor
	// void OnUpdateBackgroundColor(bool bEnableAutotestBackground);                                                            // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortItemPreviewSceneChanger.OnTargetZoomLevelSet
	// void OnTargetZoomLevelSet(float TargetZoomLevel);                                                                        // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortItemPreviewSceneChanger.OnTargetZoomLevelCanceled
	// void OnTargetZoomLevelCanceled();                                                                                        // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortItemPreviewSceneChanger.OnTargetRotationOffsetSet
	// void OnTargetRotationOffsetSet(FRotator& TargetRotationOffset);                                                          // [0x1d9241c] Event|Protected|HasOutParms|HasDefaults|BlueprintEvent 
	// Function /Script/FortniteUI.FortItemPreviewSceneChanger.OnTargetRotationOffsetCanceled
	// void OnTargetRotationOffsetCanceled();                                                                                   // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortItemPreviewSceneChanger.OnSetBackgroundMessageText
	// void OnSetBackgroundMessageText(FText& BackgroundMessageText);                                                           // [0x1d9241c] Event|Protected|HasOutParms|BlueprintEvent 
	// Function /Script/FortniteUI.FortItemPreviewSceneChanger.OnNewSceneRequested
	// void OnNewSceneRequested(UFortAccountItemDefinition* PrimaryRequestedItem, FSceneTransitionOptions& TransitionOptions);  // [0x1d9241c] Event|Protected|HasOutParms|BlueprintEvent 
	// Function /Script/FortniteUI.FortItemPreviewSceneChanger.IsSoundEnabled
	// bool IsSoundEnabled();                                                                                                   // [0x94022b4] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortItemPreviewSceneChanger.GetSceneTransitioningTo
	// AItemPreviewScene* GetSceneTransitioningTo();                                                                            // [0x9400e78] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.FortItemPreviewSceneChanger.GetPrimaryScene
	// AItemPreviewScene* GetPrimaryScene();                                                                                    // [0x2a54790] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.FortItemPreviewSceneChanger.GetActiveScene
	// AItemPreviewScene* GetActiveScene();                                                                                     // [0x8a2ad0c] Final|Native|Protected|BlueprintCallable 
};

/// Class /Script/FortniteUI.FortItemPreviewWorld
/// Size: 0x00A8 (0x000290 - 0x000338)
class AFortItemPreviewWorld : public AActor
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 824;

public:
	SMember(FGameplayTag)                              PreviewSceneChangerTag                                      OFFSET(getStruct<T>, {0x298, 4, 0, 0})
	CMember(UMaterialInstance*)                        BackgroundMaterial                                          OFFSET(get<T>, {0x2A0, 8, 0, 0})
	CMember(UMaterialInstanceDynamic*)                 BackgroundMaterialDynamic                                   OFFSET(get<T>, {0x2A8, 8, 0, 0})
	CMember(UMaterialInstance*)                        FloorMaterial                                               OFFSET(get<T>, {0x2B0, 8, 0, 0})
	CMember(UMaterialInstanceDynamic*)                 FloorMaterialDynamic                                        OFFSET(get<T>, {0x2B8, 8, 0, 0})
	CMember(UChildActorComponent*)                     SceneBackgroundComponent                                    OFFSET(get<T>, {0x2C0, 8, 0, 0})
	CMember(AFortStaticMeshActor*)                     SceneBackground                                             OFFSET(get<T>, {0x2C8, 8, 0, 0})
	CMember(UChildActorComponent*)                     SceneChangerComponent                                       OFFSET(get<T>, {0x2D0, 8, 0, 0})
	CMember(AFortItemPreviewSceneChanger*)             PreviewSceneChanger                                         OFFSET(get<T>, {0x2D8, 8, 0, 0})
	SMember(FVaultWorldBackgroundData)                 CachedBackgroundData                                        OFFSET(getStruct<T>, {0x2E0, 88, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortItemPreviewWorld.SetFloorMaterialDynamic
	// void SetFloorMaterialDynamic(UMaterialInstanceDynamic* InFloorMaterialDynamic);                                          // [0x2eb680c] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.FortItemPreviewWorld.SetBackgroundMaterialDynamic
	// void SetBackgroundMaterialDynamic(UMaterialInstanceDynamic* InBackgroundMaterialDynamic);                                // [0x2eb688c] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.FortItemPreviewWorld.OnUpdateMaterialIndex
	// void OnUpdateMaterialIndex(int32_t MaterialIndex);                                                                       // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortItemPreviewWorld.OnUpdateDisplay
	// void OnUpdateDisplay(bool bShowFloor, bool bShowEffects);                                                                // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortItemPreviewWorld.OnTransitionItemDetails
	// void OnTransitionItemDetails(bool bShowItemDetails);                                                                     // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortItemPreviewWorld.OnTransitionBackground
	// void OnTransitionBackground(bool bPlayForward, EBackgroundIntensityLevel IntensityTransition);                           // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortItemPreviewWorld.OnSetupTextureBackground
	// void OnSetupTextureBackground(UTexture2D* LoadedBackgroundTexture, FVaultWorldBackgroundData& BackgroundInfo);           // [0x1d9241c] Event|Protected|HasOutParms|BlueprintEvent 
	// Function /Script/FortniteUI.FortItemPreviewWorld.OnSetupMaterialBackground
	// void OnSetupMaterialBackground(UMaterialInterface* LoadedBackgroundMaterial, FVaultWorldBackgroundData& BackgroundInfo); // [0x1d9241c] Event|Protected|HasOutParms|BlueprintEvent 
	// Function /Script/FortniteUI.FortItemPreviewWorld.OnResetIntensityChange
	// void OnResetIntensityChange(bool bFromLowIntensity);                                                                     // [0x1d9241c] RequiredAPI|Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.FortItemPreviewWorld.OnIntensityChange
	// void OnIntensityChange(bool bToLowIntensity);                                                                            // [0x1d9241c] RequiredAPI|Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.FortItemPreviewWorld.OnInitialBackgroundTransition
	// void OnInitialBackgroundTransition();                                                                                    // [0x1d9241c] Event|Protected|BlueprintEvent 
};

/// Class /Script/FortniteUI.ItemPreviewRotator
/// Size: 0x0008 (0x0003C0 - 0x0003C8)
class AItemPreviewRotator : public AFortItemPreviewSceneChanger
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 968;

public:
	DMember(float)                                     CameraTransitionLerpDuration                                OFFSET(get<float>, {0x3C0, 4, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.ItemPreviewRotator.OnCameraTransitionReady
	// void OnCameraTransitionReady(bool bPrimaryToSecondary, UFortAccountItemDefinition* PrimaryRequestedItem, FSceneTransitionOptions& Options); // [0x1d9241c] Event|Protected|HasOutParms|BlueprintEvent 
	// Function /Script/FortniteUI.ItemPreviewRotator.GetInterpolatedTransitionCameraPosition
	// FInterpolatedTransitionCamera GetInterpolatedTransitionCameraPosition(FTransform& TransitionCameraTransform, float TransitionCameraFieldOfView, float ProgressThroughTransitionSecs, float TransitionDurationSecs); // [0x94005ec] Final|Native|Protected|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.ItemPreviewRotator.CameraTransitionComplete
	// void CameraTransitionComplete();                                                                                         // [0x94001b0] Final|Native|Protected|BlueprintCallable 
};

/// Class /Script/FortniteUI.ItemPreviewSwapper
/// Size: 0x0010 (0x0003C0 - 0x0003D0)
class AItemPreviewSwapper : public AFortItemPreviewSceneChanger
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 976;

public:
	CMember(UCurveFloat*)                              CameraTransitionCurve                                       OFFSET(get<T>, {0x3C0, 8, 0, 0})
	DMember(float)                                     CameraTransitionLerpDuration                                OFFSET(get<float>, {0x3C8, 4, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.ItemPreviewSwapper.UpdatePreviousSceneTransform
	// void UpdatePreviousSceneTransform(FTransform& RelativeTransform);                                                        // [0x94032d8] Final|Native|Protected|HasOutParms|HasDefaults|BlueprintCallable 
	// Function /Script/FortniteUI.ItemPreviewSwapper.UpdateNewSceneTransform
	// void UpdateNewSceneTransform(FTransform& RelativeTransform);                                                             // [0x94031ac] Final|Native|Protected|HasOutParms|HasDefaults|BlueprintCallable 
	// Function /Script/FortniteUI.ItemPreviewSwapper.SwapComplete
	// void SwapComplete();                                                                                                     // [0x9403114] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.ItemPreviewSwapper.OnReadyToSwap
	// void OnReadyToSwap(UFortAccountItemDefinition* PrimaryRequestedItem, FSceneTransitionOptions& Options);                  // [0x1d9241c] Event|Protected|HasOutParms|BlueprintEvent 
};

/// Class /Script/FortniteUI.FortLobbyPlayerPanel
/// Size: 0x0068 (0x000570 - 0x0005D8)
class UFortLobbyPlayerPanel : public UFortActivatablePanel
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1496;

public:
	CMember(UClass*)                                   ManageModalClass                                            OFFSET(get<T>, {0x570, 8, 0, 0})
	CMember(UCommonButtonBase*)                        Button_AddFriend                                            OFFSET(get<T>, {0x580, 8, 0, 0})
	CMember(UCommonButtonBase*)                        Button_InviteParty                                          OFFSET(get<T>, {0x588, 8, 0, 0})
	CMember(UCommonButtonBase*)                        Button_Manage                                               OFFSET(get<T>, {0x590, 8, 0, 0})
	CMember(UCommonButtonBase*)                        Button_Close                                                OFFSET(get<T>, {0x598, 8, 0, 0})
	CMember(UFortPlayerBanner*)                        Banner_Player                                               OFFSET(get<T>, {0x5A0, 8, 0, 0})
	CMember(URichTextBlock*)                           RichText_PlayerName                                         OFFSET(get<T>, {0x5A8, 8, 0, 0})
	CMember(UTextBlock*)                               Text_InviteSent                                             OFFSET(get<T>, {0x5B0, 8, 0, 0})
	CMember(UImage*)                                   Image_PlatformIcon                                          OFFSET(get<T>, {0x5B8, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortLobbyPlayerPanel.OnFriendStatusUpdated
	// void OnFriendStatusUpdated(EFortFriendRequestStatus FriendRequestStatus);                                                // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortLobbyPlayerPanel.ClosePanel
	// void ClosePanel();                                                                                                       // [0x9400240] Final|Native|Protected|BlueprintCallable 
};

/// Class /Script/FortniteUI.AthenaLobbyPlayerPanel
/// Size: 0x0028 (0x0005D8 - 0x000600)
class UAthenaLobbyPlayerPanel : public UFortLobbyPlayerPanel
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1536;

public:
	CMember(UCommonButtonBase*)                        Button_Mute                                                 OFFSET(get<T>, {0x5D8, 8, 0, 0})
	CMember(UCommonButtonBase*)                        Button_ViewProfile                                          OFFSET(get<T>, {0x5E0, 8, 0, 0})
	CMember(UTextBlock*)                               Text_BattlePassTier                                         OFFSET(get<T>, {0x5E8, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.AthenaLobbyPlayerPanel.OnIsMutedUpdated
	// void OnIsMutedUpdated(bool bIsMuted);                                                                                    // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaLobbyPlayerPanel.OnHasBattlePassUpdated
	// void OnHasBattlePassUpdated(bool bHasBattlePass);                                                                        // [0x1d9241c] Event|Protected|BlueprintEvent 
};

/// Class /Script/FortniteUI.AthenaSquadPedestalGroup
/// Size: 0x0030 (0x000290 - 0x0002C0)
class AAthenaSquadPedestalGroup : public AActor
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 704;

public:
	CMember(ESubGame)                                  UsedSubgame                                                 OFFSET(get<T>, {0x290, 1, 0, 0})
	DMember(int32_t)                                   MonitoredSquadIdx                                           OFFSET(get<int32_t>, {0x294, 4, 0, 0})
	CMember(TArray<AFortTeamMemberPedestal*>)          MemberPedestals                                             OFFSET(get<T>, {0x298, 16, 0, 0})
	CMember(USceneComponent*)                          PedestalChildrenRoot                                        OFFSET(get<T>, {0x2A8, 8, 0, 0})
};

/// Class /Script/FortniteUI.CampaignLobbyPlayerPanel
/// Size: 0x0018 (0x0005D8 - 0x0005F0)
class UCampaignLobbyPlayerPanel : public UFortLobbyPlayerPanel
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1520;

public:
	CMember(UCommonButtonLegacy*)                      Button_ShowHeadAccessory                                    OFFSET(get<T>, {0x5D8, 8, 0, 0})
	CMember(UCommonButtonLegacy*)                      Button_ShowBackpack                                         OFFSET(get<T>, {0x5E0, 8, 0, 0})
	CMember(UCommonNumericTextBlock*)                  Number_PowerLevel                                           OFFSET(get<T>, {0x5E8, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.CampaignLobbyPlayerPanel.OnShowHeadAccessoryChanged
	// void OnShowHeadAccessoryChanged(bool bShowHeadAccessory);                                                                // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.CampaignLobbyPlayerPanel.OnShowBackbackChanged
	// void OnShowBackbackChanged(bool bShowBackpack);                                                                          // [0x1d9241c] Event|Protected|BlueprintEvent 
};

/// Class /Script/FortniteUI.FortLobbyAddPlayer
/// Size: 0x0020 (0x001510 - 0x001530)
class UFortLobbyAddPlayer : public UFortTeamMemberEntryBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 5424;

public:
	CMember(UCommonButtonLegacy*)                      Button_EmptySlot                                            OFFSET(get<T>, {0x1520, 8, 0, 0})
	CMember(UFortPartySuggestionButton*)               PartySuggestion                                             OFFSET(get<T>, {0x1528, 8, 0, 0})
};

/// Class /Script/FortniteUI.FortPartySuggestionButton
/// Size: 0x0040 (0x0014E0 - 0x001520)
class UFortPartySuggestionButton : public UCommonButtonLegacy
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 5408;

public:
	CMember(UImage*)                                   Image_PartySize                                             OFFSET(get<T>, {0x14F8, 8, 0, 0})
	CMember(UFortSocialNameTextBlock*)                 Text_SocialName                                             OFFSET(get<T>, {0x1500, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_Description                                            OFFSET(get<T>, {0x1508, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_ActionText                                             OFFSET(get<T>, {0x1510, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortPartySuggestionButton.UpdateDisplayInfo
	// void UpdateDisplayInfo();                                                                                                // [0x9403198] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortPartySuggestionButton.OnSuggestionChanged
	// void OnSuggestionChanged();                                                                                              // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortPartySuggestionButton.OnSuggestionAccepted
	// void OnSuggestionAccepted();                                                                                             // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortPartySuggestionButton.OnNewSuggestionAdded
	// void OnNewSuggestionAdded();                                                                                             // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortPartySuggestionButton.OnDisplayInfoUpdated
	// void OnDisplayInfoUpdated(bool bIsInvited, bool bIsPlaying);                                                             // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortPartySuggestionButton.OnDismissSuggestion
	// void OnDismissSuggestion();                                                                                              // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortPartySuggestionButton.HandleSuggestionAccepted
	// void HandleSuggestionAccepted(int32_t PlayerId);                                                                         // [0x9401db4] Final|Native|Private 
	// Function /Script/FortniteUI.FortPartySuggestionButton.HandleLobbyStarted
	// void HandleLobbyStarted();                                                                                               // [0x9401988] Final|Native|Private 
};

/// Class /Script/FortniteUI.FortRadialPicker
/// Size: 0x0020 (0x000400 - 0x000420)
class UFortRadialPicker : public UCommonActivatableWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1056;

public:
};

/// Class /Script/FortniteUI.FortTeamMemberXPBoostInfo
/// Size: 0x0010 (0x001510 - 0x001520)
class UFortTeamMemberXPBoostInfo : public UFortTeamMemberEntryBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 5408;

public:
	CMember(UPanelWidget*)                             Panel_BattlePassOwnerInfo                                   OFFSET(get<T>, {0x1508, 8, 0, 0})
	CMember(UTextBlock*)                               Text_BattlePassSelfXPBoost                                  OFFSET(get<T>, {0x1510, 8, 0, 0})
	CMember(UTextBlock*)                               Text_EventXPBoost                                           OFFSET(get<T>, {0x1518, 8, 0, 0})
};

/// Class /Script/FortniteUI.FortTeamMemberPedestal
/// Size: 0x00E8 (0x000568 - 0x000650)
class AFortTeamMemberPedestal : public AFortItemPlacementActor
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1616;

public:
	CMember(TArray<FCachedComponentMaterials>)         CachedComponentMaterials                                    OFFSET(get<T>, {0x568, 16, 0, 0})
	CMember(AAthenaSquadPedestalGroup*)                OwningPedestalGroup                                         OFFSET(get<T>, {0x578, 8, 0, 0})
	DMember(int32_t)                                   AssignedMemberIndex                                         OFFSET(get<int32_t>, {0x580, 4, 0, 0})
	DMember(int32_t)                                   VisualOrderIndex                                            OFFSET(get<int32_t>, {0x584, 4, 0, 0})
	CMember(UWidgetComponent*)                         WidgetComponent_MemberInfo                                  OFFSET(get<T>, {0x588, 8, 0, 0})
	CMember(UWidgetComponent*)                         WidgetComponent_FillOpenSlot                                OFFSET(get<T>, {0x590, 8, 0, 0})
	CMember(UWidgetComponent*)                         WidgetComponent_BattlePassInfo                              OFFSET(get<T>, {0x598, 8, 0, 0})
	CMember(UWidgetComponent*)                         WidgetComponent_CompletedFeatInfo                           OFFSET(get<T>, {0x5A0, 8, 0, 0})
	CMember(UStaticMeshComponent*)                     PlaceholderMesh                                             OFFSET(get<T>, {0x5A8, 8, 0, 0})
	CMember(TArray<UFortTeamMemberEntryBase*>)         MemberWidgetEntries                                         OFFSET(get<T>, {0x5B0, 16, 0, 0})
	CMember(UFortHero*)                                MemberHeroItem                                              OFFSET(get<T>, {0x5D0, 8, 0, 0})
	DMember(float)                                     LocalLoadoutFailureTimeout                                  OFFSET(get<float>, {0x5E0, 4, 0, 0})
	DMember(bool)                                      bTimeToPawnLoadedEnabled                                    OFFSET(get<bool>, {0x5E4, 1, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortTeamMemberPedestal.OnTeamMemberSet
	// void OnTeamMemberSet(bool bHasValidTeamMember);                                                                          // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortTeamMemberPedestal.OnPedestalIsPopulatedChanged
	// void OnPedestalIsPopulatedChanged(bool bIsPopulated, bool bOwningSquadContainsLocalPlayer);                              // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortTeamMemberPedestal.OnOwningPedestalGroupEstablished
	// void OnOwningPedestalGroupEstablished(int32_t SquadIdx, bool bSquadHasLocalPlayer, bool bIsPopulated);                   // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortTeamMemberPedestal.OnNewSquadEstablished
	// void OnNewSquadEstablished(bool bMultipleSquadsPopulated, bool bOwningSquadContainsLocalPlayer, FAthenaTeamDisplayInfo& OwningSquadStyle); // [0x1d9241c] Event|Protected|HasOutParms|BlueprintEvent 
	// Function /Script/FortniteUI.FortTeamMemberPedestal.OnIsCurrentlyInMatchChanged
	// void OnIsCurrentlyInMatchChanged(bool bIsInMatch);                                                                       // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortTeamMemberPedestal.OnGameReadinessChanged
	// void OnGameReadinessChanged(EGameReadiness GameReadiness);                                                               // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortTeamMemberPedestal.OnDisconnectedToCampaignLobby
	// void OnDisconnectedToCampaignLobby();                                                                                    // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortTeamMemberPedestal.OnConnectedToCampaignLobby
	// void OnConnectedToCampaignLobby();                                                                                       // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortTeamMemberPedestal.OnAvatarChanged
	// void OnAvatarChanged(UTexture2D* AvatarImage, FColor AvatarBackground, FColor HighlightColor);                           // [0x1d9241c] Event|Protected|HasDefaults|BlueprintEvent 
	// Function /Script/FortniteUI.FortTeamMemberPedestal.IsValidTeamMember
	// bool IsValidTeamMember();                                                                                                // [0x2ee10cc] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortTeamMemberPedestal.IsPlayingFortnite
	// bool IsPlayingFortnite();                                                                                                // [0x2ff44a0] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortTeamMemberPedestal.IsInLocalSquadGroup
	// bool IsInLocalSquadGroup();                                                                                              // [0x105706c] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortTeamMemberPedestal.IsInFrontEnd
	// bool IsInFrontEnd();                                                                                                     // [0x3316700] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortTeamMemberPedestal.IsCurrentMemberLocal
	// bool IsCurrentMemberLocal();                                                                                             // [0x3021c90] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortTeamMemberPedestal.InitializePlaceholderMesh
	// void InitializePlaceholderMesh(UStaticMeshComponent* PlaceholderMesh);                                                   // [0x2653c9c] Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.FortTeamMemberPedestal.HandlePlaceholderMeshInputTouchEnd
	// void HandlePlaceholderMeshInputTouchEnd(TEnumAsByte<ETouchIndex> FingerIndex, UPrimitiveComponent* TouchedComponent);    // [0x9401ce0] Final|Native|Private 
	// Function /Script/FortniteUI.FortTeamMemberPedestal.HandlePlaceholderMeshEndCursorOver
	// void HandlePlaceholderMeshEndCursorOver(UPrimitiveComponent* TouchedComponent);                                          // [0x2b0e084] Final|Native|Private 
	// Function /Script/FortniteUI.FortTeamMemberPedestal.HandlePlaceholderMeshClicked
	// void HandlePlaceholderMeshClicked(UPrimitiveComponent* TouchedComponent, FKey ButtonPressed);                            // [0x9401a9c] Final|Native|Private 
	// Function /Script/FortniteUI.FortTeamMemberPedestal.HandlePlaceholderMeshBeginCursorOver
	// void HandlePlaceholderMeshBeginCursorOver(UPrimitiveComponent* TouchedComponent);                                        // [0x2f16f24] Final|Native|Private 
	// Function /Script/FortniteUI.FortTeamMemberPedestal.HandleOnAnimInstanceEventReceived
	// void HandleOnAnimInstanceEventReceived(UFortAnimInputEvent* AnimInputEvent);                                             // [0x940199c] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.FortTeamMemberPedestal.GetTeamMemberDisplayName
	// FString GetTeamMemberDisplayName();                                                                                      // [0x9400f9c] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortTeamMemberPedestal.GetCurrentTeamSize
	// int32_t GetCurrentTeamSize();                                                                                            // [0x1059984] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortTeamMemberPedestal.ClearOverrideMaterial
	// void ClearOverrideMaterial();                                                                                            // [0x9400204] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.FortTeamMemberPedestal.ApplyUniformOverrideMaterial
	// void ApplyUniformOverrideMaterial(UMaterialInterface* OverrideMaterial);                                                 // [0x9400030] Final|Native|Protected|BlueprintCallable 
};

/// Class /Script/FortniteUI.FortCollectionDataEntrySocialTag
/// Size: 0x0030 (0x000030 - 0x000060)
class UFortCollectionDataEntrySocialTag : public UFortCollectionDataEntry
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 96;

public:
	SMember(FText)                                     EntryName                                                   OFFSET(getStruct<T>, {0x30, 24, 0, 0})
	CMember(ESocialTagCategory)                        TagCategory                                                 OFFSET(get<T>, {0x48, 1, 0, 0})
};

/// Class /Script/FortniteUI.FortCollectionDataSocialTag
/// Size: 0x0000 (0x000090 - 0x000090)
class UFortCollectionDataSocialTag : public UFortCollectionData
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 144;

public:
};

/// Class /Script/FortniteUI.FortSocialListUserEntryBase
/// Size: 0x0020 (0x001530 - 0x001550)
class UFortSocialListUserEntryBase : public USocialListUserEntryBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 5456;

public:
	CMember(UImage*)                                   Image_EncourageEpicFriend                                   OFFSET(get<T>, {0x1530, 8, 0, 0})
	CMember(UCommonRichTextBlock*)                     Text_LastInteraction                                        OFFSET(get<T>, {0x1538, 8, 0, 0})
	CMember(UCommonRichTextBlock*)                     Text_LastInteraction_Hover                                  OFFSET(get<T>, {0x1540, 8, 0, 0})
};

/// Class /Script/FortniteUI.FortConnectionsUserListEntry
/// Size: 0x0030 (0x001550 - 0x001580)
class UFortConnectionsUserListEntry : public UFortSocialListUserEntryBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 5504;

public:
	CMember(UCommonRichTextBlock*)                     Text_MutualFriends                                          OFFSET(get<T>, {0x1550, 8, 0, 0})
	CMember(UCommonRichTextBlock*)                     Text_MutualFriends_Hover                                    OFFSET(get<T>, {0x1558, 8, 0, 0})
	CMember(UFortSocialAvatarIcon*)                    Avatar_MemberIcon                                           OFFSET(get<T>, {0x1560, 8, 0, 0})
	CMember(UFortPlayerAvatar*)                        PlayerAvatar                                                OFFSET(get<T>, {0x1568, 8, 0, 0})
	CMember(URebootRallyIcon*)                         WBP_RebootRallyIcon                                         OFFSET(get<T>, {0x1570, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortConnectionsUserListEntry.OnNewAvatarsEnabledChanged
	// void OnNewAvatarsEnabledChanged(bool bUsingNewAvatars);                                                                  // [0x1d9241c] Event|Protected|BlueprintEvent 
};

/// Class /Script/FortniteUI.FortFriendLinkPanel
/// Size: 0x0008 (0x000570 - 0x000578)
class UFortFriendLinkPanel : public UFortActivatablePanel
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1400;

public:
	CMember(UCommonButtonLegacy*)                      Button_ShareButton                                          OFFSET(get<T>, {0x570, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortFriendLinkPanel.OnShareButtonTypeSet
	// void OnShareButtonTypeSet(EShareButtonType Type);                                                                        // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortFriendLinkPanel.OnCopiedToClipboard
	// void OnCopiedToClipboard();                                                                                              // [0x1d9241c] Event|Protected|BlueprintEvent 
};

/// Class /Script/FortniteUI.FortJoinablePartyActionMenu
/// Size: 0x0060 (0x0004A8 - 0x000508)
class UFortJoinablePartyActionMenu : public USocialInteractionMenu
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1288;

public:
	SMember(FColor)                                    SecondNameColor                                             OFFSET(getStruct<T>, {0x4A8, 4, 0, 0})
	DMember(uint32_t)                                  SecondNameFontSize                                          OFFSET(get<uint32_t>, {0x4AC, 4, 0, 0})
	DMember(char)                                      MaxNamesToDisplay                                           OFFSET(get<char>, {0x4B0, 1, 0, 0})
	SMember(FColor)                                    InviteTextColor                                             OFFSET(getStruct<T>, {0x4B4, 4, 0, 0})
	SMember(FColor)                                    DimmerInviteColor                                           OFFSET(getStruct<T>, {0x4B8, 4, 0, 0})
	SMember(FColor)                                    DimmerDefaultColor                                          OFFSET(getStruct<T>, {0x4BC, 4, 0, 0})
	SMember(FText)                                     OtherMemberNamesFormat                                      OFFSET(getStruct<T>, {0x4C0, 24, 0, 0})
	CMember(UCommonRichTextBlock*)                     RichText_DisplayNames                                       OFFSET(get<T>, {0x4D8, 8, 0, 0})
	CMember(UFortJoinablePartyPortraitsDisplay*)       PartyPortraits                                              OFFSET(get<T>, {0x4E0, 8, 0, 0})
	CMember(UCommonRichTextBlock*)                     Text_PartyPresence                                          OFFSET(get<T>, {0x4E8, 8, 0, 0})
	CMember(UDynamicEntryBox*)                         EntryBox_PartyMembers                                       OFFSET(get<T>, {0x4F0, 8, 0, 0})
	CMember(UScrollBox*)                               ScrollBox_PartyMembers                                      OFFSET(get<T>, {0x4F8, 8, 0, 0})
	CMember(UCommonButtonBase*)                        SidebarBackButton                                           OFFSET(get<T>, {0x500, 8, 0, 0})
};

/// Class /Script/FortniteUI.FortJoinablePartyListEntry
/// Size: 0x0090 (0x001510 - 0x0015A0)
class UFortJoinablePartyListEntry : public USocialListInteractableEntryBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 5536;

public:
	SMember(FColor)                                    InviteTextColor                                             OFFSET(getStruct<T>, {0x1508, 4, 0, 0})
	SMember(FColor)                                    DimmerInviteColor                                           OFFSET(getStruct<T>, {0x150C, 4, 0, 0})
	SMember(FColor)                                    DimmerDefaultColor                                          OFFSET(getStruct<T>, {0x1510, 4, 0, 0})
	DMember(uint32_t)                                  SecondNameFontSize                                          OFFSET(get<uint32_t>, {0x1514, 4, 0, 0})
	DMember(char)                                      MaxNamesToDisplay                                           OFFSET(get<char>, {0x1518, 1, 0, 0})
	SMember(FColor)                                    SidebarPartyPresenceTextColorDefault                        OFFSET(getStruct<T>, {0x151C, 4, 0, 0})
	SMember(FColor)                                    SidebarJoinablePartyTextColorDefault                        OFFSET(getStruct<T>, {0x1520, 4, 0, 0})
	SMember(FColor)                                    SidebarFriendNameTextColorDefault                           OFFSET(getStruct<T>, {0x1524, 4, 0, 0})
	SMember(FColor)                                    SidebarOtherMembersTextColorDefault                         OFFSET(getStruct<T>, {0x1528, 4, 0, 0})
	SMember(FColor)                                    SidebarPartyPresenceTextColorHover                          OFFSET(getStruct<T>, {0x152C, 4, 0, 0})
	SMember(FColor)                                    SidebarJoinablePartyTextColorHover                          OFFSET(getStruct<T>, {0x1530, 4, 0, 0})
	SMember(FColor)                                    SidebarFriendNameTextColorHover                             OFFSET(getStruct<T>, {0x1534, 4, 0, 0})
	SMember(FColor)                                    SidebarOtherMembersTextColorHover                           OFFSET(getStruct<T>, {0x1538, 4, 0, 0})
	DMember(uint32_t)                                  SidebarOtherMembersFontSize                                 OFFSET(get<uint32_t>, {0x153C, 4, 0, 0})
	DMember(int32_t)                                   DisplayNameMaxChars                                         OFFSET(get<int32_t>, {0x1540, 4, 0, 0})
	CMember(UCommonRichTextBlock*)                     Text_DisplayNames                                           OFFSET(get<T>, {0x1548, 8, 0, 0})
	CMember(UCommonRichTextBlock*)                     Text_PartyPresence                                          OFFSET(get<T>, {0x1550, 8, 0, 0})
	CMember(UCommonRichTextBlock*)                     Text_JoinableParty                                          OFFSET(get<T>, {0x1558, 8, 0, 0})
	CMember(UFortJoinablePartyPortraitsDisplay*)       PartyPortraitsDisplay                                       OFFSET(get<T>, {0x1560, 8, 0, 0})
	CMember(URebootRallyIcon*)                         WBP_RebootRallyIcon                                         OFFSET(get<T>, {0x1568, 8, 0, 0})
	CMember(UCommonRichTextBlock*)                     Text_DisplayNames_Hover                                     OFFSET(get<T>, {0x1570, 8, 0, 0})
	CMember(UCommonRichTextBlock*)                     Text_PartyPresence_Hover                                    OFFSET(get<T>, {0x1578, 8, 0, 0})
	CMember(UCommonRichTextBlock*)                     Text_JoinableParty_Hover                                    OFFSET(get<T>, {0x1580, 8, 0, 0})
	CMember(USidebarSocialTagListBase*)                SocialTagList                                               OFFSET(get<T>, {0x1588, 8, 0, 0})
	CMember(UCommonActivatableWidgetSwitcher*)         Switcher_PartyPresenceText                                  OFFSET(get<T>, {0x1590, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortJoinablePartyListEntry.OnPartyPresenceTextUpdated
	// void OnPartyPresenceTextUpdated();                                                                                       // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortJoinablePartyListEntry.OnInviteStatusUpdated
	// void OnInviteStatusUpdated(bool bIsInvited);                                                                             // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortJoinablePartyListEntry.ForcePartyItemUpdate
	// void ForcePartyItemUpdate();                                                                                             // [0x9433434] Final|Native|Protected|BlueprintCallable 
};

/// Class /Script/FortniteUI.FortJoinablePartyPortrait
/// Size: 0x0048 (0x0002C0 - 0x000308)
class UFortJoinablePartyPortrait : public UUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 776;

public:
	CMember(UCommonVisibilitySwitcher*)                CommonSwitcher_PortraitState                                OFFSET(get<T>, {0x2C0, 8, 0, 0})
	CMember(UFortSocialAvatarIcon*)                    Avatar_MemberIcon                                           OFFSET(get<T>, {0x2C8, 8, 0, 0})
	CMember(UFortPlayerAvatar*)                        PlayerAvatar                                                OFFSET(get<T>, {0x2D0, 8, 0, 0})
	CMember(UOverlay*)                                 Overlay_Portrait                                            OFFSET(get<T>, {0x2D8, 8, 0, 0})
	CMember(UOverlay*)                                 Overlay_RemainingPlayersValue                               OFFSET(get<T>, {0x2E0, 8, 0, 0})
	CMember(UCommonRichTextBlock*)                     Text_RemainingPlayers                                       OFFSET(get<T>, {0x2E8, 8, 0, 0})
	SMember(FText)                                     RemainingPlayersFormat                                      OFFSET(getStruct<T>, {0x2F0, 24, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortJoinablePartyPortrait.OnNewAvatarsEnabledChanged
	// void OnNewAvatarsEnabledChanged(bool bUsingNewAvatars);                                                                  // [0x1d9241c] Event|Protected|BlueprintEvent 
};

/// Class /Script/FortniteUI.FortJoinablePartyPortraitsDisplay
/// Size: 0x0028 (0x0002C0 - 0x0002E8)
class UFortJoinablePartyPortraitsDisplay : public UUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 744;

public:
	CMember(UDynamicEntryBox*)                         EntryBox_PartyPortraits                                     OFFSET(get<T>, {0x2D0, 8, 0, 0})
	CMember(UFortJoinablePartyPortrait*)               PartyPortrait_PartyLeader                                   OFFSET(get<T>, {0x2D8, 8, 0, 0})
	DMember(int32_t)                                   MaxDisplayedUsers                                           OFFSET(get<int32_t>, {0x2E0, 4, 0, 0})
};

/// Class /Script/FortniteUI.FortLeavePartyListEntry
/// Size: 0x0000 (0x001510 - 0x001510)
class UFortLeavePartyListEntry : public USocialListInteractableEntryBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 5392;

public:
};

/// Class /Script/FortniteUI.FortLeavePartyMenu
/// Size: 0x0010 (0x000440 - 0x000450)
class UFortLeavePartyMenu : public USocialActionMenu
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1104;

public:
	CMember(UCommonButtonLegacy*)                      Button_Confirm                                              OFFSET(get<T>, {0x440, 8, 0, 0})
	CMember(UCommonButtonLegacy*)                      Button_Decline                                              OFFSET(get<T>, {0x448, 8, 0, 0})
};

/// Class /Script/FortniteUI.FortLFGFilterCheckboxEntryWidget
/// Size: 0x0010 (0x001510 - 0x001520)
class UFortLFGFilterCheckboxEntryWidget : public USocialListInteractableEntryBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 5408;

public:
	CMember(USocialTagWidget*)                         SocialTagWidget                                             OFFSET(get<T>, {0x1508, 8, 0, 0})
	CMember(UFortSidebarCheckboxWidget*)               CheckBox                                                    OFFSET(get<T>, {0x1510, 8, 0, 0})
};

/// Class /Script/FortniteUI.FortLocalUserEntry
/// Size: 0x0050 (0x0014E0 - 0x001530)
class UFortLocalUserEntry : public UCommonButtonLegacy
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 5424;

public:
	CMember(UClass*)                                   LocalUserSettingsMenuClass                                  OFFSET(get<T>, {0x14E0, 8, 0, 0})
	CMember(UFortLocalUserSettingsMenu*)               LocalUserSettingsMenu                                       OFFSET(get<T>, {0x14E8, 8, 0, 0})
	CMember(UFortSocialAvatarIcon*)                    SocialAvatarIcon                                            OFFSET(get<T>, {0x1508, 8, 0, 0})
	CMember(UImage*)                                   Image_Crown                                                 OFFSET(get<T>, {0x1510, 8, 0, 0})
	CMember(UTextBlock*)                               Text_UserName                                               OFFSET(get<T>, {0x1518, 8, 0, 0})
	CMember(UTextBlock*)                               Text_VoiceChannel                                           OFFSET(get<T>, {0x1520, 8, 0, 0})
	CMember(UMenuAnchor*)                              MenuAnchor_LocalUserSettingMenu                             OFFSET(get<T>, {0x1528, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortLocalUserEntry.OnOnlineStatusChanged
	// void OnOnlineStatusChanged(ELocalUserOnlineStatus OnlineStatus);                                                         // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortLocalUserEntry.HandleMenuOpenChanged
	// void HandleMenuOpenChanged(bool bIsOpen);                                                                                // [0x94337a8] Final|Native|Private 
	// Function /Script/FortniteUI.FortLocalUserEntry.HandleGetMenuContent
	// UUserWidget* HandleGetMenuContent();                                                                                     // [0x6c63758] Final|Native|Protected 
};

/// Class /Script/FortniteUI.FortLocalUserSettingButton
/// Size: 0x0020 (0x0014E0 - 0x001500)
class UFortLocalUserSettingButton : public UCommonButtonLegacy
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 5376;

public:
	CMember(UCommonRichTextBlock*)                     RichText_DisplayName                                        OFFSET(get<T>, {0x14E8, 8, 0, 0})
	CMember(UImage*)                                   Image_CurrentSelectedArrow                                  OFFSET(get<T>, {0x14F0, 8, 0, 0})
};

/// Class /Script/FortniteUI.FortLocalUserSettingTitleButton
/// Size: 0x0010 (0x0014E0 - 0x0014F0)
class UFortLocalUserSettingTitleButton : public UCommonButtonLegacy
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 5360;

public:
	CMember(UCommonRichTextBlock*)                     RichText_Title                                              OFFSET(get<T>, {0x14E0, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortLocalUserSettingTitleButton.OnExpansionChanged
	// void OnExpansionChanged(bool bIsExpanded);                                                                               // [0x1d9241c] Event|Public|BlueprintEvent 
};

/// Class /Script/FortniteUI.FortLocalUserSettingsSection
/// Size: 0x0080 (0x0002C0 - 0x000340)
class UFortLocalUserSettingsSection : public UUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 832;

public:
	CMember(UFortLocalUserSettingTitleButton*)         TitleButton                                                 OFFSET(get<T>, {0x330, 8, 0, 0})
	CMember(UDynamicEntryBox*)                         EntryBox_Options                                            OFFSET(get<T>, {0x338, 8, 0, 0})
};

/// Class /Script/FortniteUI.FortLocalUserSettingsMenu
/// Size: 0x0038 (0x000400 - 0x000438)
class UFortLocalUserSettingsMenu : public UCommonActivatableWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1080;

public:
	SMember(FColor)                                    SettingTextColor                                            OFFSET(getStruct<T>, {0x400, 4, 0, 0})
	CMember(UMenuAnchor*)                              OwningMenuAnchor                                            OFFSET(get<T>, {0x408, 8, 0, 0})
	CMember(UFortLocalUserSettingsSection*)            Section_OnlineStatus                                        OFFSET(get<T>, {0x410, 8, 0, 0})
	CMember(UFortLocalUserSettingsSection*)            Section_Privacy                                             OFFSET(get<T>, {0x418, 8, 0, 0})
	CMember(UFortLocalUserSettingsSection*)            Section_Participation                                       OFFSET(get<T>, {0x420, 8, 0, 0})
	CMember(UFortLocalUserSettingsSection*)            Section_VoiceChannel                                        OFFSET(get<T>, {0x428, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortLocalUserSettingsMenu.OnFocused
	// void OnFocused();                                                                                                        // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortLocalUserSettingsMenu.HandleMenuAnchorOpenChanged
	// void HandleMenuAnchorOpenChanged(bool bIsOpen);                                                                          // [0x943372c] Final|Native|Private 
};

/// Class /Script/FortniteUI.FortMissedInvitesActionMenu
/// Size: 0x0008 (0x000440 - 0x000448)
class UFortMissedInvitesActionMenu : public USocialActionMenu
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1096;

public:
	CMember(UCommonButtonLegacy*)                      Button_NeverShowAgain                                       OFFSET(get<T>, {0x440, 8, 0, 0})
};

/// Class /Script/FortniteUI.FortMissedInvitesListEntry
/// Size: 0x0000 (0x001510 - 0x001510)
class UFortMissedInvitesListEntry : public USocialListInteractableEntryBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 5392;

public:
};

/// Class /Script/FortniteUI.FortMultiFriendActionListEntry
/// Size: 0x0000 (0x001510 - 0x001510)
class UFortMultiFriendActionListEntry : public USocialListInteractableEntryBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 5392;

public:


	/// Functions
	// Function /Script/FortniteUI.FortMultiFriendActionListEntry.OnActionUpdated
	// void OnActionUpdated(EMultiFriendAction InAction);                                                                       // [0x1d9241c] Event|Protected|BlueprintEvent 
};

/// Class /Script/FortniteUI.FortMultiFriendActionMenu
/// Size: 0x0018 (0x000440 - 0x000458)
class UFortMultiFriendActionMenu : public USocialActionMenu
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1112;

public:
	CMember(UCommonButtonBase*)                        Button_Confirm                                              OFFSET(get<T>, {0x440, 8, 0, 0})
	CMember(UCommonButtonBase*)                        Button_Decline                                              OFFSET(get<T>, {0x448, 8, 0, 0})
	CMember(EMultiFriendAction)                        Action                                                      OFFSET(get<T>, {0x450, 1, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortMultiFriendActionMenu.OnActionUpdated
	// void OnActionUpdated();                                                                                                  // [0x1d9241c] Event|Protected|BlueprintEvent 
};

/// Class /Script/FortniteUI.FortMutualFriendSocialUserListEntry
/// Size: 0x0020 (0x001550 - 0x001570)
class UFortMutualFriendSocialUserListEntry : public UFortSocialListUserEntryBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 5488;

public:
	CMember(UFortSocialAvatarIcon*)                    Avatar_MemberIcon                                           OFFSET(get<T>, {0x1550, 8, 0, 0})
	CMember(UFortPlayerAvatar*)                        PlayerAvatar                                                OFFSET(get<T>, {0x1558, 8, 0, 0})
	CMember(URebootRallyIcon*)                         WBP_RebootRallyIcon                                         OFFSET(get<T>, {0x1560, 8, 0, 0})
	CMember(UBorder*)                                  Border_Background                                           OFFSET(get<T>, {0x1568, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortMutualFriendSocialUserListEntry.OnNewAvatarsEnabledChanged
	// void OnNewAvatarsEnabledChanged(bool bUsingNewAvatars);                                                                  // [0x1d9241c] Event|Protected|BlueprintEvent 
};

/// Class /Script/FortniteUI.FortOwningPlayerSocialNameTextBlock
/// Size: 0x0008 (0x0002C0 - 0x0002C8)
class UFortOwningPlayerSocialNameTextBlock : public UUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 712;

public:
	CMember(USocialNameTextBlock*)                     Text_SocialName                                             OFFSET(get<T>, {0x2C0, 8, 0, 0})
};

/// Class /Script/FortniteUI.FortPresenceUserListEntry
/// Size: 0x0040 (0x001550 - 0x001590)
class UFortPresenceUserListEntry : public UFortSocialListUserEntryBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 5520;

public:
	CMember(UFortSocialAvatarIcon*)                    Avatar_MemberIcon                                           OFFSET(get<T>, {0x1550, 8, 0, 0})
	CMember(UFortPlayerAvatar*)                        PlayerAvatar                                                OFFSET(get<T>, {0x1558, 8, 0, 0})
	CMember(URebootRallyIcon*)                         WBP_RebootRallyIcon                                         OFFSET(get<T>, {0x1560, 8, 0, 0})
	CMember(UFortSocialEventRSVPWidget*)               BuffetInfo                                                  OFFSET(get<T>, {0x1568, 8, 0, 0})
	CMember(UBorder*)                                  Border_OnlineStatusIndicator                                OFFSET(get<T>, {0x1570, 8, 0, 0})
	CMember(UBorder*)                                  Border_Background                                           OFFSET(get<T>, {0x1578, 8, 0, 0})
	CMember(UBorder*)                                  Border_Highlight                                            OFFSET(get<T>, {0x1580, 8, 0, 0})
	CMember(UCommonActivatableWidgetSwitcher*)         Switcher_RichPresence                                       OFFSET(get<T>, {0x1588, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortPresenceUserListEntry.OnNewAvatarsEnabledChanged
	// void OnNewAvatarsEnabledChanged(bool bUsingNewAvatars);                                                                  // [0x1d9241c] Event|Protected|BlueprintEvent 
};

/// Class /Script/FortniteUI.FortPartyMemberListEntry
/// Size: 0x0020 (0x001590 - 0x0015B0)
class UFortPartyMemberListEntry : public UFortPresenceUserListEntry
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 5552;

public:
	CMember(UImage*)                                   Image_Crown                                                 OFFSET(get<T>, {0x1598, 8, 0, 0})
	CMember(UFortVoiceChatStatusIcon*)                 VoiceIcon_Status                                            OFFSET(get<T>, {0x15A0, 8, 0, 0})
};

/// Class /Script/FortniteUI.FortReferFriendActionMenu
/// Size: 0x0008 (0x000440 - 0x000448)
class UFortReferFriendActionMenu : public USocialActionMenu
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1096;

public:
	CMember(UCommonButtonBase*)                        Button_Hide                                                 OFFSET(get<T>, {0x440, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortReferFriendActionMenu.OnRequestOriginChanged
	// void OnRequestOriginChanged(EReferFriendOrigin RequestOrigin);                                                           // [0x1d9241c] Event|Public|BlueprintEvent 
};

/// Class /Script/FortniteUI.FortReferFriendListEntry
/// Size: 0x0000 (0x001510 - 0x001510)
class UFortReferFriendListEntry : public USocialListInteractableEntryBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 5392;

public:
};

/// Class /Script/FortniteUI.FortSocialSidebarButtonBase
/// Size: 0x0050 (0x0014E0 - 0x001530)
class UFortSocialSidebarButtonBase : public UCommonButtonLegacy
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 5424;

public:
	CMember(EFortSidebarButtonType)                    ButtonType                                                  OFFSET(get<T>, {0x14E0, 1, 0, 0})
	SMember(FLinearColor)                              Color_SkewBox_Selected                                      OFFSET(getStruct<T>, {0x14E4, 16, 0, 0})
	SMember(FLinearColor)                              Color_SkewBox_Hover                                         OFFSET(getStruct<T>, {0x14F4, 16, 0, 0})
	CMember(UBorder*)                                  Border_SkewBox                                              OFFSET(get<T>, {0x1508, 8, 0, 0})
	DMember(int32_t)                                   NumberToShow                                                OFFSET(get<int32_t>, {0x1510, 4, 0, 0})
	DMember(bool)                                      bShowBang                                                   OFFSET(get<bool>, {0x1514, 1, 0, 0})
	CMember(UFortBangWrapper_NUI*)                     BangWrapper                                                 OFFSET(get<T>, {0x1518, 8, 0, 0})
};

/// Class /Script/FortniteUI.FortSocialSidebarButton
/// Size: 0x0080 (0x001530 - 0x0015B0)
class UFortSocialSidebarButton : public UFortSocialSidebarButtonBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 5552;

public:
	SMember(FLinearColor)                              Color_ContentSelected                                       OFFSET(getStruct<T>, {0x1528, 16, 0, 0})
	SMember(FLinearColor)                              Color_ContentUnselected                                     OFFSET(getStruct<T>, {0x1538, 16, 0, 0})
	SMember(FLinearColor)                              Color_ContentHovered                                        OFFSET(getStruct<T>, {0x1548, 16, 0, 0})
	CMember(UImage*)                                   Image_TabIcon                                               OFFSET(get<T>, {0x1558, 8, 0, 0})
	CMember(UImage*)                                   Image_TabIcon_Selected                                      OFFSET(get<T>, {0x1560, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_Number                                                 OFFSET(get<T>, {0x1568, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_Number_Selected                                        OFFSET(get<T>, {0x1570, 8, 0, 0})
	CMember(UScaleBox*)                                ScaleBox_Number                                             OFFSET(get<T>, {0x1578, 8, 0, 0})
	CMember(UTexture2D*)                               Icon                                                        OFFSET(get<T>, {0x1580, 8, 0, 0})
	CMember(UTexture2D*)                               Icon_FeatureDisabled                                        OFFSET(get<T>, {0x1588, 8, 0, 0})
	CMember(UMaterialInstance*)                        Material_Icon                                               OFFSET(get<T>, {0x1590, 8, 0, 0})
	CMember(UMaterialInstance*)                        Material_Icon_FeatureDisabled                               OFFSET(get<T>, {0x1598, 8, 0, 0})
};

/// Class /Script/FortniteUI.FortSidebarButtons
/// Size: 0x0120 (0x0002E8 - 0x000408)
class UFortSidebarButtons : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1032;

public:
	CMember(UFortSocialSidebarButton*)                 Button_PartyUp                                              OFFSET(get<T>, {0x2E8, 8, 0, 0})
	CMember(UFortSocialSidebarButton*)                 Button_FindFriends                                          OFFSET(get<T>, {0x2F0, 8, 0, 0})
	CMember(UFortSocialSidebarButton*)                 Button_VoiceChat                                            OFFSET(get<T>, {0x2F8, 8, 0, 0})
	CMember(UFortSocialSidebarButton*)                 Button_UserSettings                                         OFFSET(get<T>, {0x300, 8, 0, 0})
	CMember(UFortSocialSidebarButton*)                 Button_Exit                                                 OFFSET(get<T>, {0x308, 8, 0, 0})
	CMember(UFortSocialSidebarLocalUserButton*)        Button_UserProfile                                          OFFSET(get<T>, {0x310, 8, 0, 0})
	CMember(UFortSocialSidebarButton*)                 Button_Tags                                                 OFFSET(get<T>, {0x318, 8, 0, 0})
	CMember(UCommonButtonGroupLegacy*)                 ButtonGroup_SocialButtons                                   OFFSET(get<T>, {0x320, 8, 0, 0})
	CMember(UCommonButtonLegacy*)                      Button_CurrentlyHovered                                     OFFSET(get<T>, {0x328, 8, 0, 0})
	CMember(UWidget*)                                  Button_CurrentlyFocused                                     OFFSET(get<T>, {0x330, 8, 0, 0})
	SMember(FDataTableRowHandle)                       NextTabInputAction                                          OFFSET(getStruct<T>, {0x380, 16, 0, 0})
	SMember(FDataTableRowHandle)                       PreviousTabInputAction                                      OFFSET(getStruct<T>, {0x398, 16, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortSidebarButtons.HandleSettingsSavedTabChanged
	// void HandleSettingsSavedTabChanged(bool IsTabSaved);                                                                     // [0x9433c4c] Final|Native|Private 
	// Function /Script/FortniteUI.FortSidebarButtons.HandlePrevTabAction_STW
	// void HandlePrevTabAction_STW(bool& bPassThrough);                                                                        // [0x9433bd0] Final|Native|Private|HasOutParms 
	// Function /Script/FortniteUI.FortSidebarButtons.HandleNextTabAction_STW
	// void HandleNextTabAction_STW(bool& bPassThrough);                                                                        // [0x9433964] Final|Native|Private|HasOutParms 
	// Function /Script/FortniteUI.FortSidebarButtons.HandleButtonGroupOnHoveredChanged
	// void HandleButtonGroupOnHoveredChanged(UCommonButtonLegacy* HoveredButton, int32_t ButtonIdx);                           // [0x9433618] Final|Native|Private 
	// Function /Script/FortniteUI.FortSidebarButtons.GetSelectedSidebarButton
	// UWidget* GetSelectedSidebarButton();                                                                                     // [0x9433490] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortSidebarButtons.GetHoveredSidebarButton
	// UWidget* GetHoveredSidebarButton();                                                                                      // [0x853f308] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortSidebarButtons.GetFocusedSidebarButton
	// UWidget* GetFocusedSidebarButton();                                                                                      // [0x32eb224] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/FortniteUI.FortSidebarCheckboxWidget
/// Size: 0x0028 (0x0002E8 - 0x000310)
class UFortSidebarCheckboxWidget : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 784;

public:
	CMember(UButton*)                                  CheckButton                                                 OFFSET(get<T>, {0x2E8, 8, 0, 0})
	CMember(UWidgetSwitcher*)                          Switcher_CheckBox                                           OFFSET(get<T>, {0x2F0, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortSidebarCheckboxWidget.HandleCheckboxClicked
	// void HandleCheckboxClicked();                                                                                            // [0x94336d4] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.FortSidebarCheckboxWidget.BP_ToggleCheckbox
	// void BP_ToggleCheckbox();                                                                                                // [0x1d9241c] Event|Protected|BlueprintEvent 
};

/// Class /Script/FortniteUI.FortSidebarCollectionListEntryEditTags
/// Size: 0x0010 (0x001570 - 0x001580)
class UFortSidebarCollectionListEntryEditTags : public UAthenaCollectionListEntry
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 5504;

public:
	CMember(UImage*)                                   Image_CheckMark                                             OFFSET(get<T>, {0x1570, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortSidebarCollectionListEntryEditTags.GetIsCheckmarkVisible
	// bool GetIsCheckmarkVisible();                                                                                            // [0x9433448] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortSidebarCollectionListEntryEditTags.BP_OnCollectionListItemSet
	// void BP_OnCollectionListItemSet(FText& TagName, ESocialTagCategory& TagCategory);                                        // [0x1d9241c] Event|Protected|HasOutParms|BlueprintEvent 
	// Function /Script/FortniteUI.FortSidebarCollectionListEntryEditTags.BP_OnCollectionListItemCheckmarkChanged
	// void BP_OnCollectionListItemCheckmarkChanged(bool bIsVisible);                                                           // [0x1d9241c] Event|Protected|BlueprintEvent 
};

/// Class /Script/FortniteUI.FortSidebarCollectionListGroupEntry
/// Size: 0x0008 (0x000370 - 0x000378)
class UFortSidebarCollectionListGroupEntry : public UAthenaCollectionListGroupEntry
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 888;

public:
	DMember(int32_t)                                   MaxNumberOfElements                                         OFFSET(get<int32_t>, {0x370, 4, 0, 0})
	DMember(int32_t)                                   MaxNumberOfElements_Mobile                                  OFFSET(get<int32_t>, {0x374, 4, 0, 0})
};

/// Class /Script/FortniteUI.FortSidebarCollectionListView
/// Size: 0x0018 (0x000450 - 0x000468)
class UFortSidebarCollectionListView : public UAthenaCollectionListView
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1128;

public:
};

/// Class /Script/FortniteUI.FortSidebarCollectionScreenContainerEditTags
/// Size: 0x0060 (0x000560 - 0x0005C0)
class UFortSidebarCollectionScreenContainerEditTags : public UAthenaCollectionScreenContainer
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1472;

public:
	CMember(USidebarTagsEditorHeaderWidget*)           HeaderWidget                                                OFFSET(get<T>, {0x560, 8, 0, 0})
	CMember(UCommonActivatableWidget*)                 TagsInfoTooltip                                             OFFSET(get<T>, {0x568, 8, 0, 0})
	CMember(UHorizontalBox*)                           HBox_AddTag                                                 OFFSET(get<T>, {0x570, 8, 0, 0})
	CMember(UHorizontalBox*)                           HBox_ReplaceTag                                             OFFSET(get<T>, {0x578, 8, 0, 0})
	CMember(UHorizontalBox*)                           HBox_RemoveTag                                              OFFSET(get<T>, {0x580, 8, 0, 0})
	CMember(UCommonButtonBase*)                        RemoveTagButton                                             OFFSET(get<T>, {0x588, 8, 0, 0})
	CMember(UCommonButtonBase*)                        Button_Back                                                 OFFSET(get<T>, {0x590, 8, 0, 0})
	CMember(UCommonButtonBase*)                        Button_TouchBack                                            OFFSET(get<T>, {0x598, 8, 0, 0})
	DMember(bool)                                      bPurgeSystemTagsCacheOnCheckForReady                        OFFSET(get<bool>, {0x5A0, 1, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortSidebarCollectionScreenContainerEditTags.UpdateInputActionVisibility
	// void UpdateInputActionVisibility();                                                                                      // [0x94348d0] Final|Native|Private|BlueprintCallable 
	// Function /Script/FortniteUI.FortSidebarCollectionScreenContainerEditTags.ToggleTagsInfoTooltip
	// void ToggleTagsInfoTooltip();                                                                                            // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.FortSidebarCollectionScreenContainerEditTags.BP_OnCollectionTabTitleChange
	// void BP_OnCollectionTabTitleChange(ESocialTagCategory& TagCategory);                                                     // [0x1d9241c] Event|Protected|HasOutParms|BlueprintEvent 
};

/// Class /Script/FortniteUI.FortSidebarCollectionScreenContainerTabButton
/// Size: 0x0010 (0x001540 - 0x001550)
class UFortSidebarCollectionScreenContainerTabButton : public UAthenaCollectionScreenContainerTabButton
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 5456;

public:
	CMember(URichTextBlock*)                           Text_TabTitle                                               OFFSET(get<T>, {0x1540, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortSidebarCollectionScreenContainerTabButton.BP_OnTagCategoryChange
	// void BP_OnTagCategoryChange(ESocialTagCategory InTagCategory);                                                           // [0x1d9241c] Event|Public|BlueprintEvent 
};

/// Class /Script/FortniteUI.FortSidebarCollectionScreenEditTags
/// Size: 0x0070 (0x000660 - 0x0006D0)
class UFortSidebarCollectionScreenEditTags : public UAthenaCollectionScreenBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1744;

public:
	CMember(UFortCollectionDataSocialTag*)             SocialTagCollectionData                                     OFFSET(get<T>, {0x660, 8, 0, 0})
	CMember(ESocialTagCategory)                        SocialTagCategory                                           OFFSET(get<T>, {0x668, 1, 0, 0})
};

/// Class /Script/FortniteUI.FortSidebarExitPopup
/// Size: 0x00E0 (0x000400 - 0x0004E0)
class UFortSidebarExitPopup : public UCommonActivatableWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1248;

public:
	DMember(bool)                                      bIsHidden                                                   OFFSET(get<bool>, {0x410, 1, 0, 0})
	CMember(UPanelWidget*)                             PanelWidget_MainMenuButtons                                 OFFSET(get<T>, {0x418, 8, 0, 0})
	CMember(UPanelWidget*)                             PanelWidget_ExpressYourSupportButtons                       OFFSET(get<T>, {0x420, 8, 0, 0})
	CMember(UFortExpressYourSupportThumbsUpButton*)    Button_SupportCreator                                       OFFSET(get<T>, {0x428, 8, 0, 0})
	CMember(UFortExpressYourSupportFavoriteButton*)    Button_Favorite                                             OFFSET(get<T>, {0x430, 8, 0, 0})
	CMember(UPanelWidget*)                             ConfirmationButtons                                         OFFSET(get<T>, {0x438, 8, 0, 0})
	CMember(UCommonButtonBase*)                        Button_LeaveExperience                                      OFFSET(get<T>, {0x440, 8, 0, 0})
	CMember(UFortMainMenuLeaveButtonWrapper*)          Button_AthenaMainMenuLeave                                  OFFSET(get<T>, {0x448, 8, 0, 0})
	CMember(UCommonButtonBase*)                        Button_Logout                                               OFFSET(get<T>, {0x450, 8, 0, 0})
	CMember(UCommonButtonBase*)                        Button_ExitGame                                             OFFSET(get<T>, {0x458, 8, 0, 0})
	CMember(UCommonButtonBase*)                        Button_Yes                                                  OFFSET(get<T>, {0x460, 8, 0, 0})
	CMember(UCommonButtonBase*)                        Button_No                                                   OFFSET(get<T>, {0x468, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_ActivityName                                           OFFSET(get<T>, {0x470, 8, 0, 0})
	CMember(UCommonRichTextBlock*)                     Text_NoEnabledButtons                                       OFFSET(get<T>, {0x478, 8, 0, 0})
	CMember(UCommonActivatableWidgetSwitcher*)         WidgetSwitcher                                              OFFSET(get<T>, {0x480, 8, 0, 0})
	CMember(UCommonButtonLegacy*)                      Button_BackBoard                                            OFFSET(get<T>, {0x488, 8, 0, 0})
	CMember(UWidgetAnimation*)                         ShowPopupAnim                                               OFFSET(get<T>, {0x490, 8, 0, 0})
	CMember(UWidgetAnimation*)                         HidePopupAnim                                               OFFSET(get<T>, {0x498, 8, 0, 0})
	CMember(ESidebarExitActions)                       SelectedAction                                              OFFSET(get<T>, {0x4A0, 1, 0, 0})
	SMember(FText)                                     AthenaConfirmationMessageText                               OFFSET(getStruct<T>, {0x4A8, 24, 0, 0})
	CMember(ESidebarExitConfirmationNavBehavior)       ConfirmationBtnsSelection                                   OFFSET(get<T>, {0x4D8, 1, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortSidebarExitPopup.UpdateNoEnabledButtonsText
	// void UpdateNoEnabledButtonsText(bool bAllowLogout, bool bAllowQuit);                                                     // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortSidebarExitPopup.ShowConfirmationView
	// void ShowConfirmationView(ESidebarExitActions ActionToConfirm);                                                          // [0x9434680] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortSidebarExitPopup.Show
	// void Show(bool bTakeFocus);                                                                                              // [0x9434578] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortSidebarExitPopup.Hide
	// void Hide(bool bDoImmediately);                                                                                          // [0x9433d60] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortSidebarExitPopup.HandleTransitioningChanged
	// void HandleTransitioningChanged(bool bTransitioning);                                                                    // [0x9433ce0] Final|Native|Protected 
	// Function /Script/FortniteUI.FortSidebarExitPopup.HandleShowPopupAnimFinished
	// void HandleShowPopupAnimFinished();                                                                                      // [0x9433ccc] Final|Native|Protected 
	// Function /Script/FortniteUI.FortSidebarExitPopup.HandleHidePopupAnimFinished
	// void HandleHidePopupAnimFinished();                                                                                      // [0x9433704] Final|Native|Protected 
	// Function /Script/FortniteUI.FortSidebarExitPopup.HandleActiveWidgetIndexChanged
	// void HandleActiveWidgetIndexChanged(UWidget* ActiveWidget, int32_t ActiveWidgetIndex);                                   // [0x9433554] Final|Native|Protected 
	// Function /Script/FortniteUI.FortSidebarExitPopup.ConfirmSelectedAction
	// void ConfirmSelectedAction();                                                                                            // [0x94333f0] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortSidebarExitPopup.CancelConfirmationView
	// void CancelConfirmationView();                                                                                           // [0x94333dc] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/FortniteUI.FortSidebarLfgFilterHeaderEntry
/// Size: 0x0010 (0x001510 - 0x001520)
class UFortSidebarLfgFilterHeaderEntry : public USocialUserListHeaderEntry
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 5408;

public:
	CMember(UCommonActionWidget*)                      FocusedInputActionWidget                                    OFFSET(get<T>, {0x1508, 8, 0, 0})
	CMember(UCommonActionWidget*)                      UnfocusedInputActionWidget                                  OFFSET(get<T>, {0x1510, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortSidebarLfgFilterHeaderEntry.SetFocusedInputDisplay
	// void SetFocusedInputDisplay(bool bIsShown);                                                                              // [0x9433df4] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/FortniteUI.FortSidebarLfgState2ListEntry
/// Size: 0x0000 (0x001510 - 0x001510)
class UFortSidebarLfgState2ListEntry : public USocialListInteractableEntryBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 5392;

public:


	/// Functions
	// Function /Script/FortniteUI.FortSidebarLfgState2ListEntry.OnStateChanged
	// void OnStateChanged(ELfgState NewLfgState, ESlateVisibility BodyVisibility, FText& StateText, FText& StateButton);       // [0x1d9241c] Event|Protected|HasOutParms|BlueprintEvent 
};

/// Class /Script/FortniteUI.FortSidebarLfgState2Widget
/// Size: 0x0028 (0x000400 - 0x000428)
class UFortSidebarLfgState2Widget : public UCommonActivatableWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1064;

public:
	CMember(UCommonButtonBase*)                        Button                                                      OFFSET(get<T>, {0x400, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortSidebarLfgState2Widget.OnStateChanged
	// void OnStateChanged(ELfgState NewLfgState, ESlateVisibility BodyVisibility, FText& StateText, FText& StateButton);       // [0x1d9241c] Event|Protected|HasOutParms|BlueprintEvent 
};

/// Class /Script/FortniteUI.FortSidebarOnboardTooltipWidget
/// Size: 0x0060 (0x000400 - 0x000460)
class UFortSidebarOnboardTooltipWidget : public UCommonActivatableWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1120;

public:
	CMember(UCommonButtonLegacy*)                      Dismiss_Button                                              OFFSET(get<T>, {0x408, 8, 0, 0})
	CMember(UCommonButtonLegacy*)                      OtherAction_Button                                          OFFSET(get<T>, {0x410, 8, 0, 0})
	DMember(int32_t)                                   SecondsBeforeClosing                                        OFFSET(get<int32_t>, {0x418, 4, 0, 0})
	CMember(ESocialTutorialType)                       SocialTutorial                                              OFFSET(get<T>, {0x41C, 1, 0, 0})
	SMember(FGameplayTag)                              OnboardingSeenId                                            OFFSET(getStruct<T>, {0x420, 4, 0, 0})
	SMember(FVector2D)                                 PositionController                                          OFFSET(getStruct<T>, {0x428, 16, 0, 0})
	SMember(FVector2D)                                 PositionKeyboardMouse                                       OFFSET(getStruct<T>, {0x438, 16, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortSidebarOnboardTooltipWidget.OnShowTooltip
	// void OnShowTooltip();                                                                                                    // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortSidebarOnboardTooltipWidget.OnEndTooltip
	// void OnEndTooltip();                                                                                                     // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortSidebarOnboardTooltipWidget.NotifyCloseAnimationFinished
	// void NotifyCloseAnimationFinished();                                                                                     // [0x33b2dec] Final|Native|Protected|BlueprintCallable 
};

/// Class /Script/FortniteUI.FortSidebarPanelEditProfile
/// Size: 0x0000 (0x000400 - 0x000400)
class UFortSidebarPanelEditProfile : public UCommonActivatableWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1024;

public:
};

/// Class /Script/FortniteUI.FortSidebarPanelExit
/// Size: 0x0040 (0x000400 - 0x000440)
class UFortSidebarPanelExit : public UCommonActivatableWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1088;

public:
	CMember(UPanelWidget*)                             PanelWidget_MainMenuButtons                                 OFFSET(get<T>, {0x410, 8, 0, 0})
	CMember(UFortMainMenuButton*)                      Button_LeaveExperience                                      OFFSET(get<T>, {0x418, 8, 0, 0})
	CMember(UFortMainMenuLeaveButtonWrapper*)          Button_AthenaMainMenuLeave                                  OFFSET(get<T>, {0x420, 8, 0, 0})
	CMember(UFortMainMenuButton*)                      Button_Logout                                               OFFSET(get<T>, {0x428, 8, 0, 0})
	CMember(UFortMainMenuButton*)                      Button_ExitGame                                             OFFSET(get<T>, {0x430, 8, 0, 0})
	CMember(UCommonRichTextBlock*)                     Text_NoEnabledButtons                                       OFFSET(get<T>, {0x438, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortSidebarPanelExit.UpdateNoEnabledButtonsText
	// void UpdateNoEnabledButtonsText(bool bAllowLogout, bool bAllowQuit);                                                     // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortSidebarPanelExit.HandleLeaveExperienceClicked
	// void HandleLeaveExperienceClicked();                                                                                     // [0x9433718] Final|Native|Protected 
};

/// Class /Script/FortniteUI.FortSidebarPanelWithTree
/// Size: 0x0030 (0x000400 - 0x000430)
class UFortSidebarPanelWithTree : public UCommonActivatableWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1072;

public:
	CMember(TArray<FFortUserListHeaderInfo>)           ListHeaderInfos                                             OFFSET(get<T>, {0x410, 16, 0, 0})
	CMember(TArray<UFortSocialUserTreeView*>)          OwningTreeViews                                             OFFSET(get<T>, {0x420, 16, 0, 0})
};

/// Class /Script/FortniteUI.FortSidebarPanelFindFriends
/// Size: 0x0070 (0x000430 - 0x0004A0)
class UFortSidebarPanelFindFriends : public UFortSidebarPanelWithTree
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1184;

public:
	CMember(UFortSocialUserTreeView*)                  UserTree_FindFriends                                        OFFSET(get<T>, {0x430, 8, 0, 0})
	CMember(UFortFriendSearchButton*)                  Button_Search_FindFriends                                   OFFSET(get<T>, {0x438, 8, 0, 0})
	CMember(UCommonVisibilitySwitcher*)                Switcher_FindFriends                                        OFFSET(get<T>, {0x440, 8, 0, 0})
	CMember(UFortSocialUserTreeView*)                  UserTree_FindFriends_SearchResults                          OFFSET(get<T>, {0x448, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_SearchingForUsers                                      OFFSET(get<T>, {0x450, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_SearchFailed                                           OFFSET(get<T>, {0x458, 8, 0, 0})
};

/// Class /Script/FortniteUI.FortSidebarPanelPartyUp
/// Size: 0x0020 (0x000430 - 0x000450)
class UFortSidebarPanelPartyUp : public UFortSidebarPanelWithTree
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1104;

public:
	CMember(UFortSidebarSpecialNavWidgetBase*)         SpecialNavWidget                                            OFFSET(get<T>, {0x440, 8, 0, 0})
	CMember(UFortSocialUserTreeView*)                  UserTree_PartyUp                                            OFFSET(get<T>, {0x448, 8, 0, 0})
};

/// Class /Script/FortniteUI.FortSidebarPanelReboot
/// Size: 0x0068 (0x000430 - 0x000498)
class UFortSidebarPanelReboot : public UFortSidebarPanelWithTree
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1176;

public:
	CMember(TWeakObjectPtr<UClass*>)                   SoftMissingFriendsModalClass                                OFFSET(get<T>, {0x430, 32, 0, 0})
	CMember(UCommonButtonBase*)                        SidebarBackButton                                           OFFSET(get<T>, {0x450, 8, 0, 0})
	CMember(UFortSidebarPanelRebootHeader*)            Header                                                      OFFSET(get<T>, {0x458, 8, 0, 0})
	CMember(URebootRallyTimerBase*)                    WBP_RebootRallyTimer                                        OFFSET(get<T>, {0x460, 8, 0, 0})
	CMember(UFortSocialUserTreeView*)                  UserTree_RebootRally                                        OFFSET(get<T>, {0x468, 8, 0, 0})
	CMember(UFortSidebarOnboardTooltipWidget*)         RebootRallyTooltip                                          OFFSET(get<T>, {0x480, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortSidebarPanelReboot.ShowMissingFriendsModal
	// void ShowMissingFriendsModal();                                                                                          // [0x94348a4] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.FortSidebarPanelReboot.OnRebootRallyEligibilityUpdated
	// void OnRebootRallyEligibilityUpdated(bool bEligible);                                                                    // [0x1d9241c] Event|Public|BlueprintEvent 
};

/// Class /Script/FortniteUI.FortSidebarPanelRebootHeader
/// Size: 0x0028 (0x0002C0 - 0x0002E8)
class UFortSidebarPanelRebootHeader : public UUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 744;

public:
	CMember(TWeakObjectPtr<URebootRallyQuestDataAsset*>) RebootRallyQuestDataPtr                                   OFFSET(get<T>, {0x2C0, 32, 0, 0})
	CMember(UCommonButtonBase*)                        RebootButton                                                OFFSET(get<T>, {0x2E0, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortSidebarPanelRebootHeader.OnRebootRallyEligibilityUpdated
	// void OnRebootRallyEligibilityUpdated(bool bEligible);                                                                    // [0x1d9241c] Event|Public|BlueprintEvent 
};

/// Class /Script/FortniteUI.FortSidebarPanelSettings
/// Size: 0x0018 (0x000400 - 0x000418)
class UFortSidebarPanelSettings : public UCommonActivatableWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1048;

public:
	CMember(UFortBladeMenu_MainMenu*)                  BladeMenu_MainMenu                                          OFFSET(get<T>, {0x410, 8, 0, 0})
};

/// Class /Script/FortniteUI.FortSidebarPanelTags
/// Size: 0x00B8 (0x000430 - 0x0004E8)
class UFortSidebarPanelTags : public UFortSidebarPanelWithTree
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1256;

public:
	CMember(UFortSocialUserTreeView*)                  UserTree_Friends                                            OFFSET(get<T>, {0x450, 8, 0, 0})
	CMember(UFortSidebarLfgState2Widget*)              LfgStateWidget                                              OFFSET(get<T>, {0x458, 8, 0, 0})
	DMember(float)                                     QueryLfgTimeSeconds                                         OFFSET(get<float>, {0x460, 4, 0, 0})
	DMember(float)                                     DebounceLfgTimeSeconds                                      OFFSET(get<float>, {0x464, 4, 0, 0})
	DMember(float)                                     RateLimitTickSeconds                                        OFFSET(get<float>, {0x468, 4, 0, 0})
	DMember(bool)                                      bLfgExactMatch                                              OFFSET(get<bool>, {0x46C, 1, 0, 0})
	DMember(int32_t)                                   MaxNumberOfPlayersToShow                                    OFFSET(get<int32_t>, {0x470, 4, 0, 0})
};

/// Class /Script/FortniteUI.FortSidebarPanelVoiceChat
/// Size: 0x0050 (0x000430 - 0x000480)
class UFortSidebarPanelVoiceChat : public UFortSidebarPanelWithTree
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1152;

public:
	CMember(UFortSocialUserTreeView*)                  UserTree_VoiceChat                                          OFFSET(get<T>, {0x430, 8, 0, 0})
	CMember(UCommonVisibilitySwitcher*)                VoiceChannelPanelSwitcher                                   OFFSET(get<T>, {0x438, 8, 0, 0})
	CMember(USocialListEntryEmptyPanelBase*)           VoiceChatDisabledPanel                                      OFFSET(get<T>, {0x440, 8, 0, 0})
	CMember(UWidget*)                                  VoiceChatEnabledPanel                                       OFFSET(get<T>, {0x448, 8, 0, 0})
	CMember(UFortVoiceSettingsDisplay*)                SidebarVoiceChannelSettingsPanel                            OFFSET(get<T>, {0x450, 8, 0, 0})
	CMember(UTexture2D*)                               VoiceChatDisabledIcon                                       OFFSET(get<T>, {0x458, 8, 0, 0})
	CMember(UMaterialInstance*)                        VoiceChatDisabledMaterial                                   OFFSET(get<T>, {0x460, 8, 0, 0})
	CMember(UFortSidebarOnboardTooltipWidget*)         SidebarVoiceChatPanelSupervisedSettingsTooltip              OFFSET(get<T>, {0x468, 8, 0, 0})
	CMember(UNamedSlot*)                               VoiceTooltipSlot                                            OFFSET(get<T>, {0x470, 8, 0, 0})
	CMember(UFortSidebarOnboardTooltipWidget*)         VoiceTooltipWidget                                          OFFSET(get<T>, {0x478, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortSidebarPanelVoiceChat.OpenParentalControls
	// void OpenParentalControls();                                                                                             // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.FortSidebarPanelVoiceChat.HandleNavigateUpFromSettings
	// UWidget* HandleNavigateUpFromSettings(EUINavigation InNavigation);                                                       // [0x94338d4] Final|Native|Private 
	// Function /Script/FortniteUI.FortSidebarPanelVoiceChat.HandleNavigateFromUserTree
	// UWidget* HandleNavigateFromUserTree(EUINavigation InNavigation);                                                         // [0x9433828] Final|Native|Private 
};

/// Class /Script/FortniteUI.FortSocialProfilePanel
/// Size: 0x0090 (0x000440 - 0x0004D0)
class UFortSocialProfilePanel : public USocialActionMenu
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1232;

public:
	CMember(UFortSocialProfileSubPanel*)               SubPanelIdentity                                            OFFSET(get<T>, {0x450, 8, 0, 0})
	CMember(UFortSocialProfileSubPanel*)               SubPanelRegion                                              OFFSET(get<T>, {0x458, 8, 0, 0})
	CMember(UFortSocialProfileSubPanel*)               SubPanelTags                                                OFFSET(get<T>, {0x460, 8, 0, 0})
	CMember(UFortSocialProfileSubPanel*)               SubPanelPresence                                            OFFSET(get<T>, {0x468, 8, 0, 0})
	CMember(UFortSocialProfileSubPanel*)               SubPanelActions                                             OFFSET(get<T>, {0x470, 8, 0, 0})
	CMember(UFortSocialProfileSubPanel*)               SubPanelMutualFriends                                       OFFSET(get<T>, {0x478, 8, 0, 0})
	CMember(UFortSocialProfileSubPanel*)               SubPanelMutualFriendsCount                                  OFFSET(get<T>, {0x480, 8, 0, 0})
	CMember(UFortSocialProfileSubPanel*)               SubPanelRebootRallyText                                     OFFSET(get<T>, {0x488, 8, 0, 0})
	CMember(UCommonButtonBase*)                        SidebarBackButton                                           OFFSET(get<T>, {0x490, 8, 0, 0})
	CMember(UScrollBox*)                               ScrollBox_ScrollablePanels                                  OFFSET(get<T>, {0x498, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortSocialProfilePanel.OnStartProfileLoading
	// void OnStartProfileLoading();                                                                                            // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortSocialProfilePanel.OnFinishedProfileLoading
	// void OnFinishedProfileLoading();                                                                                         // [0x1d9241c] Event|Protected|BlueprintEvent 
};

/// Class /Script/FortniteUI.FortSidebarPanelYourProfile
/// Size: 0x0010 (0x0004D0 - 0x0004E0)
class UFortSidebarPanelYourProfile : public UFortSocialProfilePanel
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1248;

public:
	CMember(UFortSocialProfileSettingRegistry*)        Registry                                                    OFFSET(get<T>, {0x4D0, 8, 0, 0})
	CMember(UFortSettingsListView*)                    ListView_Settings                                           OFFSET(get<T>, {0x4D8, 8, 0, 0})
};

/// Class /Script/FortniteUI.FortSidebarSocialInteractionButton
/// Size: 0x0010 (0x001590 - 0x0015A0)
class UFortSidebarSocialInteractionButton : public USocialInteractionButton
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 5536;

public:
	CMember(EFortSidebarSocialInteractionArrow)        ArrowDirection                                              OFFSET(get<T>, {0x1590, 1, 0, 0})
	CMember(UCommonActionWidget*)                      AlternateInputActionWidget                                  OFFSET(get<T>, {0x1598, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortSidebarSocialInteractionButton.ShowAlternateInputAction
	// void ShowAlternateInputAction(bool bShow);                                                                               // [0x94345f8] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/FortniteUI.FortSocialInteractionMenu
/// Size: 0x0050 (0x0004A8 - 0x0004F8)
class UFortSocialInteractionMenu : public USocialInteractionMenu
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1272;

public:
	CMember(UFortSocialNameTextBlock*)                 Text_SocialName                                             OFFSET(get<T>, {0x4A8, 8, 0, 0})
	CMember(UCommonRichTextBlock*)                     RichText_PlatformNames                                      OFFSET(get<T>, {0x4B0, 8, 0, 0})
	CMember(UCommonRichTextBlock*)                     Text_Presence                                               OFFSET(get<T>, {0x4B8, 8, 0, 0})
	CMember(UFortEditNicknameButton*)                  Button_EditNickname                                         OFFSET(get<T>, {0x4C0, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_ErrorMessage                                           OFFSET(get<T>, {0x4C8, 8, 0, 0})
	CMember(UCommonButtonLegacy*)                      Button_CancelEdit                                           OFFSET(get<T>, {0x4D0, 8, 0, 0})
	CMember(UCommonButtonLegacy*)                      Button_DoneEdit                                             OFFSET(get<T>, {0x4D8, 8, 0, 0})
};

/// Class /Script/FortniteUI.FortSidebarSocialInteractionMenu
/// Size: 0x0050 (0x0004F8 - 0x000548)
class UFortSidebarSocialInteractionMenu : public UFortSocialInteractionMenu
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1352;

public:
	DMember(int32_t)                                   MaxContractedMenuInteractionsToDisplay                      OFFSET(get<int32_t>, {0x4F8, 4, 0, 0})
	CMember(UDynamicEntryBox*)                         EntryBox_ExpandedInteractions                               OFFSET(get<T>, {0x500, 8, 0, 0})
	CMember(USpacer*)                                  Spacer_ExpandedMenuSeparator                                OFFSET(get<T>, {0x508, 8, 0, 0})
};

/// Class /Script/FortniteUI.FortSidebarSpecialNavButtonBase
/// Size: 0x0000 (0x001490 - 0x001490)
class UFortSidebarSpecialNavButtonBase : public UCommonButtonBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 5264;

public:
};

/// Class /Script/FortniteUI.FortSidebarSpecialNavWidgetBase
/// Size: 0x0018 (0x000400 - 0x000418)
class UFortSidebarSpecialNavWidgetBase : public UCommonActivatableWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1048;

public:
	CMember(EFortSidebarSpecialNavType)                NavType                                                     OFFSET(get<T>, {0x400, 1, 0, 0})
	CMember(UFortSidebarSpecialNavButtonBase*)         Button                                                      OFFSET(get<T>, {0x408, 8, 0, 0})
	CMember(UFortSidebarOnboardTooltipWidget*)         AvailableTooltip                                            OFFSET(get<T>, {0x410, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortSidebarSpecialNavWidgetBase.GetNavType
	// EFortSidebarSpecialNavType GetNavType();                                                                                 // [0x943346c] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/FortniteUI.FortSidebarTagsNoFriendsEntry
/// Size: 0x0000 (0x001500 - 0x001500)
class UFortSidebarTagsNoFriendsEntry : public USocialListEntryBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 5376;

public:
};

/// Class /Script/FortniteUI.FortSocialAvatarIcon
/// Size: 0x0020 (0x0003E0 - 0x000400)
class UFortSocialAvatarIcon : public UFortLazyImage
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1024;

public:
	CMember(UMaterialInterface*)                       AvatarMaterial                                              OFFSET(get<T>, {0x3D8, 8, 0, 0})
	CMember(TWeakObjectPtr<UFortSocialUser*>)          SocialUser                                                  OFFSET(get<T>, {0x3E0, 8, 0, 0})
	CMember(UTexture2D*)                               AvatarTexture                                               OFFSET(get<T>, {0x3E8, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortSocialAvatarIcon.RepresentLocalPlayer
	// void RepresentLocalPlayer();                                                                                             // [0x3750408] Final|RequiredAPI|Native|Public|BlueprintCallable 
};

/// Class /Script/FortniteUI.FortSocialDisplayData
/// Size: 0x0268 (0x000030 - 0x000298)
class UFortSocialDisplayData : public UDataAsset
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 664;

public:
	CMember(TWeakObjectPtr<UClass*>)                   LoadingActiveChannelSpeakContainerClass                     OFFSET(get<T>, {0x30, 32, 0, 0})
	CMember(TWeakObjectPtr<UClass*>)                   LoadingOverrideSpeakerClass                                 OFFSET(get<T>, {0x50, 32, 0, 0})
	SMember(FLinearColor)                              OnlineIndicatorOnline                                       OFFSET(getStruct<T>, {0x70, 16, 0, 0})
	SMember(FLinearColor)                              OnlineIndicatorAway                                         OFFSET(getStruct<T>, {0x80, 16, 0, 0})
	SMember(FLinearColor)                              OnlineIndicatorOffline                                      OFFSET(getStruct<T>, {0x90, 16, 0, 0})
	SMember(FLinearColor)                              OnlineIndicatorBlocked                                      OFFSET(getStruct<T>, {0xA0, 16, 0, 0})
	SMember(FLinearColor)                              UserNameOnline                                              OFFSET(getStruct<T>, {0xB0, 16, 0, 0})
	SMember(FLinearColor)                              UserNameOfflineAway                                         OFFSET(getStruct<T>, {0xC0, 16, 0, 0})
	SMember(FLinearColor)                              UserNameBlocked                                             OFFSET(getStruct<T>, {0xD0, 16, 0, 0})
	SMember(FLinearColor)                              RichPresenceOnline                                          OFFSET(getStruct<T>, {0xE0, 16, 0, 0})
	SMember(FLinearColor)                              RichPresenceOfflineAway                                     OFFSET(getStruct<T>, {0xF0, 16, 0, 0})
	SMember(FLinearColor)                              RichPresenceBlocked                                         OFFSET(getStruct<T>, {0x100, 16, 0, 0})
	SMember(FLinearColor)                              FocusHighlightOnline                                        OFFSET(getStruct<T>, {0x110, 16, 0, 0})
	SMember(FLinearColor)                              FocusHighlightOfflineAway                                   OFFSET(getStruct<T>, {0x120, 16, 0, 0})
	SMember(FLinearColor)                              PortraitBackgroundColorNormal                               OFFSET(getStruct<T>, {0x130, 16, 0, 0})
	SMember(FLinearColor)                              PortraitBackgroundColorAttendingEvent                       OFFSET(getStruct<T>, {0x140, 16, 0, 0})
	SMember(FLinearColor)                              PortraitEmptyFillColorNormal                                OFFSET(getStruct<T>, {0x150, 16, 0, 0})
	SMember(FLinearColor)                              PortraitEmptyFillColorAttendingEvent                        OFFSET(getStruct<T>, {0x160, 16, 0, 0})
	SMember(FLinearColor)                              PortraitEmptyHighlightColorNormal                           OFFSET(getStruct<T>, {0x170, 16, 0, 0})
	SMember(FLinearColor)                              PortraitEmptyHighlightColorAttendingEvent                   OFFSET(getStruct<T>, {0x180, 16, 0, 0})
	SMember(FLinearColor)                              StatusIndicatorBackgroundOn                                 OFFSET(getStruct<T>, {0x190, 16, 0, 0})
	SMember(FLinearColor)                              StatusIndicatorBackgroundOff                                OFFSET(getStruct<T>, {0x1A0, 16, 0, 0})
	CMember(UMaterialInstance*)                        BackgroundOnline                                            OFFSET(get<T>, {0x1B0, 8, 0, 0})
	CMember(UMaterialInstance*)                        BackgroundOfflineAway                                       OFFSET(get<T>, {0x1B8, 8, 0, 0})
	CMember(UMaterialInstance*)                        BackgroundSidebarCell                                       OFFSET(get<T>, {0x1C0, 8, 0, 0})
	CMember(TMap<FString, FSoftObjectPath>)            SidekickReactionPathMap                                     OFFSET(get<T>, {0x1C8, 80, 0, 0})
	CMember(TMap<FString, FPlatformPrefixIconList>)    PlatformPrefixIconMap                                       OFFSET(get<T>, {0x218, 80, 0, 0})
	CMember(UTexture2D*)                               GenericPlatformIcon                                         OFFSET(get<T>, {0x268, 8, 0, 0})
	CMember(UClass*)                                   SocialBanModalClass                                         OFFSET(get<T>, {0x270, 8, 0, 0})
};

/// Class /Script/FortniteUI.FortSocialDisplayLibrary
/// Size: 0x0000 (0x000028 - 0x000028)
class UFortSocialDisplayLibrary : public UBlueprintFunctionLibrary
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 40;

public:
};

/// Class /Script/FortniteUI.FortSocialEventRSVPLocalUserEntry
/// Size: 0x0010 (0x001530 - 0x001540)
class UFortSocialEventRSVPLocalUserEntry : public UFortLocalUserEntry
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 5440;

public:
	CMember(UFortSocialEventRSVPWidget*)               BuffetInfo                                                  OFFSET(get<T>, {0x1530, 8, 0, 0})
};

/// Class /Script/FortniteUI.FortSocialEventRSVPWidget
/// Size: 0x0000 (0x0002C0 - 0x0002C0)
class UFortSocialEventRSVPWidget : public UUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 704;

public:
};

/// Class /Script/FortniteUI.FortSocialImportPanel
/// Size: 0x0070 (0x000570 - 0x0005E0)
class UFortSocialImportPanel : public UFortActivatablePanel
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1504;

public:
	SMember(FMulticastInlineDelegate)                  OnSocialImportPanelClosed                                   OFFSET(getStruct<T>, {0x570, 16, 0, 0})
	CMember(UWidgetSwitcher*)                          Switcher_AddFriends                                         OFFSET(get<T>, {0x5A8, 8, 0, 0})
	CMember(UCommonButtonLegacy*)                      Button_Import                                               OFFSET(get<T>, {0x5B0, 8, 0, 0})
	CMember(UCommonButtonLegacy*)                      Button_Cancel                                               OFFSET(get<T>, {0x5B8, 8, 0, 0})
	CMember(UCommonButtonLegacy*)                      Button_Add                                                  OFFSET(get<T>, {0x5C0, 8, 0, 0})
	CMember(UCommonButtonLegacy*)                      Button_NotNow                                               OFFSET(get<T>, {0x5C8, 8, 0, 0})
	CMember(UCommonButtonLegacy*)                      Button_OptOut                                               OFFSET(get<T>, {0x5D0, 8, 0, 0})
	CMember(UBorder*)                                  Border_OuterBorder                                          OFFSET(get<T>, {0x5D8, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortSocialImportPanel.ShowPanel
	// void ShowPanel();                                                                                                        // [0x94348b8] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortSocialImportPanel.OnWaitingViewRequested
	// void OnWaitingViewRequested();                                                                                           // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortSocialImportPanel.OnPanelTypeSet
	// void OnPanelTypeSet(ESocialImportPanelType NewType);                                                                     // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortSocialImportPanel.OnLauncherImportOpened
	// void OnLauncherImportOpened();                                                                                           // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortSocialImportPanel.OnIncentivizedSet
	// void OnIncentivizedSet(bool bIncentivized);                                                                              // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortSocialImportPanel.OnImportViewRequested
	// void OnImportViewRequested();                                                                                            // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortSocialImportPanel.OnClaimViewRequested
	// void OnClaimViewRequested();                                                                                             // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortSocialImportPanel.GetSocialPlatform
	// bool GetSocialPlatform(ESocialImportPanelPlatform& OutPlatform);                                                         // [0x94334bc] Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/FortniteUI.FortEditNicknameButton
/// Size: 0x0040 (0x0014E0 - 0x001520)
class UFortEditNicknameButton : public UCommonButtonLegacy
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 5408;

public:
	SMember(FColor)                                    CharacterLimitWarningColor                                  OFFSET(getStruct<T>, {0x14E0, 4, 0, 0})
	CMember(UEditableText*)                            EditableText_EditNickname                                   OFFSET(get<T>, {0x1508, 8, 0, 0})
	CMember(UCommonRichTextBlock*)                     RichText_CharacterCounter                                   OFFSET(get<T>, {0x1510, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortEditNicknameButton.SetKeyboardFocusOnEditableText
	// void SetKeyboardFocusOnEditableText();                                                                                   // [0x9433e74] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.FortEditNicknameButton.HandleNicknameTextCommited
	// void HandleNicknameTextCommited(FText& Text, TEnumAsByte<ETextCommit> CommitMethod);                                     // [0x9433a7c] Final|Native|Private|HasOutParms 
	// Function /Script/FortniteUI.FortEditNicknameButton.HandleNicknameTextChanged
	// void HandleNicknameTextChanged(FText& Text);                                                                             // [0x94339e0] Final|Native|Private|HasOutParms 
};

/// Class /Script/FortniteUI.FortSocialMenuSlateWrapperWidget
/// Size: 0x0020 (0x000178 - 0x000198)
class UFortSocialMenuSlateWrapperWidget : public UWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 408;

public:
};

/// Class /Script/FortniteUI.FortSocialNameTextBlock
/// Size: 0x0000 (0x000890 - 0x000890)
class UFortSocialNameTextBlock : public USocialNameTextBlock
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 2192;

public:
};

/// Class /Script/FortniteUI.FortSocialPanel
/// Size: 0x0020 (0x000570 - 0x000590)
class UFortSocialPanel : public UFortActivatablePanel
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1424;

public:
	CMember(UFortSocialPanelView_UserLists*)           PanelView_UserLists                                         OFFSET(get<T>, {0x578, 8, 0, 0})
	SMember(FDataTableRowHandle)                       CloseInputAction                                            OFFSET(getStruct<T>, {0x580, 16, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortSocialPanel.OnClosePanelInternal
	// void OnClosePanelInternal(bool& PassThrough);                                                                            // [0x9458e50] Final|Native|Protected|HasOutParms 
	// Function /Script/FortniteUI.FortSocialPanel.IsAnySlideOutMenuOpen
	// bool IsAnySlideOutMenuOpen();                                                                                            // [0x9458dfc] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortSocialPanel.HandleSocialPanelClose
	// void HandleSocialPanelClose();                                                                                           // [0x9458db0] Final|Native|Private|BlueprintCallable 
	// Function /Script/FortniteUI.FortSocialPanel.ClosePanel
	// void ClosePanel();                                                                                                       // [0x1d9241c] Event|Protected|BlueprintEvent 
};

/// Class /Script/FortniteUI.FortSocialPanelView_FriendLinkButton
/// Size: 0x0010 (0x0014E0 - 0x0014F0)
class UFortSocialPanelView_FriendLinkButton : public UCommonButtonLegacy
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 5360;

public:
	CMember(UCommonBorder*)                            Border_ScreenTarget                                         OFFSET(get<T>, {0x14E0, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortSocialPanelView_FriendLinkButton.OnShareButtonTypeSet
	// void OnShareButtonTypeSet(EFriendLinkShareButtonType Type);                                                              // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortSocialPanelView_FriendLinkButton.OnCopiedToClipboard
	// void OnCopiedToClipboard();                                                                                              // [0x1d9241c] Event|Protected|BlueprintEvent 
};

/// Class /Script/FortniteUI.FortSocialPanelView_Groups
/// Size: 0x0008 (0x0002C0 - 0x0002C8)
class UFortSocialPanelView_Groups : public UUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 712;

public:
	CMember(USocialGroupTreeView*)                     TreeView_Groups                                             OFFSET(get<T>, {0x2C0, 8, 0, 0})
};

/// Class /Script/FortniteUI.FortSocialPanelView_Sidebar
/// Size: 0x0298 (0x000400 - 0x000698)
class UFortSocialPanelView_Sidebar : public UCommonActivatableWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1688;

public:
	CMember(UFortSidebarButtons*)                      Panel_SidebarButtons                                        OFFSET(get<T>, {0x540, 8, 0, 0})
	CMember(UCommonVisibilitySwitcher*)                Switcher_UserLists                                          OFFSET(get<T>, {0x548, 8, 0, 0})
	CMember(UCommonActivatableWidget*)                 Panel_PartyUp                                               OFFSET(get<T>, {0x578, 8, 0, 0})
	CMember(UFortSidebarPanelFindFriends*)             Panel_FindFriends                                           OFFSET(get<T>, {0x580, 8, 0, 0})
	CMember(UCommonActivatableWidget*)                 Panel_VoiceChat                                             OFFSET(get<T>, {0x588, 8, 0, 0})
	CMember(UCommonActivatableWidget*)                 Panel_Settings                                              OFFSET(get<T>, {0x590, 8, 0, 0})
	CMember(UCommonActivatableWidget*)                 Panel_YourProfile                                           OFFSET(get<T>, {0x598, 8, 0, 0})
	CMember(UCommonActivatableWidget*)                 Panel_Tags                                                  OFFSET(get<T>, {0x5A0, 8, 0, 0})
	CMember(UCommonActivatableWidget*)                 Panel_RebootRally                                           OFFSET(get<T>, {0x5A8, 8, 0, 0})
	CMember(UCommonActivatableWidget*)                 Panel_Exit                                                  OFFSET(get<T>, {0x5B0, 8, 0, 0})
	CMember(UFortSidebarExitPopup*)                    Popup_Exit                                                  OFFSET(get<T>, {0x5B8, 8, 0, 0})
	CMember(UCommonActivatableWidget*)                 Panel_EditProfile                                           OFFSET(get<T>, {0x5C0, 8, 0, 0})
	CMember(TArray<UCommonActivatableWidget*>)         ExtensionPanels                                             OFFSET(get<T>, {0x5C8, 16, 0, 0})
	CMember(UFortSidebarOnboardTooltipWidget*)         SidebarOnboardingTagsEditTooltip                            OFFSET(get<T>, {0x5D8, 8, 0, 0})
	CMember(UFortSidebarOnboardTooltipWidget*)         SidebarOnboardingLookingForParty                            OFFSET(get<T>, {0x5E0, 8, 0, 0})
	CMember(UFortSidebarOnboardTooltipWidget*)         SidebarOnboardingLikeIsland                                 OFFSET(get<T>, {0x5E8, 8, 0, 0})
	CMember(UFortSidebarOnboardTooltipWidget*)         SiderbarSupervisedSettingsTooltip                           OFFSET(get<T>, {0x5F0, 8, 0, 0})
	CMember(UWidget*)                                  OnboardingTooltip_InputBlocker                              OFFSET(get<T>, {0x5F8, 8, 0, 0})
	CMember(USocialActionMenu*)                        ActiveActionMenu                                            OFFSET(get<T>, {0x608, 8, 0, 0})
	CMember(TMap<UClass*, USocialActionMenu*>)         MapCachedActionMenuPool                                     OFFSET(get<T>, {0x610, 80, 0, 0})
	CMember(UClass*)                                   CollectionScreenEditTagsClass                               OFFSET(get<T>, {0x668, 8, 0, 0})
	CMember(UClass*)                                   RebootRallyQRModalClass                                     OFFSET(get<T>, {0x678, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortSocialPanelView_Sidebar.TryNavigateToNewPanel
	// UWidget* TryNavigateToNewPanel();                                                                                        // [0x9458fb8] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.FortSocialPanelView_Sidebar.HandleSidebarUserListPanelNavigateLeft
	// UWidget* HandleSidebarUserListPanelNavigateLeft(EUINavigation InNavigation);                                             // [0x9458d20] Final|Native|Private 
	// Function /Script/FortniteUI.FortSocialPanelView_Sidebar.HandleSidebarTabButtonNavigateRight
	// UWidget* HandleSidebarTabButtonNavigateRight(EUINavigation InNavigation);                                                // [0x9458c90] Final|Native|Private 
};

/// Class /Script/FortniteUI.FortSocialTab
/// Size: 0x0060 (0x0014E0 - 0x001540)
class UFortSocialTab : public UCommonButtonLegacy
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 5440;

public:
	CMember(UTexture2D*)                               TabIcon                                                     OFFSET(get<T>, {0x14E0, 8, 0, 0})
	SMember(FText)                                     TabName                                                     OFFSET(getStruct<T>, {0x14E8, 24, 0, 0})
	SMember(FSlateColor)                               InviteTintColor                                             OFFSET(getStruct<T>, {0x1500, 20, 0, 0})
	CMember(UImage*)                                   Image_TabIcon                                               OFFSET(get<T>, {0x1518, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_TabName                                                OFFSET(get<T>, {0x1520, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_Number                                                 OFFSET(get<T>, {0x1528, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_Bang                                                   OFFSET(get<T>, {0x1530, 8, 0, 0})
};

/// Class /Script/FortniteUI.FortFriendSearchButton
/// Size: 0x00A0 (0x0014E0 - 0x001580)
class UFortFriendSearchButton : public UCommonButtonLegacy
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 5504;

public:
	CMember(UEditableText*)                            EditableText_AddFriend                                      OFFSET(get<T>, {0x1540, 8, 0, 0})
	CMember(UCommonRichTextBlock*)                     RichText_SocialBanTimerText                                 OFFSET(get<T>, {0x1548, 8, 0, 0})
	CMember(UCommonButtonLegacy*)                      Button_ClearQuery                                           OFFSET(get<T>, {0x1550, 8, 0, 0})
	CMember(UCommonButtonLegacy*)                      Button_SubmitQuery                                          OFFSET(get<T>, {0x1558, 8, 0, 0})
	CMember(UCommonWidgetSwitcherLegacy*)              Switcher_SocialBan                                          OFFSET(get<T>, {0x1560, 8, 0, 0})
	DMember(char)                                      MaxFriendSearchNameLength                                   OFFSET(get<char>, {0x1568, 1, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortFriendSearchButton.SetKeyboardFocusOnAddFriendText
	// void SetKeyboardFocusOnAddFriendText();                                                                                  // [0x9458fa4] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.FortFriendSearchButton.HandleAddFriendTextCommitted
	// void HandleAddFriendTextCommitted(FText& Text, TEnumAsByte<ETextCommit> CommitMethod);                                   // [0x945892c] Final|Native|Private|HasOutParms 
	// Function /Script/FortniteUI.FortFriendSearchButton.HandleAddFriendTextChanged
	// void HandleAddFriendTextChanged(FText& Text);                                                                            // [0x9458890] Final|Native|Private|HasOutParms 
};

/// Class /Script/FortniteUI.FortJoinVoiceChannelButton
/// Size: 0x0000 (0x0014E0 - 0x0014E0)
class UFortJoinVoiceChannelButton : public UCommonButtonLegacy
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 5344;

public:
};

/// Class /Script/FortniteUI.FortVoiceChannelHeaderButton
/// Size: 0x0040 (0x001500 - 0x001540)
class UFortVoiceChannelHeaderButton : public USocialListEntryBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 5440;

public:
	CMember(UCommonRichTextBlock*)                     Text_ChannelTitle                                           OFFSET(get<T>, {0x1518, 8, 0, 0})
	CMember(UCommonRichTextBlock*)                     Text_ChannelTitle_Hover                                     OFFSET(get<T>, {0x1520, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_ChannelInfo                                            OFFSET(get<T>, {0x1528, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_ChannelInfo_Hover                                      OFFSET(get<T>, {0x1530, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortVoiceChannelHeaderButton.SetExpansionState
	// void SetExpansionState(bool bIsExpanded);                                                                                // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortVoiceChannelHeaderButton.OnUpdateVisuals
	// void OnUpdateVisuals(bool bIsActiveAndListening, bool bIsActiveOrAvailable, bool bIsAvailableAndNotActive, bool bIsListening, bool bShowingRestriction); // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortVoiceChannelHeaderButton.OnUpdateOptionsVisuals
	// void OnUpdateOptionsVisuals(bool bCanJoinOrLeave, bool bMightBeAbleToReport);                                            // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortVoiceChannelHeaderButton.IsActiveChannel
	// bool IsActiveChannel();                                                                                                  // [0x9458dc4] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortVoiceChannelHeaderButton.HandleReportButtonClicked
	// void HandleReportButtonClicked();                                                                                        // [0x2cf4738] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.FortVoiceChannelHeaderButton.HandleHeaderClicked
	// void HandleHeaderClicked();                                                                                              // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortVoiceChannelHeaderButton.HandleActionButtonClicked
	// void HandleActionButtonClicked();                                                                                        // [0x945887c] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.FortVoiceChannelHeaderButton.DisplayReportModal
	// void DisplayReportModal(bool bIsRecording);                                                                              // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortVoiceChannelHeaderButton.CanJoinChannel
	// bool CanJoinChannel();                                                                                                   // [0x9458778] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/FortniteUI.FortSocialPanelView_UserLists
/// Size: 0x0208 (0x000400 - 0x000608)
class UFortSocialPanelView_UserLists : public UCommonActivatableWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1544;

public:
	CMember(UCommonButtonGroupLegacy*)                 ButtonGroup_SocialTabs                                      OFFSET(get<T>, {0x400, 8, 0, 0})
	SMember(FText)                                     PartyVoiceMessage_PSN                                       OFFSET(getStruct<T>, {0x408, 24, 0, 0})
	SMember(FText)                                     PlatformPartyChatMessageHeader_PSN                          OFFSET(getStruct<T>, {0x420, 24, 0, 0})
	SMember(FText)                                     LeavePlatformPartyInstructions_PSN                          OFFSET(getStruct<T>, {0x438, 24, 0, 0})
	SMember(FText)                                     PartyVoiceMessage_XBL                                       OFFSET(getStruct<T>, {0x450, 24, 0, 0})
	SMember(FText)                                     PlatformPartyChatMessageHeader_XBL                          OFFSET(getStruct<T>, {0x468, 24, 0, 0})
	SMember(FText)                                     LeavePlatformPartyInstructions_XBL                          OFFSET(getStruct<T>, {0x480, 24, 0, 0})
	CMember(TArray<FFortUserListHeaderInfo>)           ListHeaderInfos                                             OFFSET(get<T>, {0x4E0, 16, 0, 0})
	SMember(FDataTableRowHandle)                       NextTabInputAction                                          OFFSET(getStruct<T>, {0x4F0, 16, 0, 0})
	SMember(FDataTableRowHandle)                       PreviousTabInputAction                                      OFFSET(getStruct<T>, {0x508, 16, 0, 0})
	CMember(UFortLocalUserEntry*)                      UserEntry_LocalPlayer                                       OFFSET(get<T>, {0x538, 8, 0, 0})
	CMember(UFortFriendSearchButton*)                  Button_FriendSearch                                         OFFSET(get<T>, {0x540, 8, 0, 0})
	CMember(UCommonWidgetSwitcherLegacy*)              Switcher_UserLists                                          OFFSET(get<T>, {0x548, 8, 0, 0})
	CMember(UFortSocialTab*)                           SocialTab_AddFriends                                        OFFSET(get<T>, {0x550, 8, 0, 0})
	CMember(UFortSocialTab*)                           SocialTab_Friends                                           OFFSET(get<T>, {0x558, 8, 0, 0})
	CMember(UFortSocialTab*)                           SocialTab_VoiceChat                                         OFFSET(get<T>, {0x560, 8, 0, 0})
	CMember(UFortSocialUserTreeView*)                  UserTree_FriendsLists                                       OFFSET(get<T>, {0x568, 8, 0, 0})
	CMember(UFortSocialUserTreeView*)                  UserTree_VoiceChat                                          OFFSET(get<T>, {0x570, 8, 0, 0})
	CMember(UFortVoiceSettingsDisplay*)                VoiceChannelSettings                                        OFFSET(get<T>, {0x578, 8, 0, 0})
	CMember(UFortSocialUserTreeView*)                  UserTree_AddFriends                                         OFFSET(get<T>, {0x580, 8, 0, 0})
	CMember(UCommonButtonLegacy*)                      Button_AddWeGameFriends                                     OFFSET(get<T>, {0x588, 8, 0, 0})
	CMember(UCommonWidgetSwitcherLegacy*)              Switcher_VoiceChatState                                     OFFSET(get<T>, {0x590, 8, 0, 0})
	CMember(UVerticalBox*)                             VBox_VoicePlatformPartyWithSwitchButton                     OFFSET(get<T>, {0x598, 8, 0, 0})
	CMember(UVerticalBox*)                             VBox_VoicePlatformPartyInstructions                         OFFSET(get<T>, {0x5A0, 8, 0, 0})
	CMember(UFortJoinVoiceChannelButton*)              Button_JoinVoiceChat                                        OFFSET(get<T>, {0x5A8, 8, 0, 0})
	CMember(UCommonButtonLegacy*)                      Button_LeavePlatformVoiceChat                               OFFSET(get<T>, {0x5B0, 8, 0, 0})
	CMember(UCommonButtonLegacy*)                      Button_EnableVoiceChat                                      OFFSET(get<T>, {0x5B8, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_PartyVoiceMessage                                      OFFSET(get<T>, {0x5C0, 8, 0, 0})
	CMember(UCommonRichTextBlock*)                     RichText_SocialBanDescription                               OFFSET(get<T>, {0x5C8, 8, 0, 0})
	CMember(UCommonRichTextBlock*)                     RichText_SocialBanRemainingTime_VoiceTab                    OFFSET(get<T>, {0x5D0, 8, 0, 0})
	CMember(UCommonRichTextBlock*)                     RichText_PlatformPartyChatMessageHeader                     OFFSET(get<T>, {0x5D8, 8, 0, 0})
	CMember(UCommonRichTextBlock*)                     RichText_LeavePlatformPartyInstructions                     OFFSET(get<T>, {0x5E0, 8, 0, 0})
	CMember(UCommonWidgetSwitcherLegacy*)              Switcher_AddFriends                                         OFFSET(get<T>, {0x5E8, 8, 0, 0})
	CMember(UFortSocialUserTreeView*)                  UserTree_SearchResults                                      OFFSET(get<T>, {0x5F0, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_SearchingForUsers                                      OFFSET(get<T>, {0x5F8, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_SearchFailed                                           OFFSET(get<T>, {0x600, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortSocialPanelView_UserLists.OnSetVoiceChannelButtonText
	// void OnSetVoiceChannelButtonText(FText& ButtonText);                                                                     // [0x1d9241c] Event|Protected|HasOutParms|BlueprintEvent 
	// Function /Script/FortniteUI.FortSocialPanelView_UserLists.HandlePrevTabAction_STW
	// void HandlePrevTabAction_STW(bool& bPassThrough);                                                                        // [0x9458bd0] Final|Native|Protected|HasOutParms 
	// Function /Script/FortniteUI.FortSocialPanelView_UserLists.HandleNextTabAction_STW
	// void HandleNextTabAction_STW(bool& bPassThrough);                                                                        // [0x9458a80] Final|Native|Protected|HasOutParms 
	// Function /Script/FortniteUI.FortSocialPanelView_UserLists.FocusSearchResultsAfterQueryEnd
	// void FocusSearchResultsAfterQueryEnd(UWidget* ActiveWidget, int32_t ActiveWidgetIndex);                                  // [0x945879c] Final|Native|Private 
};

/// Class /Script/FortniteUI.FortSocialProfileSubPanel
/// Size: 0x0050 (0x0002E8 - 0x000338)
class UFortSocialProfileSubPanel : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 824;

public:
	CMember(UFortSocialProfileSubPanel_Loading*)       SubPanel_Loading                                            OFFSET(get<T>, {0x300, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortSocialProfileSubPanel.OnStartProfileLoading
	// void OnStartProfileLoading();                                                                                            // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortSocialProfileSubPanel.OnFinishedProfileLoading
	// void OnFinishedProfileLoading();                                                                                         // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortSocialProfileSubPanel.GetDesiredFocusTarget
	// UWidget* GetDesiredFocusTarget();                                                                                        // [0x1d9241c] Event|Protected|BlueprintEvent|Const 
};

/// Class /Script/FortniteUI.FortSocialProfileActions
/// Size: 0x0050 (0x000338 - 0x000388)
class UFortSocialProfileActions : public UFortSocialProfileSubPanel
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 904;

public:
	CMember(UFortSidebarSocialInteractionMenu*)        FortSocialInteractionMenu                                   OFFSET(get<T>, {0x338, 8, 0, 0})
};

/// Class /Script/FortniteUI.FortSocialProfileIdentity
/// Size: 0x0050 (0x000338 - 0x000388)
class UFortSocialProfileIdentity : public UFortSocialProfileSubPanel
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 904;

public:
	CMember(UFortSocialAvatarIcon*)                    Avatar_SocialAvatarIcon                                     OFFSET(get<T>, {0x338, 8, 0, 0})
	CMember(UFortPlayerAvatar*)                        PlayerAvatar                                                OFFSET(get<T>, {0x340, 8, 0, 0})
	CMember(UBorder*)                                  Border_OnlineStatusIndicator                                OFFSET(get<T>, {0x348, 8, 0, 0})
	CMember(UBorder*)                                  Border_OnlineStatusOutline                                  OFFSET(get<T>, {0x350, 8, 0, 0})
	CMember(URebootRallyIcon*)                         WBP_RebootRallyIcon                                         OFFSET(get<T>, {0x358, 8, 0, 0})
	CMember(UOverlay*)                                 Overlay_FortniteCrew                                        OFFSET(get<T>, {0x360, 8, 0, 0})
	CMember(UOverlay*)                                 Overlay_BattlePass                                          OFFSET(get<T>, {0x368, 8, 0, 0})
	CMember(USocialNameTextBlock*)                     Text_SocialName                                             OFFSET(get<T>, {0x370, 8, 0, 0})
	CMember(UCommonRichTextBlock*)                     RichText_PlatformNames                                      OFFSET(get<T>, {0x378, 8, 0, 0})
	CMember(UFortVoiceChatStatusIcon*)                 VoiceIcon_Status                                            OFFSET(get<T>, {0x380, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortSocialProfileIdentity.SetSeasonLevel
	// void SetSeasonLevel(int32_t Level);                                                                                      // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.FortSocialProfileIdentity.SetFortniteCrewVisiblity
	// void SetFortniteCrewVisiblity(bool bIsVisible);                                                                          // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.FortSocialProfileIdentity.SetBattlePassVisiblity
	// void SetBattlePassVisiblity(bool bIsVisible);                                                                            // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.FortSocialProfileIdentity.OnNewAvatarsEnabledChanged
	// void OnNewAvatarsEnabledChanged(bool bUsingNewAvatars);                                                                  // [0x1d9241c] Event|Protected|BlueprintEvent 
};

/// Class /Script/FortniteUI.FortSocialProfileMutualCount
/// Size: 0x0008 (0x000338 - 0x000340)
class UFortSocialProfileMutualCount : public UFortSocialProfileSubPanel
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 832;

public:
	CMember(UCommonTextBlock*)                         Text_MutualCount                                            OFFSET(get<T>, {0x338, 8, 0, 0})
};

/// Class /Script/FortniteUI.FortSocialProfileMutualFriends
/// Size: 0x0038 (0x000338 - 0x000370)
class UFortSocialProfileMutualFriends : public UFortSocialProfileSubPanel
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 880;

public:
	DMember(int32_t)                                   MaxNumberOfDisplayedMutualFriends                           OFFSET(get<int32_t>, {0x338, 4, 0, 0})
	CMember(UDynamicEntryBox*)                         EntryBox_MutualFriends                                      OFFSET(get<T>, {0x340, 8, 0, 0})
	CMember(UWidget*)                                  SizeBox_Root                                                OFFSET(get<T>, {0x348, 8, 0, 0})
	CMember(TArray<USocialUser*>)                      MutualFriendSocialUsers                                     OFFSET(get<T>, {0x350, 16, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortSocialProfileMutualFriends.HandleOnQueryMutualFriendsComplete
	// void HandleOnQueryMutualFriendsComplete(TArray<FUniqueNetIdRepl> MutualFriendIds);                                       // [0x9458b00] Final|Native|Protected 
};

/// Class /Script/FortniteUI.FortSocialProfileSubPanel_Loading
/// Size: 0x0000 (0x0002E8 - 0x0002E8)
class UFortSocialProfileSubPanel_Loading : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 744;

public:
};

/// Class /Script/FortniteUI.FortSocialProfilePresence
/// Size: 0x0008 (0x000338 - 0x000340)
class UFortSocialProfilePresence : public UFortSocialProfileSubPanel
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 832;

public:
	CMember(UCommonTextBlock*)                         Text_RichPresence                                           OFFSET(get<T>, {0x338, 8, 0, 0})
};

/// Class /Script/FortniteUI.FortSocialProfileRebootRallyText
/// Size: 0x0000 (0x000338 - 0x000338)
class UFortSocialProfileRebootRallyText : public UFortSocialProfileSubPanel
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 824;

public:
};

/// Class /Script/FortniteUI.FortSocialProfileRegion
/// Size: 0x0018 (0x000338 - 0x000350)
class UFortSocialProfileRegion : public UFortSocialProfileSubPanel
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 848;

public:
	CMember(UCommonTextBlock*)                         Text_Region                                                 OFFSET(get<T>, {0x338, 8, 0, 0})
	CMember(USizeBox*)                                 SizeBox_Separator                                           OFFSET(get<T>, {0x340, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_Language                                               OFFSET(get<T>, {0x348, 8, 0, 0})
};

/// Class /Script/FortniteUI.FortSocialProfileTags
/// Size: 0x0010 (0x000338 - 0x000348)
class UFortSocialProfileTags : public UFortSocialProfileSubPanel
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 840;

public:
	DMember(bool)                                      bAllowEditing                                               OFFSET(get<bool>, {0x338, 1, 0, 0})
	DMember(bool)                                      bShowAddingWidgetInSocialTagWhenSelected                    OFFSET(get<bool>, {0x339, 1, 0, 0})
	CMember(USidebarSocialTagListEditable*)            SidebarSocialTagList                                        OFFSET(get<T>, {0x340, 8, 0, 0})
};

/// Class /Script/FortniteUI.FortSocialSidebarLocalUserButton
/// Size: 0x0010 (0x001530 - 0x001540)
class UFortSocialSidebarLocalUserButton : public UFortSocialSidebarButtonBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 5440;

public:
	CMember(UFortSocialAvatarIcon*)                    SocialAvatarIcon                                            OFFSET(get<T>, {0x1528, 8, 0, 0})
	CMember(UFortPlayerAvatar*)                        PlayerAvatar                                                OFFSET(get<T>, {0x1530, 8, 0, 0})
	CMember(UImage*)                                   Image_Crown                                                 OFFSET(get<T>, {0x1538, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortSocialSidebarLocalUserButton.OnOnlineStatusChanged
	// void OnOnlineStatusChanged(ELocalUserOnlineStatus OnlineStatus);                                                         // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortSocialSidebarLocalUserButton.OnNewAvatarsEnabledChanged
	// void OnNewAvatarsEnabledChanged(bool bUsingNewAvatars);                                                                  // [0x1d9241c] Event|Protected|BlueprintEvent 
};

/// Class /Script/FortniteUI.FortSocialUserListEntry
/// Size: 0x0010 (0x001590 - 0x0015A0)
class UFortSocialUserListEntry : public UFortPresenceUserListEntry
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 5536;

public:
	CMember(UImage*)                                   Image_Lock                                                  OFFSET(get<T>, {0x1590, 8, 0, 0})
	CMember(USidebarSocialTagListBase*)                SocialTagList                                               OFFSET(get<T>, {0x1598, 8, 0, 0})
};

/// Class /Script/FortniteUI.FortSocialUserTreeView
/// Size: 0x00C8 (0x0004E8 - 0x0005B0)
class UFortSocialUserTreeView : public USocialUserTreeView
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1456;

public:
	CMember(UClass*)                                   PartyMemberEntryWidgetClass                                 OFFSET(get<T>, {0x4E8, 8, 0, 0})
	CMember(UClass*)                                   TeamMemberEntryWidgetClass                                  OFFSET(get<T>, {0x4F0, 8, 0, 0})
	CMember(UClass*)                                   VoiceChatMemberEntryWidgetClass                             OFFSET(get<T>, {0x4F8, 8, 0, 0})
	CMember(UClass*)                                   JoinablePartyEntryWidgetClass                               OFFSET(get<T>, {0x500, 8, 0, 0})
	CMember(UClass*)                                   JoinablePartyEntryWidgetClass1                              OFFSET(get<T>, {0x508, 8, 0, 0})
	CMember(UClass*)                                   MissedInviteEntryWidgetClass                                OFFSET(get<T>, {0x510, 8, 0, 0})
	CMember(UClass*)                                   ReferFriendEntryWidgetClass                                 OFFSET(get<T>, {0x518, 8, 0, 0})
	CMember(UClass*)                                   UserSearchResultEntryWidgetClass                            OFFSET(get<T>, {0x520, 8, 0, 0})
	CMember(UClass*)                                   LeavePartyEntryWidgetClass                                  OFFSET(get<T>, {0x528, 8, 0, 0})
	CMember(UClass*)                                   ShuffleLfgEntryWidgetClass                                  OFFSET(get<T>, {0x530, 8, 0, 0})
	CMember(UClass*)                                   SuggestedFriendEntryWidgetClass                             OFFSET(get<T>, {0x538, 8, 0, 0})
	CMember(UClass*)                                   JoinRequestEntryWidgetClass                                 OFFSET(get<T>, {0x540, 8, 0, 0})
	CMember(UClass*)                                   VoiceChannelHeaderEntryWidgetClass                          OFFSET(get<T>, {0x548, 8, 0, 0})
	CMember(UClass*)                                   RecentPlayerEntryWidgetClass                                OFFSET(get<T>, {0x550, 8, 0, 0})
	CMember(UClass*)                                   TagsNoFriendsEntryWidgetClass                               OFFSET(get<T>, {0x558, 8, 0, 0})
	CMember(UClass*)                                   LfgToggleEntryWidgetClass                                   OFFSET(get<T>, {0x560, 8, 0, 0})
	CMember(UClass*)                                   LfgTagCheckboxEntryWidgetClass                              OFFSET(get<T>, {0x568, 8, 0, 0})
	CMember(UClass*)                                   LfgFilterButtonEntryWidgetClass                             OFFSET(get<T>, {0x570, 8, 0, 0})
	CMember(UClass*)                                   LfgInviteEntryWidgetClass                                   OFFSET(get<T>, {0x578, 8, 0, 0})
	CMember(UClass*)                                   LfgState2EntryWidgetClass                                   OFFSET(get<T>, {0x580, 8, 0, 0})
	CMember(UClass*)                                   MultiFriendActionEntryWidgetClass                           OFFSET(get<T>, {0x588, 8, 0, 0})
	CMember(UClass*)                                   LfgFilterHeaderEntryWidgetClass                             OFFSET(get<T>, {0x590, 8, 0, 0})
	CMember(UClass*)                                   RebootPlayersHeaderEntryWidgetClass                         OFFSET(get<T>, {0x598, 8, 0, 0})
};

/// Class /Script/FortniteUI.FortTeamMemberListEntry
/// Size: 0x0020 (0x001590 - 0x0015B0)
class UFortTeamMemberListEntry : public UFortPresenceUserListEntry
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 5552;

public:
	CMember(UFortVoiceChatStatusIcon*)                 VoiceIcon_Status                                            OFFSET(get<T>, {0x1598, 8, 0, 0})
	CMember(UFortPartyStatusIcon*)                     PartyIcon_Status                                            OFFSET(get<T>, {0x15A0, 8, 0, 0})
};

/// Class /Script/FortniteUI.FortUserSearchResultListEntry
/// Size: 0x0020 (0x001590 - 0x0015B0)
class UFortUserSearchResultListEntry : public UFortPresenceUserListEntry
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 5552;

public:
	CMember(UCommonRichTextBlock*)                     Text_NameMatchesAndMutuals                                  OFFSET(get<T>, {0x1590, 8, 0, 0})
	CMember(UCommonRichTextBlock*)                     Text_MutualFriends                                          OFFSET(get<T>, {0x1598, 8, 0, 0})
	CMember(UCommonRichTextBlock*)                     Text_MutualFriends_Hover                                    OFFSET(get<T>, {0x15A0, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortUserSearchResultListEntry.SetNamePlatformAndMutuals
	// void SetNamePlatformAndMutuals(FText& DisplayName, FText& Platform, int32_t MutualCount);                                // [0x1d9241c] Event|Protected|HasOutParms|BlueprintEvent 
};

/// Class /Script/FortniteUI.FortVoiceChatMemberListEntry
/// Size: 0x0020 (0x001590 - 0x0015B0)
class UFortVoiceChatMemberListEntry : public UFortPresenceUserListEntry
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 5552;

public:
	CMember(UFortVoiceChatStatusIcon*)                 VoiceIcon_Status                                            OFFSET(get<T>, {0x1590, 8, 0, 0})
	CMember(UFortPartyStatusIcon*)                     PartyIcon_Status                                            OFFSET(get<T>, {0x1598, 8, 0, 0})
	CMember(UImage*)                                   Image_Crown                                                 OFFSET(get<T>, {0x15A0, 8, 0, 0})
};

/// Class /Script/FortniteUI.FortVoiceSettingsDisplay
/// Size: 0x00C0 (0x0002E8 - 0x0003A8)
class UFortVoiceSettingsDisplay : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 936;

public:
	CMember(TWeakObjectPtr<UClass*>)                   SettingsClass                                               OFFSET(get<T>, {0x2E8, 32, 0, 0})
	CMember(UFortGameSettingRegistry*)                 Registry                                                    OFFSET(get<T>, {0x340, 8, 0, 0})
	CMember(UCommonRichTextBlock*)                     Text_PTTOnOff                                               OFFSET(get<T>, {0x348, 8, 0, 0})
	CMember(UCommonRichTextBlock*)                     Text_InputDeviceName                                        OFFSET(get<T>, {0x350, 8, 0, 0})
	CMember(UCommonRichTextBlock*)                     Text_OutputDeviceName                                       OFFSET(get<T>, {0x358, 8, 0, 0})
	CMember(UCommonWidgetSwitcherLegacy*)              Switcher_VoiceEnabledView                                   OFFSET(get<T>, {0x360, 8, 0, 0})
	CMember(UWidget*)                                  VoiceEnabledView                                            OFFSET(get<T>, {0x368, 8, 0, 0})
	CMember(UWidget*)                                  VoiceDisabledView                                           OFFSET(get<T>, {0x370, 8, 0, 0})
	CMember(UWidget*)                                  ParentalControlsNotification_VisOff                         OFFSET(get<T>, {0x378, 8, 0, 0})
	CMember(UCommonTextBlock*)                         ParentalText                                                OFFSET(get<T>, {0x380, 8, 0, 0})
	CMember(UHorizontalBox*)                           HBox_PTTKeybind                                             OFFSET(get<T>, {0x388, 8, 0, 0})
	CMember(UCommonButtonLegacy*)                      Button_OpenSettings                                         OFFSET(get<T>, {0x390, 8, 0, 0})
	CMember(UCommonButtonLegacy*)                      Button_EnableVoiceChat                                      OFFSET(get<T>, {0x398, 8, 0, 0})
	CMember(UFortSettingsListView*)                    ListView_VoiceSettings                                      OFFSET(get<T>, {0x3A0, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortVoiceSettingsDisplay.ShowVoiceSettingsButton
	// void ShowVoiceSettingsButton();                                                                                          // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortVoiceSettingsDisplay.HandleSettingsButtonClicked
	// void HandleSettingsButtonClicked();                                                                                      // [0x9458c50] Final|Native|Protected|BlueprintCallable 
};

/// Class /Script/FortniteUI.RebootRallyIcon
/// Size: 0x0008 (0x0002D0 - 0x0002D8)
class URebootRallyIcon : public UFortUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 728;

public:
};

/// Class /Script/FortniteUI.RebootRallyQRModalWidget
/// Size: 0x0018 (0x000400 - 0x000418)
class URebootRallyQRModalWidget : public UCommonActivatableWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1048;

public:
	CMember(UFortPopupModal*)                          WBP_PopupModal                                              OFFSET(get<T>, {0x400, 8, 0, 0})
	CMember(UCommonButtonBase*)                        BackgroundCloseButton                                       OFFSET(get<T>, {0x408, 8, 0, 0})
	CMember(URebootRallyQRCode*)                       WBP_RebootRallyPopupModal_QRCode                            OFFSET(get<T>, {0x410, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.RebootRallyQRModalWidget.OnSetIsInvite
	// void OnSetIsInvite(bool bIsInvited);                                                                                     // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.RebootRallyQRModalWidget.OnRebootRallyEligibilityUpdated
	// void OnRebootRallyEligibilityUpdated(bool bEligible);                                                                    // [0x1d9241c] Event|Public|BlueprintEvent 
};

/// Class /Script/FortniteUI.RebootRallyQuestDataAsset
/// Size: 0x0008 (0x000030 - 0x000038)
class URebootRallyQuestDataAsset : public UDataAsset
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 56;

public:
	SMember(FGameplayTag)                              QuestCategoryTag                                            OFFSET(getStruct<T>, {0x30, 4, 0, 0})
};

/// Class /Script/FortniteUI.RebootRallySelectionHeaderBase
/// Size: 0x0010 (0x001490 - 0x0014A0)
class URebootRallySelectionHeaderBase : public UFortSidebarSpecialNavButtonBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 5280;

public:
	CMember(URebootRallyTimerBase*)                    WBP_RebootRallyTimer                                        OFFSET(get<T>, {0x1490, 8, 0, 0})
};

/// Class /Script/FortniteUI.RebootRallyTimerBase
/// Size: 0x0038 (0x0002C0 - 0x0002F8)
class URebootRallyTimerBase : public UUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 760;

public:
	CMember(TWeakObjectPtr<URebootRallyQuestDataAsset*>) RebootRallyQuestDataPtr                                   OFFSET(get<T>, {0x2C0, 32, 0, 0})
	SMember(FText)                                     RemainingTimeForRebootRallyEnd                              OFFSET(getStruct<T>, {0x2E0, 24, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.RebootRallyTimerBase.UpdateRemainingTime
	// void UpdateRemainingTime();                                                                                              // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.RebootRallyTimerBase.GetRemainingTimeForRebootRallyEnd
	// FText GetRemainingTimeForRebootRallyEnd();                                                                               // [0x9458860] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/FortniteUI.SidebarLFGToggleListEntryWidget
/// Size: 0x0000 (0x001510 - 0x001510)
class USidebarLFGToggleListEntryWidget : public USocialListInteractableEntryBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 5392;

public:
};

/// Class /Script/FortniteUI.SidebarSocialTagListBase
/// Size: 0x00B8 (0x000400 - 0x0004B8)
class USidebarSocialTagListBase : public UCommonActivatableWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1208;

public:
	DMember(bool)                                      bAreTagsSelectable                                          OFFSET(get<bool>, {0x400, 1, 0, 0})
	DMember(bool)                                      bTagsSupportMultiSelection                                  OFFSET(get<bool>, {0x418, 1, 0, 0})
	CMember(USocialTagWidget*)                         SidebarSocialTagWidget                                      OFFSET(get<T>, {0x420, 8, 0, 0})
	CMember(USocialTagWidget*)                         SidebarSocialTagWidget1                                     OFFSET(get<T>, {0x428, 8, 0, 0})
	CMember(USocialTagWidget*)                         SidebarSocialTagWidget2                                     OFFSET(get<T>, {0x430, 8, 0, 0})
	DMember(bool)                                      bShowCategoryCustomization                                  OFFSET(get<bool>, {0x438, 1, 0, 0})
};

/// Class /Script/FortniteUI.SidebarSocialTagListEditable
/// Size: 0x0010 (0x0004B8 - 0x0004C8)
class USidebarSocialTagListEditable : public USidebarSocialTagListBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1224;

public:
	DMember(bool)                                      bShowAddButton                                              OFFSET(get<bool>, {0x4B8, 1, 0, 0})
	DMember(bool)                                      bShowAddingWidgetInSocialTagWhenSelected                    OFFSET(get<bool>, {0x4B9, 1, 0, 0})
	CMember(UCommonButtonBase*)                        AddButton                                                   OFFSET(get<T>, {0x4C0, 8, 0, 0})
};

/// Class /Script/FortniteUI.SidebarTagsEditorHeaderWidget
/// Size: 0x0108 (0x000400 - 0x000508)
class USidebarTagsEditorHeaderWidget : public UCommonActivatableWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1288;

public:
	CMember(UFortSocialAvatarIcon*)                    Avatar_SocialAvatarIcon                                     OFFSET(get<T>, {0x420, 8, 0, 0})
	CMember(USocialNameTextBlock*)                     Text_SocialName                                             OFFSET(get<T>, {0x428, 8, 0, 0})
	CMember(UCommonRichTextBlock*)                     RichText_PlatformNames                                      OFFSET(get<T>, {0x430, 8, 0, 0})
	CMember(USidebarSocialTagListBase*)                SidebarSocialTagList                                        OFFSET(get<T>, {0x438, 8, 0, 0})
	CMember(UCommonButtonBase*)                        AddButton                                                   OFFSET(get<T>, {0x440, 8, 0, 0})
	CMember(UCommonButtonBase*)                        AddButton1                                                  OFFSET(get<T>, {0x448, 8, 0, 0})
	CMember(UCommonButtonBase*)                        AddButton2                                                  OFFSET(get<T>, {0x450, 8, 0, 0})
	CMember(UBorder*)                                  Border_OnlineStatusIndicator                                OFFSET(get<T>, {0x458, 8, 0, 0})
	CMember(UBorder*)                                  Border_OnlineStatusOutline                                  OFFSET(get<T>, {0x460, 8, 0, 0})
	DMember(double)                                    DebounceSetTagsDurationSeconds                              OFFSET(get<double>, {0x500, 8, 0, 0})
};

/// Class /Script/FortniteUI.SocialListEntryEmptyPanelBase
/// Size: 0x0030 (0x001500 - 0x001530)
class USocialListEntryEmptyPanelBase : public USocialListEntryBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 5424;

public:
	CMember(UImage*)                                   EmptyListImage                                              OFFSET(get<T>, {0x14F8, 8, 0, 0})
	CMember(UCommonRichTextBlock*)                     EmptyListDescription                                        OFFSET(get<T>, {0x1500, 8, 0, 0})
	CMember(USidebarListEmptyPanelButton*)             ButtonWidget                                                OFFSET(get<T>, {0x1508, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.SocialListEntryEmptyPanelBase.ButtonClicked
	// void ButtonClicked();                                                                                                    // [0x945875c] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/FortniteUI.SocialTagWidget
/// Size: 0x0060 (0x001490 - 0x0014F0)
class USocialTagWidget : public UCommonButtonBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 5360;

public:
	CMember(UImage*)                                   Image_CheckMark                                             OFFSET(get<T>, {0x1490, 8, 0, 0})
	CMember(ESocialTagCategory)                        TagCategory                                                 OFFSET(get<T>, {0x1498, 1, 0, 0})
	DMember(bool)                                      bIsSystemTag                                                OFFSET(get<bool>, {0x1499, 1, 0, 0})
	DMember(bool)                                      bShowCategoryCustomization                                  OFFSET(get<bool>, {0x149A, 1, 0, 0})
	DMember(bool)                                      bIsSelectable                                               OFFSET(get<bool>, {0x149B, 1, 0, 0})
	DMember(bool)                                      bEnableMultiSelection                                       OFFSET(get<bool>, {0x149C, 1, 0, 0})
	DMember(bool)                                      bShowAddingWhenSelected                                     OFFSET(get<bool>, {0x149D, 1, 0, 0})
	DMember(bool)                                      bIsCheckmarkEnabled                                         OFFSET(get<bool>, {0x14B0, 1, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.SocialTagWidget.SetTag
	// void SetTag(FText& InTagName, ESocialTagCategory InTagCategory, bool bInIsSystemTag);                                    // [0x1d9241c] Event|Protected|HasOutParms|BlueprintEvent 
	// Function /Script/FortniteUI.SocialTagWidget.SetHighlightState
	// void SetHighlightState(bool bHighlighted);                                                                               // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.SocialTagWidget.SetFullColor
	// void SetFullColor();                                                                                                     // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.SocialTagWidget.SetCategoryCustomizationVisibility
	// void SetCategoryCustomizationVisibility(ESlateVisibility CategoryCustomizationVisibility);                               // [0x1d9241c] Event|Protected|BlueprintEvent 
};

/// Class /Script/FortniteUI.EnableMultiFactorModal
/// Size: 0x0070 (0x000570 - 0x0005E0)
class UEnableMultiFactorModal : public UFortActivatablePanel
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1504;

public:
	DMember(bool)                                      bHasEnableMFABeenClicked                                    OFFSET(get<bool>, {0x570, 1, 0, 0})
	DMember(bool)                                      bShouldShowConsoleVersion                                   OFFSET(get<bool>, {0x571, 1, 0, 0})
	CMember(UCommonButtonLegacy*)                      Button_EnableMFA                                            OFFSET(get<T>, {0x5A0, 8, 0, 0})
	CMember(UCommonButtonLegacy*)                      Button_RemindLater                                          OFFSET(get<T>, {0x5A8, 8, 0, 0})
	CMember(UCommonButtonLegacy*)                      Button_OptOut                                               OFFSET(get<T>, {0x5B0, 8, 0, 0})
	CMember(UCommonButtonLegacy*)                      Button_ConsoleMFAEnabled                                    OFFSET(get<T>, {0x5B8, 8, 0, 0})
	CMember(UCommonTextBlock*)                         CT_MFA_Description                                          OFFSET(get<T>, {0x5C0, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.EnableMultiFactorModal.QueueModal
	// bool QueueModal(bool bAllowPermanentOptOut, bool bTournamentQueue);                                                      // [0x9458ecc] Final|RequiredAPI|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.EnableMultiFactorModal.OnSetScreenConfiguration
	// void OnSetScreenConfiguration(bool bIsConsole);                                                                          // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.EnableMultiFactorModal.OnSetExitButtonText
	// void OnSetExitButtonText(FText& NewButtonText);                                                                          // [0x1d9241c] Event|Protected|HasOutParms|BlueprintEvent 
	// Function /Script/FortniteUI.EnableMultiFactorModal.OnConsoleDisplayURLProvided
	// void OnConsoleDisplayURLProvided(FText& UniquePlayerURLText);                                                            // [0x1d9241c] Event|Protected|HasOutParms|BlueprintEvent 
	// Function /Script/FortniteUI.EnableMultiFactorModal.AnimationsComplete
	// void AnimationsComplete();                                                                                               // [0x9458744] Final|Native|Protected|BlueprintCallable 
};

/// Class /Script/FortniteUI.FortAccountNotFound
/// Size: 0x0028 (0x000538 - 0x000560)
class UFortAccountNotFound : public UCommonActivatablePanelLegacy
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1376;

public:
	CMember(URichTextBlock*)                           Text_Desc                                                   OFFSET(get<T>, {0x548, 8, 0, 0})
	CMember(UCommonButtonLegacy*)                      Button_Back                                                 OFFSET(get<T>, {0x550, 8, 0, 0})
	CMember(UCommonButtonLegacy*)                      Button_Web                                                  OFFSET(get<T>, {0x558, 8, 0, 0})
};

/// Class /Script/FortniteUI.FortCorrectiveActionFlow
/// Size: 0x0050 (0x000400 - 0x000450)
class UFortCorrectiveActionFlow : public UCommonActivatableWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1104;

public:
	CMember(UFortRichTextBlockLegacy*)                 LinkText                                                    OFFSET(get<T>, {0x400, 8, 0, 0})
	CMember(UCommonActivatableWidgetSwitcher*)         CorrectiveActionScreenSwitcher                              OFFSET(get<T>, {0x428, 8, 0, 0})
	CMember(UFortCorrectiveActionGuardianEmailScreen*) GuardianEmailScreen                                         OFFSET(get<T>, {0x430, 8, 0, 0})
	CMember(UFortCorrectiveActionDisplayNameScreen*)   DisplayNameScreen                                           OFFSET(get<T>, {0x438, 8, 0, 0})
	CMember(UFortCorrectiveActionDateOfBirthScreen*)   DateOfBirthScreen                                           OFFSET(get<T>, {0x440, 8, 0, 0})
	CMember(UFortCorrectiveActionUnsupportedActionScreen*) UnsupportedActionScreen                                 OFFSET(get<T>, {0x448, 8, 0, 0})
};

/// Class /Script/FortniteUI.FortCorrectiveActionScreen
/// Size: 0x0028 (0x000400 - 0x000428)
class UFortCorrectiveActionScreen : public UCommonActivatableWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1064;

public:
	CMember(UCommonButtonBase*)                        Button_Continue                                             OFFSET(get<T>, {0x410, 8, 0, 0})
	CMember(UCommonButtonBase*)                        Button_PrivacyPolicy                                        OFFSET(get<T>, {0x418, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortCorrectiveActionScreen.OnShowFailureReason
	// void OnShowFailureReason(FText& FailureReason);                                                                          // [0x1d9241c] Event|Protected|HasOutParms|BlueprintEvent 
	// Function /Script/FortniteUI.FortCorrectiveActionScreen.OnShowCorrectiveActionProcessing
	// void OnShowCorrectiveActionProcessing(bool bShowProcessing);                                                             // [0x1d9241c] Event|Protected|BlueprintEvent 
};

/// Class /Script/FortniteUI.FortCorrectiveActionGuardianEmailScreen
/// Size: 0x0008 (0x000428 - 0x000430)
class UFortCorrectiveActionGuardianEmailScreen : public UFortCorrectiveActionScreen
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1072;

public:
	CMember(UFortInputField*)                          InputField_GuardianEmailEntry                               OFFSET(get<T>, {0x428, 8, 0, 0})
};

/// Class /Script/FortniteUI.FortCorrectiveActionDisplayNameScreen
/// Size: 0x0008 (0x000428 - 0x000430)
class UFortCorrectiveActionDisplayNameScreen : public UFortCorrectiveActionScreen
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1072;

public:
	CMember(UCommonTextBlock*)                         Text_DisplayName                                            OFFSET(get<T>, {0x428, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortCorrectiveActionDisplayNameScreen.OnShowDisplayNameDownloading
	// void OnShowDisplayNameDownloading(bool bShowDownloading);                                                                // [0x1d9241c] Event|Protected|BlueprintEvent 
};

/// Class /Script/FortniteUI.FortCorrectiveActionDateOfBirthScreen
/// Size: 0x0028 (0x000428 - 0x000450)
class UFortCorrectiveActionDateOfBirthScreen : public UFortCorrectiveActionScreen
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1104;

public:
	CMember(UFortInputField*)                          InputField_Year                                             OFFSET(get<T>, {0x428, 8, 0, 0})
	CMember(UFortComboBox*)                            ComboBox_Month                                              OFFSET(get<T>, {0x440, 8, 0, 0})
	CMember(UFortComboBox*)                            ComboBox_Day                                                OFFSET(get<T>, {0x448, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortCorrectiveActionDateOfBirthScreen.HandleYearChanged
	// void HandleYearChanged(FText& Text, TEnumAsByte<ETextCommit> CommitMethod);                                              // [0x94866ac] Final|Native|Private|HasOutParms 
	// Function /Script/FortniteUI.FortCorrectiveActionDateOfBirthScreen.HandleMonthChanged
	// void HandleMonthChanged(FString SelectedItem, TEnumAsByte<ESelectInfo> SelectionType);                                   // [0x9485d18] Final|Native|Private 
};

/// Class /Script/FortniteUI.FortCorrectiveActionUnsupportedActionScreen
/// Size: 0x0010 (0x000428 - 0x000438)
class UFortCorrectiveActionUnsupportedActionScreen : public UFortCorrectiveActionScreen
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1080;

public:
	CMember(UFortPinGrantCodeInfoWidget*)              PinGrantCodeInfoWidget                                      OFFSET(get<T>, {0x428, 8, 0, 0})
};

/// Class /Script/FortniteUI.FortDisplayNameWidget
/// Size: 0x0088 (0x000538 - 0x0005C0)
class UFortDisplayNameWidget : public UCommonActivatablePanelLegacy
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1472;

public:
	SMember(FText)                                     ButtonDisableReason                                         OFFSET(getStruct<T>, {0x548, 24, 0, 0})
	SMember(FText)                                     NameTakenText                                               OFFSET(getStruct<T>, {0x560, 24, 0, 0})
	SMember(FText)                                     NameInvalidFormatText                                       OFFSET(getStruct<T>, {0x578, 24, 0, 0})
	SMember(FText)                                     NameTooShortText                                            OFFSET(getStruct<T>, {0x590, 24, 0, 0})
	CMember(UCommonButtonLegacy*)                      Button_Enter                                                OFFSET(get<T>, {0x5A8, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_Error                                                  OFFSET(get<T>, {0x5B0, 8, 0, 0})
	CMember(UEditableText*)                            EditText_DisplayName                                        OFFSET(get<T>, {0x5B8, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortDisplayNameWidget.HandleTextChanged
	// void HandleTextChanged(FText& Text);                                                                                     // [0x94864b4] Final|Native|Protected|HasOutParms 
};

/// Class /Script/FortniteUI.FortEnterCabinModal
/// Size: 0x0030 (0x000400 - 0x000430)
class UFortEnterCabinModal : public UCommonActivatableWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1072;

public:
	CMember(UWidgetSwitcher*)                          WidgetSwitcher_CabinScreens                                 OFFSET(get<T>, {0x408, 8, 0, 0})
	CMember(UWidget*)                                  VerticalBox_CrewCancelled                                   OFFSET(get<T>, {0x410, 8, 0, 0})
	CMember(UWidget*)                                  VerticalBox_EnterCabin                                      OFFSET(get<T>, {0x418, 8, 0, 0})
	CMember(UFortRichTextBlockLegacy*)                 LinkText                                                    OFFSET(get<T>, {0x420, 8, 0, 0})
	CMember(UCommonButtonBase*)                        Button_Continue                                             OFFSET(get<T>, {0x428, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortEnterCabinModal.SwapPanel
	// void SwapPanel(UWidget* PanelToSwapTo);                                                                                  // [0x1d9241c] Event|Protected|BlueprintEvent 
};

/// Class /Script/FortniteUI.FortEulaWidget
/// Size: 0x0060 (0x000538 - 0x000598)
class UFortEulaWidget : public UCommonActivatablePanelLegacy
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1432;

public:
	CMember(UClass*)                                   ConfirmButtonControllerStyle                                OFFSET(get<T>, {0x550, 8, 0, 0})
	CMember(UClass*)                                   ConfirmButtonMouseStyle                                     OFFSET(get<T>, {0x558, 8, 0, 0})
	CMember(UClass*)                                   DeclineButtonControllerStyle                                OFFSET(get<T>, {0x560, 8, 0, 0})
	CMember(UClass*)                                   DeclineButtonMouseStyle                                     OFFSET(get<T>, {0x568, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_Title                                                  OFFSET(get<T>, {0x570, 8, 0, 0})
	CMember(UFortRichTextBlockLegacy*)                 Text_Description                                            OFFSET(get<T>, {0x578, 8, 0, 0})
	CMember(UScrollBox*)                               ScrollBox_License                                           OFFSET(get<T>, {0x580, 8, 0, 0})
	CMember(UCommonButtonLegacy*)                      Button_Confirm                                              OFFSET(get<T>, {0x588, 8, 0, 0})
	CMember(UCommonButtonLegacy*)                      Button_Decline                                              OFFSET(get<T>, {0x590, 8, 0, 0})
};

/// Class /Script/FortniteUI.FortHaveInviteSelect
/// Size: 0x0020 (0x000538 - 0x000558)
class UFortHaveInviteSelect : public UCommonActivatablePanelLegacy
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1368;

public:
	CMember(UCommonButtonLegacy*)                      Button_Yes                                                  OFFSET(get<T>, {0x548, 8, 0, 0})
	CMember(UCommonButtonLegacy*)                      Button_No                                                   OFFSET(get<T>, {0x550, 8, 0, 0})
};

/// Class /Script/FortniteUI.FortLoginCredentialSelect
/// Size: 0x0058 (0x000400 - 0x000458)
class UFortLoginCredentialSelect : public UCommonActivatableWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1112;

public:
	CMember(UCommonButtonLegacy*)                      Button_Epic                                                 OFFSET(get<T>, {0x420, 8, 0, 0})
	CMember(UCommonButtonLegacy*)                      Button_Facebook                                             OFFSET(get<T>, {0x428, 8, 0, 0})
	CMember(UCommonButtonLegacy*)                      Button_Google                                               OFFSET(get<T>, {0x430, 8, 0, 0})
	CMember(UCommonButtonLegacy*)                      Button_PS                                                   OFFSET(get<T>, {0x438, 8, 0, 0})
	CMember(UCommonButtonLegacy*)                      Button_XB                                                   OFFSET(get<T>, {0x440, 8, 0, 0})
	CMember(UCommonButtonLegacy*)                      Button_Erebus                                               OFFSET(get<T>, {0x448, 8, 0, 0})
	CMember(UCommonButtonLegacy*)                      Button_CreateAccount                                        OFFSET(get<T>, {0x450, 8, 0, 0})
};

/// Class /Script/FortniteUI.FortLoginInteractions
/// Size: 0x0150 (0x000400 - 0x000550)
class UFortLoginInteractions : public UCommonActivatableWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1360;

public:
	CMember(UCommonButtonLegacy*)                      Button_Back                                                 OFFSET(get<T>, {0x470, 8, 0, 0})
	CMember(UCommonActivatableWidgetSwitcher*)         Switcher_Input                                              OFFSET(get<T>, {0x478, 8, 0, 0})
	CMember(USpacer*)                                  Spacer_Default                                              OFFSET(get<T>, {0x480, 8, 0, 0})
	CMember(UFortPlayedBeforeSelect*)                  PlayedBefore_Select                                         OFFSET(get<T>, {0x490, 8, 0, 0})
	CMember(UFortLoginCredentialSelect*)               Credential_Select                                           OFFSET(get<T>, {0x4A0, 8, 0, 0})
	CMember(UFortSignInWidget*)                        SignIn_Credentials                                          OFFSET(get<T>, {0x4B0, 8, 0, 0})
	CMember(UFortAccountNotFound*)                     Account_NotFound                                            OFFSET(get<T>, {0x4C0, 8, 0, 0})
	CMember(UFortDisplayNameWidget*)                   DisplayName_Create                                          OFFSET(get<T>, {0x4D0, 8, 0, 0})
	CMember(UFortMultiFactorAuthWidget*)               MFA_Auth                                                    OFFSET(get<T>, {0x4E0, 8, 0, 0})
	CMember(UFortEulaWidget*)                          EULA_Accept                                                 OFFSET(get<T>, {0x4F0, 8, 0, 0})
	CMember(UFortAccountLinkingWindow*)                Account_Link                                                OFFSET(get<T>, {0x500, 8, 0, 0})
	CMember(UFortAccountPinLinkingWindow*)             Account_PinLink                                             OFFSET(get<T>, {0x510, 8, 0, 0})
	CMember(UFortWebLoginWidget*)                      Web_Login                                                   OFFSET(get<T>, {0x520, 8, 0, 0})
	CMember(UFortCorrectiveActionDateOfBirthScreen*)   AgeGateScreen                                               OFFSET(get<T>, {0x530, 8, 0, 0})
	CMember(UFortCorrectiveActionFlow*)                CorrectiveActionFlow                                        OFFSET(get<T>, {0x540, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortLoginInteractions.HandleDisplayWebLogin
	// void HandleDisplayWebLogin(UWidget* WebWidget);                                                                          // [0x9485bfc] Final|Native|Private 
	// Function /Script/FortniteUI.FortLoginInteractions.HandleDisplayWebAccountCreation
	// void HandleDisplayWebAccountCreation(UWidget* WebWidget);                                                                // [0x9485b7c] Final|Native|Private 
	// Function /Script/FortniteUI.FortLoginInteractions.HandleDismissWebLogin
	// void HandleDismissWebLogin();                                                                                            // [0x9485b68] Final|Native|Private 
	// Function /Script/FortniteUI.FortLoginInteractions.HandleDismissWebAccountCreation
	// void HandleDismissWebAccountCreation();                                                                                  // [0x9485b68] Final|Native|Private 
};

/// Class /Script/FortniteUI.FortLoginStatus
/// Size: 0x0068 (0x000570 - 0x0005D8)
class UFortLoginStatus : public UFortActivatablePanel
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1496;

public:
	CMember(UCommonButtonLegacy*)                      Button_Continue                                             OFFSET(get<T>, {0x5B0, 8, 0, 0})
	CMember(UCommonButtonLegacy*)                      Button_Quit                                                 OFFSET(get<T>, {0x5B8, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_Title                                                  OFFSET(get<T>, {0x5C0, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_Status                                                 OFFSET(get<T>, {0x5C8, 8, 0, 0})
	CMember(UCommonButtonLegacy*)                      Button_Status                                               OFFSET(get<T>, {0x5D0, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortLoginStatus.SetQuitButtonText
	// void SetQuitButtonText(FText& QuitText);                                                                                 // [0x1d9241c] Event|Protected|HasOutParms|BlueprintEvent 
	// Function /Script/FortniteUI.FortLoginStatus.SetContinueButtonText
	// void SetContinueButtonText(FText& ContinueText);                                                                         // [0x1d9241c] Event|Protected|HasOutParms|BlueprintEvent 
};

/// Class /Script/FortniteUI.FortMOTDWidget
/// Size: 0x0030 (0x000538 - 0x000568)
class UFortMOTDWidget : public UCommonActivatablePanelLegacy
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1384;

public:
	CMember(UCommonTextBlock*)                         Text_Header                                                 OFFSET(get<T>, {0x548, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_Body                                                   OFFSET(get<T>, {0x550, 8, 0, 0})
	CMember(UCommonButtonLegacy*)                      Button_Close                                                OFFSET(get<T>, {0x558, 8, 0, 0})
	CMember(UScrollBox*)                               ScrollBox                                                   OFFSET(get<T>, {0x560, 8, 0, 0})
};

/// Class /Script/FortniteUI.FortMultiFactorAuthWidget
/// Size: 0x0048 (0x000538 - 0x000580)
class UFortMultiFactorAuthWidget : public UCommonActivatablePanelLegacy
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1408;

public:
	CMember(UCommonButtonLegacy*)                      Button_Continue                                             OFFSET(get<T>, {0x538, 8, 0, 0})
	CMember(UCommonButtonLegacy*)                      Button_Cancel                                               OFFSET(get<T>, {0x540, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_Error                                                  OFFSET(get<T>, {0x548, 8, 0, 0})
	CMember(UEditableText*)                            EditText_MultiFactorCode                                    OFFSET(get<T>, {0x550, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_Prompt                                                 OFFSET(get<T>, {0x558, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortMultiFactorAuthWidget.HandleTextCommitted
	// void HandleTextCommitted(FText& Text, TEnumAsByte<ETextCommit> CommitMethod);                                            // [0x9486550] Final|Native|Protected|HasOutParms 
};

/// Class /Script/FortniteUI.FortNewAccountWarning
/// Size: 0x0030 (0x000538 - 0x000568)
class UFortNewAccountWarning : public UCommonActivatablePanelLegacy
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1384;

public:
	CMember(UCommonButtonLegacy*)                      Button_NewAccount                                           OFFSET(get<T>, {0x558, 8, 0, 0})
	CMember(UCommonButtonLegacy*)                      Button_Back                                                 OFFSET(get<T>, {0x560, 8, 0, 0})
};

/// Class /Script/FortniteUI.FortPlayedBeforeSelect
/// Size: 0x0030 (0x000400 - 0x000430)
class UFortPlayedBeforeSelect : public UCommonActivatableWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1072;

public:
	CMember(UCommonButtonLegacy*)                      Button_Yes                                                  OFFSET(get<T>, {0x418, 8, 0, 0})
	CMember(UCommonButtonLegacy*)                      Button_No                                                   OFFSET(get<T>, {0x420, 8, 0, 0})
	CMember(UBackgroundBlur*)                          BackgroundBlur_PendingSpinner                               OFFSET(get<T>, {0x428, 8, 0, 0})
};

/// Class /Script/FortniteUI.FortQualityLevelSelectScreen
/// Size: 0x00A0 (0x000538 - 0x0005D8)
class UFortQualityLevelSelectScreen : public UCommonActivatablePanelLegacy
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1496;

public:
	CMember(TSet<EFortGameFeature>)                    GameFeaturesToVerify                                        OFFSET(get<T>, {0x558, 80, 0, 0})
	CMember(UFortQualityModeTile*)                     Button_SelectMediumQuality                                  OFFSET(get<T>, {0x5A8, 8, 0, 0})
	CMember(UFortQualityModeTile*)                     Button_SelectHighQuality                                    OFFSET(get<T>, {0x5B0, 8, 0, 0})
	CMember(UCommonButtonLegacy*)                      Button_Confirm                                              OFFSET(get<T>, {0x5B8, 8, 0, 0})
	CMember(UFortHUDQualityLevelSelectTimer*)          QualityLevelSelectTimer                                     OFFSET(get<T>, {0x5C0, 8, 0, 0})
};

/// Class /Script/FortniteUI.FortWebLoginWidget
/// Size: 0x0008 (0x000538 - 0x000540)
class UFortWebLoginWidget : public UCommonActivatablePanelLegacy
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1344;

public:
};

/// Class /Script/FortniteUI.HealthWarningScreen
/// Size: 0x0038 (0x000538 - 0x000570)
class UHealthWarningScreen : public UCommonActivatablePanelLegacy
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1392;

public:
	DMember(float)                                     ShowTimeLength                                              OFFSET(get<float>, {0x540, 4, 0, 0})
	CMember(UCommonTextBlock*)                         Text_HealthWarning                                          OFFSET(get<T>, {0x560, 8, 0, 0})
	CMember(URestrictedCountryRatingIcons*)            RatingIcons_RatingIcons                                     OFFSET(get<T>, {0x568, 8, 0, 0})
};

/// Class /Script/FortniteUI.RestrictedCountryRatingIcons
/// Size: 0x0010 (0x0002E8 - 0x0002F8)
class URestrictedCountryRatingIcons : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 760;

public:
	DMember(float)                                     IconSize                                                    OFFSET(get<float>, {0x2E8, 4, 0, 0})
	CMember(UHorizontalBox*)                           HBox_RatingIcons                                            OFFSET(get<T>, {0x2F0, 8, 0, 0})
};

/// Class /Script/FortniteUI.FortContentControlSettingRegistry
/// Size: 0x0018 (0x0000F8 - 0x000110)
class UFortContentControlSettingRegistry : public UFortSettingRegistry
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 272;

public:
	CMember(UFortSettingCollection*)                   ContentControlSettings                                      OFFSET(get<T>, {0xF8, 8, 0, 0})
};

/// Class /Script/FortniteUI.FortCreativeOptionsDisplay
/// Size: 0x0000 (0x000570 - 0x000570)
class UFortCreativeOptionsDisplay : public UFortActivatablePanel
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1392;

public:
};

/// Class /Script/FortniteUI.FortCreativeSpawnDisplay
/// Size: 0x0020 (0x000570 - 0x000590)
class UFortCreativeSpawnDisplay : public UFortActivatablePanel
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1424;

public:
	CMember(TArray<FRarityArray>)                      ItemArray                                                   OFFSET(get<T>, {0x570, 16, 0, 0})
	CMember(TArray<UFortItemDefinition*>)              AllItems                                                    OFFSET(get<T>, {0x580, 16, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortCreativeSpawnDisplay.OnLoadedItems
	// void OnLoadedItems();                                                                                                    // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.FortCreativeSpawnDisplay.LoadItems
	// void LoadItems();                                                                                                        // [0x9486fe8] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/FortniteUI.FortGamePadCustomActionSelectorPanel
/// Size: 0x0000 (0x000570 - 0x000570)
class UFortGamePadCustomActionSelectorPanel : public UFortActivatablePanel
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1392;

public:
};

/// Class /Script/FortniteUI.FortGamePadInfoSelectorPanel
/// Size: 0x0000 (0x000570 - 0x000570)
class UFortGamePadInfoSelectorPanel : public UFortActivatablePanel
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1392;

public:
};

/// Class /Script/FortniteUI.FortOptionsTab
/// Size: 0x0038 (0x000400 - 0x000438)
class UFortOptionsTab : public UCommonActivatableWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1080;

public:
	SMember(FMulticastInlineDelegate)                  OnTabSettingChanged                                         OFFSET(getStruct<T>, {0x400, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnTabActivated                                              OFFSET(getStruct<T>, {0x410, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnTabDeactivated                                            OFFSET(getStruct<T>, {0x420, 16, 0, 0})
	CMember(ESettingTab)                               TabType                                                     OFFSET(get<T>, {0x430, 1, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortOptionsTab.UpdateOptionsTab
	// void UpdateOptionsTab();                                                                                                 // [0x1d9241c] Event|Protected|BlueprintCallable|BlueprintEvent 
	// Function /Script/FortniteUI.FortOptionsTab.TempNew_UpdateOptionsTab
	// void TempNew_UpdateOptionsTab();                                                                                         // [0x6665e90] Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.FortOptionsTab.ResetOptionsToDefault
	// void ResetOptionsToDefault();                                                                                            // [0x6c64588] Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.FortOptionsTab.IsControllerDefaultInputType
	// bool IsControllerDefaultInputType();                                                                                     // [0x9486900] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortOptionsTab.IsAthena
	// bool IsAthena();                                                                                                         // [0x9486894] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.FortOptionsTab.DeactivateTab
	// void DeactivateTab();                                                                                                    // [0x2ee5548] Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.FortOptionsTab.CenterOnTab
	// void CenterOnTab();                                                                                                      // [0x1d9241c] Event|Protected|BlueprintCallable|BlueprintEvent 
	// Function /Script/FortniteUI.FortOptionsTab.AreParentalControlsEnabled
	// bool AreParentalControlsEnabled();                                                                                       // [0x9484bfc] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.FortOptionsTab.ActivateTab
	// void ActivateTab();                                                                                                      // [0x2ee9a3c] Native|Protected|BlueprintCallable 
};

/// Class /Script/FortniteUI.FortInputOptions
/// Size: 0x0030 (0x000438 - 0x000468)
class UFortInputOptions : public UFortOptionsTab
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1128;

public:
	CMember(TArray<UFortOptionsMenuInputData*>)        InputData                                                   OFFSET(get<T>, {0x438, 16, 0, 0})
	CMember(UCommonListView*)                          InputCommonListView                                         OFFSET(get<T>, {0x448, 8, 0, 0})
	CMember(UCommonTextBlock*)                         TooltipDisplay                                              OFFSET(get<T>, {0x450, 8, 0, 0})
	CMember(UClass*)                                   InputCategoryWidgetClass                                    OFFSET(get<T>, {0x458, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortInputOptions.HandleUsingGamepadChanged
	// void HandleUsingGamepadChanged(ECommonInputType NewInputType);                                                           // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortInputOptions.GetListWidget
	// UWidget* GetListWidget(UObject* Item);                                                                                   // [0x9485600] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.FortInputOptions.GetInputDisplayTextBP
	// FText GetInputDisplayTextBP(int32_t RowIndex);                                                                           // [0x948552c] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortInputOptions.GetInputDataIndexForActionName
	// int32_t GetInputDataIndexForActionName(FName ActionName);                                                                // [0x948546c] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortInputOptions.GetBoundKeyNameBP
	// FText GetBoundKeyNameBP(int32_t RowIndex, bool IsPrimary);                                                               // [0x9485314] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortInputOptions.GetActionItemsInGroup
	// TArray<UFortOptionsMenuInputData*> GetActionItemsInGroup(EFortInputActionGroup InputActionGroup);                        // [0x9485250] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortInputOptions.GetActionBeingUnbound
	// FFortActionBeingUnbound GetActionBeingUnbound(bool bIsPrimarySlot, int32_t Input, FKey NewKey);                          // [0x9484fb8] Native|Protected|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortInputOptions.ConstructKeyBindList
	// void ConstructKeyBindList();                                                                                             // [0x7826848] Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.FortInputOptions.ChangeBinding
	// void ChangeBinding(bool bIsPrimarySlot, int32_t Input, FKey NewKey);                                                     // [0x9484d08] Native|Protected|BlueprintCallable 
};

/// Class /Script/FortniteUI.FortGamepadInputOptions
/// Size: 0x0018 (0x000468 - 0x000480)
class UFortGamepadInputOptions : public UFortInputOptions
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1152;

public:
};

/// Class /Script/FortniteUI.FortGamepadMappingInfo
/// Size: 0x0000 (0x0002E8 - 0x0002E8)
class UFortGamepadMappingInfo : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 744;

public:
};

/// Class /Script/FortniteUI.FortOptionsMenu
/// Size: 0x0B48 (0x000538 - 0x001080)
class UFortOptionsMenu : public UCommonActivatablePanelLegacy
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 4224;

public:
	SMember(FPrimaryContentSetup)                      PrimaryContentSetup                                         OFFSET(getStruct<T>, {0x558, 3, 0, 0})
	SMember(FDataTableRowHandle)                       ApplyInputAction                                            OFFSET(getStruct<T>, {0x560, 16, 0, 0})
	SMember(FDataTableRowHandle)                       ApplyAndTestInputAction                                     OFFSET(getStruct<T>, {0x570, 16, 0, 0})
	SMember(FDataTableRowHandle)                       TestInputAction                                             OFFSET(getStruct<T>, {0x580, 16, 0, 0})
	SMember(FDataTableRowHandle)                       ToggleModeInputAction                                       OFFSET(getStruct<T>, {0x590, 16, 0, 0})
	SMember(FDataTableRowHandle)                       ResetToDefaultInputAction                                   OFFSET(getStruct<T>, {0x5A0, 16, 0, 0})
	SMember(FDataTableRowHandle)                       InputsResetToDefaulInputAction                              OFFSET(getStruct<T>, {0x5B0, 16, 0, 0})
	SMember(FDataTableRowHandle)                       BackAction                                                  OFFSET(getStruct<T>, {0x5C0, 16, 0, 0})
	CMember(UClass*)                                   VideoTabClass                                               OFFSET(get<T>, {0x5D0, 8, 0, 0})
	CMember(TWeakObjectPtr<UClass*>)                   TabVideoOptions                                             OFFSET(get<T>, {0x5D8, 32, 0, 0})
	CMember(UClass*)                                   GameplayTabClass                                            OFFSET(get<T>, {0x5F8, 8, 0, 0})
	CMember(UClass*)                                   HUDTabClass                                                 OFFSET(get<T>, {0x600, 8, 0, 0})
	CMember(UClass*)                                   TouchOptionsClass                                           OFFSET(get<T>, {0x608, 8, 0, 0})
	CMember(UClass*)                                   TouchWeaponOptionsClass                                     OFFSET(get<T>, {0x610, 8, 0, 0})
	CMember(UClass*)                                   KeyboardMouseClass                                          OFFSET(get<T>, {0x618, 8, 0, 0})
	CMember(UClass*)                                   ControllerSensitivityTabClass                               OFFSET(get<T>, {0x620, 8, 0, 0})
	CMember(TWeakObjectPtr<UClass*>)                   ControllerSettingsOptions                                   OFFSET(get<T>, {0x628, 32, 0, 0})
	CMember(UClass*)                                   AudioOptionsClass                                           OFFSET(get<T>, {0x648, 8, 0, 0})
	CMember(UClass*)                                   InputTabClass                                               OFFSET(get<T>, {0x650, 8, 0, 0})
	CMember(TWeakObjectPtr<UClass*>)                   TabInputOptions                                             OFFSET(get<T>, {0x658, 32, 0, 0})
	CMember(UClass*)                                   GamepadTabClass                                             OFFSET(get<T>, {0x678, 8, 0, 0})
	CMember(UClass*)                                   GamepadTabClassV2                                           OFFSET(get<T>, {0x680, 8, 0, 0})
	CMember(TWeakObjectPtr<UClass*>)                   TabGamepadOptions                                           OFFSET(get<T>, {0x688, 32, 0, 0})
	CMember(TWeakObjectPtr<UClass*>)                   TabGamepadOptionsV2                                         OFFSET(get<T>, {0x6A8, 32, 0, 0})
	CMember(UClass*)                                   AccountTabClass                                             OFFSET(get<T>, {0x6C8, 8, 0, 0})
	CMember(TWeakObjectPtr<UClass*>)                   TabAccountOptions                                           OFFSET(get<T>, {0x6D0, 32, 0, 0})
	CMember(UClass*)                                   BorderBackgroundStyle                                       OFFSET(get<T>, {0x6F0, 8, 0, 0})
	CMember(UClass*)                                   ProgressModalClass                                          OFFSET(get<T>, {0x6F8, 8, 0, 0})
	CMember(UClass*)                                   IconTabButtonClass                                          OFFSET(get<T>, {0x700, 8, 0, 0})
	CMember(UFortProgressModal*)                       SavingModalInstance                                         OFFSET(get<T>, {0x708, 8, 0, 0})
	CMember(TArray<FName>)                             TabIds                                                      OFFSET(get<T>, {0x710, 16, 0, 0})
	CMember(TArray<FFortTabButtonLabelInfo>)           TabLabels                                                   OFFSET(get<T>, {0x720, 16, 0, 0})
	CMember(TArray<UFortOptionsTab*>)                  TabWidgets                                                  OFFSET(get<T>, {0x730, 16, 0, 0})
	SMember(FTimerHandle)                              ResetVideoOptionsTimer                                      OFFSET(getStruct<T>, {0x740, 8, 0, 0})
	SMember(FSlateBrush)                               VideoBrush                                                  OFFSET(getStruct<T>, {0x750, 192, 0, 0})
	SMember(FSlateBrush)                               GameplayBrush                                               OFFSET(getStruct<T>, {0x810, 192, 0, 0})
	SMember(FSlateBrush)                               GameUIBrush                                                 OFFSET(getStruct<T>, {0x8D0, 192, 0, 0})
	SMember(FSlateBrush)                               TouchOptionsBrush                                           OFFSET(getStruct<T>, {0x990, 192, 0, 0})
	SMember(FSlateBrush)                               TouchWeaponOptionsBrush                                     OFFSET(getStruct<T>, {0xA50, 192, 0, 0})
	SMember(FSlateBrush)                               KeyboardMouseBrush                                          OFFSET(getStruct<T>, {0xB10, 192, 0, 0})
	SMember(FSlateBrush)                               ControllerSensitivityBrush                                  OFFSET(getStruct<T>, {0xBD0, 192, 0, 0})
	SMember(FSlateBrush)                               AudioBrush                                                  OFFSET(getStruct<T>, {0xC90, 192, 0, 0})
	SMember(FSlateBrush)                               InputBrush                                                  OFFSET(getStruct<T>, {0xD50, 192, 0, 0})
	SMember(FSlateBrush)                               GamepadOptionsBrush                                         OFFSET(getStruct<T>, {0xE10, 192, 0, 0})
	SMember(FSlateBrush)                               AccountPrivacyBrush                                         OFFSET(getStruct<T>, {0xED0, 192, 0, 0})
	SMember(FGameplayTagContainer)                     HUDHideOnMenuTags                                           OFFSET(getStruct<T>, {0xF90, 32, 0, 0})
	DMember(bool)                                      bVideoTabSelected                                           OFFSET(get<bool>, {0xFB0, 1, 0, 0})
	DMember(bool)                                      bApplyVisible                                               OFFSET(get<bool>, {0xFB1, 1, 0, 0})
	DMember(bool)                                      bIsLanguageConfirmationVisible                              OFFSET(get<bool>, {0xFB2, 1, 0, 0})
	DMember(bool)                                      bIsLeavingOptionsMenu                                       OFFSET(get<bool>, {0xFB3, 1, 0, 0})
	CMember(UFortTabListWidgetBase_Legacy*)            TabList_Categories                                          OFFSET(get<T>, {0xFB8, 8, 0, 0})
	CMember(UCommonWidgetSwitcherLegacy*)              SettingTabSwitcher                                          OFFSET(get<T>, {0xFC0, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_Title                                                  OFFSET(get<T>, {0xFC8, 8, 0, 0})
	CMember(UNamedSlot*)                               SavingLayer                                                 OFFSET(get<T>, {0xFD0, 8, 0, 0})
	CMember(UCommonBorder*)                            Message                                                     OFFSET(get<T>, {0xFD8, 8, 0, 0})
	CMember(UCommonButtonBase*)                        Button_CloseTouch                                           OFFSET(get<T>, {0xFE0, 8, 0, 0})
	CMember(UCommonButtonBase*)                        VideoSettingsAccept                                         OFFSET(get<T>, {0xFE8, 8, 0, 0})
	CMember(UCommonButtonBase*)                        VideoSettingsCancel                                         OFFSET(get<T>, {0xFF0, 8, 0, 0})
	CMember(UCommonBorder*)                            Border_Background                                           OFFSET(get<T>, {0xFF8, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortOptionsMenu.UpdateHeaderTextByTabId
	// void UpdateHeaderTextByTabId(FName TabID);                                                                               // [0x9486434] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.FortOptionsMenu.UpdateBasedOnActiveWidget
	// void UpdateBasedOnActiveWidget(UWidget* ActiveWidget, bool bShouldCenterOnTab);                                          // [0x94888ac] Final|Native|Private|BlueprintCallable 
	// Function /Script/FortniteUI.FortOptionsMenu.UpdateAllOptionTabs
	// void UpdateAllOptionTabs();                                                                                              // [0x9488898] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.FortOptionsMenu.ShowVideoOptions
	// bool ShowVideoOptions();                                                                                                 // [0x94887f4] Final|Native|Private|BlueprintCallable 
	// Function /Script/FortniteUI.FortOptionsMenu.ShowUnsavedConfirmation
	// void ShowUnsavedConfirmation();                                                                                          // [0x94887e0] Final|Native|Private|BlueprintCallable 
	// Function /Script/FortniteUI.FortOptionsMenu.ShowTouchWeaponOptions
	// bool ShowTouchWeaponOptions();                                                                                           // [0x350d358] Final|Native|Private|BlueprintCallable 
	// Function /Script/FortniteUI.FortOptionsMenu.ShowTouchAndMotionOptions
	// bool ShowTouchAndMotionOptions();                                                                                        // [0x94887bc] Final|Native|Private|BlueprintCallable 
	// Function /Script/FortniteUI.FortOptionsMenu.ShowNewControllerSenseOptions
	// bool ShowNewControllerSenseOptions();                                                                                    // [0x9488798] Final|Native|Private|BlueprintCallable 
	// Function /Script/FortniteUI.FortOptionsMenu.ShowInputOptions
	// bool ShowInputOptions();                                                                                                 // [0x9488774] Final|Native|Private|BlueprintCallable 
	// Function /Script/FortniteUI.FortOptionsMenu.ShowControllerOptions
	// bool ShowControllerOptions();                                                                                            // [0x9488750] Final|Native|Private|BlueprintCallable 
	// Function /Script/FortniteUI.FortOptionsMenu.ShowAccountOptions
	// bool ShowAccountOptions();                                                                                               // [0x948872c] Final|Native|Private|BlueprintCallable 
	// Function /Script/FortniteUI.FortOptionsMenu.ShouldUseNewControllerSettings
	// bool ShouldUseNewControllerSettings();                                                                                   // [0x948870c] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortOptionsMenu.SetOverrideResetToDefaultModal
	// void SetOverrideResetToDefaultModal(bool bOverride);                                                                     // [0x948868c] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.FortOptionsMenu.SetBackground
	// void SetBackground();                                                                                                    // [0x9487eb8] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.FortOptionsMenu.SetApplyOrTest
	// void SetApplyOrTest(bool bShowApply);                                                                                    // [0x9487e38] Final|Native|Private|BlueprintCallable 
	// Function /Script/FortniteUI.FortOptionsMenu.ResetGameOptionsToDefault
	// void ResetGameOptionsToDefault(UFortOptionsTab* OptionsTab);                                                             // [0x9487da4] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.FortOptionsMenu.ResetClientHUDSettings
	// void ResetClientHUDSettings();                                                                                           // [0x9487d10] Final|Native|Private|BlueprintCallable 
	// Function /Script/FortniteUI.FortOptionsMenu.ResetActionHandlerStates
	// void ResetActionHandlerStates(bool bIsBackButtonDisabled);                                                               // [0x9487c90] Final|Native|Private|BlueprintCallable 
	// Function /Script/FortniteUI.FortOptionsMenu.RequestTab
	// bool RequestTab(FName TabID, FString SettingDevName);                                                                    // [0x94875bc] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortOptionsMenu.OnVideoCancel
	// void OnVideoCancel();                                                                                                    // [0x94875a8] Final|Native|Private|BlueprintCallable 
	// Function /Script/FortniteUI.FortOptionsMenu.OnVideoAccept
	// void OnVideoAccept();                                                                                                    // [0x9487594] Final|Native|Private|BlueprintCallable 
	// Function /Script/FortniteUI.FortOptionsMenu.OnToggleModeInternal
	// void OnToggleModeInternal(bool& PassThrough);                                                                            // [0x9487508] Final|Native|Private|HasOutParms 
	// Function /Script/FortniteUI.FortOptionsMenu.OnTest
	// void OnTest(bool& PassThrough);                                                                                          // [0x948747c] Final|Native|Private|HasOutParms 
	// Function /Script/FortniteUI.FortOptionsMenu.OnTabSettingChanged
	// void OnTabSettingChanged();                                                                                              // [0x9487468] Final|Native|Private|BlueprintCallable 
	// Function /Script/FortniteUI.FortOptionsMenu.OnSplitscreenUpdateSizing
	// void OnSplitscreenUpdateSizing();                                                                                        // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortOptionsMenu.OnShowResetToDefaultModal
	// void OnShowResetToDefaultModal();                                                                                        // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortOptionsMenu.OnSettingsTabListPopulated
	// void OnSettingsTabListPopulated();                                                                                       // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortOptionsMenu.OnRestoreToInitial
	// void OnRestoreToInitial();                                                                                               // [0x948744c] Final|Native|Private|BlueprintCallable 
	// Function /Script/FortniteUI.FortOptionsMenu.OnResetToDefaults
	// void OnResetToDefaults(int32_t PresetToSet);                                                                             // [0x9487378] Final|Native|Private|BlueprintCallable 
	// Function /Script/FortniteUI.FortOptionsMenu.OnResetToDefaultInternal
	// void OnResetToDefaultInternal(bool& PassThrough);                                                                        // [0x94872fc] Final|Native|Private|HasOutParms 
	// Function /Script/FortniteUI.FortOptionsMenu.OnReset
	// void OnReset();                                                                                                          // [0x94872e8] Final|Native|Private|BlueprintCallable 
	// Function /Script/FortniteUI.FortOptionsMenu.OnInputsResetToDefault
	// void OnInputsResetToDefault();                                                                                           // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortOptionsMenu.OnInputResetToDefaultInternal
	// void OnInputResetToDefaultInternal(bool& PassThrough);                                                                   // [0x948725c] Final|Native|Private|HasOutParms 
	// Function /Script/FortniteUI.FortOptionsMenu.OnBackInternal
	// void OnBackInternal(bool& PassThrough);                                                                                  // [0x94871e0] Final|Native|Private|HasOutParms 
	// Function /Script/FortniteUI.FortOptionsMenu.OnBack
	// void OnBack();                                                                                                           // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortOptionsMenu.OnApplySettingsInternal
	// void OnApplySettingsInternal(bool& PassThrough);                                                                         // [0x9487164] Final|Native|Private|HasOutParms 
	// Function /Script/FortniteUI.FortOptionsMenu.OnApplyAndTest
	// void OnApplyAndTest(bool& PassThrough);                                                                                  // [0x94870d8] Final|Native|Private|HasOutParms 
	// Function /Script/FortniteUI.FortOptionsMenu.NotifyTabsOfActivationState
	// void NotifyTabsOfActivationState(UFortOptionsTab* ActivatedTab);                                                         // [0x9487058] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.FortOptionsMenu.NeedsVideoChangeConfirmation
	// bool NeedsVideoChangeConfirmation();                                                                                     // [0x9487034] Final|Native|Private|BlueprintCallable 
	// Function /Script/FortniteUI.FortOptionsMenu.NeedsLanguageChangeConfirmation
	// bool NeedsLanguageChangeConfirmation();                                                                                  // [0x9487010] Final|Native|Private|BlueprintCallable 
	// Function /Script/FortniteUI.FortOptionsMenu.MenuInitialize
	// void MenuInitialize();                                                                                                   // [0x9486ffc] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.FortOptionsMenu.HandleTabSelected
	// void HandleTabSelected(FName TabID);                                                                                     // [0x9486434] Final|Native|Protected 
	// Function /Script/FortniteUI.FortOptionsMenu.HandleTabGamepadConfigActionHandlerStates
	// void HandleTabGamepadConfigActionHandlerStates();                                                                        // [0x1d9241c] Event|Protected|BlueprintCallable|BlueprintEvent 
	// Function /Script/FortniteUI.FortOptionsMenu.HandleResetAvailableActionHandlerStates
	// void HandleResetAvailableActionHandlerStates();                                                                          // [0x9486420] Final|Native|Private|BlueprintCallable 
	// Function /Script/FortniteUI.FortOptionsMenu.HandleReset
	// void HandleReset();                                                                                                      // [0x948640c] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.FortOptionsMenu.HandleApply
	// void HandleApply();                                                                                                      // [0x9485b40] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.FortOptionsMenu.HandleActiveWidgetChanged
	// void HandleActiveWidgetChanged(UWidget* ActiveWidget, int32_t ActiveWidgetIndex);                                        // [0x9485a00] Final|Native|Protected 
	// Function /Script/FortniteUI.FortOptionsMenu.ExitIfTabSaved
	// void ExitIfTabSaved();                                                                                                   // [0x9484fa4] Final|Native|Private|BlueprintCallable 
	// Function /Script/FortniteUI.FortOptionsMenu.ClearCachedEula
	// void ClearCachedEula();                                                                                                  // [0x9484f90] Final|Native|Private|BlueprintCallable 
	// Function /Script/FortniteUI.FortOptionsMenu.CenterOnActiveTab
	// void CenterOnActiveTab();                                                                                                // [0x9484c8c] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.FortOptionsMenu.ApplySettingss
	// void ApplySettingss();                                                                                                   // [0x9484a2c] Final|Native|Private|BlueprintCallable 
	// Function /Script/FortniteUI.FortOptionsMenu.AddTabs
	// void AddTabs(UClass* WidgetClass, FText& DisplayName, FName NameId, FSlateBrush& Icon, ESettingTab TabType);             // [0x9484784] Final|Native|Protected|HasOutParms|BlueprintCallable 
};

/// Class /Script/FortniteUI.FortOptionsMenuSetting
/// Size: 0x0080 (0x0002E8 - 0x000368)
class UFortOptionsMenuSetting : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 872;

public:
	SMember(FMulticastInlineDelegate)                  SettingValueChanged                                         OFFSET(getStruct<T>, {0x2E8, 16, 0, 0})
	CMember(ESettingType)                              SettingType                                                 OFFSET(get<T>, {0x2F8, 1, 0, 0})
	SMember(FText)                                     NameText                                                    OFFSET(getStruct<T>, {0x300, 24, 0, 0})
	CMember(UCommonTextBlock*)                         TabTooltipText                                              OFFSET(get<T>, {0x318, 8, 0, 0})
	SMember(FText)                                     HoverText                                                   OFFSET(getStruct<T>, {0x320, 24, 0, 0})
	SMember(FTimerHandle)                              TooltipTimer                                                OFFSET(getStruct<T>, {0x338, 8, 0, 0})
	DMember(int32_t)                                   MinIntegralDigits                                           OFFSET(get<int32_t>, {0x340, 4, 0, 0})
	DMember(int32_t)                                   MaxIntegralDigits                                           OFFSET(get<int32_t>, {0x344, 4, 0, 0})
	DMember(int32_t)                                   MinFractionalDigits                                         OFFSET(get<int32_t>, {0x348, 4, 0, 0})
	DMember(int32_t)                                   MaxFractionalDigits                                         OFFSET(get<int32_t>, {0x34C, 4, 0, 0})
	DMember(float)                                     MinSensitivityValue                                         OFFSET(get<float>, {0x350, 4, 0, 0})
	DMember(float)                                     MaxSensitivityValue                                         OFFSET(get<float>, {0x354, 4, 0, 0})
	DMember(float)                                     PreviousSettingValue                                        OFFSET(get<float>, {0x358, 4, 0, 0})
	DMember(bool)                                      bDisplayRenderScale                                         OFFSET(get<bool>, {0x35C, 1, 0, 0})
	DMember(bool)                                      HideLabelText                                               OFFSET(get<bool>, {0x35D, 1, 0, 0})
	DMember(bool)                                      HideSpaceRight                                              OFFSET(get<bool>, {0x35E, 1, 0, 0})
	CMember(UAnalogSlider*)                            Slider_Menu                                                 OFFSET(get<T>, {0x360, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortOptionsMenuSetting.UpdateVisuals
	// void UpdateVisuals();                                                                                                    // [0x1d9241c] Event|Protected|BlueprintCallable|BlueprintEvent 
	// Function /Script/FortniteUI.FortOptionsMenuSetting.UpdateSetting
	// void UpdateSetting(UCommonTextBlock* TooltipTextBlock);                                                                  // [0x9488a30] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.FortOptionsMenuSetting.HandleCaptureEnd
	// void HandleCaptureEnd();                                                                                                 // [0x9485b54] Final|Native|Protected 
	// Function /Script/FortniteUI.FortOptionsMenuSetting.HandleAnalogCaptureEnd
	// void HandleAnalogCaptureEnd(float Value);                                                                                // [0x9485ac4] Final|Native|Protected 
	// Function /Script/FortniteUI.FortOptionsMenuSetting.CenterOnWidget
	// void CenterOnWidget();                                                                                                   // [0x9484cd0] Final|Native|Protected|BlueprintCallable 
};

/// Class /Script/FortniteUI.FortSettingInfo
/// Size: 0x0060 (0x000028 - 0x000088)
class UFortSettingInfo : public UObject
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 136;

public:
	CMember(ESettingType)                              SettingType                                                 OFFSET(get<T>, {0x28, 1, 0, 0})
	CMember(UClass*)                                   SettingWidgetType                                           OFFSET(get<T>, {0x30, 8, 0, 0})
	SMember(FText)                                     OptionDisplayText                                           OFFSET(getStruct<T>, {0x38, 24, 0, 0})
	SMember(FText)                                     OptionHoverText                                             OFFSET(getStruct<T>, {0x50, 24, 0, 0})
	DMember(int32_t)                                   MinIntegralDigits                                           OFFSET(get<int32_t>, {0x68, 4, 0, 0})
	DMember(int32_t)                                   MaxIntegralDigits                                           OFFSET(get<int32_t>, {0x6C, 4, 0, 0})
	DMember(int32_t)                                   MinFractionalDigits                                         OFFSET(get<int32_t>, {0x70, 4, 0, 0})
	DMember(int32_t)                                   MaxFractionalDigits                                         OFFSET(get<int32_t>, {0x74, 4, 0, 0})
	DMember(float)                                     StepSize                                                    OFFSET(get<float>, {0x78, 4, 0, 0})
	DMember(float)                                     MinSensitivityValue                                         OFFSET(get<float>, {0x7C, 4, 0, 0})
	DMember(float)                                     MaxSensitivityValue                                         OFFSET(get<float>, {0x80, 4, 0, 0})
	CMember(TEnumAsByte<ERoundingMode>)                RoundingMode                                                OFFSET(get<T>, {0x84, 1, 0, 0})
};

/// Class /Script/FortniteUI.FortOptionsTab_NewSystemShim
/// Size: 0x0010 (0x000438 - 0x000448)
class UFortOptionsTab_NewSystemShim : public UFortOptionsTab
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1096;

public:
	CMember(UFortSettingsPanel*)                       Settings_Panel                                              OFFSET(get<T>, {0x438, 8, 0, 0})
	CMember(UFortGameSettingRegistry*)                 Registry                                                    OFFSET(get<T>, {0x440, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortOptionsTab_NewSystemShim.AttemptToPopNavigation
	// bool AttemptToPopNavigation();                                                                                           // [0x9484c4c] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/FortniteUI.FortTabVideoOptions_TempNew
/// Size: 0x0000 (0x000448 - 0x000448)
class UFortTabVideoOptions_TempNew : public UFortOptionsTab_NewSystemShim
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1096;

public:
};

/// Class /Script/FortniteUI.FortTabAudioOptions_TempNew
/// Size: 0x0000 (0x000448 - 0x000448)
class UFortTabAudioOptions_TempNew : public UFortOptionsTab_NewSystemShim
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1096;

public:
};

/// Class /Script/FortniteUI.FortTabGameplayOptions_TempNew
/// Size: 0x0000 (0x000448 - 0x000448)
class UFortTabGameplayOptions_TempNew : public UFortOptionsTab_NewSystemShim
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1096;

public:
};

/// Class /Script/FortniteUI.FortTabHUDOptions_TempNew
/// Size: 0x0000 (0x000448 - 0x000448)
class UFortTabHUDOptions_TempNew : public UFortOptionsTab_NewSystemShim
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1096;

public:
};

/// Class /Script/FortniteUI.FortTabMouseAndKeyboardOptions_TempNew
/// Size: 0x0000 (0x000448 - 0x000448)
class UFortTabMouseAndKeyboardOptions_TempNew : public UFortOptionsTab_NewSystemShim
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1096;

public:
};

/// Class /Script/FortniteUI.FortTabMouseAndKeyboardBindingsOptions_TempNew
/// Size: 0x0000 (0x000448 - 0x000448)
class UFortTabMouseAndKeyboardBindingsOptions_TempNew : public UFortOptionsTab_NewSystemShim
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1096;

public:
};

/// Class /Script/FortniteUI.FortTabGamepadOptions_TempNew
/// Size: 0x0000 (0x000448 - 0x000448)
class UFortTabGamepadOptions_TempNew : public UFortOptionsTab_NewSystemShim
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1096;

public:
};

/// Class /Script/FortniteUI.FortTabGamepadButtonMappingOptions_TempNew
/// Size: 0x0000 (0x000448 - 0x000448)
class UFortTabGamepadButtonMappingOptions_TempNew : public UFortOptionsTab_NewSystemShim
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1096;

public:
};

/// Class /Script/FortniteUI.FortTabTouchOptions_TempNew
/// Size: 0x0000 (0x000448 - 0x000448)
class UFortTabTouchOptions_TempNew : public UFortOptionsTab_NewSystemShim
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1096;

public:
};

/// Class /Script/FortniteUI.FortTabTouchWeaponOptions_TempNew
/// Size: 0x0000 (0x000448 - 0x000448)
class UFortTabTouchWeaponOptions_TempNew : public UFortOptionsTab_NewSystemShim
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1096;

public:
};

/// Class /Script/FortniteUI.FortTabAccountOptions_TempNew
/// Size: 0x0000 (0x000448 - 0x000448)
class UFortTabAccountOptions_TempNew : public UFortOptionsTab_NewSystemShim
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1096;

public:
};

/// Class /Script/FortniteUI.FortParentalControls
/// Size: 0x00C0 (0x000570 - 0x000630)
class UFortParentalControls : public UFortActivatablePanel
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1584;

public:
	CMember(UCommonButtonLegacy*)                      Button_CloseScreen                                          OFFSET(get<T>, {0x570, 8, 0, 0})
	CMember(UCommonButtonLegacy*)                      Button_CloseTouch                                           OFFSET(get<T>, {0x578, 8, 0, 0})
	CMember(UCommonActivatableWidgetSwitcher*)         Switcher_SubViews                                           OFFSET(get<T>, {0x580, 8, 0, 0})
	CMember(UFortParentalControls_EnterPin*)           SubView_EnterPin                                            OFFSET(get<T>, {0x588, 8, 0, 0})
	CMember(UFortParentalControls_SetupPin*)           SubView_SetupPin                                            OFFSET(get<T>, {0x590, 8, 0, 0})
	CMember(UFortParentalControls_AskToEnableControls*) SubView_AskToEnableControls                                OFFSET(get<T>, {0x598, 8, 0, 0})
	CMember(UFortParentalControls_VerifyEmail*)        SubView_VerifyEmail                                         OFFSET(get<T>, {0x5A0, 8, 0, 0})
	CMember(UFortParentalControls_SetupEmail*)         SubView_SetupEmail                                          OFFSET(get<T>, {0x5A8, 8, 0, 0})
	CMember(UFortParentalControls_DisplaySettings*)    SubView_DisplaySettings                                     OFFSET(get<T>, {0x5B0, 8, 0, 0})
	CMember(UFortParentalControls_DisableParentalControls*) SubView_DisableParentalControls                        OFFSET(get<T>, {0x5B8, 8, 0, 0})
	CMember(UFortParentalControls_AskToReEnable*)      SubView_AskToReEnable                                       OFFSET(get<T>, {0x5C0, 8, 0, 0})
	CMember(UFortParentalControls_Renabling*)          SubView_Renabling                                           OFFSET(get<T>, {0x5C8, 8, 0, 0})
	CMember(UFortParentalControls_CabinModeEmailSubScreen*) SubView_CabinModeEmailChange                           OFFSET(get<T>, {0x5D0, 8, 0, 0})
	CMember(UFortSettingDetailView*)                   Details_Settings                                            OFFSET(get<T>, {0x5D8, 8, 0, 0})
	CMember(UOverlay*)                                 Overlay_SavingSettings                                      OFFSET(get<T>, {0x5E0, 8, 0, 0})
	CMember(UFortParentalControlsUpdatedBase*)         UpdateNotice                                                OFFSET(get<T>, {0x5E8, 8, 0, 0})
	CMember(UFortSidebarOnboardTooltipWidget*)         ContentRatingTooltip                                        OFFSET(get<T>, {0x5F0, 8, 0, 0})
	CMember(UFortSidebarOnboardTooltipWidget*)         UnlockedContentTooltip                                      OFFSET(get<T>, {0x5F8, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortParentalControls.OnNewSubScreenSet
	// void OnNewSubScreenSet(EParentalControlsViewState ScreenState);                                                          // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortParentalControls.OnExitActionChange
	// void OnExitActionChange(bool bIsExitAction);                                                                             // [0x1d9241c] Event|Protected|BlueprintEvent 
};

/// Class /Script/FortniteUI.FortParentalControlsSubScreen
/// Size: 0x0020 (0x000400 - 0x000420)
class UFortParentalControlsSubScreen : public UCommonActivatableWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1056;

public:
};

/// Class /Script/FortniteUI.FortParentalControls_CabinModeEmailSubScreen
/// Size: 0x0008 (0x000420 - 0x000428)
class UFortParentalControls_CabinModeEmailSubScreen : public UFortParentalControlsSubScreen
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1064;

public:
	CMember(UFortCabinEmailManagementWidget*)          CabinEmailManagementWidget                                  OFFSET(get<T>, {0x420, 8, 0, 0})
};

/// Class /Script/FortniteUI.FortParentalControls_PinSubScreen
/// Size: 0x0070 (0x000420 - 0x000490)
class UFortParentalControls_PinSubScreen : public UFortParentalControlsSubScreen
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1168;

public:
	CMember(UCommonButtonLegacy*)                      Button_SubmitPin                                            OFFSET(get<T>, {0x438, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_Pin_FailReason                                         OFFSET(get<T>, {0x440, 8, 0, 0})
	CMember(UEditableText*)                            EditableText_Pin_Entry                                      OFFSET(get<T>, {0x448, 8, 0, 0})
	CMember(UEditableText*)                            EditableText_Pin_SecondEntry                                OFFSET(get<T>, {0x450, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortParentalControls_PinSubScreen.HandleEnterPinTextChanged
	// void HandleEnterPinTextChanged(FText& InText);                                                                           // [0x9485c7c] Final|Native|Private|HasOutParms 
};

/// Class /Script/FortniteUI.FortParentalControls_SettingModifyingSubScreen
/// Size: 0x0050 (0x000420 - 0x000470)
class UFortParentalControls_SettingModifyingSubScreen : public UFortParentalControlsSubScreen
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1136;

public:
};

/// Class /Script/FortniteUI.FortParentalControls_EnterPin
/// Size: 0x0008 (0x000490 - 0x000498)
class UFortParentalControls_EnterPin : public UFortParentalControls_PinSubScreen
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1176;

public:
	CMember(UCommonButtonLegacy*)                      Button_ForgotPin                                            OFFSET(get<T>, {0x490, 8, 0, 0})
};

/// Class /Script/FortniteUI.FortParentalControls_SetupPin
/// Size: 0x0000 (0x000490 - 0x000490)
class UFortParentalControls_SetupPin : public UFortParentalControls_PinSubScreen
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1168;

public:
};

/// Class /Script/FortniteUI.FortParentalControls_AskToEnableControls
/// Size: 0x0008 (0x000420 - 0x000428)
class UFortParentalControls_AskToEnableControls : public UFortParentalControlsSubScreen
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1064;

public:
	CMember(UCommonButtonLegacy*)                      Button_AskToEnableControls                                  OFFSET(get<T>, {0x420, 8, 0, 0})
};

/// Class /Script/FortniteUI.FortParentalControls_VerifyEmail
/// Size: 0x0010 (0x000420 - 0x000430)
class UFortParentalControls_VerifyEmail : public UFortParentalControlsSubScreen
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1072;

public:
	CMember(UCommonButtonLegacy*)                      Button_VerifyEmail_Next                                     OFFSET(get<T>, {0x420, 8, 0, 0})
	CMember(UCommonButtonLegacy*)                      Button_ChangeEmail                                          OFFSET(get<T>, {0x428, 8, 0, 0})
};

/// Class /Script/FortniteUI.FortParentalControls_SetupEmail
/// Size: 0x0010 (0x000420 - 0x000430)
class UFortParentalControls_SetupEmail : public UFortParentalControlsSubScreen
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1072;

public:
	CMember(UCommonButtonLegacy*)                      Button_SetupEmail_Next                                      OFFSET(get<T>, {0x420, 8, 0, 0})
	CMember(UCommonButtonLegacy*)                      Button_SetupEmail                                           OFFSET(get<T>, {0x428, 8, 0, 0})
};

/// Class /Script/FortniteUI.FortParentalControls_DisplaySettings
/// Size: 0x0188 (0x000470 - 0x0005F8)
class UFortParentalControls_DisplaySettings : public UFortParentalControls_SettingModifyingSubScreen
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1528;

public:
	CMember(UCommonTextBlock*)                         Text_SaveFail                                               OFFSET(get<T>, {0x488, 8, 0, 0})
	CMember(UCommonButtonLegacy*)                      Button_SaveSettings                                         OFFSET(get<T>, {0x490, 8, 0, 0})
	CMember(UCommonButtonLegacy*)                      Button_MoreSettings                                         OFFSET(get<T>, {0x498, 8, 0, 0})
	CMember(UCommonButtonLegacy*)                      Button_DisableParentalControls                              OFFSET(get<T>, {0x4A0, 8, 0, 0})
	CMember(UFortSettingsPanel*)                       Panel_Settings                                              OFFSET(get<T>, {0x4A8, 8, 0, 0})
	CMember(UFortSettingRegistry*)                     Registry                                                    OFFSET(get<T>, {0x4B0, 8, 0, 0})
};

/// Class /Script/FortniteUI.FortParentalControls_DisableParentalControls
/// Size: 0x0018 (0x000470 - 0x000488)
class UFortParentalControls_DisableParentalControls : public UFortParentalControls_SettingModifyingSubScreen
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1160;

public:
	CMember(UCommonButtonLegacy*)                      Button_DisableParentalControlsConfirm                       OFFSET(get<T>, {0x470, 8, 0, 0})
	CMember(UCommonButtonLegacy*)                      Button_DisableParentalControlsCancel                        OFFSET(get<T>, {0x478, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_DisablingParentalControlsStatus                        OFFSET(get<T>, {0x480, 8, 0, 0})
};

/// Class /Script/FortniteUI.FortParentalControls_AskToReEnable
/// Size: 0x0008 (0x000420 - 0x000428)
class UFortParentalControls_AskToReEnable : public UFortParentalControlsSubScreen
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1064;

public:
	CMember(UCommonButtonLegacy*)                      Button_AskToReEnable                                        OFFSET(get<T>, {0x420, 8, 0, 0})
};

/// Class /Script/FortniteUI.FortParentalControls_Renabling
/// Size: 0x0008 (0x000470 - 0x000478)
class UFortParentalControls_Renabling : public UFortParentalControls_SettingModifyingSubScreen
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1144;

public:
	CMember(UCommonTextBlock*)                         Text_ReEnableFail                                           OFFSET(get<T>, {0x470, 8, 0, 0})
};

/// Class /Script/FortniteUI.FortTabGamepadOptions
/// Size: 0x0028 (0x000438 - 0x000460)
class UFortTabGamepadOptions : public UFortOptionsTab
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1120;

public:
	CMember(UCommonListView*)                          InputCommonListView                                         OFFSET(get<T>, {0x438, 8, 0, 0})
	CMember(UCommonTextBlock*)                         TooltipDisplay                                              OFFSET(get<T>, {0x440, 8, 0, 0})
	CMember(UClass*)                                   InputCategoryWidgetClass                                    OFFSET(get<T>, {0x448, 8, 0, 0})
	CMember(UCommonButtonLegacy*)                      Button_AdvancedSettingsToggle                               OFFSET(get<T>, {0x450, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortTabGamepadOptions.ToggleAdvancedSettingsDisplay
	// void ToggleAdvancedSettingsDisplay(bool bShowAdvancedSettings);                                                          // [0x9488818] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.FortTabGamepadOptions.ResetSettingsToDefault
	// void ResetSettingsToDefault();                                                                                           // [0x9487e24] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortTabGamepadOptions.IsAdvancedSettingsEnabled
	// bool IsAdvancedSettingsEnabled();                                                                                        // [0x9486804] Final|Native|Protected|BlueprintCallable|BlueprintPure 
	// Function /Script/FortniteUI.FortTabGamepadOptions.GetListWidget
	// UWidget* GetListWidget(UObject* Item);                                                                                   // [0x9485800] Final|Native|Protected|BlueprintCallable 
};

/// Class /Script/FortniteUI.AthenaSpatialCustomizationSubscreenBase
/// Size: 0x0020 (0x000400 - 0x000420)
class UAthenaSpatialCustomizationSubscreenBase : public UCommonActivatableWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1056;

public:
	CMember(UAthenaSpatialCustomizationRoomData*)      CustomizationRoomData                                       OFFSET(get<T>, {0x400, 8, 0, 0})
};

/// Class /Script/FortniteUI.AthenaSpatialCustomizationCategories
/// Size: 0x0098 (0x000420 - 0x0004B8)
class UAthenaSpatialCustomizationCategories : public UAthenaSpatialCustomizationSubscreenBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1208;

public:
	CMember(UWidgetAnimation*)                         IntroCategories                                             OFFSET(get<T>, {0x420, 8, 0, 0})
	CMember(TMap<FName, FAthenaSpatialCustomizationCategoryGroup>) CategoryGroups                                  OFFSET(get<T>, {0x428, 80, 0, 0})
	CMember(UAthenaSpatialCustomizationCategoryEntry*) LastSelectedCategory                                        OFFSET(get<T>, {0x478, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.AthenaSpatialCustomizationCategories.OnSetCaptureMode
	// void OnSetCaptureMode(bool bCaptureMode);                                                                                // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaSpatialCustomizationCategories.BP_OnCategoryGroupProgress
	// void BP_OnCategoryGroupProgress(FName CategoryGroup, int32_t NumCategoriesFinalized);                                    // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaSpatialCustomizationCategories.BP_OnCategoriesSetup
	// void BP_OnCategoriesSetup(int32_t TotalNumCategoriesFinalized);                                                          // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaSpatialCustomizationCategories.AddCategoryGroup
	// void AddCategoryGroup(FName CategoryGroup, TArray<UAthenaSpatialCustomizationCategoryEntry*>& CategoryEntries);          // [0x9484098] Final|Native|Public|HasOutParms|BlueprintCallable 
};

/// Class /Script/FortniteUI.AthenaSpatialNavigationButton
/// Size: 0x0010 (0x0014E0 - 0x0014F0)
class UAthenaSpatialNavigationButton : public UCommonButtonLegacy
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 5360;

public:
	SMember(FGameplayTag)                              CameraTagToNavigateTo                                       OFFSET(getStruct<T>, {0x14E0, 4, 0, 0})
};

/// Class /Script/FortniteUI.AthenaSpatialCustomizationCategoryEntry
/// Size: 0x0080 (0x0014F0 - 0x001570)
class UAthenaSpatialCustomizationCategoryEntry : public UAthenaSpatialNavigationButton
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 5488;

public:
	CMember(UAthenaSpatialCustomizationChoice*)        Choice_SelectedChoice                                       OFFSET(get<T>, {0x14E8, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_EntryName                                              OFFSET(get<T>, {0x14F0, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_EntryName_Big                                          OFFSET(get<T>, {0x14F8, 8, 0, 0})
	CMember(UCommonRichTextBlock*)                     RichText_StateDescription                                   OFFSET(get<T>, {0x1500, 8, 0, 0})
	CMember(UFortTokenType*)                           CategoryKey                                                 OFFSET(get<T>, {0x1508, 8, 0, 0})
	DMember(bool)                                      bUseColorPicker                                             OFFSET(get<bool>, {0x1510, 1, 0, 0})
	DMember(bool)                                      bCategoryDefaultColorIsNull                                 OFFSET(get<bool>, {0x1511, 1, 0, 0})
	DMember(float)                                     LowerClampingColorBound                                     OFFSET(get<float>, {0x1514, 4, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.AthenaSpatialCustomizationCategoryEntry.OnCategoryStateSet
	// void OnCategoryStateSet(ESpatialCustomizationCategoryState State, FLinearColor StateColor);                              // [0x1d9241c] Event|Protected|HasDefaults|BlueprintEvent 
};

/// Class /Script/FortniteUI.AthenaSpatialCustomizationChoice
/// Size: 0x0040 (0x0002E8 - 0x000328)
class UAthenaSpatialCustomizationChoice : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 808;

public:
	CMember(UFortLazyImage*)                           Image_ItemIcon                                              OFFSET(get<T>, {0x2F0, 8, 0, 0})
	CMember(UImage*)                                   Image_Locked                                                OFFSET(get<T>, {0x2F8, 8, 0, 0})
	CMember(UImage*)                                   Image_Owned                                                 OFFSET(get<T>, {0x300, 8, 0, 0})
	SMember(FName)                                     ColorChoiceDivetParam                                       OFFSET(getStruct<T>, {0x308, 4, 0, 0})
	SMember(FName)                                     NullColorDivetParam                                         OFFSET(getStruct<T>, {0x30C, 4, 0, 0})
	SMember(FVector2D)                                 Size                                                        OFFSET(getStruct<T>, {0x310, 16, 0, 0})
	SMember(FGameplayTag)                              ChoiceTag                                                   OFFSET(getStruct<T>, {0x320, 4, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.AthenaSpatialCustomizationChoice.OnSetupChoice
	// void OnSetupChoice(ESpatialCustomizationCategoryState State, FLinearColor Color);                                        // [0x1d9241c] Event|Protected|HasDefaults|BlueprintEvent 
};

/// Class /Script/FortniteUI.AthenaSpatialCustomizationChoiceButton
/// Size: 0x0030 (0x0014E0 - 0x001510)
class UAthenaSpatialCustomizationChoiceButton : public UCommonButtonLegacy
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 5392;

public:
	CMember(UAthenaSpatialCustomizationChoice*)        Choice                                                      OFFSET(get<T>, {0x14E0, 8, 0, 0})
	CMember(UFortLazyImage*)                           Image_Selected                                              OFFSET(get<T>, {0x14E8, 8, 0, 0})
	CMember(TWeakObjectPtr<UObject*>)                  SelectedImage                                               OFFSET(get<T>, {0x14F0, 32, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.AthenaSpatialCustomizationChoiceButton.OnSetupChoice
	// void OnSetupChoice(ESpatialCustomizationCategoryState CategoryState, FLinearColor& CategoryStateColor);                  // [0x1d9241c] Event|Protected|HasOutParms|HasDefaults|BlueprintEvent 
};

/// Class /Script/FortniteUI.AthenaSpatialCustomizationChoiceSelectButton
/// Size: 0x0000 (0x0014E0 - 0x0014E0)
class UAthenaSpatialCustomizationChoiceSelectButton : public UCommonButtonLegacy
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 5344;

public:
};

/// Class /Script/FortniteUI.AthenaSpatialScreen
/// Size: 0x0090 (0x000400 - 0x000490)
class UAthenaSpatialScreen : public UCommonActivatableWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1168;

public:
	DMember(bool)                                      bEnableSpatialInputPreprocessing                            OFFSET(get<bool>, {0x400, 1, 0, 0})
	DMember(bool)                                      bEnableAnalytics                                            OFFSET(get<bool>, {0x401, 1, 0, 0})
	SMember(FGameplayTag)                              OverrideScreenTag                                           OFFSET(getStruct<T>, {0x404, 4, 0, 0})
	CMember(UCommonButtonLegacy*)                      Button_Back                                                 OFFSET(get<T>, {0x408, 8, 0, 0})
	SMember(FGameplayTag)                              ScreenTag                                                   OFFSET(getStruct<T>, {0x410, 4, 0, 0})
	CMember(UCommonButtonLegacy*)                      Button_TouchBack                                            OFFSET(get<T>, {0x418, 8, 0, 0})
	DMember(bool)                                      bNeedsBottomBar                                             OFFSET(get<bool>, {0x420, 1, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.AthenaSpatialScreen.OnInputSuspensionChanged
	// void OnInputSuspensionChanged();                                                                                         // [0x2ee9a3c] Native|Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaSpatialScreen.FireSpatialScreenAnalytic
	// void FireSpatialScreenAnalytic(FString Interaction);                                                                     // [0x94c0a38] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.AthenaSpatialScreen.AddSpatialScreenSessionCounter
	// void AddSpatialScreenSessionCounter(FString Entry, int32_t Count);                                                       // [0x94c0304] Final|Native|Protected|BlueprintCallable 
};

/// Class /Script/FortniteUI.AthenaSpatialItemPreviewScreen
/// Size: 0x0048 (0x000490 - 0x0004D8)
class UAthenaSpatialItemPreviewScreen : public UAthenaSpatialScreen
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1240;

public:
	CMember(UFortItemView*)                            ItemViewObject                                              OFFSET(get<T>, {0x490, 8, 0, 0})
	SMember(FName)                                     ItemPreviewActorTag                                         OFFSET(getStruct<T>, {0x498, 4, 0, 0})
	SMember(FDataTableRowHandle)                       ItemPreviewRotateInputAction                                OFFSET(getStruct<T>, {0x4B0, 16, 0, 0})
	DMember(bool)                                      bEnableItemPreviewRotation                                  OFFSET(get<bool>, {0x4C0, 1, 0, 0})
	CMember(UAnimationAsset*)                          IdleAnimation                                               OFFSET(get<T>, {0x4C8, 8, 0, 0})
	DMember(bool)                                      bLooping                                                    OFFSET(get<bool>, {0x4D0, 1, 0, 0})
};

/// Class /Script/FortniteUI.AthenaSpatialCustomizationRoom
/// Size: 0x0058 (0x0004D8 - 0x000530)
class UAthenaSpatialCustomizationRoom : public UAthenaSpatialItemPreviewScreen
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1328;

public:
	CMember(UAthenaSpatialCustomizationCategories*)    Categories                                                  OFFSET(get<T>, {0x4D8, 8, 0, 0})
	CMember(UAthenaSpatialCustomizationSelection*)     Selection                                                   OFFSET(get<T>, {0x4E0, 8, 0, 0})
	CMember(UCommonButtonLegacy*)                      Button_About                                                OFFSET(get<T>, {0x4E8, 8, 0, 0})
	CMember(UAthenaSpatialCustomizationRoomData*)      CustomizationRoomData                                       OFFSET(get<T>, {0x4F0, 8, 0, 0})
	CMember(UFortGameStateComponent_EventLevel*)       EventGameStateComponent                                     OFFSET(get<T>, {0x4F8, 8, 0, 0})
	CMember(TArray<FMcpVariantChannelInfo>)            CurrentVariantChannelStates                                 OFFSET(get<T>, {0x500, 16, 0, 0})
	CMember(TArray<UAthenaSpatialCustomizationSubscreenBase*>) SubScreens                                          OFFSET(get<T>, {0x510, 16, 0, 0})
	CMember(ESpatialCustomizationRoomState)            RoomState                                                   OFFSET(get<T>, {0x520, 1, 0, 0})
	SMember(FTimerHandle)                              DelayedApplyColorHandle                                     OFFSET(getStruct<T>, {0x528, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.AthenaSpatialCustomizationRoom.OnShowFirstTimeInfo
	// void OnShowFirstTimeInfo();                                                                                              // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaSpatialCustomizationRoom.OnRoomStateChanged
	// void OnRoomStateChanged(ESpatialCustomizationRoomState CurrentRoomState, ESpatialCustomizationRoomState PreviousRoomState); // [0x1d9241c] Event|Protected|BlueprintEvent 
};

/// Class /Script/FortniteUI.AthenaSpatialCustomizationRoomData
/// Size: 0x0120 (0x000030 - 0x000150)
class UAthenaSpatialCustomizationRoomData : public UDataAsset
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 336;

public:
	CMember(UAthenaCosmeticItemDefinition*)            CustomizationCosmetic                                       OFFSET(get<T>, {0x30, 8, 0, 0})
	CMember(UAthenaRewardEventGraph*)                  CustomizationRoomGraph                                      OFFSET(get<T>, {0x38, 8, 0, 0})
	CMember(UFortChallengeBundleItemDefinition*)       CustomizationChallengeBundle                                OFFSET(get<T>, {0x40, 8, 0, 0})
	CMember(UClass*)                                   ConfirmationWindowClass                                     OFFSET(get<T>, {0x48, 8, 0, 0})
	CMember(TArray<FSpatialCustomizationCategoryStateData>) CategoryStates                                         OFFSET(get<T>, {0x50, 16, 0, 0})
	SMember(FText)                                     FinalizeConfirmationTitle                                   OFFSET(getStruct<T>, {0x60, 24, 0, 0})
	SMember(FText)                                     FinalizeConfirmationDescription                             OFFSET(getStruct<T>, {0x78, 24, 0, 0})
	SMember(FText)                                     UnlockAvailableText                                         OFFSET(getStruct<T>, {0x90, 24, 0, 0})
	SMember(FText)                                     UnlockUsedText                                              OFFSET(getStruct<T>, {0xA8, 24, 0, 0})
	SMember(FText)                                     LockedByBattlePassText                                      OFFSET(getStruct<T>, {0xC0, 24, 0, 0})
	SMember(FText)                                     LockedByChallengeFormat                                     OFFSET(getStruct<T>, {0xD8, 24, 0, 0})
	SMember(FText)                                     LockedByChallengeCompletionText                             OFFSET(getStruct<T>, {0xF0, 24, 0, 0})
	SMember(FText)                                     LockedByChallengeBundleCompletionFormat                     OFFSET(getStruct<T>, {0x108, 24, 0, 0})
	DMember(bool)                                      bUseNullColorOption                                         OFFSET(get<bool>, {0x120, 1, 0, 0})
	SMember(FLinearColor)                              NullColor                                                   OFFSET(getStruct<T>, {0x124, 16, 0, 0})
	CMember(TArray<FLinearColor>)                      Swatches                                                    OFFSET(get<T>, {0x138, 16, 0, 0})
	DMember(bool)                                      bShowSelectedChoiceName                                     OFFSET(get<bool>, {0x148, 1, 0, 0})
};

/// Class /Script/FortniteUI.AthenaSpatialCustomizationSelection
/// Size: 0x00F0 (0x000420 - 0x000510)
class UAthenaSpatialCustomizationSelection : public UAthenaSpatialCustomizationSubscreenBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1296;

public:
	CMember(UWidgetAnimation*)                         IntroChoice                                                 OFFSET(get<T>, {0x420, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_CategoryTitle                                          OFFSET(get<T>, {0x428, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_CategoryDescription                                    OFFSET(get<T>, {0x430, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_SelectedChoiceName                                     OFFSET(get<T>, {0x438, 8, 0, 0})
	CMember(UCommonRichTextBlock*)                     RichText_LockedReason                                       OFFSET(get<T>, {0x440, 8, 0, 0})
	CMember(UAthenaQuestProgression*)                  QuestProgress_ChallengeProgression                          OFFSET(get<T>, {0x448, 8, 0, 0})
	CMember(UCommonButtonLegacy*)                      Button_PurchaseBattlepass                                   OFFSET(get<T>, {0x450, 8, 0, 0})
	CMember(UFortColorPicker*)                         ColorPicker                                                 OFFSET(get<T>, {0x458, 8, 0, 0})
	CMember(UCommonButtonLegacy*)                      Button_FinalizeChoice                                       OFFSET(get<T>, {0x460, 8, 0, 0})
	CMember(UCommonButtonLegacy*)                      Button_PreviousCategory                                     OFFSET(get<T>, {0x468, 8, 0, 0})
	CMember(UCommonButtonLegacy*)                      Button_NextCategory                                         OFFSET(get<T>, {0x470, 8, 0, 0})
	CMember(UCommonButtonLegacy*)                      Button_PreviousChoice                                       OFFSET(get<T>, {0x478, 8, 0, 0})
	CMember(UCommonButtonLegacy*)                      Button_NextChoice                                           OFFSET(get<T>, {0x480, 8, 0, 0})
	CMember(UAthenaSpatialCustomizationChoice*)        Choice_SelectedChoice                                       OFFSET(get<T>, {0x488, 8, 0, 0})
	CMember(UAthenaSpatialCustomizationChoice*)        Choice_CustomizationChoicePrevious                          OFFSET(get<T>, {0x490, 8, 0, 0})
	CMember(UAthenaSpatialCustomizationChoice*)        Choice_CustomizationChoiceNext                              OFFSET(get<T>, {0x498, 8, 0, 0})
	CMember(UAthenaSpatialCustomizationChoice*)        Choice_UnlockUsed                                           OFFSET(get<T>, {0x4A0, 8, 0, 0})
	CMember(TArray<UAthenaSpatialCustomizationCategoryEntry*>) Categories                                          OFFSET(get<T>, {0x4A8, 16, 0, 0})
	CMember(UFortGameStateComponent_EventLevel*)       EventGameStateComponent                                     OFFSET(get<T>, {0x4B8, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.AthenaSpatialCustomizationSelection.OnUpdateFinalizedText
	// void OnUpdateFinalizedText(FText& InFinalizedChoiceText);                                                                // [0x1d9241c] Event|Protected|HasOutParms|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaSpatialCustomizationSelection.OnFinalizeChoiceStarted
	// void OnFinalizeChoiceStarted();                                                                                          // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaSpatialCustomizationSelection.OnFinalizeChoiceFinished
	// void OnFinalizeChoiceFinished(bool bSucceeded);                                                                          // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaSpatialCustomizationSelection.OnChoiceCountUpdated
	// void OnChoiceCountUpdated(int32_t ChoiceNum, int32_t TotalCount);                                                        // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaSpatialCustomizationSelection.OnCategoryUpdated
	// void OnCategoryUpdated(ESpatialCustomizationCategoryState CategoryState, FLinearColor Color, bool bUseColorPicker);      // [0x1d9241c] Event|Protected|HasDefaults|BlueprintEvent 
};

/// Class /Script/FortniteUI.FortDailyChallengeStickyNoteWidget
/// Size: 0x0050 (0x000400 - 0x000450)
class UFortDailyChallengeStickyNoteWidget : public UCommonActivatableWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1104;

public:
	DMember(int32_t)                                   MyDailyChallengeIndex                                       OFFSET(get<int32_t>, {0x418, 4, 0, 0})
	CMember(UCommonButtonLegacy*)                      Button_RerollChallenge                                      OFFSET(get<T>, {0x420, 8, 0, 0})
	CMember(UCommonRichTextBlock*)                     RichText_ChallengeDesc                                      OFFSET(get<T>, {0x428, 8, 0, 0})
	CMember(UCommonRichTextBlock*)                     RichText_Progress                                           OFFSET(get<T>, {0x430, 8, 0, 0})
	CMember(USizeBox*)                                 SizeBox_ContentEnforcedSize                                 OFFSET(get<T>, {0x438, 8, 0, 0})
	CMember(UCommonRichTextBlock*)                     RichText_NextChallengeTime                                  OFFSET(get<T>, {0x440, 8, 0, 0})
	CMember(UClass*)                                   ConfirmationWindowClass                                     OFFSET(get<T>, {0x448, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortDailyChallengeStickyNoteWidget.OnHasChallengeUpdated
	// void OnHasChallengeUpdated(bool bHasAssignedChallenge);                                                                  // [0x1d9241c] Event|Public|BlueprintEvent 
};

/// Class /Script/FortniteUI.DonutChallengeScreen
/// Size: 0x0090 (0x000490 - 0x000520)
class UDonutChallengeScreen : public UAthenaSpatialScreen
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1312;

public:
	CMember(UFortGameStateComponent_EventLevel*)       EventGameStateComponent                                     OFFSET(get<T>, {0x4A8, 8, 0, 0})
	CMember(UAthenaSeasonItemDefinition*)              SeasonData                                                  OFFSET(get<T>, {0x4B0, 8, 0, 0})
	CMember(TWeakObjectPtr<UClass*>)                   CustomMouseCursorWidget                                     OFFSET(get<T>, {0x4B8, 32, 0, 0})
	CMember(UClass*)                                   HeaderEntryClass                                            OFFSET(get<T>, {0x4D8, 8, 0, 0})
	CMember(UClass*)                                   EntryClass                                                  OFFSET(get<T>, {0x4E0, 8, 0, 0})
	CMember(TArray<UFortChallengeBundleItemDefinition*>) DonutBundles                                              OFFSET(get<T>, {0x4E8, 16, 0, 0})
	CMember(UFortChallengeBundleItemDefinition*)       SkinUnlockBundle                                            OFFSET(get<T>, {0x4F8, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_AttractChallengeDescription                            OFFSET(get<T>, {0x500, 8, 0, 0})
	CMember(UCommonButtonLegacy*)                      Button_BattlepassUpsell                                     OFFSET(get<T>, {0x508, 8, 0, 0})
	CMember(UCommonHierarchicalScrollBox*)             ScrollBox_Challenges                                        OFFSET(get<T>, {0x510, 8, 0, 0})
	CMember(UDynamicEntryBox*)                         EntryBox_Challenges                                         OFFSET(get<T>, {0x518, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.DonutChallengeScreen.UpdateBPOwnedStateVisuals
	// void UpdateBPOwnedStateVisuals(bool bInOwnsBattlePass);                                                                  // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.DonutChallengeScreen.ShowSkinUnlockMessage
	// void ShowSkinUnlockMessage(bool bShowMessage, int32_t InChallengeNum);                                                   // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.DonutChallengeScreen.SetStyledCursorEnabled
	// void SetStyledCursorEnabled(bool bEnableStyledCursor);                                                                   // [0x94c2000] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.DonutChallengeScreen.SetEntryFocus
	// void SetEntryFocus();                                                                                                    // [0x94c1dc8] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.DonutChallengeScreen.ScrollToEndOfChallenges
	// void ScrollToEndOfChallenges();                                                                                          // [0x94c1c60] Final|Native|Protected|BlueprintCallable 
};

/// Class /Script/FortniteUI.DonutChallengeEntryHeader
/// Size: 0x0010 (0x0014E0 - 0x0014F0)
class UDonutChallengeEntryHeader : public UCommonButtonLegacy
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 5360;

public:
	CMember(UCommonTextBlock*)                         Text_Title                                                  OFFSET(get<T>, {0x14E0, 8, 0, 0})
	CMember(UAthenaChallengeCountdownDisplay*)         Timer_UnlockTimer                                           OFFSET(get<T>, {0x14E8, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.DonutChallengeEntryHeader.BPUpdateTitle
	// void BPUpdateTitle(int32_t InWeek);                                                                                      // [0x1d9241c] Event|Public|BlueprintEvent 
};

/// Class /Script/FortniteUI.DonutChallengeEntry
/// Size: 0x0020 (0x0014E0 - 0x001500)
class UDonutChallengeEntry : public UCommonButtonLegacy
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 5376;

public:
	CMember(UCommonTextBlock*)                         Text_Title                                                  OFFSET(get<T>, {0x14E0, 8, 0, 0})
	CMember(UFortLazyImage*)                           Image_Reward                                                OFFSET(get<T>, {0x14E8, 8, 0, 0})
	CMember(UImage*)                                   Image_Completed                                             OFFSET(get<T>, {0x14F0, 8, 0, 0})
	CMember(UAthenaChallengeProgressBar*)              ProgressBar_Challenge                                       OFFSET(get<T>, {0x14F8, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.DonutChallengeEntry.BPIsCompleted
	// void BPIsCompleted(bool InCompletion);                                                                                   // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.DonutChallengeEntry.BPHasRewardTexture
	// void BPHasRewardTexture(bool InHasReward);                                                                               // [0x1d9241c] Event|Public|BlueprintEvent 
};

/// Class /Script/FortniteUI.SpatialChallengePunchCard
/// Size: 0x0048 (0x000490 - 0x0004D8)
class USpatialChallengePunchCard : public UAthenaSpatialScreen
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1240;

public:
	CMember(TWeakObjectPtr<UAthenaChallengePunchCard*>) FocusedPunchCard                                           OFFSET(get<T>, {0x490, 8, 0, 0})
	SMember(FDataTableRowHandle)                       NextPunchCardInputAction                                    OFFSET(getStruct<T>, {0x498, 16, 0, 0})
	CMember(UDynamicEntryBox*)                         EntryBox_PunchCards                                         OFFSET(get<T>, {0x4A8, 8, 0, 0})
	CMember(UScrollBox*)                               Scroll_Box                                                  OFFSET(get<T>, {0x4B0, 8, 0, 0})
	CMember(TArray<TWeakObjectPtr>)                    PunchCards                                                  OFFSET(get<T>, {0x4B8, 16, 0, 0})
	DMember(float)                                     LastStickInputTime                                          OFFSET(get<float>, {0x4C8, 4, 0, 0})
	DMember(float)                                     InputDelayTime                                              OFFSET(get<float>, {0x4CC, 4, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.SpatialChallengePunchCard.SetDiscoveredCount
	// void SetDiscoveredCount(int32_t KnownCount, int32_t CompletedCount, int32_t TotalCount);                                 // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.SpatialChallengePunchCard.OnShowFirstTimeInfo
	// void OnShowFirstTimeInfo();                                                                                              // [0x1d9241c] Event|Protected|BlueprintEvent 
};

/// Class /Script/FortniteUI.SpatialChallengePunchCardEntry
/// Size: 0x0010 (0x0002E8 - 0x0002F8)
class USpatialChallengePunchCardEntry : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 760;

public:
	CMember(UAthenaChallengePunchCard*)                PunchCard_Top                                               OFFSET(get<T>, {0x2E8, 8, 0, 0})
	CMember(UAthenaChallengePunchCard*)                PunchCard_Bottom                                            OFFSET(get<T>, {0x2F0, 8, 0, 0})
};

/// Class /Script/FortniteUI.SpatialDailyChallengesWidget
/// Size: 0x0020 (0x000490 - 0x0004B0)
class USpatialDailyChallengesWidget : public UAthenaSpatialScreen
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1200;

public:
	CMember(UFortDailyChallengeStickyNoteWidget*)      StickyNote_Top                                              OFFSET(get<T>, {0x490, 8, 0, 0})
	CMember(UFortDailyChallengeStickyNoteWidget*)      StickyNote_Middle                                           OFFSET(get<T>, {0x498, 8, 0, 0})
	CMember(UFortDailyChallengeStickyNoteWidget*)      StickyNote_Bottom                                           OFFSET(get<T>, {0x4A0, 8, 0, 0})
};

/// Class /Script/FortniteUI.SpatialFactionChoiceScreen
/// Size: 0x0038 (0x000400 - 0x000438)
class USpatialFactionChoiceScreen : public UCommonActivatableWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1080;

public:
	SMember(FMulticastInlineDelegate)                  BP_OnFactionChosen                                          OFFSET(getStruct<T>, {0x418, 16, 0, 0})
	CMember(UCommonButtonLegacy*)                      Button_FactionChoice1                                       OFFSET(get<T>, {0x428, 8, 0, 0})
	CMember(UCommonButtonLegacy*)                      Button_FactionChoice2                                       OFFSET(get<T>, {0x430, 8, 0, 0})
};

/// Class /Script/FortniteUI.SpatialFactionPerkProgress
/// Size: 0x0010 (0x0002E8 - 0x0002F8)
class USpatialFactionPerkProgress : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 760;

public:
};

/// Class /Script/FortniteUI.SpatialFactionPerkReward
/// Size: 0x0030 (0x0014E0 - 0x001510)
class USpatialFactionPerkReward : public UCommonButtonLegacy
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 5392;

public:
	DMember(bool)                                      bIsTopRow                                                   OFFSET(get<bool>, {0x14E0, 1, 0, 0})
	CMember(UFortPlayerPerksItemDefinition*)           Faction1PerksItemDef                                        OFFSET(get<T>, {0x14E8, 8, 0, 0})
	CMember(UFortPlayerPerksItemDefinition*)           Faction2PerksItemDef                                        OFFSET(get<T>, {0x14F0, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.SpatialFactionPerkReward.OnInitializePerkReward
	// void OnInitializePerkReward(int32_t FactionNumber, int32_t PerkLevel, TWeakObjectPtr<UTexture2D*>& RewardTexture, bool bIsRevealed, bool bIsEarned, bool bIsCurrentFaction, bool bShowBang); // [0x1d9241c] Event|Protected|HasOutParms|BlueprintEvent 
	// Function /Script/FortniteUI.SpatialFactionPerkReward.OnFactionSet
	// void OnFactionSet(bool bIsCurrentFaction);                                                                               // [0x1d9241c] Event|Protected|BlueprintEvent 
};

/// Class /Script/FortniteUI.SpatialFactionPerkTier
/// Size: 0x0028 (0x0002C0 - 0x0002E8)
class USpatialFactionPerkTier : public UUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 744;

public:
	CMember(USpatialFactionPerkReward*)                Reward_Faction1                                             OFFSET(get<T>, {0x2C0, 8, 0, 0})
	CMember(USpatialFactionPerkProgress*)              Progress_Faction1                                           OFFSET(get<T>, {0x2C8, 8, 0, 0})
	CMember(USpatialFactionPerkReward*)                Reward_Faction2                                             OFFSET(get<T>, {0x2D0, 8, 0, 0})
	CMember(USpatialFactionPerkProgress*)              Progress_Faction2                                           OFFSET(get<T>, {0x2D8, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.SpatialFactionPerkTier.OnInitializePerkTier
	// void OnInitializePerkTier(int32_t PerkLevel, bool bIsRevealed, int32_t PerkIndex);                                       // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.SpatialFactionPerkTier.OnFactionSet
	// void OnFactionSet(bool bIsCurrentFactionEarned, bool bIsRevealed, int32_t FactionNumber);                                // [0x1d9241c] Event|Protected|BlueprintEvent 
};

/// Class /Script/FortniteUI.SpatialFactionProgressScreen
/// Size: 0x0088 (0x000400 - 0x000488)
class USpatialFactionProgressScreen : public UCommonActivatableWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1160;

public:
	CMember(UFortPlayerPerksItemDefinition*)           Faction1PerksItemDef                                        OFFSET(get<T>, {0x430, 8, 0, 0})
	CMember(UFortPlayerPerksItemDefinition*)           Faction2PerksItemDef                                        OFFSET(get<T>, {0x438, 8, 0, 0})
	CMember(UCommonButtonGroupLegacy*)                 ButtonGroup_FactionPerks                                    OFFSET(get<T>, {0x440, 8, 0, 0})
	CMember(UCommonButtonLegacy*)                      Button_SwapFaction                                          OFFSET(get<T>, {0x448, 8, 0, 0})
	CMember(UCommonButtonLegacy*)                      SpatialFaction_ShadowButton                                 OFFSET(get<T>, {0x450, 8, 0, 0})
	CMember(UCommonButtonLegacy*)                      SpatialFaction_GhostButton                                  OFFSET(get<T>, {0x458, 8, 0, 0})
	CMember(UDynamicEntryBox*)                         EntryBox_FactionPerkTiers                                   OFFSET(get<T>, {0x460, 8, 0, 0})
	CMember(UScrollBox*)                               ScrollBox_PerkItems                                         OFFSET(get<T>, {0x468, 8, 0, 0})
	CMember(UFortSocialAvatarIcon*)                    Icon_PlayerImage                                            OFFSET(get<T>, {0x470, 8, 0, 0})
	CMember(UTextBlock*)                               Text_PlayerName                                             OFFSET(get<T>, {0x478, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.SpatialFactionProgressScreen.OnPerkSelected
	// void OnPerkSelected(UFortSpyTechItemDefinition* PerkItemDef, int32_t PerkLevel, int32_t PerkFaction, bool bIsRevealed, bool bIsEarned, bool bIsCurrentFaction); // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.SpatialFactionProgressScreen.OnFactionSet
	// void OnFactionSet(int32_t PlayerFaction);                                                                                // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.SpatialFactionProgressScreen.HandlePerkSelected
	// void HandlePerkSelected(UCommonButtonLegacy* AssociatedButton, int32_t Index);                                           // [0x94c1710] Final|Native|Private 
};

/// Class /Script/FortniteUI.SpatialFactionScreen
/// Size: 0x0030 (0x000490 - 0x0004C0)
class USpatialFactionScreen : public UAthenaSpatialScreen
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1216;

public:
	CMember(USpatialFactionChoiceScreen*)              Screen_FactionChoice                                        OFFSET(get<T>, {0x490, 8, 0, 0})
	CMember(USpatialFactionProgressScreen*)            Screen_FactionProgress                                      OFFSET(get<T>, {0x498, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.SpatialFactionScreen.SetAboutScreenVisited
	// void SetAboutScreenVisited();                                                                                            // [0x94c1c7c] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.SpatialFactionScreen.OnFactionChoiceRequired
	// void OnFactionChoiceRequired();                                                                                          // [0x1d9241c] Event|Protected|BlueprintEvent 
};

/// Class /Script/FortniteUI.FactionUnlockedPerkData
/// Size: 0x0008 (0x000028 - 0x000030)
class UFactionUnlockedPerkData : public UObject
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 48;

public:
	CMember(UFortItem*)                                PerkItem                                                    OFFSET(get<T>, {0x28, 8, 0, 0})
};

/// Class /Script/FortniteUI.FactionUnlockedPerkListEntry
/// Size: 0x0018 (0x0002E8 - 0x000300)
class UFactionUnlockedPerkListEntry : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 768;

public:
	CMember(UFactionUnlockedPerkData*)                 Perk                                                        OFFSET(get<T>, {0x2F0, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FactionUnlockedPerkListEntry.OnStaggerTimeStarted
	// void OnStaggerTimeStarted();                                                                                             // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FactionUnlockedPerkListEntry.OnStaggerTimeElapsed
	// void OnStaggerTimeElapsed();                                                                                             // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FactionUnlockedPerkListEntry.BPSetup
	// void BPSetup(UFactionUnlockedPerkData* InPerk);                                                                          // [0x1d9241c] Event|Protected|BlueprintEvent 
};

/// Class /Script/FortniteUI.SpatialFactionUnlockedPerksScreen
/// Size: 0x0068 (0x0006B8 - 0x000720)
class USpatialFactionUnlockedPerksScreen : public UFortActivatablePanelWithItemPreview
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1824;

public:
	SMember(FMulticastInlineDelegate)                  BP_OnUnlockedPerksScreenClosed                              OFFSET(getStruct<T>, {0x6B8, 16, 0, 0})
	DMember(float)                                     StaggerTime                                                 OFFSET(get<float>, {0x6C8, 4, 0, 0})
	CMember(UCommonButtonLegacy*)                      Button_Back                                                 OFFSET(get<T>, {0x6D0, 8, 0, 0})
	CMember(UTileView*)                                TileView_Perks                                              OFFSET(get<T>, {0x6D8, 8, 0, 0})
	CMember(UCommonButtonLegacy*)                      Button_TouchBack                                            OFFSET(get<T>, {0x6E0, 8, 0, 0})
	CMember(UFortItem*)                                LastViewedItem                                              OFFSET(get<T>, {0x700, 8, 0, 0})
	CMember(TArray<UFactionUnlockedPerkData*>)         AllPerkItems                                                OFFSET(get<T>, {0x708, 16, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.SpatialFactionUnlockedPerksScreen.OnUnlockedPerksScreenClosedDynamic__DelegateSignature
	// void OnUnlockedPerksScreenClosedDynamic__DelegateSignature();                                                            // [0x1d9241c] MulticastDelegate|Public|Delegate 
	// Function /Script/FortniteUI.SpatialFactionUnlockedPerksScreen.OnItemViewed
	// void OnItemViewed(UFactionUnlockedPerkData* ItemDisplayed);                                                              // [0x1d9241c] Event|Protected|BlueprintEvent 
};

/// Class /Script/FortniteUI.SpatialMapPreviewScreen
/// Size: 0x0000 (0x000720 - 0x000720)
class USpatialMapPreviewScreen : public UFortItemPreviewScreen
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1824;

public:
};

/// Class /Script/FortniteUI.AthenaSpatialStyleCard
/// Size: 0x0010 (0x0014E0 - 0x0014F0)
class UAthenaSpatialStyleCard : public UCommonButtonLegacy
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 5360;

public:
	CMember(UFortCosmeticItemCard*)                    ItemCard_Style                                              OFFSET(get<T>, {0x14E0, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.AthenaSpatialStyleCard.OnStyleImageSet
	// void OnStyleImageSet(bool bUnlocked);                                                                                    // [0x1d9241c] Event|Protected|BlueprintEvent 
};

/// Class /Script/FortniteUI.AthenaSpatialStyleChallengeDetails
/// Size: 0x00A8 (0x0002E8 - 0x000390)
class UAthenaSpatialStyleChallengeDetails : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 912;

public:
	CMember(UWidgetAnimation*)                         PageRefresh                                                 OFFSET(get<T>, {0x2E8, 8, 0, 0})
	CMember(UWidgetAnimation*)                         StyleRefresh                                                OFFSET(get<T>, {0x2F0, 8, 0, 0})
	CMember(UWidgetAnimation*)                         Intro                                                       OFFSET(get<T>, {0x2F8, 8, 0, 0})
	CMember(UDynamicEntryBox*)                         EntryBox_Styles                                             OFFSET(get<T>, {0x300, 8, 0, 0})
	CMember(UCommonButtonGroupLegacy*)                 ButtonGroup_Styles                                          OFFSET(get<T>, {0x308, 8, 0, 0})
	CMember(UVerticalBox*)                             VBox_Prerequisities                                         OFFSET(get<T>, {0x310, 8, 0, 0})
	CMember(UDynamicEntryBox*)                         EntryBox_Prerequisites                                      OFFSET(get<T>, {0x318, 8, 0, 0})
	CMember(UVerticalBox*)                             VBox_MainMission                                            OFFSET(get<T>, {0x320, 8, 0, 0})
	CMember(UAthenaSpatialStyleChallengeUnlockReason*) QuestProgression_MainMission                                OFFSET(get<T>, {0x328, 8, 0, 0})
	CMember(UCommonButtonLegacy*)                      Button_PurchaseBattlepass                                   OFFSET(get<T>, {0x330, 8, 0, 0})
	CMember(UFortGameStateComponent_EventLevel*)       EventGameStateComponent                                     OFFSET(get<T>, {0x338, 8, 0, 0})
	SMember(FAthenaSpatialStyleCharacterData)          CharacterData                                               OFFSET(getStruct<T>, {0x340, 48, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.AthenaSpatialStyleChallengeDetails.OnStyleUpdated
	// void OnStyleUpdated();                                                                                                   // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaSpatialStyleChallengeDetails.OnPrerequisitesAndMissionUpdated
	// void OnPrerequisitesAndMissionUpdated(bool bLocked, FText& CharacterName, FText& StyleName);                             // [0x1d9241c] Event|Protected|HasOutParms|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaSpatialStyleChallengeDetails.OnCharacterUpdated
	// void OnCharacterUpdated();                                                                                               // [0x1d9241c] Event|Protected|BlueprintEvent 
};

/// Class /Script/FortniteUI.AthenaSpatialStyleChallengeScreen
/// Size: 0x0040 (0x0004D8 - 0x000518)
class UAthenaSpatialStyleChallengeScreen : public UAthenaSpatialItemPreviewScreen
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1304;

public:
	CMember(UCommonButtonLegacy*)                      Button_Previous                                             OFFSET(get<T>, {0x4D8, 8, 0, 0})
	CMember(UCommonButtonLegacy*)                      Button_Next                                                 OFFSET(get<T>, {0x4E0, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_Title                                                  OFFSET(get<T>, {0x4E8, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_Description                                            OFFSET(get<T>, {0x4F0, 8, 0, 0})
	CMember(UDynamicEntryBox*)                         EntryBox_CharacterChoices                                   OFFSET(get<T>, {0x4F8, 8, 0, 0})
	CMember(UCommonButtonGroupLegacy*)                 ButtonGroup_CharacterChoices                                OFFSET(get<T>, {0x500, 8, 0, 0})
	CMember(UAthenaSpatialStyleChallengeDetails*)      ChallengeDetails_CharacterDetails                           OFFSET(get<T>, {0x508, 8, 0, 0})
	CMember(UAthenaSpatialStyleChallengeScreenData*)   StyleChallengeData                                          OFFSET(get<T>, {0x510, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.AthenaSpatialStyleChallengeScreen.OnShowFirstTimeInfo
	// void OnShowFirstTimeInfo();                                                                                              // [0x1d9241c] Event|Protected|BlueprintEvent 
};

/// Class /Script/FortniteUI.AthenaSpatialStyleChallengeUnlockReason
/// Size: 0x0028 (0x0002E8 - 0x000310)
class UAthenaSpatialStyleChallengeUnlockReason : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 784;

public:
	CMember(UCommonRichTextBlock*)                     RichText_Description                                        OFFSET(get<T>, {0x2E8, 8, 0, 0})
	CMember(UHorizontalBox*)                           HBox_MissionProgress                                        OFFSET(get<T>, {0x2F0, 8, 0, 0})
	CMember(UProgressBar*)                             ProgressBar_PercentComplete_Front                           OFFSET(get<T>, {0x2F8, 8, 0, 0})
	CMember(UProgressBar*)                             ProgressBar_PercentComplete_Back                            OFFSET(get<T>, {0x300, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.AthenaSpatialStyleChallengeUnlockReason.UpdateMissionProgressCount
	// void UpdateMissionProgressCount(int32_t CompletedCount, int32_t RequiredCount);                                          // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaSpatialStyleChallengeUnlockReason.ShowBattlepassPurchaseReason
	// void ShowBattlepassPurchaseReason(FText& InSeason);                                                                      // [0x1d9241c] Event|Protected|HasOutParms|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaSpatialStyleChallengeUnlockReason.ShowBattlepassLevelReason
	// void ShowBattlepassLevelReason(int32_t InLevel);                                                                         // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaSpatialStyleChallengeUnlockReason.OnUnlockReasonUpdated
	// void OnUnlockReasonUpdated(bool bInUnlocked);                                                                            // [0x1d9241c] Event|Protected|BlueprintEvent 
};

/// Class /Script/FortniteUI.FortStoreSkinDetailsPopup
/// Size: 0x0010 (0x000400 - 0x000410)
class UFortStoreSkinDetailsPopup : public UCommonActivatableWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1040;

public:
	CMember(UDataTable*)                               OfferTagTable                                               OFFSET(get<T>, {0x400, 8, 0, 0})
	CMember(UCommonRichTextBlock*)                     RichText_ItemPrompt                                         OFFSET(get<T>, {0x408, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortStoreSkinDetailsPopup.RequuestFadeOut
	// void RequuestFadeOut();                                                                                                  // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortStoreSkinDetailsPopup.RequestFadeIn
	// void RequestFadeIn();                                                                                                    // [0x1d9241c] Event|Protected|BlueprintEvent 
};

/// Class /Script/FortniteUI.AthenaTopBar
/// Size: 0x01A0 (0x000400 - 0x0005A0)
class UAthenaTopBar : public UCommonActivatableWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1440;

public:
	SMember(FDataTableRowHandle)                       NextTabInputAction                                          OFFSET(getStruct<T>, {0x400, 16, 0, 0})
	SMember(FDataTableRowHandle)                       PreviousTabInputAction                                      OFFSET(getStruct<T>, {0x410, 16, 0, 0})
	CMember(TArray<FFortTopBarTabButtonInfo>)          TabsInfo                                                    OFFSET(get<T>, {0x420, 16, 0, 0})
	CMember(UCommonButtonGroupLegacy*)                 ButtonGroup_TopTabs                                         OFFSET(get<T>, {0x430, 8, 0, 0})
	CMember(UEmergencyNoticeBase*)                     Notice_Emergency_Base                                       OFFSET(get<T>, {0x438, 8, 0, 0})
	CMember(TArray<FName>)                             TabsToUnlockOnDownload                                      OFFSET(get<T>, {0x440, 16, 0, 0})
	CMember(UCommonButtonLegacy*)                      Button_MTX                                                  OFFSET(get<T>, {0x520, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_MobileTabLabel                                         OFFSET(get<T>, {0x528, 8, 0, 0})
	CMember(UDynamicEntryBox*)                         EntryBox_TabButtons                                         OFFSET(get<T>, {0x530, 8, 0, 0})
	CMember(UCommonActionWidget*)                      InputActionWidget_Next                                      OFFSET(get<T>, {0x538, 8, 0, 0})
	CMember(UCommonActionWidget*)                      InputActionWidget_Prev                                      OFFSET(get<T>, {0x540, 8, 0, 0})
	CMember(UFortDataDownloadBar*)                     BacchusLobbyDowloadBar                                      OFFSET(get<T>, {0x548, 8, 0, 0})
	SMember(FText)                                     DataDownloadErrorWindowHeaderMessage                        OFFSET(getStruct<T>, {0x550, 24, 0, 0})
	SMember(FText)                                     DataDownloadErrorWindowBodyMessage                          OFFSET(getStruct<T>, {0x568, 24, 0, 0})
	SMember(FName)                                     ConnectionErrorButtonActionInputName                        OFFSET(getStruct<T>, {0x580, 4, 0, 0})
	CMember(UFortConfirmationWindow*)                  DataDownloadErrorWindow                                     OFFSET(get<T>, {0x588, 8, 0, 0})
	CMember(TArray<bool>)                              TabButtonBangIconState                                      OFFSET(get<T>, {0x590, 16, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.AthenaTopBar.ShowDataDownloadTooltip
	// void ShowDataDownloadTooltip(FVector2D& DataDownloadTooltipPosition, ETooltipAlignment& Alignment);                      // [0x1d9241c] Event|Public|HasOutParms|HasDefaults|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaTopBar.OnSetSelectedTab
	// void OnSetSelectedTab(EFortUIFeature SelectedTab);                                                                       // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaTopBar.OnMobileTabLabelChanged
	// void OnMobileTabLabelChanged();                                                                                          // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaTopBar.OnActivityRequested
	// void OnActivityRequested();                                                                                              // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaTopBar.HandleTopNavSelectionChanged
	// void HandleTopNavSelectionChanged(EFortUIFeature Feature);                                                               // [0x1d0cf60] Final|Native|Private|BlueprintCallable 
	// Function /Script/FortniteUI.AthenaTopBar.HandleSocialButtonClicked
	// void HandleSocialButtonClicked();                                                                                        // [0x94c195c] Final|Native|Private|BlueprintCallable 
	// Function /Script/FortniteUI.AthenaTopBar.HandleMainMenuButtonClicked
	// void HandleMainMenuButtonClicked();                                                                                      // [0x84f7f70] Final|Native|Private|BlueprintCallable 
	// Function /Script/FortniteUI.AthenaTopBar.HandleFeatureNavigateRequest
	// void HandleFeatureNavigateRequest(EFortUIFeature Feature);                                                               // [0x94c1510] Final|Native|Private 
	// Function /Script/FortniteUI.AthenaTopBar.HandleButtonGroupSelectionChanged
	// void HandleButtonGroupSelectionChanged(UCommonButtonLegacy* SelectedButton, int32_t ButtonIndex);                        // [0x1d0c9e0] Final|Native|Private 
	// Function /Script/FortniteUI.AthenaTopBar.HandleActiveSeasonDataChanged
	// void HandleActiveSeasonDataChanged(TArray<FString>& ActiveEventFlags);                                                   // [0x94c136c] Final|Native|Private|HasOutParms 
	// Function /Script/FortniteUI.AthenaTopBar.BP_GetActiveTab
	// EFortUIFeature BP_GetActiveTab();                                                                                        // [0x1d9241c] Event|Public|BlueprintEvent|Const 
	// Function /Script/FortniteUI.AthenaTopBar.AddIconToScreen
	// void AddIconToScreen(UCommonLazyImage* Image);                                                                           // [0x1d9241c] Event|Protected|BlueprintEvent 
};

/// Class /Script/FortniteUI.FortPhoenixSeasonDisplayInfo
/// Size: 0x0038 (0x000030 - 0x000068)
class UFortPhoenixSeasonDisplayInfo : public UPrimaryDataAsset
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 104;

public:
	CMember(UMaterialInterface*)                       CenterBackgroundImage                                       OFFSET(get<T>, {0x30, 8, 0, 0})
	CMember(UMaterialInterface*)                       LeftBackgroundImage                                         OFFSET(get<T>, {0x38, 8, 0, 0})
	CMember(UMaterialInterface*)                       RightBackgroundImage                                        OFFSET(get<T>, {0x40, 8, 0, 0})
	SMember(FLinearColor)                              PowerBackgroundColor                                        OFFSET(getStruct<T>, {0x48, 16, 0, 0})
	SMember(FLinearColor)                              LevelTextColor                                              OFFSET(getStruct<T>, {0x58, 16, 0, 0})
};

/// Class /Script/FortniteUI.CampaignTopBar
/// Size: 0x0028 (0x000570 - 0x000598)
class UCampaignTopBar : public UFortActivatablePanel
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1432;

public:
	CMember(UDataTable*)                               PhoenixSeasonDisplayInfoMap                                 OFFSET(get<T>, {0x570, 8, 0, 0})
	CMember(URestrictedCountryRatingIcons*)            RatingIcons_RatingIcons                                     OFFSET(get<T>, {0x590, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.CampaignTopBar.TryGetCurrentPhoenixSeasonDisplayInfo
	// UFortPhoenixSeasonDisplayInfo* TryGetCurrentPhoenixSeasonDisplayInfo();                                                  // [0x94c2598] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.CampaignTopBar.SetOnlineFriendsCount
	// void SetOnlineFriendsCount(int32_t NewOnlineFriendsCount);                                                               // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.CampaignTopBar.SetActiveInvitesCount
	// void SetActiveInvitesCount(int32_t NewActiveInvitesCount);                                                               // [0x1d9241c] Event|Protected|BlueprintEvent 
};

/// Class /Script/FortniteUI.FortBladeMenu
/// Size: 0x0020 (0x000400 - 0x000420)
class UFortBladeMenu : public UCommonActivatableWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1056;

public:
};

/// Class /Script/FortniteUI.FortBladeMenu_MainMenu
/// Size: 0x0208 (0x000420 - 0x000628)
class UFortBladeMenu_MainMenu : public UFortBladeMenu
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1576;

public:
	CMember(UCommonButtonBase*)                        SidebarBackButton                                           OFFSET(get<T>, {0x560, 8, 0, 0})
	CMember(UFortMainMenuButton*)                      Button_Squeegee                                             OFFSET(get<T>, {0x568, 8, 0, 0})
	CMember(UCommonButtonLegacy*)                      Button_BackToHub                                            OFFSET(get<T>, {0x570, 8, 0, 0})
	CMember(UCommonButtonLegacy*)                      Button_Settings                                             OFFSET(get<T>, {0x578, 8, 0, 0})
	CMember(UCommonButtonLegacy*)                      Button_Subscription                                         OFFSET(get<T>, {0x580, 8, 0, 0})
	CMember(UCommonButtonLegacy*)                      Button_MobileBack                                           OFFSET(get<T>, {0x588, 8, 0, 0})
	CMember(UCommonButtonLegacy*)                      Button_SubgameSelection                                     OFFSET(get<T>, {0x590, 8, 0, 0})
	CMember(UCommonButtonLegacy*)                      Button_LeaveExperience                                      OFFSET(get<T>, {0x598, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_BackToHubDisabledReason                                OFFSET(get<T>, {0x5A0, 8, 0, 0})
	CMember(UCommonButtonBase*)                        Button_Store                                                OFFSET(get<T>, {0x5A8, 8, 0, 0})
	CMember(UCommonButtonBase*)                        Button_Locker                                               OFFSET(get<T>, {0x5B0, 8, 0, 0})
	CMember(UCommonButtonLegacy*)                      Button_CodeOfConduct                                        OFFSET(get<T>, {0x5B8, 8, 0, 0})
	CMember(UCommonButtonLegacy*)                      Button_Support                                              OFFSET(get<T>, {0x5C0, 8, 0, 0})
	CMember(UFortMinigameButtons*)                     MinigameButtons                                             OFFSET(get<T>, {0x5C8, 8, 0, 0})
	CMember(URestrictedCountryRatingIcons*)            RatingIcons_RatingIcons                                     OFFSET(get<T>, {0x5D0, 8, 0, 0})
	CMember(UVerticalBox*)                             VerticalBox_ExtensionContainer                              OFFSET(get<T>, {0x5D8, 8, 0, 0})
	CMember(UWidgetSwitcher*)                          Switcher_Menus                                              OFFSET(get<T>, {0x5E0, 8, 0, 0})
	CMember(TWeakObjectPtr<UClass*>)                   ExternalLinkPopupClass                                      OFFSET(get<T>, {0x5E8, 32, 0, 0})
	CMember(TWeakObjectPtr<UClass*>)                   OptionsMenuClass                                            OFFSET(get<T>, {0x608, 32, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortBladeMenu_MainMenu.ViewPurchaseHistory
	// void ViewPurchaseHistory();                                                                                              // [0x9488ab0] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.FortBladeMenu_MainMenu.TryPushWidgetAsModalPanel
	// void TryPushWidgetAsModalPanel(UUserWidget* InWidget);                                                                   // [0x94c270c] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.FortBladeMenu_MainMenu.TryPushWidgetAsActivatablePanel
	// void TryPushWidgetAsActivatablePanel(UUserWidget* InWidget, bool bHideHeader, bool bHideFooter, bool bHideChatWidget);   // [0x94c25bc] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.FortBladeMenu_MainMenu.ShowConsoleWindow
	// void ShowConsoleWindow();                                                                                                // [0x2cf4738] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.FortBladeMenu_MainMenu.ReleaseSavedMenuPosition
	// void ReleaseSavedMenuPosition();                                                                                         // [0x94c1c14] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.FortBladeMenu_MainMenu.RefreshFocus
	// void RefreshFocus();                                                                                                     // [0x94c1bf8] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.FortBladeMenu_MainMenu.IsInCreative
	// bool IsInCreative();                                                                                                     // [0x94c1a90] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.FortBladeMenu_MainMenu.HandleMatchmakingFlowChanged
	// void HandleMatchmakingFlowChanged(bool bFlowActive);                                                                     // [0x94c167c] Final|Native|Private 
	// Function /Script/FortniteUI.FortBladeMenu_MainMenu.FakeSidebarBackButtonClick
	// void FakeSidebarBackButtonClick();                                                                                       // [0x1d9241c] Event|Public|BlueprintEvent 
};

/// Class /Script/FortniteUI.FortBladeMenu_SocialPanel
/// Size: 0x0008 (0x000420 - 0x000428)
class UFortBladeMenu_SocialPanel : public UFortBladeMenu
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1064;

public:
	CMember(UFortSocialPanelView_UserLists*)           SocialPanel_UserLists                                       OFFSET(get<T>, {0x420, 8, 0, 0})
};

/// Class /Script/FortniteUI.FortDualBladeMenu
/// Size: 0x00B0 (0x000400 - 0x0004B0)
class UFortDualBladeMenu : public UCommonActivatableWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1200;

public:
	CMember(TWeakObjectPtr<UClass*>)                   SidebarLeft                                                 OFFSET(get<T>, {0x400, 32, 0, 0})
	CMember(TWeakObjectPtr<UClass*>)                   SidebarRight                                                OFFSET(get<T>, {0x420, 32, 0, 0})
	SMember(FUIActionTag)                              OpenSocialPanelActionTag                                    OFFSET(getStruct<T>, {0x440, 4, 0, 0})
	SMember(FUIActionTag)                              OpenMainMenuActionTag                                       OFFSET(getStruct<T>, {0x444, 4, 0, 0})
	SMember(FUIActionTag)                              SwitchProfileActionTag                                      OFFSET(getStruct<T>, {0x448, 4, 0, 0})
	SMember(FDataTableRowHandle)                       TriggeringSocialPanelInputAction                            OFFSET(getStruct<T>, {0x450, 16, 0, 0})
	SMember(FDataTableRowHandle)                       TriggeringMainMenuInputAction                               OFFSET(getStruct<T>, {0x460, 16, 0, 0})
	SMember(FDataTableRowHandle)                       SwitchProfileInputAction                                    OFFSET(getStruct<T>, {0x470, 16, 0, 0})
	CMember(UFortSocialPanelView_Sidebar*)             Sidebar                                                     OFFSET(get<T>, {0x480, 8, 0, 0})
	CMember(UFortBladeMenu*)                           TopRightWindowControlsWidget                                OFFSET(get<T>, {0x488, 8, 0, 0})
	CMember(UCommonButtonBase*)                        Button_BackBoard                                            OFFSET(get<T>, {0x490, 8, 0, 0})
	CMember(UFortSeasonDataWidget*)                    BladesMenu_XpBar                                            OFFSET(get<T>, {0x498, 8, 0, 0})
	CMember(UNamedSlot*)                               Slot_SidebarLeft                                            OFFSET(get<T>, {0x4A0, 8, 0, 0})
	CMember(UNamedSlot*)                               Slot_SidebarRight                                           OFFSET(get<T>, {0x4A8, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortDualBladeMenu.OnFullScreenWidgetCreated
	// void OnFullScreenWidgetCreated(UWidget* NewWidget);                                                                      // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortDualBladeMenu.HandleBladeMenuRequestedClose
	// void HandleBladeMenuRequestedClose();                                                                                    // [0x34111d4] Final|Native|Private 
};

/// Class /Script/FortniteUI.FortMainMenu
/// Size: 0x0078 (0x0002E8 - 0x000360)
class UFortMainMenu : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 864;

public:
	SMember(FMulticastInlineDelegate)                  OnMainMenuRequestCloseDynamic                               OFFSET(getStruct<T>, {0x2E8, 16, 0, 0})
	SMember(FText)                                     DefaultHelpText                                             OFFSET(getStruct<T>, {0x2F8, 24, 0, 0})
	CMember(UCommonTextBlock*)                         Text_CountDownTimer                                         OFFSET(get<T>, {0x328, 8, 0, 0})
	CMember(UCommonButtonLegacy*)                      Button_LeaveExperience                                      OFFSET(get<T>, {0x330, 8, 0, 0})
	CMember(UCommonUserWidget*)                        LeaveButton                                                 OFFSET(get<T>, {0x338, 8, 0, 0})
	CMember(UCommonTextBlock*)                         ContextualHelpText                                          OFFSET(get<T>, {0x340, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortMainMenu.ShouldShowLeaveExperienceButton
	// bool ShouldShowLeaveExperienceButton();                                                                                  // [0x94c2528] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortMainMenu.RequestCloseMainMenu
	// void RequestCloseMainMenu();                                                                                             // [0x94c1c28] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.FortMainMenu.OnOpenSettings
	// void OnOpenSettings(FName TabNameID, FString SettingToSelect);                                                           // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortMainMenu.OnMainMenuRequestCloseDynamic__DelegateSignature
	// void OnMainMenuRequestCloseDynamic__DelegateSignature();                                                                 // [0x1d9241c] MulticastDelegate|Public|Delegate 
	// Function /Script/FortniteUI.FortMainMenu.OnGetMainMenuFocusWidget
	// UWidget* OnGetMainMenuFocusWidget();                                                                                     // [0x1d9241c] Event|Protected|BlueprintEvent|Const 
	// Function /Script/FortniteUI.FortMainMenu.NeedsCenterWidget
	// bool NeedsCenterWidget();                                                                                                // [0x94c1b9c] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/FortniteUI.FortMainMenuButton
/// Size: 0x0130 (0x0014E0 - 0x001610)
class UFortMainMenuButton : public UCommonButtonLegacy
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 5648;

public:
	SMember(FText)                                     DefaultText                                                 OFFSET(getStruct<T>, {0x14E0, 24, 0, 0})
	SMember(FSlateBrush)                               DefaultBrush                                                OFFSET(getStruct<T>, {0x1500, 192, 0, 0})
	DMember(int32_t)                                   NormalButtonHeight                                          OFFSET(get<int32_t>, {0x15C0, 4, 0, 0})
	DMember(int32_t)                                   MobileButtonHeight                                          OFFSET(get<int32_t>, {0x15C4, 4, 0, 0})
	SMember(FMargin)                                   TextPadding                                                 OFFSET(getStruct<T>, {0x15C8, 16, 0, 0})
	SMember(FMargin)                                   ContentPadding                                              OFFSET(getStruct<T>, {0x15D8, 16, 0, 0})
	CMember(UClass*)                                   MobileStyle                                                 OFFSET(get<T>, {0x15E8, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_Content                                                OFFSET(get<T>, {0x15F0, 8, 0, 0})
	CMember(UImage*)                                   Image_Icon                                                  OFFSET(get<T>, {0x15F8, 8, 0, 0})
	CMember(UBorder*)                                  ContentBorder                                               OFFSET(get<T>, {0x1600, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortMainMenuButton.SetText
	// void SetText(FText& InText);                                                                                             // [0x94c2128] Final|Native|Public|HasOutParms|BlueprintCallable 
};

/// Class /Script/FortniteUI.FortMainMenuButtonExtension
/// Size: 0x0000 (0x001610 - 0x001610)
class UFortMainMenuButtonExtension : public UFortMainMenuButton
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 5648;

public:
};

/// Class /Script/FortniteUI.FortMainMenuLeaveButtonWrapper
/// Size: 0x0030 (0x0002E8 - 0x000318)
class UFortMainMenuLeaveButtonWrapper : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 792;

public:
	CMember(UCommonButtonBase*)                        ButtonInternal                                              OFFSET(get<T>, {0x2E8, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortMainMenuLeaveButtonWrapper.OnTimerVisibilityChanged
	// void OnTimerVisibilityChanged(ESlateVisibility InVisibility);                                                            // [0x1d9241c] Event|Public|BlueprintCallable|BlueprintEvent 
	// Function /Script/FortniteUI.FortMainMenuLeaveButtonWrapper.OnTimerTextChanged
	// void OnTimerTextChanged(FText& Text);                                                                                    // [0x1d9241c] Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// Function /Script/FortniteUI.FortMainMenuLeaveButtonWrapper.OnTextChanged
	// void OnTextChanged(FText& Text);                                                                                         // [0x1d9241c] Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// Function /Script/FortniteUI.FortMainMenuLeaveButtonWrapper.HandleLobbyStarted
	// void HandleLobbyStarted();                                                                                               // [0x94c1668] Final|Native|Private 
	// Function /Script/FortniteUI.FortMainMenuLeaveButtonWrapper.HandleLobbyDisconnected
	// void HandleLobbyDisconnected();                                                                                          // [0x94c1668] Final|Native|Private 
};

/// Class /Script/FortniteUI.FortMinigameButtons
/// Size: 0x0000 (0x0002C0 - 0x0002C0)
class UFortMinigameButtons : public UUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 704;

public:
};

/// Class /Script/FortniteUI.FortMTXButton
/// Size: 0x0010 (0x0014E0 - 0x0014F0)
class UFortMTXButton : public UCommonButtonLegacy
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 5360;

public:
	CMember(UCommonNumericTextBlock*)                  Text_Amount                                                 OFFSET(get<T>, {0x14E0, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortMTXButton.HandleLocalAccountInfoChanged
	// void HandleLocalAccountInfoChanged(FFortPrivateAccountInfo NewInfo);                                                     // [0x23f029c] Final|Native|Private 
	// Function /Script/FortniteUI.FortMTXButton.CancelInterpolation
	// void CancelInterpolation();                                                                                              // [0x94c09f8] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/FortniteUI.FortPhoenixLevelProgressionWidget
/// Size: 0x0000 (0x0002E8 - 0x0002E8)
class UFortPhoenixLevelProgressionWidget : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 744;

public:
};

/// Class /Script/FortniteUI.FortSocialButton
/// Size: 0x0020 (0x0014E0 - 0x001500)
class UFortSocialButton : public UCommonButtonLegacy
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 5376;

public:
	CMember(UCommonTextBlock*)                         Text_NumFriends                                             OFFSET(get<T>, {0x14F0, 8, 0, 0})
	CMember(UImage*)                                   Image_ActiveInviteBang                                      OFFSET(get<T>, {0x14F8, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortSocialButton.OnNumFriendsTextUpdated
	// void OnNumFriendsTextUpdated(int32_t FriendsOnline);                                                                     // [0x1d9241c] Event|Protected|BlueprintEvent 
};

/// Class /Script/FortniteUI.FortTopBarTabButton
/// Size: 0x0060 (0x0014E0 - 0x001540)
class UFortTopBarTabButton : public UCommonButtonLegacy
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 5440;

public:
	DMember(bool)                                      bUseAlternateLabelStyle                                     OFFSET(get<bool>, {0x14F1, 1, 0, 0})
	DMember(bool)                                      bAlwaysShowTextLabel                                        OFFSET(get<bool>, {0x14F2, 1, 0, 0})
	CMember(TArray<UFortPersistentTabObject*>)         TabObjectInstances                                          OFFSET(get<T>, {0x14F8, 16, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortTopBarTabButton.SetTabLabelInfo_Implementation
	// void SetTabLabelInfo_Implementation(FFortTabButtonLabelInfo& TabLabelInfo);                                              // [0x94c2080] Final|RequiredAPI|Native|Public|HasOutParms 
	// Function /Script/FortniteUI.FortTopBarTabButton.IsAlternateLabelStyleUsed
	// bool IsAlternateLabelStyleUsed();                                                                                        // [0x94c1a78] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/FortniteUI.FortTopBarTabTextIconButton
/// Size: 0x0020 (0x001540 - 0x001560)
class UFortTopBarTabTextIconButton : public UFortTopBarTabButton
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 5472;

public:
	CMember(UFortBangWrapper_NUI*)                     BangWrapper                                                 OFFSET(get<T>, {0x1540, 8, 0, 0})
	CMember(UImage*)                                   Image_MobileIcon                                            OFFSET(get<T>, {0x1548, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_DisplayName                                            OFFSET(get<T>, {0x1550, 8, 0, 0})
};

/// Class /Script/FortniteUI.InZoneTitleBarBase
/// Size: 0x0010 (0x000400 - 0x000410)
class UInZoneTitleBarBase : public UCommonActivatableWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1040;

public:
	CMember(UCommonButtonBase*)                        Button_MainMenu                                             OFFSET(get<T>, {0x400, 8, 0, 0})
	CMember(UCommonButtonBase*)                        Button_Close                                                OFFSET(get<T>, {0x408, 8, 0, 0})
};

/// Class /Script/FortniteUI.FortUIGameFeatureAction_AddFrontendTab
/// Size: 0x0188 (0x000028 - 0x0001B0)
class UFortUIGameFeatureAction_AddFrontendTab : public UFortUIGameFeatureAction
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 432;

public:
	SMember(FExternalDynamicTabParams)                 TabParameters                                               OFFSET(getStruct<T>, {0x30, 368, 0, 0})
};

/// Class /Script/FortniteUI.FortUIGameFeatureAction_AddRichTextDecorators
/// Size: 0x0010 (0x000028 - 0x000038)
class UFortUIGameFeatureAction_AddRichTextDecorators : public UFortUIGameFeatureAction
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 56;

public:
	CMember(TArray<FFortRichTextDecoratorExtension>)   AdditionalRichTextDecorators                                OFFSET(get<T>, {0x28, 16, 0, 0})
};

/// Class /Script/FortniteUI.FortUIGameFeatureAction_AddVariantToWidgetMapping
/// Size: 0x0050 (0x000028 - 0x000078)
class UFortUIGameFeatureAction_AddVariantToWidgetMapping : public UFortUIGameFeatureAction
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 120;

public:
	CMember(TMap<UClass*, TWeakObjectPtr>)             AddVariantToWidgetMapping                                   OFFSET(get<T>, {0x28, 80, 0, 0})
};

/// Class /Script/FortniteUI.FortUIGameFeatureAction_AddWidgetAlias
/// Size: 0x0050 (0x000028 - 0x000078)
class UFortUIGameFeatureAction_AddWidgetAlias : public UFortUIGameFeatureAction
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 120;

public:
	CMember(TMap<FGameplayTag, TWeakObjectPtr>)        WidgetAliases                                               OFFSET(get<T>, {0x28, 80, 0, 0})
};

/// Class /Script/FortniteUI.FortUIGameFeatureAction_AssociateFrontendPlugin
/// Size: 0x0030 (0x000028 - 0x000058)
class UFortUIGameFeatureAction_AssociateFrontendPlugin : public UFortUIGameFeatureAction
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 88;

public:
	SMember(FString)                                   PluginName                                                  OFFSET(getStruct<T>, {0x28, 16, 0, 0})
	CMember(TArray<FString>)                           AssociatedMnemonics                                         OFFSET(get<T>, {0x38, 16, 0, 0})
};

/// Class /Script/FortniteUI.FortUIGameFeatureAction_DisableFrontendTabs
/// Size: 0x0028 (0x000028 - 0x000050)
class UFortUIGameFeatureAction_DisableFrontendTabs : public UFortUIGameFeatureAction
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 80;

public:
	SMember(FFrontendDisabledTabs)                     TabOptions                                                  OFFSET(getStruct<T>, {0x28, 32, 0, 0})
};

/// Class /Script/FortniteUI.FortUIGameFeatureAction_ModifyUIStateWidgets
/// Size: 0x00A0 (0x000028 - 0x0000C8)
class UFortUIGameFeatureAction_ModifyUIStateWidgets : public UFortUIGameFeatureAction
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 200;

public:
	CMember(TMap<EFortUIState, FStateWidgetEntry>)     StateWidgetClassOverrides                                   OFFSET(get<T>, {0x28, 80, 0, 0})
	CMember(TMap<FGameplayTag, FTagStateWidgetEntry>)  StateWidgetClassesByTag                                     OFFSET(get<T>, {0x78, 80, 0, 0})
};

/// Class /Script/FortniteUI.FortUIGameFeatureAction_OverrideMotdWidgets
/// Size: 0x0040 (0x000028 - 0x000068)
class UFortUIGameFeatureAction_OverrideMotdWidgets : public UFortUIGameFeatureAction
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 104;

public:
	CMember(TWeakObjectPtr<UClass*>)                   MotdTeaserWidget                                            OFFSET(get<T>, {0x28, 32, 0, 0})
	CMember(TWeakObjectPtr<UClass*>)                   MotdFullScreenWidgetClass                                   OFFSET(get<T>, {0x48, 32, 0, 0})
};

/// Class /Script/FortniteUI.FortUIGameFeatureAction_OverridePostGameUIInfo
/// Size: 0x0020 (0x000028 - 0x000048)
class UFortUIGameFeatureAction_OverridePostGameUIInfo : public UFortUIGameFeatureAction
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 72;

public:
	CMember(TWeakObjectPtr<UFortPlaylistUIInfo*>)      PostGameUIData                                              OFFSET(get<T>, {0x28, 32, 0, 0})
};

/// Class /Script/FortniteUI.FortUIGameFeatureAction_PostFrontendFlowActions
/// Size: 0x0008 (0x000028 - 0x000030)
class UFortUIGameFeatureAction_PostFrontendFlowActions : public UFortUIGameFeatureAction
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 48;

public:
};

/// Class /Script/FortniteUI.FortUIGameFeatureAction_RegisterCustomInGameState
/// Size: 0x0048 (0x000028 - 0x000070)
class UFortUIGameFeatureAction_RegisterCustomInGameState : public UFortUIGameFeatureAction
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 112;

public:
	CMember(TWeakObjectPtr<UFortPlaylist*>)            Playlist                                                    OFFSET(get<T>, {0x28, 32, 0, 0})
	CMember(UFortPlaylist*)                            CachedPlaylist                                              OFFSET(get<T>, {0x48, 8, 0, 0})
	CMember(TWeakObjectPtr<UClass*>)                   CustomInGameStateWidget                                     OFFSET(get<T>, {0x50, 32, 0, 0})
};

/// Class /Script/FortniteUI.FortUIGameFeatureAction_RegisterStandaloneFrontendScreen
/// Size: 0x0040 (0x000028 - 0x000068)
class UFortUIGameFeatureAction_RegisterStandaloneFrontendScreen : public UFortUIGameFeatureAction
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 104;

public:
	CMember(TWeakObjectPtr<UClass*>)                   FrontendScreenClass                                         OFFSET(get<T>, {0x28, 32, 0, 0})
	CMember(TWeakObjectPtr<UClass*>)                   MobileFrontendScreenClass                                   OFFSET(get<T>, {0x48, 32, 0, 0})
};

/// Class /Script/FortniteUI.FortUIGameFeatureAction_RegisterStandaloneLockerScreen
/// Size: 0x0020 (0x000028 - 0x000048)
class UFortUIGameFeatureAction_RegisterStandaloneLockerScreen : public UFortUIGameFeatureAction
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 72;

public:
	CMember(TWeakObjectPtr<UClass*>)                   LockerScreenClass                                           OFFSET(get<T>, {0x28, 32, 0, 0})
};

/// Class /Script/FortniteUI.FortGamepadCustomListItem
/// Size: 0x0010 (0x0014E0 - 0x0014F0)
class UFortGamepadCustomListItem : public UCommonButtonLegacy
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 5360;

public:
};

/// Class /Script/FortniteUI.FortGFNExternalLinkWidgetBase
/// Size: 0x0018 (0x000400 - 0x000418)
class UFortGFNExternalLinkWidgetBase : public UCommonActivatableWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1048;

public:
	CMember(UCommonVisibilitySwitcher*)                Switcher_LinkType                                           OFFSET(get<T>, {0x400, 8, 0, 0})
	CMember(UCommonButtonBase*)                        Button_CloseTouch                                           OFFSET(get<T>, {0x408, 8, 0, 0})
	CMember(UCommonButtonBase*)                        Button_Back                                                 OFFSET(get<T>, {0x410, 8, 0, 0})
};

/// Class /Script/FortniteUI.FortGridWidgetBase
/// Size: 0x0180 (0x000190 - 0x000310)
class UFortGridWidgetBase : public UContentWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 784;

public:
	CMember(UClass*)                                   ClearWidgetType                                             OFFSET(get<T>, {0x190, 8, 0, 0})
	DMember(float)                                     TileWidth                                                   OFFSET(get<float>, {0x198, 4, 0, 0})
	DMember(float)                                     TileHeight                                                  OFFSET(get<float>, {0x19C, 4, 0, 0})
	DMember(int32_t)                                   TilesAcross                                                 OFFSET(get<int32_t>, {0x1A0, 4, 0, 0})
	DMember(int32_t)                                   TilesDown                                                   OFFSET(get<int32_t>, {0x1A4, 4, 0, 0})
	DMember(bool)                                      bShrinkToFit                                                OFFSET(get<bool>, {0x1A8, 1, 0, 0})
	DMember(float)                                     PeekOverflowTilePercentage                                  OFFSET(get<float>, {0x1AC, 4, 0, 0})
	SMember(FMargin)                                   TilePadding                                                 OFFSET(getStruct<T>, {0x1B0, 16, 0, 0})
	SMember(FSlateBrush)                               GridBackground                                              OFFSET(getStruct<T>, {0x1C0, 192, 0, 0})
	SMember(FMargin)                                   GridBackgroundPadding                                       OFFSET(getStruct<T>, {0x280, 16, 0, 0})
	CMember(TArray<UObject*>)                          DataProvider                                                OFFSET(get<T>, {0x290, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnTileGenerated                                             OFFSET(getStruct<T>, {0x2A0, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnTileClicked                                               OFFSET(getStruct<T>, {0x2B0, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnMouseEnterTile                                            OFFSET(getStruct<T>, {0x2C0, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnMouseLeaveTile                                            OFFSET(getStruct<T>, {0x2D0, 16, 0, 0})
	CMember(UClass*)                                   TileWidgetType                                              OFFSET(get<T>, {0x2E0, 8, 0, 0})
	CMember(EGridSortKind)                             SortKind                                                    OFFSET(get<T>, {0x2E8, 1, 0, 0})
	DMember(bool)                                      bReversed                                                   OFFSET(get<bool>, {0x2E9, 1, 0, 0})
	SMember(FDelegateProperty)                         GetSortKeyFor                                               OFFSET(getStruct<T>, {0x2EC, 12, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortGridWidgetBase.SetTileWidth
	// void SetTileWidth(float Width);                                                                                          // [0x94c23a4] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortGridWidgetBase.SetTilesDown
	// void SetTilesDown(int32_t Down);                                                                                         // [0x94c24a8] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortGridWidgetBase.SetTilesAcross
	// void SetTilesAcross(int32_t Across);                                                                                     // [0x94c2428] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortGridWidgetBase.SetTilePadding
	// void SetTilePadding(FMargin Padding);                                                                                    // [0x94c2248] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortGridWidgetBase.SetTileHeight
	// void SetTileHeight(float Height);                                                                                        // [0x94c21c4] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortGridWidgetBase.SetPeekOverflowTilePercentage
	// void SetPeekOverflowTilePercentage(float Percent);                                                                       // [0x94c1e68] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortGridWidgetBase.SetDataProvider
	// void SetDataProvider(TArray<UObject*>& Data);                                                                            // [0x94c1d14] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/FortniteUI.FortGridWidgetBase.SetClearWidgetType
	// void SetClearWidgetType(UClass* InClearWidgetType);                                                                      // [0x94c1c94] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortGridWidgetBase.GetTiles
	// TArray<UFortGridPickerTile*> GetTiles();                                                                                 // [0x94c12fc] Native|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/FortniteUI.FortGridWidgetBase.GetTileForObject
	// UFortGridPickerTile* GetTileForObject(UObject* Object);                                                                  // [0x94c1268] Native|Public|BlueprintCallable|BlueprintPure 
};

/// Class /Script/FortniteUI.FortGridPickerButton
/// Size: 0x0040 (0x000310 - 0x000350)
class UFortGridPickerButton : public UFortGridWidgetBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 848;

public:
	CMember(TEnumAsByte<EMenuPlacement>)               GridPlacement                                               OFFSET(get<T>, {0x308, 1, 0, 0})
	CMember(UFortGridPickerGrid*)                      GridWidget                                                  OFFSET(get<T>, {0x310, 8, 0, 0})
	DMember(bool)                                      bCloseOnTileClicked                                         OFFSET(get<bool>, {0x318, 1, 0, 0})
	SMember(FDelegateProperty)                         GridWidgetDelegate                                          OFFSET(getStruct<T>, {0x31C, 12, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnGridPickerOpenChanged                                     OFFSET(getStruct<T>, {0x328, 16, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortGridPickerButton.SetIsOpen
	// void SetIsOpen(bool ShouldBeOpen);                                                                                       // [0x94c1ddc] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortGridPickerButton.OnIsGridPickerOpenChanged__DelegateSignature
	// void OnIsGridPickerOpenChanged__DelegateSignature(bool IsOpen);                                                          // [0x1d9241c] MulticastDelegate|Public|Delegate 
	// Function /Script/FortniteUI.FortGridPickerButton.OnButtonClicked
	// void OnButtonClicked();                                                                                                  // [0x94c1bd0] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortGridPickerButton.CreateGridWidget__DelegateSignature
	// UFortGridPickerGrid* CreateGridWidget__DelegateSignature();                                                              // [0x1d9241c] Public|Delegate      
};

/// Class /Script/FortniteUI.FortGridPickerGrid
/// Size: 0x0000 (0x0002D0 - 0x0002D0)
class UFortGridPickerGrid : public UFortUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 720;

public:
};

/// Class /Script/FortniteUI.FortGridPickerTile
/// Size: 0x0010 (0x0002D0 - 0x0002E0)
class UFortGridPickerTile : public UFortUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 736;

public:
	CMember(UObject*)                                  Data                                                        OFFSET(get<T>, {0x2D0, 8, 0, 0})
	CMember(UFortGridWidgetBase*)                      Owner                                                       OFFSET(get<T>, {0x2D8, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortGridPickerTile.SetData
	// void SetData(UObject* InData);                                                                                           // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortGridPickerTile.OnClicked
	// void OnClicked();                                                                                                        // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortGridPickerTile.ForwardClicked
	// void ForwardClicked();                                                                                                   // [0x94c10e4] Final|Native|Protected|BlueprintCallable 
};

/// Class /Script/FortniteUI.FortGridWidget
/// Size: 0x0010 (0x000310 - 0x000320)
class UFortGridWidget : public UFortGridWidgetBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 800;

public:
};

/// Class /Script/FortniteUI.FortHelpTreeItemBase
/// Size: 0x0010 (0x0014E0 - 0x0014F0)
class UFortHelpTreeItemBase : public UCommonButtonLegacy
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 5360;

public:
	CMember(UFortHelpItem*)                            HelpItem                                                    OFFSET(get<T>, {0x14E8, 8, 0, 0})
};

/// Class /Script/FortniteUI.FortNotificationEntry
/// Size: 0x0040 (0x0002E8 - 0x000328)
class UFortNotificationEntry : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 808;

public:
	SMember(FMulticastInlineDelegate)                  FinishedDisplayingNotification                              OFFSET(getStruct<T>, {0x2F0, 16, 0, 0})
	DMember(float)                                     DisplayTime                                                 OFFSET(get<float>, {0x300, 4, 0, 0})
	DMember(float)                                     MinDisplayTime                                              OFFSET(get<float>, {0x304, 4, 0, 0})
	DMember(bool)                                      bRushDisplay                                                OFFSET(get<bool>, {0x308, 1, 0, 0})
	DMember(int32_t)                                   RushWidgetThreshold                                         OFFSET(get<int32_t>, {0x30C, 4, 0, 0})
	CMember(TArray<UFortNotificationEntry*>)           LinkedNotifications                                         OFFSET(get<T>, {0x310, 16, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortNotificationEntry.StartNotificationOutro
	// void StartNotificationOutro();                                                                                           // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.FortNotificationEntry.StartNotificationIntro
	// void StartNotificationIntro();                                                                                           // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortNotificationEntry.NativeStartNotificationOutro
	// void NativeStartNotificationOutro();                                                                                     // [0x94c1b88] Final|Native|Public  
	// Function /Script/FortniteUI.FortNotificationEntry.FinishNotificationOutro
	// void FinishNotificationOutro();                                                                                          // [0x1f2d1ac] Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortNotificationEntry.FinishNotificationIntro
	// void FinishNotificationIntro();                                                                                          // [0x8c92878] Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortNotificationEntry.AddNotificationBackIntoPool
	// void AddNotificationBackIntoPool();                                                                                      // [0x1d9241c] Event|Public|BlueprintEvent 
};

/// Class /Script/FortniteUI.FortNotificationEntry_AssistedPlayer
/// Size: 0x0010 (0x000328 - 0x000338)
class UFortNotificationEntry_AssistedPlayer : public UFortNotificationEntry
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 824;

public:
	CMember(UCommonTextBlock*)                         Text_Header                                                 OFFSET(get<T>, {0x328, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_Description                                            OFFSET(get<T>, {0x330, 8, 0, 0})
};

/// Class /Script/FortniteUI.FortNotificationEntry_LevelUp
/// Size: 0x0030 (0x000328 - 0x000358)
class UFortNotificationEntry_LevelUp : public UFortNotificationEntry
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 856;

public:
	CMember(UCommonRichTextBlock*)                     Text_Header                                                 OFFSET(get<T>, {0x330, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_Description                                            OFFSET(get<T>, {0x338, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_RewardType                                             OFFSET(get<T>, {0x340, 8, 0, 0})
	CMember(UFortLazyImage*)                           Reward_Preview                                              OFFSET(get<T>, {0x348, 8, 0, 0})
	CMember(UFortLazyImage*)                           Reward_Preview_Shadow                                       OFFSET(get<T>, {0x350, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortNotificationEntry_LevelUp.UpdateQuestRewardVisuals
	// void UpdateQuestRewardVisuals(UFortItemDefinition* RewardItem, EFortRarity QuestRarity);                                 // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.FortNotificationEntry_LevelUp.UpdateLevelUpVisuals
	// void UpdateLevelUpVisuals(UFortItemDefinition* RewardItem);                                                              // [0x1d9241c] Event|Public|BlueprintEvent 
};

/// Class /Script/FortniteUI.FortNotificationEntry_MiniChallenge
/// Size: 0x0018 (0x000328 - 0x000340)
class UFortNotificationEntry_MiniChallenge : public UFortNotificationEntry
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 832;

public:
	CMember(TWeakObjectPtr<UFortQuestItem*>)           CompletedQuest                                              OFFSET(get<T>, {0x328, 8, 0, 0})
	CMember(UAthenaMiniChallengeEntry*)                MiniChallenge                                               OFFSET(get<T>, {0x330, 8, 0, 0})
	CMember(UXpEarnedSubNotification*)                 XpSubNotification                                           OFFSET(get<T>, {0x338, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortNotificationEntry_MiniChallenge.TryToUpdateXpCompWithQuestReward
	// void TryToUpdateXpCompWithQuestReward();                                                                                 // [0x94c2798] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/FortniteUI.FortMultipleReceivedItemWidget
/// Size: 0x0018 (0x0002E8 - 0x000300)
class UFortMultipleReceivedItemWidget : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 768;

public:
	CMember(UFortLazyImage*)                           Reward_Preview                                              OFFSET(get<T>, {0x2F0, 8, 0, 0})
	CMember(UFortLazyImage*)                           Reward_Preview_Shadow                                       OFFSET(get<T>, {0x2F8, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortMultipleReceivedItemWidget.UpdateVisuals
	// void UpdateVisuals(UFortItemDefinition* RewardItem, int32_t ItemQuantity);                                               // [0x1d9241c] Event|Public|BlueprintEvent 
};

/// Class /Script/FortniteUI.FortNotificationEntry_MultipleReceivedItem
/// Size: 0x0030 (0x000328 - 0x000358)
class UFortNotificationEntry_MultipleReceivedItem : public UFortNotificationEntry
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 856;

public:
	DMember(bool)                                      bWillReceiveBonus                                           OFFSET(get<bool>, {0x330, 1, 0, 0})
	CMember(UCommonTextBlock*)                         Text_Header                                                 OFFSET(get<T>, {0x338, 8, 0, 0})
	CMember(UFortMultipleReceivedItemWidget*)          DisplayItem                                                 OFFSET(get<T>, {0x340, 8, 0, 0})
	CMember(UFortMultipleReceivedItemWidget*)          DisplayItem1                                                OFFSET(get<T>, {0x348, 8, 0, 0})
	CMember(UFortMultipleReceivedItemWidget*)          DisplayItem2                                                OFFSET(get<T>, {0x350, 8, 0, 0})
};

/// Class /Script/FortniteUI.FortNotificationEntry_PunchCard
/// Size: 0x0018 (0x000328 - 0x000340)
class UFortNotificationEntry_PunchCard : public UFortNotificationEntry
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 832;

public:
	CMember(TWeakObjectPtr<UFortQuestItem*>)           CompletedQuest                                              OFFSET(get<T>, {0x328, 8, 0, 0})
	CMember(UAthenaChallengePunchCard*)                PunchCard                                                   OFFSET(get<T>, {0x330, 8, 0, 0})
	CMember(UXpEarnedSubNotification*)                 XpSubNotification                                           OFFSET(get<T>, {0x338, 8, 0, 0})
};

/// Class /Script/FortniteUI.FortNotificationEntry_Quest
/// Size: 0x0080 (0x000328 - 0x0003A8)
class UFortNotificationEntry_Quest : public UFortNotificationEntry
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 936;

public:
	CMember(TArray<FName>)                             BoundActions                                                OFFSET(get<T>, {0x328, 16, 0, 0})
	DMember(int32_t)                                   GoalCount                                                   OFFSET(get<int32_t>, {0x338, 4, 0, 0})
	DMember(int32_t)                                   CurrentCount                                                OFFSET(get<int32_t>, {0x33C, 4, 0, 0})
	DMember(int32_t)                                   PreviousCount                                               OFFSET(get<int32_t>, {0x340, 4, 0, 0})
	DMember(bool)                                      bNeedsStagedNotification                                    OFFSET(get<bool>, {0x344, 1, 0, 0})
	CMember(UCommonTextBlock*)                         Text_Header                                                 OFFSET(get<T>, {0x348, 8, 0, 0})
	CMember(UAthenaChallengeDateTimeTextBlock*)        DateTimeText_TimeRemaining                                  OFFSET(get<T>, {0x350, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_Description                                            OFFSET(get<T>, {0x358, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_CategoryDisplay                                        OFFSET(get<T>, {0x360, 8, 0, 0})
	CMember(URichTextBlock*)                           RichText_ObjectivesCompleted                                OFFSET(get<T>, {0x368, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_FlavorText                                             OFFSET(get<T>, {0x370, 8, 0, 0})
	CMember(UBorder*)                                  Border_AssistedBy                                           OFFSET(get<T>, {0x378, 8, 0, 0})
	CMember(UXpEarnedSubNotification*)                 XpSubNotification                                           OFFSET(get<T>, {0x380, 8, 0, 0})
	CMember(UButton*)                                  Button_MobileClickCatcher                                   OFFSET(get<T>, {0x388, 8, 0, 0})
	CMember(TWeakObjectPtr<UFortQuestItem*>)           WeakQuest                                                   OFFSET(get<T>, {0x390, 8, 0, 0})
	SMember(FName)                                     ObjectiveName                                               OFFSET(getStruct<T>, {0x398, 4, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortNotificationEntry_Quest.UpdateQuestVisuals
	// void UpdateQuestVisuals(FFortChallengeSetStyle& DisplayStyle);                                                           // [0x1d9241c] Event|Public|HasOutParms|BlueprintEvent 
	// Function /Script/FortniteUI.FortNotificationEntry_Quest.UpdateDefaultObjectiveVisuals
	// void UpdateDefaultObjectiveVisuals();                                                                                    // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.FortNotificationEntry_Quest.TrackCurrentQuest
	// void TrackCurrentQuest();                                                                                                // [0x94c2560] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortNotificationEntry_Quest.ShowNextStagedObjectiveInformation
	// void ShowNextStagedObjectiveInformation();                                                                               // [0x94c254c] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.FortNotificationEntry_Quest.SetAssistData
	// void SetAssistData(bool bWasAssisted, FString OtherPlayersName);                                                         // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.FortNotificationEntry_Quest.OnUpdateNotificationBackground
	// void OnUpdateNotificationBackground(TWeakObjectPtr<UObject*>& AssetToDisplay, bool bUseRarityContainer, bool bIsDailyPunchcardQuest); // [0x1d9241c] Event|Protected|HasOutParms|BlueprintEvent 
	// Function /Script/FortniteUI.FortNotificationEntry_Quest.OnPlayRushedNotificationIntro
	// void OnPlayRushedNotificationIntro(float Rate);                                                                          // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.FortNotificationEntry_Quest.OnEnableCompleteFlavorText
	// void OnEnableCompleteFlavorText(bool IsEnabled);                                                                         // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.FortNotificationEntry_Quest.BP_OnTimerSet
	// void BP_OnTimerSet(EAthenaChallengeTimerState TimerState);                                                               // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortNotificationEntry_Quest.BP_OnRaritySet
	// void BP_OnRaritySet(EFortRarity Rarity);                                                                                 // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortNotificationEntry_Quest.BP_OnInitializeQuestNotificationFinished
	// void BP_OnInitializeQuestNotificationFinished();                                                                         // [0x1d9241c] Event|Protected|BlueprintEvent 
};

/// Class /Script/FortniteUI.FortNotificationEntry_ReceivedItem
/// Size: 0x0030 (0x000328 - 0x000358)
class UFortNotificationEntry_ReceivedItem : public UFortNotificationEntry
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 856;

public:
	CMember(UCommonTextBlock*)                         Text_RewardType                                             OFFSET(get<T>, {0x330, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_Header                                                 OFFSET(get<T>, {0x338, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_Description                                            OFFSET(get<T>, {0x340, 8, 0, 0})
	CMember(UFortLazyImage*)                           Reward_Preview                                              OFFSET(get<T>, {0x348, 8, 0, 0})
	CMember(UFortLazyImage*)                           Reward_Preview_Shadow                                       OFFSET(get<T>, {0x350, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortNotificationEntry_ReceivedItem.UpdateVisuals
	// void UpdateVisuals(UFortItemDefinition* RewardItem, int32_t ItemQuantity);                                               // [0x1d9241c] Event|Public|BlueprintEvent 
};

/// Class /Script/FortniteUI.FortPickupManagerWidget
/// Size: 0x0030 (0x0002E8 - 0x000318)
class UFortPickupManagerWidget : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 792;

public:
	CMember(UPanelWidget*)                             Panel_AllResources                                          OFFSET(get<T>, {0x2E8, 8, 0, 0})
	CMember(TArray<UFortResourceWidget*>)              AdditionalResourceWidgetsToTrack                            OFFSET(get<T>, {0x2F0, 16, 0, 0})
	CMember(TArray<UFortResourceWidget*>)              ResourceWidgets                                             OFFSET(get<T>, {0x300, 16, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortPickupManagerWidget.OnResourceWidgetVisibilityChanged
	// void OnResourceWidgetVisibilityChanged(UFortResourceWidget* ResourceWidget);                                             // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortPickupManagerWidget.OnResourceItemPickedUp
	// void OnResourceItemPickedUp(UFortWorldItem* Item, int32_t Count);                                                        // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortPickupManagerWidget.OnRefreshCounts
	// void OnRefreshCounts();                                                                                                  // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortPickupManagerWidget.OnRefreshActiveResource
	// void OnRefreshActiveResource(TEnumAsByte<EFortResourceType> CurrentResourceType);                                        // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortPickupManagerWidget.OnOutOfBuildingResources
	// void OnOutOfBuildingResources();                                                                                         // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortPickupManagerWidget.OnLowOnBuildingResources
	// void OnLowOnBuildingResources();                                                                                         // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortPickupManagerWidget.HandleWorldItemsChanged
	// void HandleWorldItemsChanged();                                                                                          // [0x94c1a64] Final|Native|Private 
	// Function /Script/FortniteUI.FortPickupManagerWidget.HandleWorldItemListChanged
	// void HandleWorldItemListChanged(TArray<UFortWorldItem*>& ItemsAdded, TArray<UFortWorldItem*>& ItemsRemoved);             // [0x94c1978] Final|Native|Private|HasOutParms 
	// Function /Script/FortniteUI.FortPickupManagerWidget.HandleSetWorldResourceWidgetVisibility
	// void HandleSetWorldResourceWidgetVisibility(TEnumAsByte<EFortResourceType> ResourceType, bool bVisible);                 // [0x94c1894] Final|Native|Private 
	// Function /Script/FortniteUI.FortPickupManagerWidget.HandleHUDElementVisibilityRefreshed
	// void HandleHUDElementVisibilityRefreshed();                                                                              // [0x94c1590] Final|Native|Private 
};

/// Class /Script/FortniteUI.FortPopUpCenterMessageModalPanel
/// Size: 0x0008 (0x000570 - 0x000578)
class UFortPopUpCenterMessageModalPanel : public UFortActivatablePanel
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1400;

public:
	CMember(UCommonUserWidget*)                        Button_Leave                                                OFFSET(get<T>, {0x570, 8, 0, 0})
};

/// Class /Script/FortniteUI.FortResourceWidget
/// Size: 0x0038 (0x0002E8 - 0x000320)
class UFortResourceWidget : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 800;

public:
	CMember(UFortLazyImage*)                           LazyImage_ResourceIcon                                      OFFSET(get<T>, {0x2F0, 8, 0, 0})
	CMember(UCommonNumericTextBlock*)                  NumericText_ResourceCount                                   OFFSET(get<T>, {0x2F8, 8, 0, 0})
	CMember(UCommonNumericTextBlock*)                  NumericText_ResourceCost                                    OFFSET(get<T>, {0x300, 8, 0, 0})
	CMember(UFortResourceItemDefinition*)              ItemDefinition                                              OFFSET(get<T>, {0x308, 8, 0, 0})
	CMember(TEnumAsByte<EFortResourceType>)            ResourceType                                                OFFSET(get<T>, {0x310, 1, 0, 0})
	DMember(bool)                                      bCanUseShorthandCount                                       OFFSET(get<bool>, {0x311, 1, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortResourceWidget.SetResourceCost
	// void SetResourceCost(int32_t ResourceCost);                                                                              // [0x94c1eec] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortResourceWidget.OnResourceCountUpdated
	// void OnResourceCountUpdated(int32_t CurrentCount, int32_t MaxCount, bool bHasInfiniteResources);                         // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortResourceWidget.OnResourceCostSet
	// void OnResourceCostSet(int32_t ResourceCount, int32_t ResourceCost, bool bHasInfiniteResources);                         // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortResourceWidget.OnIsActiveResourceChanged
	// void OnIsActiveResourceChanged(bool bIsActiveResource);                                                                  // [0x1d9241c] Event|Protected|BlueprintEvent 
};

/// Class /Script/FortniteUI.FortServerMessageWidget
/// Size: 0x0008 (0x000328 - 0x000330)
class UFortServerMessageWidget : public UFortHUDElementWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 816;

public:
};

/// Class /Script/FortniteUI.PapayaPostGameOptions
/// Size: 0x0008 (0x000490 - 0x000498)
class UPapayaPostGameOptions : public UFortPostGameScreen
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1176;

public:
	CMember(UFortPostGameMenuListView*)                ListView_PostGameMenu                                       OFFSET(get<T>, {0x490, 8, 0, 0})
};

/// Class /Script/FortniteUI.PickupStream
/// Size: 0x0040 (0x000328 - 0x000368)
class UPickupStream : public UFortHUDElementWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 872;

public:
	CMember(TArray<FPickupStreamEntry>)                PickupDisplayEntries                                        OFFSET(get<T>, {0x328, 16, 0, 0})
	DMember(int32_t)                                   MaxDisplayedItems                                           OFFSET(get<int32_t>, {0x348, 4, 0, 0})
	CMember(UClass*)                                   PickupEntryWidgetClass                                      OFFSET(get<T>, {0x350, 8, 0, 0})
	DMember(float)                                     ExpirationTime                                              OFFSET(get<float>, {0x358, 4, 0, 0})
	CMember(UVerticalBox*)                             VerticalBox_PickupMessages                                  OFFSET(get<T>, {0x360, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.PickupStream.RefreshPickupEntry
	// void RefreshPickupEntry(UUserWidget* EntryWidget, TWeakObjectPtr<UTexture2D*>& Icon, int32_t Count);                     // [0x1d9241c] Event|Protected|HasOutParms|BlueprintEvent 
	// Function /Script/FortniteUI.PickupStream.HandleItemPickedUp
	// void HandleItemPickedUp(UFortWorldItem* WorldItem, int32_t Count);                                                       // [0x94c15a4] Final|Native|Protected 
};

/// Class /Script/FortniteUI.XpEarnedSubNotification
/// Size: 0x0028 (0x0002E8 - 0x000310)
class UXpEarnedSubNotification : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 784;

public:
	CMember(UFortQuestItem*)                           QuestItem                                                   OFFSET(get<T>, {0x2E8, 8, 0, 0})
	DMember(bool)                                      bHasDisplayedXp                                             OFFSET(get<bool>, {0x2F0, 1, 0, 0})
	DMember(bool)                                      bHasDisplayedBars                                           OFFSET(get<bool>, {0x2F1, 1, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.XpEarnedSubNotification.StartNotificationIntro
	// void StartNotificationIntro();                                                                                           // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.XpEarnedSubNotification.SetRewardValue
	// void SetRewardValue(int32_t RewardValue, EFortEarnedSubRewardType RewardType);                                           // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.XpEarnedSubNotification.FinishedDisplayAnim
	// void FinishedDisplayAnim();                                                                                              // [0x94c0a24] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/FortniteUI.FortSwipePanel
/// Size: 0x0158 (0x000190 - 0x0002E8)
class UFortSwipePanel : public UContentWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 744;

public:
	SMember(FVector2D)                                 SwipeThreshold                                              OFFSET(getStruct<T>, {0x190, 16, 0, 0})
	DMember(bool)                                      bBeginSwipeOnPointerEnter                                   OFFSET(get<bool>, {0x1A0, 1, 0, 0})
	DMember(bool)                                      bConsumePointerInput                                        OFFSET(get<bool>, {0x1A1, 1, 0, 0})
	SMember(FMulticastInlineDelegate)                  BP_OnSwipeLeft                                              OFFSET(getStruct<T>, {0x1A8, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  BP_OnSwipeRight                                             OFFSET(getStruct<T>, {0x1B8, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  BP_OnSwipeUp                                                OFFSET(getStruct<T>, {0x1C8, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  BP_OnSwipeDown                                              OFFSET(getStruct<T>, {0x1D8, 16, 0, 0})
	SMember(FFortSwipeDetector)                        SwipeDetector                                               OFFSET(getStruct<T>, {0x1E8, 144, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortSwipePanel.GetSwipeInfo
	// void GetSwipeInfo(int32_t& OutIndex, FVector2D& OutSwipePercentage);                                                     // [0x94c1188] Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/FortniteUI.FortSwipePanelSlot
/// Size: 0x0010 (0x000038 - 0x000048)
class UFortSwipePanelSlot : public UPanelSlot
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 72;

public:
};

/// Class /Script/FortniteUI.FortItemManagementCustomFilterModalWidget
/// Size: 0x0068 (0x000570 - 0x0005D8)
class UFortItemManagementCustomFilterModalWidget : public UFortActivatablePanel
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1496;

public:
	CMember(TWeakObjectPtr<UFortItemManagementScreen*>) HostItemManagementScreen                                   OFFSET(get<T>, {0x570, 8, 0, 0})
	CMember(TArray<EFortInventoryCustomFilter>)        AvailableFilters                                            OFFSET(get<T>, {0x578, 16, 0, 0})
	CMember(TSet<EFortInventoryCustomFilter>)          LocalCustomFilterSet                                        OFFSET(get<T>, {0x588, 80, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortItemManagementCustomFilterModalWidget.ToggleFilter
	// void ToggleFilter(EFortInventoryCustomFilter Filter);                                                                    // [0x9505134] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.FortItemManagementCustomFilterModalWidget.OnEndCommitCustomFilter
	// void OnEndCommitCustomFilter(bool bWasSuccessful);                                                                       // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortItemManagementCustomFilterModalWidget.OnCustomFilterSetUpdated
	// void OnCustomFilterSetUpdated();                                                                                         // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortItemManagementCustomFilterModalWidget.OnBeginCommitCustomFilter
	// void OnBeginCommitCustomFilter();                                                                                        // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortItemManagementCustomFilterModalWidget.IsCustomFilterEnabled
	// bool IsCustomFilterEnabled(EFortInventoryCustomFilter Filter);                                                           // [0x9503d44] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortItemManagementCustomFilterModalWidget.EnableAllFilters
	// void EnableAllFilters();                                                                                                 // [0x94fe0e4] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.FortItemManagementCustomFilterModalWidget.DisableAllFilters
	// void DisableAllFilters();                                                                                                // [0x94fdffc] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.FortItemManagementCustomFilterModalWidget.CommitCustomFilters
	// void CommitCustomFilters();                                                                                              // [0x94fdc40] Final|Native|Protected|BlueprintCallable 
};

/// Class /Script/FortniteUI.FortItemManagementEquipSlot
/// Size: 0x0010 (0x0002D0 - 0x0002E0)
class UFortItemManagementEquipSlot : public UFortUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 736;

public:
	DMember(int32_t)                                   SlotIndex                                                   OFFSET(get<int32_t>, {0x2D0, 4, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortItemManagementEquipSlot.WillAcceptItem
	// bool WillAcceptItem(UFortItem* InItem);                                                                                  // [0x9505408] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortItemManagementEquipSlot.UpdateInventoryChangedDelegate
	// void UpdateInventoryChangedDelegate();                                                                                   // [0x95053e0] Final|Native|Protected|BlueprintCallable 
};

/// Class /Script/FortniteUI.FortItemManagementEquipSlotOverlayBox
/// Size: 0x0008 (0x0002D0 - 0x0002D8)
class UFortItemManagementEquipSlotOverlayBox : public UFortUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 728;

public:
	CMember(UImage*)                                   Box_Fill                                                    OFFSET(get<T>, {0x2D0, 8, 0, 0})
};

/// Class /Script/FortniteUI.FortItemManagementInventoryPanel
/// Size: 0x01D8 (0x0002E8 - 0x0004C0)
class UFortItemManagementInventoryPanel : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1216;

public:
	SMember(FName)                                     CurrentFilterName                                           OFFSET(getStruct<T>, {0x338, 4, 0, 0})
	CMember(EInventoryContentSortType)                 CurrentSortType                                             OFFSET(get<T>, {0x33C, 1, 0, 0})
	CMember(UClass*)                                   FilterTabButtonType                                         OFFSET(get<T>, {0x340, 8, 0, 0})
	CMember(UClass*)                                   FilterTabButtonStyle                                        OFFSET(get<T>, {0x348, 8, 0, 0})
	CMember(TArray<FFortItemManagementInventoryFilterTabLabelInfo>) FilterTabLabelInfoArray                        OFFSET(get<T>, {0x350, 16, 0, 0})
	CMember(UFortTabListWidgetBase_Legacy*)            FilterTabList                                               OFFSET(get<T>, {0x360, 8, 0, 0})
	CMember(UCommonLoadGuard*)                         TileViewLoadGuard                                           OFFSET(get<T>, {0x368, 8, 0, 0})
	CMember(UFortItemTileView*)                        TileView                                                    OFFSET(get<T>, {0x370, 8, 0, 0})
	CMember(UPanelWidget*)                             CraftingPanel                                               OFFSET(get<T>, {0x378, 8, 0, 0})
	CMember(UCommonLoadGuard*)                         CraftingTileViewLoadGuard                                   OFFSET(get<T>, {0x380, 8, 0, 0})
	CMember(UFortItemTileView*)                        CraftingTileView                                            OFFSET(get<T>, {0x388, 8, 0, 0})
	CMember(UPanelWidget*)                             StoragePanel                                                OFFSET(get<T>, {0x390, 8, 0, 0})
	CMember(UCommonLoadGuard*)                         StorageTileViewLoadGuard                                    OFFSET(get<T>, {0x398, 8, 0, 0})
	CMember(UFortItemTileView*)                        StorageTileView                                             OFFSET(get<T>, {0x3A0, 8, 0, 0})
	CMember(UCommonTextBlock*)                         MulchRestrictionReasonText                                  OFFSET(get<T>, {0x3A8, 8, 0, 0})
	CMember(EFortItemCardSize)                         SmallTileSize                                               OFFSET(get<T>, {0x3B0, 1, 0, 0})
	CMember(EFortItemCardSize)                         LargeTileSize                                               OFFSET(get<T>, {0x3B1, 1, 0, 0})
	CMember(TWeakObjectPtr<UFortItemManagementScreen*>) HostItemManagementScreen                                   OFFSET(get<T>, {0x3B4, 8, 0, 0})
	DMember(bool)                                      bCanDragItems                                               OFFSET(get<bool>, {0x3BC, 1, 0, 0})
	CMember(TArray<FQuickbarEquipSlotIndicesConfig>)   DefaultQuickbarEquipSlotIndicesConfigs                      OFFSET(get<T>, {0x3C0, 16, 0, 0})
	CMember(TMap<FName, int32_t>)                      QuickbarEquipSlotIndices                                    OFFSET(get<T>, {0x3D0, 80, 0, 0})
	CMember(UFortInventoryContext*)                    InventoryContext                                            OFFSET(get<T>, {0x4B0, 8, 0, 0})
	CMember(UWidget*)                                  WidgetToCenter                                              OFFSET(get<T>, {0x4B8, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortItemManagementInventoryPanel.UpdateSchematicTiles
	// void UpdateSchematicTiles();                                                                                             // [0x95053f4] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortItemManagementInventoryPanel.ToggleTileSize
	// void ToggleTileSize();                                                                                                   // [0x9505294] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortItemManagementInventoryPanel.TogglePrioritizeFavorites
	// void TogglePrioritizeFavorites();                                                                                        // [0x95051e4] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortItemManagementInventoryPanel.SwitchPanelFocus
	// void SwitchPanelFocus();                                                                                                 // [0x9505120] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortItemManagementInventoryPanel.SetSortType
	// void SetSortType(EInventoryContentSortType SortType);                                                                    // [0x9504ed8] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.FortItemManagementInventoryPanel.SetFilter
	// void SetFilter(FName FilterName);                                                                                        // [0x95047f0] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.FortItemManagementInventoryPanel.RequestFocusEquipSlots
	// void RequestFocusEquipSlots();                                                                                           // [0x9504304] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortItemManagementInventoryPanel.RefreshCraftingSort
	// void RefreshCraftingSort();                                                                                              // [0x95042f0] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortItemManagementInventoryPanel.OnMulchRestrictionTextShown
	// void OnMulchRestrictionTextShown(bool bShown);                                                                           // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortItemManagementInventoryPanel.MarkAllItemsAsSeen
	// void MarkAllItemsAsSeen();                                                                                               // [0x9503fe8] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortItemManagementInventoryPanel.IsSwitchPanelAvailable
	// bool IsSwitchPanelAvailable();                                                                                           // [0x9503ed4] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortItemManagementInventoryPanel.IsSelectedItem
	// bool IsSelectedItem(UFortItem* Item);                                                                                    // [0x9503e20] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortItemManagementInventoryPanel.HasUnlockedStorageSlots
	// bool HasUnlockedStorageSlots();                                                                                          // [0x9503bac] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortItemManagementInventoryPanel.HandleSetOfItemsToMulchChangedBP
	// void HandleSetOfItemsToMulchChangedBP();                                                                                 // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortItemManagementInventoryPanel.HandleQuickBarChangedBP
	// void HandleQuickBarChangedBP(EFortQuickBars QuickBarType);                                                               // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortItemManagementInventoryPanel.HandleItemBeginDrag
	// void HandleItemBeginDrag(UObject* Item);                                                                                 // [0x9500864] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortItemManagementInventoryPanel.HandleInventoryUpdatedEvent
	// void HandleInventoryUpdatedEvent();                                                                                      // [0x9500850] Final|Native|Private 
	// Function /Script/FortniteUI.FortItemManagementInventoryPanel.HandleFocusEquipSlotsBP
	// void HandleFocusEquipSlotsBP();                                                                                          // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortItemManagementInventoryPanel.HandleFilterTabSelected
	// void HandleFilterTabSelected(FName TabNameID);                                                                           // [0x95007bc] Final|Native|Private 
	// Function /Script/FortniteUI.FortItemManagementInventoryPanel.HandleFilterTabButtonCreated
	// void HandleFilterTabButtonCreated(FName TabNameID, UCommonButtonBase* TabButton);                                        // [0x95006fc] Final|Native|Private 
	// Function /Script/FortniteUI.FortItemManagementInventoryPanel.HandleDifferentSortTypeSetBP
	// void HandleDifferentSortTypeSetBP();                                                                                     // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortItemManagementInventoryPanel.HandleDifferentItemManagementModeSetBP
	// void HandleDifferentItemManagementModeSetBP();                                                                           // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortItemManagementInventoryPanel.HandleDifferentFrontendInventoryFilterSetBP
	// void HandleDifferentFrontendInventoryFilterSetBP();                                                                      // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortItemManagementInventoryPanel.HandleDifferentFilterSetBP
	// void HandleDifferentFilterSetBP();                                                                                       // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortItemManagementInventoryPanel.HandleCustomInventoryFilterChanged
	// void HandleCustomInventoryFilterChanged();                                                                               // [0x95006d4] Final|Native|Protected 
	// Function /Script/FortniteUI.FortItemManagementInventoryPanel.HandleCursorModeChangedBP
	// void HandleCursorModeChangedBP(bool bCursorModeEnabled, FName ActionName, UUserWidget* CursorModeContentWidget);         // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortItemManagementInventoryPanel.HandleCursorModeChanged
	// void HandleCursorModeChanged(bool bCursorModeEnabled, FName ActionName, UUserWidget* CursorModeContentWidget);           // [0x95005cc] Final|Native|Private 
	// Function /Script/FortniteUI.FortItemManagementInventoryPanel.HandleCraftItemStarted
	// void HandleCraftItemStarted();                                                                                           // [0x95005b8] Final|Native|Private 
	// Function /Script/FortniteUI.FortItemManagementInventoryPanel.GetUpgradeItemDefinitionsForCurrentInventory
	// TArray<UFortItemDefinition*> GetUpgradeItemDefinitionsForCurrentInventory();                                             // [0x95004f8] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortItemManagementInventoryPanel.GetSupportedSortTypesForCurrentInventory
	// TArray<EInventoryContentSortType> GetSupportedSortTypesForCurrentInventory();                                            // [0x94ff744] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortItemManagementInventoryPanel.GetShouldPrioritizeFavorites
	// bool GetShouldPrioritizeFavorites();                                                                                     // [0x94ff6cc] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortItemManagementInventoryPanel.GetQualifiedFilterDisplayName
	// FText GetQualifiedFilterDisplayName();                                                                                   // [0x94ff664] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortItemManagementInventoryPanel.CycleSortType
	// void CycleSortType();                                                                                                    // [0x94fdfcc] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortItemManagementInventoryPanel.CanDragItems
	// bool CanDragItems();                                                                                                     // [0x94fd964] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortItemManagementInventoryPanel.AdvanceSelection
	// void AdvanceSelection();                                                                                                 // [0x94fd950] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortItemManagementInventoryPanel.AddItemStackToMulch
	// void AddItemStackToMulch(UFortItem* Item, int32_t Count);                                                                // [0x94fd804] Final|Native|Protected|BlueprintCallable 
};

/// Class /Script/FortniteUI.FortItemManagementItemPopupMenu
/// Size: 0x0008 (0x000558 - 0x000560)
class UFortItemManagementItemPopupMenu : public UFortPopupMenu_Legacy
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1376;

public:
};

/// Class /Script/FortniteUI.FortItemTileButton
/// Size: 0x0040 (0x0014E0 - 0x001520)
class UFortItemTileButton : public UCommonButtonLegacy
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 5408;

public:
	CMember(UFortMultiSizeItemCard*)                   ItemWidget                                                  OFFSET(get<T>, {0x14F0, 8, 0, 0})
	CMember(TWeakObjectPtr<UFortItem*>)                Item                                                        OFFSET(get<T>, {0x14F8, 8, 0, 0})
	CMember(EFortItemCardSize)                         ItemCardSize                                                OFFSET(get<T>, {0x1500, 1, 0, 0})
	DMember(bool)                                      IsRewardCard                                                OFFSET(get<bool>, {0x1501, 1, 0, 0})
	CMember(TScriptInterface<Class>)                   ItemViewContext                                             OFFSET(get<T>, {0x1508, 16, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortItemTileButton.OnTileSizeOverrideCheck
	// void OnTileSizeOverrideCheck(EFortItemCardSize SizeIn, EFortItemCardSize& SizeOut);                                      // [0x1d9241c] Event|Protected|HasOutParms|BlueprintEvent|Const 
};

/// Class /Script/FortniteUI.FortItemManagementItemTileButton
/// Size: 0x0080 (0x001520 - 0x0015A0)
class UFortItemManagementItemTileButton : public UFortItemTileButton
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 5536;

public:
	CMember(TWeakObjectPtr<UFortItemManagementScreen*>) HostItemManagementScreen                                   OFFSET(get<T>, {0x1518, 8, 0, 0})
	DMember(bool)                                      HasTheItemToDetail                                          OFFSET(get<bool>, {0x1520, 1, 0, 0})
	DMember(bool)                                      HasTheItemToCompareDetailsWith                              OFFSET(get<bool>, {0x1521, 1, 0, 0})
	DMember(bool)                                      HasAnItemMarkedForMulching                                  OFFSET(get<bool>, {0x1522, 1, 0, 0})
	DMember(int32_t)                                   MulchCount                                                  OFFSET(get<int32_t>, {0x1524, 4, 0, 0})
	CMember(UOverlay*)                                 NotCraftableOverlay                                         OFFSET(get<T>, {0x1528, 8, 0, 0})
	CMember(UFortDynamicEntryBox*)                     EquipSlotOverlay                                            OFFSET(get<T>, {0x1530, 8, 0, 0})
	CMember(UMenuAnchor*)                              PopupMenuAnchor                                             OFFSET(get<T>, {0x1538, 8, 0, 0})
	DMember(bool)                                      ShowCollectionBookIndicator                                 OFFSET(get<bool>, {0x1540, 1, 0, 0})
	DMember(bool)                                      ShowRefundIndicator                                         OFFSET(get<bool>, {0x1541, 1, 0, 0})
	CMember(UFortInventoryContext*)                    InventoryContext                                            OFFSET(get<T>, {0x1588, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortItemManagementItemTileButton.UpdateEquipSlotOverlay
	// void UpdateEquipSlotOverlay(int32_t CurrentSlotIndex);                                                                   // [0x9505360] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortItemManagementItemTileButton.PopulateEquipSlotOverlay
	// void PopulateEquipSlotOverlay();                                                                                         // [0x95042dc] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortItemManagementItemTileButton.OnSlotItemComplete
	// void OnSlotItemComplete(UFortAccountItem* SlottedItem, FName SlotId);                                                    // [0x9504104] Final|Native|Private 
	// Function /Script/FortniteUI.FortItemManagementItemTileButton.IsValidEquipSlotOverlayIndex
	// bool IsValidEquipSlotOverlayIndex(int32_t SlotIndex);                                                                    // [0x9503f54] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortItemManagementItemTileButton.HandleShowRefundIndicatorChanged
	// void HandleShowRefundIndicatorChanged();                                                                                 // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortItemManagementItemTileButton.HandleShowCollectionBookIndicatorChanged
	// void HandleShowCollectionBookIndicatorChanged();                                                                         // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortItemManagementItemTileButton.HandleItemMulchStateChanged
	// void HandleItemMulchStateChanged();                                                                                      // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortItemManagementItemTileButton.HandleItemChangedBP
	// void HandleItemChangedBP();                                                                                              // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortItemManagementItemTileButton.HandleHasItemToDetailChanged
	// void HandleHasItemToDetailChanged();                                                                                     // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortItemManagementItemTileButton.HandleHasItemToCompareDetailsWithChanged
	// void HandleHasItemToCompareDetailsWithChanged();                                                                         // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortItemManagementItemTileButton.HandleEquipSlotChanged
	// void HandleEquipSlotChanged(int32_t EquipSlot);                                                                          // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortItemManagementItemTileButton.HandleDifferentItemManagementModeSetBP
	// void HandleDifferentItemManagementModeSetBP();                                                                           // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortItemManagementItemTileButton.GetPopupMenu
	// UUserWidget* GetPopupMenu();                                                                                             // [0x94ff640] Final|Native|Private 
	// Function /Script/FortniteUI.FortItemManagementItemTileButton.GetItemManagementMode
	// EFortItemManagementMode GetItemManagementMode();                                                                         // [0x94ff464] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortItemManagementItemTileButton.GetHomebaseSquadSlotForItem
	// FHomebaseSquadSlotId GetHomebaseSquadSlotForItem();                                                                      // [0x94ff2a4] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/FortniteUI.FortItemDetailsHostPanel
/// Size: 0x00D8 (0x0002E8 - 0x0003C0)
class UFortItemDetailsHostPanel : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 960;

public:
	SMember(FMulticastInlineDelegate)                  OnItemChanged                                               OFFSET(getStruct<T>, {0x2E8, 16, 0, 0})
	CMember(TWeakObjectPtr<UFortItem*>)                ItemToDetail                                                OFFSET(get<T>, {0x2F8, 8, 0, 0})
	CMember(TWeakObjectPtr<UFortItem*>)                ItemToCompareWith                                           OFFSET(get<T>, {0x310, 8, 0, 0})
	DMember(bool)                                      bShouldPreviewUpgradingItem                                 OFFSET(get<bool>, {0x328, 1, 0, 0})
	DMember(int32_t)                                   UpgradeLevelDelta                                           OFFSET(get<int32_t>, {0x32C, 4, 0, 0})
	CMember(UScrollBox*)                               ScrollBox                                                   OFFSET(get<T>, {0x330, 8, 0, 0})
	CMember(UNamedSlot*)                               DetailsContainerSlotWidget                                  OFFSET(get<T>, {0x338, 8, 0, 0})
	CMember(UCommonBorder*)                            HighRarityBorder                                            OFFSET(get<T>, {0x340, 8, 0, 0})
	CMember(TScriptInterface<Class>)                   ItemViewContext                                             OFFSET(get<T>, {0x348, 16, 0, 0})
	CMember(EFortItemInspectionMode)                   CurrentInspectMode                                          OFFSET(get<T>, {0x358, 1, 0, 0})
	DMember(int32_t)                                   QuantityOverride                                            OFFSET(get<int32_t>, {0x380, 4, 0, 0})
	CMember(UFortTooltipLoadingWrapper*)               ItemToDetailLoadingWrapper                                  OFFSET(get<T>, {0x388, 8, 0, 0})
	CMember(UFortTooltipLoadingWrapper*)               ItemToCompareLoadingWrapper                                 OFFSET(get<T>, {0x390, 8, 0, 0})
	CMember(UCommonLoadGuard*)                         ItemToDetailLoadGuard                                       OFFSET(get<T>, {0x398, 8, 0, 0})
	CMember(UCommonLoadGuard*)                         ItemToCompareLoadGuard                                      OFFSET(get<T>, {0x3A0, 8, 0, 0})
	CMember(UCommonBorder*)                            Border_Details                                              OFFSET(get<T>, {0x3A8, 8, 0, 0})
	DMember(bool)                                      bAsyncLoadTooltipData                                       OFFSET(get<bool>, {0x3B0, 1, 0, 0})
	DMember(bool)                                      bIsUpdatingSuspended                                        OFFSET(get<bool>, {0x3B1, 1, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortItemDetailsHostPanel.ShouldPreviewUpgradingItem
	// void ShouldPreviewUpgradingItem(bool Value);                                                                             // [0x954b308] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortItemDetailsHostPanel.SetUpgradeLevelDelta
	// void SetUpgradeLevelDelta(int32_t InDelta);                                                                              // [0x954b288] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortItemDetailsHostPanel.SetScrollWidget
	// void SetScrollWidget();                                                                                                  // [0x954ae94] Final|RequiredAPI|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortItemDetailsHostPanel.SetQuantityOverride
	// void SetQuantityOverride(int32_t QuantityOverride);                                                                      // [0x954ad94] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortItemDetailsHostPanel.SetItemViewContext
	// void SetItemViewContext(TScriptInterface<Class>& ItemViewContext);                                                       // [0x954a8b8] Final|RequiredAPI|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/FortniteUI.FortItemDetailsHostPanel.SetItemToDetail
	// void SetItemToDetail(UFortItem* ItemToDetail);                                                                           // [0x2068914] Final|RequiredAPI|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortItemDetailsHostPanel.SetItemToCompareWith
	// void SetItemToCompareWith(UFortItem* ItemToCompareWith);                                                                 // [0x954a2c4] Final|RequiredAPI|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortItemDetailsHostPanel.SetIsUpdatingSuspended
	// void SetIsUpdatingSuspended(bool bValue);                                                                                // [0x95494f0] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortItemDetailsHostPanel.SetInspectMode
	// void SetInspectMode(EFortItemInspectionMode InspectMode);                                                                // [0x9549470] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortItemDetailsHostPanel.OnItemChangedDelegate__DelegateSignature
	// void OnItemChangedDelegate__DelegateSignature();                                                                         // [0x1d9241c] MulticastDelegate|Public|Delegate 
	// Function /Script/FortniteUI.FortItemDetailsHostPanel.HandleUpgradeLevelDeltaChangedBP
	// void HandleUpgradeLevelDeltaChangedBP();                                                                                 // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortItemDetailsHostPanel.HandleShouldPreviewUpgradingItemChangedBP
	// void HandleShouldPreviewUpgradingItemChangedBP();                                                                        // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortItemDetailsHostPanel.HandleQuantityOverrideChanged
	// void HandleQuantityOverrideChanged();                                                                                    // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortItemDetailsHostPanel.HandleItemToDetailTooltipAssetsLoading
	// void HandleItemToDetailTooltipAssetsLoading();                                                                           // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortItemDetailsHostPanel.HandleItemToDetailTooltipAssetsLoaded
	// void HandleItemToDetailTooltipAssetsLoaded();                                                                            // [0x1f2d1ac] Final|Native|Private 
	// Function /Script/FortniteUI.FortItemDetailsHostPanel.HandleItemToDetailChangedBP
	// void HandleItemToDetailChangedBP();                                                                                      // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.FortItemDetailsHostPanel.HandleItemToCompareTooltipAssetsLoading
	// void HandleItemToCompareTooltipAssetsLoading();                                                                          // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortItemDetailsHostPanel.HandleItemToCompareTooltipAssetsLoaded
	// void HandleItemToCompareTooltipAssetsLoaded();                                                                           // [0x954878c] Final|Native|Private 
	// Function /Script/FortniteUI.FortItemDetailsHostPanel.HandleItemRefundComplete
	// void HandleItemRefundComplete(bool bWasSuccessful, FString ConvertedItemInstanceId, TArray<FFortItemInstanceQuantityPair>& ItemsQuantities); // [0x9548048] Final|Native|Private|HasOutParms 
	// Function /Script/FortniteUI.FortItemDetailsHostPanel.HandleItemRarityUpgradeComplete
	// void HandleItemRarityUpgradeComplete(bool bWasSuccessful, FString ConvertedItemInstanceId, TArray<FFortItemInstanceQuantityPair>& ItemsQuantities); // [0x9548048] Final|Native|Private|HasOutParms 
	// Function /Script/FortniteUI.FortItemDetailsHostPanel.HandleItemEvolutionComplete
	// void HandleItemEvolutionComplete(bool bWasSuccessful, FString ConvertedItemInstanceId, TArray<FFortItemInstanceQuantityPair>& ItemsQuantities); // [0x9548048] Final|Native|Private|HasOutParms 
	// Function /Script/FortniteUI.FortItemDetailsHostPanel.HandleInspectModeChanged
	// void HandleInspectModeChanged();                                                                                         // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortItemDetailsHostPanel.HandleDifferentItemToDetailSet
	// void HandleDifferentItemToDetailSet();                                                                                   // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortItemDetailsHostPanel.HandleDifferentItemToCompareSet
	// void HandleDifferentItemToCompareSet();                                                                                  // [0x1d9241c] Event|Protected|BlueprintEvent 
};

/// Class /Script/FortniteUI.FortItemManagementItemDetailsPanel
/// Size: 0x0020 (0x0003C0 - 0x0003E0)
class UFortItemManagementItemDetailsPanel : public UFortItemDetailsHostPanel
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 992;

public:
	DMember(bool)                                      HasItemMarkedForMulching                                    OFFSET(get<bool>, {0x3C0, 1, 0, 0})
	CMember(TWeakObjectPtr<UFortItemManagementScreen*>) HostItemManagementScreen                                   OFFSET(get<T>, {0x3C4, 8, 0, 0})
	CMember(UFortInventoryContext*)                    InventoryContext                                            OFFSET(get<T>, {0x3D8, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortItemManagementItemDetailsPanel.HandleHostSet
	// void HandleHostSet();                                                                                                    // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortItemManagementItemDetailsPanel.HandleHasItemMarkedForMulchingChanged
	// void HandleHasItemMarkedForMulchingChanged();                                                                            // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortItemManagementItemDetailsPanel.GetAmmoTypeItemDefinitions
	// TArray<UFortAmmoItemDefinition*> GetAmmoTypeItemDefinitions();                                                           // [0x94fe470] Final|Native|Static|Protected|BlueprintCallable|BlueprintPure 
};

/// Class /Script/FortniteUI.FortItemManagementMulchDetailsPanel
/// Size: 0x0028 (0x0002E8 - 0x000310)
class UFortItemManagementMulchDetailsPanel : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 784;

public:
	CMember(UFortItemQuantityListBase*)                ResourceList                                                OFFSET(get<T>, {0x2E8, 8, 0, 0})
	CMember(TScriptInterface<Class>)                   HostItemManagementMulchPanel                                OFFSET(get<T>, {0x2F0, 16, 0, 0})
	CMember(UFortInventoryContext*)                    InventoryContext                                            OFFSET(get<T>, {0x308, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortItemManagementMulchDetailsPanel.IsSpaceAvailableForMulch
	// bool IsSpaceAvailableForMulch();                                                                                         // [0x9503eb0] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortItemManagementMulchDetailsPanel.HandleSetOfItemsToMulchChangedBP
	// void HandleSetOfItemsToMulchChangedBP();                                                                                 // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortItemManagementMulchDetailsPanel.HandleHostSet
	// void HandleHostSet();                                                                                                    // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortItemManagementMulchDetailsPanel.GetItemsToMulch
	// TArray<UFortItem*> GetItemsToMulch();                                                                                    // [0x94ff500] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortItemManagementMulchDetailsPanel.GetItemCountsToMulch
	// TArray<int32_t> GetItemCountsToMulch();                                                                                  // [0x94ff3fc] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortItemManagementMulchDetailsPanel.CommitMulch
	// void CommitMulch();                                                                                                      // [0x94fdc54] Final|Native|Protected|BlueprintCallable 
};

/// Class /Script/FortniteUI.FortItemManagementModeDetailsPanel
/// Size: 0x0030 (0x0002E8 - 0x000318)
class UFortItemManagementModeDetailsPanel : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 792;

public:
	CMember(UCommonWidgetSwitcherLegacy*)              ModeWidgetSwitcher                                          OFFSET(get<T>, {0x2E8, 8, 0, 0})
	CMember(UFortItemDetailsActivatablePanel*)         DetailsModeItemDetailsPanel                                 OFFSET(get<T>, {0x2F0, 8, 0, 0})
	CMember(UFortItemDetailsActivatablePanel*)         ComparisonModeItemDetailsPanel                              OFFSET(get<T>, {0x2F8, 8, 0, 0})
	CMember(UFortItemDetailsActivatablePanel*)         MulchModeItemDetailsPanel                                   OFFSET(get<T>, {0x300, 8, 0, 0})
	CMember(TWeakObjectPtr<UFortItemManagementScreen*>) HostItemManagementScreen                                   OFFSET(get<T>, {0x308, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortItemManagementModeDetailsPanel.HandleHostSet
	// void HandleHostSet();                                                                                                    // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortItemManagementModeDetailsPanel.HandleDifferentItemManagementModeSetBP
	// void HandleDifferentItemManagementModeSetBP();                                                                           // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortItemManagementModeDetailsPanel.GetItemManagementMode
	// EFortItemManagementMode GetItemManagementMode();                                                                         // [0x94ff488] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/FortniteUI.FortItemManagementScreen
/// Size: 0x0170 (0x000570 - 0x0006E0)
class UFortItemManagementScreen : public UFortActivatablePanel
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1760;

public:
	SMember(FMulticastInlineDelegate)                  OnItemViewRefreshed                                         OFFSET(getStruct<T>, {0x578, 16, 0, 0})
	CMember(EFortItemManagementMode)                   Mode                                                        OFFSET(get<T>, {0x648, 1, 0, 0})
	CMember(EFortFrontendInventoryFilter)              FrontendInventoryFilter                                     OFFSET(get<T>, {0x649, 1, 0, 0})
	DMember(bool)                                      bReadOnlyModeWIFE                                           OFFSET(get<bool>, {0x64A, 1, 0, 0})
	DMember(bool)                                      ConsumeItemRequestInProgress                                OFFSET(get<bool>, {0x64B, 1, 0, 0})
	SMember(FText)                                     RecycleText                                                 OFFSET(getStruct<T>, {0x650, 24, 0, 0})
	CMember(UFortItemManagementInventoryPanel*)        InventoryPanel                                              OFFSET(get<T>, {0x668, 8, 0, 0})
	CMember(UFortItemManagementModeDetailsPanel*)      ModeDetailsPanel                                            OFFSET(get<T>, {0x670, 8, 0, 0})
	CMember(TWeakObjectPtr<UFortItem*>)                ItemToDetail                                                OFFSET(get<T>, {0x678, 8, 0, 0})
	CMember(UClass*)                                   MulchConfirmationModalClass                                 OFFSET(get<T>, {0x688, 8, 0, 0})
	CMember(UClass*)                                   CustomFilterModalClass                                      OFFSET(get<T>, {0x690, 8, 0, 0})
	CMember(UFortMulchConfirmationModalWidget*)        MulchConfirmationModal                                      OFFSET(get<T>, {0x6B0, 8, 0, 0})
	CMember(UFortItemManagementCustomFilterModalWidget*) CustomFilterModal                                         OFFSET(get<T>, {0x6B8, 8, 0, 0})
	CMember(UFortInventoryContext*)                    InventoryContext                                            OFFSET(get<T>, {0x6C8, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortItemManagementScreen.TransferItem
	// void TransferItem(UFortItem* Item);                                                                                      // [0x95052a8] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortItemManagementScreen.ToggleShowRefundIndicator
	// void ToggleShowRefundIndicator();                                                                                        // [0x9505268] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortItemManagementScreen.ToggleShowCollectionBookIndicator
	// void ToggleShowCollectionBookIndicator();                                                                                // [0x950523c] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortItemManagementScreen.ShowWarningReadOnlyWIFE
	// void ShowWarningReadOnlyWIFE(bool Force);                                                                                // [0x1d9241c] Event|Public|BlueprintCallable|BlueprintEvent 
	// Function /Script/FortniteUI.FortItemManagementScreen.ShowRecycleProgressModal
	// void ShowRecycleProgressModal();                                                                                         // [0x95050e4] Final|Native|Public  
	// Function /Script/FortniteUI.FortItemManagementScreen.ShowMulchConfirmationModal
	// void ShowMulchConfirmationModal();                                                                                       // [0x95050b4] Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortItemManagementScreen.ShowCustomFilterModal
	// void ShowCustomFilterModal();                                                                                            // [0x95050a0] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortItemManagementScreen.SetFrontendInventoryFilter
	// void SetFrontendInventoryFilter(EFortFrontendInventoryFilter FrontendInventoryFilter);                                   // [0x95049bc] Final|RequiredAPI|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortItemManagementScreen.SetConsumeItemRequestInProgress
	// void SetConsumeItemRequestInProgress(bool InProgress);                                                                   // [0x95045e0] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortItemManagementScreen.RequestPopupMenuForSelectedItem
	// void RequestPopupMenuForSelectedItem();                                                                                  // [0x935a2b0] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortItemManagementScreen.OpenCraftingOptions
	// void OpenCraftingOptions(UFortSchematicItem* SchematicItem);                                                             // [0x9504238] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortItemManagementScreen.OpenAutoMulchOptions
	// void OpenAutoMulchOptions();                                                                                             // [0x9504224] Final|RequiredAPI|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortItemManagementScreen.NotifyPanelDeactivated
	// void NotifyPanelDeactivated();                                                                                           // [0x9504054] Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.FortItemManagementScreen.NotifyPanelActivated
	// void NotifyPanelActivated();                                                                                             // [0x9504038] Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.FortItemManagementScreen.MarkAllItemsAsSeen
	// void MarkAllItemsAsSeen();                                                                                               // [0x9503ffc] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortItemManagementScreen.IsScreenWIFE
	// bool IsScreenWIFE();                                                                                                     // [0x9503dfc] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortItemManagementScreen.InspectItem
	// void InspectItem(UFortItem* Item);                                                                                       // [0x9503cc4] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortItemManagementScreen.HideRecycleProgressModal
	// void HideRecycleProgressModal();                                                                                         // [0x9503cb0] Final|Native|Public  
	// Function /Script/FortniteUI.FortItemManagementScreen.HideMulchConfirmationModal
	// void HideMulchConfirmationModal();                                                                                       // [0x9503c80] Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortItemManagementScreen.HideCustomFilterModal
	// void HideCustomFilterModal();                                                                                            // [0x9503c40] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortItemManagementScreen.HasItemBeenSeen
	// bool HasItemBeenSeen(UFortAccountItem* AccountItem);                                                                     // [0x89f021c] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortItemManagementScreen.HasDefaultItemsToMulch
	// bool HasDefaultItemsToMulch();                                                                                           // [0x9503b80] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortItemManagementScreen.HandleTransferItemBP
	// void HandleTransferItemBP(UFortItem* Item);                                                                              // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.FortItemManagementScreen.HandleOpenCraftingOptionsBP
	// void HandleOpenCraftingOptionsBP(UFortSchematicItem* SchematicItem);                                                     // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.FortItemManagementScreen.HandleOpenAutoMulchOptionsBP
	// void HandleOpenAutoMulchOptionsBP();                                                                                     // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.FortItemManagementScreen.HandleMulchQuantitySelection
	// void HandleMulchQuantitySelection(UFortItem* Item);                                                                      // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.FortItemManagementScreen.HandleItemToDetailChanged
	// void HandleItemToDetailChanged(bool bItemChanged, bool bAmmoChanged, bool bIngredientsChanged);                          // [0x9503388] Final|Native|Private 
	// Function /Script/FortniteUI.FortItemManagementScreen.HandleItemToCompareWithChanged
	// void HandleItemToCompareWithChanged(bool bItemChanged, bool bAmmoChanged, bool bIngredientsChanged);                     // [0x950329c] Final|Native|Private 
	// Function /Script/FortniteUI.FortItemManagementScreen.HandleInspectItemBP
	// void HandleInspectItemBP(UFortItem* Item);                                                                               // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.FortItemManagementScreen.HandleEquipItemBP
	// void HandleEquipItemBP(UFortItem* Item);                                                                                 // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.FortItemManagementScreen.HandleDropItemBP
	// void HandleDropItemBP(UFortItem* Item);                                                                                  // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.FortItemManagementScreen.HandleDifferentItemManagementModeSetBP
	// void HandleDifferentItemManagementModeSetBP();                                                                           // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.FortItemManagementScreen.HandleCraftItemBP
	// void HandleCraftItemBP(UFortSchematicItem* SchematicItem, EFortItemTier RequestedTier, int32_t CraftCount);              // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.FortItemManagementScreen.HandleCraftAndSlotItemBP
	// void HandleCraftAndSlotItemBP(UFortSchematicItem* SchematicItem, EFortItemTier RequestedTier, int32_t CraftCount);       // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.FortItemManagementScreen.HandleConsumeItemBP
	// void HandleConsumeItemBP(UFortConsumableAccountItem* ConsumableItem);                                                    // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.FortItemManagementScreen.GuardActionForReadOnlyWIFE
	// bool GuardActionForReadOnlyWIFE();                                                                                       // [0x9500538] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortItemManagementScreen.GetShouldShowRefundIndicator
	// bool GetShouldShowRefundIndicator();                                                                                     // [0x94ff700] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortItemManagementScreen.GetShouldShowCollectionBookIndicator
	// bool GetShouldShowCollectionBookIndicator();                                                                             // [0x94ff6e8] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortItemManagementScreen.GetItemToDetail
	// UFortItem* GetItemToDetail();                                                                                            // [0x94ff4dc] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortItemManagementScreen.GetItemToCompareDetailsWith
	// UFortItem* GetItemToCompareDetailsWith();                                                                                // [0x94ff4b8] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortItemManagementScreen.EquipItem
	// void EquipItem(UFortItem* Item);                                                                                         // [0x94fe3dc] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortItemManagementScreen.EnterMulchModeForAutoMulch
	// void EnterMulchModeForAutoMulch();                                                                                       // [0x94fe3c8] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortItemManagementScreen.EnterMulchMode
	// void EnterMulchMode(UFortItem* ItemToMulch);                                                                             // [0x94fe260] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortItemManagementScreen.EnterDetailsMode
	// void EnterDetailsMode(UFortItem* ItemToDetail);                                                                          // [0x94fe1e0] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortItemManagementScreen.EnterComparisonMode
	// void EnterComparisonMode(UFortItem* ItemToCompareDetailsWith);                                                           // [0x94fe160] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortItemManagementScreen.DropItem
	// void DropItem(UFortItem* Item);                                                                                          // [0x94fe040] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortItemManagementScreen.CycleSortType
	// void CycleSortType();                                                                                                    // [0x94fdfe0] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortItemManagementScreen.CraftItem
	// void CraftItem(UFortSchematicItem* SchematicItem, EFortItemTier RequestedTier, int32_t CraftCount);                      // [0x94fded4] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortItemManagementScreen.CraftAndSlotItem
	// void CraftAndSlotItem(UFortSchematicItem* SchematicItem, EFortItemTier RequestedTier, int32_t CraftCount);               // [0x94fdddc] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortItemManagementScreen.ConsumeItem
	// void ConsumeItem(UFortConsumableAccountItem* ConsumableItem);                                                            // [0x94fdcc8] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortItemManagementScreen.CanRequestPopupMenuForSelectedItem
	// bool CanRequestPopupMenuForSelectedItem();                                                                               // [0x94fdb1c] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortItemManagementScreen.CanEquipItem
	// bool CanEquipItem(UFortItem* Item);                                                                                      // [0x94fd97c] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortItemManagementScreen.CancelInventoryPanelTileViewRefresh
	// void CancelInventoryPanelTileViewRefresh();                                                                              // [0x94fdb3c] Final|Native|Protected|BlueprintCallable 
};

/// Class /Script/FortniteUI.FortMulchItemTileButton
/// Size: 0x0000 (0x001520 - 0x001520)
class UFortMulchItemTileButton : public UFortItemTileButton
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 5408;

public:
};

/// Class /Script/FortniteUI.FortMulchConfirmationModalWidget
/// Size: 0x0050 (0x000570 - 0x0005C0)
class UFortMulchConfirmationModalWidget : public UFortActivatablePanel
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1472;

public:
	CMember(TScriptInterface<Class>)                   HostItemManagementMulchPanel                                OFFSET(get<T>, {0x570, 16, 0, 0})
	CMember(UCommonTileView*)                          RecycleItemTileView                                         OFFSET(get<T>, {0x580, 8, 0, 0})
	CMember(UFortItemManagementMulchDetailsPanel*)     RecycleDetailsPanel                                         OFFSET(get<T>, {0x588, 8, 0, 0})
	CMember(UCommonLoadGuard*)                         CommonLoadGuard_LatentSpinner                               OFFSET(get<T>, {0x590, 8, 0, 0})
	CMember(UHorizontalBox*)                           HorizontalBox_Buttons                                       OFFSET(get<T>, {0x598, 8, 0, 0})
	CMember(UFortInventoryContext*)                    InventoryContext                                            OFFSET(get<T>, {0x5B0, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortMulchConfirmationModalWidget.UpdateConfirmationModal_BP
	// void UpdateConfirmationModal_BP();                                                                                       // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.FortMulchConfirmationModalWidget.UpdateConfirmationModal
	// void UpdateConfirmationModal();                                                                                          // [0x950534c] Final|Native|Private 
	// Function /Script/FortniteUI.FortMulchConfirmationModalWidget.GetMulchWarnings
	// TMap<EItemRecyclingWarning, int32_t> GetMulchWarnings();                                                                 // [0x94ff59c] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortMulchConfirmationModalWidget.CommitMulch
	// void CommitMulch();                                                                                                      // [0x94fdc84] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/FortniteUI.AthenaBattlePassItemTracker
/// Size: 0x0010 (0x0002E8 - 0x0002F8)
class UAthenaBattlePassItemTracker : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 760;

public:
	CMember(UCommonTextBlock*)                         Text_Category                                               OFFSET(get<T>, {0x2E8, 8, 0, 0})
	CMember(UCommonNumericTextBlock*)                  Text_Counter                                                OFFSET(get<T>, {0x2F0, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.AthenaBattlePassItemTracker.OnInterpStarted
	// void OnInterpStarted();                                                                                                  // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaBattlePassItemTracker.OnInterpEnded
	// void OnInterpEnded(UCommonNumericTextBlock* NumericTextBlock, bool HadCompleted);                                        // [0x1d9241c] Event|Protected|BlueprintEvent 
};

/// Class /Script/FortniteUI.AthenaBattlePassTracker
/// Size: 0x00F0 (0x0002E8 - 0x0003D8)
class UAthenaBattlePassTracker : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 984;

public:
	SMember(FText)                                     OutfitsText                                                 OFFSET(getStruct<T>, {0x2F0, 24, 0, 0})
	SMember(FText)                                     VBucksText                                                  OFFSET(getStruct<T>, {0x308, 24, 0, 0})
	SMember(FText)                                     EmotesText                                                  OFFSET(getStruct<T>, {0x320, 24, 0, 0})
	SMember(FText)                                     MoreRewardsText                                             OFFSET(getStruct<T>, {0x338, 24, 0, 0})
	SMember(FText)                                     BuyBattlePassTextFormat                                     OFFSET(getStruct<T>, {0x350, 24, 0, 0})
	CMember(UCommonRichTextBlock*)                     RichText_PaidItemsCollected                                 OFFSET(get<T>, {0x3A8, 8, 0, 0})
	CMember(UAthenaBattlePassItemTracker*)             BattlePassItemTracker_01                                    OFFSET(get<T>, {0x3B0, 8, 0, 0})
	CMember(UAthenaBattlePassItemTracker*)             BattlePassItemTracker_02                                    OFFSET(get<T>, {0x3B8, 8, 0, 0})
	CMember(UAthenaBattlePassItemTracker*)             BattlePassItemTracker_03                                    OFFSET(get<T>, {0x3C0, 8, 0, 0})
	CMember(UAthenaBattlePassItemTracker*)             BattlePassItemTracker_04                                    OFFSET(get<T>, {0x3C8, 8, 0, 0})
	CMember(UBattlePassScreenPurchaseButton*)          Button_PurchaseBattlepass                                   OFFSET(get<T>, {0x3D0, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.AthenaBattlePassTracker.HandlePassPurchaseFlowStarted
	// void HandlePassPurchaseFlowStarted();                                                                                    // [0x9503b6c] Final|Native|Private 
};

/// Class /Script/FortniteUI.AthenaGiftReceivedPrompt
/// Size: 0x0078 (0x000400 - 0x000478)
class UAthenaGiftReceivedPrompt : public UCommonActivatableWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1144;

public:
	CMember(UClass*)                                   ItemPresentationScreenClass                                 OFFSET(get<T>, {0x400, 8, 0, 0})
	CMember(TWeakObjectPtr<UMaterialInterface*>)       GiftMaterial                                                OFFSET(get<T>, {0x408, 32, 0, 0})
	CMember(UFortGiftBoxItem*)                         GiftBoxItem                                                 OFFSET(get<T>, {0x428, 8, 0, 0})
	CMember(UFortItemReceivedHeaderBase*)              Widget_HeaderInfo                                           OFFSET(get<T>, {0x430, 8, 0, 0})
	CMember(UCommonButtonLegacy*)                      Button_Open                                                 OFFSET(get<T>, {0x438, 8, 0, 0})
	CMember(UCommonLazyImage*)                         Image_GiftBox                                               OFFSET(get<T>, {0x440, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.AthenaGiftReceivedPrompt.OnGiftInfoPopulated
	// void OnGiftInfoPopulated();                                                                                              // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaGiftReceivedPrompt.OnCloseButtonClicked
	// void OnCloseButtonClicked();                                                                                             // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaGiftReceivedPrompt.HandleMessageTextFiltered
	// void HandleMessageTextFiltered(bool bSuccess, FString SanitizedMessage);                                                 // [0x9503474] Final|Native|Protected 
	// Function /Script/FortniteUI.AthenaGiftReceivedPrompt.DismissPrompt
	// void DismissPrompt();                                                                                                    // [0x94fe02c] Final|Native|Protected|BlueprintCallable 
};

/// Class /Script/FortniteUI.AthenaItemReceivedPreMessageBase
/// Size: 0x0028 (0x000400 - 0x000428)
class UAthenaItemReceivedPreMessageBase : public UCommonActivatableWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1064;

public:
	CMember(TArray<UFortGiftBoxItem*>)                 GiftBoxItems                                                OFFSET(get<T>, {0x400, 16, 0, 0})
};

/// Class /Script/FortniteUI.AthenaUpgradedPreMessage
/// Size: 0x0000 (0x000428 - 0x000428)
class UAthenaUpgradedPreMessage : public UAthenaItemReceivedPreMessageBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1064;

public:
};

/// Class /Script/FortniteUI.FortItemNotification
/// Size: 0x0050 (0x000570 - 0x0005C0)
class UFortItemNotification : public UFortActivatablePanel
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1472;

public:
	CMember(TArray<FFortReceivedItemLootInfo>)         ItemDefs                                                    OFFSET(get<T>, {0x588, 16, 0, 0})
	DMember(float)                                     BodyTextWrapWidth                                           OFFSET(get<float>, {0x598, 4, 0, 0})
	CMember(UCommonButtonLegacy*)                      Button_Close                                                OFFSET(get<T>, {0x5A0, 8, 0, 0})
	CMember(UFortItemReceivedHeaderBase*)              ItemPresentationGenericRewardHeader                         OFFSET(get<T>, {0x5A8, 8, 0, 0})
	CMember(UFortItemPresentationEntry*)               ItemPresentationEntry                                       OFFSET(get<T>, {0x5B0, 8, 0, 0})
	CMember(UFortItemInfoPresentationWidget*)          ItemInfoPresentationWidget                                  OFFSET(get<T>, {0x5B8, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortItemNotification.OnUpdateScreenInformation
	// void OnUpdateScreenInformation();                                                                                        // [0x9504210] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.FortItemNotification.OnSetButtonText
	// void OnSetButtonText(bool bCanCloseWidget);                                                                              // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortItemNotification.OnNextItemDisplay
	// void OnNextItemDisplay();                                                                                                // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortItemNotification.OnCloseScreen
	// void OnCloseScreen();                                                                                                    // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortItemNotification.CloseScreen
	// void CloseScreen();                                                                                                      // [0x94fdbdc] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/FortniteUI.FortItemPresentationDisplayData
/// Size: 0x0298 (0x000030 - 0x0002C8)
class UFortItemPresentationDisplayData : public UDataAsset
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 712;

public:
	CMember(TMap<FString, FText>)                      HeaderOverrideStrings                                       OFFSET(get<T>, {0x30, 80, 0, 0})
	CMember(TMap<FString, FText>)                      BodyOverrideStrings                                         OFFSET(get<T>, {0x80, 80, 0, 0})
	CMember(TMap<FString, FText>)                      ViolatorOverrideStrings                                     OFFSET(get<T>, {0xD0, 80, 0, 0})
	CMember(TMap<FString, FText>)                      SubheaderOverrideStrings                                    OFFSET(get<T>, {0x120, 80, 0, 0})
	CMember(TWeakObjectPtr<UObject*>)                  BattlePassUnownedIcon                                       OFFSET(get<T>, {0x170, 32, 0, 0})
	CMember(TWeakObjectPtr<UObject*>)                  BattlePassOwnedIcon                                         OFFSET(get<T>, {0x190, 32, 0, 0})
	SMember(FText)                                     DefaultBackgroundMessageText                                OFFSET(getStruct<T>, {0x1B0, 24, 0, 0})
	CMember(TMap<FGameplayTag, FItemPresentationRestrictionData>) TagRestrictionData                               OFFSET(get<T>, {0x1C8, 80, 0, 0})
	CMember(TMap<FString, EItemContextAction>)         ItemTemplateIdToContextActionMap                            OFFSET(get<T>, {0x218, 80, 0, 0})
	CMember(TWeakObjectPtr<UClass*>)                   ItemPresentationScreenClass                                 OFFSET(get<T>, {0x268, 32, 0, 0})
	CMember(TWeakObjectPtr<UClass*>)                   GiftReceivedPromptClass                                     OFFSET(get<T>, {0x288, 32, 0, 0})
	CMember(TWeakObjectPtr<UClass*>)                   ItemNotificationPromptClass                                 OFFSET(get<T>, {0x2A8, 32, 0, 0})
};

/// Class /Script/FortniteUI.FortItemPresentationEntry
/// Size: 0x00D0 (0x0014E0 - 0x0015B0)
class UFortItemPresentationEntry : public UCommonButtonLegacy
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 5552;

public:
	CMember(UFortCosmeticItemCard*)                    ItemCard                                                    OFFSET(get<T>, {0x14E8, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_Count                                                  OFFSET(get<T>, {0x14F0, 8, 0, 0})
	CMember(UFortItem*)                                FortItem                                                    OFFSET(get<T>, {0x14F8, 8, 0, 0})
	CMember(TWeakObjectPtr<UTexture2D*>)               RewardTexture                                               OFFSET(get<T>, {0x1590, 32, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortItemPresentationEntry.OnIsPaidBattlePassRewardSet
	// void OnIsPaidBattlePassRewardSet(bool bIsPaidBattlePassReward);                                                          // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortItemPresentationEntry.OnInitialIconAnimation
	// void OnInitialIconAnimation();                                                                                           // [0x1d9241c] Event|Protected|BlueprintEvent 
};

/// Class /Script/FortniteUI.FortItemPresentationScreen
/// Size: 0x0240 (0x000720 - 0x000960)
class UFortItemPresentationScreen : public UFortItemPreviewScreen
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 2400;

public:
	CMember(UClass*)                                   ItemCardClass                                               OFFSET(get<T>, {0x720, 8, 0, 0})
	CMember(TArray<FFortReceivedItemLootInfo>)         ItemDefs                                                    OFFSET(get<T>, {0x728, 16, 0, 0})
	CMember(TArray<FFortReceivedItemLootInfo>)         PaidBattlePassItemDefs                                      OFFSET(get<T>, {0x738, 16, 0, 0})
	CMember(UFortItem*)                                CurrentItemSelected                                         OFFSET(get<T>, {0x748, 8, 0, 0})
	CMember(UCommonButtonGroupLegacy*)                 EntryBoxButtonGroup                                         OFFSET(get<T>, {0x750, 8, 0, 0})
	CMember(TArray<FText>)                             BackgroundMessageTexts                                      OFFSET(get<T>, {0x758, 16, 0, 0})
	CMember(TArray<UClass*>)                           GiftboxCustomLeftsideContentWidgetClasses                   OFFSET(get<T>, {0x768, 16, 0, 0})
	DMember(int32_t)                                   MaxItemsInView                                              OFFSET(get<int32_t>, {0x778, 4, 0, 0})
	DMember(float)                                     HotItemDisplayTime                                          OFFSET(get<float>, {0x77C, 4, 0, 0})
	CMember(UImage*)                                   FakeHackGradient                                            OFFSET(get<T>, {0x780, 8, 0, 0})
	SMember(FString)                                   SpecialCollectionTabID                                      OFFSET(getStruct<T>, {0x788, 16, 0, 0})
	SMember(FText)                                     MultipleItemPurchaseHeaderTitle                             OFFSET(getStruct<T>, {0x7B8, 24, 0, 0})
	SMember(FText)                                     SingleItemPurchaseHeaderTitle                               OFFSET(getStruct<T>, {0x7D0, 24, 0, 0})
	SMember(FText)                                     PurchaseHeaderBody                                          OFFSET(getStruct<T>, {0x7E8, 24, 0, 0})
	CMember(TWeakObjectPtr<UClass*>)                   LockerConfirmationModalClass                                OFFSET(get<T>, {0x800, 32, 0, 0})
	DMember(bool)                                      bShowingBattlePassItems                                     OFFSET(get<bool>, {0x828, 1, 0, 0})
	SMember(FDataTableRowHandle)                       HoldToCloseAction                                           OFFSET(getStruct<T>, {0x830, 16, 0, 0})
	CMember(UCommonButtonBase*)                        Button_Equip                                                OFFSET(get<T>, {0x848, 8, 0, 0})
	CMember(UCommonButtonBase*)                        Button_Next                                                 OFFSET(get<T>, {0x850, 8, 0, 0})
	CMember(UCommonButtonBase*)                        Button_BattlePassRewards                                    OFFSET(get<T>, {0x858, 8, 0, 0})
	CMember(UCommonButtonBase*)                        Button_BattlePassCustomization                              OFFSET(get<T>, {0x860, 8, 0, 0})
	CMember(UCommonButtonBase*)                        Button_SpecialCollection                                    OFFSET(get<T>, {0x868, 8, 0, 0})
	CMember(UCommonButtonBase*)                        Button_CloseTouch                                           OFFSET(get<T>, {0x870, 8, 0, 0})
	CMember(UTextBlock*)                               Text_ItemsCollected                                         OFFSET(get<T>, {0x878, 8, 0, 0})
	CMember(UFortItemInfoPresentationWidget*)          ItemInfoPresentationWidget                                  OFFSET(get<T>, {0x880, 8, 0, 0})
	CMember(UFortItemReceivedHeaderBase*)              ItemHeaderWidget                                            OFFSET(get<T>, {0x888, 8, 0, 0})
	CMember(UAthenaBattlePassTracker*)                 BattlePassTracker                                           OFFSET(get<T>, {0x890, 8, 0, 0})
	CMember(UCommonRichTextBlock*)                     Text_UnownedBaseItemMessage                                 OFFSET(get<T>, {0x898, 8, 0, 0})
	CMember(UImage*)                                   Image_Lock                                                  OFFSET(get<T>, {0x8A0, 8, 0, 0})
	CMember(UDynamicEntryBox*)                         DynamicEntryBox_Items                                       OFFSET(get<T>, {0x8A8, 8, 0, 0})
	CMember(UCommonListView*)                          ListView_Items                                              OFFSET(get<T>, {0x8B0, 8, 0, 0})
	CMember(UCommonListView*)                          ListView_PaidItems                                          OFFSET(get<T>, {0x8B8, 8, 0, 0})
	CMember(UCommonBorder*)                            Border_InputBlocker                                         OFFSET(get<T>, {0x8C0, 8, 0, 0})
	CMember(UCommonButtonBase*)                        Button_LeftScrollArrow                                      OFFSET(get<T>, {0x8C8, 8, 0, 0})
	CMember(UCommonButtonBase*)                        Button_RightScrollArrow                                     OFFSET(get<T>, {0x8D0, 8, 0, 0})
	CMember(UAthenaExclusiveRewardBanner*)             Banner_TokenDescription                                     OFFSET(get<T>, {0x8D8, 8, 0, 0})
	CMember(UNamedSlot*)                               CustomContent                                               OFFSET(get<T>, {0x8E0, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortItemPresentationScreen.SetGiftBoxItem
	// void SetGiftBoxItem(UFortGiftBoxItem* GiftBoxItem);                                                                      // [0x9504a3c] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.FortItemPresentationScreen.OnUpdateOwnedItemText
	// void OnUpdateOwnedItemText(bool bShowText);                                                                              // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortItemPresentationScreen.OnUpdateNextButtonText
	// void OnUpdateNextButtonText(bool bShowNext);                                                                             // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortItemPresentationScreen.OnUpdateItemInformation
	// void OnUpdateItemInformation(UFortItem* FortItem);                                                                       // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortItemPresentationScreen.OnUpdateItemEquipped
	// void OnUpdateItemEquipped();                                                                                             // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortItemPresentationScreen.OnUpdateItemContextAction
	// void OnUpdateItemContextAction(EItemContextAction ItemContextAction);                                                    // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortItemPresentationScreen.OnUpdateHeaderInformation
	// void OnUpdateHeaderInformation(FFortItemHeaderInformation& HeaderInformation);                                           // [0x1d9241c] Event|Protected|HasOutParms|BlueprintEvent 
	// Function /Script/FortniteUI.FortItemPresentationScreen.OnSwitchToPaidItems
	// void OnSwitchToPaidItems();                                                                                              // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortItemPresentationScreen.OnSwitchLeftsideContent
	// void OnSwitchLeftsideContent(bool bInDefaultContent);                                                                    // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortItemPresentationScreen.OnLeftsideContentUpdated
	// void OnLeftsideContentUpdated(UWidget* LeftSideWidget, FCurrencyDataWithGiftBox& OutDataWithGiftBox);                    // [0x1d9241c] Event|Protected|HasOutParms|BlueprintEvent 
	// Function /Script/FortniteUI.FortItemPresentationScreen.OnInitialIconAnimation
	// void OnInitialIconAnimation(bool bUsingListView);                                                                        // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortItemPresentationScreen.OnFinishDisplayingHotItems
	// void OnFinishDisplayingHotItems(bool bShowOtherRewards);                                                                 // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortItemPresentationScreen.OnDisplayItemsCollectedText
	// void OnDisplayItemsCollectedText(bool bCloseScreen);                                                                     // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortItemPresentationScreen.OnDisplayEquipButton
	// void OnDisplayEquipButton(bool bCanEquip);                                                                               // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortItemPresentationScreen.OnCloseScreenWithoutAnimations
	// void OnCloseScreenWithoutAnimations();                                                                                   // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortItemPresentationScreen.OnCloseScreen
	// void OnCloseScreen();                                                                                                    // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortItemPresentationScreen.HandleHoldToClose
	// void HandleHoldToClose();                                                                                                // [0x950083c] Final|Native|Private 
	// Function /Script/FortniteUI.FortItemPresentationScreen.HandleExitBattlePassPurchaseFlow
	// void HandleExitBattlePassPurchaseFlow();                                                                                 // [0x95006e8] Final|Native|Protected 
	// Function /Script/FortniteUI.FortItemPresentationScreen.HandleBack
	// void HandleBack();                                                                                                       // [0x950055c] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.FortItemPresentationScreen.FinishSwitchingToPaidItems
	// void FinishSwitchingToPaidItems();                                                                                       // [0x94fe45c] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.FortItemPresentationScreen.EnableUserControlOnPaidItems
	// void EnableUserControlOnPaidItems();                                                                                     // [0x94fe14c] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.FortItemPresentationScreen.ClearItemPreview
	// void ClearItemPreview();                                                                                                 // [0x94fdbb4] Final|Native|Protected|BlueprintCallable 
};

/// Class /Script/FortniteUI.FortItemReceivedHeaderBase
/// Size: 0x0028 (0x0002E8 - 0x000310)
class UFortItemReceivedHeaderBase : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 784;

public:
	CMember(UCommonLazyImage*)                         Image_Icon                                                  OFFSET(get<T>, {0x2E8, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_Violator                                               OFFSET(get<T>, {0x2F0, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_Title                                                  OFFSET(get<T>, {0x2F8, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_Subtitle                                               OFFSET(get<T>, {0x300, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_Body                                                   OFFSET(get<T>, {0x308, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortItemReceivedHeaderBase.SetHeaderInformation
	// void SetHeaderInformation(FFortItemHeaderInformation& HeaderInfo);                                                       // [0x9504b74] Final|Native|Public|HasOutParms|BlueprintCallable 
};

/// Class /Script/FortniteUI.FortItemReceivedWidgetBase
/// Size: 0x0040 (0x0006B8 - 0x0006F8)
class UFortItemReceivedWidgetBase : public UFortActivatablePanelWithItemPreview
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1784;

public:
	CMember(TArray<FFortReceivedItemLootInfo>)         ItemDefs                                                    OFFSET(get<T>, {0x6B8, 16, 0, 0})
	CMember(UFortGiftBoxItem*)                         GiftBoxItem                                                 OFFSET(get<T>, {0x6C8, 8, 0, 0})
	SMember(FString)                                   FromUsername                                                OFFSET(getStruct<T>, {0x6D0, 16, 0, 0})
	CMember(UHorizontalBox*)                           HeaderContainer                                             OFFSET(get<T>, {0x6E0, 8, 0, 0})
	CMember(UScrollBox*)                               GiftScrollBox                                               OFFSET(get<T>, {0x6E8, 8, 0, 0})
	CMember(UClass*)                                   ItemCardClass                                               OFFSET(get<T>, {0x6F0, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortItemReceivedWidgetBase.ShowGiftBox
	// void ShowGiftBox();                                                                                                      // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortItemReceivedWidgetBase.SetGiftBoxItem
	// void SetGiftBoxItem(UFortGiftBoxItem* GiftBoxItem);                                                                      // [0x9504af4] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortItemReceivedWidgetBase.SetAlignmentOnSlots
	// void SetAlignmentOnSlots(UScrollBox* Widget);                                                                            // [0x950444c] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.FortItemReceivedWidgetBase.SetAlignmentOnSlot
	// void SetAlignmentOnSlot(UScrollBox* Widget, int32_t Index);                                                              // [0x950435c] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.FortItemReceivedWidgetBase.OnGiftBoxItemSetInternal
	// void OnGiftBoxItemSetInternal(bool bFromSelf);                                                                           // [0x9504070] Final|Native|Protected 
	// Function /Script/FortniteUI.FortItemReceivedWidgetBase.OnGiftBoxItemSet
	// void OnGiftBoxItemSet(bool bFromSelf);                                                                                   // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortItemReceivedWidgetBase.GetTemporaryInstance
	// UFortItem* GetTemporaryInstance(FFortReceivedItemLootInfo& ItemReference);                                               // [0x94ff784] Final|Native|Protected|HasOutParms|BlueprintCallable 
	// Function /Script/FortniteUI.FortItemReceivedWidgetBase.ClosingGiftbox
	// void ClosingGiftbox();                                                                                                   // [0x94fdc2c] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/FortniteUI.FortItemReceivedScreen
/// Size: 0x0010 (0x0006F8 - 0x000708)
class UFortItemReceivedScreen : public UFortItemReceivedWidgetBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1800;

public:
	SMember(FMulticastInlineDelegate)                  OnFinalGiftingComplete                                      OFFSET(getStruct<T>, {0x6F8, 16, 0, 0})
};

/// Class /Script/FortniteUI.FortItemReceivedPrePrompt
/// Size: 0x0018 (0x0006F8 - 0x000710)
class UFortItemReceivedPrePrompt : public UFortItemReceivedWidgetBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1808;

public:
	SMember(FMulticastInlineDelegate)                  OnPrePromptClosed                                           OFFSET(getStruct<T>, {0x700, 16, 0, 0})
};

/// Class /Script/FortniteUI.FortGiftInfo
/// Size: 0x0048 (0x000028 - 0x000070)
class UFortGiftInfo : public UObject
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 112;

public:
	SMember(FGiftBoxInfo)                              GiftBoxInfo                                                 OFFSET(getStruct<T>, {0x28, 72, 0, 0})
};

/// Class /Script/FortniteUI.ItemCardWidgetBase
/// Size: 0x0010 (0x0005D0 - 0x0005E0)
class UItemCardWidgetBase : public UButton
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1504;

public:
	CMember(UFortGiftInfo*)                            LootInfo                                                    OFFSET(get<T>, {0x5C8, 8, 0, 0})
	CMember(UFortMultiSizeItemCard*)                   FortMultiSizeItemCard_Widget                                OFFSET(get<T>, {0x5D0, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.ItemCardWidgetBase.SetLootInfo
	// void SetLootInfo(UFortGiftInfo* LootInfo);                                                                               // [0x9504cac] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.ItemCardWidgetBase.OnLootInfoSet
	// void OnLootInfoSet();                                                                                                    // [0x1d9241c] Event|Public|BlueprintEvent 
};

/// Class /Script/FortniteUI.FortItemListEntryButton
/// Size: 0x0040 (0x0014E0 - 0x001520)
class UFortItemListEntryButton : public UCommonButtonLegacy
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 5408;

public:
	CMember(UFortMultiSizeItemCard*)                   ItemWidget                                                  OFFSET(get<T>, {0x14F0, 8, 0, 0})
	CMember(TWeakObjectPtr<UFortItem*>)                Item                                                        OFFSET(get<T>, {0x14F8, 8, 0, 0})
	CMember(EFortItemCardSize)                         ItemCardSize                                                OFFSET(get<T>, {0x1500, 1, 0, 0})
	DMember(bool)                                      IsRewardCard                                                OFFSET(get<bool>, {0x1501, 1, 0, 0})
	CMember(TScriptInterface<Class>)                   ItemViewContext                                             OFFSET(get<T>, {0x1508, 16, 0, 0})
};

/// Class /Script/FortniteUI.FortNullItem
/// Size: 0x0000 (0x000088 - 0x000088)
class UFortNullItem : public UFortItem
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 136;

public:
};

/// Class /Script/FortniteUI.FortItemListView
/// Size: 0x0180 (0x000BD0 - 0x000D50)
class UFortItemListView : public UCommonListView
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 3408;

public:
	DMember(bool)                                      bShouldShowNullItemListEntry                                OFFSET(get<bool>, {0xCE8, 1, 0, 0})
	DMember(bool)                                      bAutomaticallyLoadItemDetails                               OFFSET(get<bool>, {0xCE9, 1, 0, 0})
	CMember(EItemListViewDisplayType)                  DisplayType                                                 OFFSET(get<T>, {0xCEA, 1, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnInventoryUpdatedEvent                                     OFFSET(getStruct<T>, {0xCF0, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnLoadItemsBegin                                            OFFSET(getStruct<T>, {0xD00, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnLoadItemsEnd                                              OFFSET(getStruct<T>, {0xD10, 16, 0, 0})
	CMember(TArray<TWeakObjectPtr>)                    CustomItemList                                              OFFSET(get<T>, {0xD20, 16, 0, 0})
	CMember(TArray<TWeakObjectPtr>)                    ItemsForListView                                            OFFSET(get<T>, {0xD30, 16, 0, 0})
	CMember(TScriptInterface<Class>)                   ItemViewContext                                             OFFSET(get<T>, {0xD40, 16, 0, 0})
};

/// Class /Script/FortniteUI.FortItemListViewInterface
/// Size: 0x0000 (0x000028 - 0x000028)
class UFortItemListViewInterface : public UInterface
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 40;

public:
};

/// Class /Script/FortniteUI.FortItemListEntryWidgetInterface
/// Size: 0x0000 (0x000028 - 0x000028)
class UFortItemListEntryWidgetInterface : public UInterface
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 40;

public:
};

/// Class /Script/FortniteUI.FortItemTileView
/// Size: 0x0170 (0x000C00 - 0x000D70)
class UFortItemTileView : public UCommonTileView
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 3440;

public:
	DMember(bool)                                      bShouldShowNullItemListEntry                                OFFSET(get<bool>, {0xD08, 1, 0, 0})
	DMember(bool)                                      bAutomaticallyLoadItemDetails                               OFFSET(get<bool>, {0xD09, 1, 0, 0})
	CMember(EItemListViewDisplayType)                  DisplayType                                                 OFFSET(get<T>, {0xD0A, 1, 0, 0})
	DMember(bool)                                      bShouldOverrideChildItemWidgetCardSize                      OFFSET(get<bool>, {0xD0B, 1, 0, 0})
	CMember(EFortItemCardSize)                         ChildItemWidgetCardSizeOverride                             OFFSET(get<T>, {0xD0C, 1, 0, 0})
	DMember(float)                                     ChildCosmeticItemCardWidthOverride                          OFFSET(get<float>, {0xD10, 4, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnInventoryUpdatedEvent                                     OFFSET(getStruct<T>, {0xD18, 16, 0, 0})
	CMember(TArray<TWeakObjectPtr>)                    CustomItemList                                              OFFSET(get<T>, {0xD30, 16, 0, 0})
	CMember(TArray<TWeakObjectPtr>)                    ItemsForListView                                            OFFSET(get<T>, {0xD40, 16, 0, 0})
	CMember(TScriptInterface<Class>)                   ItemViewContext                                             OFFSET(get<T>, {0xD50, 16, 0, 0})
};

/// Class /Script/FortniteUI.FortRotatingItemTileButton
/// Size: 0x0020 (0x001520 - 0x001540)
class UFortRotatingItemTileButton : public UFortItemTileButton
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 5440;

public:
	DMember(float)                                     TimeBetweenRotations                                        OFFSET(get<float>, {0x1518, 4, 0, 0})
	DMember(bool)                                      bNeedsItemRotateAnimation                                   OFFSET(get<bool>, {0x151C, 1, 0, 0})
	CMember(TArray<UFortItem*>)                        ItemsToRotate                                               OFFSET(get<T>, {0x1528, 16, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortRotatingItemTileButton.StopRotating
	// void StopRotating();                                                                                                     // [0x950510c] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortRotatingItemTileButton.StopPlayingRotateItemAnimation
	// void StopPlayingRotateItemAnimation();                                                                                   // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.FortRotatingItemTileButton.StartRotating
	// void StartRotating();                                                                                                    // [0x95050f8] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortRotatingItemTileButton.StartPlayingRotateItemAnimation
	// void StartPlayingRotateItemAnimation();                                                                                  // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.FortRotatingItemTileButton.SetTimeBeweenRotations
	// void SetTimeBeweenRotations(float InTimeBetweenRotations);                                                               // [0x9505020] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortRotatingItemTileButton.SetNeedsItemRotateAnimation
	// void SetNeedsItemRotateAnimation(bool InNeedsItemRotationAnimation);                                                     // [0x9504d4c] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortRotatingItemTileButton.RotateToNextItem
	// void RotateToNextItem();                                                                                                 // [0x9504348] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/FortniteUI.FortItemCardMaterialPooler
/// Size: 0x0100 (0x000028 - 0x000128)
class UFortItemCardMaterialPooler : public UObject
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 296;

public:
};

/// Class /Script/FortniteUI.FortComparisonResultIndicator
/// Size: 0x0000 (0x000630 - 0x000630)
class UFortComparisonResultIndicator : public UFortMultiSizeImage
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1584;

public:


	/// Functions
	// Function /Script/FortniteUI.FortComparisonResultIndicator.SetComparisonResult
	// void SetComparisonResult(EFortBuffState ComparisonResult);                                                               // [0x95491f8] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/FortniteUI.FortCosmeticItemCard
/// Size: 0x00A0 (0x0002E8 - 0x000388)
class UFortCosmeticItemCard : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 904;

public:
	DMember(bool)                                      bIsReward                                                   OFFSET(get<bool>, {0x2F0, 1, 0, 0})
	DMember(bool)                                      bIsItemIconEnabled                                          OFFSET(get<bool>, {0x2F1, 1, 0, 0})
	DMember(bool)                                      bIsDetailIconEnabled                                        OFFSET(get<bool>, {0x2F2, 1, 0, 0})
	DMember(bool)                                      bIsQuantityEnabled                                          OFFSET(get<bool>, {0x2F3, 1, 0, 0})
	DMember(float)                                     WidthToHeightRatio                                          OFFSET(get<float>, {0x2F4, 4, 0, 0})
	DMember(float)                                     RewardWidthToHeightRatio                                    OFFSET(get<float>, {0x2F8, 4, 0, 0})
	DMember(float)                                     CardWidth                                                   OFFSET(get<float>, {0x2FC, 4, 0, 0})
	DMember(float)                                     RewardCardWidth                                             OFFSET(get<float>, {0x300, 4, 0, 0})
	CMember(UMaterialInterface*)                       DefaultItemCardMaterial                                     OFFSET(get<T>, {0x308, 8, 0, 0})
	DMember(float)                                     MinWidgetWidthForLargeAsset                                 OFFSET(get<float>, {0x310, 4, 0, 0})
	DMember(float)                                     MinWidgetWidthForLargeAssetMobile                           OFFSET(get<float>, {0x314, 4, 0, 0})
	CMember(USizeBox*)                                 SizeBox_NewItemCard                                         OFFSET(get<T>, {0x318, 8, 0, 0})
	CMember(UImage*)                                   Image_NewItemCard                                           OFFSET(get<T>, {0x320, 8, 0, 0})
	CMember(UCommonLoadGuard*)                         LoadGuard                                                   OFFSET(get<T>, {0x328, 8, 0, 0})
	CMember(UFortItem*)                                ItemToRepresent                                             OFFSET(get<T>, {0x330, 8, 0, 0})
	CMember(TMap<FGameplayTag, float>)                 ItemCardImageScales                                         OFFSET(get<T>, {0x338, 80, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortCosmeticItemCard.SetItemToRepresent
	// void SetItemToRepresent(UFortItem* InItemToRepresent);                                                                   // [0x954a4c4] Final|RequiredAPI|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortCosmeticItemCard.OnUpdateVisuals
	// void OnUpdateVisuals(bool bIsItem, bool bIsBorderAnimated, bool bIsHero, bool bReward, bool bIsShuffleItem, bool bShowAsArchived, bool bUseAnimations); // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortCosmeticItemCard.OnUpdateSeriesOrRarityColors
	// void OnUpdateSeriesOrRarityColors(FFortColorPalette& ColorPalette);                                                      // [0x1d9241c] Event|Protected|HasOutParms|BlueprintEvent 
	// Function /Script/FortniteUI.FortCosmeticItemCard.OnUpdateItemCardMaterial
	// void OnUpdateItemCardMaterial(UMaterialInterface* Material);                                                             // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortCosmeticItemCard.OnUpdateItemCardIcon
	// void OnUpdateItemCardIcon(UTexture2D* Icon, float IconScale);                                                            // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortCosmeticItemCard.OnUpdateEnhanced
	// void OnUpdateEnhanced(bool bEnhanced);                                                                                   // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortCosmeticItemCard.OnUnhover
	// void OnUnhover();                                                                                                        // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortCosmeticItemCard.OnSizeChanged
	// void OnSizeChanged(float InCardWidth);                                                                                   // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortCosmeticItemCard.OnItemIconVisibilityChanged
	// void OnItemIconVisibilityChanged(bool bIsVisible);                                                                       // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortCosmeticItemCard.OnHover
	// void OnHover();                                                                                                          // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortCosmeticItemCard.OnCardTypeChanged
	// void OnCardTypeChanged();                                                                                                // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortCosmeticItemCard.HasItemToRepresent
	// bool HasItemToRepresent();                                                                                               // [0x2c69818] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/FortniteUI.FortCosmeticLoadoutCard
/// Size: 0x02B0 (0x0002E8 - 0x000598)
class UFortCosmeticLoadoutCard : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1432;

public:
	SMember(FFortAthenaLoadout)                        RepresentedLoadout                                          OFFSET(getStruct<T>, {0x2E8, 608, 0, 0})
	CMember(EFortLoadoutCardType)                      CardType                                                    OFFSET(get<T>, {0x548, 1, 0, 0})
	SMember(FString)                                   LoadoutName                                                 OFFSET(getStruct<T>, {0x550, 16, 0, 0})
	DMember(bool)                                      bSaved                                                      OFFSET(get<bool>, {0x560, 1, 0, 0})
	DMember(float)                                     WidthToHeightRatio                                          OFFSET(get<float>, {0x564, 4, 0, 0})
	DMember(float)                                     CardWidth                                                   OFFSET(get<float>, {0x568, 4, 0, 0})
	CMember(UWidgetAnimation*)                         WipedownAnimation                                           OFFSET(get<T>, {0x570, 8, 0, 0})
	CMember(USizeBox*)                                 SizeBox_Card                                                OFFSET(get<T>, {0x580, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortCosmeticLoadoutCard.OnUpdateCard
	// void OnUpdateCard();                                                                                                     // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortCosmeticLoadoutCard.HandleDifferentHeroLoadoutActivated
	// void HandleDifferentHeroLoadoutActivated(UFortMcpProfileCampaign* Profile);                                              // [0x9547e40] Final|Native|Private 
	// Function /Script/FortniteUI.FortCosmeticLoadoutCard.GetCharacterPreviewImage
	// TWeakObjectPtr<UTexture2D*> GetCharacterPreviewImage();                                                                  // [0x9547a3c] Final|Native|Protected|BlueprintCallable|BlueprintPure 
};

/// Class /Script/FortniteUI.FortSimpleItemConditionIconIndicator
/// Size: 0x0000 (0x000630 - 0x000630)
class UFortSimpleItemConditionIconIndicator : public UFortMultiSizeImage
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1584;

public:


	/// Functions
	// Function /Script/FortniteUI.FortSimpleItemConditionIconIndicator.ShouldCollapseWhenConditionIsFalse
	// void ShouldCollapseWhenConditionIsFalse(bool Value);                                                                     // [0x957f280] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortSimpleItemConditionIconIndicator.SetItemToRepresent
	// void SetItemToRepresent(UFortItem* ItemToRepresent);                                                                     // [0x957ce24] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortSimpleItemConditionIconIndicator.GetItemToRepresent
	// UFortItem* GetItemToRepresent();                                                                                         // [0x95784fc] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/FortniteUI.FortEvolveIndicator
/// Size: 0x0000 (0x000630 - 0x000630)
class UFortEvolveIndicator : public UFortSimpleItemConditionIconIndicator
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1584;

public:
};

/// Class /Script/FortniteUI.FortFavoriteIndicator
/// Size: 0x0000 (0x000630 - 0x000630)
class UFortFavoriteIndicator : public UFortSimpleItemConditionIconIndicator
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1584;

public:
};

/// Class /Script/FortniteUI.FortIconWithLabel
/// Size: 0x0020 (0x000178 - 0x000198)
class UFortIconWithLabel : public UWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 408;

public:
	DMember(bool)                                      ShouldShowIcon                                              OFFSET(get<bool>, {0x178, 1, 0, 0})
	DMember(bool)                                      ShouldCollapseIconWhenNotShown                              OFFSET(get<bool>, {0x179, 1, 0, 0})
	CMember(TEnumAsByte<EFortBrushSize>)               IconBrushSize                                               OFFSET(get<T>, {0x17A, 1, 0, 0})
	DMember(bool)                                      ShouldShowLabel                                             OFFSET(get<bool>, {0x17B, 1, 0, 0})
	CMember(UClass*)                                   LabelTextStyle                                              OFFSET(get<T>, {0x180, 8, 0, 0})
};

/// Class /Script/FortniteUI.FortHeroSupportPerkIndicator
/// Size: 0x0010 (0x000198 - 0x0001A8)
class UFortHeroSupportPerkIndicator : public UFortIconWithLabel
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 424;

public:
	CMember(TWeakObjectPtr<UFortItem*>)                ItemToRepresent                                             OFFSET(get<T>, {0x198, 8, 0, 0})
	CMember(EFortSupportBonusType)                     SupportTypeToRepresent                                      OFFSET(get<T>, {0x1A0, 1, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortHeroSupportPerkIndicator.SetSupportTypeToRepresent
	// void SetSupportTypeToRepresent(EFortSupportBonusType SupportTypeToRepresent);                                            // [0x954b0a4] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortHeroSupportPerkIndicator.SetItemToRepresent
	// void SetItemToRepresent(UFortItem* ItemToRepresent);                                                                     // [0x954a544] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/FortniteUI.FortHeroSupportPerkWidget
/// Size: 0x04B0 (0x0002C0 - 0x000770)
class UFortHeroSupportPerkWidget : public UUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1904;

public:
	CMember(TWeakObjectPtr<UFortHero*>)                HeroToRepresent                                             OFFSET(get<T>, {0x2C0, 8, 0, 0})
	CMember(EFortSupportBonusType)                     SupportTypeToRepresent                                      OFFSET(get<T>, {0x2C8, 1, 0, 0})
	CMember(EFortSupportPerkWidgetState)               SupportPerkWidgetState                                      OFFSET(get<T>, {0x2C9, 1, 0, 0})
	CMember(UFortMultiSizeImage*)                      PerkImage                                                   OFFSET(get<T>, {0x2D0, 8, 0, 0})
	CMember(UCommonTextBlock*)                         NameText                                                    OFFSET(get<T>, {0x2D8, 8, 0, 0})
	CMember(UCommonTextBlock*)                         DescriptionText                                             OFFSET(get<T>, {0x2E0, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortHeroSupportPerkWidget.SetSupportTypeToRepresent
	// void SetSupportTypeToRepresent(EFortSupportBonusType InSupportTypeToRepresent);                                          // [0x954b14c] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortHeroSupportPerkWidget.SetState
	// void SetState(EFortSupportPerkWidgetState InState);                                                                      // [0x954aff0] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortHeroSupportPerkWidget.SetHeroToRepresent
	// void SetHeroToRepresent(UFortHero* InHeroToRepresent);                                                                   // [0x9549320] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortHeroSupportPerkWidget.OnSupportTypeUpdated
	// void OnSupportTypeUpdated();                                                                                             // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.FortHeroSupportPerkWidget.OnStateChanged
	// void OnStateChanged();                                                                                                   // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.FortHeroSupportPerkWidget.OnHeroUpdated
	// void OnHeroUpdated();                                                                                                    // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.FortHeroSupportPerkWidget.IsPerkUnlocked
	// bool IsPerkUnlocked();                                                                                                   // [0x9548cd8] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortHeroSupportPerkWidget.IsPerkInCorrectSlot
	// bool IsPerkInCorrectSlot();                                                                                              // [0x2a1f97c] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortHeroSupportPerkWidget.IsPerkHighlighted
	// bool IsPerkHighlighted();                                                                                                // [0x9548cac] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortHeroSupportPerkWidget.IsPerkEmpty
	// bool IsPerkEmpty();                                                                                                      // [0x9548c88] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortHeroSupportPerkWidget.IsPerkActive
	// bool IsPerkActive();                                                                                                     // [0x9548c54] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortHeroSupportPerkWidget.IsHeroInSupportSlot
	// bool IsHeroInSupportSlot();                                                                                              // [0x2a1f97c] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/FortniteUI.FortInventoryOverflowIndicator
/// Size: 0x0000 (0x000630 - 0x000630)
class UFortInventoryOverflowIndicator : public UFortSimpleItemConditionIconIndicator
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1584;

public:
};

/// Class /Script/FortniteUI.FortItemAutoMulchActivatablePanel
/// Size: 0x0058 (0x000570 - 0x0005C8)
class UFortItemAutoMulchActivatablePanel : public UFortActivatablePanel
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1480;

public:
};

/// Class /Script/FortniteUI.FortItemAutoMulchSettingRow
/// Size: 0x0010 (0x0014E0 - 0x0014F0)
class UFortItemAutoMulchSettingRow : public UCommonButtonLegacy
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 5360;

public:
};

/// Class /Script/FortniteUI.FortItemCardBase
/// Size: 0x0000 (0x0001A0 - 0x0001A0)
class UFortItemCardBase : public UFortItemWidget_NUI
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 416;

public:
};

/// Class /Script/FortniteUI.FortItemCardUtilities
/// Size: 0x0000 (0x000028 - 0x000028)
class UFortItemCardUtilities : public UBlueprintFunctionLibrary
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 40;

public:
};

/// Class /Script/FortniteUI.FortItemCategoryIndicator
/// Size: 0x0020 (0x000198 - 0x0001B8)
class UFortItemCategoryIndicator : public UFortIconWithLabel
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 440;

public:
	CMember(TWeakObjectPtr<UFortItem*>)                ItemToRepresent                                             OFFSET(get<T>, {0x198, 8, 0, 0})
	CMember(EFortItemCategoryOrdinal)                  OrdinalOfCategoryToRepresent                                OFFSET(get<T>, {0x1A0, 1, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortItemCategoryIndicator.SetOrdinalOfCategoryToRepresent
	// void SetOrdinalOfCategoryToRepresent(EFortItemCategoryOrdinal ItemCategoryOrdinal);                                      // [0x954ab34] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortItemCategoryIndicator.SetLabelColorOverride
	// void SetLabelColorOverride(FLinearColor InLabelColorOverride);                                                           // [0x954a9d8] Final|Native|Public|HasDefaults|BlueprintCallable 
	// Function /Script/FortniteUI.FortItemCategoryIndicator.SetItemToRepresent
	// void SetItemToRepresent(UFortItem* ItemToRepresent);                                                                     // [0x954a690] Final|RequiredAPI|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortItemCategoryIndicator.ClearLabelColorOverride
	// void ClearLabelColorOverride();                                                                                          // [0x95476d8] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/FortniteUI.FortItemCountTextBlock
/// Size: 0x0010 (0x000420 - 0x000430)
class UFortItemCountTextBlock : public UCommonNumericTextBlock
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1072;

public:
	CMember(UFortItemDefinition*)                      ItemDefinition                                              OFFSET(get<T>, {0x418, 8, 0, 0})
	CMember(EFortItemCountStyle)                       CountStyle                                                  OFFSET(get<T>, {0x420, 1, 0, 0})
	DMember(float)                                     ItemCountMaxInterpolateDuration                             OFFSET(get<float>, {0x424, 4, 0, 0})
	DMember(float)                                     ItemCountMinInterpolateRate                                 OFFSET(get<float>, {0x428, 4, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortItemCountTextBlock.SetOverrideValue
	// void SetOverrideValue(int32_t InOverrideValue);                                                                          // [0x954abdc] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortItemCountTextBlock.SetItemDefinition
	// void SetItemDefinition(UFortItemDefinition* InItemDefinition);                                                           // [0x9549570] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortItemCountTextBlock.SetCountStyle
	// void SetCountStyle(EFortItemCountStyle InCountStyle);                                                                    // [0x954929c] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortItemCountTextBlock.InterpolateOverrideToValue
	// void InterpolateOverrideToValue(int32_t TargetValue, float MaximumInterpolationDuration, float MinimumChangeRate, float OutroOffset); // [0x9548ac8] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortItemCountTextBlock.HandleItemCountChanged
	// void HandleItemCountChanged(UFortItemDefinition* Definition, int32_t Delta);                                             // [0x9547f84] Final|Native|Private 
};

/// Class /Script/FortniteUI.FortItemCraftingOptionsActivatablePanel
/// Size: 0x00A0 (0x000570 - 0x000610)
class UFortItemCraftingOptionsActivatablePanel : public UFortActivatablePanel
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1552;

public:
	CMember(UFortSchematicItem*)                       BaseItem                                                    OFFSET(get<T>, {0x570, 8, 0, 0})
	CMember(UFortSchematicItem*)                       TargetItem                                                  OFFSET(get<T>, {0x578, 8, 0, 0})
	DMember(int32_t)                                   MaxCraftingTierIndex                                        OFFSET(get<int32_t>, {0x580, 4, 0, 0})
	DMember(int32_t)                                   TargetCraftingTierIndex                                     OFFSET(get<int32_t>, {0x584, 4, 0, 0})
	DMember(int32_t)                                   TargetPromotionTierIndex                                    OFFSET(get<int32_t>, {0x588, 4, 0, 0})
	DMember(int32_t)                                   MaxQuantity                                                 OFFSET(get<int32_t>, {0x58C, 4, 0, 0})
	DMember(int32_t)                                   SelectedQuantity                                            OFFSET(get<int32_t>, {0x590, 4, 0, 0})
	DMember(bool)                                      CanCraftTargetItem                                          OFFSET(get<bool>, {0x594, 1, 0, 0})
	CMember(UWidget*)                                  TierImageParent                                             OFFSET(get<T>, {0x598, 8, 0, 0})
	CMember(UWidget*)                                  TierImageParent1                                            OFFSET(get<T>, {0x5A0, 8, 0, 0})
	CMember(UWidget*)                                  TierImageParent2                                            OFFSET(get<T>, {0x5A8, 8, 0, 0})
	CMember(UWidget*)                                  TierImageParent3                                            OFFSET(get<T>, {0x5B0, 8, 0, 0})
	CMember(UWidget*)                                  TierImageParent4                                            OFFSET(get<T>, {0x5B8, 8, 0, 0})
	CMember(UImage*)                                   TierImage                                                   OFFSET(get<T>, {0x5C0, 8, 0, 0})
	CMember(UImage*)                                   TierImage1                                                  OFFSET(get<T>, {0x5C8, 8, 0, 0})
	CMember(UImage*)                                   TierImage2                                                  OFFSET(get<T>, {0x5D0, 8, 0, 0})
	CMember(UImage*)                                   TierImage3                                                  OFFSET(get<T>, {0x5D8, 8, 0, 0})
	CMember(UImage*)                                   TierImage4                                                  OFFSET(get<T>, {0x5E0, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortItemCraftingOptionsActivatablePanel.UpdateTierImages
	// void UpdateTierImages();                                                                                                 // [0x954b39c] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.FortItemCraftingOptionsActivatablePanel.SetTargetCraftingTierIndex
	// void SetTargetCraftingTierIndex(int32_t NewTierIndex);                                                                   // [0x954b1f8] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.FortItemCraftingOptionsActivatablePanel.SetSelectedQuantity_BP
	// void SetSelectedQuantity_BP(int32_t NewQuantity);                                                                        // [0x954aea8] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.FortItemCraftingOptionsActivatablePanel.SetItemManagementScreen
	// void SetItemManagementScreen(UFortItemManagementScreen* InItemManagementScreen);                                         // [0x9549fac] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortItemCraftingOptionsActivatablePanel.SetBaseSchematicItem
	// void SetBaseSchematicItem(UFortSchematicItem* InBaseItem);                                                               // [0x9549178] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortItemCraftingOptionsActivatablePanel.SelectPreviousTier
	// void SelectPreviousTier();                                                                                               // [0x9549090] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.FortItemCraftingOptionsActivatablePanel.SelectNextTier
	// void SelectNextTier();                                                                                                   // [0x954903c] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.FortItemCraftingOptionsActivatablePanel.OnTargetItemChanged
	// void OnTargetItemChanged(UFortSchematicItem* NewTargetItem);                                                             // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortItemCraftingOptionsActivatablePanel.OnSelectedQuantityChanged
	// void OnSelectedQuantityChanged(int32_t NewSelectedQuantity);                                                             // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortItemCraftingOptionsActivatablePanel.OnMaxQuantityChanged
	// void OnMaxQuantityChanged(int32_t NewMaxQuantity);                                                                       // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortItemCraftingOptionsActivatablePanel.OnBaseItemChanged
	// void OnBaseItemChanged(UFortSchematicItem* NewBaseItem);                                                                 // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortItemCraftingOptionsActivatablePanel.IncreaseSelectedQuantity
	// void IncreaseSelectedQuantity();                                                                                         // [0x9548a9c] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.FortItemCraftingOptionsActivatablePanel.DecreaseSelectedQuantity
	// void DecreaseSelectedQuantity();                                                                                         // [0x9547808] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.FortItemCraftingOptionsActivatablePanel.CraftTargetItem
	// void CraftTargetItem();                                                                                                  // [0x9547798] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.FortItemCraftingOptionsActivatablePanel.CraftAndSlotTargetItem
	// void CraftAndSlotTargetItem();                                                                                           // [0x9547728] Final|Native|Protected|BlueprintCallable 
};

/// Class /Script/FortniteUI.FortItemDetailsActivatablePanel
/// Size: 0x0048 (0x000538 - 0x000580)
class UFortItemDetailsActivatablePanel : public UCommonActivatablePanelLegacy
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1408;

public:
	CMember(TWeakObjectPtr<UFortItem*>)                ItemToDetail                                                OFFSET(get<T>, {0x538, 8, 0, 0})
	CMember(TWeakObjectPtr<UFortItem*>)                ItemToCompareWith                                           OFFSET(get<T>, {0x540, 8, 0, 0})
	CMember(TWeakObjectPtr<UFortItemManagementScreen*>) HostItemManagementScreen                                   OFFSET(get<T>, {0x548, 8, 0, 0})
	CMember(UFortTooltipLoadingWrapper*)               ItemToDetailLoadingWrapper                                  OFFSET(get<T>, {0x570, 8, 0, 0})
	CMember(UCommonLoadGuard*)                         ItemToDetailLoadGuard                                       OFFSET(get<T>, {0x578, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortItemDetailsActivatablePanel.HandleItemToDetailTooltipAssetsLoaded
	// void HandleItemToDetailTooltipAssetsLoaded();                                                                            // [0x95489b8] Final|Native|Private 
	// Function /Script/FortniteUI.FortItemDetailsActivatablePanel.HandleDifferentItemToDetailSetBP
	// void HandleDifferentItemToDetailSetBP();                                                                                 // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortItemDetailsActivatablePanel.HandleDifferentItemToCompareSetBP
	// void HandleDifferentItemToCompareSetBP();                                                                                // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortItemDetailsActivatablePanel.HandleConsumeItemProgressChangedBP
	// void HandleConsumeItemProgressChangedBP();                                                                               // [0x1d9241c] Event|Protected|BlueprintEvent 
};

/// Class /Script/FortniteUI.FortItemDetailsModeActivatablePanel
/// Size: 0x0008 (0x000580 - 0x000588)
class UFortItemDetailsModeActivatablePanel : public UFortItemDetailsActivatablePanel
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1416;

public:
	CMember(UCommonWidgetSwitcherLegacy*)              DetailPanelWidgetSwitcher                                   OFFSET(get<T>, {0x580, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortItemDetailsModeActivatablePanel.HandleOnActiveWidgetChanged
	// void HandleOnActiveWidgetChanged(UWidget* ActiveWidget, int32_t ActiveWidgetIndex);                                      // [0x95489cc] Final|Native|Private 
};

/// Class /Script/FortniteUI.FortItemCompareModeActivatablePanel
/// Size: 0x0010 (0x000580 - 0x000590)
class UFortItemCompareModeActivatablePanel : public UFortItemDetailsActivatablePanel
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1424;

public:
	CMember(UFortItemManagementItemDetailsPanel*)      ComparisonModeLeftItemDetailsPanel                          OFFSET(get<T>, {0x580, 8, 0, 0})
	CMember(UFortItemManagementItemDetailsPanel*)      ComparisonModeRightItemDetailsPanel                         OFFSET(get<T>, {0x588, 8, 0, 0})
};

/// Class /Script/FortniteUI.FortItemMulchModeActivatablePanel
/// Size: 0x0010 (0x000580 - 0x000590)
class UFortItemMulchModeActivatablePanel : public UFortItemDetailsActivatablePanel
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1424;

public:
	CMember(UFortItemManagementItemDetailsPanel*)      MulchModeItemDetailsPanel                                   OFFSET(get<T>, {0x580, 8, 0, 0})
	CMember(UFortItemManagementMulchDetailsPanel*)     MulchDetailsPanel                                           OFFSET(get<T>, {0x588, 8, 0, 0})
};

/// Class /Script/FortniteUI.FortItemDetailElementWidget
/// Size: 0x0058 (0x0002E8 - 0x000340)
class UFortItemDetailElementWidget : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 832;

public:
	CMember(TWeakObjectPtr<UFortItem*>)                ItemToDetail                                                OFFSET(get<T>, {0x2E8, 8, 0, 0})
	CMember(TWeakObjectPtr<UFortItem*>)                ItemToCompareWith                                           OFFSET(get<T>, {0x2F0, 8, 0, 0})
	DMember(bool)                                      bShouldPreviewUpgradingItem                                 OFFSET(get<bool>, {0x2F8, 1, 0, 0})
	DMember(int32_t)                                   UpgradeLevelDelta                                           OFFSET(get<int32_t>, {0x2FC, 4, 0, 0})
	CMember(TScriptInterface<Class>)                   ItemViewContext                                             OFFSET(get<T>, {0x300, 16, 0, 0})
	CMember(EFortItemInspectionMode)                   CurrentInspectMode                                          OFFSET(get<T>, {0x310, 1, 0, 0})
	DMember(int32_t)                                   QuantityOverride                                            OFFSET(get<int32_t>, {0x314, 4, 0, 0})
	DMember(bool)                                      bIsUpdatingSuspended                                        OFFSET(get<bool>, {0x318, 1, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortItemDetailElementWidget.HandleUpgradeLevelDeltaChanged
	// void HandleUpgradeLevelDeltaChanged();                                                                                   // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortItemDetailElementWidget.HandleShouldPreviewUpgradingItemChanged
	// void HandleShouldPreviewUpgradingItemChanged();                                                                          // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortItemDetailElementWidget.HandleQuantityOverrideChanged
	// void HandleQuantityOverrideChanged();                                                                                    // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortItemDetailElementWidget.HandlePreDifferentItemToDetailSet
	// void HandlePreDifferentItemToDetailSet();                                                                                // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortItemDetailElementWidget.HandlePreDifferentItemToCompareWithSet
	// void HandlePreDifferentItemToCompareWithSet();                                                                           // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortItemDetailElementWidget.HandlePostDifferentItemToDetailSet
	// void HandlePostDifferentItemToDetailSet();                                                                               // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortItemDetailElementWidget.HandlePostDifferentItemToCompareWithSet
	// void HandlePostDifferentItemToCompareWithSet();                                                                          // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortItemDetailElementWidget.HandleItemToDetailChangedBP
	// void HandleItemToDetailChangedBP();                                                                                      // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortItemDetailElementWidget.HandleItemToCompareWithChangedBP
	// void HandleItemToCompareWithChangedBP();                                                                                 // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortItemDetailElementWidget.HandleInspectModeChanged
	// void HandleInspectModeChanged();                                                                                         // [0x1d9241c] Event|Protected|BlueprintEvent 
};

/// Class /Script/FortniteUI.FortItemDetailsPanel
/// Size: 0x0028 (0x0002E8 - 0x000310)
class UFortItemDetailsPanel : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 784;

public:
	CMember(TWeakObjectPtr<UFortItem*>)                ItemToDetail                                                OFFSET(get<T>, {0x2E8, 8, 0, 0})
	CMember(TWeakObjectPtr<UFortItem*>)                ItemToCompareWith                                           OFFSET(get<T>, {0x2F0, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortItemDetailsPanel.SetItemToDetail
	// void SetItemToDetail(UFortItem* ItemToDetail);                                                                           // [0x954a444] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortItemDetailsPanel.SetItemToCompareWith
	// void SetItemToCompareWith(UFortItem* ItemToCompareWith);                                                                 // [0x954a344] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortItemDetailsPanel.HandleItemToDetailChanged
	// void HandleItemToDetailChanged(bool bItemChanged, bool bAmmoChanged, bool bIngredientsChanged);                          // [0x95488ac] Final|Native|Private 
	// Function /Script/FortniteUI.FortItemDetailsPanel.HandleItemToCompareWithChanged
	// void HandleItemToCompareWithChanged(bool bItemChanged, bool bAmmoChanged, bool bIngredientsChanged);                     // [0x95487a0] Final|Native|Private 
	// Function /Script/FortniteUI.FortItemDetailsPanel.HandleDifferentItemToDetailSet
	// void HandleDifferentItemToDetailSet();                                                                                   // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortItemDetailsPanel.HandleDifferentItemToCompareSet
	// void HandleDifferentItemToCompareSet();                                                                                  // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortItemDetailsPanel.HandleCursorModeChanged
	// void HandleCursorModeChanged(bool bCursorModeEnabled, FName ActionName, UUserWidget* CustomWidget);                      // [0x9547d38] Final|Native|Private 
};

/// Class /Script/FortniteUI.FortItemDisplayNameText
/// Size: 0x0030 (0x000380 - 0x0003B0)
class UFortItemDisplayNameText : public UCommonTextBlock
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 944;

public:
	CMember(TWeakObjectPtr<UFortItem*>)                ItemToRepresent                                             OFFSET(get<T>, {0x378, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortItemDisplayNameText.SetItemToRepresent
	// void SetItemToRepresent(UFortItem* ItemToRepresent);                                                                     // [0x954a710] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/FortniteUI.FortItemInfoPresentationWidget
/// Size: 0x0030 (0x0002E8 - 0x000318)
class UFortItemInfoPresentationWidget : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 792;

public:
	CMember(UAthenaRewardItemTypeRarityTag*)           AthenaRewardItemTypeRarityTag                               OFFSET(get<T>, {0x2E8, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_Name                                                   OFFSET(get<T>, {0x2F0, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_DescReward                                             OFFSET(get<T>, {0x2F8, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_Variance                                               OFFSET(get<T>, {0x300, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_DescVariance                                           OFFSET(get<T>, {0x308, 8, 0, 0})
	CMember(UOverlay*)                                 Overlay_MainView                                            OFFSET(get<T>, {0x310, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortItemInfoPresentationWidget.PopulateUsingItem
	// void PopulateUsingItem(UFortItem* NewItem);                                                                              // [0x9548cfc] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/FortniteUI.FortItemInfoWidget
/// Size: 0x0020 (0x0002E8 - 0x000308)
class UFortItemInfoWidget : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 776;

public:
	CMember(UCommonTextBlock*)                         Text_Name                                                   OFFSET(get<T>, {0x2E8, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_ItemType                                               OFFSET(get<T>, {0x2F0, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_Desc                                                   OFFSET(get<T>, {0x2F8, 8, 0, 0})
	CMember(UOverlay*)                                 Overlay_MainView                                            OFFSET(get<T>, {0x300, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortItemInfoWidget.SetRarityMaterialValues
	// void SetRarityMaterialValues(UFortItemDefinition* ItemDefinition);                                                       // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortItemInfoWidget.PopulateUsingItemDefinition
	// void PopulateUsingItemDefinition(UFortItemDefinition* NewItem);                                                          // [0x9548e40] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.FortItemInfoWidget.PopulateUsingItem
	// void PopulateUsingItem(UFortItem* NewItem);                                                                              // [0x9548d7c] Final|Native|Protected|BlueprintCallable 
};

/// Class /Script/FortniteUI.FortItemListPreviewWidget
/// Size: 0x0078 (0x000400 - 0x000478)
class UFortItemListPreviewWidget : public UCommonActivatableWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1144;

public:
	CMember(UTileView*)                                TileView_Items                                              OFFSET(get<T>, {0x458, 8, 0, 0})
	CMember(UWidget*)                                  Container_Items                                             OFFSET(get<T>, {0x460, 8, 0, 0})
	CMember(UCommonButtonLegacy*)                      Button_PreviewVariants                                      OFFSET(get<T>, {0x468, 8, 0, 0})
	CMember(UFortHoldableButton*)                      Button_Subscribe                                            OFFSET(get<T>, {0x470, 8, 0, 0})
};

/// Class /Script/FortniteUI.FortItemPairsInspectionScreen
/// Size: 0x0100 (0x000720 - 0x000820)
class UFortItemPairsInspectionScreen : public UFortItemPreviewScreen
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 2080;

public:
	CMember(UWidget*)                                  ContentPurchasedFocusWidget                                 OFFSET(get<T>, {0x740, 8, 0, 0})
	DMember(float)                                     DefaultVariantCyclingDelay                                  OFFSET(get<float>, {0x7C8, 4, 0, 0})
	DMember(float)                                     TimeBetweenVariants                                         OFFSET(get<float>, {0x7CC, 4, 0, 0})
	CMember(UFortItemDefinition*)                      PresentedItemDefinition                                     OFFSET(get<T>, {0x7D0, 8, 0, 0})
	CMember(EPresentationMode)                         PresentationMode                                            OFFSET(get<T>, {0x7D8, 1, 0, 0})
	CMember(UCommonButtonBase*)                        Button_Back                                                 OFFSET(get<T>, {0x7E0, 8, 0, 0})
	CMember(UCommonButtonBase*)                        Button_TouchBack                                            OFFSET(get<T>, {0x7E8, 8, 0, 0})
	CMember(UCommonActivatableWidgetSwitcher*)         Switcher_PresentationMode                                   OFFSET(get<T>, {0x7F0, 8, 0, 0})
	CMember(UFortItemListPreviewWidget*)               Widget_ItemList                                             OFFSET(get<T>, {0x7F8, 8, 0, 0})
	CMember(UFortVariantListPreviewWidget*)            Widget_VariantList                                          OFFSET(get<T>, {0x800, 8, 0, 0})
	CMember(UFortItemBaseWidget*)                      Widget_ItemInfoHeader                                       OFFSET(get<T>, {0x808, 8, 0, 0})
	CMember(UFortStoreSkinDetailsPopup*)               ItemPopup_Details                                           OFFSET(get<T>, {0x810, 8, 0, 0})
	CMember(UAthenaCosmeticUnlockingInfo*)             UnlockingInfo                                               OFFSET(get<T>, {0x818, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortItemPairsInspectionScreen.SetupInfoHeader
	// void SetupInfoHeader(bool bShouldShowCard);                                                                              // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortItemPairsInspectionScreen.PlayIntroAnimation
	// void PlayIntroAnimation();                                                                                               // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortItemPairsInspectionScreen.GetItemInfoHeader
	// UFortItemBaseWidget* GetItemInfoHeader();                                                                                // [0x7cb7bac] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortItemPairsInspectionScreen.BP_UpdatePresentationMode
	// void BP_UpdatePresentationMode(EPresentationMode NewMode);                                                               // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortItemPairsInspectionScreen.BlockScreenContent
	// void BlockScreenContent(bool bBlockScreen, FText& ContentBlockedText);                                                   // [0x1d9241c] Event|Protected|HasOutParms|BlueprintEvent 
};

/// Class /Script/FortniteUI.FortItemQuantityListEntryBase
/// Size: 0x0028 (0x0002E8 - 0x000310)
class UFortItemQuantityListEntryBase : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 784;

public:
	DMember(int32_t)                                   Quantity                                                    OFFSET(get<int32_t>, {0x2F0, 4, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortItemQuantityListEntryBase.SetPreviewData
	// void SetPreviewData(FFortItemEntryPreviewData& PreviewData);                                                             // [0x954ad04] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/FortniteUI.FortItemQuantityListEntryBase.SetItemInstanceAndQuantity
	// void SetItemInstanceAndQuantity(FFortItemInstanceQuantityPair& ItemQuantityPair, bool ShouldTreatAsReset);               // [0x9549b34] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/FortniteUI.FortItemQuantityListEntryBase.SetItemDefinitionAndQuantity
	// void SetItemDefinitionAndQuantity(FFortItemQuantityPair& ItemQuantityPair, bool ShouldTreatAsReset);                     // [0x9549698] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/FortniteUI.FortItemQuantityListEntryBase.RefreshListEntry
	// void RefreshListEntry();                                                                                                 // [0x1d9241c] Event|Public|BlueprintCallable|BlueprintEvent 
	// Function /Script/FortniteUI.FortItemQuantityListEntryBase.PreviewStarted
	// void PreviewStarted();                                                                                                   // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortItemQuantityListEntryBase.PreviewEnded
	// void PreviewEnded();                                                                                                     // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortItemQuantityListEntryBase.IsBeingPreviewed
	// bool IsBeingPreviewed();                                                                                                 // [0x9548c1c] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortItemQuantityListEntryBase.HandleDifferentItemOrQuantitySetBP
	// void HandleDifferentItemOrQuantitySetBP(bool IsBeingReset);                                                              // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortItemQuantityListEntryBase.GetPreviewData
	// void GetPreviewData(FFortItemEntryPreviewData& OutPreviewData);                                                          // [0x9547bcc] Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortItemQuantityListEntryBase.GetItemInstance
	// UFortItem* GetItemInstance();                                                                                            // [0x9547b68] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortItemQuantityListEntryBase.GetItemDefinition
	// UFortItemDefinition* GetItemDefinition();                                                                                // [0x9547ae8] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortItemQuantityListEntryBase.ClearPreviewData
	// void ClearPreviewData();                                                                                                 // [0x9547714] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/FortniteUI.FortItemQuantityListBase
/// Size: 0x0090 (0x0002E8 - 0x000378)
class UFortItemQuantityListBase : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 888;

public:
	CMember(EFortItemInspectionMode)                   CurrentInspectMode                                          OFFSET(get<T>, {0x2E8, 1, 0, 0})
	DMember(bool)                                      bListenToInventoryChanges                                   OFFSET(get<bool>, {0x2E9, 1, 0, 0})
	CMember(UClass*)                                   ListEntryWidgetType                                         OFFSET(get<T>, {0x2F0, 8, 0, 0})
	CMember(TArray<UObject*>)                          ItemObjectsToKeepAlive                                      OFFSET(get<T>, {0x348, 16, 0, 0})
	CMember(TArray<UFortItemDefinition*>)              FortItemDefinitions                                         OFFSET(get<T>, {0x368, 16, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortItemQuantityListBase.SetItemToCompareDefinitionsAndQuantities
	// void SetItemToCompareDefinitionsAndQuantities(TArray<FFortItemQuantityPair>& ItemToCompareQuantityPairs);                // [0x954a228] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/FortniteUI.FortItemQuantityListBase.SetItemInstancesAndQuantities
	// void SetItemInstancesAndQuantities(TArray<FFortItemInstanceQuantityPair>& ItemQuantityPairs, bool ShouldResetWidgets);   // [0x9549ce8] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/FortniteUI.FortItemQuantityListBase.SetItemInspectMode
	// void SetItemInspectMode(EFortItemInspectionMode InspectMode);                                                            // [0x9549a8c] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortItemQuantityListBase.SetItemDefinitionsAndQuantities
	// void SetItemDefinitionsAndQuantities(TArray<FFortItemQuantityPair>& ItemQuantityPairs, bool ShouldResetWidgets);         // [0x95498c8] Final|RequiredAPI|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/FortniteUI.FortItemQuantityListBase.OnItemInspectModeChanged
	// void OnItemInspectModeChanged();                                                                                         // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.FortItemQuantityListBase.IsEmptyList
	// bool IsEmptyList();                                                                                                      // [0x9548c34] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortItemQuantityListBase.GetItemDefinitions
	// TArray<UFortItemDefinition*> GetItemDefinitions();                                                                       // [0x9547b0c] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortItemQuantityListBase.AddListEntry
	// void AddListEntry(UFortItemQuantityListEntryBase* ListEntry);                                                            // [0x1d9241c] Event|Protected|BlueprintEvent 
};

/// Class /Script/FortniteUI.FortItemRatingIndicator
/// Size: 0x04C8 (0x0002E8 - 0x0007B0)
class UFortItemRatingIndicator : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1968;

public:
	CMember(TWeakObjectPtr<UFortItem*>)                ItemToRepresent                                             OFFSET(get<T>, {0x2E8, 8, 0, 0})
	CMember(TWeakObjectPtr<UFortItem*>)                ItemToCompareWith                                           OFFSET(get<T>, {0x2F0, 8, 0, 0})
	SMember(FFortMultiSizeBrush)                       RatingTypeIcon                                              OFFSET(getStruct<T>, {0x300, 1152, 0, 0})
	DMember(int32_t)                                   RatingValue                                                 OFFSET(get<int32_t>, {0x780, 4, 0, 0})
	CMember(EFortBuffState)                            ComparisonResult                                            OFFSET(get<T>, {0x784, 1, 0, 0})
	DMember(bool)                                      ShouldAppearEnchanted                                       OFFSET(get<bool>, {0x785, 1, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortItemRatingIndicator.SetItemViewContext
	// void SetItemViewContext(TScriptInterface<Class> ItemViewContext);                                                        // [0x954a948] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortItemRatingIndicator.SetItemToRepresent
	// void SetItemToRepresent(UFortItem* ItemToRepresent);                                                                     // [0x954a790] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortItemRatingIndicator.SetItemToCompareWith
	// void SetItemToCompareWith(UFortItem* ItemToCompareWith);                                                                 // [0x954a3c4] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortItemRatingIndicator.HandleViewModelChanged
	// void HandleViewModelChanged();                                                                                           // [0x1d9241c] Event|Protected|BlueprintEvent 
};

/// Class /Script/FortniteUI.FortItemView
/// Size: 0x02E8 (0x000028 - 0x000310)
class UFortItemView : public UObject
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 784;

public:
	SMember(FDataTableRowHandle)                       UnifiedSupportsCameraControlInputAction                     OFFSET(getStruct<T>, {0x30, 16, 0, 0})
	SMember(FDataTableRowHandle)                       UnifiedZoomInputAction                                      OFFSET(getStruct<T>, {0x40, 16, 0, 0})
	SMember(FDataTableRowHandle)                       ZoomOutInputAction                                          OFFSET(getStruct<T>, {0x50, 16, 0, 0})
	SMember(FDataTableRowHandle)                       ZoomInInputAction                                           OFFSET(getStruct<T>, {0x60, 16, 0, 0})
	SMember(FDataTableRowHandle)                       RotateInputAction                                           OFFSET(getStruct<T>, {0x70, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnItemRotationChanged                                       OFFSET(getStruct<T>, {0x80, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnItemZoomLevelChanged                                      OFFSET(getStruct<T>, {0x90, 16, 0, 0})
	CMember(TArray<FDataTableRowHandle>)               RegisteredInputActions                                      OFFSET(get<T>, {0x2A8, 16, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortItemView.UnregisterInputActions
	// void UnregisterInputActions();                                                                                           // [0x954b388] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortItemView.SetSettings
	// void SetSettings(FFortItemViewSettings& Settings);                                                                       // [0x954af28] Final|RequiredAPI|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/FortniteUI.FortItemView.SetSceneComponentToAffect
	// void SetSceneComponentToAffect(USceneComponent* Component);                                                              // [0x954ae14] Final|RequiredAPI|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortItemView.SetOwningWidget
	// void SetOwningWidget(UCommonActivatableWidget* Widget);                                                                  // [0x954ac84] Final|RequiredAPI|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortItemView.RestoreInitialTransform
	// void RestoreInitialTransform(bool bKeepCurrentRotation);                                                                 // [0x9548f94] Final|RequiredAPI|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortItemView.RegisterInputActions
	// void RegisterInputActions();                                                                                             // [0x9548f6c] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortItemView.OnUserInputChangedView__DelegateSignature
	// void OnUserInputChangedView__DelegateSignature();                                                                        // [0x1d9241c] MulticastDelegate|Public|Delegate 
	// Function /Script/FortniteUI.FortItemView.GetSettings
	// FFortItemViewSettings GetSettings();                                                                                     // [0x9547cec] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/FortniteUI.FortItemViewContextInterface
/// Size: 0x0000 (0x000028 - 0x000028)
class UFortItemViewContextInterface : public UInterface
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 40;

public:
};

/// Class /Script/FortniteUI.FortLevelIndicator
/// Size: 0x0088 (0x000178 - 0x000200)
class UFortLevelIndicator : public UWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 512;

public:
	CMember(TWeakObjectPtr<UFortItem*>)                ItemToRepresent                                             OFFSET(get<T>, {0x178, 8, 0, 0})
	CMember(TWeakObjectPtr<UFortItem*>)                ItemForComparison                                           OFFSET(get<T>, {0x180, 8, 0, 0})
	DMember(bool)                                      ShouldShowLabel                                             OFFSET(get<bool>, {0x188, 1, 0, 0})
	CMember(UClass*)                                   TextStyle                                                   OFFSET(get<T>, {0x190, 8, 0, 0})
	DMember(bool)                                      ShouldShowMaximumLevel                                      OFFSET(get<bool>, {0x198, 1, 0, 0})
	DMember(int32_t)                                   CurrentLevel                                                OFFSET(get<int32_t>, {0x19C, 4, 0, 0})
	DMember(int32_t)                                   MaximumLevel                                                OFFSET(get<int32_t>, {0x1A0, 4, 0, 0})
	DMember(bool)                                      IsComparingLevels                                           OFFSET(get<bool>, {0x1A4, 1, 0, 0})
	CMember(TEnumAsByte<EFortBrushSize>)               ComparisonResultIndicatorSize                               OFFSET(get<T>, {0x1A5, 1, 0, 0})
	DMember(int32_t)                                   CurrentLevelForComparison                                   OFFSET(get<int32_t>, {0x1A8, 4, 0, 0})
	DMember(int32_t)                                   MaximumLevelForComparison                                   OFFSET(get<int32_t>, {0x1AC, 4, 0, 0})
	CMember(UCommonTextBlock*)                         LabelTextBlock                                              OFFSET(get<T>, {0x1B0, 8, 0, 0})
	CMember(UCommonNumericTextBlock*)                  CurrentLevelNumericTextBlock                                OFFSET(get<T>, {0x1B8, 8, 0, 0})
	CMember(UCommonTextBlock*)                         DivisionOperatorTextBlock                                   OFFSET(get<T>, {0x1D0, 8, 0, 0})
	CMember(UCommonNumericTextBlock*)                  MaximumLevelNumericTextBlock                                OFFSET(get<T>, {0x1D8, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortLevelIndicator.SetShouldShowMaximumLevel
	// void SetShouldShowMaximumLevel(bool InShouldShowMaximumLevel);                                                           // [0x957ec60] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortLevelIndicator.SetItemToRepresent
	// void SetItemToRepresent(UFortItem* ItemToRepresent);                                                                     // [0x957ccfc] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortLevelIndicator.SetItemForComparison
	// void SetItemForComparison(UFortItem* ItemForComparison);                                                                 // [0x957cbd4] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortLevelIndicator.HandleItemToRepresentChanged
	// void HandleItemToRepresentChanged(bool bItemChanged, bool bAmmoChanged, bool bIngredientsChanged);                       // [0x957945c] Final|Native|Private 
	// Function /Script/FortniteUI.FortLevelIndicator.HandleItemForComparisonChanged
	// void HandleItemForComparisonChanged(bool bItemChanged, bool bAmmoChanged, bool bIngredientsChanged);                     // [0x957945c] Final|Native|Private 
};

/// Class /Script/FortniteUI.FortMultiSizeItemCard
/// Size: 0x0040 (0x0001A0 - 0x0001E0)
class UFortMultiSizeItemCard : public UFortItemWidget_NUI
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 480;

public:
	CMember(EFortItemCardSize)                         BPItemCardSize                                              OFFSET(get<T>, {0x1A0, 1, 0, 0})
	DMember(bool)                                      ShouldDisplayItemAsReward                                   OFFSET(get<bool>, {0x1A1, 1, 0, 0})
	DMember(int32_t)                                   QuantityOverride                                            OFFSET(get<int32_t>, {0x1A4, 4, 0, 0})
	CMember(EFortRarity)                               RarityOverride                                              OFFSET(get<T>, {0x1A8, 1, 0, 0})
	CMember(EFortItemType)                             EmptyItemType                                               OFFSET(get<T>, {0x1A9, 1, 0, 0})
	DMember(bool)                                      ShouldSuppressItemTypeIcon                                  OFFSET(get<bool>, {0x1AA, 1, 0, 0})
	DMember(bool)                                      ShouldSuppressTierMeter                                     OFFSET(get<bool>, {0x1AB, 1, 0, 0})
	DMember(bool)                                      ShouldCollapseBorderPadding                                 OFFSET(get<bool>, {0x1AC, 1, 0, 0})
	DMember(bool)                                      ShouldCollapseItem                                          OFFSET(get<bool>, {0x1AD, 1, 0, 0})
	DMember(bool)                                      ShouldAutoHideDurability                                    OFFSET(get<bool>, {0x1AE, 1, 0, 0})
	DMember(bool)                                      ShouldCollapseQuantity                                      OFFSET(get<bool>, {0x1AF, 1, 0, 0})
	DMember(bool)                                      ShouldShowDurabilityRepairMode                              OFFSET(get<bool>, {0x1B0, 1, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortMultiSizeItemCard.ShouldUseNewItemCards
	// bool ShouldUseNewItemCards();                                                                                            // [0x957f324] Final|Native|Static|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/FortniteUI.FortMultiSizeItemCard.SetShouldSuppressItemTypeIcon
	// void SetShouldSuppressItemTypeIcon(bool Value);                                                                          // [0x957ecf0] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortMultiSizeItemCard.SetShouldShowDurabilityRepairMode
	// void SetShouldShowDurabilityRepairMode(bool Value);                                                                      // [0x957ebbc] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortMultiSizeItemCard.SetShouldDisplayItemAsReward
	// void SetShouldDisplayItemAsReward(bool Value);                                                                           // [0x957eb3c] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortMultiSizeItemCard.SetShouldCollapseQuantity
	// void SetShouldCollapseQuantity(bool Value);                                                                              // [0x957ea98] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortMultiSizeItemCard.SetShouldCollapseItem
	// void SetShouldCollapseItem(bool Value);                                                                                  // [0x957ea18] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortMultiSizeItemCard.SetShouldCollapseBorderPadding
	// void SetShouldCollapseBorderPadding(bool Value);                                                                         // [0x957e96c] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortMultiSizeItemCard.SetRarityOverride
	// void SetRarityOverride(EFortRarity RarityOverride);                                                                      // [0x957e73c] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortMultiSizeItemCard.SetQuantityOverride
	// void SetQuantityOverride(int32_t QuantityOverride);                                                                      // [0x957e6bc] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortMultiSizeItemCard.SetEmptyItemType
	// void SetEmptyItemType(EFortItemType NewEmptyItemType);                                                                   // [0x957c5c0] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortMultiSizeItemCard.SetCardSize
	// void SetCardSize(EFortItemCardSize CardSize);                                                                            // [0x957c4a4] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortMultiSizeItemCard.GetCardSize
	// EFortItemCardSize GetCardSize();                                                                                         // [0x9577c70] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/FortniteUI.FortTierIndicator
/// Size: 0x0020 (0x000178 - 0x000198)
class UFortTierIndicator : public UWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 408;

public:
	CMember(TWeakObjectPtr<UFortItem*>)                ItemToRepresent                                             OFFSET(get<T>, {0x178, 8, 0, 0})
	CMember(TEnumAsByte<EFortBrushSize>)               BrushSize                                                   OFFSET(get<T>, {0x180, 1, 0, 0})
	DMember(float)                                     InterPipPadding                                             OFFSET(get<float>, {0x184, 4, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortTierIndicator.SetPreviewState
	// void SetPreviewState(int32_t TierIncrease);                                                                              // [0x957e620] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortTierIndicator.SetItemToRepresent
	// void SetItemToRepresent(UFortItem* ItemToRepresent);                                                                     // [0x957cebc] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortTierIndicator.SetInterPipPadding
	// void SetInterPipPadding(float InterPipPadding);                                                                          // [0x957cb54] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortTierIndicator.SetBrushSize
	// void SetBrushSize(TEnumAsByte<EFortBrushSize> BrushSize);                                                                // [0x957c414] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortTierIndicator.ClearPreviewState
	// void ClearPreviewState();                                                                                                // [0x957537c] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/FortniteUI.FortUpgradeIndicator
/// Size: 0x0000 (0x000630 - 0x000630)
class UFortUpgradeIndicator : public UFortSimpleItemConditionIconIndicator
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1584;

public:
};

/// Class /Script/FortniteUI.FortRejoinWindowBase
/// Size: 0x0078 (0x000538 - 0x0005B0)
class UFortRejoinWindowBase : public UCommonActivatablePanelLegacy
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1456;

public:
	CMember(UCommonTextBlock*)                         Text_RejoinTime                                             OFFSET(get<T>, {0x538, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_Description                                            OFFSET(get<T>, {0x540, 8, 0, 0})
	CMember(UCommonButtonLegacy*)                      Button_Rejoin                                               OFFSET(get<T>, {0x548, 8, 0, 0})
	CMember(UCommonButtonLegacy*)                      Button_Retry                                                OFFSET(get<T>, {0x550, 8, 0, 0})
	CMember(UCommonButtonLegacy*)                      Button_Abandon                                              OFFSET(get<T>, {0x558, 8, 0, 0})
};

/// Class /Script/FortniteUI.KairosViewport
/// Size: 0x00E8 (0x000190 - 0x000278)
class UKairosViewport : public UContentWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 632;

public:
	SMember(FLinearColor)                              BackgroundColor                                             OFFSET(getStruct<T>, {0x190, 16, 0, 0})
	CMember(UMaterialInterface*)                       EffectMaterial                                              OFFSET(get<T>, {0x1A0, 8, 0, 0})
	CMember(TEnumAsByte<ESceneCaptureSource>)          CaptureSource                                               OFFSET(get<T>, {0x1A8, 1, 0, 0})
	SMember(FVector)                                   ViewLocation                                                OFFSET(getStruct<T>, {0x1B0, 24, 0, 0})
	SMember(FRotator)                                  ViewRotation                                                OFFSET(getStruct<T>, {0x1C8, 24, 0, 0})
	CMember(UClass*)                                   DefaultGameMode                                             OFFSET(get<T>, {0x1E0, 8, 0, 0})
	CMember(UMaterialInstanceDynamic*)                 DynamicMaterial                                             OFFSET(get<T>, {0x1E8, 8, 0, 0})
	CMember(UTextureRenderTarget2D*)                   RenderTarget                                                OFFSET(get<T>, {0x1F0, 8, 0, 0})
	CMember(USceneCaptureComponent2D*)                 CaptureComponent                                            OFFSET(get<T>, {0x1F8, 8, 0, 0})
	CMember(UClass*)                                   ViewportActorClass                                          OFFSET(get<T>, {0x208, 8, 0, 0})
	CMember(TArray<AActor*>)                           SpawnedActors                                               OFFSET(get<T>, {0x210, 16, 0, 0})
};

/// Class /Script/FortniteUI.FortLeaderboardEntryDetails
/// Size: 0x0008 (0x0002E8 - 0x0002F0)
class UFortLeaderboardEntryDetails : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 752;

public:
	DMember(bool)                                      bAllowProfileNavigation                                     OFFSET(get<bool>, {0x2E8, 1, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortLeaderboardEntryDetails.WatchLiveMatch
	// void WatchLiveMatch(FString SessionId);                                                                                  // [0x9580d30] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.FortLeaderboardEntryDetails.GetAlternativeLeaderboardTrackedStats
	// TArray<FString> GetAlternativeLeaderboardTrackedStats(FString TournamentId, FString EventWindowId, FString LeaderboardGroupingKey, FString LeaderboardInstanceId); // [0x9576e20] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortLeaderboardEntryDetails.GetAlternativeLeaderboardTrackedStatLabel
	// FText GetAlternativeLeaderboardTrackedStatLabel(FString TrackedStatName);                                                // [0x957675c] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/FortniteUI.FortLeaderboardEntryWidget
/// Size: 0x0040 (0x0014E0 - 0x001520)
class UFortLeaderboardEntryWidget : public UCommonButtonLegacy
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 5408;

public:
	CMember(UObject*)                                  LeaderboardEntryObject                                      OFFSET(get<T>, {0x14E8, 8, 0, 0})
	CMember(UCommonBorder*)                            Container_PlatformSocialCard                                OFFSET(get<T>, {0x14F0, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_PlatformSocialCard                                     OFFSET(get<T>, {0x14F8, 8, 0, 0})
	CMember(UImage*)                                   Image_PlatformSocialCard                                    OFFSET(get<T>, {0x1500, 8, 0, 0})
	CMember(USocialUser*)                              QueriedSocialUser                                           OFFSET(get<T>, {0x1508, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortLeaderboardEntryWidget.DisplayPlatformProfile
	// void DisplayPlatformProfile();                                                                                           // [0x95754a0] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/FortniteUI.LiveStreamHUDElement
/// Size: 0x00A0 (0x000328 - 0x0003C8)
class ULiveStreamHUDElement : public UFortHUDElementWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 968;

public:
	CMember(USoundSourceBus*)                          SourceBus                                                   OFFSET(get<T>, {0x328, 8, 0, 0})
	CMember(USoundSubmixBase*)                         DefaultAudioSubmix                                          OFFSET(get<T>, {0x330, 8, 0, 0})
	CMember(USoundSubmixBase*)                         LicensedAudioSubmix                                         OFFSET(get<T>, {0x338, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.LiveStreamHUDElement.SetPIPVolumeMultiplier
	// void SetPIPVolumeMultiplier(float InMultiplayer);                                                                        // [0x957e5ac] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/FortniteUI.LiveStreamHUDElement.SetPIPVideoUID
	// void SetPIPVideoUID(FString InVideoUID);                                                                                 // [0x957df04] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/FortniteUI.LiveStreamHUDElement.SetPIPStartTime
	// void SetPIPStartTime(float InStartTime);                                                                                 // [0x957de1c] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/FortniteUI.LiveStreamHUDElement.SetPIPLive
	// void SetPIPLive(bool bInLive);                                                                                           // [0x957d684] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/FortniteUI.LiveStreamHUDElement.SetPIPForceEnabled
	// void SetPIPForceEnabled(bool bForced);                                                                                   // [0x957d5a4] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/FortniteUI.LiveStreamHUDElement.SetPIPEOSGSBlackout
	// void SetPIPEOSGSBlackout(bool bInEnable);                                                                                // [0x957d534] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/FortniteUI.LiveStreamHUDElement.SetPIPDisableInstructions
	// void SetPIPDisableInstructions(bool bDisable);                                                                           // [0x957d4c4] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/FortniteUI.LiveStreamHUDElement.SetPIPCDNWeights
	// void SetPIPCDNWeights(TArray<float> InWeights);                                                                          // [0x957d3e4] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/FortniteUI.LiveStreamHUDElement.SetPIPAutoClose
	// void SetPIPAutoClose(bool bAutoClose);                                                                                   // [0x957d2e0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/FortniteUI.LiveStreamHUDElement.SetMirrorScreen
	// void SetMirrorScreen(int32_t ScreenIndex);                                                                               // [0x957d114] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/FortniteUI.LiveStreamHUDElement.SetMirrorPIPAudioSubmix
	// void SetMirrorPIPAudioSubmix(bool bInDefault, bool bForce);                                                              // [0x957d04c] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/FortniteUI.LiveStreamHUDElement.SetMirrorPIPAudioDisable
	// void SetMirrorPIPAudioDisable(bool bInDisable);                                                                          // [0x957cfc4] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/FortniteUI.LiveStreamHUDElement.SetMirroredPIPAnalyicsMetadata
	// void SetMirroredPIPAnalyicsMetadata(FName& MediaName, int64_t CurrentProgressTimecode, FName& MediaPlayerName);          // [0x957d184] Final|Native|Static|Public|HasOutParms|BlueprintCallable 
	// Function /Script/FortniteUI.LiveStreamHUDElement.IsUsingMirrorScreen
	// bool IsUsingMirrorScreen();                                                                                              // [0x9579d14] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/FortniteUI.LiveStreamHUDElement.GetPIPVolumeMultiplier
	// float GetPIPVolumeMultiplier();                                                                                          // [0x9578b38] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/FortniteUI.LiveStreamHUDElement.GetPIPVideoUID
	// FString GetPIPVideoUID();                                                                                                // [0x95789dc] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/FortniteUI.LiveStreamHUDElement.GetPIPStartTIme
	// float GetPIPStartTIme();                                                                                                 // [0x95789c0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/FortniteUI.LiveStreamHUDElement.GetPIPLive
	// bool GetPIPLive();                                                                                                       // [0x9578990] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/FortniteUI.LiveStreamHUDElement.GetPIPForceEnabled
	// bool GetPIPForceEnabled();                                                                                               // [0x9578960] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/FortniteUI.LiveStreamHUDElement.GetPIPDisableInstructions
	// bool GetPIPDisableInstructions();                                                                                        // [0x9578948] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/FortniteUI.LiveStreamHUDElement.GetPIPCDNWeights
	// TArray<float> GetPIPCDNWeights();                                                                                        // [0x95788b8] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/FortniteUI.LiveStreamHUDElement.GetPIPAutoClose
	// bool GetPIPAutoClose();                                                                                                  // [0x95788a0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/FortniteUI.LiveStreamHUDElement.GetMirrorScreen
	// int32_t GetMirrorScreen();                                                                                               // [0x957865c] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/FortniteUI.LiveStreamHUDElement.FireMirroredPIPAnalytics
	// void FireMirroredPIPAnalytics(bool bInStarted);                                                                          // [0x957665c] Final|Native|Public  
	// Function /Script/FortniteUI.LiveStreamHUDElement.DestroyVideoPlayer
	// void DestroyVideoPlayer();                                                                                               // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.LiveStreamHUDElement.CreateVideoPlayer
	// void CreateVideoPlayer();                                                                                                // [0x1d9241c] Event|Public|BlueprintEvent 
};

/// Class /Script/FortniteUI.FortLiveStreamGrantWindowExpires
/// Size: 0x0000 (0x0002E8 - 0x0002E8)
class UFortLiveStreamGrantWindowExpires : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 744;

public:
};

/// Class /Script/FortniteUI.LiveStreamInMatchAd
/// Size: 0x0000 (0x0002C0 - 0x0002C0)
class ULiveStreamInMatchAd : public UUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 704;

public:
};

/// Class /Script/FortniteUI.LiveStreamLobbyAd
/// Size: 0x0020 (0x0002C0 - 0x0002E0)
class ULiveStreamLobbyAd : public UUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 736;

public:
	CMember(UWidgetSwitcher*)                          ContentSwitcher                                             OFFSET(get<T>, {0x2C0, 8, 0, 0})
	CMember(UPanelWidget*)                             ButtonLayer                                                 OFFSET(get<T>, {0x2C8, 8, 0, 0})
	CMember(UPanelWidget*)                             CountdownLayer                                              OFFSET(get<T>, {0x2D0, 8, 0, 0})
	CMember(UCommonTextBlock*)                         CountdownText                                               OFFSET(get<T>, {0x2D8, 8, 0, 0})
};

/// Class /Script/FortniteUI.LiveStreamMenuToggleButton
/// Size: 0x0010 (0x0014E0 - 0x0014F0)
class ULiveStreamMenuToggleButton : public UCommonButtonLegacy
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 5360;

public:
};

/// Class /Script/FortniteUI.FortActivatableVideoPanel
/// Size: 0x00E0 (0x000570 - 0x000650)
class UFortActivatableVideoPanel : public UFortActivatablePanel
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1616;

public:
	SMember(FMulticastInlineDelegate)                  OnSkipButtonClicked                                         OFFSET(getStruct<T>, {0x570, 16, 0, 0})
	DMember(bool)                                      bOverwriteSkip                                              OFFSET(get<bool>, {0x580, 1, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnMediaPlayerEndReached                                     OFFSET(getStruct<T>, {0x588, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnMediaOpened                                               OFFSET(getStruct<T>, {0x598, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnMediaOpenFailed                                           OFFSET(getStruct<T>, {0x5A8, 16, 0, 0})
	DMember(bool)                                      AutomaticallyDismissPanel                                   OFFSET(get<bool>, {0x5C8, 1, 0, 0})
	DMember(bool)                                      bAutoPlayOnActivated                                        OFFSET(get<bool>, {0x620, 1, 0, 0})
	DMember(bool)                                      bAllowSkipping                                              OFFSET(get<bool>, {0x621, 1, 0, 0})
	DMember(bool)                                      ControlsVisible                                             OFFSET(get<bool>, {0x622, 1, 0, 0})
	DMember(float)                                     LastInteractionTime                                         OFFSET(get<float>, {0x624, 4, 0, 0})
	CMember(UFortVideoPlayerWidget*)                   VideoPlayerWidget                                           OFFSET(get<T>, {0x628, 8, 0, 0})
	CMember(UCommonButtonBase*)                        Button_Skip                                                 OFFSET(get<T>, {0x630, 8, 0, 0})
	CMember(UImage*)                                   Image_ThrobberBackground                                    OFFSET(get<T>, {0x638, 8, 0, 0})
	CMember(UImage*)                                   Image_Throbber                                              OFFSET(get<T>, {0x640, 8, 0, 0})
	CMember(USoundMix*)                                ActiveSoundMix                                              OFFSET(get<T>, {0x648, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortActivatableVideoPanel.StreamVideoFromSource
	// bool StreamVideoFromSource(UStreamMediaSource* StreamSource);                                                            // [0x957fb08] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortActivatableVideoPanel.StreamVideo
	// bool StreamVideo(FString VideoURL);                                                                                      // [0x957f41c] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortActivatableVideoPanel.StartVideo
	// void StartVideo();                                                                                                       // [0x957f35c] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortActivatableVideoPanel.ShowThrobber
	// void ShowThrobber();                                                                                                     // [0x957f348] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortActivatableVideoPanel.ShowControls
	// void ShowControls();                                                                                                     // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortActivatableVideoPanel.ShouldAutoPlayVideo
	// bool ShouldAutoPlayVideo(FName AssetName, bool bAllowRecord);                                                            // [0x957f1bc] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortActivatableVideoPanel.MediaOpenFailed
	// void MediaOpenFailed();                                                                                                  // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortActivatableVideoPanel.MediaOpened
	// void MediaOpened();                                                                                                      // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortActivatableVideoPanel.LoadVideo
	// bool LoadVideo(FName VideoId, bool bIsAutoPlay, bool bForceDefaultAudioTrack, FName VideoString);                        // [0x957a8fc] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortActivatableVideoPanel.HideControls
	// void HideControls();                                                                                                     // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortActivatableVideoPanel.GetMediaPlayer
	// UMediaPlayer* GetMediaPlayer();                                                                                          // [0x9578624] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortActivatableVideoPanel.EnableSkipButton
	// void EnableSkipButton(bool bAllowSkip);                                                                                  // [0x9576424] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/FortniteUI.LiveStreamScreen
/// Size: 0x0018 (0x000650 - 0x000668)
class ULiveStreamScreen : public UFortActivatableVideoPanel
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1640;

public:
	CMember(UFortStreamMediaSource*)                   StreamMediaSource                                           OFFSET(get<T>, {0x650, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.LiveStreamScreen.OnRetrieveVideoUrlResult
	// void OnRetrieveVideoUrlResult(FString URL);                                                                              // [0x957b1d0] Final|Native|Private 
};

/// Class /Script/FortniteUI.LiveStreamStandalonePlayer
/// Size: 0x0028 (0x0002C0 - 0x0002E8)
class ULiveStreamStandalonePlayer : public UUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 744;

public:
	CMember(UFortStreamMediaSource*)                   StreamMediaSource                                           OFFSET(get<T>, {0x2C0, 8, 0, 0})
	CMember(UFortVideoPlayerWidget*)                   VideoPlayerWidget                                           OFFSET(get<T>, {0x2C8, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.LiveStreamStandalonePlayer.UnblockPlayer
	// void UnblockPlayer(ELiveStreamStandaloneBlocked BlockedReason);                                                          // [0x9580ab0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/FortniteUI.LiveStreamStandalonePlayer.Stop
	// void Stop();                                                                                                             // [0x957f408] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.LiveStreamStandalonePlayer.SetPIPStartTime
	// void SetPIPStartTime(float InStartTime);                                                                                 // [0x957de90] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/FortniteUI.LiveStreamStandalonePlayer.SetPIPMediaID
	// void SetPIPMediaID(FString InVideoUID);                                                                                  // [0x957d764] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/FortniteUI.LiveStreamStandalonePlayer.SetPIPLive
	// void SetPIPLive(bool bInLive);                                                                                           // [0x957d6f4] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/FortniteUI.LiveStreamStandalonePlayer.SetPIPIgnorePartySync
	// void SetPIPIgnorePartySync(bool bIgnore);                                                                                // [0x957d614] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/FortniteUI.LiveStreamStandalonePlayer.SetPIPCDNDistribution
	// void SetPIPCDNDistribution(TArray<float>& Weights);                                                                      // [0x957d350] Final|Native|Static|Public|HasOutParms|BlueprintCallable 
	// Function /Script/FortniteUI.LiveStreamStandalonePlayer.ResetPIPState
	// void ResetPIPState();                                                                                                    // [0x957c33c] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/FortniteUI.LiveStreamStandalonePlayer.Play
	// void Play();                                                                                                             // [0x957bffc] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.LiveStreamStandalonePlayer.PIPReadyToRender
	// void PIPReadyToRender();                                                                                                 // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.LiveStreamStandalonePlayer.OnRetrieveVideoUrlSuccess
	// void OnRetrieveVideoUrlSuccess(FString URL);                                                                             // [0x957b87c] Final|Native|Private 
	// Function /Script/FortniteUI.LiveStreamStandalonePlayer.OnRetrieveVideoUrlFailure
	// void OnRetrieveVideoUrlFailure(FString URL);                                                                             // [0x957ab24] Final|Native|Private 
	// Function /Script/FortniteUI.LiveStreamStandalonePlayer.GetPlayerIsBlocked
	// bool GetPlayerIsBlocked();                                                                                               // [0x9578b54] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/FortniteUI.LiveStreamStandalonePlayer.GetPIPStandaloneError
	// bool GetPIPStandaloneError();                                                                                            // [0x95789a8] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/FortniteUI.LiveStreamStandalonePlayer.GetPIPIgnorePartySync
	// bool GetPIPIgnorePartySync();                                                                                            // [0x9578978] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/FortniteUI.LiveStreamStandalonePlayer.FireStandalonePIPAnalytics
	// void FireStandalonePIPAnalytics(bool bInStarted);                                                                        // [0x95766dc] Final|Native|Public  
	// Function /Script/FortniteUI.LiveStreamStandalonePlayer.DisableSharing
	// void DisableSharing(bool bInDisable);                                                                                    // [0x9575420] Final|Native|Private 
	// Function /Script/FortniteUI.LiveStreamStandalonePlayer.CheckMediaStarted
	// void CheckMediaStarted();                                                                                                // [0x9575368] Final|Native|Private 
	// Function /Script/FortniteUI.LiveStreamStandalonePlayer.BlockPlayer
	// void BlockPlayer(ELiveStreamStandaloneBlocked BlockedReason);                                                            // [0x9575224] Final|Native|Static|Public|BlueprintCallable 
};

/// Class /Script/FortniteUI.FortHeroLoadoutSwitcherBase
/// Size: 0x0038 (0x0002E8 - 0x000320)
class UFortHeroLoadoutSwitcherBase : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 800;

public:
	CMember(UHorizontalBox*)                           HBox_LoadoutPagingContainer                                 OFFSET(get<T>, {0x2E8, 8, 0, 0})
	CMember(UFortItemDetailsHostPanel*)                HeroLoadoutCommanderDetailsHostPanel                        OFFSET(get<T>, {0x2F0, 8, 0, 0})
	CMember(UFortHeroAbilitiesAndGadgetsBase*)         HeroAbilitiesAndGadgets                                     OFFSET(get<T>, {0x2F8, 8, 0, 0})
	CMember(UCommonTextBlock*)                         TextBlock_LoadoutDisplayName                                OFFSET(get<T>, {0x300, 8, 0, 0})
	CMember(UCommonButtonLegacy*)                      Button_PageLeft                                             OFFSET(get<T>, {0x308, 8, 0, 0})
	CMember(UCommonButtonLegacy*)                      Button_PageRight                                            OFFSET(get<T>, {0x310, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortHeroLoadoutSwitcherBase.UpdateRarity
	// void UpdateRarity(EFortRarity Rarity);                                                                                   // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortHeroLoadoutSwitcherBase.Update
	// void Update(UFortCampaignHeroLoadoutItem* HeroLoadout);                                                                  // [0x9580b58] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/FortniteUI.FortCustomMatchmakingKeyModal
/// Size: 0x0008 (0x000570 - 0x000578)
class UFortCustomMatchmakingKeyModal : public UFortActivatablePanel
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1400;

public:
	CMember(UEditableText*)                            EditableText_MatchmakingKey                                 OFFSET(get<T>, {0x570, 8, 0, 0})
};

/// Class /Script/FortniteUI.FortInGameMatchmakingPanel
/// Size: 0x0000 (0x000570 - 0x000570)
class UFortInGameMatchmakingPanel : public UFortActivatablePanel
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1392;

public:
};

/// Class /Script/FortniteUI.FortMatchmakingGameModeButton
/// Size: 0x0008 (0x0002C0 - 0x0002C8)
class UFortMatchmakingGameModeButton : public UUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 712;

public:
	CMember(UCommonButtonLegacy*)                      IconTextButton_Play                                         OFFSET(get<T>, {0x2C0, 8, 0, 0})
};

/// Class /Script/FortniteUI.FortMatchmakingSpecialButton
/// Size: 0x0008 (0x0002C0 - 0x0002C8)
class UFortMatchmakingSpecialButton : public UUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 712;

public:
	CMember(UFortMatchmakingGameModeButton*)           Button_LimitedTimeGameMode                                  OFFSET(get<T>, {0x2C0, 8, 0, 0})
};

/// Class /Script/FortniteUI.MatchmakingInputIndicatorBase
/// Size: 0x0048 (0x0002E8 - 0x000330)
class UMatchmakingInputIndicatorBase : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 816;

public:
	CMember(EMatchmakingInputSource)                   InputSource                                                 OFFSET(get<T>, {0x2E8, 1, 0, 0})
	DMember(bool)                                      bShowLocalInputOnlyWhenDifferentFromDefault                 OFFSET(get<bool>, {0x2E9, 1, 0, 0})
	DMember(bool)                                      bShowRemoteInputOnlyWhenDifferentFromDefault                OFFSET(get<bool>, {0x2EA, 1, 0, 0})
	SMember(FUniqueNetIdRepl)                          RemotePlayerUniqueId                                        OFFSET(getStruct<T>, {0x2F0, 48, 0, 0})
	CMember(ECommonInputType)                          LastInputType                                               OFFSET(get<T>, {0x320, 1, 0, 0})
	CMember(USizeBox*)                                 SizeBox_HotfixVisibility                                    OFFSET(get<T>, {0x328, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.MatchmakingInputIndicatorBase.SetRemotePlayer
	// void SetRemotePlayer(FUniqueNetIdRepl UniqueID);                                                                         // [0x957e7c8] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.MatchmakingInputIndicatorBase.OnInputSourceTypeChanged
	// void OnInputSourceTypeChanged(ECommonInputType InputType);                                                               // [0x1d9241c] Event|Protected|BlueprintEvent 
};

/// Class /Script/FortniteUI.MatchmakingRegionAndPoolBase
/// Size: 0x0000 (0x0002C0 - 0x0002C0)
class UMatchmakingRegionAndPoolBase : public UUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 704;

public:
};

/// Class /Script/FortniteUI.FortActivatableMovieWidget
/// Size: 0x02D8 (0x000400 - 0x0006D8)
class UFortActivatableMovieWidget : public UCommonActivatableWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1752;

public:
	DMember(bool)                                      bOverwriteSkip                                              OFFSET(get<bool>, {0x408, 1, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnMediaError                                                OFFSET(getStruct<T>, {0x410, 16, 0, 0})
	DMember(bool)                                      bMediaPreEndCheckEnabled                                    OFFSET(get<bool>, {0x420, 1, 0, 0})
	SMember(FVideoWidgetConfig)                        VideoConfig                                                 OFFSET(getStruct<T>, {0x428, 152, 0, 0})
	DMember(bool)                                      bInWholeFade                                                OFFSET(get<bool>, {0x4D8, 1, 0, 0})
	DMember(bool)                                      bInColorFade                                                OFFSET(get<bool>, {0x4D9, 1, 0, 0})
	SMember(FDataTableRowHandle)                       PressToSkipAction                                           OFFSET(getStruct<T>, {0x4E0, 16, 0, 0})
	SMember(FDataTableRowHandle)                       HoldToSkipAction                                            OFFSET(getStruct<T>, {0x4F0, 16, 0, 0})
	CMember(UImage*)                                   Image_Color                                                 OFFSET(get<T>, {0x500, 8, 0, 0})
	DMember(bool)                                      bAutoBroadcastRebuild                                       OFFSET(get<bool>, {0x508, 1, 0, 0})
	DMember(bool)                                      bShowSubtitles                                              OFFSET(get<bool>, {0x509, 1, 0, 0})
	DMember(bool)                                      bNoAudio                                                    OFFSET(get<bool>, {0x50A, 1, 0, 0})
	DMember(bool)                                      bEnableInputControl                                         OFFSET(get<bool>, {0x50B, 1, 0, 0})
	CMember(UMediaPlayer*)                             VideoPlayer                                                 OFFSET(get<T>, {0x510, 8, 0, 0})
	CMember(USoundClass*)                              SoundClass                                                  OFFSET(get<T>, {0x518, 8, 0, 0})
	CMember(UMediaSoundComponent*)                     SoundComponent                                              OFFSET(get<T>, {0x520, 8, 0, 0})
	CMember(UFortMediaSubtitlesPlayer*)                SubtitlePlayer                                              OFFSET(get<T>, {0x528, 8, 0, 0})
	CMember(ULocalizedOverlays*)                       SubtitleOverlays                                            OFFSET(get<T>, {0x530, 8, 0, 0})
	DMember(float)                                     LastInteractionTime                                         OFFSET(get<float>, {0x580, 4, 0, 0})
	DMember(bool)                                      bControlsVisible                                            OFFSET(get<bool>, {0x584, 1, 0, 0})
	CMember(UImage*)                                   Image_VideoTexture                                          OFFSET(get<T>, {0x588, 8, 0, 0})
	SMember(FLinearColor)                              VideoTextureColor                                           OFFSET(getStruct<T>, {0x590, 16, 0, 0})
	CMember(USubtitleDisplay*)                         Subtitles                                                   OFFSET(get<T>, {0x5A0, 8, 0, 0})
	CMember(UCommonButtonBase*)                        Button_Skip                                                 OFFSET(get<T>, {0x5A8, 8, 0, 0})
	CMember(UImage*)                                   Image_Throbber                                              OFFSET(get<T>, {0x5B0, 8, 0, 0})
	CMember(UBorder*)                                  SafeZonePadding                                             OFFSET(get<T>, {0x5B8, 8, 0, 0})
	SMember(FLinearColor)                              SafeZoneColor                                               OFFSET(getStruct<T>, {0x5C0, 16, 0, 0})
	CMember(USoundMix*)                                ActiveSoundMix                                              OFFSET(get<T>, {0x5D0, 8, 0, 0})
	CMember(USoundSubmixBase*)                         DefaultSubmix                                               OFFSET(get<T>, {0x5D8, 8, 0, 0})
	CMember(USoundSubmixBase*)                         LicensedSubmix                                              OFFSET(get<T>, {0x5E0, 8, 0, 0})
	CMember(UFortMediaPlayerCtrl*)                     MediaController                                             OFFSET(get<T>, {0x5F0, 8, 0, 0})
	CMember(UFortBaseStreamingVideo*)                  BaseStreamingVideo                                          OFFSET(get<T>, {0x5F8, 8, 0, 0})
	SMember(FMulticastInlineDelegate)                  MediaPreEndEvent                                            OFFSET(getStruct<T>, {0x600, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  MediaVolumeChangeEvent                                      OFFSET(getStruct<T>, {0x610, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  MediaStartedEvent                                           OFFSET(getStruct<T>, {0x620, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  WidgetEndReachedEvent                                       OFFSET(getStruct<T>, {0x648, 16, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortActivatableMovieWidget.WholeFadeComplete
	// void WholeFadeComplete();                                                                                                // [0x95813e4] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortActivatableMovieWidget.StreamedVideoOpeningTimeout
	// void StreamedVideoOpeningTimeout();                                                                                      // [0x9580904] Final|Native|Private 
	// Function /Script/FortniteUI.FortActivatableMovieWidget.StreamedVideoOnMediaPlayerEndReached
	// void StreamedVideoOnMediaPlayerEndReached();                                                                             // [0x957fb98] Final|Native|Private 
	// Function /Script/FortniteUI.FortActivatableMovieWidget.StreamedVideoOnMediaPlayerClosed
	// void StreamedVideoOnMediaPlayerClosed();                                                                                 // [0x2ac06c4] Final|Native|Private 
	// Function /Script/FortniteUI.FortActivatableMovieWidget.Stop
	// void Stop(bool InForceClose);                                                                                            // [0x957f388] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortActivatableMovieWidget.StartWholeFade
	// void StartWholeFade(bool bReverse);                                                                                      // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.FortActivatableMovieWidget.StartFadeFromColor
	// void StartFadeFromColor(bool bEnd, UFortActivatablePrePostRollStates Reason, bool bReverse);                             // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.FortActivatableMovieWidget.ShouldAutoPlayVideo
	// bool ShouldAutoPlayVideo(FName AssetName, bool bAllowRecord);                                                            // [0x957f0f8] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortActivatableMovieWidget.SetMediaPreEndTimeSeconds
	// void SetMediaPreEndTimeSeconds(float InSeconds);                                                                         // [0x1a6b100] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortActivatableMovieWidget.SetFadeTime
	// void SetFadeTime(double InFadeTime);                                                                                     // [0x957c7a4] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortActivatableMovieWidget.Play
	// void Play();                                                                                                             // [0x957bfa8] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortActivatableMovieWidget.LoadStreamingVideo
	// void LoadStreamingVideo(FVideoWidgetConfig& Config);                                                                     // [0x2ac0574] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/FortniteUI.FortActivatableMovieWidget.HandleVideoStreamingTerminalError
	// void HandleVideoStreamingTerminalError(EBaseMediaTerminalErrorReason Reason);                                            // [0x957999c] Final|Native|Private 
	// Function /Script/FortniteUI.FortActivatableMovieWidget.HandleVideoStreamingSuccess
	// void HandleVideoStreamingSuccess();                                                                                      // [0x3777c6c] Final|Native|Private 
	// Function /Script/FortniteUI.FortActivatableMovieWidget.GetVideoTexture
	// UImage* GetVideoTexture();                                                                                               // [0x27bd75c] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortActivatableMovieWidget.GetMediaPlayer
	// UMediaPlayer* GetMediaPlayer();                                                                                          // [0x6e46b38] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortActivatableMovieWidget.GetBaseStreamingVideo
	// UFortBaseStreamingVideo* GetBaseStreamingVideo();                                                                        // [0x9577c58] Final|Native|Public|BlueprintCallable|BlueprintPure 
	// Function /Script/FortniteUI.FortActivatableMovieWidget.FadeInFromColorComplete
	// void FadeInFromColorComplete(UFortActivatablePrePostRollStates Reason);                                                  // [0x95764a4] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortActivatableMovieWidget.EnableFadeInFromColor
	// void EnableFadeInFromColor(bool bInEnable);                                                                              // [0x9576314] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortActivatableMovieWidget.Close
	// void Close();                                                                                                            // [0x95753b8] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/FortniteUI.FortActivatableMovieWidget_Monolithic
/// Size: 0x00F0 (0x000650 - 0x000740)
class UFortActivatableMovieWidget_Monolithic : public UFortActivatableVideoPanel
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1856;

public:
	SMember(FMulticastInlineDelegate)                  MediaOpenedMono                                             OFFSET(getStruct<T>, {0x650, 16, 0, 0})
	CMember(UFortStreamMediaSource*)                   MediaSourceMono                                             OFFSET(get<T>, {0x6B8, 8, 0, 0})
	CMember(UMediaPlayer*)                             StreamedMediaPlayer                                         OFFSET(get<T>, {0x6C0, 8, 0, 0})
	SMember(FDataTableRowHandle)                       PressToSkipAction                                           OFFSET(getStruct<T>, {0x718, 16, 0, 0})
	SMember(FDataTableRowHandle)                       HoldToSkipAction                                            OFFSET(getStruct<T>, {0x728, 16, 0, 0})
	CMember(UImage*)                                   Image_White                                                 OFFSET(get<T>, {0x738, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortActivatableMovieWidget_Monolithic.StreamedVideoOnUrlSuccess
	// void StreamedVideoOnUrlSuccess(FString URL);                                                                             // [0x9580258] Final|Native|Private 
	// Function /Script/FortniteUI.FortActivatableMovieWidget_Monolithic.StreamedVideoOnUrlFailure
	// void StreamedVideoOnUrlFailure(FString URL);                                                                             // [0x957fbac] Final|Native|Private 
	// Function /Script/FortniteUI.FortActivatableMovieWidget_Monolithic.StartFadeFromWhite
	// void StartFadeFromWhite();                                                                                               // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.FortActivatableMovieWidget_Monolithic.Play
	// void Play();                                                                                                             // [0x957bfbc] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortActivatableMovieWidget_Monolithic.LoadStreamingVideo
	// void LoadStreamingVideo(FVideoConfig_Mono Config, UFortStreamMediaSource* StreamMediaSource, bool& bNoAutoPlay, bool bStartWithWhite); // [0x9579e78] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/FortniteUI.FortActivatableMovieWidget_Monolithic.EnableFadeInFromWhite
	// void EnableFadeInFromWhite(bool bInEnable);                                                                              // [0x957639c] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/FortniteUI.FortVideoDisplayData
/// Size: 0x0078 (0x000030 - 0x0000A8)
class UFortVideoDisplayData : public UDataAsset
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 168;

public:
	CMember(UMediaPlayer*)                             FortVideoPlayer                                             OFFSET(get<T>, {0x30, 8, 0, 0})
	CMember(UFortMediaSubtitlesPlayer*)                SubtitlePlayer                                              OFFSET(get<T>, {0x38, 8, 0, 0})
	CMember(UClass*)                                   VideoActivatablePanelClass                                  OFFSET(get<T>, {0x40, 8, 0, 0})
	CMember(TMap<FString, int32_t>)                    LocaleAudioTrackIndexMap                                    OFFSET(get<T>, {0x48, 80, 0, 0})
	CMember(TArray<FFortVideoInfo>)                    Videos                                                      OFFSET(get<T>, {0x98, 16, 0, 0})
};

/// Class /Script/FortniteUI.FortVideoPlayerWidget
/// Size: 0x00F8 (0x0002D0 - 0x0003C8)
class UFortVideoPlayerWidget : public UFortUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 968;

public:
	DMember(bool)                                      bAutoPlayOnOpen                                             OFFSET(get<bool>, {0x2D0, 1, 0, 0})
	DMember(bool)                                      bLoop                                                       OFFSET(get<bool>, {0x2D1, 1, 0, 0})
	DMember(bool)                                      bShowSubtitles                                              OFFSET(get<bool>, {0x2D2, 1, 0, 0})
	DMember(bool)                                      bNoAudio                                                    OFFSET(get<bool>, {0x2D3, 1, 0, 0})
	DMember(bool)                                      bForceDefaultAudio                                          OFFSET(get<bool>, {0x2D5, 1, 0, 0})
	CMember(USoundClass*)                              SoundClass                                                  OFFSET(get<T>, {0x2D8, 8, 0, 0})
	CMember(UMediaPlayer*)                             VideoPlayer                                                 OFFSET(get<T>, {0x370, 8, 0, 0})
	CMember(USoundSubmixBase*)                         DefaultAudioSubmix                                          OFFSET(get<T>, {0x378, 8, 0, 0})
	CMember(USoundSubmixBase*)                         LicensedAudioSubmix                                         OFFSET(get<T>, {0x380, 8, 0, 0})
	CMember(UFortMediaPlayerCtrl*)                     MediaController                                             OFFSET(get<T>, {0x388, 8, 0, 0})
	CMember(UMediaSoundComponent*)                     SoundComponent                                              OFFSET(get<T>, {0x390, 8, 0, 0})
	CMember(UFortMediaSubtitlesPlayer*)                SubtitlePlayer                                              OFFSET(get<T>, {0x398, 8, 0, 0})
	CMember(UImage*)                                   Image_VideoTexture                                          OFFSET(get<T>, {0x3B0, 8, 0, 0})
	CMember(USubtitleDisplay*)                         Subtitles                                                   OFFSET(get<T>, {0x3B8, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortVideoPlayerWidget.SetupMediaController
	// void SetupMediaController(float MediaStartTime);                                                                         // [0x957f078] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortVideoPlayerWidget.SetSoundClass
	// void SetSoundClass(USoundClass* InSoundClass);                                                                           // [0x957ed9c] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortVideoPlayerWidget.SetMediaMaterial
	// void SetMediaMaterial(UMaterialInterface* VideoMaterial);                                                                // [0x957cf3c] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortVideoPlayerWidget.GetMediaPlayer
	// UMediaPlayer* GetMediaPlayer();                                                                                          // [0x9578644] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortVideoPlayerWidget.DynamicHandleOnOpenMediaFailed
	// void DynamicHandleOnOpenMediaFailed(FString FailedUrl);                                                                  // [0x9575c68] Final|Native|Private 
	// Function /Script/FortniteUI.FortVideoPlayerWidget.DynamicHandleOnMediaOpened
	// void DynamicHandleOnMediaOpened(FString OpenedUrl);                                                                      // [0x95755bc] Final|Native|Private 
};

/// Class /Script/FortniteUI.FortUIMessagesPageBase
/// Size: 0x0028 (0x000538 - 0x000560)
class UFortUIMessagesPageBase : public UCommonActivatablePanelLegacy
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1376;

public:
	DMember(int32_t)                                   MaximumMessagesShown                                        OFFSET(get<int32_t>, {0x538, 4, 0, 0})
	CMember(UCommonListView*)                          MessagesList                                                OFFSET(get<T>, {0x540, 8, 0, 0})
	CMember(TArray<UFortUINotification*>)              MessagesShown                                               OFFSET(get<T>, {0x550, 16, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortUIMessagesPageBase.OnNotificationCleared
	// void OnNotificationCleared(UFortUINotification* ClearedMessage);                                                         // [0x957aaa4] Final|Native|Private 
	// Function /Script/FortniteUI.FortUIMessagesPageBase.OnMessageAvailable
	// void OnMessageAvailable();                                                                                               // [0x9576648] Final|Native|Private 
	// Function /Script/FortniteUI.FortUIMessagesPageBase.FillMessagesList
	// void FillMessagesList();                                                                                                 // [0x9576648] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/FortniteUI.FortMissionActivationInfo
/// Size: 0x0150 (0x000028 - 0x000178)
class UFortMissionActivationInfo : public UObject
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 376;

public:
	DMember(bool)                                      bIsMultiplayer                                              OFFSET(get<bool>, {0x28, 1, 0, 0})
	CMember(AFortPlayerController*)                    FortPC                                                      OFFSET(get<T>, {0xA0, 8, 0, 0})
	CMember(AFortGameStateZone*)                       GameStateZone                                               OFFSET(get<T>, {0xA8, 8, 0, 0})
	CMember(UCurveFloat*)                              DifficultyIncreaseBluGloCurve                               OFFSET(get<T>, {0xB0, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortMissionActivationInfo.TimeSecondsToText
	// FText TimeSecondsToText(float InSeconds);                                                                                // [0x9580a10] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortMissionActivationInfo.SubmitVote
	// void SubmitVote(EFortVoteType VoteType, bool bApprove);                                                                  // [0x9580918] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortMissionActivationInfo.RequestVote
	// void RequestVote(EFortVoteType VoteType, float VoteDuration, float FailedVoteLockOutDuration, EFortVoteArbitratorType ArbitratorType); // [0x957c200] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortMissionActivationInfo.IsVoteLocked
	// bool IsVoteLocked(EFortVoteType VoteType);                                                                               // [0x9579dbc] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortMissionActivationInfo.IsVoteActive
	// bool IsVoteActive(EFortVoteType VoteType);                                                                               // [0x9579d30] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortMissionActivationInfo.IsPlayerVoteInstigator
	// bool IsPlayerVoteInstigator(EFortVoteType VoteType);                                                                     // [0x9579c88] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortMissionActivationInfo.IsAnyVoteActive
	// bool IsAnyVoteActive();                                                                                                  // [0x9579ba0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortMissionActivationInfo.HasPlayerVoted
	// bool HasPlayerVoted(EFortVoteType VoteType);                                                                             // [0x9579aa8] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortMissionActivationInfo.HandleTeamMemberRemoved
	// void HandleTeamMemberRemoved(int32_t RemovedIndex);                                                                      // [0x9579920] Final|Native|Private 
	// Function /Script/FortniteUI.FortMissionActivationInfo.HandleTeamMemberAdded
	// void HandleTeamMemberAdded(FFortTeamMemberInfo NewInfo);                                                                 // [0x9579768] Final|Native|Private 
	// Function /Script/FortniteUI.FortMissionActivationInfo.HandleGameplayVoteUpdated
	// void HandleGameplayVoteUpdated(EFortVoteType VoteType, EFortVoteStatus VoteStatus, int32_t VoteResult, TArray<FVoter>& Voters); // [0x9579274] Final|Native|Private|HasOutParms 
	// Function /Script/FortniteUI.FortMissionActivationInfo.GetVoteTimeRemaining
	// float GetVoteTimeRemaining(EFortVoteType VoteType);                                                                      // [0x9578d4c] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortMissionActivationInfo.GetVoters
	// TArray<FVoter> GetVoters(EFortVoteType VoteType);                                                                        // [0x9578eb0] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortMissionActivationInfo.GetVoteCounts
	// void GetVoteCounts(EFortVoteType VoteType, int32_t& OutYesVoteCount, int32_t& OutNoVoteCount);                           // [0x9578bf4] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/FortniteUI.FortMissionActivationInfo.GetStartObjectiveBluGloRequirement
	// int32_t GetStartObjectiveBluGloRequirement();                                                                            // [0x9578bb8] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortMissionActivationInfo.GetPrimaryMissionInfo
	// UFortMissionInfo* GetPrimaryMissionInfo();                                                                               // [0x9578b94] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortMissionActivationInfo.GetPrimaryMission
	// AFortMission* GetPrimaryMission();                                                                                       // [0x9578b70] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortMissionActivationInfo.GetMissionVoteType
	// EFortVoteType GetMissionVoteType();                                                                                      // [0x957869c] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortMissionActivationInfo.GetMissionObjectiveTimeRemaining
	// float GetMissionObjectiveTimeRemaining();                                                                                // [0x9578674] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortMissionActivationInfo.GetLockoutTimeRemaining
	// FText GetLockoutTimeRemaining(EFortVoteType VoteType);                                                                   // [0x9578554] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortMissionActivationInfo.GetInstigatorId
	// FUniqueNetIdRepl GetInstigatorId(EFortVoteType VoteType);                                                                // [0x9578444] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortMissionActivationInfo.GetIncreaseDifficultyBluGloRequirement
	// int32_t GetIncreaseDifficultyBluGloRequirement();                                                                        // [0x95783ac] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortMissionActivationInfo.GetDeltaRewards
	// void GetDeltaRewards(int32_t BaseDifficultyIncreaseTier, int32_t ComparedDifficultyIncreaseTier, TArray<FFortItemDelta>& DeltaRewards); // [0x9577c88] Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortMissionActivationInfo.GetAvailableBluGloCount
	// int32_t GetAvailableBluGloCount();                                                                                       // [0x9577c34] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortMissionActivationInfo.GetArbitratorType
	// EFortVoteArbitratorType GetArbitratorType(EFortVoteType VoteType);                                                       // [0x9577ba0] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortMissionActivationInfo.DoesPrimaryMissionContainTags
	// bool DoesPrimaryMissionContainTags(FGameplayTagContainer& Tags);                                                         // [0x95754b4] Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortMissionActivationInfo.CanRequestVote
	// bool CanRequestVote(EFortVoteType VoteType);                                                                             // [0x95752cc] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/FortniteUI.FortMissionActivationWidgetPanel
/// Size: 0x0028 (0x0002E8 - 0x000310)
class UFortMissionActivationWidgetPanel : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 784;

public:
	CMember(UFortMissionActivationInfo*)               InfoObject                                                  OFFSET(get<T>, {0x2E8, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortMissionActivationWidgetPanel.SetInfoObject
	// void SetInfoObject(UFortMissionActivationInfo* NewInfoObject);                                                           // [0x957c9a8] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortMissionActivationWidgetPanel.OnVoteUpdatedBP
	// void OnVoteUpdatedBP(EFortVoteType VoteType);                                                                            // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortMissionActivationWidgetPanel.OnVoteLockoutChangedBP
	// void OnVoteLockoutChangedBP(EFortVoteType VoteType, bool bIsLocked);                                                     // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortMissionActivationWidgetPanel.OnMultiplayerChangedBP
	// void OnMultiplayerChangedBP(bool bIsMultiplayer);                                                                        // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortMissionActivationWidgetPanel.OnActiveVoteChangedBP
	// void OnActiveVoteChangedBP(EFortVoteType VoteType, bool bIsVoteActive, int32_t VoteResult);                              // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortMissionActivationWidgetPanel.InfoObjectUpdated
	// void InfoObjectUpdated();                                                                                                // [0x1d9241c] Event|Protected|BlueprintEvent 
};

/// Class /Script/FortniteUI.FortMissionActivationWidget
/// Size: 0x0050 (0x000570 - 0x0005C0)
class UFortMissionActivationWidget : public UFortActivatablePanel
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1472;

public:
	CMember(UFortMissionActivationInfo*)               InfoObject                                                  OFFSET(get<T>, {0x570, 8, 0, 0})
	SMember(FGameplayTagContainer)                     ReadyUpObjectiveHandle                                      OFFSET(getStruct<T>, {0x578, 32, 0, 0})
	CMember(UCurveFloat*)                              DifficultyIncreaseBluGloCurve                               OFFSET(get<T>, {0x598, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortMissionActivationWidget.RequestStartObjectiveState
	// void RequestStartObjectiveState();                                                                                       // [0x957c19c] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortMissionActivationWidget.RequestDifficultyIncreaseState
	// void RequestDifficultyIncreaseState();                                                                                   // [0x957c124] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortMissionActivationWidget.RequestDefaultState
	// void RequestDefaultState();                                                                                              // [0x957c0c8] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortMissionActivationWidget.OnVoteLockoutChangedBP
	// void OnVoteLockoutChangedBP(EFortVoteType VoteType, bool bIsLocked);                                                     // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortMissionActivationWidget.OnStateUpdated
	// void OnStateUpdated(EFortMissionActivationWidgetState ActiveState, EFortMissionActivationWidgetState PreviousState);     // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortMissionActivationWidget.OnMultiplayerChangedBP
	// void OnMultiplayerChangedBP(bool bIsMultiplayer);                                                                        // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortMissionActivationWidget.OnActiveVoteChangedBP
	// void OnActiveVoteChangedBP(EFortVoteType VoteType, bool bIsVoteActive, int32_t VoteResult);                              // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortMissionActivationWidget.GetCurrentState
	// EFortMissionActivationWidgetState GetCurrentState();                                                                     // [0x58f8e84] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/FortniteUI.FortMissionObjectiveProgressBase
/// Size: 0x0010 (0x0002E8 - 0x0002F8)
class UFortMissionObjectiveProgressBase : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 760;

public:
	CMember(UProgressBar*)                             ObjectiveProgressBar                                        OFFSET(get<T>, {0x2E8, 8, 0, 0})
	CMember(UCommonTextBlock*)                         ProgressBarText                                             OFFSET(get<T>, {0x2F0, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortMissionObjectiveProgressBase.Update
	// void Update(AFortObjectiveBase* Objective, int32_t BarIndex);                                                            // [0x9580bd8] Native|Event|Public|BlueprintCallable|BlueprintEvent 
	// Function /Script/FortniteUI.FortMissionObjectiveProgressBase.GetHeightEstimate
	// float GetHeightEstimate();                                                                                               // [0x1d9241c] Event|Public|BlueprintCallable|BlueprintEvent|BlueprintPure|Const 
};

/// Class /Script/FortniteUI.FortMissionTracker
/// Size: 0x0058 (0x000328 - 0x000380)
class UFortMissionTracker : public UFortHUDElementWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 896;

public:
	CMember(UFortMissionTrackerList*)                  MissionTrackerList                                          OFFSET(get<T>, {0x330, 8, 0, 0})
	CMember(UFortQuestTrackerList*)                    MainQuestList                                               OFFSET(get<T>, {0x338, 8, 0, 0})
	CMember(UFortQuestTrackerList*)                    PinnedQuestsList                                            OFFSET(get<T>, {0x340, 8, 0, 0})
	CMember(UWidget*)                                  AdditionalEntriesIndicator                                  OFFSET(get<T>, {0x348, 8, 0, 0})
	CMember(UCommonNumericTextBlock*)                  DebugHeightEstimate                                         OFFSET(get<T>, {0x350, 8, 0, 0})
	DMember(float)                                     AllowedSize                                                 OFFSET(get<float>, {0x358, 4, 0, 0})
	DMember(bool)                                      bEnforceHeightLimit                                         OFFSET(get<bool>, {0x35C, 1, 0, 0})
	DMember(bool)                                      bEnableMainQuestList                                        OFFSET(get<bool>, {0x35D, 1, 0, 0})
	DMember(bool)                                      bEnablePinnedQuestList                                      OFFSET(get<bool>, {0x35E, 1, 0, 0})
	DMember(int32_t)                                   VisibleMissionCategories                                    OFFSET(get<int32_t>, {0x360, 4, 0, 0})
	DMember(bool)                                      bSizeEstimateNeedsRefresh                                   OFFSET(get<bool>, {0x364, 1, 0, 0})
	DMember(float)                                     LastRemainingSizeForPinnedQuests                            OFFSET(get<float>, {0x368, 4, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortMissionTracker.SetEnablePinnedQuestList
	// void SetEnablePinnedQuestList(bool bEnable);                                                                             // [0x957c6f4] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortMissionTracker.SetEnableMainQuestList
	// void SetEnableMainQuestList(bool bEnable);                                                                               // [0x957c644] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortMissionTracker.RefreshSizeEstimate
	// void RefreshSizeEstimate();                                                                                              // [0x957c034] Final|Native|Protected 
	// Function /Script/FortniteUI.FortMissionTracker.HandleSizeEstimateChanged
	// void HandleSizeEstimateChanged(UObject* ChangedElement);                                                                 // [0x9579668] Final|Native|Protected 
	// Function /Script/FortniteUI.FortMissionTracker.HandleDebugHUDObjectiveHeightChanged
	// void HandleDebugHUDObjectiveHeightChanged(bool bIsDebugging);                                                            // [0x9579020] Final|Native|Protected 
};

/// Class /Script/FortniteUI.FortMissionTrackerEntry
/// Size: 0x00A8 (0x0002E8 - 0x000390)
class UFortMissionTrackerEntry : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 912;

public:
	SMember(FMulticastInlineDelegate)                  OnMissionEntryVisibilityChanged                             OFFSET(getStruct<T>, {0x2F0, 16, 0, 0})
	CMember(UClass*)                                   SubEntryClass                                               OFFSET(get<T>, {0x300, 8, 0, 0})
	DMember(bool)                                      bConfigureAsHUD                                             OFFSET(get<bool>, {0x308, 1, 0, 0})
	DMember(bool)                                      bHiddenByHeightConstraint                                   OFFSET(get<bool>, {0x309, 1, 0, 0})
	CMember(UCommonTextBlock*)                         MissionNameText                                             OFFSET(get<T>, {0x310, 8, 0, 0})
	CMember(UVerticalBox*)                             ObjectivesListBox                                           OFFSET(get<T>, {0x318, 8, 0, 0})
	CMember(UImage*)                                   UpperSeparator                                              OFFSET(get<T>, {0x320, 8, 0, 0})
	CMember(AFortMission*)                             TrackedMission                                              OFFSET(get<T>, {0x328, 8, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnSizeEstimateChangedDelegate                               OFFSET(getStruct<T>, {0x330, 16, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortMissionTrackerEntry.UpdateVisibility
	// void UpdateVisibility();                                                                                                 // [0x9579568] Final|Native|Protected 
	// Function /Script/FortniteUI.FortMissionTrackerEntry.OnMissionSet
	// void OnMissionSet();                                                                                                     // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortMissionTrackerEntry.HandleObjectivesChanged
	// void HandleObjectivesChanged();                                                                                          // [0x9579590] Final|Native|Protected 
	// Function /Script/FortniteUI.FortMissionTrackerEntry.HandleMissionInfoSet
	// void HandleMissionInfoSet();                                                                                             // [0x9579568] Final|Native|Protected 
};

/// Class /Script/FortniteUI.FortMissionTrackerList
/// Size: 0x00A0 (0x0002E8 - 0x000388)
class UFortMissionTrackerList : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 904;

public:
	CMember(UClass*)                                   MissionEntryClass                                           OFFSET(get<T>, {0x2F0, 8, 0, 0})
	DMember(bool)                                      bConfigureAsHUD                                             OFFSET(get<bool>, {0x2F8, 1, 0, 0})
	CMember(UVerticalBox*)                             MissionsListBox                                             OFFSET(get<T>, {0x300, 8, 0, 0})
	CMember(UVerticalBox*)                             SecondaryMissionsListBox                                    OFFSET(get<T>, {0x308, 8, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnMissionTrackerListVisibilityChanged                       OFFSET(getStruct<T>, {0x310, 16, 0, 0})
	DMember(int32_t)                                   VisibleMissionCategories                                    OFFSET(get<int32_t>, {0x320, 4, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnSizeEstimateChangedDelegate                               OFFSET(getStruct<T>, {0x328, 16, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortMissionTrackerList.UpdateVisibleMissionCategories
	// void UpdateVisibleMissionCategories(int32_t InVisibleMissionCategories);                                                 // [0x9580cb0] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortMissionTrackerList.UpdateVisibility
	// void UpdateVisibility();                                                                                                 // [0x9580c9c] Final|Native|Protected 
	// Function /Script/FortniteUI.FortMissionTrackerList.HandleSizeEstimateChanged
	// void HandleSizeEstimateChanged(UObject* ChangedElement);                                                                 // [0x95796e8] Final|Native|Protected 
	// Function /Script/FortniteUI.FortMissionTrackerList.HandleMissionsUpdated
	// void HandleMissionsUpdated();                                                                                            // [0x957957c] Final|Native|Protected 
};

/// Class /Script/FortniteUI.FortMissionTrackerSubEntry
/// Size: 0x0038 (0x0002E8 - 0x000320)
class UFortMissionTrackerSubEntry : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 800;

public:
	SMember(FMulticastInlineDelegate)                  OnMissionSubEntryVisibilityChanged                          OFFSET(getStruct<T>, {0x2F0, 16, 0, 0})
	DMember(bool)                                      bConfigureAsHUD                                             OFFSET(get<bool>, {0x300, 1, 0, 0})
	DMember(bool)                                      bHiddenByHeightConstraint                                   OFFSET(get<bool>, {0x301, 1, 0, 0})
	CMember(AFortObjectiveBase*)                       TrackedObjective                                            OFFSET(get<T>, {0x308, 8, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnSizeEstimateChangedDelegate                               OFFSET(getStruct<T>, {0x310, 16, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortMissionTrackerSubEntry.OnObjectiveSet
	// void OnObjectiveSet();                                                                                                   // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortMissionTrackerSubEntry.OnHiddenByHeightConstraintChanged
	// void OnHiddenByHeightConstraintChanged();                                                                                // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortMissionTrackerSubEntry.NotifyVisibilityChanged
	// void NotifyVisibilityChanged();                                                                                          // [0x957aa74] Final|Native|Protected|BlueprintCallable 
};

/// Class /Script/FortniteUI.FortMissionVoteHUDElementWidget
/// Size: 0x0028 (0x000328 - 0x000350)
class UFortMissionVoteHUDElementWidget : public UFortHUDElementWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 848;

public:
};

/// Class /Script/FortniteUI.AthenaControllerDisconnectedModal
/// Size: 0x0008 (0x000410 - 0x000418)
class UAthenaControllerDisconnectedModal : public UAthenaProgressModal
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1048;

public:
	CMember(UHorizontalBox*)                           HBox_SwitchUser                                             OFFSET(get<T>, {0x410, 8, 0, 0})
};

/// Class /Script/FortniteUI.FortConfirmationWindow
/// Size: 0x01F0 (0x000570 - 0x000760)
class UFortConfirmationWindow : public UFortActivatablePanel
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1888;

public:
	CMember(UDynamicEntryBox*)                         EntryBox_SimpleButtons                                      OFFSET(get<T>, {0x570, 8, 0, 0})
	CMember(UDynamicEntryBox*)                         EntryBox_ComplexChoiceButtons                               OFFSET(get<T>, {0x578, 8, 0, 0})
	CMember(UPanelWidget*)                             Panel_LeftOptionalWidget                                    OFFSET(get<T>, {0x580, 8, 0, 0})
	CMember(UPanelWidget*)                             Panel_OptionalWidget                                        OFFSET(get<T>, {0x588, 8, 0, 0})
	CMember(UScrollBox*)                               ScrollBox_Description                                       OFFSET(get<T>, {0x590, 8, 0, 0})
	CMember(UCommonTextBlock*)                         CommonTextBlock_Title                                       OFFSET(get<T>, {0x598, 8, 0, 0})
	CMember(UCommonTextBlock*)                         CommonTextBlock_Description                                 OFFSET(get<T>, {0x5A0, 8, 0, 0})
	CMember(UImage*)                                   Image_MainIcon                                              OFFSET(get<T>, {0x5A8, 8, 0, 0})
	CMember(UCommonLoadGuard*)                         CommonLoadGuard_LatentSpinner                               OFFSET(get<T>, {0x5B0, 8, 0, 0})
	CMember(UWidget*)                                  Button_CloseTouch                                           OFFSET(get<T>, {0x5B8, 8, 0, 0})
	CMember(TArray<FFortConfirmationButtonInfo>)       ConfirmationButtons                                         OFFSET(get<T>, {0x5C8, 16, 0, 0})
	CMember(UCommonButtonBase*)                        DeclineButton                                               OFFSET(get<T>, {0x5D8, 8, 0, 0})
	SMember(FFortDialogDescription_NUI)                ConfirmationDescription                                     OFFSET(getStruct<T>, {0x5E0, 352, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortConfirmationWindow.HandleInputSuspensionChanged
	// void HandleInputSuspensionChanged(bool bIsInputSuspended);                                                               // [0x95793dc] Final|Native|Private 
	// Function /Script/FortniteUI.FortConfirmationWindow.HandleDeclineActionClicked
	// void HandleDeclineActionClicked(UCommonButtonBase* ButtonClicked);                                                       // [0x95790a0] Final|Native|Private|BlueprintCallable 
	// Function /Script/FortniteUI.FortConfirmationWindow.HandleCancelButtonClicked
	// void HandleCancelButtonClicked(UCommonButtonBase* Buttton);                                                              // [0x9578fa0] Final|Native|Private|BlueprintCallable 
	// Function /Script/FortniteUI.FortConfirmationWindow.GetConfirmationDescription
	// FFortDialogDescription_NUI GetConfirmationDescription();                                                                 // [0x19b81d0] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortConfirmationWindow.ConfigureDeclineButton
	// void ConfigureDeclineButton(UCommonButtonBase* Button);                                                                  // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortConfirmationWindow.ConfigureConfirmationButton
	// void ConfigureConfirmationButton(UCommonButtonBase* Button, FConfirmationDialogAction& Action, bool bSimpleConfirm);     // [0x1d9241c] Event|Protected|HasOutParms|BlueprintEvent 
	// Function /Script/FortniteUI.FortConfirmationWindow.BotClickButton
	// void BotClickButton();                                                                                                   // [0x33a9d3c] Final|Native|Protected|BlueprintCallable 
};

/// Class /Script/FortniteUI.FortProgressModal
/// Size: 0x0100 (0x000570 - 0x000670)
class UFortProgressModal : public UFortActivatablePanel
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1648;

public:
	SMember(FText)                                     Title                                                       OFFSET(getStruct<T>, {0x570, 24, 0, 0})
	SMember(FText)                                     Description                                                 OFFSET(getStruct<T>, {0x588, 24, 0, 0})
	SMember(FSlateBrush)                               Icon                                                        OFFSET(getStruct<T>, {0x5A0, 192, 0, 0})
	DMember(bool)                                      bIntroOutroEnabled                                          OFFSET(get<bool>, {0x660, 1, 0, 0})
	DMember(bool)                                      bAutoInitialize                                             OFFSET(get<bool>, {0x661, 1, 0, 0})
	DMember(bool)                                      bFocusSelf                                                  OFFSET(get<bool>, {0x662, 1, 0, 0})
	DMember(bool)                                      bConsumeAnalogInput                                         OFFSET(get<bool>, {0x663, 1, 0, 0})
	CMember(UFortProgressWidget*)                      ProgressWidget_Main                                         OFFSET(get<T>, {0x668, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortProgressModal.SetTitle
	// void SetTitle(FText& InTitle);                                                                                           // [0x957ee24] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/FortniteUI.FortProgressModal.SetIcon
	// void SetIcon(FSlateBrush InIcon);                                                                                        // [0x957c828] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortProgressModal.SetDescription
	// void SetDescription(FText& InDescription);                                                                               // [0x957c524] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/FortniteUI.FortProgressModal.InitializeModal
	// void InitializeModal();                                                                                                  // [0x9579b34] Final|Native|Protected|BlueprintCallable 
};

/// Class /Script/FortniteUI.FortControllerDisconnectedModal
/// Size: 0x0010 (0x000670 - 0x000680)
class UFortControllerDisconnectedModal : public UFortProgressModal
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1664;

public:
	CMember(UHorizontalBox*)                           HBox_SwitchUser                                             OFFSET(get<T>, {0x670, 8, 0, 0})
};

/// Class /Script/FortniteUI.FortLeaveDialog
/// Size: 0x00A0 (0x000570 - 0x000610)
class UFortLeaveDialog : public UFortActivatablePanel
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1552;

public:
	SMember(FMulticastInlineDelegate)                  OnLeft                                                      OFFSET(getStruct<T>, {0x570, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnCanceled                                                  OFFSET(getStruct<T>, {0x580, 16, 0, 0})
	CMember(UVerticalBox*)                             VBox_PartyOptions                                           OFFSET(get<T>, {0x590, 8, 0, 0})
	CMember(UCommonButtonGroupLegacy*)                 PartyRadioButtonGroup                                       OFFSET(get<T>, {0x598, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_Title                                                  OFFSET(get<T>, {0x5A0, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_Description                                            OFFSET(get<T>, {0x5A8, 8, 0, 0})
	CMember(UCommonButtonLegacy*)                      Button_LeavePartyRadio                                      OFFSET(get<T>, {0x5B0, 8, 0, 0})
	CMember(UCommonButtonLegacy*)                      Button_StayWithPartyRadio                                   OFFSET(get<T>, {0x5B8, 8, 0, 0})
	CMember(UCommonButtonLegacy*)                      Button_Leave                                                OFFSET(get<T>, {0x5C0, 8, 0, 0})
	CMember(UCommonButtonLegacy*)                      Button_Cancel                                               OFFSET(get<T>, {0x5C8, 8, 0, 0})
	CMember(UCommonButtonLegacy*)                      Button_CloseTouch                                           OFFSET(get<T>, {0x5D0, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortLeaveDialog.SetupLeaveDialog
	// void SetupLeaveDialog(FText& InTitle, FText& InDescription, bool bInShowPartyOptions);                                   // [0x957eec0] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/FortniteUI.FortLeaveDialog.OnDialogResponse__DelegateSignature
	// void OnDialogResponse__DelegateSignature();                                                                              // [0x1d9241c] MulticastDelegate|Public|Delegate 
	// Function /Script/FortniteUI.FortLeaveDialog.CloseDialog
	// void CloseDialog();                                                                                                      // [0x95753cc] Final|Native|Protected|BlueprintCallable 
};

/// Class /Script/FortniteUI.FortModalBulletEntry
/// Size: 0x0008 (0x0002E8 - 0x0002F0)
class UFortModalBulletEntry : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 752;

public:
	CMember(UCommonRichTextBlock*)                     RichText_Description                                        OFFSET(get<T>, {0x2E8, 8, 0, 0})
};

/// Class /Script/FortniteUI.FortParentalControlsUpdatedBase
/// Size: 0x0018 (0x000400 - 0x000418)
class UFortParentalControlsUpdatedBase : public UCommonActivatableWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1048;

public:
	CMember(UCommonButtonBase*)                        Button_Back                                                 OFFSET(get<T>, {0x408, 8, 0, 0})
	CMember(UCommonButtonBase*)                        Button_CloseTouch                                           OFFSET(get<T>, {0x410, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortParentalControlsUpdatedBase.OnBackout
	// void OnBackout();                                                                                                        // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortParentalControlsUpdatedBase.ExitModal
	// void ExitModal();                                                                                                        // [0x2ee9a3c] Native|Protected|BlueprintCallable 
};

/// Class /Script/FortniteUI.FortPinButton
/// Size: 0x0010 (0x0014E0 - 0x0014F0)
class UFortPinButton : public UCommonButtonLegacy
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 5360;

public:
	SMember(FString)                                   PinValue                                                    OFFSET(getStruct<T>, {0x14E0, 16, 0, 0})
};

/// Class /Script/FortniteUI.FortPinCharacter
/// Size: 0x0000 (0x0002C0 - 0x0002C0)
class UFortPinCharacter : public UUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 704;

public:
};

/// Class /Script/FortniteUI.FortPinModal
/// Size: 0x00A8 (0x000570 - 0x000618)
class UFortPinModal : public UFortActivatablePanel
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1560;

public:
	CMember(UClass*)                                   PinCharacterWidgetClass                                     OFFSET(get<T>, {0x580, 8, 0, 0})
	CMember(UCommonButtonBase*)                        Button_Close                                                OFFSET(get<T>, {0x588, 8, 0, 0})
	CMember(UCommonButtonBase*)                        Button_Accept                                               OFFSET(get<T>, {0x590, 8, 0, 0})
	CMember(UCommonButtonBase*)                        Button_ForgotPin                                            OFFSET(get<T>, {0x598, 8, 0, 0})
	CMember(UCommonRichTextBlock*)                     Text_Description                                            OFFSET(get<T>, {0x5A0, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_Results                                                OFFSET(get<T>, {0x5A8, 8, 0, 0})
	CMember(UDynamicEntryBox*)                         DynamicEntryBox_Chars                                       OFFSET(get<T>, {0x5B0, 8, 0, 0})
	CMember(UFortCabinEmailManagementWidget*)          EmailManagementWidget                                       OFFSET(get<T>, {0x5B8, 8, 0, 0})
	CMember(UFortSqueegeeWidgetInjectionSlot*)         SqueegeeInjectionSlot                                       OFFSET(get<T>, {0x5C0, 8, 0, 0})
	CMember(UCommonButtonGroupBase*)                   ButtonGroup_CodeButtons                                     OFFSET(get<T>, {0x5C8, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortPinModal.SetupSqueegeeWidgets
	// void SetupSqueegeeWidgets(UFortGameActivity* GameActivity);                                                              // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.FortPinModal.OnShowCabinModeLayout
	// void OnShowCabinModeLayout(bool bIsInCabinMode);                                                                         // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.FortPinModal.OnSetPinState
	// void OnSetPinState(EPinModalValidityState PinModalState);                                                                // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.FortPinModal.CollectPinButtons
	// TArray<UFortPinButton*> CollectPinButtons();                                                                             // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.FortPinModal.ClosePinModal
	// void ClosePinModal();                                                                                                    // [0x957540c] Final|Native|Protected|BlueprintCallable 
};

/// Class /Script/FortniteUI.FortRestartClientModal
/// Size: 0x0008 (0x000570 - 0x000578)
class UFortRestartClientModal : public UFortActivatablePanel
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1400;

public:
};

/// Class /Script/FortniteUI.FortReviewYourSettingsModal
/// Size: 0x00E8 (0x000400 - 0x0004E8)
class UFortReviewYourSettingsModal : public UCommonActivatableWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1256;

public:
	CMember(UFortGameSettingRegistry*)                 Registry                                                    OFFSET(get<T>, {0x4A8, 8, 0, 0})
	CMember(UCommonButtonBase*)                        Button_Back                                                 OFFSET(get<T>, {0x4B0, 8, 0, 0})
	CMember(UCommonButtonBase*)                        Button_CloseTouch                                           OFFSET(get<T>, {0x4B8, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_Title                                                  OFFSET(get<T>, {0x4C0, 8, 0, 0})
	CMember(UCommonRichTextBlock*)                     RichText_Description                                        OFFSET(get<T>, {0x4C8, 8, 0, 0})
	CMember(UFortSettingsListView*)                    ListView_Settings                                           OFFSET(get<T>, {0x4D0, 8, 0, 0})
	CMember(UFortSettingDetailView*)                   Details_Settings                                            OFFSET(get<T>, {0x4D8, 8, 0, 0})
	CMember(UScrollBox*)                               ScrollBox_Details                                           OFFSET(get<T>, {0x4E0, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortReviewYourSettingsModal.OnModalBackout
	// void OnModalBackout();                                                                                                   // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortReviewYourSettingsModal.ExitModal
	// void ExitModal();                                                                                                        // [0x2ee9a3c] Native|Protected|BlueprintCallable 
};

/// Class /Script/FortniteUI.MotdChallengeAction
/// Size: 0x0010 (0x000030 - 0x000040)
class UMotdChallengeAction : public UMotdActionBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 64;

public:
};

/// Class /Script/FortniteUI.MotdCompetitiveSubPageAction
/// Size: 0x0010 (0x000030 - 0x000040)
class UMotdCompetitiveSubPageAction : public UMotdActionBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 64;

public:
};

/// Class /Script/FortniteUI.MotdHabaneroSubPageAction
/// Size: 0x0000 (0x000030 - 0x000030)
class UMotdHabaneroSubPageAction : public UMotdActionBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 48;

public:
};

/// Class /Script/FortniteUI.MotdMapSubPageAction
/// Size: 0x0008 (0x000030 - 0x000038)
class UMotdMapSubPageAction : public UMotdActionBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 56;

public:
};

/// Class /Script/FortniteUI.MotdNavigateToShopAction
/// Size: 0x0018 (0x000030 - 0x000048)
class UMotdNavigateToShopAction : public UMotdActionBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 72;

public:
};

/// Class /Script/FortniteUI.MotdNavigateToTabAction
/// Size: 0x0008 (0x000030 - 0x000038)
class UMotdNavigateToTabAction : public UMotdActionBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 56;

public:
};

/// Class /Script/FortniteUI.MotdRebootRallyAction
/// Size: 0x0000 (0x000030 - 0x000030)
class UMotdRebootRallyAction : public UMotdActionBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 48;

public:
};

/// Class /Script/FortniteUI.MotdSocialMenuAction
/// Size: 0x0008 (0x000030 - 0x000038)
class UMotdSocialMenuAction : public UMotdActionBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 56;

public:
};

/// Class /Script/FortniteUI.MotdSocialTagsAction
/// Size: 0x0000 (0x000030 - 0x000030)
class UMotdSocialTagsAction : public UMotdActionBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 48;

public:
};

/// Class /Script/FortniteUI.MotdSubscriptionSubPageAction
/// Size: 0x0008 (0x000030 - 0x000038)
class UMotdSubscriptionSubPageAction : public UMotdActionBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 56;

public:
};

/// Class /Script/FortniteUI.MotdWebsiteAction
/// Size: 0x0010 (0x000030 - 0x000040)
class UMotdWebsiteAction : public UMotdActionBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 64;

public:
};

/// Class /Script/FortniteUI.FortAthenaMOTDSimpleNewsWidget
/// Size: 0x0038 (0x000400 - 0x000438)
class UFortAthenaMOTDSimpleNewsWidget : public UCommonActivatableWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1080;

public:
	CMember(UEpicCMSImage*)                            CMSImage_NewsImage                                          OFFSET(get<T>, {0x418, 8, 0, 0})
	CMember(URichTextBlock*)                           RichTextBlock_NewsTitle                                     OFFSET(get<T>, {0x420, 8, 0, 0})
	CMember(URichTextBlock*)                           RichTextBlock_NewsBody                                      OFFSET(get<T>, {0x428, 8, 0, 0})
	CMember(UCommonButtonLegacy*)                      CommonButton_Close                                          OFFSET(get<T>, {0x430, 8, 0, 0})
};

/// Class /Script/FortniteUI.FortAthenaMOTDTeaserWidget
/// Size: 0x0048 (0x0002E8 - 0x000330)
class UFortAthenaMOTDTeaserWidget : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 816;

public:
	CMember(UClass*)                                   MotdWidgetClass                                             OFFSET(get<T>, {0x2E8, 8, 0, 0})
	CMember(UClass*)                                   MOTDSimpleNewsWidgetClass                                   OFFSET(get<T>, {0x2F0, 8, 0, 0})
	CMember(UFortAthenaMOTDTileListView*)              FortAthenaMOTDTileListView                                  OFFSET(get<T>, {0x328, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortAthenaMOTDTeaserWidget.ResetViewConfiguration
	// void ResetViewConfiguration();                                                                                           // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortAthenaMOTDTeaserWidget.OpenMOTDScreen
	// void OpenMOTDScreen(int32_t FocusedNewsIndex);                                                                           // [0x957bf28] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.FortAthenaMOTDTeaserWidget.OnNewsPopulated
	// void OnNewsPopulated();                                                                                                  // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortAthenaMOTDTeaserWidget.GetNewsCount
	// int32_t GetNewsCount();                                                                                                  // [0x9578888] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortAthenaMOTDTeaserWidget.GetNewsByIndex
	// FAthenaMOTDBase GetNewsByIndex(int32_t Index);                                                                           // [0x95786b0] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/FortniteUI.FortAthenaMOTDTile
/// Size: 0x0050 (0x0014E0 - 0x001530)
class UFortAthenaMOTDTile : public UCommonButtonLegacy
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 5424;

public:
	CMember(UEpicCMSImage*)                            CMSImage_NewsImage                                          OFFSET(get<T>, {0x1500, 8, 0, 0})
	CMember(URichTextBlock*)                           RichTextBlock_NewsTitle                                     OFFSET(get<T>, {0x1508, 8, 0, 0})
	CMember(UCommonBorder*)                            Border_AdSpace                                              OFFSET(get<T>, {0x1510, 8, 0, 0})
	CMember(URichTextBlock*)                           RichTextBlock_AdSpace                                       OFFSET(get<T>, {0x1518, 8, 0, 0})
};

/// Class /Script/FortniteUI.FortAthenaMOTDTileListView
/// Size: 0x0110 (0x000298 - 0x0003A8)
class UFortAthenaMOTDTileListView : public UListViewBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 936;

public:
	DMember(bool)                                      bAllowFocus                                                 OFFSET(get<bool>, {0x380, 1, 0, 0})
	DMember(bool)                                      bReturnFocusToSelection                                     OFFSET(get<bool>, {0x381, 1, 0, 0})
};

/// Class /Script/FortniteUI.FortAthenaMOTDNewsChildren
/// Size: 0x0000 (0x000028 - 0x000028)
class UFortAthenaMOTDNewsChildren : public UInterface
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 40;

public:
};

/// Class /Script/FortniteUI.FortAthenaMOTDWidget
/// Size: 0x0170 (0x000418 - 0x000588)
class UFortAthenaMOTDWidget : public UMotdWidgetBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1416;

public:
	CMember(UCommonButtonGroupLegacy*)                 MOTDButtonGroup                                             OFFSET(get<T>, {0x420, 8, 0, 0})
	CMember(UClass*)                                   MOTDTileClass                                               OFFSET(get<T>, {0x428, 8, 0, 0})
	CMember(UClass*)                                   NewVideoPlayerClass                                         OFFSET(get<T>, {0x430, 8, 0, 0})
	CMember(EFrontEndCamera)                           ActivationFrontendCamera                                    OFFSET(get<T>, {0x438, 1, 0, 0})
	SMember(FPrimaryContentSetup)                      PrimaryContentSetup                                         OFFSET(getStruct<T>, {0x439, 3, 0, 0})
	SMember(FGameplayTag)                              BattlepassScreenTag                                         OFFSET(getStruct<T>, {0x43C, 4, 0, 0})
	SMember(FDataTableRowHandle)                       NavigateLeftInputAction                                     OFFSET(getStruct<T>, {0x440, 16, 0, 0})
	SMember(FDataTableRowHandle)                       NavigateRightInputAction                                    OFFSET(getStruct<T>, {0x458, 16, 0, 0})
	CMember(TArray<UFortStoreFrontOfferInfo*>)         OfferInfoOwnershipArray                                     OFFSET(get<T>, {0x4D0, 16, 0, 0})
	CMember(UCommonButtonBase*)                        Button_SpecialAction                                        OFFSET(get<T>, {0x4F0, 8, 0, 0})
	CMember(UCommonButtonBase*)                        Button_SecondarySpecialAction                               OFFSET(get<T>, {0x4F8, 8, 0, 0})
	CMember(UCommonButtonBase*)                        Button_NormalAction                                         OFFSET(get<T>, {0x500, 8, 0, 0})
	CMember(UCommonButtonBase*)                        Button_SecondaryNormalAction                                OFFSET(get<T>, {0x508, 8, 0, 0})
	CMember(UTextBlock*)                               Text_MatchmakingNotice                                      OFFSET(get<T>, {0x510, 8, 0, 0})
	CMember(UEpicCMSImage*)                            CMSImage_SelectedNewsImage                                  OFFSET(get<T>, {0x518, 8, 0, 0})
	CMember(UEpicCMSImage*)                            CMSImage_SelectedNewsImage_Blurred                          OFFSET(get<T>, {0x520, 8, 0, 0})
	CMember(URichTextBlock*)                           RichTextBlock_SelectedNewsTitle                             OFFSET(get<T>, {0x528, 8, 0, 0})
	CMember(URichTextBlock*)                           RichTextBlock_SelectedNewsBody                              OFFSET(get<T>, {0x530, 8, 0, 0})
	CMember(UCommonButtonBase*)                        Button_Close                                                OFFSET(get<T>, {0x538, 8, 0, 0})
	CMember(UCommonButtonBase*)                        Button_TouchClose                                           OFFSET(get<T>, {0x540, 8, 0, 0})
	CMember(UFortDynamicEntryBox*)                     EntryBox_MOTDEntries                                        OFFSET(get<T>, {0x548, 8, 0, 0})
	CMember(UFortDynamicEntryBox*)                     EntryBox_MOTDEntries_Mobile                                 OFFSET(get<T>, {0x550, 8, 0, 0})
	CMember(UFortGameActivityProvider*)                ActivityProvider                                            OFFSET(get<T>, {0x558, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortAthenaMOTDWidget.StartSTWUpsell
	// void StartSTWUpsell();                                                                                                   // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortAthenaMOTDWidget.SetSpecialButtonText
	// void SetSpecialButtonText(FText& InText);                                                                                // [0x1d9241c] Event|Protected|HasOutParms|BlueprintEvent 
	// Function /Script/FortniteUI.FortAthenaMOTDWidget.SetSecondarySpecialButtonText
	// void SetSecondarySpecialButtonText(FText& InText);                                                                       // [0x1d9241c] Event|Protected|HasOutParms|BlueprintEvent 
	// Function /Script/FortniteUI.FortAthenaMOTDWidget.SetSecondaryNormalButtonText
	// void SetSecondaryNormalButtonText(FText& InText);                                                                        // [0x1d9241c] Event|Protected|HasOutParms|BlueprintEvent 
	// Function /Script/FortniteUI.FortAthenaMOTDWidget.SetNormalButtonText
	// void SetNormalButtonText(FText& InText);                                                                                 // [0x1d9241c] Event|Protected|HasOutParms|BlueprintEvent 
	// Function /Script/FortniteUI.FortAthenaMOTDWidget.SetDefaultImage
	// void SetDefaultImage();                                                                                                  // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortAthenaMOTDWidget.SelectNewsByIndex
	// void SelectNewsByIndex(int32_t Index);                                                                                   // [0x957c394] Final|Native|Private|BlueprintCallable 
	// Function /Script/FortniteUI.FortAthenaMOTDWidget.ResetViewConfiguration
	// void ResetViewConfiguration();                                                                                           // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortAthenaMOTDWidget.PlayFirstAutoPlayVideo
	// bool PlayFirstAutoPlayVideo();                                                                                           // [0x957c010] Final|Native|Private|BlueprintCallable 
	// Function /Script/FortniteUI.FortAthenaMOTDWidget.OnSelectedNews
	// void OnSelectedNews(FAthenaMOTDBase& NewsEntry);                                                                         // [0x1d9241c] Event|Protected|HasOutParms|BlueprintEvent 
	// Function /Script/FortniteUI.FortAthenaMOTDWidget.OnPlayIntroAnim
	// void OnPlayIntroAnim();                                                                                                  // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortAthenaMOTDWidget.OnNewsPopulated
	// void OnNewsPopulated();                                                                                                  // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortAthenaMOTDWidget.OnIsActivityLoadingChanged
	// void OnIsActivityLoadingChanged(bool bIsLoading);                                                                        // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortAthenaMOTDWidget.NavigateToRightNews
	// void NavigateToRightNews();                                                                                              // [0x957aa60] Final|Native|Private|BlueprintCallable 
	// Function /Script/FortniteUI.FortAthenaMOTDWidget.NavigateToLeftNews
	// void NavigateToLeftNews();                                                                                               // [0x957aa4c] Final|Native|Private|BlueprintCallable 
	// Function /Script/FortniteUI.FortAthenaMOTDWidget.HandleSelectedButtonChanged
	// void HandleSelectedButtonChanged(UCommonButtonLegacy* SelectedButton, int32_t ButtonIndex);                              // [0x95795a4] Final|Native|Private 
	// Function /Script/FortniteUI.FortAthenaMOTDWidget.HandleImageLoaded
	// void HandleImageLoaded();                                                                                                // [0x95793c8] Final|Native|Private 
	// Function /Script/FortniteUI.FortAthenaMOTDWidget.GetNewsCount
	// int32_t GetNewsCount();                                                                                                  // [0x7a4944c] Final|Native|Private|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortAthenaMOTDWidget.GetNewsByIndex
	// FAthenaMOTDBase GetNewsByIndex(int32_t Index);                                                                           // [0x957879c] Final|Native|Private|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortAthenaMOTDWidget.BP_PlayIntroAnimation
	// void BP_PlayIntroAnimation();                                                                                            // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortAthenaMOTDWidget.BP_GetSelectedNews
	// FAthenaMOTDBase BP_GetSelectedNews();                                                                                    // [0x9575194] Final|Native|Private|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortAthenaMOTDWidget.AutoPlayedVideo
	// bool AutoPlayedVideo();                                                                                                  // [0x8cd4c78] Final|Native|Private|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/FortniteUI.FortMtxOfferData
/// Size: 0x0238 (0x000030 - 0x000268)
class UFortMtxOfferData : public UPrimaryDataAsset
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 616;

public:
	SMember(FText)                                     Header                                                      OFFSET(getStruct<T>, {0x30, 24, 0, 0})
	SMember(FText)                                     DisplayName                                                 OFFSET(getStruct<T>, {0x48, 24, 0, 0})
	SMember(FText)                                     ShortDisplayName                                            OFFSET(getStruct<T>, {0x60, 24, 0, 0})
	SMember(FText)                                     ShortDescription                                            OFFSET(getStruct<T>, {0x78, 24, 0, 0})
	SMember(FText)                                     SubTitleText                                                OFFSET(getStruct<T>, {0x90, 24, 0, 0})
	SMember(FText)                                     DisclaimerText                                              OFFSET(getStruct<T>, {0xA8, 24, 0, 0})
	CMember(TArray<FFortItemQuantityPair>)             GrantOverride                                               OFFSET(get<T>, {0xC0, 16, 0, 0})
	CMember(TWeakObjectPtr<UObject*>)                  SoftTileImage                                               OFFSET(get<T>, {0xD0, 32, 0, 0})
	SMember(FVector2D)                                 TileImageSize                                               OFFSET(getStruct<T>, {0xF0, 16, 0, 0})
	CMember(TWeakObjectPtr<UObject*>)                  SoftBadgeImage                                              OFFSET(get<T>, {0x100, 32, 0, 0})
	SMember(FVector2D)                                 BadgeImageSize                                              OFFSET(getStruct<T>, {0x120, 16, 0, 0})
	CMember(TWeakObjectPtr<UObject*>)                  SoftDetailsImage                                            OFFSET(get<T>, {0x130, 32, 0, 0})
	SMember(FVector2D)                                 DetailsImageSize                                            OFFSET(getStruct<T>, {0x150, 16, 0, 0})
	CMember(TWeakObjectPtr<UObject*>)                  SoftSimpleImage                                             OFFSET(get<T>, {0x160, 32, 0, 0})
	SMember(FVector2D)                                 SimpleImageSize                                             OFFSET(getStruct<T>, {0x180, 16, 0, 0})
	CMember(TWeakObjectPtr<UMaterialInterface*>)       DetailsBadge                                                OFFSET(get<T>, {0x190, 32, 0, 0})
	CMember(TArray<FFortMtxDetailsAttribute>)          DetailsAttributes                                           OFFSET(get<T>, {0x1B0, 16, 0, 0})
	SMember(FFortMtxGradient)                          Gradient                                                    OFFSET(getStruct<T>, {0x1C0, 32, 0, 0})
	SMember(FLinearColor)                              Background                                                  OFFSET(getStruct<T>, {0x1E0, 16, 0, 0})
	CMember(TWeakObjectPtr<UObject*>)                  SoftBackgroundImage                                         OFFSET(get<T>, {0x1F0, 32, 0, 0})
	SMember(FVector2D)                                 BackgroundImageSize                                         OFFSET(getStruct<T>, {0x210, 16, 0, 0})
	SMember(FLinearColor)                              UpsellPrimaryColor                                          OFFSET(getStruct<T>, {0x220, 16, 0, 0})
	SMember(FLinearColor)                              UpsellSecondaryColor                                        OFFSET(getStruct<T>, {0x230, 16, 0, 0})
	SMember(FLinearColor)                              UpsellTextColor                                             OFFSET(getStruct<T>, {0x240, 16, 0, 0})
	DMember(bool)                                      bUseBaseColors                                              OFFSET(get<bool>, {0x250, 1, 0, 0})
	CMember(EFortMtxOfferDisplaySize)                  DisplaySize                                                 OFFSET(get<T>, {0x251, 1, 0, 0})
	CMember(TArray<FFortMtxDescriptionAndDetails>)     DescriptionAndDetailsList                                   OFFSET(get<T>, {0x258, 16, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortMtxOfferData.GetDescriptionAndDetailsList
	// TArray<FFortMtxDescriptionAndDetails> GetDescriptionAndDetailsList();                                                    // [0x95afa4c] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortMtxOfferData.CreateBrushFromAsset
	// FSlateBrush CreateBrushFromAsset(UObject* LoadedAsset, FVector2D& BrushSize);                                            // [0x95af958] Final|RequiredAPI|Native|Static|Public|HasOutParms|HasDefaults|BlueprintCallable 
};

/// Class /Script/FortniteUI.FortMtxStoreRootBase
/// Size: 0x0088 (0x000400 - 0x000488)
class UFortMtxStoreRootBase : public UCommonActivatableWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1160;

public:
	CMember(UFortMtxStoreSelectionPopup*)              MtxStoreSelectionWidget                                     OFFSET(get<T>, {0x408, 8, 0, 0})
	CMember(UClass*)                                   MtxStoreSelectionClass                                      OFFSET(get<T>, {0x410, 8, 0, 0})
	CMember(TArray<UFortStoreFrontOfferInfo*>)         AcquisitionOfferData                                        OFFSET(get<T>, {0x428, 16, 0, 0})
	CMember(TArray<FString>)                           StorefrontNames                                             OFFSET(get<T>, {0x450, 16, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortMtxStoreRootBase.SetStorefrontNames
	// void SetStorefrontNames(TArray<FString>& InStorefrontNames);                                                             // [0x95b060c] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/FortniteUI.FortMtxStoreRootBase.PushStoreSelection
	// void PushStoreSelection();                                                                                               // [0x2cf4738] Final|Native|Protected 
	// Function /Script/FortniteUI.FortMtxStoreRootBase.OnUpdateOtherPlatformMTXMessage
	// void OnUpdateOtherPlatformMTXMessage(bool HasOtherPlatformCurrency, FText& CurrencyMessageLocText);                      // [0x1d9241c] Event|Protected|HasOutParms|BlueprintEvent 
	// Function /Script/FortniteUI.FortMtxStoreRootBase.OnStartReadingOffers
	// void OnStartReadingOffers();                                                                                             // [0x6c64588] Native|Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortMtxStoreRootBase.OnPurchasingDisabled
	// void OnPurchasingDisabled();                                                                                             // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortMtxStoreRootBase.OnOffersGenerated
	// void OnOffersGenerated();                                                                                                // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortMtxStoreRootBase.NoOffersAvailable
	// void NoOffersAvailable();                                                                                                // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortMtxStoreRootBase.GetStorefrontNames
	// TArray<FString> GetStorefrontNames();                                                                                    // [0x95afb74] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortMtxStoreRootBase.GetMtxBreakdown
	// FMtxBreakdown GetMtxBreakdown();                                                                                         // [0x95afae8] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortMtxStoreRootBase.GenerateOfferWidget
	// void GenerateOfferWidget(UFortStoreFrontOfferInfo* OfferData);                                                           // [0x836d8d0] Native|Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortMtxStoreRootBase.ClearOfferWidgets
	// void ClearOfferWidgets();                                                                                                // [0x2ee5548] Native|Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortMtxStoreRootBase.AreOffersLoaded
	// bool AreOffersLoaded();                                                                                                  // [0x330fdcc] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/FortniteUI.FortMtxStoreRootBase_Legacy
/// Size: 0x0088 (0x000570 - 0x0005F8)
class UFortMtxStoreRootBase_Legacy : public UFortActivatablePanel
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1528;

public:
	CMember(UFortMtxStoreSelectionPopup*)              MtxStoreSelectionWidget                                     OFFSET(get<T>, {0x578, 8, 0, 0})
	CMember(UClass*)                                   MtxStoreSelectionClass                                      OFFSET(get<T>, {0x580, 8, 0, 0})
	CMember(TArray<UFortStoreFrontOfferInfo*>)         AcquisitionOfferData                                        OFFSET(get<T>, {0x598, 16, 0, 0})
	CMember(TArray<FString>)                           StorefrontNames                                             OFFSET(get<T>, {0x5C0, 16, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortMtxStoreRootBase_Legacy.SetStorefrontNames
	// void SetStorefrontNames(TArray<FString>& InStorefrontNames);                                                             // [0x95b06a4] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/FortniteUI.FortMtxStoreRootBase_Legacy.PushStoreSelection
	// void PushStoreSelection();                                                                                               // [0x2cf4738] Final|Native|Protected 
	// Function /Script/FortniteUI.FortMtxStoreRootBase_Legacy.OnUpdateOtherPlatformMTXMessage
	// void OnUpdateOtherPlatformMTXMessage(bool HasOtherPlatformCurrency, FText& CurrencyMessageLocText);                      // [0x1d9241c] Event|Protected|HasOutParms|BlueprintEvent 
	// Function /Script/FortniteUI.FortMtxStoreRootBase_Legacy.OnStartReadingOffers
	// void OnStartReadingOffers();                                                                                             // [0x7827f60] Native|Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortMtxStoreRootBase_Legacy.OnPurchasingDisabled
	// void OnPurchasingDisabled();                                                                                             // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortMtxStoreRootBase_Legacy.OnOffersGenerated
	// void OnOffersGenerated();                                                                                                // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortMtxStoreRootBase_Legacy.NoOffersAvailable
	// void NoOffersAvailable();                                                                                                // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortMtxStoreRootBase_Legacy.GetStorefrontNames
	// TArray<FString> GetStorefrontNames();                                                                                    // [0x95afbb0] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortMtxStoreRootBase_Legacy.GetMtxBreakdown
	// FMtxBreakdown GetMtxBreakdown();                                                                                         // [0x95afae8] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortMtxStoreRootBase_Legacy.GenerateOfferWidget
	// void GenerateOfferWidget(UFortStoreFrontOfferInfo* OfferData);                                                           // [0x8fa7f4c] Native|Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortMtxStoreRootBase_Legacy.ClearOfferWidgets
	// void ClearOfferWidgets();                                                                                                // [0x6c63f94] Native|Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortMtxStoreRootBase_Legacy.AreOffersLoaded
	// bool AreOffersLoaded();                                                                                                  // [0x95af804] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/FortniteUI.FortMtxStoreSelectionPopup
/// Size: 0x0038 (0x000538 - 0x000570)
class UFortMtxStoreSelectionPopup : public UCommonActivatablePanelLegacy
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1392;

public:
	CMember(UCommonButtonLegacy*)                      Button_Epic                                                 OFFSET(get<T>, {0x550, 8, 0, 0})
	CMember(UCommonButtonLegacy*)                      Button_Epic_NonCTA                                          OFFSET(get<T>, {0x558, 8, 0, 0})
	CMember(UCommonWidgetSwitcherLegacy*)              Switcher_EpicButton                                         OFFSET(get<T>, {0x560, 8, 0, 0})
	CMember(UCommonButtonLegacy*)                      Button_Samsung                                              OFFSET(get<T>, {0x568, 8, 0, 0})
};

/// Class /Script/FortniteUI.FortMPItemShopContent
/// Size: 0x0038 (0x000400 - 0x000438)
class UFortMPItemShopContent : public UCommonActivatableWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1080;

public:
	CMember(UAthenaScrollBox*)                         ScrollBox_Content                                           OFFSET(get<T>, {0x400, 8, 0, 0})
	CMember(UGridPanel*)                               GridPanel_Content                                           OFFSET(get<T>, {0x408, 8, 0, 0})
	CMember(UClass*)                                   RowWidgetClass                                              OFFSET(get<T>, {0x410, 8, 0, 0})
	DMember(int32_t)                                   NumRowsVisibleFromCentered                                  OFFSET(get<int32_t>, {0x418, 4, 0, 0})
	DMember(int32_t)                                   FirstRowIndex                                               OFFSET(get<int32_t>, {0x41C, 4, 0, 0})
	DMember(float)                                     TouchScrollThreshold                                        OFFSET(get<float>, {0x434, 4, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortMPItemShopContent.ScrollToRowIndex
	// void ScrollToRowIndex(int32_t DestinationIndex, int32_t NumRows, bool bRefreshAll);                                      // [0x95b0238] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.FortMPItemShopContent.OnScrollInput
	// void OnScrollInput(float ScrollAmount);                                                                                  // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortMPItemShopContent.OnScrollComplete
	// void OnScrollComplete(int32_t DestinationIndex);                                                                         // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortMPItemShopContent.OnInitializeRow
	// void OnInitializeRow(UUserWidget* RowWidget, int32_t RowIndex);                                                          // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortMPItemShopContent.HasLoadedRowsForAnimatedScroll
	// bool HasLoadedRowsForAnimatedScroll(int32_t DestinationIndex, int32_t NumRows);                                          // [0x95afd6c] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortMPItemShopContent.ClearRows
	// void ClearRows();                                                                                                        // [0x95af930] Final|Native|Protected|BlueprintCallable 
};

/// Class /Script/FortniteUI.FortMPItemShopScreen
/// Size: 0x00B0 (0x000720 - 0x0007D0)
class UFortMPItemShopScreen : public UFortItemPreviewScreen
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 2000;

public:
	DMember(float)                                     PendingOfferPreviewDelay                                    OFFSET(get<float>, {0x738, 4, 0, 0})
	SMember(FLinearColor)                              DefaultBackgroundPrimaryColor                               OFFSET(getStruct<T>, {0x73C, 16, 0, 0})
	SMember(FLinearColor)                              DefaultBackgroundSecondaryColor                             OFFSET(getStruct<T>, {0x74C, 16, 0, 0})
	CMember(AFortItemPreviewWorld*)                    CachedVaultWorld                                            OFFSET(get<T>, {0x760, 8, 0, 0})
	CMember(TWeakObjectPtr<UClass*>)                   ItemShopOfferDetailsScreenClass                             OFFSET(get<T>, {0x780, 32, 0, 0})
	CMember(TWeakObjectPtr<UClass*>)                   ItemShopDisplayAssetOfferDetailsClass                       OFFSET(get<T>, {0x7A0, 32, 0, 0})
	CMember(UAthenaScrollBox*)                         ScrollBox_Content                                           OFFSET(get<T>, {0x7C8, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortMPItemShopScreen.UpdateBackground
	// void UpdateBackground(UObject* LoadedBackground, bool bPlayForward, FLinearColor PrimaryColor, FLinearColor SecondaryColor); // [0x31d64e8] Final|Native|Protected|HasDefaults|BlueprintCallable 
	// Function /Script/FortniteUI.FortMPItemShopScreen.RequestItemPreview
	// void RequestItemPreview(FString InPreviewedItemTemplateId);                                                              // [0x2a8cd58] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.FortMPItemShopScreen.RequestInspectOffer
	// void RequestInspectOffer(UFortItemShopOfferVM* OfferVM, UFortItemShopOfferGroupVM* OwningOfferGroupVM);                  // [0x95b0144] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.FortMPItemShopScreen.OnScrollInput
	// void OnScrollInput(float ScrollAmount);                                                                                  // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortMPItemShopScreen.OnNavigateToOffer
	// void OnNavigateToOffer(FString OfferTrackingId, bool bShowOfferDetails);                                                 // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortMPItemShopScreen.IsItemShopDynamicBackgroundEnabled
	// bool IsItemShopDynamicBackgroundEnabled();                                                                               // [0x34e7d3c] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortMPItemShopScreen.HandleBackToGameRequested
	// void HandleBackToGameRequested();                                                                                        // [0x95afc00] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.FortMPItemShopScreen.GetItemShopVM
	// UFortItemShopVM* GetItemShopVM();                                                                                        // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.FortMPItemShopScreen.ClearItemPreview
	// void ClearItemPreview();                                                                                                 // [0x95af8a4] Final|Native|Protected|BlueprintCallable 
};

/// Class /Script/FortniteUI.FortToastDisplayArea
/// Size: 0x0058 (0x0002E8 - 0x000340)
class UFortToastDisplayArea : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 832;

public:
	CMember(UFortToastWidget*)                         ToastWidget_New                                             OFFSET(get<T>, {0x2E8, 8, 0, 0})
	CMember(UFortToastWidget*)                         Toast_BattlePassPageUnlocked                                OFFSET(get<T>, {0x2F0, 8, 0, 0})
	CMember(UFortToastWidget*)                         PowerToastWidget                                            OFFSET(get<T>, {0x2F8, 8, 0, 0})
	CMember(UFortToastWidget*)                         ToastWidget_MinorError                                      OFFSET(get<T>, {0x300, 8, 0, 0})
	CMember(UFortVoiceChannelChangePopup*)             VoiceChannelChangePopup                                     OFFSET(get<T>, {0x308, 8, 0, 0})
	CMember(UFortToastWidget*)                         ToastWidgetDonut                                            OFFSET(get<T>, {0x310, 8, 0, 0})
	CMember(UFortSocialNotificationWidget*)            ToastSocialWidget                                           OFFSET(get<T>, {0x318, 8, 0, 0})
	CMember(UFortSocialNotificationWidget*)            ToastSocialWidget_New                                       OFFSET(get<T>, {0x320, 8, 0, 0})
	CMember(UFortUINotificationQueue*)                 NotificationQueue                                           OFFSET(get<T>, {0x328, 8, 0, 0})
	CMember(UFortUINotification*)                      CurrentNotification                                         OFFSET(get<T>, {0x330, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortToastDisplayArea.TestBasicToast
	// void TestBasicToast(EFortNotificationType InNotificationType, FText InTitle, FText InDescription);                       // [0x95b073c] Final|Native|Public|BlueprintCallable|Const 
	// Function /Script/FortniteUI.FortToastDisplayArea.RegisterToastHandler
	// void RegisterToastHandler();                                                                                             // [0x95b003c] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortToastDisplayArea.HandleToastFinished
	// void HandleToastFinished();                                                                                              // [0x95afcd8] Final|Native|Private 
	// Function /Script/FortniteUI.FortToastDisplayArea.HandleNewToastAvailable
	// void HandleNewToastAvailable();                                                                                          // [0x95afc44] Final|Native|Private 
};

/// Class /Script/FortniteUI.FortUINotificationQueue
/// Size: 0x0028 (0x000028 - 0x000050)
class UFortUINotificationQueue : public UObject
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 80;

public:
	DMember(int32_t)                                   MaxNotificationsInQueue                                     OFFSET(get<int32_t>, {0x28, 4, 0, 0})
	CMember(TArray<UFortUINotification*>)              NotificationQueue                                           OFFSET(get<T>, {0x30, 16, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortUINotificationQueue.UnregisterToReceiveNotifications
	// void UnregisterToReceiveNotifications();                                                                                 // [0x95b0880] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortUINotificationQueue.RemoveNotification
	// void RemoveNotification(UFortUINotification* InNotificationDescription);                                                 // [0x95b0050] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortUINotificationQueue.RegisterToReceiveNotifications
	// void RegisterToReceiveNotifications(FDelegateProperty& NotificationDelegate);                                            // [0x95aff98] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/FortniteUI.FortUINotificationQueue.QueueNotification
	// void QueueNotification(UFortUINotification* Notification, bool bShowImmediately);                                        // [0x95afed0] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortUINotificationQueue.GetNextNotification
	// UFortUINotification* GetNextNotification();                                                                              // [0x95afb50] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortUINotificationQueue.CanNotificationBeQueued
	// bool CanNotificationBeQueued(EFortNotificationPriority Priority);                                                        // [0x95af81c] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/FortniteUI.FortNavigatablePage
/// Size: 0x0000 (0x000028 - 0x000028)
class UFortNavigatablePage : public UInterface
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 40;

public:
};

/// Class /Script/FortniteUI.FortPageNavigationButton
/// Size: 0x0010 (0x001490 - 0x0014A0)
class UFortPageNavigationButton : public UCommonButtonBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 5280;

public:
	CMember(UCommonTextBlock*)                         Text_ButtonLabel                                            OFFSET(get<T>, {0x1498, 8, 0, 0})
};

/// Class /Script/FortniteUI.FortPageNavigator
/// Size: 0x0098 (0x000400 - 0x000498)
class UFortPageNavigator : public UCommonActivatableWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1176;

public:
	DMember(bool)                                      bEnableRightStickScrolling                                  OFFSET(get<bool>, {0x400, 1, 0, 0})
	DMember(bool)                                      bEnableNavigationButtons                                    OFFSET(get<bool>, {0x401, 1, 0, 0})
	CMember(UFortPageNavigationButton*)                Button_Next                                                 OFFSET(get<T>, {0x408, 8, 0, 0})
	CMember(UFortPageNavigationButton*)                Button_Previous                                             OFFSET(get<T>, {0x410, 8, 0, 0})
	CMember(UAthenaScrollBox*)                         ScrollBox_Pages                                             OFFSET(get<T>, {0x418, 8, 0, 0})
	CMember(UVerticalBox*)                             VBox_Pages                                                  OFFSET(get<T>, {0x420, 8, 0, 0})
	DMember(bool)                                      bEnableSnapScrolling                                        OFFSET(get<bool>, {0x428, 1, 0, 0})
	DMember(float)                                     SnapScrollingThreshold                                      OFFSET(get<float>, {0x42C, 4, 0, 0})
	SMember(FMargin)                                   PagePadding                                                 OFFSET(getStruct<T>, {0x430, 16, 0, 0})
	CMember(UDynamicEntryBox*)                         EntryBox_PagesPips                                          OFFSET(get<T>, {0x458, 8, 0, 0})
	CMember(UCommonButtonGroupLegacy*)                 ButtonGroup_PagesPips                                       OFFSET(get<T>, {0x460, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortPageNavigator.SelectPage
	// void SelectPage(int32_t PageIndex, bool bSkipAnimation, bool bForceFocusRefresh);                                        // [0x95b0330] Final|RequiredAPI|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortPageNavigator.RequestPreviousPage
	// void RequestPreviousPage();                                                                                              // [0x95b0220] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortPageNavigator.RequestNextPage
	// void RequestNextPage();                                                                                                  // [0x95b0208] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortPageNavigator.OnPipButtonCreated
	// void OnPipButtonCreated(UFortTextButton* NewPipButton);                                                                  // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortPageNavigator.HandleUserScrolled
	// void HandleUserScrolled(float ScrollAmount);                                                                             // [0x95afcec] Final|Native|Protected 
	// Function /Script/FortniteUI.FortPageNavigator.HandleScrollCompleted
	// void HandleScrollCompleted(float ScrollAmount);                                                                          // [0x95afc58] Final|Native|Protected 
	// Function /Script/FortniteUI.FortPageNavigator.ClearPages
	// void ClearPages();                                                                                                       // [0x95af8d0] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/FortniteUI.FortLocalPlayerParticipation
/// Size: 0x0000 (0x0002E8 - 0x0002E8)
class UFortLocalPlayerParticipation : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 744;

public:
};

/// Class /Script/FortniteUI.FortVoiceChannelSpeakerWidget
/// Size: 0x00B0 (0x0002C0 - 0x000370)
class UFortVoiceChannelSpeakerWidget : public UUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 880;

public:
	DMember(float)                                     ToleratedSilenceDelay                                       OFFSET(get<float>, {0x310, 4, 0, 0})
	DMember(float)                                     PerfUpdateIntervalInSecs                                    OFFSET(get<float>, {0x328, 4, 0, 0})
	DMember(float)                                     OpenCloseAnimProxyDuration                                  OFFSET(get<float>, {0x32C, 4, 0, 0})
	DMember(bool)                                      bPerfCollapseHorizontal                                     OFFSET(get<bool>, {0x330, 1, 0, 0})
	DMember(float)                                     TalkingAnimProxyDuration                                    OFFSET(get<float>, {0x334, 4, 0, 0})
	CMember(UWidgetAnimation*)                         Anim_Close                                                  OFFSET(get<T>, {0x338, 8, 0, 0})
	CMember(UWidgetAnimation*)                         Anim_Open                                                   OFFSET(get<T>, {0x340, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_DisplayName                                            OFFSET(get<T>, {0x348, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_ChannelName                                            OFFSET(get<T>, {0x350, 8, 0, 0})
	CMember(UCommonBorder*)                            Border_ScaleBound                                           OFFSET(get<T>, {0x358, 8, 0, 0})
	CMember(UFortSocialAvatarIcon*)                    AvatarIcon                                                  OFFSET(get<T>, {0x360, 8, 0, 0})
	CMember(UImage*)                                   Image_ActiveVoiceIcon                                       OFFSET(get<T>, {0x368, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortVoiceChannelSpeakerWidget.OnStyleAssigned
	// void OnStyleAssigned(EChannelSpeakerStyle NewStyle);                                                                     // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.FortVoiceChannelSpeakerWidget.OnAnimateTalkingChanged
	// void OnAnimateTalkingChanged(bool bIsNowTalking);                                                                        // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortVoiceChannelSpeakerWidget.HandleAnimationFinished
	// void HandleAnimationFinished();                                                                                          // [0x95afbec] Final|Native|Private 
};

/// Class /Script/FortniteUI.FortVoiceSpeakerContainerWidget
/// Size: 0x0098 (0x0002E8 - 0x000380)
class UFortVoiceSpeakerContainerWidget : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 896;

public:
	CMember(UClass*)                                   CustomSpeakerWidgetClass                                    OFFSET(get<T>, {0x2E8, 8, 0, 0})
	DMember(int32_t)                                   MaxSimultaneousUsers                                        OFFSET(get<int32_t>, {0x350, 4, 0, 0})
	DMember(bool)                                      bShowIndicatorsForSquadMembers                              OFFSET(get<bool>, {0x354, 1, 0, 0})
	DMember(bool)                                      bCurrentChannelDisplayEnabled                               OFFSET(get<bool>, {0x355, 1, 0, 0})
	CMember(UDynamicEntryBox*)                         DynamicEntry_Speakers                                       OFFSET(get<T>, {0x360, 8, 0, 0})
	CMember(UPanelWidget*)                             Panel_ChannelContainer                                      OFFSET(get<T>, {0x368, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_ChannelDisplayName                                     OFFSET(get<T>, {0x370, 8, 0, 0})
};

/// Class /Script/FortniteUI.FortBacchusSpeakerWrapper
/// Size: 0x0008 (0x000370 - 0x000378)
class UFortBacchusSpeakerWrapper : public UBacchusHUDElement
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 888;

public:
	CMember(UFortVoiceSpeakerContainerWidget*)         WrappedSpeakers                                             OFFSET(get<T>, {0x370, 8, 0, 0})
};

/// Class /Script/FortniteUI.FortPlayerFeedbackModal
/// Size: 0x02A8 (0x000570 - 0x000818)
class UFortPlayerFeedbackModal : public UFortActivatablePanel
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 2072;

public:
	CMember(UCommonButtonGroupBase*)                   CategoryTabs                                                OFFSET(get<T>, {0x578, 8, 0, 0})
	CMember(TArray<TWeakObjectPtr>)                    DisplayedSubScreenStack                                     OFFSET(get<T>, {0x580, 16, 0, 0})
	CMember(TArray<TWeakObjectPtr>)                    SubScreenToDisplayQueue                                     OFFSET(get<T>, {0x590, 16, 0, 0})
	CMember(TArray<FFortFeedbackDropdownCategoryHotfix_Add>) PlayerFeedbackCategoriesToAdd                         OFFSET(get<T>, {0x788, 16, 0, 0})
	CMember(TArray<FFortFeedbackDropdownCategoryHotfix_Modify>) PlayerFeedbackCategoriesToModify                   OFFSET(get<T>, {0x798, 16, 0, 0})
	CMember(UClass*)                                   Subscreen_CategoryDisplay                                   OFFSET(get<T>, {0x7A8, 8, 0, 0})
	CMember(UClass*)                                   Subscreen_PlayerSelect                                      OFFSET(get<T>, {0x7B0, 8, 0, 0})
	CMember(UClass*)                                   Subscreen_SubmitDisplay                                     OFFSET(get<T>, {0x7B8, 8, 0, 0})
	CMember(UClass*)                                   Subscreen_FreeText                                          OFFSET(get<T>, {0x7C0, 8, 0, 0})
	CMember(UClass*)                                   Subscreen_EpicQA                                            OFFSET(get<T>, {0x7C8, 8, 0, 0})
	CMember(UClass*)                                   Subscreen_Screenshot                                        OFFSET(get<T>, {0x7D0, 8, 0, 0})
	CMember(UDynamicEntryBox*)                         SubscreenTabs                                               OFFSET(get<T>, {0x7D8, 8, 0, 0})
	CMember(UScrollBox*)                               SubscreenContainer                                          OFFSET(get<T>, {0x7E0, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_ModalTitle                                             OFFSET(get<T>, {0x7E8, 8, 0, 0})
	CMember(UCommonButtonBase*)                        Button_Close                                                OFFSET(get<T>, {0x7F0, 8, 0, 0})
	CMember(UCommonButtonBase*)                        Button_BackTouch                                            OFFSET(get<T>, {0x7F8, 8, 0, 0})
	CMember(UCommonButtonBase*)                        CloseButton                                                 OFFSET(get<T>, {0x800, 8, 0, 0})
	CMember(UCommonButtonBase*)                        Button_NewFeedbackReport                                    OFFSET(get<T>, {0x808, 8, 0, 0})
	CMember(UCommonButtonBase*)                        Button_Back                                                 OFFSET(get<T>, {0x810, 8, 0, 0})
};

/// Class /Script/FortniteUI.FortPlayerFeedbackModalSubscreenBase
/// Size: 0x0030 (0x000400 - 0x000430)
class UFortPlayerFeedbackModalSubscreenBase : public UCommonActivatableWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1072;

public:
};

/// Class /Script/FortniteUI.FortPlayerFeedbackModalSubscreen_CategoryDisplay
/// Size: 0x0028 (0x000430 - 0x000458)
class UFortPlayerFeedbackModalSubscreen_CategoryDisplay : public UFortPlayerFeedbackModalSubscreenBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1112;

public:
	CMember(UCommonButtonGroupBase*)                   CategoryButtons                                             OFFSET(get<T>, {0x448, 8, 0, 0})
	CMember(UDynamicEntryBox*)                         Buttons_DropdownCategories                                  OFFSET(get<T>, {0x450, 8, 0, 0})
};

/// Class /Script/FortniteUI.FortPlayerFeedbackModalSubscreen_PlayerSelect
/// Size: 0x0040 (0x000430 - 0x000470)
class UFortPlayerFeedbackModalSubscreen_PlayerSelect : public UFortPlayerFeedbackModalSubscreenBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1136;

public:
	CMember(UCommonButtonGroupBase*)                   PlayerButtons                                               OFFSET(get<T>, {0x458, 8, 0, 0})
	CMember(UDynamicEntryBox*)                         Buttons_Players                                             OFFSET(get<T>, {0x460, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_NoPlayers                                              OFFSET(get<T>, {0x468, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortPlayerFeedbackModalSubscreen_PlayerSelect.OnCreatedPlayerList
	// void OnCreatedPlayerList(bool bHasPlayers);                                                                              // [0x1d9241c] Event|Protected|BlueprintEvent 
};

/// Class /Script/FortniteUI.FortPlayerFeedbackModalSubscreen_SubmitScreen
/// Size: 0x0040 (0x000430 - 0x000470)
class UFortPlayerFeedbackModalSubscreen_SubmitScreen : public UFortPlayerFeedbackModalSubscreenBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1136;

public:
	CMember(UWidget*)                                  Slot_CommunityRulesURL                                      OFFSET(get<T>, {0x430, 8, 0, 0})
	CMember(UCommonRichTextBlock*)                     Text_Description                                            OFFSET(get<T>, {0x438, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_Summary                                                OFFSET(get<T>, {0x440, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_FailReason                                             OFFSET(get<T>, {0x448, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_ReportNumber                                           OFFSET(get<T>, {0x450, 8, 0, 0})
	CMember(UCommonButtonBase*)                        Button_BlockUser                                            OFFSET(get<T>, {0x458, 8, 0, 0})
	CMember(UCommonButtonBase*)                        Button_CommunityRules                                       OFFSET(get<T>, {0x460, 8, 0, 0})
	CMember(UCommonButtonBase*)                        Button_Submit                                               OFFSET(get<T>, {0x468, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortPlayerFeedbackModalSubscreen_SubmitScreen.OnUpdateSubmitState
	// void OnUpdateSubmitState(EPlayerFeedbackSubmitState NewState);                                                           // [0x1d9241c] Event|Public|BlueprintEvent 
};

/// Class /Script/FortniteUI.FortPlayerFeedbackModalSubscreen_FreeText
/// Size: 0x0020 (0x000430 - 0x000450)
class UFortPlayerFeedbackModalSubscreen_FreeText : public UFortPlayerFeedbackModalSubscreenBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1104;

public:
	CMember(UWidget*)                                  TextContainer_CustomerSupport                               OFFSET(get<T>, {0x430, 8, 0, 0})
	CMember(UCommonButtonBase*)                        Button_CustomerSupport                                      OFFSET(get<T>, {0x438, 8, 0, 0})
	CMember(UMultiLineEditableTextBox*)                Text_Input                                                  OFFSET(get<T>, {0x440, 8, 0, 0})
	CMember(UCommonButtonBase*)                        Button_Next                                                 OFFSET(get<T>, {0x448, 8, 0, 0})
};

/// Class /Script/FortniteUI.FortPlayerFeedbackModalSubscreen_EpicQA
/// Size: 0x0038 (0x000430 - 0x000468)
class UFortPlayerFeedbackModalSubscreen_EpicQA : public UFortPlayerFeedbackModalSubscreenBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1128;

public:
	CMember(UComboBoxString*)                          ComboBoxString_BugComponents                                OFFSET(get<T>, {0x440, 8, 0, 0})
	CMember(UEditableText*)                            EditableText_Username                                       OFFSET(get<T>, {0x448, 8, 0, 0})
	CMember(UEditableText*)                            EditableText_Password                                       OFFSET(get<T>, {0x450, 8, 0, 0})
	CMember(UCommonButtonBase*)                        Button_SignIn                                               OFFSET(get<T>, {0x458, 8, 0, 0})
	CMember(UCommonButtonBase*)                        Button_ConfirmComponent                                     OFFSET(get<T>, {0x460, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortPlayerFeedbackModalSubscreen_EpicQA.OnStateUpdated
	// void OnStateUpdated(EPlayerFeedback_EpicQAState NewState);                                                               // [0x1d9241c] Event|Public|BlueprintEvent 
};

/// Class /Script/FortniteUI.FortPlayerFeedbackModalSubscreen_Screenshot
/// Size: 0x0030 (0x000430 - 0x000460)
class UFortPlayerFeedbackModalSubscreen_Screenshot : public UFortPlayerFeedbackModalSubscreenBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1120;

public:
	CMember(UCommonButtonBase*)                        Button_TakeScreenshot                                       OFFSET(get<T>, {0x448, 8, 0, 0})
	CMember(UCommonButtonBase*)                        Button_Continue                                             OFFSET(get<T>, {0x450, 8, 0, 0})
	CMember(UImage*)                                   Image_Preview                                               OFFSET(get<T>, {0x458, 8, 0, 0})
};

/// Class /Script/FortniteUI.FortPlayerFeedbackModalTab
/// Size: 0x0010 (0x001490 - 0x0014A0)
class UFortPlayerFeedbackModalTab : public UCommonButtonBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 5280;

public:
	CMember(UFortPlayerFeedbackModalSubscreenBase*)    AssociatedSubscreen                                         OFFSET(get<T>, {0x1490, 8, 0, 0})
	CMember(UCommonTextBlock*)                         TabLabel                                                    OFFSET(get<T>, {0x1498, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortPlayerFeedbackModalTab.OnUpdatedIsCurrentTab
	// void OnUpdatedIsCurrentTab(bool bIsCurrent);                                                                             // [0x1d9241c] Event|Public|BlueprintEvent 
};

/// Class /Script/FortniteUI.FortPlayerFeedbackModalCategoryButton
/// Size: 0x0020 (0x001490 - 0x0014B0)
class UFortPlayerFeedbackModalCategoryButton : public UCommonButtonBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 5296;

public:
	CMember(UCommonTextBlock*)                         Text_Label                                                  OFFSET(get<T>, {0x14A0, 8, 0, 0})
	CMember(UWidget*)                                  DropdownWidget                                              OFFSET(get<T>, {0x14A8, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortPlayerFeedbackModalCategoryButton.OnDropdownMenuStatusUpdated
	// void OnDropdownMenuStatusUpdated(bool bIsExpanded);                                                                      // [0x1d9241c] Event|Protected|BlueprintEvent 
};

/// Class /Script/FortniteUI.FortPlayerFeedbackModalPlayerButton
/// Size: 0x0070 (0x001490 - 0x001500)
class UFortPlayerFeedbackModalPlayerButton : public UCommonButtonBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 5376;

public:
	CMember(UCommonTextBlock*)                         Text_PlayerName                                             OFFSET(get<T>, {0x14E0, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_SecondaryPlayerName                                    OFFSET(get<T>, {0x14E8, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_Relationship                                           OFFSET(get<T>, {0x14F0, 8, 0, 0})
};

/// Class /Script/FortniteUI.FortBannerSelectModal
/// Size: 0x0000 (0x000570 - 0x000570)
class UFortBannerSelectModal : public UFortActivatablePanel
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1392;

public:
};

/// Class /Script/FortniteUI.FortEventPlayerStatProfileSelectorEntryData
/// Size: 0x0020 (0x000028 - 0x000048)
class UFortEventPlayerStatProfileSelectorEntryData : public UObject
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 72;

public:
	SMember(FString)                                   AccountId                                                   OFFSET(getStruct<T>, {0x28, 16, 0, 0})
	SMember(FString)                                   DisplayName                                                 OFFSET(getStruct<T>, {0x38, 16, 0, 0})
};

/// Class /Script/FortniteUI.FortEventPlayerStatProfileSelectorEntry
/// Size: 0x0020 (0x0014E0 - 0x001500)
class UFortEventPlayerStatProfileSelectorEntry : public UCommonButtonLegacy
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 5376;

public:
	CMember(UCommonTextBlock*)                         PlayerName                                                  OFFSET(get<T>, {0x14E8, 8, 0, 0})
	CMember(UFortFlagImage*)                           FlagImage                                                   OFFSET(get<T>, {0x14F0, 8, 0, 0})
	CMember(UFortEventPlayerStatProfileSelectorEntryData*) ProfileData                                             OFFSET(get<T>, {0x14F8, 8, 0, 0})
};

/// Class /Script/FortniteUI.FortEventPlayerStatProfileSelector
/// Size: 0x0018 (0x000570 - 0x000588)
class UFortEventPlayerStatProfileSelector : public UFortActivatablePanel
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1416;

public:
	CMember(UCommonListView*)                          ProfileList                                                 OFFSET(get<T>, {0x570, 8, 0, 0})
	CMember(UCommonTextBlock*)                         HoveredName                                                 OFFSET(get<T>, {0x578, 8, 0, 0})
	CMember(UClass*)                                   StatsScreenClass                                            OFFSET(get<T>, {0x580, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortEventPlayerStatProfileSelector.SetProfilesByLeaderboardData
	// void SetProfilesByLeaderboardData(UFortEventLeaderboardEntryData* DataForDisplay);                                       // [0x95b058c] Final|Native|Protected|BlueprintCallable 
};

/// Class /Script/FortniteUI.FortPlayerProfileBannerEditor
/// Size: 0x0048 (0x0002E8 - 0x000330)
class UFortPlayerProfileBannerEditor : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 816;

public:
	CMember(ESaveProfileForBanners)                    ProfileToSave                                               OFFSET(get<T>, {0x2E8, 4, 0, 0})
	DMember(bool)                                      bCanCloseBannerEditor                                       OFFSET(get<bool>, {0x2EC, 1, 0, 0})
	CMember(TArray<FName>)                             IconCategories                                              OFFSET(get<T>, {0x2F0, 16, 0, 0})
	CMember(TArray<FName>)                             ColorCategories                                             OFFSET(get<T>, {0x300, 16, 0, 0})
	SMember(FName)                                     ChosenIcon                                                  OFFSET(getStruct<T>, {0x310, 4, 0, 0})
	SMember(FName)                                     ChosenIconCategory                                          OFFSET(getStruct<T>, {0x314, 4, 0, 0})
	SMember(FName)                                     ChosenColor                                                 OFFSET(getStruct<T>, {0x318, 4, 0, 0})
	SMember(FName)                                     ChosenColorCategory                                         OFFSET(getStruct<T>, {0x31C, 4, 0, 0})
	CMember(UCommonButtonBase*)                        Button_CloseEditorButton                                    OFFSET(get<T>, {0x320, 8, 0, 0})
	CMember(UCommonButtonBase*)                        Button_EditIcon                                             OFFSET(get<T>, {0x328, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortPlayerProfileBannerEditor.SetBannerIcon
	// void SetBannerIcon(FName& Icon);                                                                                         // [0x95b04e4] Final|Native|Protected|HasOutParms|BlueprintCallable 
	// Function /Script/FortniteUI.FortPlayerProfileBannerEditor.SetBannerColor
	// void SetBannerColor(FName& Color);                                                                                       // [0x95b043c] Final|Native|Protected|HasOutParms|BlueprintCallable 
	// Function /Script/FortniteUI.FortPlayerProfileBannerEditor.RefreshBannerEditor
	// void RefreshBannerEditor();                                                                                              // [0x1a6975c] Native|Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortPlayerProfileBannerEditor.OnShowPreviousCategory
	// void OnShowPreviousCategory();                                                                                           // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortPlayerProfileBannerEditor.OnShowNextCategory
	// void OnShowNextCategory();                                                                                               // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortPlayerProfileBannerEditor.HandleEditorDeactivated
	// void HandleEditorDeactivated();                                                                                          // [0x95afc30] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.FortPlayerProfileBannerEditor.HandleEditorActivated
	// void HandleEditorActivated();                                                                                            // [0x95afc1c] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.FortPlayerProfileBannerEditor.CommitChosenIconAndColor
	// void CommitChosenIconAndColor();                                                                                         // [0x95af944] Final|Native|Protected|BlueprintCallable 
};

/// Class /Script/FortniteUI.FortPlayerProfileBannerEditorTile
/// Size: 0x0010 (0x0014E0 - 0x0014F0)
class UFortPlayerProfileBannerEditorTile : public UCommonButtonLegacy
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 5360;

public:
	CMember(TWeakObjectPtr<UFortItem*>)                Item                                                        OFFSET(get<T>, {0x14E8, 8, 0, 0})
};

/// Class /Script/FortniteUI.FortPlayerProfileModalWidget
/// Size: 0x0000 (0x000570 - 0x000570)
class UFortPlayerProfileModalWidget : public UFortActivatablePanel
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1392;

public:
};

/// Class /Script/FortniteUI.FortPlayerSurveyCMSTracker
/// Size: 0x0138 (0x000028 - 0x000160)
class UFortPlayerSurveyCMSTracker : public UObject
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 352;

public:
	CMember(UFortLocalPlayer*)                         Player                                                      OFFSET(get<T>, {0x28, 8, 0, 0})
	CMember(UFortMcpProfileCommonCore*)                McpProfile                                                  OFFSET(get<T>, {0x30, 8, 0, 0})
};

/// Class /Script/FortniteUI.FortPlayerSurveyCheatManager
/// Size: 0x0000 (0x000028 - 0x000028)
class UFortPlayerSurveyCheatManager : public UChildCheatManager
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 40;

public:
};

/// Class /Script/FortniteUI.FortPlayerSurveyChoiceResponseWidget
/// Size: 0x0020 (0x000430 - 0x000450)
class UFortPlayerSurveyChoiceResponseWidget : public UFortPlayerSurveyResponseWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1104;

public:
	CMember(UDynamicEntryBox*)                         DynamicEntryBox_Responses                                   OFFSET(get<T>, {0x430, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortPlayerSurveyChoiceResponseWidget.SetNumberOfResponses
	// void SetNumberOfResponses(int32_t NumberOfResponses);                                                                    // [0x1d9241c] Event|Protected|BlueprintEvent 
};

/// Class /Script/FortniteUI.FortPlayerSurveyInterpreter
/// Size: 0x00C8 (0x000028 - 0x0000F0)
class UFortPlayerSurveyInterpreter : public UObject
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 240;

public:
	CMember(UCMSContext*)                              CMSContext                                                  OFFSET(get<T>, {0x28, 8, 0, 0})
	CMember(UFortPlayerSurveyCMSTracker*)              CMSTracker                                                  OFFSET(get<T>, {0x30, 8, 0, 0})
};

/// Class /Script/FortniteUI.FortPlayerSurveyMultipleChoiceResponseBase
/// Size: 0x0000 (0x000450 - 0x000450)
class UFortPlayerSurveyMultipleChoiceResponseBase : public UFortPlayerSurveyChoiceResponseWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1104;

public:
};

/// Class /Script/FortniteUI.FortPlayerSurveyRatingChoiceBase
/// Size: 0x0010 (0x001490 - 0x0014A0)
class UFortPlayerSurveyRatingChoiceBase : public UCommonButtonBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 5280;

public:
	CMember(UCommonTextBlock*)                         Text_RatingValue                                            OFFSET(get<T>, {0x1490, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_Label                                                  OFFSET(get<T>, {0x1498, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortPlayerSurveyRatingChoiceBase.OnSurveyResetChoice
	// void OnSurveyResetChoice();                                                                                              // [0x1d9241c] Event|Protected|BlueprintEvent 
};

/// Class /Script/FortniteUI.FortPlayerSurveyRatingResponseBase
/// Size: 0x0018 (0x000430 - 0x000448)
class UFortPlayerSurveyRatingResponseBase : public UFortPlayerSurveyResponseWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1096;

public:
	CMember(UCommonButtonGroupBase*)                   ResponseGroup                                               OFFSET(get<T>, {0x430, 8, 0, 0})
	CMember(UDynamicEntryBox*)                         DynamicEntryBox_Responses                                   OFFSET(get<T>, {0x438, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortPlayerSurveyRatingResponseBase.OnResponsesSet_BP
	// void OnResponsesSet_BP();                                                                                                // [0x1d9241c] Event|Protected|BlueprintEvent 
};

/// Class /Script/FortniteUI.FortPlayerSurveySingleChoiceResponseBase
/// Size: 0x0000 (0x000450 - 0x000450)
class UFortPlayerSurveySingleChoiceResponseBase : public UFortPlayerSurveyChoiceResponseWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1104;

public:
};

/// Class /Script/FortniteUI.FortPlayerSurveyWidgetBase
/// Size: 0x0208 (0x000400 - 0x000608)
class UFortPlayerSurveyWidgetBase : public UCommonActivatableWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1544;

public:
	CMember(UCommonTextBlock*)                         Text_Title                                                  OFFSET(get<T>, {0x408, 8, 0, 0})
	CMember(URichTextBlock*)                           Text_Question                                               OFFSET(get<T>, {0x410, 8, 0, 0})
	CMember(UCanvasPanel*)                             CanvasPanel_ResponseFrame                                   OFFSET(get<T>, {0x418, 8, 0, 0})
	CMember(UCommonButtonLegacy*)                      Button_Skip                                                 OFFSET(get<T>, {0x420, 8, 0, 0})
	CMember(UWidgetSwitcher*)                          Switcher_NextButton                                         OFFSET(get<T>, {0x428, 8, 0, 0})
	CMember(UCommonButtonLegacy*)                      Button_NextQuestion                                         OFFSET(get<T>, {0x430, 8, 0, 0})
	CMember(UCommonButtonLegacy*)                      Button_Submit                                               OFFSET(get<T>, {0x438, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_QuestionCount                                          OFFSET(get<T>, {0x440, 8, 0, 0})
	SMember(FDataTableRowHandle)                       DeselectInputAction                                         OFFSET(getStruct<T>, {0x448, 16, 0, 0})
	SMember(FDataTableRowHandle)                       ExitInputAction                                             OFFSET(getStruct<T>, {0x458, 16, 0, 0})
	CMember(TMap<EFortPlayerSurveyQuestionType, UClass*>) ResponseWidgetMap                                        OFFSET(get<T>, {0x468, 80, 0, 0})
	SMember(FPrimaryContentSetup)                      PrimaryContentSetup                                         OFFSET(getStruct<T>, {0x4B8, 3, 0, 0})
	CMember(TMap<EFortPlayerSurveyQuestionType, UFortPlayerSurveyResponseWidget*>) ResponseWidgetInstances         OFFSET(get<T>, {0x4C0, 80, 0, 0})
};

/// Class /Script/FortniteUI.FortPlayerSurveyContext
/// Size: 0x00C8 (0x000030 - 0x0000F8)
class UFortPlayerSurveyContext : public UBlueprintContextBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 248;

public:
};

/// Class /Script/FortniteUI.FortQuestUpdateEntry
/// Size: 0x0068 (0x0002E8 - 0x000350)
class UFortQuestUpdateEntry : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 848;

public:
	SMember(FMulticastInlineDelegate)                  FinishedDisplayingQuests                                    OFFSET(getStruct<T>, {0x2E8, 16, 0, 0})
	CMember(UPanelWidget*)                             ObjectivesBox                                               OFFSET(get<T>, {0x2F8, 8, 0, 0})
	DMember(int32_t)                                   NumberOfObjectivesToDisplayAtTheSameTime                    OFFSET(get<int32_t>, {0x300, 4, 0, 0})
	DMember(int32_t)                                   NumberOfWidgetsToPreCreateWhenDisplayingAllObjectives       OFFSET(get<int32_t>, {0x304, 4, 0, 0})
	CMember(UFortQuestItem*)                           QuestItem                                                   OFFSET(get<T>, {0x308, 8, 0, 0})
	CMember(UClass*)                                   SubEntryClass                                               OFFSET(get<T>, {0x318, 8, 0, 0})
	CMember(TArray<UFortQuestObjectiveEntry*>)         QuestObjectiveEntryPool                                     OFFSET(get<T>, {0x320, 16, 0, 0})
	CMember(TArray<UFortQuestObjectiveEntry*>)         AvailableQuestObjectiveEntryArray                           OFFSET(get<T>, {0x330, 16, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortQuestUpdateEntry.StartQuestOutro
	// void StartQuestOutro();                                                                                                  // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.FortQuestUpdateEntry.StartQuestIntro
	// void StartQuestIntro();                                                                                                  // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.FortQuestUpdateEntry.SetupAsAnnouncement
	// void SetupAsAnnouncement();                                                                                              // [0x1d9241c] Event|Public|BlueprintCallable|BlueprintEvent 
	// Function /Script/FortniteUI.FortQuestUpdateEntry.SetQuestItem
	// void SetQuestItem(UFortQuestObjectiveInfo* ObjectiveInfo, bool bIsAnnouncement);                                         // [0x95cdcd8] Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortQuestUpdateEntry.QuestItemSet
	// void QuestItemSet(UFortQuestItem* QuestItemToCheck);                                                                     // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.FortQuestUpdateEntry.GetNumDisplayedObjectives
	// int32_t GetNumDisplayedObjectives();                                                                                     // [0x95cb860] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortQuestUpdateEntry.FinishQuestOutro
	// void FinishQuestOutro();                                                                                                 // [0x8c92878] Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortQuestUpdateEntry.FinishQuestIntro
	// void FinishQuestIntro();                                                                                                 // [0x95cb6e0] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortQuestUpdateEntry.CurrentlyDisplayedObjectiveFinished
	// void CurrentlyDisplayedObjectiveFinished(UFortQuestObjectiveEntry* QuestObjective);                                      // [0x95cb518] Final|Native|Protected 
	// Function /Script/FortniteUI.FortQuestUpdateEntry.CanAddObjective
	// bool CanAddObjective(UFortQuestItem* QuestItemToCheck);                                                                  // [0x95cadd4] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/FortniteUI.FortFeatUpdateEntry
/// Size: 0x0020 (0x000350 - 0x000370)
class UFortFeatUpdateEntry : public UFortQuestUpdateEntry
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 880;

public:
	CMember(UImage*)                                   Image_QuestIcon                                             OFFSET(get<T>, {0x350, 8, 0, 0})
	CMember(UTextBlock*)                               Text_QuestName                                              OFFSET(get<T>, {0x358, 8, 0, 0})
	CMember(UTextBlock*)                               Text_QuestDescription                                       OFFSET(get<T>, {0x360, 8, 0, 0})
};

/// Class /Script/FortniteUI.FortQuestObjectiveEntry
/// Size: 0x0020 (0x0002E8 - 0x000308)
class UFortQuestObjectiveEntry : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 776;

public:
	SMember(FMulticastInlineDelegate)                  OnFinishedDisplaying                                        OFFSET(getStruct<T>, {0x2F0, 16, 0, 0})
	CMember(UFortQuestObjectiveInfo*)                  MyObjectiveInfo                                             OFFSET(get<T>, {0x300, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortQuestObjectiveEntry.UpdateLevelUpObjectiveVisuals
	// void UpdateLevelUpObjectiveVisuals();                                                                                    // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.FortQuestObjectiveEntry.UpdateDefaultObjectiveVisuals
	// void UpdateDefaultObjectiveVisuals();                                                                                    // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.FortQuestObjectiveEntry.UpdateCharmObjectiveVisuals
	// void UpdateCharmObjectiveVisuals(FFortChallengeSetStyle& DisplayStyle, FText& CharmName, TWeakObjectPtr<UTexture2D*>& CharmIcon); // [0x1d9241c] Event|Public|HasOutParms|BlueprintEvent 
	// Function /Script/FortniteUI.FortQuestObjectiveEntry.UpdateChallengeBundleObjectiveVisuals
	// void UpdateChallengeBundleObjectiveVisuals(FFortChallengeSetStyle& DisplayStyle, FText& ChallengeBundleName);            // [0x1d9241c] Event|Public|HasOutParms|BlueprintEvent 
	// Function /Script/FortniteUI.FortQuestObjectiveEntry.StartDisplayingObjective
	// void StartDisplayingObjective();                                                                                         // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.FortQuestObjectiveEntry.SetRewardVisuals
	// void SetRewardVisuals(UFortItemDefinition* RewardDef, FText& SourceText, FText& TypeText);                               // [0x1d9241c] Event|Public|HasOutParms|BlueprintEvent 
	// Function /Script/FortniteUI.FortQuestObjectiveEntry.ObjectiveInfoSet
	// void ObjectiveInfoSet(UFortQuestObjectiveInfo* ObjectiveInfo, bool IsAnnouncement, bool bQuestCompleted);                // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.FortQuestObjectiveEntry.HideRewardVisuals
	// void HideRewardVisuals();                                                                                                // [0x1d9241c] Event|Public|BlueprintEvent 
};

/// Class /Script/FortniteUI.FortQuestTrackerEntry
/// Size: 0x0060 (0x0002E8 - 0x000348)
class UFortQuestTrackerEntry : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 840;

public:
	CMember(UCommonTextBlock*)                         QuestNameText                                               OFFSET(get<T>, {0x2F8, 8, 0, 0})
	CMember(UCommonListView*)                          ObjectivesList                                              OFFSET(get<T>, {0x300, 8, 0, 0})
	CMember(UFortQuestItem*)                           TrackedQuest                                                OFFSET(get<T>, {0x308, 8, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnHUDQuestFinalObjectiveHiddenDelegate                      OFFSET(getStruct<T>, {0x310, 16, 0, 0})
	CMember(TArray<UFortQuestObjectiveInfo*>)          HUDCachedObjectiveInfos                                     OFFSET(get<T>, {0x320, 16, 0, 0})
	DMember(bool)                                      bConfigureAsHUD                                             OFFSET(get<bool>, {0x330, 1, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnSizeEstimateChangedDelegate                               OFFSET(getStruct<T>, {0x338, 16, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortQuestTrackerEntry.OnSetup
	// void OnSetup();                                                                                                          // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortQuestTrackerEntry.HandleHUDObjectiveCompletion
	// void HandleHUDObjectiveCompletion(UFortQuestObjectiveInfo* QuestObjective);                                              // [0x95cbfe8] Final|Native|Protected 
};

/// Class /Script/FortniteUI.FortQuestTrackerList
/// Size: 0x0040 (0x0002E8 - 0x000328)
class UFortQuestTrackerList : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 808;

public:
	DMember(bool)                                      bConfigureAsHUD                                             OFFSET(get<bool>, {0x2F0, 1, 0, 0})
	CMember(UCommonListView*)                          QuestList                                                   OFFSET(get<T>, {0x2F8, 8, 0, 0})
	CMember(TArray<UFortQuestItem*>)                   HUDCachedQuests                                             OFFSET(get<T>, {0x300, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnSizeEstimateChangedDelegate                               OFFSET(getStruct<T>, {0x310, 16, 0, 0})
	DMember(bool)                                      bHasHiddenItemsDueToSize                                    OFFSET(get<bool>, {0x320, 1, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortQuestTrackerList.HandleSizeEstimateChanged
	// void HandleSizeEstimateChanged(UObject* ChangedElement);                                                                 // [0x95cc6f8] Final|Native|Protected 
	// Function /Script/FortniteUI.FortQuestTrackerList.HandleQuestsUpdated
	// void HandleQuestsUpdated();                                                                                              // [0x95cc494] Final|Native|Protected 
	// Function /Script/FortniteUI.FortQuestTrackerList.HandlePinnedQuestsChanged
	// void HandlePinnedQuestsChanged();                                                                                        // [0x95cc384] Final|Native|Protected 
	// Function /Script/FortniteUI.FortQuestTrackerList.HandleHUDFinalObjectiveHidden
	// void HandleHUDFinalObjectiveHidden(UFortQuestItem* QuestItem);                                                           // [0x95cbf68] Final|Native|Protected 
	// Function /Script/FortniteUI.FortQuestTrackerList.GetVisibleQuestsToDisplay
	// TArray<UFortQuestItem*> GetVisibleQuestsToDisplay();                                                                     // [0x95cb9b4] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.FortQuestTrackerList.GetQuestsToDisplay
	// TArray<UFortQuestItem*> GetQuestsToDisplay();                                                                            // [0x1d9241c] Event|Protected|BlueprintEvent 
};

/// Class /Script/FortniteUI.FortQuestTrackerSubEntry
/// Size: 0x0040 (0x0002E8 - 0x000328)
class UFortQuestTrackerSubEntry : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 808;

public:
	CMember(UFortQuestObjectiveInfo*)                  TrackedObjective                                            OFFSET(get<T>, {0x2F8, 8, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnSizeEstimateChangedDelegate                               OFFSET(getStruct<T>, {0x300, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnHUDQuestObjectiveCompletedDelegate                        OFFSET(getStruct<T>, {0x310, 16, 0, 0})
	DMember(bool)                                      bConfigureAsHUD                                             OFFSET(get<bool>, {0x320, 1, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortQuestTrackerSubEntry.OnSetup
	// void OnSetup();                                                                                                          // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortQuestTrackerSubEntry.OnQuestsUpdated
	// void OnQuestsUpdated();                                                                                                  // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortQuestTrackerSubEntry.OnPlayObjectiveCompletedAnimation
	// void OnPlayObjectiveCompletedAnimation();                                                                                // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortQuestTrackerSubEntry.NotifyCompletionAnimationFinished
	// void NotifyCompletionAnimationFinished();                                                                                // [0x95cd3a8] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.FortQuestTrackerSubEntry.HandleQuestsUpdated
	// void HandleQuestsUpdated();                                                                                              // [0x95cc4a8] Final|Native|Protected 
};

/// Class /Script/FortniteUI.FortQuestUpdatesLog
/// Size: 0x0090 (0x000328 - 0x0003B8)
class UFortQuestUpdatesLog : public UFortHUDElementWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 952;

public:
	CMember(UClass*)                                   QuestEntryClass                                             OFFSET(get<T>, {0x368, 8, 0, 0})
	DMember(int32_t)                                   MaxDisplayedQuestUpdates                                    OFFSET(get<int32_t>, {0x370, 4, 0, 0})
	DMember(int32_t)                                   MaxDisplayedQuestObjectives                                 OFFSET(get<int32_t>, {0x374, 4, 0, 0})
	DMember(bool)                                      bShowFeatQuests                                             OFFSET(get<bool>, {0x378, 1, 0, 0})
	DMember(bool)                                      bFeatShowNonVisibleObjectives                               OFFSET(get<bool>, {0x379, 1, 0, 0})
	CMember(UVerticalBox*)                             QuestUpdatesBox                                             OFFSET(get<T>, {0x380, 8, 0, 0})
	SMember(FFortPrioritizedWidgetData)                PrioritizationData                                          OFFSET(getStruct<T>, {0x388, 2, 0, 0})
	CMember(TArray<UFortQuestObjectiveInfo*>)          QueuedQuestObjectiveInfos                                   OFFSET(get<T>, {0x390, 16, 0, 0})
	CMember(TArray<UFortQuestUpdateEntry*>)            QuestUpdateWidgets                                          OFFSET(get<T>, {0x3A0, 16, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortQuestUpdatesLog.HandleQuestUpdateFinished
	// void HandleQuestUpdateFinished(UFortQuestUpdateEntry* QuestEntryFinished);                                               // [0x95cc414] Final|Native|Protected 
	// Function /Script/FortniteUI.FortQuestUpdatesLog.HandleDisplayDynamicQuestUpdate
	// void HandleDisplayDynamicQuestUpdate(UFortQuestObjectiveInfo* QuestObjective, bool DisplayStatusUpdate, bool DisplayAnnouncementUpdate); // [0x95cbc04] Final|Native|Protected 
	// Function /Script/FortniteUI.FortQuestUpdatesLog.CreateAnnouncementUpdate
	// void CreateAnnouncementUpdate(UFortQuestObjectiveInfo* QuestItemToCheck);                                                // [0x1d9241c] Event|Public|BlueprintEvent 
};

/// Class /Script/FortniteUI.AthenaQuickBarNativeCell
/// Size: 0x05E0 (0x000190 - 0x000770)
class UAthenaQuickBarNativeCell : public UContentWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1904;

public:
	SMember(FVector2D)                                 SelectionOffset                                             OFFSET(getStruct<T>, {0x190, 16, 0, 0})
	DMember(float)                                     SelectionAnimLength_Seconds                                 OFFSET(get<float>, {0x1A0, 4, 0, 0})
	SMember(FSlateBrush)                               EmptyCell_Brush                                             OFFSET(getStruct<T>, {0x1B0, 192, 0, 0})
	SMember(FVector2D)                                 EmptyCell_Padding                                           OFFSET(getStruct<T>, {0x270, 16, 0, 0})
	SMember(FSlateBrush)                               SelectedCell_Brush                                          OFFSET(getStruct<T>, {0x280, 192, 0, 0})
	SMember(FSlateBrush)                               InactivePortrait_Brush                                      OFFSET(getStruct<T>, {0x340, 192, 0, 0})
	SMember(FSlateBrush)                               ItemPortrait_Brush                                          OFFSET(getStruct<T>, {0x400, 192, 0, 0})
	SMember(FSlateBrush)                               AmmoType_Brush                                              OFFSET(getStruct<T>, {0x4C0, 192, 0, 0})
	SMember(FVector2D)                                 AmmoTypeIcon_Size                                           OFFSET(getStruct<T>, {0x580, 16, 0, 0})
	SMember(FVector2D)                                 AmmoTypeIcon_Padding                                        OFFSET(getStruct<T>, {0x590, 16, 0, 0})
	SMember(FSlateFontInfo)                            ItemCount_Font                                              OFFSET(getStruct<T>, {0x5A0, 88, 0, 0})
	SMember(FLinearColor)                              ItemCount_Color                                             OFFSET(getStruct<T>, {0x5F8, 16, 0, 0})
	DMember(float)                                     ItemCount_OutlineAlphaFactor                                OFFSET(get<float>, {0x608, 4, 0, 0})
	SMember(FSlateBrush)                               GadgetFuel_Brush                                            OFFSET(getStruct<T>, {0x610, 192, 0, 0})
	SMember(FVector2D)                                 GadgetFuel_Padding                                          OFFSET(getStruct<T>, {0x6D0, 16, 0, 0})
	DMember(float)                                     GadgetFuelChargeCount_OutlineAlphaFactor                    OFFSET(get<float>, {0x6E0, 4, 0, 0})
	SMember(FSlateFontInfo)                            GadgetFuelChargeCount_Font                                  OFFSET(getStruct<T>, {0x6E8, 88, 0, 0})
	SMember(FLinearColor)                              GadgetFuelChargeCount_Color                                 OFFSET(getStruct<T>, {0x740, 16, 0, 0})
	DMember(bool)                                      bShowSelectedWhenEmpty                                      OFFSET(get<bool>, {0x750, 1, 1, 0})
	DMember(bool)                                      bSupportsWideItems                                          OFFSET(get<bool>, {0x750, 1, 1, 1})


	/// Functions
	// Function /Script/FortniteUI.AthenaQuickBarNativeCell.UpdateItemPortrait
	// void UpdateItemPortrait();                                                                                               // [0x95ce488] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.AthenaQuickBarNativeCell.SetItemToRepresent
	// void SetItemToRepresent(UFortItem* InItemToRepresent);                                                                   // [0x95cdc58] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.AthenaQuickBarNativeCell.SetIsSelected
	// void SetIsSelected(bool bInSelected);                                                                                    // [0x95cdab0] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.AthenaQuickBarNativeCell.DesiredSizeOverride
	// void DesiredSizeOverride(float WidthOverride, float HeightOverride);                                                     // [0x95cb61c] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/FortniteUI.FortRadialMenu
/// Size: 0x00B0 (0x0002E8 - 0x000398)
class UFortRadialMenu : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 920;

public:
	CMember(UClass*)                                   EntryWidgetClass                                            OFFSET(get<T>, {0x2E8, 8, 0, 0})
	DMember(float)                                     JoystickDeadZone                                            OFFSET(get<float>, {0x370, 4, 0, 0})
	DMember(float)                                     MouseDeadZoneRadiusPercentage                               OFFSET(get<float>, {0x374, 4, 0, 0})
	DMember(float)                                     JoystickMaximumMagnitude                                    OFFSET(get<float>, {0x378, 4, 0, 0})
	SMember(FRadialBoxSettings)                        RadialBoxSettings                                           OFFSET(getStruct<T>, {0x37C, 16, 0, 0})
	CMember(EFortRadialControllingStick)               ControllingStick                                            OFFSET(get<T>, {0x38C, 1, 0, 0})
	DMember(bool)                                      bAllowEmptySelection                                        OFFSET(get<bool>, {0x38D, 1, 0, 0})
	DMember(bool)                                      bAllowFullMovement                                          OFFSET(get<bool>, {0x38E, 1, 0, 0})
	CMember(UDynamicEntryBox*)                         EntryBox_ContextRadial                                      OFFSET(get<T>, {0x390, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortRadialMenu.GetNumEntries
	// int32_t GetNumEntries();                                                                                                 // [0x95cb880] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortRadialMenu.GetDegreeOffset
	// float GetDegreeOffset();                                                                                                 // [0x95cb794] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortRadialMenu.GetDegreeIncrements
	// float GetDegreeIncrements();                                                                                             // [0x9179618] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortRadialMenu.GetAngleForIndex
	// float GetAngleForIndex(int32_t Index);                                                                                   // [0x95cb6f4] Final|RequiredAPI|Native|Public|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/FortniteUI.FortSlottedRadialMenu
/// Size: 0x0038 (0x000398 - 0x0003D0)
class UFortSlottedRadialMenu : public UFortRadialMenu
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 976;

public:
	CMember(ERadialOrderingMode)                       OrderingMode                                                OFFSET(get<T>, {0x398, 1, 0, 0})
	CMember(TArray<ECardinalPoint>)                    CustomOrdering                                              OFFSET(get<T>, {0x3A0, 16, 0, 0})
	DMember(bool)                                      bUseAsManySlotsAsItems                                      OFFSET(get<bool>, {0x3B0, 1, 0, 0})
	DMember(int32_t)                                   NumSlotsSupported                                           OFFSET(get<int32_t>, {0x3B4, 4, 0, 0})
};

/// Class /Script/FortniteUI.RemoteControlledPawnExpirationWidget
/// Size: 0x0010 (0x000328 - 0x000338)
class URemoteControlledPawnExpirationWidget : public UFortHUDElementWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 824;

public:
	CMember(UImage*)                                   ExpirationProgressImage                                     OFFSET(get<T>, {0x328, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.RemoteControlledPawnExpirationWidget.OnPawnChanged
	// void OnPawnChanged();                                                                                                    // [0x95cd664] Final|Native|Protected 
};

/// Class /Script/FortniteUI.AthenaSpectatorHitPointBarBase
/// Size: 0x0018 (0x0002E8 - 0x000300)
class UAthenaSpectatorHitPointBarBase : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 768;

public:
	CMember(EHealthBarType)                            BarType                                                     OFFSET(get<T>, {0x2E8, 1, 0, 0})
	DMember(float)                                     LastToCurrentUpdateRate                                     OFFSET(get<float>, {0x2EC, 4, 0, 0})
	DMember(bool)                                      bIsDBNO                                                     OFFSET(get<bool>, {0x2F0, 1, 0, 0})
	CMember(TWeakObjectPtr<UAthenaRemotePlayerViewData*>) PlayerData                                               OFFSET(get<T>, {0x2F4, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.AthenaSpectatorHitPointBarBase.SetPlayerData
	// void SetPlayerData(UAthenaRemotePlayerViewData* InPlayerData);                                                           // [0x20cd694] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.AthenaSpectatorHitPointBarBase.OnValueHealed
	// void OnValueHealed(UAthenaRemotePlayerViewData* InPlayerData, float InValue, float InValueMax);                          // [0x20ceff4] Final|Native|Private 
	// Function /Script/FortniteUI.AthenaSpectatorHitPointBarBase.OnValueDamaged
	// void OnValueDamaged(UAthenaRemotePlayerViewData* InPlayerData, float InValue, float InValueMax);                         // [0x20cf0f8] Final|Native|Private 
	// Function /Script/FortniteUI.AthenaSpectatorHitPointBarBase.OnEliminatedStateChanged
	// void OnEliminatedStateChanged(UAthenaRemotePlayerViewData* InPlayerData, bool bInIsEliminated);                          // [0x20cd434] Final|Native|Private 
	// Function /Script/FortniteUI.AthenaSpectatorHitPointBarBase.OnDeltaValueChanged
	// void OnDeltaValueChanged(float InDeltaValue);                                                                            // [0x1d9241c] Event|Protected|BlueprintCallable|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaSpectatorHitPointBarBase.OnDBNOStateChanged
	// void OnDBNOStateChanged(UAthenaRemotePlayerViewData* InPlayerData, bool bInIsDBNO);                                      // [0x20cf33c] Final|Native|Private 
	// Function /Script/FortniteUI.AthenaSpectatorHitPointBarBase.OnDBNOChanged
	// void OnDBNOChanged(bool bInIsDBNO);                                                                                      // [0x1d9241c] Event|Protected|BlueprintCallable|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaSpectatorHitPointBarBase.OnCurrentValueChanged
	// void OnCurrentValueChanged(float InCurrentValue);                                                                        // [0x1d9241c] Event|Protected|BlueprintCallable|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaSpectatorHitPointBarBase.ChangeTextVisibility
	// void ChangeTextVisibility(bool bIsVisible);                                                                              // [0x1d9241c] Event|Protected|BlueprintCallable|BlueprintEvent 
};

/// Class /Script/FortniteUI.AthenaSpectatorPlayerListEntryWidget
/// Size: 0x0010 (0x0014E0 - 0x0014F0)
class UAthenaSpectatorPlayerListEntryWidget : public UCommonButtonLegacy
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 5360;

public:
	CMember(UAthenaSpectatorPlayerListRowData*)        PlayerListRowData                                           OFFSET(get<T>, {0x14E8, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.AthenaSpectatorPlayerListEntryWidget.OnEntryDataSet
	// void OnEntryDataSet();                                                                                                   // [0x1d9241c] Event|Protected|BlueprintEvent 
};

/// Class /Script/FortniteUI.AthenaSpectatorPlayerListScreenBase
/// Size: 0x0010 (0x0002E8 - 0x0002F8)
class UAthenaSpectatorPlayerListScreenBase : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 760;

public:
	CMember(TArray<UAthenaSpectatorPlayerListRowData*>) RowDataArray                                               OFFSET(get<T>, {0x2E8, 16, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.AthenaSpectatorPlayerListScreenBase.UpdateListUI
	// void UpdateListUI();                                                                                                     // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaSpectatorPlayerListScreenBase.OnPlayerDied
	// void OnPlayerDied(AFortPlayerState* NewlyDeadPlayer);                                                                    // [0x95cd778] Final|Native|Private 
	// Function /Script/FortniteUI.AthenaSpectatorPlayerListScreenBase.OnPlayerBecameRelevant
	// void OnPlayerBecameRelevant(AFortPlayerState* NewlyRelevantPlayer);                                                      // [0x95cd6f8] Final|Native|Private 
	// Function /Script/FortniteUI.AthenaSpectatorPlayerListScreenBase.OnPlayerBecameIrrelevant
	// void OnPlayerBecameIrrelevant(AFortPlayerState* NewlyIrrelevantPlayer);                                                  // [0x95cd678] Final|Native|Private 
	// Function /Script/FortniteUI.AthenaSpectatorPlayerListScreenBase.OnFollowedPlayerChanged
	// void OnFollowedPlayerChanged(AFortPlayerControllerSpectating* SpectatorPC, AFortPlayerState* NewFollowedPlayer);         // [0x95cd4b8] Final|Native|Private 
	// Function /Script/FortniteUI.AthenaSpectatorPlayerListScreenBase.ClearPlayers
	// void ClearPlayers();                                                                                                     // [0x95cae64] Final|Native|Private 
};

/// Class /Script/FortniteUI.FortReplayBase
/// Size: 0x0008 (0x000328 - 0x000330)
class UFortReplayBase : public UFortHUDElementWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 816;

public:
	CMember(UFortReplayContext*)                       ReplayContext                                               OFFSET(get<T>, {0x328, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortReplayBase.SetReplayContext
	// void SetReplayContext(UFortReplayContext* InReplayContext);                                                              // [0x95cdf64] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortReplayBase.OnTimelineRangeChanged
	// void OnTimelineRangeChanged(float StartTime, float EndTime);                                                             // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.FortReplayBase.OnReplayPausedChanged
	// void OnReplayPausedChanged(bool bIsPaused);                                                                              // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.FortReplayBase.OnPlaybackTimeChanged
	// void OnPlaybackTimeChanged(float NowTime);                                                                               // [0x1d9241c] Event|Public|BlueprintEvent 
};

/// Class /Script/FortniteUI.FortReplayBrowserRenameDialog
/// Size: 0x0038 (0x000400 - 0x000438)
class UFortReplayBrowserRenameDialog : public UCommonActivatableWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1080;

public:
	DMember(int32_t)                                   MaxReplayNameLength                                         OFFSET(get<int32_t>, {0x400, 4, 0, 0})
	CMember(UEditableText*)                            TextBox_Name                                                OFFSET(get<T>, {0x408, 8, 0, 0})
	CMember(UCommonButtonLegacy*)                      Button_Confirm                                              OFFSET(get<T>, {0x410, 8, 0, 0})
	CMember(UCommonButtonLegacy*)                      Button_Decline                                              OFFSET(get<T>, {0x418, 8, 0, 0})
	CMember(UCommonButtonLegacy*)                      Button_TapToClose                                           OFFSET(get<T>, {0x420, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortReplayBrowserRenameDialog.HandleTextCommitted
	// void HandleTextCommitted(FText& Text, TEnumAsByte<ETextCommit> CommitMethod);                                            // [0x95cc8b0] Final|Native|Private|HasOutParms 
	// Function /Script/FortniteUI.FortReplayBrowserRenameDialog.HandleTextChanged
	// void HandleTextChanged(FText& Text);                                                                                     // [0x95cc778] Final|Native|Private|HasOutParms 
};

/// Class /Script/FortniteUI.FortReplayGoToTimeDialogue
/// Size: 0x0030 (0x000538 - 0x000568)
class UFortReplayGoToTimeDialogue : public UCommonActivatablePanelLegacy
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1384;

public:
	CMember(UEditableText*)                            EditableText_GoToSeconds                                    OFFSET(get<T>, {0x538, 8, 0, 0})
	CMember(UCommonButtonLegacy*)                      Button_Confirm                                              OFFSET(get<T>, {0x540, 8, 0, 0})
	CMember(UCommonButtonLegacy*)                      Button_Close                                                OFFSET(get<T>, {0x548, 8, 0, 0})
	CMember(UTextBlock*)                               Text_HowTo                                                  OFFSET(get<T>, {0x550, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortReplayGoToTimeDialogue.HandleTextCommitted
	// void HandleTextCommitted(FText& Text, TEnumAsByte<ETextCommit> CommitMethod);                                            // [0x95cca10] Final|Native|Private|HasOutParms 
	// Function /Script/FortniteUI.FortReplayGoToTimeDialogue.HandleTextChanged
	// void HandleTextChanged(FText& Text);                                                                                     // [0x95cc814] Final|Native|Private|HasOutParms 
	// Function /Script/FortniteUI.FortReplayGoToTimeDialogue.HandleReplayTimelineChanged
	// void HandleReplayTimelineChanged(float StartTime, float EndTime);                                                        // [0x95cc53c] Final|Native|Private 
};

/// Class /Script/FortniteUI.FortReplayTimelineMarker
/// Size: 0x0090 (0x0014E0 - 0x001570)
class UFortReplayTimelineMarker : public UCommonButtonLegacy
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 5488;

public:
	CMember(TWeakObjectPtr<UObject*>)                  MarkerIcons                                                 OFFSET(get<T>, {0x14E0, 128, 0, 0})
	CMember(UCommonLazyImage*)                         LazyImage_MarkerIcon                                        OFFSET(get<T>, {0x1560, 8, 0, 0})
};

/// Class /Script/FortniteUI.FortTimelineBase
/// Size: 0x0058 (0x000400 - 0x000458)
class UFortTimelineBase : public UCommonActivatableWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1112;

public:
	SMember(FDataTableRowHandle)                       ConfirmActionRowHandle                                      OFFSET(getStruct<T>, {0x400, 16, 0, 0})
	SMember(FDataTableRowHandle)                       CancelActionRowHandle                                       OFFSET(getStruct<T>, {0x410, 16, 0, 0})
	CMember(UClass*)                                   TimelineMarkerClass                                         OFFSET(get<T>, {0x420, 8, 0, 0})
	CMember(USlider*)                                  Slider_Gamepad                                              OFFSET(get<T>, {0x428, 8, 0, 0})
	CMember(UProgressBar*)                             ProgressBar_TimeElapsed                                     OFFSET(get<T>, {0x430, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_CurrentTime                                            OFFSET(get<T>, {0x438, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_EndTime                                                OFFSET(get<T>, {0x440, 8, 0, 0})
	CMember(UCanvasPanel*)                             CanvasPanel_Markers                                         OFFSET(get<T>, {0x448, 8, 0, 0})
	CMember(UOverlay*)                                 Overlay_ProgressBar                                         OFFSET(get<T>, {0x450, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortTimelineBase.HandleReplayTimelineMarkerAdded
	// void HandleReplayTimelineMarkerAdded(EFortReplayEventType EventType, float RelativeTime, int32_t EventIndex);            // [0x1d37a6c] Final|Native|Private 
	// Function /Script/FortniteUI.FortTimelineBase.HandleReplayTimelineChanged
	// void HandleReplayTimelineChanged(float StartTime, float EndTime);                                                        // [0x95cc600] Final|Native|Private 
	// Function /Script/FortniteUI.FortTimelineBase.HandleReplayTimeChanged
	// void HandleReplayTimeChanged(float ReplayTime);                                                                          // [0x1294478] Final|Native|Private 
	// Function /Script/FortniteUI.FortTimelineBase.HandleReplayHudVisibilityChanged
	// void HandleReplayHudVisibilityChanged(EHudVisibilityState VisibilityState);                                              // [0x95cc4bc] Final|Native|Private 
};

/// Class /Script/FortniteUI.FortResourceFeed
/// Size: 0x0070 (0x000328 - 0x000398)
class UFortResourceFeed : public UFortHUDElementWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 920;

public:
	DMember(float)                                     ResourceGainedTime                                          OFFSET(get<float>, {0x328, 4, 0, 0})
	CMember(UFortItemDefinition*)                      CurrentItemDefinition                                       OFFSET(get<T>, {0x330, 8, 0, 0})
	CMember(UWidget*)                                  Widget_ResourceCount                                        OFFSET(get<T>, {0x360, 8, 0, 0})
	CMember(UWidget*)                                  Widget_ResourceGained                                       OFFSET(get<T>, {0x368, 8, 0, 0})
	CMember(UWidget*)                                  Widget_Glow                                                 OFFSET(get<T>, {0x370, 8, 0, 0})
	CMember(UFortSimpleWidgetAnimationsPanel*)         Panel_Animations                                            OFFSET(get<T>, {0x378, 8, 0, 0})
	CMember(UImage*)                                   Image_ResourceIcon                                          OFFSET(get<T>, {0x380, 8, 0, 0})
	CMember(UTextBlock*)                               Text_ResourceCount                                          OFFSET(get<T>, {0x388, 8, 0, 0})
	CMember(UTextBlock*)                               Text_ResourceGained                                         OFFSET(get<T>, {0x390, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortResourceFeed.OnWeakpointHit
	// void OnWeakpointHit();                                                                                                   // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortResourceFeed.OnResourceGained
	// void OnResourceGained();                                                                                                 // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortResourceFeed.OnFadeOut
	// void OnFadeOut();                                                                                                        // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortResourceFeed.HandleWeakpointHitFinished
	// void HandleWeakpointHitFinished();                                                                                       // [0x95ccbf0] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.FortResourceFeed.HandleTimedOut
	// bool HandleTimedOut(float InDeltaTime);                                                                                  // [0x95ccb4c] Final|Native|Private 
	// Function /Script/FortniteUI.FortResourceFeed.HandleResourceGainedFinished
	// void HandleResourceGainedFinished();                                                                                     // [0x95cc6c4] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.FortResourceFeed.HandlePlayerVolumeChanged
	// void HandlePlayerVolumeChanged(AFortVolume* Volume);                                                                     // [0x95cc398] Final|Native|Private 
	// Function /Script/FortniteUI.FortResourceFeed.HandleItemPickedUp
	// void HandleItemPickedUp(UFortWorldItem* WorldItem, int32_t Count);                                                       // [0x95cc068] Final|Native|Private 
	// Function /Script/FortniteUI.FortResourceFeed.HandleGamePhaseChanged
	// void HandleGamePhaseChanged();                                                                                           // [0x95cbf54] Final|Native|Private 
	// Function /Script/FortniteUI.FortResourceFeed.HandleFadeOutFinished
	// void HandleFadeOutFinished();                                                                                            // [0x95cbef4] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.FortResourceFeed.HandleDamagedResourceBuilding
	// void HandleDamagedResourceBuilding(ABuildingSMActor* InBuildingSMActor, UFortItem* InItem, bool bDestroyed, bool bJustHitWeakspot); // [0x95cbab4] Final|Native|Private 
	// Function /Script/FortniteUI.FortResourceFeed.HandleDamagedResourceActor
	// void HandleDamagedResourceActor(AActor* InActor, UFortItem* InItem, bool bDestroyed, bool bJustHitWeakspot);             // [0x95cbab4] Final|Native|Private 
};

/// Class /Script/FortniteUI.FortReticle
/// Size: 0x0050 (0x000328 - 0x000378)
class UFortReticle : public UFortHUDElementWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 888;

public:
	CMember(UMaterialInterface*)                       ReticleWeaponCooldownMI                                     OFFSET(get<T>, {0x368, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortReticle.OnWeaponEquipped
	// void OnWeaponEquipped(AFortWeapon* NewWeapon, AFortWeapon* PrevWeapon);                                                  // [0x1aa8720] Final|Native|Private 
	// Function /Script/FortniteUI.FortReticle.OnReticleColorChanged
	// void OnReticleColorChanged();                                                                                            // [0x95cd7f8] Final|Native|Private 
	// Function /Script/FortniteUI.FortReticle.OnPawnSet
	// void OnPawnSet();                                                                                                        // [0x2b5e614] Final|Native|Private 
	// Function /Script/FortniteUI.FortReticle.OnMinigameStateChanged
	// void OnMinigameStateChanged(AFortMinigame* Minigame, EFortMinigameState MinigameState);                                  // [0x95cd5a8] Final|Native|Private 
	// Function /Script/FortniteUI.FortReticle.OnContextualReticleChanged
	// void OnContextualReticleChanged();                                                                                       // [0x2f201f4] Final|Native|Private 
	// Function /Script/FortniteUI.FortReticle.OnActorEnteredVolume
	// void OnActorEnteredVolume(APlayerState* PS, AFortVolume* Volume);                                                        // [0x95cd3f4] Final|Native|Private 
	// Function /Script/FortniteUI.FortReticle.HandleWeaponChanged
	// void HandleWeaponChanged();                                                                                              // [0x95ccc10] Final|Native|Private 
};

/// Class /Script/FortniteUI.FortStWEquippedItemReticle
/// Size: 0x0008 (0x000328 - 0x000330)
class UFortStWEquippedItemReticle : public UFortHUDElementWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 816;

public:
	CMember(TWeakObjectPtr<AFortWeapon*>)              BoundWeapon                                                 OFFSET(get<T>, {0x328, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortStWEquippedItemReticle.OnWeaponTargetingChanged
	// void OnWeaponTargetingChanged(bool bIsTargeting);                                                                        // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortStWEquippedItemReticle.OnWeaponReloadStarted
	// void OnWeaponReloadStarted(float ReloadTime, EFortWeaponReloadType ReloadType);                                          // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortStWEquippedItemReticle.OnWeaponReloadCancelled
	// void OnWeaponReloadCancelled(AFortWeapon* Weapon);                                                                       // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortStWEquippedItemReticle.OnWeaponOverheatValueChanged
	// void OnWeaponOverheatValueChanged(float CurrentValue, float MaxValue, EFortWeaponOverheatState State, bool bIsInCooldown); // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortStWEquippedItemReticle.OnWeaponChanged
	// void OnWeaponChanged(AFortWeapon* NewWeapon);                                                                            // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortStWEquippedItemReticle.OnAmmoChanged
	// void OnAmmoChanged(int32_t MagazineAmmoCount, int32_t TotalRemaining);                                                   // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortStWEquippedItemReticle.HandleWeaponTargetingChanged
	// void HandleWeaponTargetingChanged(bool bIsTargeting);                                                                    // [0x95ccf00] Final|Native|Protected 
	// Function /Script/FortniteUI.FortStWEquippedItemReticle.HandleWeaponReloadStarted
	// void HandleWeaponReloadStarted(float ReloadTime, EFortWeaponReloadType ReloadType);                                      // [0x95cce3c] Final|Native|Protected 
	// Function /Script/FortniteUI.FortStWEquippedItemReticle.HandleWeaponReloadCancelled
	// void HandleWeaponReloadCancelled();                                                                                      // [0x95cce28] Final|Native|Protected 
	// Function /Script/FortniteUI.FortStWEquippedItemReticle.HandleWeaponOverheatValueChanged
	// void HandleWeaponOverheatValueChanged(float CurrentValue, float MaxValue, EFortWeaponOverheatState State, bool bIsInCooldown); // [0x95ccce8] Final|Native|Protected 
	// Function /Script/FortniteUI.FortStWEquippedItemReticle.HandleWeaponChanged
	// void HandleWeaponChanged(AFortWeapon* NewWeapon, AFortWeapon* PrevWeapon);                                               // [0x95ccc24] Final|Native|Protected 
	// Function /Script/FortniteUI.FortStWEquippedItemReticle.HandleAmmoChanged
	// void HandleAmmoChanged(int32_t MagazineAmmoCount, int32_t TotalRemaining);                                               // [0x95cb9f4] Final|Native|Protected 
};

/// Class /Script/FortniteUI.FortRewardInfoButton
/// Size: 0x0020 (0x001490 - 0x0014B0)
class UFortRewardInfoButton : public UCommonButtonBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 5296;

public:
	CMember(UPanelWidget*)                             ItemCardPanel                                               OFFSET(get<T>, {0x1498, 8, 0, 0})
	CMember(EFortItemCardSize)                         ItemCardSize                                                OFFSET(get<T>, {0x14A0, 1, 0, 0})
	DMember(bool)                                      bDisplayAsRewardCard                                        OFFSET(get<bool>, {0x14A1, 1, 0, 0})
	CMember(UFortItem*)                                ItemInstance                                                OFFSET(get<T>, {0x14A8, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortRewardInfoButton.SetShowDescriptionBP
	// void SetShowDescriptionBP(bool bInShowDescription);                                                                      // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortRewardInfoButton.SetShowDescription
	// void SetShowDescription(bool bInShowDescription);                                                                        // [0x95ce2f4] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortRewardInfoButton.SetItemInstanceQuantityPair
	// void SetItemInstanceQuantityPair(FFortItemInstanceQuantityPair& ItemQuantityPair);                                       // [0x95cdb30] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/FortniteUI.FortRewardInfoButton.HandleDifferentItemOrQuantitySetBP
	// void HandleDifferentItemOrQuantitySetBP();                                                                               // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortRewardInfoButton.GetQuantity
	// int32_t GetQuantity();                                                                                                   // [0x95cb8a0] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortRewardInfoButton.GetItemInstance
	// UFortItem* GetItemInstance();                                                                                            // [0x95cb7ac] Final|RequiredAPI|Native|Public|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/FortniteUI.FortRewardInfoWidget
/// Size: 0x0088 (0x0002E8 - 0x000370)
class UFortRewardInfoWidget : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 880;

public:
	CMember(UPanelWidget*)                             RewardListWidget                                            OFFSET(get<T>, {0x2E8, 8, 0, 0})
	SMember(FMargin)                                   RewardWidgetPadding                                         OFFSET(getStruct<T>, {0x2F0, 16, 0, 0})
	CMember(TEnumAsByte<EHorizontalAlignment>)         HorizontalAlignment                                         OFFSET(get<T>, {0x300, 1, 0, 0})
	CMember(TEnumAsByte<EVerticalAlignment>)           VerticalAlignment                                           OFFSET(get<T>, {0x301, 1, 0, 0})
	DMember(bool)                                      bShowDescription                                            OFFSET(get<bool>, {0x302, 1, 0, 0})
	DMember(bool)                                      bAllowItemInteraction                                       OFFSET(get<bool>, {0x303, 1, 0, 0})
	DMember(int32_t)                                   MaxNumRewardsShown                                          OFFSET(get<int32_t>, {0x304, 4, 0, 0})
	CMember(UClass*)                                   OrWidgetType                                                OFFSET(get<T>, {0x308, 8, 0, 0})
	CMember(UClass*)                                   RewardInfoButtonType                                        OFFSET(get<T>, {0x310, 8, 0, 0})
	CMember(UCommonButtonGroupBase*)                   ButtonGroup                                                 OFFSET(get<T>, {0x338, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortRewardInfoWidget.SetRewards
	// void SetRewards(FFortRewardInfo& RewardsIn);                                                                             // [0x95ce10c] Final|RequiredAPI|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/FortniteUI.FortRewardInfoWidget.SetReward
	// void SetReward(FFortItemQuantityPair& RewardIn);                                                                         // [0x95cdfec] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/FortniteUI.FortRewardInfoWidget.SetButtonGroup
	// void SetButtonGroup(UCommonButtonGroupBase* InButtonGroup);                                                              // [0x95cda30] Final|RequiredAPI|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortRewardInfoWidget.ContainsReward
	// bool ContainsReward(FString TemplateIdToCheck);                                                                          // [0x95cae78] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/FortniteUI.FortRewardInfoButton_Legacy
/// Size: 0x0020 (0x0014E0 - 0x001500)
class UFortRewardInfoButton_Legacy : public UCommonButtonLegacy
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 5376;

public:
	CMember(UPanelWidget*)                             ItemCardPanel                                               OFFSET(get<T>, {0x14E8, 8, 0, 0})
	CMember(EFortItemCardSize)                         ItemCardSize                                                OFFSET(get<T>, {0x14F0, 1, 0, 0})
	DMember(bool)                                      bDisplayAsRewardCard                                        OFFSET(get<bool>, {0x14F1, 1, 0, 0})
	CMember(UFortItem*)                                ItemInstance                                                OFFSET(get<T>, {0x14F8, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortRewardInfoButton_Legacy.SetShowDescriptionBP
	// void SetShowDescriptionBP(bool bInShowDescription);                                                                      // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortRewardInfoButton_Legacy.SetShowDescription
	// void SetShowDescription(bool bInShowDescription);                                                                        // [0x95ce374] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortRewardInfoButton_Legacy.SetItemInstanceQuantityPair
	// void SetItemInstanceQuantityPair(FFortItemInstanceQuantityPair& ItemQuantityPair);                                       // [0x95cdbc4] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/FortniteUI.FortRewardInfoButton_Legacy.HandleDifferentItemOrQuantitySetBP
	// void HandleDifferentItemOrQuantitySetBP();                                                                               // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortRewardInfoButton_Legacy.GetQuantity
	// int32_t GetQuantity();                                                                                                   // [0x95cb8b8] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortRewardInfoButton_Legacy.GetItemInstance
	// UFortItem* GetItemInstance();                                                                                            // [0x95cb7c4] Final|RequiredAPI|Native|Public|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/FortniteUI.FortRewardInfoWidget_Legacy
/// Size: 0x0088 (0x0002E8 - 0x000370)
class UFortRewardInfoWidget_Legacy : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 880;

public:
	CMember(UPanelWidget*)                             RewardListWidget                                            OFFSET(get<T>, {0x2E8, 8, 0, 0})
	SMember(FMargin)                                   RewardWidgetPadding                                         OFFSET(getStruct<T>, {0x2F0, 16, 0, 0})
	CMember(TEnumAsByte<EHorizontalAlignment>)         HorizontalAlignment                                         OFFSET(get<T>, {0x300, 1, 0, 0})
	CMember(TEnumAsByte<EVerticalAlignment>)           VerticalAlignment                                           OFFSET(get<T>, {0x301, 1, 0, 0})
	DMember(bool)                                      bShowDescription                                            OFFSET(get<bool>, {0x302, 1, 0, 0})
	DMember(bool)                                      bAllowItemInteraction                                       OFFSET(get<bool>, {0x303, 1, 0, 0})
	DMember(int32_t)                                   MaxNumRewardsShown                                          OFFSET(get<int32_t>, {0x304, 4, 0, 0})
	CMember(UClass*)                                   OrWidgetType                                                OFFSET(get<T>, {0x308, 8, 0, 0})
	CMember(UClass*)                                   RewardInfoButtonType                                        OFFSET(get<T>, {0x310, 8, 0, 0})
	CMember(UCommonButtonGroupLegacy*)                 ButtonGroup                                                 OFFSET(get<T>, {0x338, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortRewardInfoWidget_Legacy.SetRewards
	// void SetRewards(FFortRewardInfo& RewardsIn);                                                                             // [0x95ce200] Final|RequiredAPI|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/FortniteUI.FortRewardInfoWidget_Legacy.SetReward
	// void SetReward(FFortItemQuantityPair& RewardIn);                                                                         // [0x95ce07c] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/FortniteUI.FortRewardInfoWidget_Legacy.SetButtonGroup
	// void SetButtonGroup(UCommonButtonGroupLegacy* InButtonGroup);                                                            // [0x95cda30] Final|RequiredAPI|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortRewardInfoWidget_Legacy.ContainsReward
	// bool ContainsReward(FString TemplateIdToCheck);                                                                          // [0x95cae78] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/FortniteUI.RichTextBlockActionDecorator
/// Size: 0x0010 (0x000028 - 0x000038)
class URichTextBlockActionDecorator : public URichTextBlockDecorator
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 56;

public:
	CMember(URichTextBlock*)                           OwnerWidget                                                 OFFSET(get<T>, {0x28, 8, 0, 0})
	CMember(UDataTable*)                               InputActionTable                                            OFFSET(get<T>, {0x30, 8, 0, 0})
};

/// Class /Script/FortniteUI.CheckTutorialAndLeavePartyActionBase
/// Size: 0x0008 (0x0002E8 - 0x0002F0)
class ACheckTutorialAndLeavePartyActionBase : public AFortScriptedAction
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 752;

public:
	CMember(AFortPlayerController*)                    PlayerController                                            OFFSET(get<T>, {0x2E8, 8, 0, 0})
};

/// Class /Script/FortniteUI.EventCinematicPlaybackAction
/// Size: 0x0028 (0x0002E8 - 0x000310)
class AEventCinematicPlaybackAction : public AFortScriptedAction
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 784;

public:
	CMember(UFortQuestItem*)                           Quest                                                       OFFSET(get<T>, {0x2E8, 8, 0, 0})
	SMember(FName)                                     ObjectiveName                                               OFFSET(getStruct<T>, {0x2F0, 4, 0, 0})
	CMember(AFortPlayerController*)                    Player                                                      OFFSET(get<T>, {0x2F8, 8, 0, 0})
	SMember(FDataTableRowHandle)                       ObjectiveStat                                               OFFSET(getStruct<T>, {0x300, 16, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.EventCinematicPlaybackAction.HandleVideoEnded
	// void HandleVideoEnded();                                                                                                 // [0x95ccbdc] Final|Native|Private 
};

/// Class /Script/FortniteUI.SearchPanel
/// Size: 0x0020 (0x000538 - 0x000558)
class USearchPanel : public UCommonActivatablePanelLegacy
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1368;

public:
	SMember(FMulticastInlineDelegate)                  OnSearchTextChanged                                         OFFSET(getStruct<T>, {0x538, 16, 0, 0})
	CMember(UEditableTextBox*)                         EditableText_Search                                         OFFSET(get<T>, {0x548, 8, 0, 0})
	CMember(UCommonButtonLegacy*)                      Button_TextSearch                                           OFFSET(get<T>, {0x550, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.SearchPanel.HandleSearchButtonClick
	// void HandleSearchButtonClick();                                                                                          // [0x95cc6e4] Final|Native|Private 
	// Function /Script/FortniteUI.SearchPanel.HandleOnSearchTextChanged
	// void HandleOnSearchTextChanged(FText& Text);                                                                             // [0x95cc2e8] Final|Native|Private|HasOutParms 
};

/// Class /Script/FortniteUI.AthenaExclusiveRewardBanner
/// Size: 0x0020 (0x0002E8 - 0x000308)
class UAthenaExclusiveRewardBanner : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 776;

public:
	CMember(UCommonRichTextBlock*)                     RichText_RewardMessage                                      OFFSET(get<T>, {0x2F8, 8, 0, 0})
	CMember(UFortLazyImage*)                           Image_RewardIcon                                            OFFSET(get<T>, {0x300, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.AthenaExclusiveRewardBanner.OnInitBannerIcon
	// void OnInitBannerIcon(UTexture2D* RewardIcon);                                                                           // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaExclusiveRewardBanner.OnInitBanner
	// void OnInitBanner();                                                                                                     // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaExclusiveRewardBanner.OnClearBanner
	// void OnClearBanner();                                                                                                    // [0x1d9241c] Event|Protected|BlueprintEvent 
};

/// Class /Script/FortniteUI.AthenaRewardItemTypeRarityTag
/// Size: 0x0028 (0x0002E8 - 0x000310)
class UAthenaRewardItemTypeRarityTag : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 784;

public:
	SMember(FGameplayTag)                              HideRarityGameplayTag                                       OFFSET(getStruct<T>, {0x2E8, 4, 0, 0})
	CMember(UBorder*)                                  Border_ItemRarity                                           OFFSET(get<T>, {0x2F0, 8, 0, 0})
	CMember(UBorder*)                                  Border_RarityTint                                           OFFSET(get<T>, {0x2F8, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_ItemRarity                                             OFFSET(get<T>, {0x300, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_ItemType                                               OFFSET(get<T>, {0x308, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.AthenaRewardItemTypeRarityTag.OnInitializeRarityWithSeries
	// void OnInitializeRarityWithSeries(UFortItemSeriesDefinition* SeriesData);                                                // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.AthenaRewardItemTypeRarityTag.OnInitializeRarityWithoutSeries
	// void OnInitializeRarityWithoutSeries(FFortRarityItemData RarityData);                                                    // [0x1d9241c] Event|Protected|BlueprintEvent 
};

/// Class /Script/FortniteUI.AthenaSeasonItemRewardIcon
/// Size: 0x0000 (0x0002C0 - 0x0002C0)
class UAthenaSeasonItemRewardIcon : public UUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 704;

public:
};

/// Class /Script/FortniteUI.BattlePassItemChoiceDisplay
/// Size: 0x0038 (0x0002E8 - 0x000320)
class UBattlePassItemChoiceDisplay : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 800;

public:
	CMember(UCommonButtonLegacy*)                      Button_SelectAlter                                          OFFSET(get<T>, {0x2E8, 8, 0, 0})
	CMember(UCommonButtonLegacy*)                      Button_SelectEgo                                            OFFSET(get<T>, {0x2F0, 8, 0, 0})
	CMember(UCommonButtonLegacy*)                      Button_SelectBase                                           OFFSET(get<T>, {0x2F8, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.BattlePassItemChoiceDisplay.OnCosmeticItemChanged
	// void OnCosmeticItemChanged(UAthenaCosmeticItemDefinition* CosmeticItem);                                                 // [0x1d9241c] Event|Protected|BlueprintEvent 
};

/// Class /Script/FortniteUI.BattlePassLeaderboard
/// Size: 0x0018 (0x000400 - 0x000418)
class UBattlePassLeaderboard : public UCommonActivatableWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1048;

public:
	CMember(UCommonTextBlock*)                         Text_SeasonContext                                          OFFSET(get<T>, {0x400, 8, 0, 0})
	CMember(UBattlePassLeaderboardListView*)           ListView_Leaderboard                                        OFFSET(get<T>, {0x408, 8, 0, 0})
	CMember(UCommonButtonLegacy*)                      Button_Close                                                OFFSET(get<T>, {0x410, 8, 0, 0})
};

/// Class /Script/FortniteUI.BattlePassLeaderboardListEntry
/// Size: 0x0020 (0x0002E8 - 0x000308)
class UBattlePassLeaderboardListEntry : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 776;

public:
	CMember(URichTextBlock*)                           RichText_DisplayName                                        OFFSET(get<T>, {0x2F0, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_Level                                                  OFFSET(get<T>, {0x2F8, 8, 0, 0})
	DMember(bool)                                      bIsEntry                                                    OFFSET(get<bool>, {0x300, 1, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.BattlePassLeaderboardListEntry.UpdateEntryVisibility
	// void UpdateEntryVisibility();                                                                                            // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.BattlePassLeaderboardListEntry.OnEntryInitialized
	// void OnEntryInitialized(int32_t Rank, bool bIsLocalPlayer);                                                              // [0x1d9241c] Event|Protected|BlueprintEvent 
};

/// Class /Script/FortniteUI.BattlePassLeaderboardListView
/// Size: 0x0110 (0x000298 - 0x0003A8)
class UBattlePassLeaderboardListView : public UListViewBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 936;

public:
	DMember(float)                                     FirstEntrySpacing                                           OFFSET(get<float>, {0x380, 4, 0, 0})
	DMember(float)                                     EntrySpacing                                                OFFSET(get<float>, {0x384, 4, 0, 0})
};

/// Class /Script/FortniteUI.BattlePassListViewScreen
/// Size: 0x00A8 (0x0002E8 - 0x000390)
class UBattlePassListViewScreen : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 912;

public:
	CMember(UClass*)                                   FriendLeaderboardClass                                      OFFSET(get<T>, {0x2E8, 8, 0, 0})
	CMember(UBattlePassScreenListView*)                ListView_Rewards                                            OFFSET(get<T>, {0x2F0, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_SocialUserRightCounter                                 OFFSET(get<T>, {0x2F8, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_SocialUserLeftCounter                                  OFFSET(get<T>, {0x300, 8, 0, 0})
	CMember(UAthenaSeasonItemDefinition*)              CachedSeasonData                                            OFFSET(get<T>, {0x308, 8, 0, 0})
	CMember(UAthenaSeasonItemData_Level*)              CachedSeasonData_Level                                      OFFSET(get<T>, {0x310, 8, 0, 0})
	CMember(TArray<FBattlePassRewardInfo>)             AllActiveSeasonRewards                                      OFFSET(get<T>, {0x318, 16, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.BattlePassListViewScreen.OnHandleRotateReward
	// void OnHandleRotateReward();                                                                                             // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.BattlePassListViewScreen.OnHandleFriendLeaderboard
	// void OnHandleFriendLeaderboard();                                                                                        // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.BattlePassListViewScreen.HandleOnUpdatedVisibleFriendCount
	// void HandleOnUpdatedVisibleFriendCount(int32_t LeftFriendCount, int32_t RightFriendCount);                               // [0x1d9241c] Event|Protected|BlueprintEvent 
};

/// Class /Script/FortniteUI.BattlePassNavigatorTabButton
/// Size: 0x0020 (0x0014E0 - 0x001500)
class UBattlePassNavigatorTabButton : public UCommonButtonLegacy
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 5376;

public:
	CMember(UFortBangWrapper_NUI*)                     BangWrapper_Seen                                            OFFSET(get<T>, {0x14E0, 8, 0, 0})
	CMember(UCommonLazyImage*)                         LazyImage_Icon                                              OFFSET(get<T>, {0x14E8, 8, 0, 0})
	SMember(FVector2D)                                 ImageSize_Mobile                                            OFFSET(getStruct<T>, {0x14F0, 16, 0, 0})
};

/// Class /Script/FortniteUI.BattlePassNavigator
/// Size: 0x00A0 (0x0002E8 - 0x000388)
class UBattlePassNavigator : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 904;

public:
	CMember(TArray<FTrackCategoryUI>)                  CreatedTabs                                                 OFFSET(get<T>, {0x300, 16, 0, 0})
	CMember(UAthenaSeasonItemDefinition*)              SeasonData                                                  OFFSET(get<T>, {0x310, 8, 0, 0})
	CMember(UAthenaSeasonItemData_Level*)              SeasonData_Level                                            OFFSET(get<T>, {0x318, 8, 0, 0})
	SMember(FDataTableRowHandle)                       NextTabInputAction                                          OFFSET(getStruct<T>, {0x328, 16, 0, 0})
	SMember(FDataTableRowHandle)                       PreviousTabInputAction                                      OFFSET(getStruct<T>, {0x338, 16, 0, 0})
	CMember(UCommonButtonGroupLegacy*)                 EntryBoxButtonGroup                                         OFFSET(get<T>, {0x348, 8, 0, 0})
	CMember(UDynamicEntryBox*)                         DynamicEntryBox_Categories                                  OFFSET(get<T>, {0x350, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_SeasonNumber                                           OFFSET(get<T>, {0x358, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_CategoryName                                           OFFSET(get<T>, {0x360, 8, 0, 0})
	CMember(TArray<int32_t>)                           ViewedPages                                                 OFFSET(get<T>, {0x368, 16, 0, 0})
	SMember(FString)                                   CachedCategoryName                                          OFFSET(getStruct<T>, {0x378, 16, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.BattlePassNavigator.OnTabChanged
	// void OnTabChanged(bool bIsForwardChange);                                                                                // [0x1d9241c] Event|Protected|BlueprintEvent 
};

/// Class /Script/FortniteUI.BattlePassRewardChallenges
/// Size: 0x00C0 (0x0002E8 - 0x0003A8)
class UBattlePassRewardChallenges : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 936;

public:
	SMember(FText)                                     BuyBattlePassText                                           OFFSET(getStruct<T>, {0x2E8, 24, 0, 0})
	SMember(FText)                                     DefaultChallengesTitle                                      OFFSET(getStruct<T>, {0x300, 24, 0, 0})
	SMember(FText)                                     UnlocksInXDaysTextFormat                                    OFFSET(getStruct<T>, {0x318, 24, 0, 0})
	SMember(FText)                                     UnlocksInXHoursTextFormat                                   OFFSET(getStruct<T>, {0x330, 24, 0, 0})
	SMember(FText)                                     UnlocksSoonText                                             OFFSET(getStruct<T>, {0x348, 24, 0, 0})
	SMember(FText)                                     HiddenChallengeText                                         OFFSET(getStruct<T>, {0x360, 24, 0, 0})
	CMember(UCommonTextBlock*)                         Text_PrerequisitesTitle                                     OFFSET(get<T>, {0x380, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_ChallengesTitle                                        OFFSET(get<T>, {0x388, 8, 0, 0})
	CMember(UDynamicEntryBox*)                         EntryBox_Prerequisites                                      OFFSET(get<T>, {0x390, 8, 0, 0})
	CMember(UDynamicEntryBox*)                         EntryBox_Challenges                                         OFFSET(get<T>, {0x398, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_UnlocksIn                                              OFFSET(get<T>, {0x3A0, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.BattlePassRewardChallenges.OnSetChallengesSwitcher
	// void OnSetChallengesSwitcher(bool bShowChallenges);                                                                      // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.BattlePassRewardChallenges.OnInitPrerequisites
	// void OnInitPrerequisites();                                                                                              // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.BattlePassRewardChallenges.OnInitChallenges
	// void OnInitChallenges(FText& ChallengesTitle);                                                                           // [0x1d9241c] Event|Protected|HasOutParms|BlueprintEvent 
	// Function /Script/FortniteUI.BattlePassRewardChallenges.OnClearEntries
	// void OnClearEntries();                                                                                                   // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.BattlePassRewardChallenges.OnAllChalengesCompleted
	// void OnAllChalengesCompleted();                                                                                          // [0x1d9241c] Event|Protected|BlueprintEvent 
};

/// Class /Script/FortniteUI.BattlePassRewardChallengesEntry
/// Size: 0x0020 (0x0002E8 - 0x000308)
class UBattlePassRewardChallengesEntry : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 776;

public:
	CMember(UCommonTextBlock*)                         Text_ObjectiveDescription                                   OFFSET(get<T>, {0x2E8, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_ObjectivesCompleted                                    OFFSET(get<T>, {0x2F0, 8, 0, 0})
	CMember(UProgressBar*)                             ProgressBar_ObjectivesCompleted                             OFFSET(get<T>, {0x2F8, 8, 0, 0})
	CMember(UFortLazyImage*)                           Image_CompletedObjective                                    OFFSET(get<T>, {0x300, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.BattlePassRewardChallengesEntry.OnResetChallenge
	// void OnResetChallenge();                                                                                                 // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.BattlePassRewardChallengesEntry.OnChallengeComplete
	// void OnChallengeComplete();                                                                                              // [0x1d9241c] Event|Protected|BlueprintEvent 
};

/// Class /Script/FortniteUI.BattlePassRewardViewBase
/// Size: 0x0030 (0x0002E8 - 0x000318)
class UBattlePassRewardViewBase : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 792;

public:
};

/// Class /Script/FortniteUI.BattlePassRewardPagedTrack
/// Size: 0x0090 (0x000318 - 0x0003A8)
class UBattlePassRewardPagedTrack : public UBattlePassRewardViewBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 936;

public:
	DMember(float)                                     UpdateItemCardsDelay                                        OFFSET(get<float>, {0x318, 4, 0, 0})
	CMember(TArray<UCommonButtonLegacy*>)              Pips                                                        OFFSET(get<T>, {0x320, 16, 0, 0})
	DMember(int32_t)                                   LastPageIndex                                               OFFSET(get<int32_t>, {0x330, 4, 0, 0})
	DMember(int32_t)                                   PageIndex                                                   OFFSET(get<int32_t>, {0x334, 4, 0, 0})
	DMember(int32_t)                                   PagesHidden                                                 OFFSET(get<int32_t>, {0x338, 4, 0, 0})
	DMember(int32_t)                                   LocalFocusedIndex                                           OFFSET(get<int32_t>, {0x33C, 4, 0, 0})
	CMember(UFortBattlePassReward*)                    FocusReward                                                 OFFSET(get<T>, {0x348, 8, 0, 0})
	CMember(UFortBattlePassReward*)                    DefaultFocusReward                                          OFFSET(get<T>, {0x350, 8, 0, 0})
	CMember(TArray<FBattlePassPageData>)               PageData                                                    OFFSET(get<T>, {0x358, 16, 0, 0})
	SMember(FTimerHandle)                              UpdateItemCardsHandle                                       OFFSET(getStruct<T>, {0x368, 8, 0, 0})
	CMember(UDynamicEntryBox*)                         EntryBox_Rewards                                            OFFSET(get<T>, {0x370, 8, 0, 0})
	CMember(UCommonButtonLegacy*)                      Button_NextPage                                             OFFSET(get<T>, {0x378, 8, 0, 0})
	CMember(UCommonButtonLegacy*)                      Button_PreviousPage                                         OFFSET(get<T>, {0x380, 8, 0, 0})
	CMember(UDynamicEntryBox*)                         EntryBox_Pips                                               OFFSET(get<T>, {0x388, 8, 0, 0})
	CMember(UCommonRichTextBlock*)                     Text_PageNumbers                                            OFFSET(get<T>, {0x390, 8, 0, 0})
	CMember(UCommonButtonGroupLegacy*)                 ButtonGroup_Pips                                            OFFSET(get<T>, {0x398, 8, 0, 0})
	CMember(UFortSwipePanel*)                          SwipePanel_ChangePage                                       OFFSET(get<T>, {0x3A0, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.BattlePassRewardPagedTrack.OnPageChanged
	// void OnPageChanged(bool bIsForward);                                                                                     // [0x1d9241c] Event|Protected|BlueprintEvent 
};

/// Class /Script/FortniteUI.BattlePassScreenBase
/// Size: 0x01C0 (0x000720 - 0x0008E0)
class UBattlePassScreenBase : public UFortItemPreviewScreen
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 2272;

public:
	DMember(float)                                     BackgroundTransitionTimerDelay                              OFFSET(get<float>, {0x720, 4, 0, 0})
	SMember(FDataTableRowHandle)                       RefundGiftToken                                             OFFSET(getStruct<T>, {0x728, 16, 0, 0})
	CMember(TWeakObjectPtr<UClass*>)                   SeasonLevelPurchaseScreenClass                              OFFSET(get<T>, {0x740, 32, 0, 0})
	CMember(TWeakObjectPtr<UClass*>)                   SeasonAboutScreenClass                                      OFFSET(get<T>, {0x760, 32, 0, 0})
	SMember(FGameplayTagContainer)                     WrapPreviewExcludedTags                                     OFFSET(getStruct<T>, {0x780, 32, 0, 0})
	CMember(EBattlePassView)                           CurrentView                                                 OFFSET(get<T>, {0x7A0, 1, 0, 0})
	CMember(UAthenaSeasonItemDefinition*)              SeasonData                                                  OFFSET(get<T>, {0x7A8, 8, 0, 0})
	CMember(AFortItemPreviewWorld*)                    CachedVaultWorld                                            OFFSET(get<T>, {0x7B0, 8, 0, 0})
	CMember(UFortAccountItemDefinition*)               LastViewedItem                                              OFFSET(get<T>, {0x7B8, 8, 0, 0})
	DMember(bool)                                      bShouldShowAboutModalInNewSeason                            OFFSET(get<bool>, {0x895, 1, 0, 0})
	CMember(TWeakObjectPtr<UClass*>)                   SeasonMovieWidgetClass                                      OFFSET(get<T>, {0x8B8, 32, 0, 0})
	CMember(UFortStreamMediaSource*)                   VideoStream_Source                                          OFFSET(get<T>, {0x8D8, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.BattlePassScreenBase.ShouldPlayBPVideo
	// bool ShouldPlayBPVideo(bool bAllowUpdate);                                                                               // [0x95f0840] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.BattlePassScreenBase.OnViewReward
	// void OnViewReward(FFortRarityItemData Rarity, bool bNoReward, UFortItemDefinition* RewardItem);                          // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.BattlePassScreenBase.OnVariantUpdate
	// void OnVariantUpdate(int32_t CurrentIndex, int32_t TotalNumVariants);                                                    // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.BattlePassScreenBase.OnSetPurchasedAnnualPass
	// void OnSetPurchasedAnnualPass(bool bIsPurchased);                                                                        // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.BattlePassScreenBase.OnSetDifferentBPText
	// void OnSetDifferentBPText();                                                                                             // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.BattlePassScreenBase.OnRequestViewRewardComplete
	// void OnRequestViewRewardComplete();                                                                                      // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.BattlePassScreenBase.OnRequestViewReward
	// void OnRequestViewReward();                                                                                              // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.BattlePassScreenBase.OnNoCurrentSeason
	// void OnNoCurrentSeason();                                                                                                // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.BattlePassScreenBase.OnItemEquipped
	// void OnItemEquipped(bool bSuccess);                                                                                      // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.BattlePassScreenBase.OnBattlePassViewChanged
	// void OnBattlePassViewChanged(EBattlePassView NewView);                                                                   // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.BattlePassScreenBase.IsCurrentRewardOwned
	// bool IsCurrentRewardOwned();                                                                                             // [0x95efa30] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.BattlePassScreenBase.IsCurrentRewardEquipped
	// bool IsCurrentRewardEquipped();                                                                                          // [0x95ef9d8] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.BattlePassScreenBase.GetNumberOfRewardsToPurchase
	// int32_t GetNumberOfRewardsToPurchase();                                                                                  // [0x95ef6d4] Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.BattlePassScreenBase.EquipCurrentReward
	// void EquipCurrentReward();                                                                                               // [0x95ef340] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.BattlePassScreenBase.CanEquipCurrentReward
	// bool CanEquipCurrentReward();                                                                                            // [0x95eddc8] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/FortniteUI.FortBattlePassRewardEntry
/// Size: 0x0030 (0x0014E0 - 0x001510)
class UFortBattlePassRewardEntry : public UCommonButtonLegacy
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 5392;

public:
	CMember(UCommonTextBlock*)                         Text_SocialUserName                                         OFFSET(get<T>, {0x14E8, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortBattlePassRewardEntry.SetSocialPlayerProgress
	// void SetSocialPlayerProgress(float Progress);                                                                            // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortBattlePassRewardEntry.OnSetRotatingReward
	// void OnSetRotatingReward(UFortItem* InReward, bool bHasAdditionalStylesToDisplay, TWeakObjectPtr<UTexture2D*>& RewardTexture, bool bIsFreeItem, bool bOwnsBattlePass, int32_t SeasonLevel); // [0x1d9241c] Event|Protected|HasOutParms|BlueprintEvent 
	// Function /Script/FortniteUI.FortBattlePassRewardEntry.OnSetReward
	// void OnSetReward(UFortItem* InReward, int32_t TierLevel, float TierProgress, bool bIsLastEntry, bool bHasAdditionalStylesToDisplay, TWeakObjectPtr<UTexture2D*>& RewardTexture, bool bIsFreeItem, bool bOwnsBattlePass, int32_t SeasonLevel, bool bIsFirstEntry); // [0x1d9241c] Event|Protected|HasOutParms|BlueprintEvent 
	// Function /Script/FortniteUI.FortBattlePassRewardEntry.OnRotateReward
	// void OnRotateReward(int32_t Index);                                                                                      // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortBattlePassRewardEntry.OnLoadSocialIcon
	// void OnLoadSocialIcon(bool bSuccess, UTexture2D* Texture);                                                               // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortBattlePassRewardEntry.OnFadeOutSocialUserComplete
	// void OnFadeOutSocialUserComplete();                                                                                      // [0x95f0734] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.FortBattlePassRewardEntry.FadeOutSocialUser
	// void FadeOutSocialUser(bool bCallback);                                                                                  // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortBattlePassRewardEntry.FadeInSocialUser
	// void FadeInSocialUser();                                                                                                 // [0x1d9241c] Event|Protected|BlueprintEvent 
};

/// Class /Script/FortniteUI.BattlePassScreenListView
/// Size: 0x0118 (0x000298 - 0x0003B0)
class UBattlePassScreenListView : public UListViewBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 944;

public:
	DMember(float)                                     StartSpacing                                                OFFSET(get<float>, {0x3A4, 4, 0, 0})
	DMember(float)                                     EndSpacing                                                  OFFSET(get<float>, {0x3A8, 4, 0, 0})
	DMember(float)                                     CycleSocialPlayerRate                                       OFFSET(get<float>, {0x3AC, 4, 0, 0})
};

/// Class /Script/FortniteUI.BattlePassPreviewDisplayData
/// Size: 0x0018 (0x000030 - 0x000048)
class UBattlePassPreviewDisplayData : public UDataAsset
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 72;

public:
	CMember(UMaterialInstance*)                        CurrencyMaterialInstance                                    OFFSET(get<T>, {0x30, 8, 0, 0})
	CMember(TArray<FBattlePassCharacterPreviewDisplayData>) CharacterPreviewDisplayData                            OFFSET(get<T>, {0x38, 16, 0, 0})
};

/// Class /Script/FortniteUI.BattlePassScreenPurchaseButton
/// Size: 0x0040 (0x0014E0 - 0x001520)
class UBattlePassScreenPurchaseButton : public UCommonButtonLegacy
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 5408;

public:
	CMember(UCommonTextBlock*)                         Text_FinalCost                                              OFFSET(get<T>, {0x14F0, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_PurchaseTitle                                          OFFSET(get<T>, {0x14F8, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_PurchaseSubtitle                                       OFFSET(get<T>, {0x1500, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_OriginalCost                                           OFFSET(get<T>, {0x1508, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_DiscountedPercentage                                   OFFSET(get<T>, {0x1510, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.BattlePassScreenPurchaseButton.OnSetData
	// void OnSetData(EBattlePassPurchaseButtonLayout LayoutType);                                                              // [0x1d9241c] Event|Protected|BlueprintEvent 
};

/// Class /Script/FortniteUI.BattlePassScreenPreviewRewardWidget
/// Size: 0x0030 (0x0014E0 - 0x001510)
class UBattlePassScreenPreviewRewardWidget : public UCommonButtonLegacy
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 5392;

public:
	CMember(UCommonTextBlock*)                         Text_RewardName                                             OFFSET(get<T>, {0x14E0, 8, 0, 0})
	CMember(UFortLazyImage*)                           Image_Reward                                                OFFSET(get<T>, {0x14E8, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_RewardLevel                                            OFFSET(get<T>, {0x14F0, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_Currency                                               OFFSET(get<T>, {0x14F8, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_AdditionalCurrency                                     OFFSET(get<T>, {0x1500, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.BattlePassScreenPreviewRewardWidget.OnSetDataForCurrency
	// void OnSetDataForCurrency(float LayoutPosition);                                                                         // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.BattlePassScreenPreviewRewardWidget.OnSetDataForCharacter
	// void OnSetDataForCharacter(bool bIsReadyToUnlock, float LayoutPosition);                                                 // [0x1d9241c] Event|Protected|BlueprintEvent 
};

/// Class /Script/FortniteUI.BattlePassScreenPreview
/// Size: 0x0170 (0x0002E8 - 0x000458)
class UBattlePassScreenPreview : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1112;

public:
	CMember(UBattlePassScreenPreviewRewardWidget*)     Character_Widget1                                           OFFSET(get<T>, {0x2E8, 8, 0, 0})
	CMember(UBattlePassScreenPreviewRewardWidget*)     Character_Widget2                                           OFFSET(get<T>, {0x2F0, 8, 0, 0})
	CMember(UBattlePassScreenPreviewRewardWidget*)     Character_Widget3                                           OFFSET(get<T>, {0x2F8, 8, 0, 0})
	CMember(UBattlePassScreenPreviewRewardWidget*)     Character_Widget4                                           OFFSET(get<T>, {0x300, 8, 0, 0})
	CMember(UBattlePassScreenPreviewRewardWidget*)     Character_Widget5                                           OFFSET(get<T>, {0x308, 8, 0, 0})
	CMember(UBattlePassScreenPreviewRewardWidget*)     Character_Widget6                                           OFFSET(get<T>, {0x310, 8, 0, 0})
	CMember(UBattlePassScreenPreviewRewardWidget*)     Character_Widget7                                           OFFSET(get<T>, {0x318, 8, 0, 0})
	CMember(UBattlePassScreenPreviewRewardWidget*)     Currency_Widget                                             OFFSET(get<T>, {0x320, 8, 0, 0})
	CMember(UBattlePassScreenPurchaseButton*)          Button_PurchaseBattlepass                                   OFFSET(get<T>, {0x328, 8, 0, 0})
	CMember(UBattlePassScreenPurchaseButton*)          Button_PurchaseBattlePassBundle                             OFFSET(get<T>, {0x330, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_InstantUnlockTotalRewardCount                          OFFSET(get<T>, {0x338, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_InstantUnlockSpecificSummary                           OFFSET(get<T>, {0x340, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_InstantAdditionalRewards                               OFFSET(get<T>, {0x348, 8, 0, 0})
	CMember(UBattlePassVBuckSummary*)                  Widget_VBuckSummary                                         OFFSET(get<T>, {0x350, 8, 0, 0})
	CMember(TArray<UBattlePassScreenPreviewRewardWidget*>) CharacterWidgets                                        OFFSET(get<T>, {0x388, 16, 0, 0})
	SMember(FPreviewUnlockData)                        PreviewUnlockData                                           OFFSET(getStruct<T>, {0x398, 176, 0, 0})
	CMember(UBattlePassPreviewDisplayData*)            PreviewDisplayData                                          OFFSET(get<T>, {0x448, 8, 0, 0})
	DMember(float)                                     PreviewCycleRate                                            OFFSET(get<float>, {0x450, 4, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.BattlePassScreenPreview.OnInitData
	// void OnInitData(FPreviewUnlockData& Data, UFortItem* SinglePreviewCycleReward, bool bReadyToUnlock, int32_t LevelUnlocked, bool bPurchasedAnnualPass); // [0x1d9241c] Event|Protected|HasOutParms|BlueprintEvent 
	// Function /Script/FortniteUI.BattlePassScreenPreview.OnCyclePreviewReward
	// void OnCyclePreviewReward(UFortItem* NextReward, bool bReadyToUnlock, int32_t LevelUnlocked);                            // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.BattlePassScreenPreview.HandleOnGainedFocus
	// void HandleOnGainedFocus();                                                                                              // [0x1d9241c] Event|Protected|BlueprintEvent 
};

/// Class /Script/FortniteUI.BattlePassVBuckSummary
/// Size: 0x0010 (0x0002E8 - 0x0002F8)
class UBattlePassVBuckSummary : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 760;

public:
	CMember(UCommonRichTextBlock*)                     Text_TotalEarned                                            OFFSET(get<T>, {0x2E8, 8, 0, 0})
	CMember(UCommonRichTextBlock*)                     Text_TotalToBank                                            OFFSET(get<T>, {0x2F0, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.BattlePassVBuckSummary.OnSetSummary
	// void OnSetSummary();                                                                                                     // [0x1d9241c] Event|Protected|BlueprintEvent 
};

/// Class /Script/FortniteUI.BattlePassViewRewardData
/// Size: 0x0020 (0x000028 - 0x000048)
class UBattlePassViewRewardData : public UObject
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 72;

public:
	CMember(UFortItem*)                                Reward                                                      OFFSET(get<T>, {0x28, 8, 0, 0})
	DMember(bool)                                      bIsFreeItem                                                 OFFSET(get<bool>, {0x30, 1, 0, 0})
	DMember(bool)                                      bIsOwned                                                    OFFSET(get<bool>, {0x31, 1, 0, 0})
	CMember(EBattlePassRewardSource)                   UnlockableSource                                            OFFSET(get<T>, {0x32, 1, 0, 0})
	CMember(UFortItemDefinition*)                      UnlockableSourceItemDef                                     OFFSET(get<T>, {0x38, 8, 0, 0})
	DMember(int32_t)                                   ItemLevel                                                   OFFSET(get<int32_t>, {0x40, 4, 0, 0})
};

/// Class /Script/FortniteUI.BattlePassViewRewardListEntry
/// Size: 0x0020 (0x0002E8 - 0x000308)
class UBattlePassViewRewardListEntry : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 776;

public:
	CMember(UBattlePassViewRewardData*)                Reward                                                      OFFSET(get<T>, {0x2F0, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_TierLevel                                              OFFSET(get<T>, {0x2F8, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.BattlePassViewRewardListEntry.OnStaggerTimeStarted
	// void OnStaggerTimeStarted();                                                                                             // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.BattlePassViewRewardListEntry.OnStaggerTimeElapsed
	// void OnStaggerTimeElapsed();                                                                                             // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.BattlePassViewRewardListEntry.BPSetup
	// void BPSetup(UBattlePassViewRewardData* InReward);                                                                       // [0x1d9241c] Event|Protected|BlueprintEvent 
};

/// Class /Script/FortniteUI.BattlePassViewAllRewardsScreen
/// Size: 0x0058 (0x000720 - 0x000778)
class UBattlePassViewAllRewardsScreen : public UFortItemPreviewScreen
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1912;

public:
	CMember(UFortItem*)                                LastViewedItem                                              OFFSET(get<T>, {0x728, 8, 0, 0})
	CMember(TArray<UBattlePassViewRewardData*>)        AllRewardItems                                              OFFSET(get<T>, {0x730, 16, 0, 0})
	DMember(float)                                     StaggerTime                                                 OFFSET(get<float>, {0x740, 4, 0, 0})
	CMember(UCommonTextBlock*)                         Text_SortLabel                                              OFFSET(get<T>, {0x748, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_ChapterLabel                                           OFFSET(get<T>, {0x750, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_SeasonLabel                                            OFFSET(get<T>, {0x758, 8, 0, 0})
	CMember(UCommonButtonLegacy*)                      Button_CycleSort                                            OFFSET(get<T>, {0x760, 8, 0, 0})
	CMember(UTileView*)                                TileView_Rewards                                            OFFSET(get<T>, {0x768, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.BattlePassViewAllRewardsScreen.OnItemViewed
	// void OnItemViewed(UBattlePassViewRewardData* ItemDisplayed);                                                             // [0x1d9241c] Event|Protected|BlueprintEvent 
};

/// Class /Script/FortniteUI.FortBattlePassReward
/// Size: 0x0070 (0x0014E0 - 0x001550)
class UFortBattlePassReward : public UCommonButtonLegacy
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 5456;

public:
	SMember(FName)                                     ImageParamName                                              OFFSET(getStruct<T>, {0x14F8, 4, 0, 0})
	CMember(UFortLazyImage*)                           Image_RewardIcon                                            OFFSET(get<T>, {0x1500, 8, 0, 0})
	CMember(UImage*)                                   Image_RewardLockedTint                                      OFFSET(get<T>, {0x1508, 8, 0, 0})
	CMember(UImage*)                                   Image_ChaseRewardSpacer                                     OFFSET(get<T>, {0x1510, 8, 0, 0})
	CMember(UImage*)                                   Image_SelectionBorder                                       OFFSET(get<T>, {0x1518, 8, 0, 0})
	CMember(UWidgetSwitcher*)                          Switcher_EarnedRewardState                                  OFFSET(get<T>, {0x1520, 8, 0, 0})
	CMember(UWidgetSwitcher*)                          Switcher_RewardTrackType                                    OFFSET(get<T>, {0x1528, 8, 0, 0})
	CMember(UWidgetSwitcher*)                          Switcher_TrackNumber                                        OFFSET(get<T>, {0x1530, 8, 0, 0})
	CMember(UOverlay*)                                 Overlay_NewTechInfo                                         OFFSET(get<T>, {0x1538, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_FreeLevelNumber                                        OFFSET(get<T>, {0x1540, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_PaidLevelNumber                                        OFFSET(get<T>, {0x1548, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortBattlePassReward.UpdateVisualsToCompletedState
	// void UpdateVisualsToCompletedState();                                                                                    // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.FortBattlePassReward.SetLargeRewardVisuals
	// void SetLargeRewardVisuals();                                                                                            // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.FortBattlePassReward.ResetToDefault
	// void ResetToDefault();                                                                                                   // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortBattlePassReward.OnOverrideIcon
	// void OnOverrideIcon(TWeakObjectPtr<UTexture2D*>& IconOverride);                                                          // [0x1d9241c] Event|Protected|HasOutParms|BlueprintEvent 
	// Function /Script/FortniteUI.FortBattlePassReward.InitForReward
	// void InitForReward(UFortItemDefinition* RewardItem);                                                                     // [0x1d9241c] Event|Public|BlueprintEvent 
};

/// Class /Script/FortniteUI.FortBattlePassVideoAnnotationWidget
/// Size: 0x0058 (0x0002E8 - 0x000340)
class UFortBattlePassVideoAnnotationWidget : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 832;

public:
	CMember(UCurveFloat*)                              IntroOutroCurve                                             OFFSET(get<T>, {0x328, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_ItemSource                                             OFFSET(get<T>, {0x330, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_ItemName                                               OFFSET(get<T>, {0x338, 8, 0, 0})
};

/// Class /Script/FortniteUI.FortBattlePassVideoDisplay
/// Size: 0x00C0 (0x0002C0 - 0x000380)
class UFortBattlePassVideoDisplay : public UCommonVideoPlayer
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 896;

public:
	CMember(UClass*)                                   AnnotationWidgetClass                                       OFFSET(get<T>, {0x2C0, 8, 0, 0})
	CMember(TArray<FFortBattlePassVideoAnnotation>)    VideoAnnotations                                            OFFSET(get<T>, {0x2C8, 16, 0, 0})
};

/// Class /Script/FortniteUI.MotdBattlePassAction
/// Size: 0x0020 (0x000030 - 0x000050)
class UMotdBattlePassAction : public UMotdActionBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 80;

public:
};

/// Class /Script/FortniteUI.FortSeasonPassLevelInfo
/// Size: 0x0038 (0x000028 - 0x000060)
class UFortSeasonPassLevelInfo : public UObject
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 96;

public:
	CMember(AFortPlayerController*)                    FortPC                                                      OFFSET(get<T>, {0x30, 8, 0, 0})
	CMember(UAthenaSeasonItemDefinition*)              SeasonData                                                  OFFSET(get<T>, {0x38, 8, 0, 0})
	CMember(TArray<UFortItem*>)                        FreeRewards                                                 OFFSET(get<T>, {0x40, 16, 0, 0})
	CMember(TArray<UFortItem*>)                        PaidRewards                                                 OFFSET(get<T>, {0x50, 16, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortSeasonPassLevelInfo.IsPaidUnlocked
	// bool IsPaidUnlocked();                                                                                                   // [0x95efa6c] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortSeasonPassLevelInfo.IsPaidClaimed
	// bool IsPaidClaimed();                                                                                                    // [0x95efa6c] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortSeasonPassLevelInfo.IsFreeUnlocked
	// bool IsFreeUnlocked();                                                                                                   // [0x95efa48] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortSeasonPassLevelInfo.IsFreeClaimed
	// bool IsFreeClaimed();                                                                                                    // [0x95efa48] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortSeasonPassLevelInfo.GetSeasonPassMaxLevel
	// int32_t GetSeasonPassMaxLevel();                                                                                         // [0x95ef8c0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortSeasonPassLevelInfo.GetRewardItems
	// TArray<UFortItem*> GetRewardItems(EAthenaSeasonRewardTrack Track);                                                       // [0x95ef6fc] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortSeasonPassLevelInfo.GetNumRewardItems
	// int32_t GetNumRewardItems(EAthenaSeasonRewardTrack Track);                                                               // [0x95ef5f8] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortSeasonPassLevelInfo.GetLevelProgress
	// float GetLevelProgress();                                                                                                // [0x95ef5d0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortSeasonPassLevelInfo.GetLevel
	// int32_t GetLevel();                                                                                                      // [0x601519c] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortSeasonPassLevelInfo.ContainsChaseReward
	// bool ContainsChaseReward(EAthenaSeasonRewardTrack Track);                                                                // [0x95ede20] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/FortniteUI.SeasonPassLevelWidget
/// Size: 0x0018 (0x0002E8 - 0x000300)
class USeasonPassLevelWidget : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 768;

public:
	CMember(UFortSeasonPassLevelInfo*)                 LevelInfo                                                   OFFSET(get<T>, {0x2F8, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.SeasonPassLevelWidget.PlayIntro
	// void PlayIntro();                                                                                                        // [0x1d9241c] Event|Public|BlueprintCallable|BlueprintEvent 
	// Function /Script/FortniteUI.SeasonPassLevelWidget.OnSetup
	// void OnSetup();                                                                                                          // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.SeasonPassLevelWidget.OnNavigateTo
	// void OnNavigateTo();                                                                                                     // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.SeasonPassLevelWidget.OnLockedStatusChanged
	// void OnLockedStatusChanged(bool FreeUnlocked, bool PaidUnlocked);                                                        // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.SeasonPassLevelWidget.OnAttemptClaimFinished
	// void OnAttemptClaimFinished(bool FreeClaimed, bool PaidClaimed);                                                         // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.SeasonPassLevelWidget.GetLevelInfo
	// UFortSeasonPassLevelInfo* GetLevelInfo();                                                                                // [0x931bc0c] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.SeasonPassLevelWidget.AttemptClaim
	// void AttemptClaim();                                                                                                     // [0x95eddb4] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/FortniteUI.SeasonPassLevelPanel
/// Size: 0x0018 (0x000538 - 0x000550)
class USeasonPassLevelPanel : public UCommonActivatablePanelLegacy
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1360;

public:
	CMember(UFortSeasonPassLevelInfo*)                 LevelInfo                                                   OFFSET(get<T>, {0x548, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.SeasonPassLevelPanel.Setup
	// void Setup(UFortSeasonPassLevelInfo* Info);                                                                              // [0x95f079c] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.SeasonPassLevelPanel.OnSetup
	// void OnSetup();                                                                                                          // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.SeasonPassLevelPanel.OnLockedStatusChanged
	// void OnLockedStatusChanged(bool FreeUnlocked, bool PaidUnlocked);                                                        // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.SeasonPassLevelPanel.GetLevelInfo
	// UFortSeasonPassLevelInfo* GetLevelInfo();                                                                                // [0x95ef5b8] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/FortniteUI.SeasonPassPageWidget
/// Size: 0x0018 (0x0002E8 - 0x000300)
class USeasonPassPageWidget : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 768;

public:
};

/// Class /Script/FortniteUI.SeasonRewardsGridWidget
/// Size: 0x0068 (0x000178 - 0x0001E0)
class USeasonRewardsGridWidget : public UWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 480;

public:
	CMember(UClass*)                                   ItemWidgetToCreate                                          OFFSET(get<T>, {0x178, 8, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnItemWidgetCreated                                         OFFSET(getStruct<T>, {0x180, 16, 0, 0})
	SMember(FMargin)                                   ItemPadding                                                 OFFSET(getStruct<T>, {0x190, 16, 0, 0})
	SMember(FMargin)                                   ColumnPadding                                               OFFSET(getStruct<T>, {0x1A0, 16, 0, 0})
	DMember(float)                                     ScrollSpeed                                                 OFFSET(get<float>, {0x1B0, 4, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.SeasonRewardsGridWidget.Populate
	// void Populate();                                                                                                         // [0x95f0788] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/FortniteUI.FortSettingValueScalar
/// Size: 0x0000 (0x000180 - 0x000180)
class UFortSettingValueScalar : public UFortSettingValue
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 384;

public:
};

/// Class /Script/FortniteUI.FortSettingValueScalarDynamic
/// Size: 0x0140 (0x000180 - 0x0002C0)
class UFortSettingValueScalarDynamic : public UFortSettingValueScalar
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 704;

public:
};

/// Class /Script/FortniteUI.FortSettingValueScalarDynamic_SafeZoneValue
/// Size: 0x0000 (0x0002C0 - 0x0002C0)
class UFortSettingValueScalarDynamic_SafeZoneValue : public UFortSettingValueScalarDynamic
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 704;

public:
};

/// Class /Script/FortniteUI.FortSettingAction
/// Size: 0x0050 (0x000180 - 0x0001D0)
class UFortSettingAction : public UFortSetting
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 464;

public:
};

/// Class /Script/FortniteUI.FortSettingAction_SafeZoneEditor
/// Size: 0x0008 (0x0001D0 - 0x0001D8)
class UFortSettingAction_SafeZoneEditor : public UFortSettingAction
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 472;

public:
	CMember(UFortSettingValueScalarDynamic_SafeZoneValue*) SafeZoneValueSetting                                    OFFSET(get<T>, {0x1D0, 8, 0, 0})
};

/// Class /Script/FortniteUI.FortSettingValueDiscreteDynamic_Bool
/// Size: 0x0000 (0x0001E8 - 0x0001E8)
class UFortSettingValueDiscreteDynamic_Bool : public UFortSettingValueDiscreteDynamic
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 488;

public:
};

/// Class /Script/FortniteUI.FortSettingValueDiscreteDynamic_AllowCellularDownload
/// Size: 0x0000 (0x0001E8 - 0x0001E8)
class UFortSettingValueDiscreteDynamic_AllowCellularDownload : public UFortSettingValueDiscreteDynamic_Bool
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 488;

public:
};

/// Class /Script/FortniteUI.FortSettingValueDiscreteDynamic_AudioOutputDevice
/// Size: 0x0050 (0x0001E8 - 0x000238)
class UFortSettingValueDiscreteDynamic_AudioOutputDevice : public UFortSettingValueDiscreteDynamic
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 568;

public:
};

/// Class /Script/FortniteUI.FortSettingValueDiscrete_AllowCrossplay
/// Size: 0x0010 (0x000180 - 0x000190)
class UFortSettingValueDiscrete_AllowCrossplay : public UFortSettingValueDiscrete
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 400;

public:
};

/// Class /Script/FortniteUI.FortSettingValueDiscrete_AndroidStore
/// Size: 0x0010 (0x000180 - 0x000190)
class UFortSettingValueDiscrete_AndroidStore : public UFortSettingValueDiscrete
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 400;

public:
};

/// Class /Script/FortniteUI.FortSettingValueDiscreteSupervised
/// Size: 0x0080 (0x000180 - 0x000200)
class UFortSettingValueDiscreteSupervised : public UFortSettingValueDiscrete
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 512;

public:
};

/// Class /Script/FortniteUI.FortSettingValueDiscrete_AppearOnPublicLeaderBoards
/// Size: 0x0000 (0x000200 - 0x000200)
class UFortSettingValueDiscrete_AppearOnPublicLeaderBoards : public UFortSettingValueDiscreteSupervised
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 512;

public:
};

/// Class /Script/FortniteUI.FortSettingValueDiscrete_AutoMulchMode
/// Size: 0x0020 (0x000180 - 0x0001A0)
class UFortSettingValueDiscrete_AutoMulchMode : public UFortSettingValueDiscrete
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 416;

public:
};

/// Class /Script/FortniteUI.FortSettingValueDiscrete_CanReceiveGifts
/// Size: 0x0000 (0x000200 - 0x000200)
class UFortSettingValueDiscrete_CanReceiveGifts : public UFortSettingValueDiscreteSupervised
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 512;

public:
};

/// Class /Script/FortniteUI.FortSettingValueDiscrete_ControllerHardware
/// Size: 0x0020 (0x000180 - 0x0001A0)
class UFortSettingValueDiscrete_ControllerHardware : public UFortSettingValueDiscrete
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 416;

public:
};

/// Class /Script/FortniteUI.FortSettingValueDiscrete_ControllerPresets
/// Size: 0x0030 (0x000180 - 0x0001B0)
class UFortSettingValueDiscrete_ControllerPresets : public UFortSettingValueDiscrete
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 432;

public:
};

/// Class /Script/FortniteUI.FortSettingValueDiscrete_FortReleaseVersion
/// Size: 0x0028 (0x000180 - 0x0001A8)
class UFortSettingValueDiscrete_FortReleaseVersion : public UFortSettingValueDiscrete
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 424;

public:
};

/// Class /Script/FortniteUI.FortSettingValueDiscrete_FriendInvitePolicy
/// Size: 0x0018 (0x000180 - 0x000198)
class UFortSettingValueDiscrete_FriendInvitePolicy : public UFortSettingValueDiscrete
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 408;

public:
};

/// Class /Script/FortniteUI.FortSettingValueDiscrete_HUDVisibility
/// Size: 0x0058 (0x000180 - 0x0001D8)
class UFortSettingValueDiscrete_HUDVisibility : public UFortSettingValueDiscrete
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 472;

public:
};

/// Class /Script/FortniteUI.FortSettingValueDiscrete_Language
/// Size: 0x0010 (0x000180 - 0x000190)
class UFortSettingValueDiscrete_Language : public UFortSettingValueDiscrete
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 400;

public:
};

/// Class /Script/FortniteUI.FortSettingValueDiscrete_Lfg
/// Size: 0x0018 (0x000180 - 0x000198)
class UFortSettingValueDiscrete_Lfg : public UFortSettingValueDiscrete
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 408;

public:
};

/// Class /Script/FortniteUI.FortSettingValueDiscrete_MobileFPSType
/// Size: 0x0018 (0x000180 - 0x000198)
class UFortSettingValueDiscrete_MobileFPSType : public UFortSettingValueDiscrete
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 408;

public:
};

/// Class /Script/FortniteUI.FortSettingValueDiscrete_MutualFriends
/// Size: 0x0010 (0x000180 - 0x000190)
class UFortSettingValueDiscrete_MutualFriends : public UFortSettingValueDiscrete
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 400;

public:
};

/// Class /Script/FortniteUI.FortSettingValueDiscrete_SocialBool
/// Size: 0x0020 (0x000180 - 0x0001A0)
class UFortSettingValueDiscrete_SocialBool : public UFortSettingValueDiscrete
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 416;

public:
};

/// Class /Script/FortniteUI.FortSettingValueDiscrete_Notifications
/// Size: 0x0010 (0x0001A0 - 0x0001B0)
class UFortSettingValueDiscrete_Notifications : public UFortSettingValueDiscrete_SocialBool
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 432;

public:
};

/// Class /Script/FortniteUI.FortSettingValueDiscrete_OnlineStatus
/// Size: 0x0010 (0x000180 - 0x000190)
class UFortSettingValueDiscrete_OnlineStatus : public UFortSettingValueDiscrete
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 400;

public:
};

/// Class /Script/FortniteUI.FortSettingValueDiscrete_OverallQualityPresets
/// Size: 0x0020 (0x000180 - 0x0001A0)
class UFortSettingValueDiscrete_OverallQualityPresets : public UFortSettingValueDiscrete
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 416;

public:
};

/// Class /Script/FortniteUI.FortSettingValueDiscrete_Participation
/// Size: 0x0010 (0x000180 - 0x000190)
class UFortSettingValueDiscrete_Participation : public UFortSettingValueDiscrete
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 400;

public:
};

/// Class /Script/FortniteUI.FortSettingValueDiscrete_PartyPrivacy
/// Size: 0x0010 (0x000200 - 0x000210)
class UFortSettingValueDiscrete_PartyPrivacy : public UFortSettingValueDiscreteSupervised
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 528;

public:
};

/// Class /Script/FortniteUI.FortSettingValueDiscrete_PartyRiftRequestToJoin
/// Size: 0x0018 (0x000180 - 0x000198)
class UFortSettingValueDiscrete_PartyRiftRequestToJoin : public UFortSettingValueDiscrete
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 408;

public:
};

/// Class /Script/FortniteUI.FortSettingValueDiscrete_ProfileBadges
/// Size: 0x0010 (0x000180 - 0x000190)
class UFortSettingValueDiscrete_ProfileBadges : public UFortSettingValueDiscrete
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 400;

public:
};

/// Class /Script/FortniteUI.FortSettingValueDiscrete_ProfilePrivacy
/// Size: 0x0010 (0x000180 - 0x000190)
class UFortSettingValueDiscrete_ProfilePrivacy : public UFortSettingValueDiscrete
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 400;

public:
};

/// Class /Script/FortniteUI.FortSettingValueDiscrete_ProfileLanguage
/// Size: 0x0000 (0x000190 - 0x000190)
class UFortSettingValueDiscrete_ProfileLanguage : public UFortSettingValueDiscrete_ProfilePrivacy
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 400;

public:
};

/// Class /Script/FortniteUI.FortSettingValueDiscrete_ProfileRegion
/// Size: 0x0000 (0x000190 - 0x000190)
class UFortSettingValueDiscrete_ProfileRegion : public UFortSettingValueDiscrete_ProfilePrivacy
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 400;

public:
};

/// Class /Script/FortniteUI.FortSettingValueDiscrete_Region
/// Size: 0x0020 (0x000180 - 0x0001A0)
class UFortSettingValueDiscrete_Region : public UFortSettingValueDiscrete
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 416;

public:
};

/// Class /Script/FortniteUI.FortSettingValueDiscrete_ReportPerfStats
/// Size: 0x0018 (0x000180 - 0x000198)
class UFortSettingValueDiscrete_ReportPerfStats : public UFortSettingValueDiscrete
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 408;

public:
};

/// Class /Script/FortniteUI.FortSettingValueDiscrete_Resolution
/// Size: 0x00C0 (0x000180 - 0x000240)
class UFortSettingValueDiscrete_Resolution : public UFortSettingValueDiscrete
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 576;

public:
};

/// Class /Script/FortniteUI.FortSettingValueScalarDynamic_Mobile3DResolution
/// Size: 0x0000 (0x0002C0 - 0x0002C0)
class UFortSettingValueScalarDynamic_Mobile3DResolution : public UFortSettingValueScalarDynamic
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 704;

public:
};

/// Class /Script/FortniteUI.FortEnhancedInputSetting
/// Size: 0x0058 (0x000188 - 0x0001E0)
class UFortEnhancedInputSetting : public UFortInputSettingBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 480;

public:
};

/// Class /Script/FortniteUI.FortSettingCollection
/// Size: 0x0010 (0x000180 - 0x000190)
class UFortSettingCollection : public UFortSetting
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 400;

public:
	CMember(TArray<UFortSetting*>)                     Settings                                                    OFFSET(get<T>, {0x180, 16, 0, 0})
};

/// Class /Script/FortniteUI.FortEnhancedInputSettingCollection
/// Size: 0x0018 (0x000190 - 0x0001A8)
class UFortEnhancedInputSettingCollection : public UFortSettingCollection
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 424;

public:
	CMember(TArray<TWeakObjectPtr>)                    InputMappingContexts                                        OFFSET(get<T>, {0x190, 16, 0, 0})
};

/// Class /Script/FortniteUI.FortLegacyInputSettingCollection
/// Size: 0x0010 (0x000190 - 0x0001A0)
class UFortLegacyInputSettingCollection : public UFortSettingCollection
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 416;

public:
};

/// Class /Script/FortniteUI.FortSettingCollectionPage
/// Size: 0x0030 (0x000190 - 0x0001C0)
class UFortSettingCollectionPage : public UFortSettingCollection
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 448;

public:
};

/// Class /Script/FortniteUI.FortSettingControllerInput
/// Size: 0x0028 (0x000180 - 0x0001A8)
class UFortSettingControllerInput : public UFortSettingValue
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 424;

public:
};

/// Class /Script/FortniteUI.FortSettingKeyboardInput
/// Size: 0x00F0 (0x000188 - 0x000278)
class UFortSettingKeyboardInput : public UFortInputSettingBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 632;

public:
};

/// Class /Script/FortniteUI.FortSettingsEditableStateHelper
/// Size: 0x0000 (0x000028 - 0x000028)
class UFortSettingsEditableStateHelper : public UObject
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 40;

public:
};

/// Class /Script/FortniteUI.FortSettingValueDiscreteDynamic_Enum
/// Size: 0x0000 (0x0001E8 - 0x0001E8)
class UFortSettingValueDiscreteDynamic_Enum : public UFortSettingValueDiscreteDynamic
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 488;

public:
};

/// Class /Script/FortniteUI.FortSettingValueDiscreteDynamic_Color
/// Size: 0x0000 (0x0001E8 - 0x0001E8)
class UFortSettingValueDiscreteDynamic_Color : public UFortSettingValueDiscreteDynamic
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 488;

public:
};

/// Class /Script/FortniteUI.FortGameCheatsRegistry
/// Size: 0x0030 (0x0000F8 - 0x000128)
class UFortGameCheatsRegistry : public UFortSettingRegistry
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 296;

public:
	CMember(TArray<FCheatMenuSection>)                 SeasonalSections                                            OFFSET(get<T>, {0xF8, 16, 0, 0})
	CMember(TArray<FCheatMenuSection>)                 AdminSections                                               OFFSET(get<T>, {0x108, 16, 0, 0})
	CMember(TArray<FCheatMenuEntry>)                   LastUsedEntries                                             OFFSET(get<T>, {0x118, 16, 0, 0})
};

/// Class /Script/FortniteUI.FortGameSettingRegistry
/// Size: 0x0078 (0x0000F8 - 0x000170)
class UFortGameSettingRegistry : public UFortSettingRegistry
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 368;

public:
	CMember(UFortSettingCollection*)                   VideoSettings                                               OFFSET(get<T>, {0xF8, 8, 0, 0})
	CMember(UFortSettingCollection*)                   AudioSettings                                               OFFSET(get<T>, {0x100, 8, 0, 0})
	CMember(UFortSettingCollection*)                   GameplaySettings                                            OFFSET(get<T>, {0x108, 8, 0, 0})
	CMember(UFortSettingCollection*)                   MouseAndKeyboardSettings                                    OFFSET(get<T>, {0x110, 8, 0, 0})
	CMember(UFortSettingCollection*)                   MouseAndKeyboardBindings                                    OFFSET(get<T>, {0x118, 8, 0, 0})
	CMember(UFortSettingCollection*)                   ControllerSettings                                          OFFSET(get<T>, {0x120, 8, 0, 0})
	CMember(UFortSettingCollection*)                   ControllerButtonMappingSettings                             OFFSET(get<T>, {0x128, 8, 0, 0})
	CMember(UFortSettingCollection*)                   TouchAndMotionSettings                                      OFFSET(get<T>, {0x130, 8, 0, 0})
	CMember(UFortSettingCollection*)                   MobileWeaponSettings                                        OFFSET(get<T>, {0x138, 8, 0, 0})
	CMember(UFortSettingCollection*)                   HudSettings                                                 OFFSET(get<T>, {0x140, 8, 0, 0})
	CMember(UFortSettingCollection*)                   AccountSettings                                             OFFSET(get<T>, {0x148, 8, 0, 0})
	CMember(UFortSetting*)                             FlickStickEnabledSetting                                    OFFSET(get<T>, {0x150, 8, 0, 0})
	DMember(bool)                                      bEnableColorCalibration                                     OFFSET(get<bool>, {0x158, 1, 0, 0})
	CMember(UFortGameFeature_FortGameRegistryObserver*) GameRegistryObserver                                       OFFSET(get<T>, {0x160, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortGameSettingRegistry.HandleMappingContextRegistrationChanged
	// void HandleMappingContextRegistrationChanged(UInputMappingContext* IMC);                                                 // [0x95f5f2c] Final|Native|Protected 
};

/// Class /Script/FortniteUI.FortGameFeature_FortGameRegistryObserver
/// Size: 0x0010 (0x000028 - 0x000038)
class UFortGameFeature_FortGameRegistryObserver : public UObject
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 56;

public:
};

/// Class /Script/FortniteUI.FortSocialProfileSettingRegistry
/// Size: 0x0000 (0x0000F8 - 0x0000F8)
class UFortSocialProfileSettingRegistry : public UFortSettingRegistry
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 248;

public:
};

/// Class /Script/FortniteUI.FortSafeZoneEditor
/// Size: 0x0048 (0x000538 - 0x000580)
class UFortSafeZoneEditor : public UCommonActivatablePanelLegacy
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1408;

public:
	DMember(bool)                                      bCanCancel                                                  OFFSET(get<bool>, {0x548, 1, 0, 0})
	CMember(UWidgetSwitcher*)                          Switcher_SafeZoneMessage                                    OFFSET(get<T>, {0x558, 8, 0, 0})
	CMember(UCommonRichTextBlock*)                     RichText_Default                                            OFFSET(get<T>, {0x560, 8, 0, 0})
	CMember(UCommonRichTextBlock*)                     RichText_SwitchHandheldWarning                              OFFSET(get<T>, {0x568, 8, 0, 0})
	CMember(UCommonButtonLegacy*)                      Button_Back                                                 OFFSET(get<T>, {0x570, 8, 0, 0})
	CMember(UCommonButtonLegacy*)                      Button_Done                                                 OFFSET(get<T>, {0x578, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortSafeZoneEditor.SetChildSettingReference
	// void SetChildSettingReference(UFortSetting* SettingReference);                                                           // [0x960e0f4] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortSafeZoneEditor.HandleDoneClicked
	// void HandleDoneClicked();                                                                                                // [0x960df28] Final|Native|Private 
	// Function /Script/FortniteUI.FortSafeZoneEditor.HandleBackClicked
	// void HandleBackClicked();                                                                                                // [0x960df14] Final|Native|Private 
};

/// Class /Script/FortniteUI.FortSettingDetailExtension
/// Size: 0x0008 (0x0002C0 - 0x0002C8)
class UFortSettingDetailExtension : public UUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 712;

public:
	CMember(UFortSetting*)                             Setting                                                     OFFSET(get<T>, {0x2C0, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortSettingDetailExtension.UseSplitDisabledOptionsVisual
	// bool UseSplitDisabledOptionsVisual();                                                                                    // [0x2c6cedc] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortSettingDetailExtension.OnSettingValueChanged
	// void OnSettingValueChanged(UFortSetting* InSetting);                                                                     // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortSettingDetailExtension.OnSettingAssigned
	// void OnSettingAssigned(UFortSetting* InSetting);                                                                         // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortSettingDetailExtension.GetOptionsDisabledText
	// FText GetOptionsDisabledText(TArray<FText>& Reasons);                                                                    // [0x960dd98] Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/FortniteUI.FortSettingDetailView
/// Size: 0x00D8 (0x0002C0 - 0x000398)
class UFortSettingDetailView : public UUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 920;

public:
	CMember(UFortSettingVisualData*)                   VisualData                                                  OFFSET(get<T>, {0x2C0, 8, 0, 0})
	SMember(FUserWidgetPool)                           ExtensionWidgetPool                                         OFFSET(getStruct<T>, {0x2C8, 136, 0, 0})
	CMember(UFortSetting*)                             CurrentSetting                                              OFFSET(get<T>, {0x350, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_SettingName                                            OFFSET(get<T>, {0x368, 8, 0, 0})
	CMember(UCommonRichTextBlock*)                     RichText_Description                                        OFFSET(get<T>, {0x370, 8, 0, 0})
	CMember(UCommonRichTextBlock*)                     RichText_DynamicDetails                                     OFFSET(get<T>, {0x378, 8, 0, 0})
	CMember(UCommonRichTextBlock*)                     RichText_WarningDetails                                     OFFSET(get<T>, {0x380, 8, 0, 0})
	CMember(UCommonRichTextBlock*)                     RichText_DisabledDetails                                    OFFSET(get<T>, {0x388, 8, 0, 0})
	CMember(UVerticalBox*)                             Box_DetailsExtension                                        OFFSET(get<T>, {0x390, 8, 0, 0})
};

/// Class /Script/FortniteUI.FortSettingsListEntrySetting_Discrete
/// Size: 0x0030 (0x000328 - 0x000358)
class UFortSettingsListEntrySetting_Discrete : public UFortSettingsListEntry_Setting
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 856;

public:
	CMember(UFortSettingValueDiscrete*)                DiscreteSetting                                             OFFSET(get<T>, {0x328, 8, 0, 0})
	CMember(UPanelWidget*)                             Panel_Value                                                 OFFSET(get<T>, {0x330, 8, 0, 0})
	CMember(UFortSettingsRotator*)                     Rotator_SettingValue                                        OFFSET(get<T>, {0x338, 8, 0, 0})
	CMember(UCommonButtonLegacy*)                      Button_Decrease                                             OFFSET(get<T>, {0x340, 8, 0, 0})
	CMember(UCommonButtonLegacy*)                      Button_Increase                                             OFFSET(get<T>, {0x348, 8, 0, 0})
	CMember(UImage*)                                   OptionsModifiedIndicator                                    OFFSET(get<T>, {0x350, 8, 0, 0})
};

/// Class /Script/FortniteUI.FortSettingsListEntrySetting_DiscreteButtons
/// Size: 0x0030 (0x000328 - 0x000358)
class UFortSettingsListEntrySetting_DiscreteButtons : public UFortSettingsListEntry_Setting
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 856;

public:
	CMember(UClass*)                                   SettingButtonClass                                          OFFSET(get<T>, {0x328, 8, 0, 0})
	CMember(UFortSettingValueDiscrete*)                DiscreteSetting                                             OFFSET(get<T>, {0x330, 8, 0, 0})
	CMember(UDynamicEntryBox*)                         SettingButtonEntryBox                                       OFFSET(get<T>, {0x338, 8, 0, 0})
	CMember(UCommonButtonBase*)                        Button_Decrease                                             OFFSET(get<T>, {0x340, 8, 0, 0})
	CMember(UCommonButtonBase*)                        Button_Increase                                             OFFSET(get<T>, {0x348, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_AdditionalDescription                                  OFFSET(get<T>, {0x350, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortSettingsListEntrySetting_DiscreteButtons.OnSettingSet
	// void OnSettingSet(int32_t NewSetting);                                                                                   // [0x1d9241c] Event|Protected|BlueprintEvent 
};

/// Class /Script/FortniteUI.ListEntrySettingButton
/// Size: 0x0010 (0x0002C0 - 0x0002D0)
class UListEntrySettingButton : public UUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 720;

public:
};

/// Class /Script/FortniteUI.FortSettingsListEntrySetting_KeyboardInput
/// Size: 0x0040 (0x000328 - 0x000368)
class UFortSettingsListEntrySetting_KeyboardInput : public UFortSettingsListEntry_Setting
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 872;

public:
	CMember(UFortInputSettingBase*)                    InputSetting                                                OFFSET(get<T>, {0x328, 8, 0, 0})
	CMember(UClass*)                                   PressAnyKeyPanelClass                                       OFFSET(get<T>, {0x330, 8, 0, 0})
	CMember(UClass*)                                   PreviewActionUnbindClass                                    OFFSET(get<T>, {0x338, 8, 0, 0})
	CMember(UCommonButtonLegacy*)                      Button_PrimaryKey                                           OFFSET(get<T>, {0x350, 8, 0, 0})
	CMember(UCommonButtonLegacy*)                      Button_SecondaryKey                                         OFFSET(get<T>, {0x358, 8, 0, 0})
	CMember(UCommonButtonLegacy*)                      Button_Clear                                                OFFSET(get<T>, {0x360, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortSettingsListEntrySetting_KeyboardInput.OnUpdateKeyText
	// void OnUpdateKeyText(FText& PrimaryKeyText, FText& SecondaryKeyText);                                                    // [0x1d9241c] Event|Protected|HasOutParms|BlueprintEvent 
};

/// Class /Script/FortniteUI.FortSettingsListEntrySetting_Action
/// Size: 0x0010 (0x000328 - 0x000338)
class UFortSettingsListEntrySetting_Action : public UFortSettingsListEntry_Setting
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 824;

public:
	CMember(UFortSettingAction*)                       ActionSetting                                               OFFSET(get<T>, {0x328, 8, 0, 0})
	CMember(UCommonButtonLegacy*)                      Button_Action                                               OFFSET(get<T>, {0x330, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortSettingsListEntrySetting_Action.OnSettingAssigned
	// void OnSettingAssigned(FText& ActionText, bool bShowKeybindWidget);                                                      // [0x1d9241c] Event|Protected|HasOutParms|BlueprintEvent 
};

/// Class /Script/FortniteUI.FortSettingsListEntrySetting_ControllerButton
/// Size: 0x0020 (0x000328 - 0x000348)
class UFortSettingsListEntrySetting_ControllerButton : public UFortSettingsListEntry_Setting
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 840;

public:
	CMember(UClass*)                                   BindingMenuClass                                            OFFSET(get<T>, {0x328, 8, 0, 0})
	CMember(UFortSettingControllerInput*)              ControllerInputSetting                                      OFFSET(get<T>, {0x330, 8, 0, 0})
	CMember(UFortKeybindWidget*)                       Key_ControllerButton                                        OFFSET(get<T>, {0x338, 8, 0, 0})
	CMember(UMenuAnchor*)                              MenuAnchor_BindableActions                                  OFFSET(get<T>, {0x340, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortSettingsListEntrySetting_ControllerButton.OnSettingAssigned
	// void OnSettingAssigned(FText& ActionText);                                                                               // [0x1d9241c] Event|Protected|HasOutParms|BlueprintEvent 
	// Function /Script/FortniteUI.FortSettingsListEntrySetting_ControllerButton.HandleActionButtonClicked
	// void HandleActionButtonClicked();                                                                                        // [0x960de6c] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.FortSettingsListEntrySetting_ControllerButton.GetPopupMenu
	// UUserWidget* GetPopupMenu();                                                                                             // [0x960de48] Final|Native|Protected 
};

/// Class /Script/FortniteUI.FortSettingsListEntrySetting_Navigation
/// Size: 0x0010 (0x000328 - 0x000338)
class UFortSettingsListEntrySetting_Navigation : public UFortSettingsListEntry_Setting
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 824;

public:
	CMember(UFortSettingCollectionPage*)               CollectionSetting                                           OFFSET(get<T>, {0x328, 8, 0, 0})
	CMember(UCommonButtonLegacy*)                      Button_Navigate                                             OFFSET(get<T>, {0x330, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortSettingsListEntrySetting_Navigation.OnSettingAssigned
	// void OnSettingAssigned(FText& ActionText);                                                                               // [0x1d9241c] Event|Protected|HasOutParms|BlueprintEvent 
};

/// Class /Script/FortniteUI.FortSettingsListView
/// Size: 0x0060 (0x000BD0 - 0x000C30)
class UFortSettingsListView : public UListView
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 3120;

public:
	CMember(UFortSettingVisualData*)                   VisualData                                                  OFFSET(get<T>, {0xBD0, 8, 0, 0})
};

/// Class /Script/FortniteUI.FortSettingsPanel
/// Size: 0x0448 (0x0002E8 - 0x000730)
class UFortSettingsPanel : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1840;

public:
	CMember(UFortSettingRegistry*)                     Registry                                                    OFFSET(get<T>, {0x300, 8, 0, 0})
	CMember(TArray<UFortSetting*>)                     VisibleSettings                                             OFFSET(get<T>, {0x308, 16, 0, 0})
	CMember(UFortSetting*)                             LastHoveredOrSelectedSetting                                OFFSET(get<T>, {0x318, 8, 0, 0})
	SMember(FFortSettingsFilterState)                  FilterState                                                 OFFSET(getStruct<T>, {0x320, 952, 0, 0})
	CMember(TArray<FFortSettingsFilterState>)          FilterNavigationStack                                       OFFSET(get<T>, {0x6D8, 16, 0, 0})
	CMember(UFortSettingsListView*)                    ListView_Settings                                           OFFSET(get<T>, {0x700, 8, 0, 0})
	CMember(UFortSettingDetailView*)                   Details_Settings                                            OFFSET(get<T>, {0x708, 8, 0, 0})
	SMember(FMulticastInlineDelegate)                  BP_OnExecuteNamedAction                                     OFFSET(getStruct<T>, {0x710, 16, 0, 0})
};

/// Class /Script/FortniteUI.FortSettingVisualData
/// Size: 0x0140 (0x000030 - 0x000170)
class UFortSettingVisualData : public UDataAsset
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 368;

public:
	CMember(TMap<UClass*, UClass*>)                    EntryWidgetForClass                                         OFFSET(get<T>, {0x30, 80, 0, 0})
	CMember(TMap<FString, UClass*>)                    EntryWidgetForName                                          OFFSET(get<T>, {0x80, 80, 0, 0})
	CMember(TMap<UClass*, FFortSettingClassExtensions>) ExtensionsForClasses                                       OFFSET(get<T>, {0xD0, 80, 0, 0})
	CMember(TMap<FString, FFortSettingNameExtensions>) ExtensionsForName                                           OFFSET(get<T>, {0x120, 80, 0, 0})
};

/// Class /Script/FortniteUI.FortControllerActionsMenu
/// Size: 0x0010 (0x000550 - 0x000560)
class UFortControllerActionsMenu : public UCommonPopupMenuLegacy
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1376;

public:
	CMember(UClass*)                                   MenuEntryClass                                              OFFSET(get<T>, {0x550, 8, 0, 0})
	CMember(UDynamicEntryBox*)                         EntryBox_BindableActions                                    OFFSET(get<T>, {0x558, 8, 0, 0})
};

/// Class /Script/FortniteUI.FortControllerActionsMenuEntry
/// Size: 0x0010 (0x0014E0 - 0x0014F0)
class UFortControllerActionsMenuEntry : public UCommonButtonLegacy
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 5360;

public:
	CMember(URichTextBlock*)                           Text_Action                                                 OFFSET(get<T>, {0x14E0, 8, 0, 0})
};

/// Class /Script/FortniteUI.FortResponsivePanel
/// Size: 0x0018 (0x000190 - 0x0001A8)
class UFortResponsivePanel : public UPanelWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 424;

public:
	DMember(bool)                                      bCanStackVertically                                         OFFSET(get<bool>, {0x190, 1, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortResponsivePanel.AddChildToFortResponsivePanel
	// UFortResponsivePanelSlot* AddChildToFortResponsivePanel(UWidget* Content);                                               // [0x960dbd8] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/FortniteUI.FortResponsivePanelSlot
/// Size: 0x0008 (0x000038 - 0x000040)
class UFortResponsivePanelSlot : public UPanelSlot
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 64;

public:
};

/// Class /Script/FortniteUI.FortSettingsDeadzoneExtension
/// Size: 0x0010 (0x0002C8 - 0x0002D8)
class UFortSettingsDeadzoneExtension : public UFortSettingDetailExtension
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 728;

public:
};

/// Class /Script/FortniteUI.FortSettingsPreferredItemSlotsExtension
/// Size: 0x0028 (0x0002C8 - 0x0002F0)
class UFortSettingsPreferredItemSlotsExtension : public UFortSettingDetailExtension
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 752;

public:
	CMember(TArray<UImage*>)                           SlotItemIconImages                                          OFFSET(get<T>, {0x2C8, 16, 0, 0})
	CMember(TArray<UImage*>)                           HighlightImages                                             OFFSET(get<T>, {0x2D8, 16, 0, 0})
	CMember(UHorizontalBox*)                           HorizontalBox_ItemSlotContainer                             OFFSET(get<T>, {0x2E8, 8, 0, 0})
};

/// Class /Script/FortniteUI.FortSettingsPressAnyKey
/// Size: 0x0048 (0x000570 - 0x0005B8)
class UFortSettingsPressAnyKey : public UFortActivatablePanel
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1464;

public:
};

/// Class /Script/FortniteUI.FortSettingsPreviewActionUnbind
/// Size: 0x0018 (0x0002C0 - 0x0002D8)
class UFortSettingsPreviewActionUnbind : public UUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 728;

public:
	CMember(UCommonTextBlock*)                         Text_Action                                                 OFFSET(get<T>, {0x2C0, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_PrimaryKey                                             OFFSET(get<T>, {0x2C8, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_SecondaryKey                                           OFFSET(get<T>, {0x2D0, 8, 0, 0})
};

/// Class /Script/FortniteUI.FortSettingsRotator
/// Size: 0x0000 (0x0014F0 - 0x0014F0)
class UFortSettingsRotator : public UCommonRotator
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 5360;

public:


	/// Functions
	// Function /Script/FortniteUI.FortSettingsRotator.BP_OnDefaultOptionSpecified
	// void BP_OnDefaultOptionSpecified(int32_t DefaultOptionIndex);                                                            // [0x1d9241c] Event|Protected|BlueprintEvent 
};

/// Class /Script/FortniteUI.SettingsScreen
/// Size: 0x0070 (0x000570 - 0x0005E0)
class USettingsScreen : public UFortActivatablePanel
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1504;

public:
	CMember(UFortSettingsPanel*)                       Settings_Panel                                              OFFSET(get<T>, {0x5D0, 8, 0, 0})
	CMember(UFortSettingRegistry*)                     Registry                                                    OFFSET(get<T>, {0x5D8, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.SettingsScreen.ShowSavingProgress
	// void ShowSavingProgress();                                                                                               // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.SettingsScreen.SaveSettings
	// void SaveSettings();                                                                                                     // [0x960e0c4] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.SettingsScreen.ResetSettings
	// void ResetSettings();                                                                                                    // [0x960e0b0] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.SettingsScreen.OnSettingsDirtyStateChanged
	// void OnSettingsDirtyStateChanged(bool bSettingsDirty);                                                                   // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.SettingsScreen.NavigateToSettings
	// void NavigateToSettings(TArray<FName> SettingsCollectionNames);                                                          // [0x960dfbc] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.SettingsScreen.HideSavingProgress
	// void HideSavingProgress();                                                                                               // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.SettingsScreen.HaveSettingsBeenChanged
	// bool HaveSettingsBeenChanged();                                                                                          // [0x6781380] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.SettingsScreen.CloseSettings
	// void CloseSettings();                                                                                                    // [0x960dd3c] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.SettingsScreen.AttemptToPopNavigation
	// bool AttemptToPopNavigation();                                                                                           // [0x960dd18] Final|Native|Protected|BlueprintCallable 
};

/// Class /Script/FortniteUI.CheatSettingsScreen
/// Size: 0x0018 (0x0005E0 - 0x0005F8)
class UCheatSettingsScreen : public USettingsScreen
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1528;

public:
	CMember(UCommonButtonBase*)                        Button_CloseTouch                                           OFFSET(get<T>, {0x5E0, 8, 0, 0})
	SMember(FDataTableRowHandle)                       BackAction                                                  OFFSET(getStruct<T>, {0x5E8, 16, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.CheatSettingsScreen.HandleBackActionInput
	// void HandleBackActionInput(bool& PassThrough);                                                                           // [0x960de88] Final|Native|Private|HasOutParms 
};

/// Class /Script/FortniteUI.FortCalibrateBrightnessScreen
/// Size: 0x0000 (0x000570 - 0x000570)
class UFortCalibrateBrightnessScreen : public UFortActivatablePanel
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1392;

public:
};

/// Class /Script/FortniteUI.FortDivisionDetailsScreen
/// Size: 0x0020 (0x000570 - 0x000590)
class UFortDivisionDetailsScreen : public UFortActivatablePanel
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1424;

public:
	CMember(UFortDivisionDetailsInfo*)                 DetailsInfo                                                 OFFSET(get<T>, {0x570, 8, 0, 0})
	CMember(UFortDivisionPayoutInfo*)                  PayoutInfo                                                  OFFSET(get<T>, {0x578, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_Title                                                  OFFSET(get<T>, {0x580, 8, 0, 0})
	CMember(UCommonWidgetSwitcherLegacy*)              WidgetSwitcher_MainContent                                  OFFSET(get<T>, {0x588, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortDivisionDetailsScreen.SetTournamentAndEventId
	// void SetTournamentAndEventId(FString InTournamentId, FString InEventId);                                                 // [0x9647b24] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortDivisionDetailsScreen.HandleRightDivisionClicked
	// void HandleRightDivisionClicked();                                                                                       // [0x96404a0] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortDivisionDetailsScreen.HandleLeftDivisionClicked
	// void HandleLeftDivisionClicked();                                                                                        // [0x963f2f0] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/FortniteUI.FortDivisionLobbyPanel
/// Size: 0x0038 (0x000778 - 0x0007B0)
class UFortDivisionLobbyPanel : public UFortShowdownDivisionEventView
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1968;

public:
	SMember(FDataTableRowHandle)                       EventDetailsAction                                          OFFSET(getStruct<T>, {0x778, 16, 0, 0})
	CMember(UFortLazyImage*)                           Image_CurrentDivisionFancy                                  OFFSET(get<T>, {0x788, 8, 0, 0})
	CMember(UFortLazyImage*)                           Image_CurrentDivisionPlain                                  OFFSET(get<T>, {0x790, 8, 0, 0})
	CMember(UFortLazyImage*)                           Image_NextDivision                                          OFFSET(get<T>, {0x798, 8, 0, 0})
	CMember(UCommonButtonLegacy*)                      Button_EventDetails                                         OFFSET(get<T>, {0x7A0, 8, 0, 0})
};

/// Class /Script/FortniteUI.FortShowdownCurrentEventView
/// Size: 0x0000 (0x000778 - 0x000778)
class UFortShowdownCurrentEventView : public UFortShowdownDetailView
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1912;

public:
};

/// Class /Script/FortniteUI.FortShowdownDivisionRankButton
/// Size: 0x0010 (0x0014E0 - 0x0014F0)
class UFortShowdownDivisionRankButton : public UCommonButtonLegacy
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 5360;

public:
	CMember(UFortLazyImage*)                           Image_DivisionIcon                                          OFFSET(get<T>, {0x14E0, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortShowdownDivisionRankButton.OnRankButtonSelected
	// void OnRankButtonSelected(bool bIsSelected);                                                                             // [0x1d9241c] Event|Public|BlueprintEvent 
};

/// Class /Script/FortniteUI.FortShowdownDivisionRankProgressView
/// Size: 0x0010 (0x0002E8 - 0x0002F8)
class UFortShowdownDivisionRankProgressView : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 760;

public:
	CMember(UFortLazyImage*)                           Image_DivisionIcon                                          OFFSET(get<T>, {0x2E8, 8, 0, 0})
	CMember(UProgressBar*)                             Bar_DivisionProgress                                        OFFSET(get<T>, {0x2F0, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortShowdownDivisionRankProgressView.OnSetInProgress
	// void OnSetInProgress(float NewPercent, bool bIsInProgress);                                                              // [0x1d9241c] Event|Protected|BlueprintEvent 
};

/// Class /Script/FortniteUI.FortDivisionDetailsInfo
/// Size: 0x0018 (0x000778 - 0x000790)
class UFortDivisionDetailsInfo : public UFortShowdownDivisionEventView
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1936;

public:
	CMember(UDynamicEntryBox*)                         EntryBoxes_DivisionProgressRanks                            OFFSET(get<T>, {0x778, 8, 0, 0})
	CMember(UWidget*)                                  ResetTimeContainer                                          OFFSET(get<T>, {0x780, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_ResetTime                                              OFFSET(get<T>, {0x788, 8, 0, 0})
};

/// Class /Script/FortniteUI.FortDivisionPayoutInfo
/// Size: 0x0040 (0x000778 - 0x0007B8)
class UFortDivisionPayoutInfo : public UFortShowdownDivisionEventView
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1976;

public:
	CMember(UDynamicEntryBox*)                         EntryBoxes_DivisionRanksButtons                             OFFSET(get<T>, {0x778, 8, 0, 0})
	CMember(UCommonButtonLegacy*)                      Button_Left                                                 OFFSET(get<T>, {0x780, 8, 0, 0})
	CMember(UCommonButtonLegacy*)                      Button_Right                                                OFFSET(get<T>, {0x788, 8, 0, 0})
	CMember(UDynamicEntryBox*)                         EntryBox_Payouts                                            OFFSET(get<T>, {0x790, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_League                                                 OFFSET(get<T>, {0x798, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_DivsionRank                                            OFFSET(get<T>, {0x7A0, 8, 0, 0})
	CMember(UScrollBox*)                               ScrollBox_Payouts                                           OFFSET(get<T>, {0x7A8, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortDivisionPayoutInfo.OnDivisionChanged
	// void OnDivisionChanged(int32_t NewDivision);                                                                             // [0x1d9241c] Event|Protected|BlueprintEvent 
};

/// Class /Script/FortniteUI.FortPayoutInfoEntry
/// Size: 0x0010 (0x0002E8 - 0x0002F8)
class UFortPayoutInfoEntry : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 760;

public:
	CMember(UCommonTextBlock*)                         Text_Points                                                 OFFSET(get<T>, {0x2E8, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_PointsLabel                                            OFFSET(get<T>, {0x2F0, 8, 0, 0})
};

/// Class /Script/FortniteUI.FortShowdownPin
/// Size: 0x0008 (0x000778 - 0x000780)
class UFortShowdownPin : public UFortShowdownDetailView
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1920;

public:
	DMember(bool)                                      bTryUsingAlternativeScore                                   OFFSET(get<bool>, {0x778, 1, 0, 0})
	DMember(bool)                                      bUseAbbreviatedScore                                        OFFSET(get<bool>, {0x779, 1, 0, 0})
	DMember(int32_t)                                   LastBestScore                                               OFFSET(get<int32_t>, {0x77C, 4, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortShowdownPin.ShouldUseAlternativeScore
	// bool ShouldUseAlternativeScore();                                                                                        // [0x96489bc] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortShowdownPin.GetScoreToDisplay
	// int32_t GetScoreToDisplay(bool bUseBestPin);                                                                             // [0x963c3fc] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortShowdownPin.GetAlternativeScoreToDisplay
	// int32_t GetAlternativeScoreToDisplay();                                                                                  // [0x963621c] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/FortniteUI.FortShowdownRegionButton
/// Size: 0x0040 (0x0014F0 - 0x001530)
class UFortShowdownRegionButton : public UCommonPopupButtonLegacy
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 5424;

public:
	SMember(FMulticastInlineDelegate)                  OnPopupChanged                                              OFFSET(getStruct<T>, {0x14F0, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnRegionChanged                                             OFFSET(getStruct<T>, {0x1500, 16, 0, 0})
	CMember(UClass*)                                   BindingMenuClass                                            OFFSET(get<T>, {0x1510, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_RegionName                                             OFFSET(get<T>, {0x1518, 8, 0, 0})
	CMember(UFortShowdownRegionPopupMenu*)             RegionMenuInstance                                          OFFSET(get<T>, {0x1520, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortShowdownRegionButton.HandleRegionSelectedChanged
	// void HandleRegionSelectedChanged(int32_t SelectedButtonIndex);                                                           // [0x9640420] Final|Native|Private 
	// Function /Script/FortniteUI.FortShowdownRegionButton.HandlePopupChanged
	// void HandlePopupChanged(bool bIsOpen);                                                                                   // [0x963fc2c] Final|Native|Private 
	// Function /Script/FortniteUI.FortShowdownRegionButton.ClosePopup
	// void ClosePopup();                                                                                                       // [0x9635038] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/FortniteUI.FortShowdownRegionPopupMenu
/// Size: 0x0038 (0x000550 - 0x000588)
class UFortShowdownRegionPopupMenu : public UCommonPopupMenuLegacy
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1416;

public:
	SMember(FMulticastInlineDelegate)                  OnRegionChanged                                             OFFSET(getStruct<T>, {0x550, 16, 0, 0})
	CMember(UDynamicEntryBox*)                         EntryBox_BindableActions                                    OFFSET(get<T>, {0x560, 8, 0, 0})
	CMember(UClass*)                                   style                                                       OFFSET(get<T>, {0x568, 8, 0, 0})
	CMember(UCommonButtonGroupBase*)                   ButtonGroup                                                 OFFSET(get<T>, {0x570, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortShowdownRegionPopupMenu.HandleSelectedButtonClicked
	// void HandleSelectedButtonClicked(UCommonButtonBase* SelectedButton, int32_t SelectedButtonIndex);                        // [0x96404bc] Final|Native|Private 
	// Function /Script/FortniteUI.FortShowdownRegionPopupMenu.HandleMenuOpenChanged
	// void HandleMenuOpenChanged(bool bIsMenuPopupOpen);                                                                       // [0x963f30c] Final|Native|Protected 
	// Function /Script/FortniteUI.FortShowdownRegionPopupMenu.BP_SetButtonText
	// void BP_SetButtonText(UCommonButtonLegacy* Button, FText& Text);                                                         // [0x1d9241c] Event|Protected|HasOutParms|BlueprintEvent 
};

/// Class /Script/FortniteUI.FortShowdownScreen
/// Size: 0x0098 (0x000570 - 0x000608)
class UFortShowdownScreen : public UFortActivatablePanel
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1544;

public:
	SMember(FDataTableRowHandle)                       HypeLeaderboardActionRowHandle                              OFFSET(getStruct<T>, {0x570, 16, 0, 0})
	CMember(UClass*)                                   HypeLeaderboardScreenClass                                  OFFSET(get<T>, {0x580, 8, 0, 0})
	CMember(UClass*)                                   TileItemClass                                               OFFSET(get<T>, {0x588, 8, 0, 0})
	CMember(UClass*)                                   TournamentModalClass                                        OFFSET(get<T>, {0x590, 8, 0, 0})
	CMember(UCommonButtonBase*)                        Button_Details                                              OFFSET(get<T>, {0x598, 8, 0, 0})
	CMember(UCommonTextBlock*)                         CommonTextBlock_RegionText                                  OFFSET(get<T>, {0x5A0, 8, 0, 0})
	CMember(UFortShowdownTournamentListView*)          ListView_TournamentList                                     OFFSET(get<T>, {0x5A8, 8, 0, 0})
	CMember(UFortShowdownRegionButton*)                Button_RegionSelection                                      OFFSET(get<T>, {0x5B0, 8, 0, 0})
	CMember(UImage*)                                   Image_LoadingSpinner                                        OFFSET(get<T>, {0x5B8, 8, 0, 0})
	DMember(bool)                                      bIsUsingGamepad                                             OFFSET(get<bool>, {0x5C0, 1, 0, 0})
	CMember(UClass*)                                   FortFlagSelectionModalClass                                 OFFSET(get<T>, {0x5C8, 8, 0, 0})
	CMember(UCommonButtonBase*)                        Button_ChangeFlag                                           OFFSET(get<T>, {0x5D0, 8, 0, 0})
	CMember(UFortFlagImage*)                           Image_YourFlag                                              OFFSET(get<T>, {0x5D8, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortShowdownScreen.SelectedTournamentChanged
	// void SelectedTournamentChanged(FString SelectedTournament);                                                              // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortShowdownScreen.SelectedFrontTournament
	// void SelectedFrontTournament(bool bFrontIsSelected);                                                                     // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortShowdownScreen.SelectedEndTournament
	// void SelectedEndTournament(bool bEndIsSelected);                                                                         // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortShowdownScreen.NavigateTournamentRight
	// void NavigateTournamentRight();                                                                                          // [0x9641868] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.FortShowdownScreen.NavigateTournamentLeft
	// void NavigateTournamentLeft();                                                                                           // [0x9641830] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.FortShowdownScreen.HandleSelectedTileChanged
	// void HandleSelectedTileChanged(UCommonButtonLegacy* Button, int32_t ButtonIndex);                                        // [0x9640580] Final|Native|Private 
	// Function /Script/FortniteUI.FortShowdownScreen.HandlePopupStateChanged
	// void HandlePopupStateChanged(bool bIsOpen);                                                                              // [0x963fcac] Final|Native|Private 
};

/// Class /Script/FortniteUI.TournamentListEntryData
/// Size: 0x0178 (0x000028 - 0x0001A0)
class UTournamentListEntryData : public UObject
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 416;

public:
	DMember(bool)                                      bHideItemRow                                                OFFSET(get<bool>, {0x198, 1, 0, 0})
};

/// Class /Script/FortniteUI.FortShowdownTournamentListView
/// Size: 0x0010 (0x000BD0 - 0x000BE0)
class UFortShowdownTournamentListView : public UCommonListView
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 3040;

public:
	DMember(float)                                     EntryWidthSize                                              OFFSET(get<float>, {0xBD0, 4, 0, 0})
	DMember(int32_t)                                   NumPaddingRowLeft                                           OFFSET(get<int32_t>, {0xBD4, 4, 0, 0})
	DMember(int32_t)                                   NumPaddingRowRight                                          OFFSET(get<int32_t>, {0xBD8, 4, 0, 0})
	DMember(bool)                                      bCanUseDesiredScrollOffset                                  OFFSET(get<bool>, {0xBDC, 1, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortShowdownTournamentListView.SetScrollOffsetAnimation
	// void SetScrollOffsetAnimation(bool bEnable);                                                                             // [0x9646a20] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortShowdownTournamentListView.SelectTournamentAtIndex
	// UFortShowdownTournamentTile* SelectTournamentAtIndex(int32_t SelectedIndex);                                             // [0x964225c] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortShowdownTournamentListView.SelectLastTournament
	// UFortShowdownTournamentTile* SelectLastTournament();                                                                     // [0x9642238] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortShowdownTournamentListView.SelectFirstTournament
	// UFortShowdownTournamentTile* SelectFirstTournament();                                                                    // [0x964220c] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortShowdownTournamentListView.ScrollItemToDesiredOffset
	// void ScrollItemToDesiredOffset(UObject* InObject);                                                                       // [0x964218c] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortShowdownTournamentListView.NavigateTournamentRight
	// UFortShowdownTournamentTile* NavigateTournamentRight();                                                                  // [0x964187c] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortShowdownTournamentListView.NavigateTournamentLeft
	// UFortShowdownTournamentTile* NavigateTournamentLeft();                                                                   // [0x9641844] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortShowdownTournamentListView.IsSelectedItemLastRow
	// bool IsSelectedItemLastRow();                                                                                            // [0x9641620] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortShowdownTournamentListView.IsSelectedItemFirstRow
	// bool IsSelectedItemFirstRow();                                                                                           // [0x96415fc] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortShowdownTournamentListView.GetEntryAtIndex
	// UUserWidget* GetEntryAtIndex(int32_t SelectedIndex);                                                                     // [0x9636c18] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortShowdownTournamentListView.GetDesiredScrollOffset
	// float GetDesiredScrollOffset(int32_t Index);                                                                             // [0x9636720] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortShowdownTournamentListView.FindTournament
	// UFortShowdownTournamentTile* FindTournament(FString TournamentId);                                                       // [0x9635ab0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/FortniteUI.FortShowdownTournamentTile
/// Size: 0x0030 (0x0014E0 - 0x001510)
class UFortShowdownTournamentTile : public UCommonButtonLegacy
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 5392;

public:
	CMember(UFortTournamentPosterViolator*)            ShowdownDetailView_Violator                                 OFFSET(get<T>, {0x14F8, 8, 0, 0})
	CMember(UFortShowdownDetailView*)                  ShowdownDetailView_Poster                                   OFFSET(get<T>, {0x1500, 8, 0, 0})
	CMember(UTournamentListEntryData*)                 TournamentListEntryData                                     OFFSET(get<T>, {0x1508, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortShowdownTournamentTile.GetTournamentListEntryData
	// UTournamentListEntryData* GetTournamentListEntryData();                                                                  // [0x963d4c0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortShowdownTournamentTile.GetTileTournament
	// FString GetTileTournament();                                                                                             // [0x963d230] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/FortniteUI.FortTournamentLobbyPanel
/// Size: 0x0058 (0x000778 - 0x0007D0)
class UFortTournamentLobbyPanel : public UFortShowdownDetailView
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 2000;

public:
	SMember(FDataTableRowHandle)                       EventDetailsAction                                          OFFSET(getStruct<T>, {0x778, 16, 0, 0})
	CMember(UCommonButtonLegacy*)                      Button_EventDetails                                         OFFSET(get<T>, {0x788, 8, 0, 0})
	CMember(UClass*)                                   TournamentModalClass                                        OFFSET(get<T>, {0x790, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_TimeRemainingScheduledMatch                            OFFSET(get<T>, {0x798, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_ScheduledMatchInfo                                     OFFSET(get<T>, {0x7A0, 8, 0, 0})
	CMember(UTextBlock*)                               Text_DebugLBId                                              OFFSET(get<T>, {0x7A8, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortTournamentLobbyPanel.UsesScheduledMatchmaking
	// bool UsesScheduledMatchmaking();                                                                                         // [0x9649ae8] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/FortniteUI.FortSimpleWidgetAnimationsPanel
/// Size: 0x0030 (0x000190 - 0x0001C0)
class UFortSimpleWidgetAnimationsPanel : public UContentWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 448;

public:
	SMember(FMulticastInlineDelegate)                  OnAnimationsFinished                                        OFFSET(getStruct<T>, {0x190, 16, 0, 0})
	CMember(TArray<FFortSimpleWidgetAnimations>)       Animations                                                  OFFSET(get<T>, {0x1A0, 16, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortSimpleWidgetAnimationsPanel.StopAnimationByName
	// bool StopAnimationByName(FName& Name);                                                                                   // [0x96499d4] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/FortniteUI.FortSimpleWidgetAnimationsPanel.StopAllAnimations
	// void StopAllAnimations();                                                                                                // [0x96499c0] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortSimpleWidgetAnimationsPanel.ResetAnimationByName
	// bool ResetAnimationByName(FName& Name);                                                                                  // [0x96420e0] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/FortniteUI.FortSimpleWidgetAnimationsPanel.ResetAllAnimations
	// void ResetAllAnimations();                                                                                               // [0x96420cc] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortSimpleWidgetAnimationsPanel.PlayAnimationByName
	// bool PlayAnimationByName(FName& Name, float Speed);                                                                      // [0x23786e0] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/FortniteUI.FortSimpleWidgetAnimationsPanel.OnAnimationsFinished__DelegateSignature
	// void OnAnimationsFinished__DelegateSignature(FName Name);                                                                // [0x1d9241c] MulticastDelegate|Public|Delegate 
	// Function /Script/FortniteUI.FortSimpleWidgetAnimationsPanel.ForwardOnAnimationsFinished
	// void ForwardOnAnimationsFinished(FName Name);                                                                            // [0x9636160] Final|Native|Private 
};

/// Class /Script/FortniteUI.FortSimpleWidgetAnimationsSlot
/// Size: 0x0000 (0x000038 - 0x000038)
class UFortSimpleWidgetAnimationsSlot : public UPanelSlot
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 56;

public:
};

/// Class /Script/FortniteUI.FortAttributeList
/// Size: 0x0018 (0x0002D0 - 0x0002E8)
class UFortAttributeList : public UFortUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 744;

public:
	CMember(UClass*)                                   AttributeItemClass                                          OFFSET(get<T>, {0x2D0, 8, 0, 0})
	DMember(bool)                                      bHoverEnabledOnElements                                     OFFSET(get<bool>, {0x2D8, 1, 0, 0})
	CMember(UVerticalBox*)                             AttributeContainer                                          OFFSET(get<T>, {0x2E0, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortAttributeList.SetPreviewData
	// void SetPreviewData(TArray<FFortDisplayAttribute>& Data);                                                                // [0x9646880] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/FortniteUI.FortAttributeList.SetData
	// TArray<FFortDisplayAttribute> SetData(TArray<FFortDisplayAttribute>& Data);                                              // [0x9645a2c] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/FortniteUI.FortAttributeList.ClearPreviewData
	// void ClearPreviewData();                                                                                                 // [0x9634fb0] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortAttributeList.Clear
	// void Clear();                                                                                                            // [0x9634f30] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/FortniteUI.FortAttributeListItem
/// Size: 0x0118 (0x0002C0 - 0x0003D8)
class UFortAttributeListItem : public UUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 984;

public:
	DMember(bool)                                      bHoverEnabled                                               OFFSET(get<bool>, {0x2C0, 1, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortAttributeListItem.ValueChanged
	// void ValueChanged(float Delta);                                                                                          // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.FortAttributeListItem.SetPreviewAttribute
	// void SetPreviewAttribute(FFortDisplayAttribute& InPreviewAttribute);                                                     // [0x9646738] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/FortniteUI.FortAttributeListItem.SetDisplayAttribute
	// bool SetDisplayAttribute(FFortDisplayAttribute& InDisplayAttribute, FFortDisplayAttribute& DeltaAttribute);              // [0x9645b84] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/FortniteUI.FortAttributeListItem.PreviewStarted
	// void PreviewStarted();                                                                                                   // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.FortAttributeListItem.PreviewEnded
	// void PreviewEnded();                                                                                                     // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.FortAttributeListItem.GetDisplayPreviewCopy
	// void GetDisplayPreviewCopy(FFortDisplayAttribute& OutPreviewAttribute);                                                  // [0x9636a30] Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortAttributeListItem.GetDisplayAttributeCopy
	// void GetDisplayAttributeCopy(FFortDisplayAttribute& OutDisplayAttribute);                                                // [0x96368e0] Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortAttributeListItem.GetCurrentAttributeCopy
	// void GetCurrentAttributeCopy(FFortDisplayAttribute& OutDisplayAttribute);                                                // [0x9636448] Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortAttributeListItem.DisplayAttributeChanged
	// void DisplayAttributeChanged();                                                                                          // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.FortAttributeListItem.ClearPreview
	// void ClearPreview();                                                                                                     // [0x9634f88] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/FortniteUI.FortAttributeListItem_NUI
/// Size: 0x0120 (0x0002E8 - 0x000408)
class UFortAttributeListItem_NUI : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1032;

public:
	DMember(bool)                                      bHoverEnabled                                               OFFSET(get<bool>, {0x2F0, 1, 0, 0})
	SMember(FGameplayTag)                              StatTag                                                     OFFSET(getStruct<T>, {0x2F4, 4, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortAttributeListItem_NUI.ValueChanged
	// void ValueChanged(float Delta);                                                                                          // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.FortAttributeListItem_NUI.SetPreviewAttribute
	// void SetPreviewAttribute(FFortDisplayAttribute& InPreviewAttribute);                                                     // [0x96467dc] Final|RequiredAPI|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/FortniteUI.FortAttributeListItem_NUI.SetDisplayAttribute
	// void SetDisplayAttribute(FFortDisplayAttribute& InDisplayAttribute);                                                     // [0x9645cb0] Final|RequiredAPI|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/FortniteUI.FortAttributeListItem_NUI.PreviewStarted
	// void PreviewStarted();                                                                                                   // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.FortAttributeListItem_NUI.PreviewEnded
	// void PreviewEnded();                                                                                                     // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.FortAttributeListItem_NUI.HasPreviewAttribute
	// bool HasPreviewAttribute();                                                                                              // [0x9640854] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortAttributeListItem_NUI.GetDisplayPreviewCopy
	// void GetDisplayPreviewCopy(FFortDisplayAttribute& OutPreviewAttribute);                                                  // [0x9636ad8] Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortAttributeListItem_NUI.GetDisplayAttributeCopy
	// void GetDisplayAttributeCopy(FFortDisplayAttribute& OutDisplayAttribute);                                                // [0x9636988] Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortAttributeListItem_NUI.GetCurrentAttributeCopy
	// void GetCurrentAttributeCopy(FFortDisplayAttribute& OutDisplayAttribute);                                                // [0x9636518] Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortAttributeListItem_NUI.DisplayAttributeChanged
	// void DisplayAttributeChanged();                                                                                          // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.FortAttributeListItem_NUI.ClearPreview
	// void ClearPreview();                                                                                                     // [0x9634f9c] Final|RequiredAPI|Native|Public|BlueprintCallable 
};

/// Class /Script/FortniteUI.FortAttributeList_NUI
/// Size: 0x0030 (0x0002E8 - 0x000318)
class UFortAttributeList_NUI : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 792;

public:
	CMember(UClass*)                                   AttributeItemClass                                          OFFSET(get<T>, {0x2E8, 8, 0, 0})
	DMember(bool)                                      bHoverEnabledOnElements                                     OFFSET(get<bool>, {0x2F0, 1, 0, 0})
	CMember(TArray<UFortAttributeListItem_NUI*>)       ShownAttributeWidgets                                       OFFSET(get<T>, {0x2F8, 16, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortAttributeList_NUI.SetPreviewData
	// void SetPreviewData(TArray<FFortDisplayAttribute>& Data);                                                                // [0x9646974] Final|RequiredAPI|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/FortniteUI.FortAttributeList_NUI.SetData
	// void SetData(TArray<FFortDisplayAttribute>& Data);                                                                       // [0x9645aec] Final|RequiredAPI|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/FortniteUI.FortAttributeList_NUI.OnRemoveShownAttributeListItem
	// void OnRemoveShownAttributeListItem(UFortAttributeListItem_NUI* AttributeListItemWidget, int32_t AtIndex);               // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.FortAttributeList_NUI.OnClearShownAttributes
	// void OnClearShownAttributes();                                                                                           // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortAttributeList_NUI.OnAddShownAttributeListItem
	// void OnAddShownAttributeListItem(UFortAttributeListItem_NUI* AttributeListItemWidget);                                   // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.FortAttributeList_NUI.ClearPreviewData
	// void ClearPreviewData();                                                                                                 // [0x9635024] Final|RequiredAPI|Native|Public|BlueprintCallable 
};

/// Class /Script/FortniteUI.FortSelectableAttributeListItem_NUI
/// Size: 0x0010 (0x0014E0 - 0x0014F0)
class UFortSelectableAttributeListItem_NUI : public UCommonButtonLegacy
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 5360;

public:
	CMember(UFortAttributeListItem_NUI*)               AttributeListItem                                           OFFSET(get<T>, {0x14E8, 8, 0, 0})
};

/// Class /Script/FortniteUI.AthenaStandaloneMtxStore
/// Size: 0x0020 (0x000400 - 0x000420)
class UAthenaStandaloneMtxStore : public UCommonActivatableWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1056;

public:
	CMember(UFortMtxStoreRootBase*)                    Panel_MTXStore                                              OFFSET(get<T>, {0x408, 8, 0, 0})
	CMember(UCommonButtonBase*)                        Button_Back                                                 OFFSET(get<T>, {0x410, 8, 0, 0})
	CMember(UCommonButtonBase*)                        Button_CloseTouch                                           OFFSET(get<T>, {0x418, 8, 0, 0})
};

/// Class /Script/FortniteUI.FortLlamaStoreOfferInfo
/// Size: 0x0008 (0x000060 - 0x000068)
class UFortLlamaStoreOfferInfo : public UFortStoreFrontOfferInfo
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 104;

public:
	CMember(UFortCardPackItemDefinition*)              LlamaOfferDisplayAsset                                      OFFSET(get<T>, {0x60, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortLlamaStoreOfferInfo.GetLlamaOfferDisplayAsset
	// UFortCardPackItemDefinition* GetLlamaOfferDisplayAsset();                                                                // [0x8dcdaf8] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortLlamaStoreOfferInfo.GetDisplayAssetXrayImage
	// TWeakObjectPtr<UTexture2D*> GetDisplayAssetXrayImage();                                                                  // [0x963689c] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortLlamaStoreOfferInfo.GetDisplayAssetPersonality
	// UFortPackPersonality* GetDisplayAssetPersonality();                                                                      // [0x9636868] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortLlamaStoreOfferInfo.GetDisplayAssetImage
	// TWeakObjectPtr<UTexture2D*> GetDisplayAssetImage();                                                                      // [0x96367e4] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortLlamaStoreOfferInfo.GetDisplayAssetIcon
	// UTexture* GetDisplayAssetIcon();                                                                                         // [0x96367b0] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/FortniteUI.FortStoreFrontTileWidgetBase
/// Size: 0x0010 (0x001490 - 0x0014A0)
class UFortStoreFrontTileWidgetBase : public UCommonButtonBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 5280;

public:
};

/// Class /Script/FortniteUI.FortStoreFrontOfferWidgetBase
/// Size: 0x0070 (0x0014A0 - 0x001510)
class UFortStoreFrontOfferWidgetBase : public UFortStoreFrontTileWidgetBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 5392;

public:
	CMember(TArray<UFortStoreFrontOfferInfo*>)         GroupedOffers                                               OFFSET(get<T>, {0x1498, 16, 0, 0})
	CMember(UCommonLoadGuard*)                         MainImageLoadGuard                                          OFFSET(get<T>, {0x14B0, 8, 0, 0})
	CMember(UClass*)                                   ThumbnailRendererClass                                      OFFSET(get<T>, {0x14E8, 8, 0, 0})
	CMember(UFortStoreFrontOfferInfo*)                 OfferData                                                   OFFSET(get<T>, {0x14F0, 8, 0, 0})
	CMember(UFortItemThumbnailRenderer*)               ThumbnailRenderer                                           OFFSET(get<T>, {0x14F8, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortStoreFrontOfferWidgetBase.UpdateCarousel
	// void UpdateCarousel(float InDeltaTime);                                                                                  // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.FortStoreFrontOfferWidgetBase.SetupThumbnailRenderer
	// void SetupThumbnailRenderer(UFortItemThumbnailRenderer* InThumbnailRenderer);                                            // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortStoreFrontOfferWidgetBase.SetupOffer
	// void SetupOffer(UFortStoreFrontOfferInfo* InOfferData);                                                                  // [0x9648894] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortStoreFrontOfferWidgetBase.SetStoreRoot_Legacy
	// void SetStoreRoot_Legacy(UFortMtxStoreRootBase_Legacy* InStoreRoot);                                                     // [0x9646da0] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortStoreFrontOfferWidgetBase.SetStoreRoot
	// void SetStoreRoot(UFortMtxStoreRootBase* InStoreRoot);                                                                   // [0x9646ca0] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortStoreFrontOfferWidgetBase.SetIndexInSection
	// void SetIndexInSection(int32_t InIndexInSection);                                                                        // [0x9645d54] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortStoreFrontOfferWidgetBase.SendShopInteractionAnalytic
	// void SendShopInteractionAnalytic(FString Interaction);                                                                   // [0x96445cc] Final|Native|Protected|BlueprintCallable|Const 
	// Function /Script/FortniteUI.FortStoreFrontOfferWidgetBase.SendSeasonPassInteractionAnalytic
	// void SendSeasonPassInteractionAnalytic(FString Interaction);                                                             // [0x9643814] Final|Native|Protected|BlueprintCallable|Const 
	// Function /Script/FortniteUI.FortStoreFrontOfferWidgetBase.SendRealMoneyStoreInteractionAnalytic
	// void SendRealMoneyStoreInteractionAnalytic(FString Interaction);                                                         // [0x9642a70] Final|Native|Protected|BlueprintCallable|Const 
	// Function /Script/FortniteUI.FortStoreFrontOfferWidgetBase.RemoveAllOffers
	// void RemoveAllOffers();                                                                                                  // [0x9641da4] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortStoreFrontOfferWidgetBase.PreviewNextCarouselOffer
	// void PreviewNextCarouselOffer();                                                                                         // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortStoreFrontOfferWidgetBase.OnUpdateStatus
	// void OnUpdateStatus();                                                                                                   // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortStoreFrontOfferWidgetBase.OnStoreSelectionOfferSet
	// void OnStoreSelectionOfferSet();                                                                                         // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortStoreFrontOfferWidgetBase.OnOfferTileBrushLoaded
	// void OnOfferTileBrushLoaded(FSlateBrush& OfferBrush);                                                                    // [0x1d9241c] Event|Public|HasOutParms|BlueprintEvent 
	// Function /Script/FortniteUI.FortStoreFrontOfferWidgetBase.OnOfferSet
	// void OnOfferSet();                                                                                                       // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortStoreFrontOfferWidgetBase.OnOfferAdded
	// void OnOfferAdded();                                                                                                     // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortStoreFrontOfferWidgetBase.OnDetailsOpened
	// void OnDetailsOpened(UFortStoreFrontOfferDetailsWidgetBase* DetailsWidget);                                              // [0x9641938] Final|Native|Protected 
	// Function /Script/FortniteUI.FortStoreFrontOfferWidgetBase.HandleCurrentlyViewedAccountInfoChanged
	// void HandleCurrentlyViewedAccountInfoChanged(FFortPublicAccountInfo NewInfo);                                            // [0x963e120] Final|Native|Private 
	// Function /Script/FortniteUI.FortStoreFrontOfferWidgetBase.HandleCarouselOfferChanged
	// void HandleCarouselOfferChanged();                                                                                       // [0x963df44] Final|Native|Private|BlueprintCallable 
	// Function /Script/FortniteUI.FortStoreFrontOfferWidgetBase.GetStoreRoot
	// UFortMtxStoreRootBase* GetStoreRoot();                                                                                   // [0x963d20c] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortStoreFrontOfferWidgetBase.GetOfferInfo
	// UFortStoreFrontOfferInfo* GetOfferInfo();                                                                                // [0x963ab20] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortStoreFrontOfferWidgetBase.GetFirstOfferSeriesBackgroundTexture
	// TWeakObjectPtr<UTexture2D*> GetFirstOfferSeriesBackgroundTexture();                                                      // [0x963805c] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortStoreFrontOfferWidgetBase.GetFirstOfferSeriesBackgroundMaterial
	// TWeakObjectPtr<UMaterialInterface*> GetFirstOfferSeriesBackgroundMaterial();                                             // [0x9638018] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortStoreFrontOfferWidgetBase.AddOffer
	// void AddOffer(UFortStoreFrontOfferInfo* InOfferData);                                                                    // [0x9634d88] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/FortniteUI.FortLlamaStoreOfferWidgetBase
/// Size: 0x0050 (0x001510 - 0x001560)
class UFortLlamaStoreOfferWidgetBase : public UFortStoreFrontOfferWidgetBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 5472;

public:
};

/// Class /Script/FortniteUI.FortStoreFrontTileWidgetBase_Legacy
/// Size: 0x0010 (0x0014E0 - 0x0014F0)
class UFortStoreFrontTileWidgetBase_Legacy : public UCommonButtonLegacy
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 5360;

public:
};

/// Class /Script/FortniteUI.FortStoreFrontOfferWidgetBase_Legacy
/// Size: 0x0070 (0x0014F0 - 0x001560)
class UFortStoreFrontOfferWidgetBase_Legacy : public UFortStoreFrontTileWidgetBase_Legacy
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 5472;

public:
	CMember(TArray<UFortStoreFrontOfferInfo*>)         GroupedOffers                                               OFFSET(get<T>, {0x14E8, 16, 0, 0})
	CMember(UCommonLoadGuard*)                         MainImageLoadGuard                                          OFFSET(get<T>, {0x1500, 8, 0, 0})
	CMember(UClass*)                                   ThumbnailRendererClass                                      OFFSET(get<T>, {0x1538, 8, 0, 0})
	CMember(UFortStoreFrontOfferInfo*)                 OfferData                                                   OFFSET(get<T>, {0x1540, 8, 0, 0})
	CMember(UFortItemThumbnailRenderer*)               ThumbnailRenderer                                           OFFSET(get<T>, {0x1548, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortStoreFrontOfferWidgetBase_Legacy.UpdateCarousel
	// void UpdateCarousel(float InDeltaTime);                                                                                  // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.FortStoreFrontOfferWidgetBase_Legacy.SetupThumbnailRenderer
	// void SetupThumbnailRenderer(UFortItemThumbnailRenderer* InThumbnailRenderer);                                            // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortStoreFrontOfferWidgetBase_Legacy.SetupOffer
	// void SetupOffer(UFortStoreFrontOfferInfo* InOfferData);                                                                  // [0x96803e8] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortStoreFrontOfferWidgetBase_Legacy.SetStoreRoot
	// void SetStoreRoot(UFortMtxStoreRootBase_Legacy* InStoreRoot);                                                            // [0x967ffa0] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortStoreFrontOfferWidgetBase_Legacy.SetIndexInSection
	// void SetIndexInSection(int32_t InIndexInSection);                                                                        // [0x967fad8] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortStoreFrontOfferWidgetBase_Legacy.SendShopInteractionAnalytic
	// void SendShopInteractionAnalytic(FString Interaction);                                                                   // [0x967eb48] Final|Native|Protected|BlueprintCallable|Const 
	// Function /Script/FortniteUI.FortStoreFrontOfferWidgetBase_Legacy.SendSeasonPassInteractionAnalytic
	// void SendSeasonPassInteractionAnalytic(FString Interaction);                                                             // [0x967e46c] Final|Native|Protected|BlueprintCallable|Const 
	// Function /Script/FortniteUI.FortStoreFrontOfferWidgetBase_Legacy.SendRealMoneyStoreInteractionAnalytic
	// void SendRealMoneyStoreInteractionAnalytic(FString Interaction);                                                         // [0x967ddb8] Final|Native|Protected|BlueprintCallable|Const 
	// Function /Script/FortniteUI.FortStoreFrontOfferWidgetBase_Legacy.RemoveAllOffers
	// void RemoveAllOffers();                                                                                                  // [0x967d5d4] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortStoreFrontOfferWidgetBase_Legacy.PreviewNextCarouselOffer
	// void PreviewNextCarouselOffer();                                                                                         // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortStoreFrontOfferWidgetBase_Legacy.OnUpdateStatus
	// void OnUpdateStatus();                                                                                                   // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortStoreFrontOfferWidgetBase_Legacy.OnStoreSelectionOfferSet
	// void OnStoreSelectionOfferSet();                                                                                         // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortStoreFrontOfferWidgetBase_Legacy.OnOfferTileBrushLoaded
	// void OnOfferTileBrushLoaded(FSlateBrush& OfferBrush);                                                                    // [0x1d9241c] Event|Public|HasOutParms|BlueprintEvent 
	// Function /Script/FortniteUI.FortStoreFrontOfferWidgetBase_Legacy.OnOfferSet
	// void OnOfferSet();                                                                                                       // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortStoreFrontOfferWidgetBase_Legacy.OnOfferAdded
	// void OnOfferAdded();                                                                                                     // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortStoreFrontOfferWidgetBase_Legacy.OnDetailsOpened
	// void OnDetailsOpened(UFortStoreFrontOfferDetailsWidgetBase* DetailsWidget);                                              // [0x967cc30] Final|Native|Protected 
	// Function /Script/FortniteUI.FortStoreFrontOfferWidgetBase_Legacy.HandleCurrentlyViewedAccountInfoChanged
	// void HandleCurrentlyViewedAccountInfoChanged(FFortPublicAccountInfo NewInfo);                                            // [0x967bb30] Final|Native|Private 
	// Function /Script/FortniteUI.FortStoreFrontOfferWidgetBase_Legacy.HandleCarouselOfferChanged
	// void HandleCarouselOfferChanged();                                                                                       // [0x967badc] Final|Native|Private|BlueprintCallable 
	// Function /Script/FortniteUI.FortStoreFrontOfferWidgetBase_Legacy.GetStoreRoot
	// UFortMtxStoreRootBase_Legacy* GetStoreRoot();                                                                            // [0x967b124] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortStoreFrontOfferWidgetBase_Legacy.GetOfferInfo
	// UFortStoreFrontOfferInfo* GetOfferInfo();                                                                                // [0x2b4b164] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortStoreFrontOfferWidgetBase_Legacy.GetFirstOfferSeriesBackgroundTexture
	// TWeakObjectPtr<UTexture2D*> GetFirstOfferSeriesBackgroundTexture();                                                      // [0x9679094] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortStoreFrontOfferWidgetBase_Legacy.GetFirstOfferSeriesBackgroundMaterial
	// TWeakObjectPtr<UMaterialInterface*> GetFirstOfferSeriesBackgroundMaterial();                                             // [0x9679050] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortStoreFrontOfferWidgetBase_Legacy.AddOffer
	// void AddOffer(UFortStoreFrontOfferInfo* InOfferData);                                                                    // [0x9677e04] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/FortniteUI.FortLlamaStoreOfferWidgetBase_Legacy
/// Size: 0x0050 (0x001560 - 0x0015B0)
class UFortLlamaStoreOfferWidgetBase_Legacy : public UFortStoreFrontOfferWidgetBase_Legacy
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 5552;

public:
};

/// Class /Script/FortniteUI.FortPlatformPurchaseErrorCodeModal
/// Size: 0x0020 (0x000400 - 0x000420)
class UFortPlatformPurchaseErrorCodeModal : public UCommonActivatableWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1056;

public:
	CMember(UCommonButtonBase*)                        Button_Back                                                 OFFSET(get<T>, {0x400, 8, 0, 0})
	CMember(UCommonButtonBase*)                        Button_TouchBack                                            OFFSET(get<T>, {0x408, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_Title                                                  OFFSET(get<T>, {0x410, 8, 0, 0})
	CMember(UDynamicEntryBox*)                         EntryBox_Descriptions                                       OFFSET(get<T>, {0x418, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortPlatformPurchaseErrorCodeModal.OnModalBackout
	// void OnModalBackout();                                                                                                   // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortPlatformPurchaseErrorCodeModal.ExitModal
	// void ExitModal();                                                                                                        // [0x2ee9a3c] Native|Protected|BlueprintCallable 
};

/// Class /Script/FortniteUI.FortPurchaseOverlayModal
/// Size: 0x0030 (0x000830 - 0x000860)
class UFortPurchaseOverlayModal : public UFortStoreFrontOfferDetailsWidgetBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 2144;

public:
	CMember(UHorizontalBox*)                           HBox_SuccessfullyPurchased                                  OFFSET(get<T>, {0x850, 8, 0, 0})
	CMember(UHorizontalBox*)                           HBox_SuccessfullyRefunded                                   OFFSET(get<T>, {0x858, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortPurchaseOverlayModal.ShouldShowAsRefund
	// bool ShouldShowAsRefund();                                                                                               // [0x816e034] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortPurchaseOverlayModal.IsLastItem
	// bool IsLastItem(int32_t ItemIndex);                                                                                      // [0x964120c] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortPurchaseOverlayModal.InitBundleLayout
	// void InitBundleLayout();                                                                                                 // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortPurchaseOverlayModal.HasMultipleItems
	// bool HasMultipleItems();                                                                                                 // [0x9640838] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortPurchaseOverlayModal.GetQuantityPurchased
	// int32_t GetQuantityPurchased();                                                                                          // [0x963b4bc] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortPurchaseOverlayModal.GetPurchasedItems
	// TArray<FPurchasedItemInfo> GetPurchasedItems();                                                                          // [0x963b4a0] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortPurchaseOverlayModal.Dismiss
	// void Dismiss();                                                                                                          // [0x90d2b80] Final|Native|Protected|BlueprintCallable 
};

/// Class /Script/FortniteUI.FortPurchaseUnavailableModal
/// Size: 0x0010 (0x000570 - 0x000580)
class UFortPurchaseUnavailableModal : public UFortActivatablePanel
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1408;

public:
	CMember(UFortLazyImage*)                           Image_OfferIcon                                             OFFSET(get<T>, {0x570, 8, 0, 0})
	CMember(UCommonButtonLegacy*)                      Button_Confirm                                              OFFSET(get<T>, {0x578, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortPurchaseUnavailableModal.OnUpdateTextStyle
	// void OnUpdateTextStyle(FText& OfferDisplayName);                                                                         // [0x1d9241c] Event|Protected|HasOutParms|BlueprintEvent 
};

/// Class /Script/FortniteUI.FortRealMoneyOffer
/// Size: 0x0010 (0x001510 - 0x001520)
class UFortRealMoneyOffer : public UFortStoreFrontOfferWidgetBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 5408;

public:
	CMember(UClass*)                                   PurchaseUnavailableModalClass                               OFFSET(get<T>, {0x1510, 8, 0, 0})
	CMember(UClass*)                                   RealMoneyDetailsClass                                       OFFSET(get<T>, {0x1518, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortRealMoneyOffer.OnUpdateStorePrice
	// void OnUpdateStorePrice(FText& InStorePrice);                                                                            // [0x1d9241c] RequiredAPI|Event|Public|HasOutParms|BlueprintEvent 
	// Function /Script/FortniteUI.FortRealMoneyOffer.GetSalePriceFromLastAppStore
	// bool GetSalePriceFromLastAppStore(int32_t PriceIndex, FText& SalePrice, int32_t ItemQuantity);                           // [0x963bf74] Final|Native|Protected|HasOutParms|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/FortniteUI.FortRealMoneyOfferDetails
/// Size: 0x0098 (0x000830 - 0x0008C8)
class UFortRealMoneyOfferDetails : public UFortStoreFrontOfferDetailsWidgetBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 2248;

public:
	CMember(UWidget*)                                  ContentPurchaseFocusWidget                                  OFFSET(get<T>, {0x830, 8, 0, 0})
	SMember(FDataTableRowHandle)                       BackAction                                                  OFFSET(getStruct<T>, {0x838, 16, 0, 0})
	SMember(FDataTableRowHandle)                       PurchaseAction                                              OFFSET(getStruct<T>, {0x848, 16, 0, 0})
	SMember(FDataTableRowHandle)                       VBuckAction                                                 OFFSET(getStruct<T>, {0x858, 16, 0, 0})
	SMember(FDataTableRowHandle)                       ReloadMtxAction                                             OFFSET(getStruct<T>, {0x868, 16, 0, 0})
	CMember(UClass*)                                   ItemInspectScreenClass                                      OFFSET(get<T>, {0x878, 8, 0, 0})
	CMember(UFortCTAButton*)                           Button_Purchase                                             OFFSET(get<T>, {0x880, 8, 0, 0})
	CMember(UFortCTAButton*)                           Button_Purchase_STW                                         OFFSET(get<T>, {0x888, 8, 0, 0})
	CMember(UCommonButtonBase*)                        Button_SendGift                                             OFFSET(get<T>, {0x890, 8, 0, 0})
	CMember(UCommonButtonBase*)                        Button_Inspect                                              OFFSET(get<T>, {0x898, 8, 0, 0})
	CMember(UCommonButtonBase*)                        Button_TouchClose                                           OFFSET(get<T>, {0x8A0, 8, 0, 0})
	CMember(UCommonButtonBase*)                        Button_MTX                                                  OFFSET(get<T>, {0x8A8, 8, 0, 0})
	CMember(UWidget*)                                  Container_SimpleMTXDisplay                                  OFFSET(get<T>, {0x8B0, 8, 0, 0})
	CMember(UScrollBox*)                               ScrollBox_Details                                           OFFSET(get<T>, {0x8B8, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortRealMoneyOfferDetails.UpdatePurchaseBlocked
	// void UpdatePurchaseBlocked(bool bIsBlocked, FText& PurchaseNotAllowedReason);                                            // [0x1d9241c] Event|Protected|HasOutParms|BlueprintEvent 
	// Function /Script/FortniteUI.FortRealMoneyOfferDetails.ShowPurchasedOverlay
	// void ShowPurchasedOverlay(int32_t QuantityPurchased, TArray<FPurchasedItemInfo>& PurchasedItems, FString OfferId);       // [0x1d9241c] Event|Protected|HasOutParms|BlueprintEvent 
	// Function /Script/FortniteUI.FortRealMoneyOfferDetails.ShowPurchaseConfirmation
	// void ShowPurchaseConfirmation();                                                                                         // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortRealMoneyOfferDetails.ShowLegalTextInPopup
	// void ShowLegalTextInPopup(FText& ItemName, FText& LegalText);                                                            // [0x90d8ec8] Final|Native|Protected|HasOutParms|BlueprintCallable 
	// Function /Script/FortniteUI.FortRealMoneyOfferDetails.SetVBuckActionOnPurchaseButton
	// void SetVBuckActionOnPurchaseButton();                                                                                   // [0x9648800] Final|Native|Private|BlueprintCallable 
	// Function /Script/FortniteUI.FortRealMoneyOfferDetails.SetPurchaseActionOnPurchaseButton
	// void SetPurchaseActionOnPurchaseButton();                                                                                // [0x9646a0c] Final|Native|Private|BlueprintCallable 
	// Function /Script/FortniteUI.FortRealMoneyOfferDetails.SetMtxButtonVisible
	// void SetMtxButtonVisible(bool bVisible);                                                                                 // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortRealMoneyOfferDetails.SetCanPurchase
	// void SetCanPurchase(bool bInCanPurchase);                                                                                // [0x96459ac] Final|Native|Private|BlueprintCallable 
	// Function /Script/FortniteUI.FortRealMoneyOfferDetails.SendGift
	// void SendGift();                                                                                                         // [0x96422e8] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.FortRealMoneyOfferDetails.ResetPurchaseButtonText
	// void ResetPurchaseButtonText();                                                                                          // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortRealMoneyOfferDetails.RequestMtxPurchase
	// void RequestMtxPurchase();                                                                                               // [0x9641e80] Final|Native|Private|BlueprintCallable 
	// Function /Script/FortniteUI.FortRealMoneyOfferDetails.OnSendGiftComplete
	// void OnSendGiftComplete(bool bSuccess);                                                                                  // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortRealMoneyOfferDetails.IsGiftable
	// bool IsGiftable();                                                                                                       // [0x9640de8] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortRealMoneyOfferDetails.HandleOnInputMethodChanged
	// void HandleOnInputMethodChanged(ECommonInputType CommonInput);                                                           // [0x963fbb0] Final|Native|Private 
	// Function /Script/FortniteUI.FortRealMoneyOfferDetails.HandleMtxPurchaseComplete
	// void HandleMtxPurchaseComplete(bool bSuccess, TArray<FPurchasedItemInfo>& PurchasedItems, FString OfferId);              // [0x963f38c] Final|Native|Private|HasOutParms 
	// Function /Script/FortniteUI.FortRealMoneyOfferDetails.HandleItemPurchaseComplete
	// void HandleItemPurchaseComplete(bool bSuccess, TArray<FPurchasedItemInfo>& PurchasedItems, FString OfferId);             // [0x963eacc] Final|Native|Private|HasOutParms 
	// Function /Script/FortniteUI.FortRealMoneyOfferDetails.HandleBackAction
	// void HandleBackAction(bool& bPassThrough);                                                                               // [0x963de38] Final|Native|Private|HasOutParms 
	// Function /Script/FortniteUI.FortRealMoneyOfferDetails.GetSalePriceFromLastAppStore
	// bool GetSalePriceFromLastAppStore(int32_t PriceIndex, FText& SalePrice, int32_t ItemQuantity);                           // [0x963c100] Final|Native|Protected|HasOutParms|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortRealMoneyOfferDetails.GetPurchaseButtonCurrent
	// UFortCTAButton* GetPurchaseButtonCurrent();                                                                              // [0x963b47c] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortRealMoneyOfferDetails.DeclineMtxPurchase
	// void DeclineMtxPurchase();                                                                                               // [0x9635808] Final|Native|Private|BlueprintCallable 
	// Function /Script/FortniteUI.FortRealMoneyOfferDetails.ClearActionOnPurchaseButton
	// void ClearActionOnPurchaseButton();                                                                                      // [0x9634f50] Final|Native|Private|BlueprintCallable 
};

/// Class /Script/FortniteUI.FortSimpleMTXDisplay
/// Size: 0x0000 (0x0002E8 - 0x0002E8)
class UFortSimpleMTXDisplay : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 744;

public:
};

/// Class /Script/FortniteUI.FortStoreBanner
/// Size: 0x0008 (0x0002E8 - 0x0002F0)
class UFortStoreBanner : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 752;

public:
	CMember(UCommonTextBlock*)                         Text_BannerMessage                                          OFFSET(get<T>, {0x2E8, 8, 0, 0})
};

/// Class /Script/FortniteUI.FortStoreDisplayData
/// Size: 0x0080 (0x000030 - 0x0000B0)
class UFortStoreDisplayData : public UDataAsset
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 176;

public:
	CMember(TArray<FString>)                           AthenaRMTStorefrontNames                                    OFFSET(get<T>, {0x30, 16, 0, 0})
	CMember(TArray<FString>)                           CampaignRMTStorefrontNames                                  OFFSET(get<T>, {0x40, 16, 0, 0})
	SMember(FString)                                   RequiredTokenOfferMetaKey                                   OFFSET(getStruct<T>, {0x50, 16, 0, 0})
	SMember(FString)                                   GiftableOfferStorefront                                     OFFSET(getStruct<T>, {0x60, 16, 0, 0})
	CMember(TWeakObjectPtr<UClass*>)                   StandaloneMTXStoreClass                                     OFFSET(get<T>, {0x70, 32, 0, 0})
	CMember(TWeakObjectPtr<UClass*>)                   PlatformPurchaseErrorCodeModalClass                         OFFSET(get<T>, {0x90, 32, 0, 0})
};

/// Class /Script/FortniteUI.FortStoreRootBase
/// Size: 0x0008 (0x000538 - 0x000540)
class UFortStoreRootBase : public UCommonActivatablePanelLegacy
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1344;

public:
};

/// Class /Script/FortniteUI.FortVbucksStoreScreen
/// Size: 0x0028 (0x000488 - 0x0004B0)
class UFortVbucksStoreScreen : public UFortMtxStoreRootBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1200;

public:
	CMember(UDynamicEntryBox*)                         EntryBox_VBuckOffers                                        OFFSET(get<T>, {0x488, 8, 0, 0})
	CMember(UCommonRichTextBlock*)                     Text_OfferMessage                                           OFFSET(get<T>, {0x490, 8, 0, 0})
	CMember(UFortStoreBanner*)                         StoreBanner                                                 OFFSET(get<T>, {0x498, 8, 0, 0})
	CMember(UFortRealMoneyOffer*)                      LastSelectedOffer                                           OFFSET(get<T>, {0x4A0, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortVbucksStoreScreen.CanCalculateBonusPercent
	// bool CanCalculateBonusPercent();                                                                                         // [0x96781bc] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortVbucksStoreScreen.CalculateBonusPercent
	// float CalculateBonusPercent(UFortStoreFrontOfferInfo* OfferData);                                                        // [0x9678040] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/FortniteUI.FortWebPurchaseScreen
/// Size: 0x0028 (0x000538 - 0x000560)
class UFortWebPurchaseScreen : public UCommonActivatablePanelLegacy
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1376;

public:
	SMember(FPrimaryContentSetup)                      PrimaryContentSetup                                         OFFSET(getStruct<T>, {0x548, 3, 0, 0})
	CMember(UPanelWidget*)                             WebContent                                                  OFFSET(get<T>, {0x550, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortWebPurchaseScreen.Display
	// void Display(UWidget* WebWidget);                                                                                        // [0x967845c] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortWebPurchaseScreen.Dismiss
	// void Dismiss();                                                                                                          // [0x9678448] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortWebPurchaseScreen.CanShowTopBar
	// bool CanShowTopBar();                                                                                                    // [0x9678208] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortWebPurchaseScreen.CanShowChatWidget
	// bool CanShowChatWidget();                                                                                                // [0x96781f0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortWebPurchaseScreen.CanShowBottomBar
	// bool CanShowBottomBar();                                                                                                 // [0x96781d8] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/FortniteUI.FortAlterationButtonWidget
/// Size: 0x0010 (0x0014E0 - 0x0014F0)
class UFortAlterationButtonWidget : public UCommonButtonLegacy
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 5360;

public:
	CMember(UFortAlterationInfo*)                      AlterationInfo                                              OFFSET(get<T>, {0x14E0, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortAlterationButtonWidget.Setup
	// void Setup(UFortAlterationInfo* InAlterationInfo);                                                                       // [0x96801c8] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortAlterationButtonWidget.OnSetup
	// void OnSetup();                                                                                                          // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.FortAlterationButtonWidget.GetAlterationInfo
	// UFortAlterationInfo* GetAlterationInfo();                                                                                // [0x9678724] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/FortniteUI.FortAlterationInfo
/// Size: 0x0030 (0x000028 - 0x000058)
class UFortAlterationInfo : public UObject
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 88;

public:
	CMember(UFortItem*)                                CorrespondingItem                                           OFFSET(get<T>, {0x28, 8, 0, 0})
	DMember(int32_t)                                   SlotIndex                                                   OFFSET(get<int32_t>, {0x30, 4, 0, 0})
	CMember(UFortAlterationItemDefinition*)            AlterationDef                                               OFFSET(get<T>, {0x38, 8, 0, 0})
	DMember(int32_t)                                   RequiredMinLevel                                            OFFSET(get<int32_t>, {0x40, 4, 0, 0})
	DMember(bool)                                      bIsUpgrade                                                  OFFSET(get<bool>, {0x44, 1, 0, 0})
	DMember(int32_t)                                   CurrentItemLevel                                            OFFSET(get<int32_t>, {0x48, 4, 0, 0})
	DMember(bool)                                      bFreeAlterationSlot                                         OFFSET(get<bool>, {0x4C, 1, 0, 0})
	DMember(bool)                                      bUnlockedByEvolution                                        OFFSET(get<bool>, {0x4D, 1, 0, 0})
	DMember(int32_t)                                   UpgradeLevelDelta                                           OFFSET(get<int32_t>, {0x50, 4, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortAlterationInfo.IsFreeAlterationChoice
	// bool IsFreeAlterationChoice();                                                                                           // [0x8f31efc] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortAlterationInfo.IsAlterationUnlocked
	// bool IsAlterationUnlocked();                                                                                             // [0x967c1dc] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortAlterationInfo.IsAlterationHighlighted
	// bool IsAlterationHighlighted();                                                                                          // [0x967c1a0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortAlterationInfo.GetSlotIndex
	// int32_t GetSlotIndex();                                                                                                  // [0x597e460] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortAlterationInfo.GetRequiredLevel
	// int32_t GetRequiredLevel();                                                                                              // [0x2ef69d0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortAlterationInfo.GetRarity
	// EFortRarity GetRarity();                                                                                                 // [0x967ad98] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortAlterationInfo.GetCurrentPipCount
	// float GetCurrentPipCount(float MaxPips);                                                                                 // [0x9678d18] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortAlterationInfo.GetCorrespondingItem
	// UFortItem* GetCorrespondingItem();                                                                                       // [0x9678d00] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortAlterationInfo.GetAlterationDefintion
	// UFortAlterationItemDefinition* GetAlterationDefintion();                                                                 // [0x967870c] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/FortniteUI.FortAlterationsWidget
/// Size: 0x0110 (0x0002E8 - 0x0003F8)
class UFortAlterationsWidget : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1016;

public:
	CMember(UFortItem*)                                Item                                                        OFFSET(get<T>, {0x2E8, 8, 0, 0})
	CMember(EFortAlterationWidgetState)                State                                                       OFFSET(get<T>, {0x2F0, 1, 0, 0})
	CMember(UFortItem*)                                ItemToCompareWith                                           OFFSET(get<T>, {0x2F8, 8, 0, 0})
	DMember(bool)                                      bUseButtons                                                 OFFSET(get<bool>, {0x300, 1, 0, 0})
	CMember(UClass*)                                   AlterationWidgetClass                                       OFFSET(get<T>, {0x308, 8, 0, 0})
	CMember(UClass*)                                   AlterationButtonWidgetClass                                 OFFSET(get<T>, {0x310, 8, 0, 0})
	CMember(UCommonTextBlock*)                         EmptyText                                                   OFFSET(get<T>, {0x348, 8, 0, 0})
	CMember(UCommonButtonGroupLegacy*)                 ButtonGroup                                                 OFFSET(get<T>, {0x350, 8, 0, 0})
	SMember(FUserWidgetPool)                           EntryWidgetPool                                             OFFSET(getStruct<T>, {0x370, 136, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortAlterationsWidget.SetupInteractionEvents
	// void SetupInteractionEvents(UFortAlterationButtonWidget* Buttion);                                                       // [0x9680310] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortAlterationsWidget.SetUpgradeLevelDelta
	// void SetUpgradeLevelDelta(int32_t InUpgradeLevelDelta);                                                                  // [0x9680120] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortAlterationsWidget.SetState
	// void SetState(EFortAlterationWidgetState InState);                                                                       // [0x967fe00] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortAlterationsWidget.SetItemToCompareWith
	// void SetItemToCompareWith(UFortItem* InItem);                                                                            // [0x967fc60] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortAlterationsWidget.SetItem
	// void SetItem(UFortItem* InItem, bool bInPreviewNewAlterations, bool bIntroAlterations);                                  // [0x967fb54] Final|RequiredAPI|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortAlterationsWidget.ReleaseWidgets
	// void ReleaseWidgets();                                                                                                   // [0x967d5b8] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortAlterationsWidget.ProcessAlterations
	// void ProcessAlterations();                                                                                               // [0x967d184] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortAlterationsWidget.OnUpgradeLevelDeltaChanged
	// void OnUpgradeLevelDeltaChanged();                                                                                       // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.FortAlterationsWidget.OnStateChanged
	// void OnStateChanged();                                                                                                   // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.FortAlterationsWidget.OnItemToCompareWithChanged
	// void OnItemToCompareWithChanged();                                                                                       // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.FortAlterationsWidget.OnItemChanged
	// void OnItemChanged(bool bIntroAlterations, bool bWasFavoritedChanged);                                                   // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.FortAlterationsWidget.OnGenerateAlteration
	// void OnGenerateAlteration(UFortAlterationInfo* AlterationInfo);                                                          // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.FortAlterationsWidget.OnFocusFirstItem
	// void OnFocusFirstItem();                                                                                                 // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortAlterationsWidget.OnAlterationSlotIndexModifiedBP
	// void OnAlterationSlotIndexModifiedBP(int32_t ModifiedIndex);                                                             // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.FortAlterationsWidget.HandleAlterationsSlotSelected
	// void HandleAlterationsSlotSelected(UCommonButtonLegacy* InAlterationButton, int32_t SelectedIndex);                      // [0x967b9e8] Final|Native|Private 
	// Function /Script/FortniteUI.FortAlterationsWidget.HandleAlterationsSlotHovered
	// void HandleAlterationsSlotHovered(UCommonButtonLegacy* InAlterationButton, int32_t SelectedIndex);                       // [0x967b924] Final|Native|Private 
	// Function /Script/FortniteUI.FortAlterationsWidget.GetOrCreateWidget
	// UCommonUserWidget* GetOrCreateWidget();                                                                                  // [0x967a398] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/FortniteUI.FortAlterationWidget
/// Size: 0x0010 (0x0002E8 - 0x0002F8)
class UFortAlterationWidget : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 760;

public:
	DMember(float)                                     MaxPipCount                                                 OFFSET(get<float>, {0x2E8, 4, 0, 0})
	CMember(UFortAlterationInfo*)                      AlterationInfo                                              OFFSET(get<T>, {0x2F0, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortAlterationWidget.Setup
	// void Setup(UFortAlterationInfo* InAlterationInfo);                                                                       // [0x968026c] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortAlterationWidget.OnSetup
	// void OnSetup();                                                                                                          // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.FortAlterationWidget.GetAlterationInfo
	// UFortAlterationInfo* GetAlterationInfo();                                                                                // [0x967873c] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/FortniteUI.FortCampaignNewsPanel
/// Size: 0x0008 (0x000400 - 0x000408)
class UFortCampaignNewsPanel : public UCommonActivatableWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1032;

public:
	CMember(UFortCampaignNewsWidget*)                  NewsWidget_Main                                             OFFSET(get<T>, {0x400, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortCampaignNewsPanel.SendMotdInteractionAnalytic
	// void SendMotdInteractionAnalytic(FString Interaction);                                                                   // [0x967d6ec] Final|Native|Public|BlueprintCallable|Const 
	// Function /Script/FortniteUI.FortCampaignNewsPanel.OnExternalURLOpened
	// void OnExternalURLOpened();                                                                                              // [0x967cce8] Final|Native|Protected|BlueprintCallable 
};

/// Class /Script/FortniteUI.FortCampaignNewsPanel_Legacy
/// Size: 0x0008 (0x000570 - 0x000578)
class UFortCampaignNewsPanel_Legacy : public UFortActivatablePanel
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1400;

public:
	CMember(UFortCampaignNewsWidget*)                  NewsWidget_Main                                             OFFSET(get<T>, {0x570, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortCampaignNewsPanel_Legacy.SendMotdInteractionAnalytic
	// void SendMotdInteractionAnalytic(FString Interaction);                                                                   // [0x967d6ec] Final|Native|Public|BlueprintCallable|Const 
	// Function /Script/FortniteUI.FortCampaignNewsPanel_Legacy.OnExternalURLOpened
	// void OnExternalURLOpened();                                                                                              // [0x967cce8] Final|Native|Protected|BlueprintCallable 
};

/// Class /Script/FortniteUI.FortCampaignNewsTile
/// Size: 0x0028 (0x0002E8 - 0x000310)
class UFortCampaignNewsTile : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 784;

public:
	CMember(UEpicCMSImage*)                            CMSImage_NewsImage                                          OFFSET(get<T>, {0x2E8, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_NewsTitle                                              OFFSET(get<T>, {0x2F0, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_NewsBody                                               OFFSET(get<T>, {0x2F8, 8, 0, 0})
	CMember(UCommonBorder*)                            Border_AdSpace                                              OFFSET(get<T>, {0x300, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_AdSpace                                                OFFSET(get<T>, {0x308, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortCampaignNewsTile.SetDefaultImage
	// void SetDefaultImage();                                                                                                  // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.FortCampaignNewsTile.PlayIntroAnim
	// void PlayIntroAnim();                                                                                                    // [0x1d9241c] Event|Public|BlueprintEvent 
};

/// Class /Script/FortniteUI.FortCampaignNewsWidget
/// Size: 0x0060 (0x0002E8 - 0x000348)
class UFortCampaignNewsWidget : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 840;

public:
	CMember(UClass*)                                   NewsTileClass                                               OFFSET(get<T>, {0x2E8, 8, 0, 0})
	CMember(UClass*)                                   SpotlightNewsTileClass                                      OFFSET(get<T>, {0x2F0, 8, 0, 0})
	CMember(UClass*)                                   SpecialEventNewsTileClass                                   OFFSET(get<T>, {0x2F8, 8, 0, 0})
	CMember(UClass*)                                   SpotlightSpecialEventNewsTileClass                          OFFSET(get<T>, {0x300, 8, 0, 0})
	CMember(UClass*)                                   SpecialEvent2NewsTileClass                                  OFFSET(get<T>, {0x308, 8, 0, 0})
	CMember(UClass*)                                   SpotlightSpecialEvent2NewsTileClass                         OFFSET(get<T>, {0x310, 8, 0, 0})
	CMember(TArray<UFortCampaignNewsTile*>)            NewsTiles                                                   OFFSET(get<T>, {0x318, 16, 0, 0})
	CMember(UCommonTextBlock*)                         CommonText_NewsHeader                                       OFFSET(get<T>, {0x328, 8, 0, 0})
	CMember(UScrollBox*)                               ScrollBox_NewsContainer                                     OFFSET(get<T>, {0x330, 8, 0, 0})
	CMember(UHorizontalBox*)                           HorizontalBox_NewsContainer                                 OFFSET(get<T>, {0x338, 8, 0, 0})
	CMember(UVerticalBox*)                             VerticalBox_SpotlightNewsContainer                          OFFSET(get<T>, {0x340, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortCampaignNewsWidget.SingleItemConfiguration
	// void SingleItemConfiguration();                                                                                          // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.FortCampaignNewsWidget.ResetViewConfiguration
	// void ResetViewConfiguration();                                                                                           // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.FortCampaignNewsWidget.PlayNewsTilesIntro
	// void PlayNewsTilesIntro();                                                                                               // [0x967cd24] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.FortCampaignNewsWidget.LogMotDLobbyNavAction
	// void LogMotDLobbyNavAction();                                                                                            // [0x967ca28] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortCampaignNewsWidget.LogMotDCloseAction
	// void LogMotDCloseAction();                                                                                               // [0x967ca14] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortCampaignNewsWidget.HandleNewsStyle
	// void HandleNewsStyle(EAthenaNewsStyle NewsStyle);                                                                        // [0x1d9241c] Event|Public|BlueprintEvent 
};

/// Class /Script/FortniteUI.FortDisableAutoSlottingPromptAction
/// Size: 0x0020 (0x000028 - 0x000048)
class UFortDisableAutoSlottingPromptAction : public UObject
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 72;

public:
	CMember(TWeakObjectPtr<APlayerController*>)        OwningPlayerController                                      OFFSET(get<T>, {0x28, 8, 0, 0})
	CMember(TWeakObjectPtr<UGameInstance*>)            RegisteredWithGameInstance                                  OFFSET(get<T>, {0x40, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortDisableAutoSlottingPromptAction.Execute
	// void Execute();                                                                                                          // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortDisableAutoSlottingPromptAction.CompleteExecution
	// void CompleteExecution(EFortDialogResult Result, FName ResultName);                                                      // [0x9678220] Final|Native|Protected|BlueprintCallable 
};

/// Class /Script/FortniteUI.FortHomebaseUIContext
/// Size: 0x0118 (0x000030 - 0x000148)
class UFortHomebaseUIContext : public UBlueprintContextBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 328;

public:
	SMember(FMulticastInlineDelegate)                  OnShouldAutoSlotSurvivorSquadsChanged                       OFFSET(getStruct<T>, {0x30, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnSquadSlotChanged                                          OFFSET(getStruct<T>, {0x40, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnSurvivorSquadsAutoSlotted                                 OFFSET(getStruct<T>, {0x50, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnNodePurchased                                             OFFSET(getStruct<T>, {0x60, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnSlottedPrimaryHeroChanged                                 OFFSET(getStruct<T>, {0x70, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnDifferentHeroLoadoutViewed                                OFFSET(getStruct<T>, {0x80, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnDifferentHeroLoadoutSlotFocused                           OFFSET(getStruct<T>, {0x90, 16, 0, 0})
	CMember(TWeakObjectPtr<UDataTable*>)               SquadIconDataTableAsset                                     OFFSET(get<T>, {0xA0, 32, 0, 0})
	CMember(TMap<UFortGadgetItemDefinition*, UFortWorldItem*>) GadgetDefinitionToInstanceMap                       OFFSET(get<T>, {0xF8, 80, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortHomebaseUIContext.SetShouldAutoSlotSurvivorSquads
	// void SetShouldAutoSlotSurvivorSquads(bool Value);                                                                        // [0x967fd00] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortHomebaseUIContext.SetCurrentlyViewedHeroLoadout
	// void SetCurrentlyViewedHeroLoadout(UFortCampaignHeroLoadoutItem* Loadout);                                               // [0x967f958] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortHomebaseUIContext.SetCurrentlyFocusedHeroLoadoutSlotName
	// void SetCurrentlyFocusedHeroLoadoutSlotName(FName& SlotName);                                                            // [0x967f8b0] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/FortniteUI.FortHomebaseUIContext.OnSurvivorSquadsAutoSlotted__DelegateSignature
	// void OnSurvivorSquadsAutoSlotted__DelegateSignature();                                                                   // [0x1d9241c] MulticastDelegate|Public|Delegate 
	// Function /Script/FortniteUI.FortHomebaseUIContext.OnSquadSlotChanged__DelegateSignature
	// void OnSquadSlotChanged__DelegateSignature(FName SquadName, int32_t SlotIndex);                                          // [0x1d9241c] MulticastDelegate|Public|Delegate 
	// Function /Script/FortniteUI.FortHomebaseUIContext.OnSlottedPrimaryHeroChanged__DelegateSignature
	// void OnSlottedPrimaryHeroChanged__DelegateSignature();                                                                   // [0x1d9241c] MulticastDelegate|Public|Delegate 
	// Function /Script/FortniteUI.FortHomebaseUIContext.OnShouldAutoSlotSurvivorSquadsChanged__DelegateSignature
	// void OnShouldAutoSlotSurvivorSquadsChanged__DelegateSignature();                                                         // [0x1d9241c] MulticastDelegate|Public|Delegate 
	// Function /Script/FortniteUI.FortHomebaseUIContext.OnNodesPurchased__DelegateSignature
	// void OnNodesPurchased__DelegateSignature(FName NodeId);                                                                  // [0x1d9241c] MulticastDelegate|Public|Delegate 
	// Function /Script/FortniteUI.FortHomebaseUIContext.OnDifferentHeroLoadoutViewed__DelegateSignature
	// void OnDifferentHeroLoadoutViewed__DelegateSignature(UFortCampaignHeroLoadoutItem* PreviousLoadout, UFortCampaignHeroLoadoutItem* NewLoadout); // [0x1d9241c] MulticastDelegate|Public|Delegate 
	// Function /Script/FortniteUI.FortHomebaseUIContext.OnDifferentHeroLoadoutSlotFocused__DelegateSignature
	// void OnDifferentHeroLoadoutSlotFocused__DelegateSignature(FName SlotName);                                               // [0x1d9241c] MulticastDelegate|Public|Delegate 
	// Function /Script/FortniteUI.FortHomebaseUIContext.IsHeroLoadoutSlotUnlocked
	// bool IsHeroLoadoutSlotUnlocked(FName& SlotName, UFortCampaignHeroLoadoutItem* Loadout);                                  // [0x967c2c4] Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortHomebaseUIContext.IsAnySquadSlotUnlocked
	// bool IsAnySquadSlotUnlocked(FName SquadId);                                                                              // [0x967c208] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortHomebaseUIContext.HandleDifferentHeroLoadoutActivated
	// void HandleDifferentHeroLoadoutActivated(UFortMcpProfileCampaign* Profile);                                              // [0x967bd80] Final|Native|Private 
	// Function /Script/FortniteUI.FortHomebaseUIContext.GetWorkerSetBonusEffectModifiers
	// void GetWorkerSetBonusEffectModifiers(FGameplayTag& SetBonusTag, TArray<FFortAttributeModifierDisplayData>& OutModifiers); // [0x967b6b8] Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortHomebaseUIContext.GetUnlockingQuestDefinitionForSquadSlot
	// UFortQuestItemDefinition* GetUnlockingQuestDefinitionForSquadSlot(FName& SquadName, int32_t SlotIndex);                  // [0x967b580] Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortHomebaseUIContext.GetUnlockingQuestDefinitionForHeroLoadoutSlot
	// UFortQuestItemDefinition* GetUnlockingQuestDefinitionForHeroLoadoutSlot(FName& SlotName, UFortCampaignHeroLoadoutItem* Loadout); // [0x967b398] Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortHomebaseUIContext.GetUnlockedGadgets
	// bool GetUnlockedGadgets(TArray<UFortItem*>& UnlockedGadgets);                                                            // [0x967b2ec] Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortHomebaseUIContext.GetSquadIcon
	// FFortMultiSizeBrush GetSquadIcon(FName SquadId);                                                                         // [0x967b070] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortHomebaseUIContext.GetSlottedPrimaryHero
	// UFortHero* GetSlottedPrimaryHero();                                                                                      // [0x967afb8] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortHomebaseUIContext.GetShouldAutoSlotSurvivorSquads
	// bool GetShouldAutoSlotSurvivorSquads();                                                                                  // [0x967af94] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortHomebaseUIContext.GetItemsInSquad
	// TArray<UFortItem*> GetItemsInSquad(FName SquadId, bool bRemoveEmptySquadSlots);                                          // [0x967a1a0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortHomebaseUIContext.GetItemInSquadSlot
	// UFortItem* GetItemInSquadSlot(FName SquadName, int32_t SlotIndex);                                                       // [0x967a0e0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortHomebaseUIContext.GetCurrentlyViewedHeroLoadout
	// UFortCampaignHeroLoadoutItem* GetCurrentlyViewedHeroLoadout();                                                           // [0x9678f0c] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortHomebaseUIContext.GetCurrentlyFocusedHeroLoadoutSlotName
	// FName GetCurrentlyFocusedHeroLoadoutSlotName();                                                                          // [0x5fe4000] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortHomebaseUIContext.GetCollectionBookData
	// UFortCollectionBookData* GetCollectionBookData();                                                                        // [0x9678c44] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortHomebaseUIContext.AutoSlotAllSurvivorSquads
	// void AutoSlotAllSurvivorSquads();                                                                                        // [0x9678018] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/FortniteUI.FortDefenderConfigPanel
/// Size: 0x0028 (0x000538 - 0x000560)
class UFortDefenderConfigPanel : public UCommonActivatablePanelLegacy
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1376;

public:
	CMember(TWeakObjectPtr<UFortItem*>)                SelectedDefenderItem                                        OFFSET(get<T>, {0x538, 8, 0, 0})
	CMember(TWeakObjectPtr<UFortItem*>)                SelectedWeaponItem                                          OFFSET(get<T>, {0x540, 8, 0, 0})
	CMember(TWeakObjectPtr<UFortItem*>)                SelectedAmmoItem                                            OFFSET(get<T>, {0x548, 8, 0, 0})
	DMember(int32_t)                                   SelectedAmmoQuantity                                        OFFSET(get<int32_t>, {0x550, 4, 0, 0})
	CMember(TWeakObjectPtr<ABuildingTrapDefender*>)    DefenderTrap                                                OFFSET(get<T>, {0x554, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortDefenderConfigPanel.UnsummonDefender
	// bool UnsummonDefender();                                                                                                 // [0x9680644] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortDefenderConfigPanel.SpawnDefender
	// bool SpawnDefender();                                                                                                    // [0x9680514] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortDefenderConfigPanel.IsWeaponSelectionValid
	// bool IsWeaponSelectionValid();                                                                                           // [0x967c938] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortDefenderConfigPanel.HasWeaponForSelectedDefender
	// bool HasWeaponForSelectedDefender();                                                                                     // [0x967c144] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortDefenderConfigPanel.HasAnyDefenders
	// bool HasAnyDefenders();                                                                                                  // [0x967c120] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortDefenderConfigPanel.GetSourceSchematic
	// UFortSchematicItemDefinition* GetSourceSchematic(UFortWorldItemDefinition* ItemDefUsedForCrafting);                      // [0x967afdc] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortDefenderConfigPanel.GetSelectedDefenderPawn
	// AFortAIPawn* GetSelectedDefenderPawn();                                                                                  // [0x967af4c] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortDefenderConfigPanel.GetDefenderPawnWeaponItem
	// UFortWorldItem* GetDefenderPawnWeaponItem(AFortAIPawn* DefenderPawn);                                                    // [0x9678f30] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortDefenderConfigPanel.GetCompatibleAmmoDef
	// UFortWorldItemDefinition* GetCompatibleAmmoDef();                                                                        // [0x9678cb8] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortDefenderConfigPanel.GetCompatibleAmmo
	// UFortWorldItem* GetCompatibleAmmo();                                                                                     // [0x9678c70] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortDefenderConfigPanel.GetAmmoCountFromPlayer
	// int32_t GetAmmoCountFromPlayer(UFortWorldItemDefinition* AmmoItemDef);                                                   // [0x967891c] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortDefenderConfigPanel.GetAmmoCountFromDefender
	// int32_t GetAmmoCountFromDefender(UFortWorldItemDefinition* AmmoItemDef);                                                 // [0x9678754] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/FortniteUI.FortDefenderConfigPanel_STW
/// Size: 0x0078 (0x000400 - 0x000478)
class UFortDefenderConfigPanel_STW : public UCommonActivatableWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1144;

public:
	CMember(TWeakObjectPtr<UFortItem*>)                SelectedDefenderItem                                        OFFSET(get<T>, {0x450, 8, 0, 0})
	CMember(TWeakObjectPtr<UFortItem*>)                SelectedWeaponItem                                          OFFSET(get<T>, {0x458, 8, 0, 0})
	CMember(TWeakObjectPtr<UFortItem*>)                SelectedAmmoItem                                            OFFSET(get<T>, {0x460, 8, 0, 0})
	DMember(int32_t)                                   SelectedAmmoQuantity                                        OFFSET(get<int32_t>, {0x468, 4, 0, 0})
	CMember(TWeakObjectPtr<ABuildingTrapDefender*>)    DefenderTrap                                                OFFSET(get<T>, {0x46C, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortDefenderConfigPanel_STW.UnsummonDefender
	// bool UnsummonDefender();                                                                                                 // [0x96806e4] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortDefenderConfigPanel_STW.SpawnDefender
	// bool SpawnDefender();                                                                                                    // [0x9680538] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortDefenderConfigPanel_STW.RegisterInputAction
	// void RegisterInputAction(FDataTableRowHandle InputActionRow, FDelegateProperty CommittedEvent);                          // [0x967d314] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortDefenderConfigPanel_STW.IsWeaponSelectionValid
	// bool IsWeaponSelectionValid();                                                                                           // [0x967c95c] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortDefenderConfigPanel_STW.HasWeaponForSelectedDefender
	// bool HasWeaponForSelectedDefender();                                                                                     // [0x967c168] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortDefenderConfigPanel_STW.HasAnyDefenders
	// bool HasAnyDefenders();                                                                                                  // [0x967c120] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortDefenderConfigPanel_STW.GetSourceSchematic
	// UFortSchematicItemDefinition* GetSourceSchematic(UFortWorldItemDefinition* ItemDefUsedForCrafting);                      // [0x967afdc] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortDefenderConfigPanel_STW.GetSelectedDefenderPawn
	// AFortAIPawn* GetSelectedDefenderPawn();                                                                                  // [0x967af70] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortDefenderConfigPanel_STW.GetDefenderPawnWeaponItem
	// UFortWorldItem* GetDefenderPawnWeaponItem(AFortAIPawn* DefenderPawn);                                                    // [0x9678f30] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortDefenderConfigPanel_STW.GetCompatibleAmmoDef
	// UFortWorldItemDefinition* GetCompatibleAmmoDef();                                                                        // [0x9678cdc] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortDefenderConfigPanel_STW.GetCompatibleAmmo
	// UFortWorldItem* GetCompatibleAmmo();                                                                                     // [0x9678c94] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortDefenderConfigPanel_STW.GetAmmoCountFromPlayer
	// int32_t GetAmmoCountFromPlayer(UFortWorldItemDefinition* AmmoItemDef);                                                   // [0x967891c] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortDefenderConfigPanel_STW.GetAmmoCountFromDefender
	// int32_t GetAmmoCountFromDefender(UFortWorldItemDefinition* AmmoItemDef);                                                 // [0x9678838] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortDefenderConfigPanel_STW.EnableInputAction
	// void EnableInputAction(FDataTableRowHandle InputActionRow);                                                              // [0x96784dc] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortDefenderConfigPanel_STW.DisableInputAction
	// void DisableInputAction(FDataTableRowHandle InputActionRow);                                                             // [0x96782e4] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/FortniteUI.FortDefenderItemTileButton
/// Size: 0x0000 (0x001520 - 0x001520)
class UFortDefenderItemTileButton : public UFortItemTileButton
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 5408;

public:
};

/// Class /Script/FortniteUI.FortDefenderItemTileView
/// Size: 0x0000 (0x000D70 - 0x000D70)
class UFortDefenderItemTileView : public UFortItemTileView
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 3440;

public:
};

/// Class /Script/FortniteUI.FortDefenderItemTileView_STW
/// Size: 0x0000 (0x000D70 - 0x000D70)
class UFortDefenderItemTileView_STW : public UFortItemTileView
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 3440;

public:
};

/// Class /Script/FortniteUI.FortDefenderSlotButton
/// Size: 0x0000 (0x0014E0 - 0x0014E0)
class UFortDefenderSlotButton : public UCommonButtonLegacy
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 5344;

public:
};

/// Class /Script/FortniteUI.FortDefenderSlotItemPicker
/// Size: 0x0020 (0x000420 - 0x000440)
class UFortDefenderSlotItemPicker : public UFortItemPickerBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1088;

public:
	CMember(EFortDefenderSlotType)                     DefenderSlotType                                            OFFSET(get<T>, {0x420, 1, 0, 0})
	CMember(TArray<EInventoryContentSortType>)         SortTypesList                                               OFFSET(get<T>, {0x428, 16, 0, 0})
	CMember(EInventoryContentSortType)                 CurrentSortType                                             OFFSET(get<T>, {0x438, 1, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortDefenderSlotItemPicker.SetSortType
	// void SetSortType(EInventoryContentSortType SortType);                                                                    // [0x967fd80] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.FortDefenderSlotItemPicker.PopulateDefenderSlotItems
	// void PopulateDefenderSlotItems(UFortDefenderItem* DefenderItem);                                                         // [0x967cda0] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortDefenderSlotItemPicker.OnCurrentSortTypeChanged
	// void OnCurrentSortTypeChanged(EInventoryContentSortType SortType);                                                       // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortDefenderSlotItemPicker.NextSortType
	// void NextSortType();                                                                                                     // [0x967cbb0] Final|Native|Protected|BlueprintCallable 
};

/// Class /Script/FortniteUI.FortDefenderSlotView
/// Size: 0x0000 (0x0002E8 - 0x0002E8)
class UFortDefenderSlotView : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 744;

public:
};

/// Class /Script/FortniteUI.FortDefenderSlotWidget
/// Size: 0x0000 (0x0002E8 - 0x0002E8)
class UFortDefenderSlotWidget : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 744;

public:
};

/// Class /Script/FortniteUI.FortTrapDefenderItemPicker
/// Size: 0x0070 (0x000420 - 0x000490)
class UFortTrapDefenderItemPicker : public UFortItemPickerBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1168;

public:
	CMember(UFortItemDetailsHostPanel*)                DetailsPanel                                                OFFSET(get<T>, {0x420, 8, 0, 0})
	CMember(TWeakObjectPtr<ABuildingTrapDefender*>)    DefenderTrap                                                OFFSET(get<T>, {0x428, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortTrapDefenderItemPicker.HandleSelectionCommittedBP
	// void HandleSelectionCommittedBP(UFortItem* CommittedItem);                                                               // [0x1d9241c] Event|Protected|BlueprintEvent 
};

/// Class /Script/FortniteUI.FortBluGloCounter
/// Size: 0x0008 (0x0002D0 - 0x0002D8)
class UFortBluGloCounter : public UFortUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 728;

public:
};

/// Class /Script/FortniteUI.FortCampaignMatchmakingBase
/// Size: 0x0010 (0x0002E8 - 0x0002F8)
class UFortCampaignMatchmakingBase : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 760;

public:
};

/// Class /Script/FortniteUI.FortCampaignMinimap
/// Size: 0x0010 (0x000178 - 0x000188)
class UFortCampaignMinimap : public UWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 392;

public:
	SMember(FVector2D)                                 DesiredSize                                                 OFFSET(getStruct<T>, {0x178, 16, 0, 0})
};

/// Class /Script/FortniteUI.FortCraftingBarWidget
/// Size: 0x0028 (0x000328 - 0x000350)
class UFortCraftingBarWidget : public UFortHUDElementWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 848;

public:
	CMember(UCommonTextBlock*)                         CraftingText                                                OFFSET(get<T>, {0x328, 8, 0, 0})
	CMember(UProgressBar*)                             CraftingProgressBar                                         OFFSET(get<T>, {0x330, 8, 0, 0})
	DMember(float)                                     CompletedRemainVisibleTime                                  OFFSET(get<float>, {0x338, 4, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortCraftingBarWidget.SetHideCraftingBar
	// void SetHideCraftingBar(bool bInHideCraftBar);                                                                           // [0x967fa58] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortCraftingBarWidget.OnCompletedSetHidden
	// void OnCompletedSetHidden();                                                                                             // [0x967cc1c] Final|Native|Protected 
	// Function /Script/FortniteUI.FortCraftingBarWidget.HandlePlayerStoppedCrafting
	// void HandlePlayerStoppedCrafting(bool bSuccess, EFortCraftFailCause CraftFailureCause);                                  // [0x967c010] Final|Native|Protected 
	// Function /Script/FortniteUI.FortCraftingBarWidget.HandlePlayerStartedCrafting
	// void HandlePlayerStartedCrafting();                                                                                      // [0x967bffc] Final|Native|Protected 
};

/// Class /Script/FortniteUI.FortPerksWidget_NUI
/// Size: 0x0098 (0x0002E8 - 0x000380)
class UFortPerksWidget_NUI : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 896;

public:
	CMember(UFortHero*)                                Hero                                                        OFFSET(get<T>, {0x2E8, 8, 0, 0})
	CMember(EFortPerksWidgetState)                     State                                                       OFFSET(get<T>, {0x2F0, 1, 0, 0})
	CMember(UFortHero*)                                EvolutionOption                                             OFFSET(get<T>, {0x2F8, 8, 0, 0})
	CMember(UClass*)                                   PerkTierWidgetType                                          OFFSET(get<T>, {0x300, 8, 0, 0})
	CMember(UClass*)                                   PerkWidgetType                                              OFFSET(get<T>, {0x308, 8, 0, 0})
	CMember(UFortTooltipContext*)                      TooltipContext                                              OFFSET(get<T>, {0x310, 8, 0, 0})
	CMember(UCommonLoadGuard*)                         PerksListLoadGuard                                          OFFSET(get<T>, {0x318, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortPerksWidget_NUI.SetState
	// void SetState(EFortPerksWidgetState InState, UFortHero* InEvolutionOption);                                              // [0x967fea8] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortPerksWidget_NUI.SetHero
	// void SetHero(UFortHero* InHero);                                                                                         // [0x967f9d8] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortPerksWidget_NUI.ProcessPerkTiers
	// void ProcessPerkTiers();                                                                                                 // [0x967d198] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortPerksWidget_NUI.ProcessPerks
	// void ProcessPerks();                                                                                                     // [0x967d1c0] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortPerksWidget_NUI.ProcessActiveAbilityPerksAsync
	// void ProcessActiveAbilityPerksAsync();                                                                                   // [0x967d16c] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortPerksWidget_NUI.OnStateChanged
	// void OnStateChanged();                                                                                                   // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.FortPerksWidget_NUI.OnHeroChanged
	// void OnHeroChanged();                                                                                                    // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.FortPerksWidget_NUI.OnGeneratePerkTier
	// void OnGeneratePerkTier(FFortUIPerkTier FortPerkTier, UFortPerkTierWidget_NUI* PerkTierWidget);                          // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.FortPerksWidget_NUI.OnGeneratePerk
	// void OnGeneratePerk(FFortUIPerk FortPerk, UFortPerkWidget_NUI* PerkWidget);                                              // [0x1d9241c] Event|Public|BlueprintEvent 
};

/// Class /Script/FortniteUI.FortPerkTierWidget_NUI
/// Size: 0x0048 (0x0002E8 - 0x000330)
class UFortPerkTierWidget_NUI : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 816;

public:
	SMember(FFortUIPerkTier)                           FortPerkTier                                                OFFSET(getStruct<T>, {0x2F0, 24, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortPerkTierWidget_NUI.ProcessPerks
	// void ProcessPerks();                                                                                                     // [0x967d1ac] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortPerkTierWidget_NUI.OnGeneratePerk
	// void OnGeneratePerk(FFortUIPerk Perk, UFortPerkWidget_NUI* PerkWidget);                                                  // [0x1d9241c] Event|Public|BlueprintEvent 
};

/// Class /Script/FortniteUI.FortPerkWidget_NUI
/// Size: 0x00C0 (0x0002E8 - 0x0003A8)
class UFortPerkWidget_NUI : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 936;

public:
	SMember(FFortUIPerk)                               Perk                                                        OFFSET(getStruct<T>, {0x2F0, 136, 0, 0})
	CMember(UFortTooltipContext*)                      CachedTooltipContext                                        OFFSET(get<T>, {0x380, 8, 0, 0})
	DMember(bool)                                      bShouldUseSummaryTooltip                                    OFFSET(get<bool>, {0x39A, 1, 0, 0})
	CMember(UFortTooltipLoadingWrapper*)               CachedTooltipLoadingWrapper                                 OFFSET(get<T>, {0x3A0, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortPerkWidget_NUI.SetTooltipContext
	// void SetTooltipContext(UFortTooltipContext* InTooltipContext);                                                           // [0x96800a0] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortPerkWidget_NUI.RequestTooltipDescription
	// void RequestTooltipDescription();                                                                                        // [0x967d664] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortPerkWidget_NUI.RequestCombinedTooltipDescription
	// void RequestCombinedTooltipDescription();                                                                                // [0x967d5f0] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortPerkWidget_NUI.OnTooltipDescriptionReady
	// void OnTooltipDescriptionReady(TArray<FText>& DescriptionList);                                                          // [0x1d9241c] Event|Public|HasOutParms|BlueprintEvent 
	// Function /Script/FortniteUI.FortPerkWidget_NUI.OnPerkUpdated
	// void OnPerkUpdated();                                                                                                    // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.FortPerkWidget_NUI.OnCombinedTooltipDescriptionReady
	// void OnCombinedTooltipDescriptionReady(FText& Description);                                                              // [0x1d9241c] Event|Public|HasOutParms|BlueprintEvent 
	// Function /Script/FortniteUI.FortPerkWidget_NUI.IsTierPerk
	// bool IsTierPerk();                                                                                                       // [0x967c920] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortPerkWidget_NUI.IsPerkUnlocked
	// bool IsPerkUnlocked();                                                                                                   // [0x967c72c] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortPerkWidget_NUI.IsPerkHighlighted
	// bool IsPerkHighlighted();                                                                                                // [0x967c708] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortPerkWidget_NUI.IsPerkEmpty
	// bool IsPerkEmpty();                                                                                                      // [0x967c6c0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortPerkWidget_NUI.HasAbility
	// bool HasAbility();                                                                                                       // [0x967c0d4] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortPerkWidget_NUI.HandleAbilityKitTooltipLoaded
	// void HandleAbilityKitTooltipLoaded();                                                                                    // [0x967b8fc] Final|Native|Protected 
	// Function /Script/FortniteUI.FortPerkWidget_NUI.GetTooltipTitle
	// FText GetTooltipTitle();                                                                                                 // [0x967b280] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortPerkWidget_NUI.GetTooltipContext
	// UFortTooltipContext* GetTooltipContext();                                                                                // [0x967b25c] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortPerkWidget_NUI.GetSupportBonusType
	// EFortSupportBonusType GetSupportBonusType();                                                                             // [0x967b1b4] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortPerkWidget_NUI.GetRequiredLevel
	// int32_t GetRequiredLevel();                                                                                              // [0x967adbc] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortPerkWidget_NUI.GetPerkTier
	// EFortItemTier GetPerkTier();                                                                                             // [0x967a3dc] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortPerkWidget_NUI.GetIcon
	// bool GetIcon(FSlateBrush& Brush);                                                                                        // [0x967a030] Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/FortniteUI.FortUIRewardReport
/// Size: 0x0010 (0x000028 - 0x000038)
class UFortUIRewardReport : public UObject
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 56;

public:
	CMember(UFortLocalPlayer*)                         LocalPlayer                                                 OFFSET(get<T>, {0x28, 8, 0, 0})
	DMember(int32_t)                                   RewardDisplayLevel                                          OFFSET(get<int32_t>, {0x30, 4, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortUIRewardReport.GetRewardedChestIndex
	// int32_t GetRewardedChestIndex();                                                                                         // [0x597e460] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/FortniteUI.FortUIScoreReport
/// Size: 0x0008 (0x000028 - 0x000030)
class UFortUIScoreReport : public UObject
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 48;

public:
	CMember(UFortLocalPlayer*)                         LocalPlayer                                                 OFFSET(get<T>, {0x28, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortUIScoreReport.IsLocalPlayer
	// bool IsLocalPlayer(int32_t ScoreReportIndex);                                                                            // [0x967c588] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortUIScoreReport.GetXpToCompleteLevel
	// int32_t GetXpToCompleteLevel(int32_t Level);                                                                             // [0x967b880] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortUIScoreReport.GetXpInfo
	// bool GetXpInfo(int32_t ScoreReportIndex, FFortUIXpInfo& OutXpInfo);                                                      // [0x967b7a0] Final|RequiredAPI|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortUIScoreReport.GetTeamScore
	// int32_t GetTeamScore(TEnumAsByte<EFortUIScoreType> ScoreType);                                                           // [0x967b1cc] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortUIScoreReport.GetScoreReportIndicesByPlayerID
	// void GetScoreReportIndicesByPlayerID(TArray<int32_t>& SortedScoreReportIndices);                                         // [0x967aeb0] Final|RequiredAPI|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortUIScoreReport.GetScoreReportIndex
	// int32_t GetScoreReportIndex(FUniqueNetIdRepl& PlayerId);                                                                 // [0x967addc] Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortUIScoreReport.GetPlayerScore
	// int32_t GetPlayerScore(int32_t ScoreReportIndex, TEnumAsByte<EFortUIScoreType> ScoreType);                               // [0x967acd4] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortUIScoreReport.GetPlayerPlatform
	// FString GetPlayerPlatform(int32_t ScoreReportIndex);                                                                     // [0x967a5f4] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortUIScoreReport.GetPlayerName
	// FText GetPlayerName(int32_t ScoreReportIndex);                                                                           // [0x967a544] Final|RequiredAPI|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortUIScoreReport.GetPlayerIDFromScoreReportIndex
	// void GetPlayerIDFromScoreReportIndex(int32_t ScoreReportIndex, FUniqueNetIdRepl& OutUniqueNetIdRepl);                    // [0x967a414] Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortUIScoreReport.GetPlayerCount
	// int32_t GetPlayerCount();                                                                                                // [0x967a3f4] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortUIScoreReport.GetLevelProgress
	// float GetLevelProgress(int32_t Level, int32_t DisplayXp);                                                                // [0x967a2d4] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortUIScoreReport.GetDifficultBonusScore
	// int32_t GetDifficultBonusScore();                                                                                        // [0x967902c] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortUIScoreReport.GetDifficultBonusMultiplier
	// float GetDifficultBonusMultiplier();                                                                                     // [0x9679004] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortUIScoreReport.GetCurrentPlayerState
	// AFortPlayerState* GetCurrentPlayerState(int32_t ScoreReportIndex);                                                       // [0x9678e54] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortUIScoreReport.GetCurrentPlayerPawn
	// AFortPlayerPawn* GetCurrentPlayerPawn(int32_t ScoreReportIndex);                                                         // [0x9678dc8] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortUIScoreReport.GetBadgeScore
	// int32_t GetBadgeScore(UFortItem* BadgeItem);                                                                             // [0x9678b1c] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/FortniteUI.FortWeaponBoardBase
/// Size: 0x0040 (0x000290 - 0x0002D0)
class AFortWeaponBoardBase : public AActor
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 720;

public:
	CMember(TArray<FFortWeaponBoardDisplaySlot>)       RangedWeaponDisplaySlots                                    OFFSET(get<T>, {0x290, 16, 0, 0})
	CMember(TArray<FFortWeaponBoardDisplaySlot>)       MeleeWeaponDisplaySlots                                     OFFSET(get<T>, {0x2A0, 16, 0, 0})
	CMember(TArray<FFortWeaponBoardDisplaySlotItem>)   DisplaySlotItemList                                         OFFSET(get<T>, {0x2B0, 16, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortWeaponBoardBase.PopulateDisplaySlotsWithRandomWeapons
	// void PopulateDisplaySlotsWithRandomWeapons();                                                                            // [0x967d0b4] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.FortWeaponBoardBase.PopulateDisplaySlotsWithBestWeapons
	// void PopulateDisplaySlotsWithBestWeapons();                                                                              // [0x967d0a0] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.FortWeaponBoardBase.OnDisplaySlotItemChanged
	// void OnDisplaySlotItemChanged(FFortWeaponBoardDisplaySlot DisplaySlot, UFortAccountItem* Item);                          // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortWeaponBoardBase.HandleAsyncLoadComplete
	// void HandleAsyncLoadComplete();                                                                                          // [0x967bac8] Final|Native|Private 
};

/// Class /Script/FortniteUI.FortCampaignMap
/// Size: 0x0090 (0x0002E8 - 0x000378)
class UFortCampaignMap : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 888;

public:
	SMember(FFortSwipeDetector)                        SwipeDetector                                               OFFSET(getStruct<T>, {0x2E8, 144, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortCampaignMap.OnSwipeRight
	// void OnSwipeRight();                                                                                                     // [0x967cd10] Final|Native|Private 
	// Function /Script/FortniteUI.FortCampaignMap.OnSwipeLeft
	// void OnSwipeLeft();                                                                                                      // [0x967ccfc] Final|Native|Private 
	// Function /Script/FortniteUI.FortCampaignMap.OnShowPreviousPage
	// void OnShowPreviousPage();                                                                                               // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.FortCampaignMap.OnShowNextPage
	// void OnShowNextPage();                                                                                                   // [0x1d9241c] Event|Public|BlueprintEvent 
};

/// Class /Script/FortniteUI.FortHeroLoadoutAbilitiesDetailPanel
/// Size: 0x0008 (0x000340 - 0x000348)
class UFortHeroLoadoutAbilitiesDetailPanel : public UFortItemDetailElementWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 840;

public:
};

/// Class /Script/FortniteUI.FortHeroLoadoutPedestal
/// Size: 0x0038 (0x0005D8 - 0x000610)
class AFortHeroLoadoutPedestal : public AFortItemPreviewPedestal
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1552;

public:
	SMember(FName)                                     SlotName                                                    OFFSET(getStruct<T>, {0x5D8, 4, 0, 0})
	CMember(TWeakObjectPtr<UFortCampaignHeroLoadoutItem*>) HeroLoadout                                             OFFSET(get<T>, {0x5DC, 8, 0, 0})
	DMember(bool)                                      bIsSlotFocusedInUI                                          OFFSET(get<bool>, {0x5E4, 1, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortHeroLoadoutPedestal.HandleSlotFocusInUIChanged
	// void HandleSlotFocusInUIChanged();                                                                                       // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortHeroLoadoutPedestal.HandleMcpProfilesInitialized
	// void HandleMcpProfilesInitialized();                                                                                     // [0x967bf44] Final|Native|Private 
	// Function /Script/FortniteUI.FortHeroLoadoutPedestal.HandleDifferentLoadoutViewed
	// void HandleDifferentLoadoutViewed(UFortCampaignHeroLoadoutItem* PreviousLoadout, UFortCampaignHeroLoadoutItem* CurrentLoadout); // [0x967be80] Final|Native|Private 
	// Function /Script/FortniteUI.FortHeroLoadoutPedestal.HandleDifferentHeroLoadoutSlotFocused
	// void HandleDifferentHeroLoadoutSlotFocused(FName FocusedSlotName);                                                       // [0x967be00] Final|Native|Private 
};

/// Class /Script/FortniteUI.FortMissionSelect
/// Size: 0x0020 (0x000538 - 0x000558)
class UFortMissionSelect : public UCommonActivatablePanelLegacy
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1368;

public:
	SMember(FMulticastInlineDelegate)                  OnNavigation                                                OFFSET(getStruct<T>, {0x548, 16, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortMissionSelect.NavigateMissionTiles
	// bool NavigateMissionTiles(EUINavigation Direction);                                                                      // [0x967cb00] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortMissionSelect.CanCaptureAcceptInput
	// bool CanCaptureAcceptInput();                                                                                            // [0x1d9241c] Event|Protected|BlueprintEvent 
};

/// Class /Script/FortniteUI.FortGadgetsWidgetBase
/// Size: 0x0020 (0x0002E8 - 0x000308)
class UFortGadgetsWidgetBase : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 776;

public:
	CMember(UFortLazyImage*)                           GadgetIcon1                                                 OFFSET(get<T>, {0x2E8, 8, 0, 0})
	CMember(UFortLazyImage*)                           GadgetIcon2                                                 OFFSET(get<T>, {0x2F0, 8, 0, 0})
	CMember(TArray<UFortLazyImage*>)                   Gadgets                                                     OFFSET(get<T>, {0x2F8, 16, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortGadgetsWidgetBase.OnGenerateTooltipWidget
	// UWidget* OnGenerateTooltipWidget(FText& Header, FText& Description);                                                     // [0x1d9241c] Event|Public|HasOutParms|BlueprintEvent 
};

/// Class /Script/FortniteUI.FortHeroAbilitiesAndGadgetsBase
/// Size: 0x0010 (0x001510 - 0x001520)
class UFortHeroAbilitiesAndGadgetsBase : public UFortTeamMemberEntryBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 5408;

public:
	DMember(bool)                                      bHideAbilities                                              OFFSET(get<bool>, {0x1508, 1, 0, 0})
	DMember(bool)                                      bHideGadgets                                                OFFSET(get<bool>, {0x1509, 1, 0, 0})
	DMember(int32_t)                                   AssignedMemberIndex                                         OFFSET(get<int32_t>, {0x150C, 4, 0, 0})
	CMember(UFortPerksWidget_NUI*)                     HorizontalAbilitiesList                                     OFFSET(get<T>, {0x1510, 8, 0, 0})
	CMember(UFortGadgetsWidgetBase*)                   GadgetsWidget                                               OFFSET(get<T>, {0x1518, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortHeroAbilitiesAndGadgetsBase.Refresh
	// void Refresh(UFortCampaignHeroLoadoutItem* HeroLoadout);                                                                 // [0x967d1ec] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/FortniteUI.FortHomebaseNodeItemUtilities
/// Size: 0x0000 (0x000028 - 0x000028)
class UFortHomebaseNodeItemUtilities : public UBlueprintFunctionLibrary
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 40;

public:
};

/// Class /Script/FortniteUI.FortUIStateWidget_NUI
/// Size: 0x0040 (0x000570 - 0x0005B0)
class UFortUIStateWidget_NUI : public UFortActivatablePanel
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1456;

public:
	CMember(TArray<FContentPushState>)                 StackStates                                                 OFFSET(get<T>, {0x590, 16, 0, 0})
	CMember(TArray<UWidget*>)                          StackWidgets                                                OFFSET(get<T>, {0x5A0, 16, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortUIStateWidget_NUI.SetSocialButtonEnabled
	// void SetSocialButtonEnabled(bool bEnabled);                                                                              // [0x96eeea8] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortUIStateWidget_NUI.SetFrontEndVisibility
	// void SetFrontEndVisibility(bool bHideHeader, bool bHideFooter, bool bHideChatWidget);                                    // [0x96eec58] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortUIStateWidget_NUI.RequestOpenSocialPanel
	// void RequestOpenSocialPanel();                                                                                           // [0x96eec3c] Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortUIStateWidget_NUI.PushContentWidgetInternal
	// void PushContentWidgetInternal(UWidget* Widget, FContentPushState State);                                                // [0x96eea14] Native|Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortUIStateWidget_NUI.PushContentWidgetAdvanced
	// void PushContentWidgetAdvanced(UWidget* Widget, bool bHideHeader, bool bHideFooter, bool bHideChatWidget);               // [0x96ee8c4] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortUIStateWidget_NUI.PushContentWidget
	// void PushContentWidget(UWidget* Widget);                                                                                 // [0x96ee844] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortUIStateWidget_NUI.PopContentWidgetInternal
	// UWidget* PopContentWidgetInternal(FContentPushState State);                                                              // [0x96ee6cc] Native|Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortUIStateWidget_NUI.PopContentWidget
	// UWidget* PopContentWidget();                                                                                             // [0x96ee6a8] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortUIStateWidget_NUI.PopAllContentWidgets
	// void PopAllContentWidgets();                                                                                             // [0x96ee694] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortUIStateWidget_NUI.OnSocialButtonEnabled
	// void OnSocialButtonEnabled(bool bEnabled);                                                                               // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortUIStateWidget_NUI.OnOpenSocialMenu
	// void OnOpenSocialMenu();                                                                                                 // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.FortUIStateWidget_NUI.OnLoadingScreenVisibilityChanged
	// void OnLoadingScreenVisibilityChanged(bool IsVisible);                                                                   // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortUIStateWidget_NUI.OnHUDScaleChanged
	// void OnHUDScaleChanged(float HUDScale);                                                                                  // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortUIStateWidget_NUI.OnFrontEndVisibilityUpdated
	// void OnFrontEndVisibilityUpdated(bool bHideHeader, bool bHideFooter, bool bHideChatWidget);                              // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortUIStateWidget_NUI.OnExitState
	// void OnExitState(EFortUIState NextUIState);                                                                              // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.FortUIStateWidget_NUI.OnEnterState
	// void OnEnterState(EFortUIState PreviousUIState);                                                                         // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.FortUIStateWidget_NUI.OnAutoHideBuildingMaterialsChanged
	// void OnAutoHideBuildingMaterialsChanged(bool AutoHide);                                                                  // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortUIStateWidget_NUI.IsContentOnStack
	// bool IsContentOnStack();                                                                                                 // [0x96ee584] Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortUIStateWidget_NUI.GetTopBarWidget
	// UWidget* GetTopBarWidget();                                                                                              // [0x1d9241c] Event|Public|BlueprintEvent|Const 
	// Function /Script/FortniteUI.FortUIStateWidget_NUI.DynamicHandleLoadingScreenVisibilityChanged
	// void DynamicHandleLoadingScreenVisibilityChanged(bool IsVisible);                                                        // [0x96ee23c] Final|Native|Protected 
};

/// Class /Script/FortniteUI.CampaignHUDBase
/// Size: 0x0050 (0x0005B0 - 0x000600)
class UCampaignHUDBase : public UFortUIStateWidget_NUI
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1536;

public:
	DMember(int32_t)                                   ReticleExtensionSize                                        OFFSET(get<int32_t>, {0x5B0, 4, 0, 0})
	CMember(UFortWeaponReticleExtensionWidgetBase*)    CurrentCustomReticleExtension                               OFFSET(get<T>, {0x5E8, 8, 0, 0})
	CMember(TArray<UFortWeaponReticleExtensionWidgetBase*>) RecentReticleExtensions                                OFFSET(get<T>, {0x5F0, 16, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.CampaignHUDBase.ToggleChat
	// void ToggleChat(bool bShow);                                                                                             // [0x1d9241c] RequiredAPI|Event|Public|BlueprintCallable|BlueprintEvent 
	// Function /Script/FortniteUI.CampaignHUDBase.SetInputReflectorBoxVisibility
	// void SetInputReflectorBoxVisibility(bool bVisible);                                                                      // [0x1d9241c] RequiredAPI|Event|Public|BlueprintCallable|BlueprintEvent 
	// Function /Script/FortniteUI.CampaignHUDBase.OnExtensionWidgetRemoved
	// void OnExtensionWidgetRemoved(EUIExtensionSlot ExtensionSlot, UUserWidget* Widget);                                      // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.CampaignHUDBase.OnExtensionWidgetCreated
	// void OnExtensionWidgetCreated(EUIExtensionSlot ExtensionSlot, UUserWidget* Widget);                                      // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.CampaignHUDBase.NativeHandleWeaponEquipped
	// void NativeHandleWeaponEquipped(AFortWeapon* NewWeapon, AFortWeapon* PrevWeapon);                                        // [0x967ca3c] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/FortniteUI.FortResultsBadgeLootWidget
/// Size: 0x0010 (0x0002D0 - 0x0002E0)
class UFortResultsBadgeLootWidget : public UFortUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 736;

public:
	CMember(UCommonBorder*)                            Border_LeechWarning                                         OFFSET(get<T>, {0x2D0, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortResultsBadgeLootWidget.RecheckLeecherStatus
	// void RecheckLeecherStatus();                                                                                             // [0x967d1d8] Final|Native|Private 
};

/// Class /Script/FortniteUI.FortCampaignPurchaseScreen
/// Size: 0x0098 (0x000400 - 0x000498)
class UFortCampaignPurchaseScreen : public UCommonActivatableWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1176;

public:
	CMember(TArray<UTexture2D*>)                       ImageCycle                                                  OFFSET(get<T>, {0x400, 16, 0, 0})
	DMember(float)                                     ImageCycleTime                                              OFFSET(get<float>, {0x410, 4, 0, 0})
	DMember(bool)                                      bAllowCodeRedemption                                        OFFSET(get<bool>, {0x414, 1, 0, 0})
	CMember(UWidgetAnimation*)                         BoundAnim_Intro                                             OFFSET(get<T>, {0x430, 8, 0, 0})
	CMember(UWidgetAnimation*)                         BoundAnim_Outro                                             OFFSET(get<T>, {0x438, 8, 0, 0})
	CMember(UImage*)                                   Image_ProductLogo                                           OFFSET(get<T>, {0x440, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_Tagline                                                OFFSET(get<T>, {0x448, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_Description                                            OFFSET(get<T>, {0x450, 8, 0, 0})
	CMember(UCommonButtonLegacy*)                      Button_Purchase                                             OFFSET(get<T>, {0x458, 8, 0, 0})
	CMember(UCommonButtonLegacy*)                      Button_RedeemCode                                           OFFSET(get<T>, {0x460, 8, 0, 0})
	CMember(UCommonButtonLegacy*)                      Button_Back                                                 OFFSET(get<T>, {0x468, 8, 0, 0})
	CMember(UImage*)                                   Image_UpsellImage                                           OFFSET(get<T>, {0x470, 8, 0, 0})
	CMember(UCommonActivatableWidgetSwitcher*)         ActivatableSwitcher_PreviewOrStore                          OFFSET(get<T>, {0x478, 8, 0, 0})
	CMember(UClass*)                                   StoreScreenClass                                            OFFSET(get<T>, {0x480, 8, 0, 0})
	CMember(UFortMtxStoreRootBase_Legacy*)             StoreScreenInstance                                         OFFSET(get<T>, {0x488, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortCampaignPurchaseScreen.OnStoreScreenCreated
	// void OnStoreScreenCreated(UFortMtxStoreRootBase_Legacy* StoreScreen);                                                    // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortCampaignPurchaseScreen.OnImageCycleTimeElapsed
	// void OnImageCycleTimeElapsed();                                                                                          // [0x1d9241c] Event|Protected|BlueprintEvent 
};

/// Class /Script/FortniteUI.FortActivtyCheckLine
/// Size: 0x0000 (0x0002C0 - 0x0002C0)
class UFortActivtyCheckLine : public UUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 704;

public:
};

/// Class /Script/FortniteUI.FortCampaignReadyScreen
/// Size: 0x0030 (0x000400 - 0x000430)
class UFortCampaignReadyScreen : public UCommonActivatableWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1072;

public:
	CMember(UClass*)                                   CampaignPurchaseScreenClass                                 OFFSET(get<T>, {0x408, 8, 0, 0})
	CMember(UClass*)                                   LoadingContentModalClass                                    OFFSET(get<T>, {0x410, 8, 0, 0})
	CMember(UClass*)                                   SettingsScreenClass                                         OFFSET(get<T>, {0x418, 8, 0, 0})
	CMember(UDynamicEntryBox*)                         LinesEntryBox                                               OFFSET(get<T>, {0x420, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortCampaignReadyScreen.ShowSTWManualInstallConfirmation
	// void ShowSTWManualInstallConfirmation();                                                                                 // [0x968047c] Final|Native|Protected 
	// Function /Script/FortniteUI.FortCampaignReadyScreen.ShowSettingsScreen
	// void ShowSettingsScreen();                                                                                               // [0x9680490] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.FortCampaignReadyScreen.ShowPurchaseScreen
	// void ShowPurchaseScreen();                                                                                               // [0x9680468] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.FortCampaignReadyScreen.LeavePartyAndPlayTutorial
	// void LeavePartyAndPlayTutorial();                                                                                        // [0x967c980] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.FortCampaignReadyScreen.InstallSaveTheWorldContent
	// void InstallSaveTheWorldContent();                                                                                       // [0x967c18c] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.FortCampaignReadyScreen.ConfigureButtons
	// void ConfigureButtons(EActivityCheckSolution Solution);                                                                  // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortCampaignReadyScreen.CloseDialog
	// void CloseDialog();                                                                                                      // [0x34111d4] Final|Native|Protected|BlueprintCallable 
};

/// Class /Script/FortniteUI.FortLoadingOnDemandContentModal
/// Size: 0x0048 (0x000400 - 0x000448)
class UFortLoadingOnDemandContentModal : public UCommonActivatableWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1096;

public:
	CMember(UCommonButtonLegacy*)                      Button_Cancel                                               OFFSET(get<T>, {0x440, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortLoadingOnDemandContentModal.StartProgressUpdateTimer
	// void StartProgressUpdateTimer();                                                                                         // [0x968055c] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.FortLoadingOnDemandContentModal.SetCancelButtonText
	// void SetCancelButtonText(FText& InText);                                                                                 // [0x1d9241c] Event|Public|HasOutParms|BlueprintEvent 
	// Function /Script/FortniteUI.FortLoadingOnDemandContentModal.OnUpdatedProgress
	// void OnUpdatedProgress(float Percent);                                                                                   // [0x1d9241c] Event|Protected|BlueprintEvent 
};

/// Class /Script/FortniteUI.FortSubgameSelectScreen
/// Size: 0x0088 (0x000400 - 0x000488)
class UFortSubgameSelectScreen : public UCommonActivatableWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1160;

public:
	DMember(bool)                                      bDebugVariable1                                             OFFSET(get<bool>, {0x400, 1, 0, 0})
	CMember(UFortSubgameTile*)                         SelectedTile                                                OFFSET(get<T>, {0x408, 8, 0, 0})
	CMember(USoundBase*)                               Sound_OnActivated                                           OFFSET(get<T>, {0x410, 8, 0, 0})
	CMember(USoundBase*)                               Sound_OnSelectedSubGame                                     OFFSET(get<T>, {0x418, 8, 0, 0})
	CMember(UWidgetAnimation*)                         BoundAnim_Intro                                             OFFSET(get<T>, {0x420, 8, 0, 0})
	CMember(UWidgetAnimation*)                         BoundAnim_Outro                                             OFFSET(get<T>, {0x428, 8, 0, 0})
	CMember(UWidgetAnimation*)                         SelectModeIdle                                              OFFSET(get<T>, {0x430, 8, 0, 0})
	CMember(UImage*)                                   Image_SpinnerImage                                          OFFSET(get<T>, {0x438, 8, 0, 0})
	CMember(UFortConsoleProfileWidget*)                XboxOneProfileWidget_ProfileDisplay                         OFFSET(get<T>, {0x440, 8, 0, 0})
	CMember(UFortSubgameTile*)                         SubgameTile_BattleRoyale                                    OFFSET(get<T>, {0x448, 8, 0, 0})
	CMember(UFortSubgameTile*)                         SubgameTile_Creative                                        OFFSET(get<T>, {0x450, 8, 0, 0})
	CMember(UFortSubgameTile*)                         SubgameTile_Campaign                                        OFFSET(get<T>, {0x458, 8, 0, 0})
	CMember(UCommonRichTextBlock*)                     RichText_PerfModeWarning                                    OFFSET(get<T>, {0x460, 8, 0, 0})
	CMember(UCommonButtonLegacy*)                      Button_AccountPicker                                        OFFSET(get<T>, {0x468, 8, 0, 0})
	CMember(UClass*)                                   CampaignPurchaseScreenClass                                 OFFSET(get<T>, {0x470, 8, 0, 0})
	CMember(UClass*)                                   LoadingContentModal                                         OFFSET(get<T>, {0x478, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortSubgameSelectScreen.HandleOnPartyLeft
	// void HandleOnPartyLeft();                                                                                                // [0x967bfd4] Final|Native|Private 
	// Function /Script/FortniteUI.FortSubgameSelectScreen.HandleOnMatchmakingComplete
	// void HandleOnMatchmakingComplete(EMatchmakingCompleteResult Result);                                                     // [0x967bf58] Final|Native|Private 
};

/// Class /Script/FortniteUI.FortSubgameTile
/// Size: 0x0130 (0x0014E0 - 0x001610)
class UFortSubgameTile : public UCommonButtonLegacy
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 5648;

public:
	CMember(ESubgameTileType)                          SubgameType                                                 OFFSET(get<T>, {0x14E0, 1, 0, 0})
	CMember(ESubgameLoadFromCMS)                       CMS_LoadType                                                OFFSET(get<T>, {0x14E1, 1, 0, 0})
	CMember(UTexture2D*)                               KeyArt                                                      OFFSET(get<T>, {0x14E8, 8, 0, 0})
	SMember(FText)                                     Title                                                       OFFSET(getStruct<T>, {0x14F0, 24, 0, 0})
	SMember(FText)                                     Description                                                 OFFSET(getStruct<T>, {0x1508, 24, 0, 0})
	SMember(FText)                                     StandardMessageLine1                                        OFFSET(getStruct<T>, {0x1520, 24, 0, 0})
	SMember(FText)                                     StandardMessageLine2                                        OFFSET(getStruct<T>, {0x1538, 24, 0, 0})
	SMember(FLinearColor)                              StandardMessageBackgroundColor                              OFFSET(getStruct<T>, {0x1550, 16, 0, 0})
	SMember(FText)                                     SpecialMessage                                              OFFSET(getStruct<T>, {0x1560, 24, 0, 0})
	SMember(FLinearColor)                              SpecialMessageBackgroundColor                               OFFSET(getStruct<T>, {0x1578, 16, 0, 0})
	SMember(FLinearColor)                              UnfocusedOverlayColor                                       OFFSET(getStruct<T>, {0x1588, 16, 0, 0})
	CMember(UMaterialInstance*)                        GradientBrush                                               OFFSET(get<T>, {0x1598, 8, 0, 0})
	SMember(FLinearColor)                              GradientColor                                               OFFSET(getStruct<T>, {0x15A0, 16, 0, 0})
	CMember(UEpicCMSImage*)                            Image_KeyArt                                                OFFSET(get<T>, {0x15B0, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_Title                                                  OFFSET(get<T>, {0x15B8, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_Description                                            OFFSET(get<T>, {0x15C0, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_StandardMessageLine1                                   OFFSET(get<T>, {0x15C8, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_StandardMessageLine2                                   OFFSET(get<T>, {0x15D0, 8, 0, 0})
	CMember(UBorder*)                                  Border_StandardMessageBackground                            OFFSET(get<T>, {0x15D8, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_SpecialMessage                                         OFFSET(get<T>, {0x15E0, 8, 0, 0})
	CMember(UBorder*)                                  Border_SpecialMessageBackground                             OFFSET(get<T>, {0x15E8, 8, 0, 0})
	CMember(UImage*)                                   Image_UnfocusedOverlay                                      OFFSET(get<T>, {0x15F0, 8, 0, 0})
	CMember(UImage*)                                   Image_Gradient                                              OFFSET(get<T>, {0x15F8, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortSubgameTile.TrySetSubgameImageFromCMS
	// bool TrySetSubgameImageFromCMS();                                                                                        // [0x9680620] Final|Native|Private|BlueprintCallable 
	// Function /Script/FortniteUI.FortSubgameTile.TryGetSubgameDataFromCMS
	// bool TryGetSubgameDataFromCMS(FSubgameDisplayData& SubgameData);                                                         // [0x9680570] Final|Native|Private|HasOutParms|BlueprintCallable 
};

/// Class /Script/FortniteUI.StartUpUIStateWidget_SubgameSelect
/// Size: 0x0008 (0x000418 - 0x000420)
class UStartUpUIStateWidget_SubgameSelect : public UFortUIStateWidgetBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1056;

public:
	CMember(UCommonUserWidget*)                        BottomBar                                                   OFFSET(get<T>, {0x418, 8, 0, 0})
};

/// Class /Script/FortniteUI.FortSubscriptionPlatformModal
/// Size: 0x0030 (0x000400 - 0x000430)
class UFortSubscriptionPlatformModal : public UCommonActivatableWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1072;

public:
	CMember(UCommonButtonLegacy*)                      Button_Back                                                 OFFSET(get<T>, {0x400, 8, 0, 0})
	CMember(UCommonButtonLegacy*)                      Button_TouchBack                                            OFFSET(get<T>, {0x408, 8, 0, 0})
	SMember(FString)                                   ModalId                                                     OFFSET(getStruct<T>, {0x410, 16, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortSubscriptionPlatformModal.SetPlatformSpecificQRCode
	// void SetPlatformSpecificQRCode(FString QRCodeAssetURL);                                                                  // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortSubscriptionPlatformModal.SetPlatformSpecificEntries
	// void SetPlatformSpecificEntries(TArray<FText>& Entries);                                                                 // [0x1d9241c] Event|Protected|HasOutParms|BlueprintEvent 
	// Function /Script/FortniteUI.FortSubscriptionPlatformModal.SendSubscriptionAnalyticsEvent
	// void SendSubscriptionAnalyticsEvent(FString Interaction);                                                                // [0x967f1fc] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.FortSubscriptionPlatformModal.OnModalBackout
	// void OnModalBackout();                                                                                                   // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortSubscriptionPlatformModal.IsOnActiveSubscriptionPlatform
	// bool IsOnActiveSubscriptionPlatform();                                                                                   // [0x967c664] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortSubscriptionPlatformModal.GetSubscriptionNextBillingDateAsText
	// FText GetSubscriptionNextBillingDateAsText();                                                                            // [0x967b170] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortSubscriptionPlatformModal.ExitModal
	// void ExitModal();                                                                                                        // [0x2ee9a3c] Native|Protected|BlueprintCallable 
};

/// Class /Script/FortniteUI.FortSubscriptionCancellationModal
/// Size: 0x0020 (0x000430 - 0x000450)
class UFortSubscriptionCancellationModal : public UFortSubscriptionPlatformModal
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1104;

public:
	CMember(UCommonButtonLegacy*)                      Button_CancelSubscription                                   OFFSET(get<T>, {0x430, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortSubscriptionCancellationModal.UpdateCancelDisplay
	// void UpdateCancelDisplay(bool bCanCancelDirectly);                                                                       // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortSubscriptionCancellationModal.ShowSpinner
	// void ShowSpinner();                                                                                                      // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortSubscriptionCancellationModal.SetErrorStateBulletPoints
	// void SetErrorStateBulletPoints(TArray<FText>& BulletPointTexts);                                                         // [0x1d9241c] Event|Protected|HasOutParms|BlueprintEvent 
	// Function /Script/FortniteUI.FortSubscriptionCancellationModal.OnModalCancellationBackout
	// void OnModalCancellationBackout();                                                                                       // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortSubscriptionCancellationModal.HideSpinner
	// void HideSpinner();                                                                                                      // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortSubscriptionCancellationModal.GetSubscriptionCancellabillity
	// ESubscriptionCancellability GetSubscriptionCancellabillity();                                                            // [0x967b14c] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortSubscriptionCancellationModal.ClearErrorStateBulletPoints
	// void ClearErrorStateBulletPoints();                                                                                      // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortSubscriptionCancellationModal.ClearDynamicBulletPoints
	// void ClearDynamicBulletPoints();                                                                                         // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortSubscriptionCancellationModal.AddDynamicBulletPoints
	// void AddDynamicBulletPoints(TArray<FText>& BulletPointTexts);                                                            // [0x1d9241c] Event|Protected|HasOutParms|BlueprintEvent 
};

/// Class /Script/FortniteUI.FortSubscriptionCrewBlingInfoModal
/// Size: 0x0000 (0x000430 - 0x000430)
class UFortSubscriptionCrewBlingInfoModal : public UFortSubscriptionPlatformModal
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1072;

public:
};

/// Class /Script/FortniteUI.FortCampaignTeamMemberEntry
/// Size: 0x0000 (0x001510 - 0x001510)
class UFortCampaignTeamMemberEntry : public UFortTeamMemberEntryBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 5392;

public:


	/// Functions
	// Function /Script/FortniteUI.FortCampaignTeamMemberEntry.OnTeamMemberConnectionStateChanged
	// void OnTeamMemberConnectionStateChanged(EFortMemberConnectionState NewConnectionState);                                  // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortCampaignTeamMemberEntry.HasTeamMembers
	// bool HasTeamMembers();                                                                                                   // [0x96aebe4] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/FortniteUI.FortCampaignHUDTeamMemberInfo
/// Size: 0x0070 (0x001510 - 0x001580)
class UFortCampaignHUDTeamMemberInfo : public UFortCampaignTeamMemberEntry
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 5504;

public:
	CMember(UImage*)                                   Image_HeroIcon                                              OFFSET(get<T>, {0x1510, 8, 0, 0})
	CMember(UFortPlayerPowerRating*)                   PowerRating_MemberRating                                    OFFSET(get<T>, {0x1518, 8, 0, 0})
	CMember(UCommonNumericTextBlock*)                  Text_BluGloCount                                            OFFSET(get<T>, {0x1520, 8, 0, 0})
	CMember(UFortVoiceChatStatusIcon*)                 VoiceIcon_Status                                            OFFSET(get<T>, {0x1528, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_MemberName                                             OFFSET(get<T>, {0x1530, 8, 0, 0})
	CMember(UImage*)                                   Image_LeaderIcon                                            OFFSET(get<T>, {0x1538, 8, 0, 0})
	CMember(UImage*)                                   Image_PlatformIcon                                          OFFSET(get<T>, {0x1540, 8, 0, 0})
	CMember(UImage*)                                   Image_HealthBar                                             OFFSET(get<T>, {0x1548, 8, 0, 0})
	CMember(UImage*)                                   Image_ShieldBar                                             OFFSET(get<T>, {0x1550, 8, 0, 0})
	SMember(FSlateColor)                               Color_PlayerNameAlive                                       OFFSET(getStruct<T>, {0x1558, 20, 0, 0})
	SMember(FSlateColor)                               Color_PlayerNameDead                                        OFFSET(getStruct<T>, {0x156C, 20, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortCampaignHUDTeamMemberInfo.HandlePlayerPawnChanged
	// void HandlePlayerPawnChanged();                                                                                          // [0x967bfe8] Final|Native|Private 
	// Function /Script/FortniteUI.FortCampaignHUDTeamMemberInfo.HandleDBNOChanged
	// void HandleDBNOChanged(AFortPawn* Pawn, bool bInIsDBNO);                                                                 // [0x967bcb8] Final|Native|Private 
	// Function /Script/FortniteUI.FortCampaignHUDTeamMemberInfo.HandleAccumulatedItemsChanged
	// void HandleAccumulatedItemsChanged();                                                                                    // [0x967b910] Final|Native|Private 
};

/// Class /Script/FortniteUI.FortCampaignTeamMemberBanner
/// Size: 0x0010 (0x001510 - 0x001520)
class UFortCampaignTeamMemberBanner : public UFortCampaignTeamMemberEntry
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 5408;

public:
	CMember(UFortPlayerBanner*)                        Banner_MemberBanner                                         OFFSET(get<T>, {0x1510, 8, 0, 0})
	CMember(UImage*)                                   Image_LeaderIcon                                            OFFSET(get<T>, {0x1518, 8, 0, 0})
};

/// Class /Script/FortniteUI.FortCampaignTeamMemberItemTracker
/// Size: 0x0010 (0x001510 - 0x001520)
class UFortCampaignTeamMemberItemTracker : public UFortCampaignTeamMemberEntry
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 5408;

public:
	CMember(TArray<FString>)                           TemplateIdsToTrack                                          OFFSET(get<T>, {0x1510, 16, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortCampaignTeamMemberItemTracker.OnTrackedItemsUpdated
	// void OnTrackedItemsUpdated();                                                                                            // [0x1d9241c] Event|Protected|BlueprintEvent 
};

/// Class /Script/FortniteUI.FortCampaignTeamMemberXpBoost
/// Size: 0x00B0 (0x001520 - 0x0015D0)
class UFortCampaignTeamMemberXpBoost : public UFortCampaignTeamMemberItemTracker
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 5584;

public:
	SMember(FText)                                     NoPartyMemberString                                         OFFSET(getStruct<T>, {0x1520, 24, 0, 0})
	SMember(FText)                                     LocalPlayerXpBoostConfirmationTitle                         OFFSET(getStruct<T>, {0x1538, 24, 0, 0})
	SMember(FText)                                     LocalPlayerXpBoostConfirmationText                          OFFSET(getStruct<T>, {0x1550, 24, 0, 0})
	SMember(FText)                                     RemotePlayerXpBoostConfirmationTitle                        OFFSET(getStruct<T>, {0x1568, 24, 0, 0})
	SMember(FText)                                     RemotePlayerXpBoostConfirmationText                         OFFSET(getStruct<T>, {0x1580, 24, 0, 0})
	CMember(UFortPlayerBanner*)                        Banner_MemberBanner                                         OFFSET(get<T>, {0x15A0, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_MemberName                                             OFFSET(get<T>, {0x15A8, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_Boost                                                  OFFSET(get<T>, {0x15B0, 8, 0, 0})
	CMember(UImage*)                                   Image_BoostIcon                                             OFFSET(get<T>, {0x15B8, 8, 0, 0})
	CMember(UCommonButtonLegacy*)                      Button_ActivateBoost                                        OFFSET(get<T>, {0x15C0, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortCampaignTeamMemberXpBoost.SetConsumeRequestInProgress
	// void SetConsumeRequestInProgress(bool bIsRequestInProgress);                                                             // [0x96b00bc] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.FortCampaignTeamMemberXpBoost.OnConsumeBoostStarted
	// void OnConsumeBoostStarted();                                                                                            // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortCampaignTeamMemberXpBoost.OnConsumeBoostComplete
	// void OnConsumeBoostComplete();                                                                                           // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortCampaignTeamMemberXpBoost.OnBoostAmountChanged
	// void OnBoostAmountChanged();                                                                                             // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortCampaignTeamMemberXpBoost.GetCurrentBoostAmount
	// int32_t GetCurrentBoostAmount();                                                                                         // [0x96ae564] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortCampaignTeamMemberXpBoost.GetBoostActivationButton
	// UCommonButtonLegacy* GetBoostActivationButton();                                                                         // [0x96ae534] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortCampaignTeamMemberXpBoost.CenterWidget
	// void CenterWidget();                                                                                                     // [0x96adc50] Final|Native|Protected|BlueprintCallable 
};

/// Class /Script/FortniteUI.FortCampaignTeamMemberDailyBonusXpBoost
/// Size: 0x0020 (0x001520 - 0x001540)
class UFortCampaignTeamMemberDailyBonusXpBoost : public UFortCampaignTeamMemberItemTracker
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 5440;

public:
	CMember(UCommonTextBlock*)                         Text_Boost                                                  OFFSET(get<T>, {0x1528, 8, 0, 0})
	CMember(UImage*)                                   Image_BoostIcon                                             OFFSET(get<T>, {0x1530, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortCampaignTeamMemberDailyBonusXpBoost.OnBoostAmountChanged
	// void OnBoostAmountChanged();                                                                                             // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortCampaignTeamMemberDailyBonusXpBoost.GetCurrentBoostAmount
	// int32_t GetCurrentBoostAmount();                                                                                         // [0x96ae54c] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/FortniteUI.FortCampaignTeamMemberInfo
/// Size: 0x0070 (0x001510 - 0x001580)
class UFortCampaignTeamMemberInfo : public UFortCampaignTeamMemberEntry
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 5504;

public:
	CMember(UCommonButtonLegacy*)                      Button_MenuButton                                           OFFSET(get<T>, {0x1510, 8, 0, 0})
	CMember(UFortPlayerBanner*)                        Banner_MemberBanner                                         OFFSET(get<T>, {0x1518, 8, 0, 0})
	CMember(UCommonWidgetSwitcherLegacy*)              PowerRatingWidgetSwitcher                                   OFFSET(get<T>, {0x1520, 8, 0, 0})
	CMember(UFortPlayerPowerRating*)                   PowerRating_MemberRating                                    OFFSET(get<T>, {0x1528, 8, 0, 0})
	CMember(UFortPlayerPowerRating*)                   Moonbeam_PowerRating_MemberRating                           OFFSET(get<T>, {0x1530, 8, 0, 0})
	CMember(UFortPlayerPowerRating*)                   Phoenix_PowerRating_MemberRating                            OFFSET(get<T>, {0x1538, 8, 0, 0})
	CMember(UFortSocialNameTextBlock*)                 Text_MemberName                                             OFFSET(get<T>, {0x1540, 8, 0, 0})
	CMember(UImage*)                                   Image_LeaderIcon                                            OFFSET(get<T>, {0x1548, 8, 0, 0})
	CMember(UImage*)                                   Image_PlatformIcon                                          OFFSET(get<T>, {0x1550, 8, 0, 0})
	CMember(UFortVoiceChatStatusIcon*)                 VoiceIcon_Status                                            OFFSET(get<T>, {0x1558, 8, 0, 0})
	CMember(UCommonRichTextBlock*)                     RichText_Fortitude                                          OFFSET(get<T>, {0x1560, 8, 0, 0})
	CMember(UCommonRichTextBlock*)                     RichText_Offense                                            OFFSET(get<T>, {0x1568, 8, 0, 0})
	CMember(UCommonRichTextBlock*)                     RichText_Resistance                                         OFFSET(get<T>, {0x1570, 8, 0, 0})
	CMember(UCommonRichTextBlock*)                     RichText_Technology                                         OFFSET(get<T>, {0x1578, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortCampaignTeamMemberInfo.OnLocalTeamMemberParticipationChanged
	// void OnLocalTeamMemberParticipationChanged(bool bIsParticipating);                                                       // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortCampaignTeamMemberInfo.HandleShouldShowPhoenixDisplayChanged
	// void HandleShouldShowPhoenixDisplayChanged(bool bShouldShowPhoenixDisplay);                                              // [0x96aea24] Final|Native|Private 
};

/// Class /Script/FortniteUI.FortCampaignTeamMemberResult
/// Size: 0x0040 (0x001510 - 0x001550)
class UFortCampaignTeamMemberResult : public UFortCampaignTeamMemberEntry
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 5456;

public:
	CMember(UCommonButtonLegacy*)                      Button_Stats                                                OFFSET(get<T>, {0x1510, 8, 0, 0})
	CMember(UFortPlayerBanner*)                        Banner_MemberBanner                                         OFFSET(get<T>, {0x1518, 8, 0, 0})
	CMember(UCommonWidgetSwitcherLegacy*)              PowerRatingWidgetSwitcher                                   OFFSET(get<T>, {0x1520, 8, 0, 0})
	CMember(UFortPlayerPowerRating*)                   PowerRating_MemberRating                                    OFFSET(get<T>, {0x1528, 8, 0, 0})
	CMember(UFortPlayerPowerRating*)                   Moonbeam_PowerRating_MemberRating                           OFFSET(get<T>, {0x1530, 8, 0, 0})
	CMember(UImage*)                                   Image_PlatformIcon                                          OFFSET(get<T>, {0x1538, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_MemberName                                             OFFSET(get<T>, {0x1540, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortCampaignTeamMemberResult.UpdateMemberWithUniqueNetID
	// void UpdateMemberWithUniqueNetID(FUniqueNetIdRepl& MemberId);                                                            // [0x96b2a80] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/FortniteUI.FortCampaignTeamMemberResult.Focus
	// void Focus();                                                                                                            // [0x96ae4e4] Final|Native|Protected|BlueprintCallable 
};

/// Class /Script/FortniteUI.FortPartyStatusIcon
/// Size: 0x0148 (0x000178 - 0x0002C0)
class UFortPartyStatusIcon : public UWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 704;

public:
	SMember(FVector2D)                                 DesiredSize                                                 OFFSET(getStruct<T>, {0x1A8, 16, 0, 0})
	SMember(FSlateColor)                               ImageColorAndOpacity                                        OFFSET(getStruct<T>, {0x1B8, 20, 0, 0})
	CMember(UMaterialInterface*)                       PartyStatusMaterial                                         OFFSET(get<T>, {0x1D0, 8, 0, 0})
	SMember(FSlateBrush)                               StatusBrush                                                 OFFSET(getStruct<T>, {0x1E0, 192, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortPartyStatusIcon.SetImageColorAndOpacity
	// void SetImageColorAndOpacity(FSlateColor& InColorAndOpacity);                                                            // [0x96b0e08] Final|Native|Public|HasOutParms|BlueprintCallable 
};

/// Class /Script/FortniteUI.FortTeamMemberManage
/// Size: 0x0080 (0x000570 - 0x0005F0)
class UFortTeamMemberManage : public UFortActivatablePanel
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1520;

public:
	CMember(TWeakObjectPtr<UFortTeamMember*>)          TeamMember                                                  OFFSET(get<T>, {0x570, 8, 0, 0})
	CMember(UFortPlayerBanner*)                        Banner_PlayerBanner                                         OFFSET(get<T>, {0x578, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_PlayerName                                             OFFSET(get<T>, {0x580, 8, 0, 0})
	CMember(UCommonWidgetSwitcherLegacy*)              PowerRatingWidgetSwitcher                                   OFFSET(get<T>, {0x588, 8, 0, 0})
	CMember(UFortPlayerPowerRating*)                   PowerRating_MemberPowerRating                               OFFSET(get<T>, {0x590, 8, 0, 0})
	CMember(UFortPlayerPowerRating*)                   Moonbeam_PowerRating_MemberPowerRating                      OFFSET(get<T>, {0x598, 8, 0, 0})
	CMember(UVerticalBox*)                             VBox_Buttons                                                OFFSET(get<T>, {0x5A0, 8, 0, 0})
	CMember(UCommonButtonBase*)                        Button_EditBanner                                           OFFSET(get<T>, {0x5A8, 8, 0, 0})
	CMember(UCommonButtonBase*)                        Button_LeaveParty                                           OFFSET(get<T>, {0x5B0, 8, 0, 0})
	CMember(UCommonButtonBase*)                        Button_MakePartyLeader                                      OFFSET(get<T>, {0x5B8, 8, 0, 0})
	CMember(UCommonButtonBase*)                        Button_Whisper                                              OFFSET(get<T>, {0x5C0, 8, 0, 0})
	CMember(UCommonButtonBase*)                        Button_Kick                                                 OFFSET(get<T>, {0x5C8, 8, 0, 0})
	CMember(UCommonButtonBase*)                        Button_ViewProfile                                          OFFSET(get<T>, {0x5D0, 8, 0, 0})
	CMember(UCommonButtonBase*)                        Button_Mute                                                 OFFSET(get<T>, {0x5D8, 8, 0, 0})
	CMember(UCommonButtonBase*)                        Button_Unmute                                               OFFSET(get<T>, {0x5E0, 8, 0, 0})
	CMember(UCommonButtonBase*)                        Button_ToggleParticipation                                  OFFSET(get<T>, {0x5E8, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortTeamMemberManage.SetRepresentingTeamMember
	// void SetRepresentingTeamMember(int32_t LocalTeamMemberIndex);                                                            // [0x96b0f20] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortTeamMemberManage.OpenBannerEditor
	// void OpenBannerEditor();                                                                                                 // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortTeamMemberManage.OnParticipationChanged
	// void OnParticipationChanged(bool bIsParticipating);                                                                      // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortTeamMemberManage.OnBannerEditorClosed
	// void OnBannerEditorClosed();                                                                                             // [0x96aed40] Final|Native|Protected|BlueprintCallable 
};

/// Class /Script/FortniteUI.FortTeamMemberPedestalFeatInfo
/// Size: 0x0010 (0x001510 - 0x001520)
class UFortTeamMemberPedestalFeatInfo : public UFortTeamMemberEntryBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 5408;

public:
	CMember(UCommonTextBlock*)                         Text_FeatName                                               OFFSET(get<T>, {0x1508, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_FeatDesc                                               OFFSET(get<T>, {0x1510, 8, 0, 0})
	CMember(UFortLazyImage*)                           LazyImage_FeatIcon                                          OFFSET(get<T>, {0x1518, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortTeamMemberPedestalFeatInfo.OnFeatDefinitionSet
	// void OnFeatDefinitionSet();                                                                                              // [0x1d9241c] Event|Protected|BlueprintEvent 
};

/// Class /Script/FortniteUI.FortTeamMemberPedestalNameplate
/// Size: 0x0080 (0x001530 - 0x0015B0)
class UFortTeamMemberPedestalNameplate : public UFortBasicTeamMemberEntry
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 5552;

public:
	CMember(UCommonTextBlock*)                         Text_ReadyStatus                                            OFFSET(get<T>, {0x1550, 8, 0, 0})
	CMember(UMatchmakingInputIndicatorBase*)           InputIndicator_ActiveInputType                              OFFSET(get<T>, {0x1558, 8, 0, 0})
	CMember(UCommonWidgetSwitcherLegacy*)              PowerRatingWidgetSwitcher                                   OFFSET(get<T>, {0x1560, 8, 0, 0})
	CMember(UFortPlayerPowerRating*)                   PowerRating_CampaignPower                                   OFFSET(get<T>, {0x1568, 8, 0, 0})
	CMember(UFortPlayerPowerRating*)                   Moonbeam_PowerRating_CampaignPower                          OFFSET(get<T>, {0x1570, 8, 0, 0})
	CMember(UFortPlayerPowerRating*)                   Phoenix_PowerRating_CampaignPower                           OFFSET(get<T>, {0x1578, 8, 0, 0})
	CMember(USizeBox*)                                 SizeBox_HotfixControlled                                    OFFSET(get<T>, {0x1580, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_PlayerLevel                                            OFFSET(get<T>, {0x1588, 8, 0, 0})
	CMember(UImage*)                                   Image_HeroIcon                                              OFFSET(get<T>, {0x1590, 8, 0, 0})
	CMember(UCommonButtonLegacy*)                      Button_AddFriend                                            OFFSET(get<T>, {0x1598, 8, 0, 0})
	CMember(UFortHabaneroTierWidget*)                  HabaneroWidget                                              OFFSET(get<T>, {0x15A0, 8, 0, 0})
	DMember(bool)                                      bTeamMemberPedestalNameplateAddFriendButtonEnabled          OFFSET(get<bool>, {0x15A8, 1, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortTeamMemberPedestalNameplate.OnReadyStatusChanged
	// void OnReadyStatusChanged(EGameReadiness GameReadiness, bool bIsDownloading);                                            // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortTeamMemberPedestalNameplate.OnPlayReadyAudio
	// void OnPlayReadyAudio(bool bIsReadyForMatchmaking);                                                                      // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortTeamMemberPedestalNameplate.OnPedestalSelectedChanged
	// void OnPedestalSelectedChanged(bool bIsSelected);                                                                        // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortTeamMemberPedestalNameplate.OnIsPlayingHabaneroChanged
	// void OnIsPlayingHabaneroChanged(bool bPlayingHabanero);                                                                  // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortTeamMemberPedestalNameplate.OnFriendStatusUpdated
	// void OnFriendStatusUpdated(EFortFriendRequestStatus FriendRequestStatus);                                                // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortTeamMemberPedestalNameplate.OnCurrentSubGameChanged
	// void OnCurrentSubGameChanged(ESubGame NewSubGame);                                                                       // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortTeamMemberPedestalNameplate.HandleShouldShowPhoenixDisplayChanged
	// void HandleShouldShowPhoenixDisplayChanged(bool bShouldShowPhoenixDisplay);                                              // [0x96aeaa4] Final|Native|Private 
};

/// Class /Script/FortniteUI.FortVoiceChatStatusIcon
/// Size: 0x0148 (0x000178 - 0x0002C0)
class UFortVoiceChatStatusIcon : public UWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 704;

public:
	SMember(FVector2D)                                 DesiredSize                                                 OFFSET(getStruct<T>, {0x1A8, 16, 0, 0})
	SMember(FSlateColor)                               ImageColorAndOpacity                                        OFFSET(getStruct<T>, {0x1B8, 20, 0, 0})
	CMember(UMaterialInterface*)                       VoiceChatStatusMaterial                                     OFFSET(get<T>, {0x1D0, 8, 0, 0})
	SMember(FSlateBrush)                               StatusBrush                                                 OFFSET(getStruct<T>, {0x1E0, 192, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortVoiceChatStatusIcon.SetImageColorAndOpacity
	// void SetImageColorAndOpacity(FSlateColor& InColorAndOpacity);                                                            // [0x96b0e08] Final|Native|Public|HasOutParms|BlueprintCallable 
};

/// Class /Script/FortniteUI.FortVoiceChatStatusIconProxyAnim
/// Size: 0x0030 (0x0002C0 - 0x0002F0)
class UFortVoiceChatStatusIconProxyAnim : public UFortVoiceChatStatusIcon
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 752;

public:
	DMember(float)                                     TalkingRampUpSeconds                                        OFFSET(get<float>, {0x2B8, 4, 0, 0})
	DMember(float)                                     TalkingRampDownSeconds                                      OFFSET(get<float>, {0x2BC, 4, 0, 0})
	DMember(float)                                     TalkingUpdatesPerSecond                                     OFFSET(get<float>, {0x2C0, 4, 0, 0})
};

/// Class /Script/FortniteUI.FortArenaLoadingScreen
/// Size: 0x0018 (0x0002E8 - 0x000300)
class UFortArenaLoadingScreen : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 768;

public:
	CMember(URichTextBlock*)                           Text_LeagueName                                             OFFSET(get<T>, {0x2E8, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_Division                                               OFFSET(get<T>, {0x2F0, 8, 0, 0})
	CMember(UFortLazyImage*)                           Image_CurrentDivision                                       OFFSET(get<T>, {0x2F8, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortArenaLoadingScreen.UpdateBackground
	// void UpdateBackground(int32_t DivisionRank);                                                                             // [0x1d9241c] Event|Protected|BlueprintCallable|BlueprintEvent 
};

/// Class /Script/FortniteUI.FortHUDPointCounter
/// Size: 0x0028 (0x0002E8 - 0x000310)
class UFortHUDPointCounter : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 784;

public:
	CMember(UCommonTextBlock*)                         Text_ScoreValue                                             OFFSET(get<T>, {0x2F8, 8, 0, 0})
	CMember(UTextBlock*)                               Text_DebugId                                                OFFSET(get<T>, {0x300, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortHUDPointCounter.OnPointTextSet
	// void OnPointTextSet(bool bHasScore);                                                                                     // [0x1d9241c] Event|Protected|BlueprintEvent 
};

/// Class /Script/FortniteUI.FortHUDScoringAlert
/// Size: 0x00F0 (0x000328 - 0x000418)
class UFortHUDScoringAlert : public UFortHUDElementWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1048;

public:
	SMember(FText)                                     PointGainFormat                                             OFFSET(getStruct<T>, {0x328, 24, 0, 0})
	CMember(UFortHUDPointCounter*)                     HUDPointCounter                                             OFFSET(get<T>, {0x3D0, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_ScoreDesc                                              OFFSET(get<T>, {0x3D8, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_PointCount                                             OFFSET(get<T>, {0x3E0, 8, 0, 0})
	CMember(UCommonLazyImage*)                         Icon_Scoring                                                OFFSET(get<T>, {0x3E8, 8, 0, 0})
	CMember(UClass*)                                   AbandonMatchClass                                           OFFSET(get<T>, {0x3F0, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortHUDScoringAlert.OnTournamentStatUpdate
	// void OnTournamentStatUpdate(FFortTournamentStatInfo& TournamentStatInfo);                                                // [0x96af020] Final|Native|Protected|HasOutParms 
	// Function /Script/FortniteUI.FortHUDScoringAlert.OnTeamPlacementChanged
	// void OnTeamPlacementChanged(int32_t NewTeamPlacement);                                                                   // [0x96aefa0] Final|Native|Protected 
	// Function /Script/FortniteUI.FortHUDScoringAlert.OnPointScored
	// void OnPointScored();                                                                                                    // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortHUDScoringAlert.OnPlayerPlacementChanged
	// void OnPlayerPlacementChanged(AFortPlayerStateAthena* Sender, int32_t NewPlayerPlacement);                               // [0x96aeedc] Final|Native|Protected 
	// Function /Script/FortniteUI.FortHUDScoringAlert.OnPlayerMatchAbandonStateChanged
	// void OnPlayerMatchAbandonStateChanged(EMatchAbandonState OldState, EMatchAbandonState NewState);                         // [0x96aee18] Final|Native|Protected 
	// Function /Script/FortniteUI.FortHUDScoringAlert.OnMinigameCurrentRoundChanged
	// void OnMinigameCurrentRoundChanged(AFortMinigame* Minigame, int32_t CurrentRound);                                       // [0x96aed54] Final|Native|Private 
	// Function /Script/FortniteUI.FortHUDScoringAlert.HandlePointAnimationFinished
	// void HandlePointAnimationFinished();                                                                                     // [0x96aea08] Final|Native|Protected|BlueprintCallable 
};

/// Class /Script/FortniteUI.FortTournamentDetailsPage
/// Size: 0x0018 (0x000778 - 0x000790)
class UFortTournamentDetailsPage : public UFortShowdownDetailView
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1936;

public:
};

/// Class /Script/FortniteUI.FortTournamentLiveGameSessionData
/// Size: 0x0028 (0x000028 - 0x000050)
class UFortTournamentLiveGameSessionData : public UObject
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 80;

public:
	CMember(TArray<USocialUser*>)                      UserInfo                                                    OFFSET(get<T>, {0x40, 16, 0, 0})
};

/// Class /Script/FortniteUI.FortTournamentLiveGameSessionEntry
/// Size: 0x0020 (0x0014E0 - 0x001500)
class UFortTournamentLiveGameSessionEntry : public UCommonButtonLegacy
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 5376;

public:
	CMember(UCommonTextBlock*)                         Text_PlayerList                                             OFFSET(get<T>, {0x14E8, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_GameTimeDuration                                       OFFSET(get<T>, {0x14F0, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortTournamentLiveGameSessionEntry.OnEntrySet
	// void OnEntrySet(int32_t EntryIndex);                                                                                     // [0x1d9241c] Event|Protected|BlueprintEvent 
};

/// Class /Script/FortniteUI.FortTournamentLiveGames
/// Size: 0x00A8 (0x000400 - 0x0004A8)
class UFortTournamentLiveGames : public UCommonActivatableWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1192;

public:
	CMember(TArray<UFortTournamentLiveGameSessionData*>) LiveSessions                                              OFFSET(get<T>, {0x480, 16, 0, 0})
	CMember(UFortTournamentLiveGameSessionData*)       SelectedGame                                                OFFSET(get<T>, {0x490, 8, 0, 0})
	CMember(UListView*)                                ListView_SessionEntries                                     OFFSET(get<T>, {0x498, 8, 0, 0})
	CMember(UCommonButtonLegacy*)                      Button_WatchGame                                            OFFSET(get<T>, {0x4A0, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortTournamentLiveGames.SetTournamentIds
	// void SetTournamentIds(FString InTournamentId, FString InEventWindowId);                                                  // [0x96b1040] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.FortTournamentLiveGames.OnViewLiveGames
	// void OnViewLiveGames();                                                                                                  // [0x96af6e0] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.FortTournamentLiveGames.NotifyNoLiveGames
	// void NotifyNoLiveGames();                                                                                                // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortTournamentLiveGames.NotifyLoadingMoreGames
	// void NotifyLoadingMoreGames(bool bIsLoading);                                                                            // [0x1d9241c] Event|Protected|BlueprintEvent 
};

/// Class /Script/FortniteUI.FortTournamentModal
/// Size: 0x0008 (0x000570 - 0x000578)
class UFortTournamentModal : public UFortActivatablePanel
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1400;

public:
	CMember(UFortTournamentDetailsPage*)               TournamentDetailsPage                                       OFFSET(get<T>, {0x570, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortTournamentModal.OnTournamentSet
	// void OnTournamentSet(FLinearColor LeftColor, FLinearColor RightColor);                                                   // [0x1d9241c] Event|Protected|HasDefaults|BlueprintEvent 
};

/// Class /Script/FortniteUI.FortTournamentPayoutThresholdEntry
/// Size: 0x0010 (0x0002E8 - 0x0002F8)
class UFortTournamentPayoutThresholdEntry : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 760;

public:
	CMember(UCommonTextBlock*)                         Text_Threshold                                              OFFSET(get<T>, {0x2E8, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_Rewards                                                OFFSET(get<T>, {0x2F0, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortTournamentPayoutThresholdEntry.OnPayoutDataSet
	// void OnPayoutDataSet(int32_t EntryIndex);                                                                                // [0x1d9241c] Event|Protected|BlueprintEvent 
};

/// Class /Script/FortniteUI.FortTournamentPayoutModal
/// Size: 0x00D0 (0x000400 - 0x0004D0)
class UFortTournamentPayoutModal : public UCommonActivatableWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1232;

public:
	SMember(FDataTableRowHandle)                       TabViewLeftAction                                           OFFSET(getStruct<T>, {0x400, 16, 0, 0})
	SMember(FDataTableRowHandle)                       TabViewRightAction                                          OFFSET(getStruct<T>, {0x410, 16, 0, 0})
	CMember(UCommonButtonGroupLegacy*)                 ViewButtonGroup                                             OFFSET(get<T>, {0x420, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_TournamentName                                         OFFSET(get<T>, {0x428, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_SessionName                                            OFFSET(get<T>, {0x430, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_ThresholdTypeLabel                                     OFFSET(get<T>, {0x438, 8, 0, 0})
	CMember(UDynamicEntryBox*)                         DynamicEntryBox_PayoutThresholds                            OFFSET(get<T>, {0x440, 8, 0, 0})
	CMember(TArray<FTournamentLeaderboardPayoutTableData>) LeaderboardsPayoutTableData                             OFFSET(get<T>, {0x448, 16, 0, 0})
	CMember(UDynamicEntryBox*)                         EntryBox_ViewButtons                                        OFFSET(get<T>, {0x458, 8, 0, 0})
	CMember(UCommonActionWidget*)                      ActionWidget_TabLeft                                        OFFSET(get<T>, {0x460, 8, 0, 0})
	CMember(UCommonActionWidget*)                      ActionWidget_TabRight                                       OFFSET(get<T>, {0x468, 8, 0, 0})
	CMember(TMap<UCommonButtonLegacy*, FRewardsDataIds>) TabButtonsToRewardsIds                                    OFFSET(get<T>, {0x470, 80, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortTournamentPayoutModal.UpdateEventWindow
	// void UpdateEventWindow(FString EventId, FString EventWindowId);                                                          // [0x96b1dbc] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.FortTournamentPayoutModal.SetEventWindowId
	// void SetEventWindowId(FString EventId, FString EventWindowId);                                                           // [0x96b0144] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.FortTournamentPayoutModal.OnTabVisibilityChange
	// void OnTabVisibilityChange(bool bIsVisible);                                                                             // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortTournamentPayoutModal.NotifyNoPayouts
	// void NotifyNoPayouts();                                                                                                  // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortTournamentPayoutModal.InitializeTabButton
	// void InitializeTabButton(UCommonButtonLegacy* TabButton, FText& TabText);                                                // [0x1d9241c] Event|Protected|HasOutParms|BlueprintEvent 
	// Function /Script/FortniteUI.FortTournamentPayoutModal.HandleViewTabSelectionChanged
	// void HandleViewTabSelectionChanged(UCommonButtonLegacy* TabButton, int32_t TabIdx);                                      // [0x96aeb20] Final|Native|Private 
};

/// Class /Script/FortniteUI.FortTournamentPosterViolator
/// Size: 0x0048 (0x0002E8 - 0x000330)
class UFortTournamentPosterViolator : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 816;

public:
	CMember(UCommonWidgetSwitcherLegacy*)              WidgetSwitcher_EventStateSwitcher                           OFFSET(get<T>, {0x318, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_TimeRemaining                                          OFFSET(get<T>, {0x320, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_InformationViolator                                    OFFSET(get<T>, {0x328, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortTournamentPosterViolator.OnViolatorStateRefreshed
	// void OnViolatorStateRefreshed(ETournmentPosterViolatorState NewTimeState);                                               // [0x1d9241c] Event|Protected|BlueprintEvent 
};

/// Class /Script/FortniteUI.FortAthenaTutorialScreenData
/// Size: 0x0020 (0x000030 - 0x000050)
class UFortAthenaTutorialScreenData : public UDataAsset
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 80;

public:
	CMember(TArray<FFortAthenaTutorialStepInfo>)       TutorialSteps                                               OFFSET(get<T>, {0x30, 16, 0, 0})
	CMember(TArray<FFortAthenaTutorialStandaloneStepInfo>) StandaloneTutorialSteps                                 OFFSET(get<T>, {0x40, 16, 0, 0})
};

/// Class /Script/FortniteUI.FortBangWrapperContentButton
/// Size: 0x0020 (0x0014E0 - 0x001500)
class UFortBangWrapperContentButton : public UCommonButtonLegacy
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 5376;

public:
};

/// Class /Script/FortniteUI.FortBangWrapperContentWidget
/// Size: 0x0018 (0x0002E8 - 0x000300)
class UFortBangWrapperContentWidget : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 768;

public:
};

/// Class /Script/FortniteUI.FortTutorialOverlay
/// Size: 0x0000 (0x000538 - 0x000538)
class UFortTutorialOverlay : public UCommonActivatablePanelLegacy
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1336;

public:
};

/// Class /Script/FortniteUI.FortTutorialQuestVisibilityWrapper
/// Size: 0x0020 (0x000300 - 0x000320)
class UFortTutorialQuestVisibilityWrapper : public UFortBangWrapper_NUI
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 800;

public:
	CMember(UFortQuestItemDefinition*)                 QuestItemDefinition                                         OFFSET(get<T>, {0x300, 8, 0, 0})
	SMember(FDataTableRowHandle)                       QuestObjectiveStat                                          OFFSET(getStruct<T>, {0x308, 16, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortTutorialQuestVisibilityWrapper.HandleCurrentQuestsChanged
	// void HandleCurrentQuestsChanged();                                                                                       // [0x96ae8d0] Final|Native|Private 
};

/// Class /Script/FortniteUI.FortTutorialWindow
/// Size: 0x0000 (0x000570 - 0x000570)
class UFortTutorialWindow : public UFortActivatablePanel
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1392;

public:
};

/// Class /Script/FortniteUI.TutorialHighlight
/// Size: 0x0050 (0x000178 - 0x0001C8)
class UTutorialHighlight : public UWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 456;

public:
	CMember(TWeakObjectPtr<UClass*>)                   CustomHighlightWidget                                       OFFSET(get<T>, {0x190, 32, 0, 0})
};

/// Class /Script/FortniteUI.UIKitContextMenuActionContext
/// Size: 0x0010 (0x000028 - 0x000038)
class UUIKitContextMenuActionContext : public UObject
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 56;

public:
};

/// Class /Script/FortniteUI.UIKitContextMenu
/// Size: 0x0008 (0x000400 - 0x000408)
class UUIKitContextMenu : public UCommonActivatableWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1032;

public:
	CMember(UUIKitContextMenuActionContext*)           ActionContext                                               OFFSET(get<T>, {0x400, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.UIKitContextMenu.SetInteractionContext
	// void SetInteractionContext(UUIKitContextMenuActionContext* InContext);                                                   // [0x96b0ea0] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/FortniteUI.UIKitContextMenuAnchor
/// Size: 0x0010 (0x0002E8 - 0x0002F8)
class UUIKitContextMenuAnchor : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 760;

public:
	CMember(UMenuAnchor*)                              Anchor                                                      OFFSET(get<T>, {0x2E8, 8, 0, 0})
	CMember(UClass*)                                   MenuWidgetClass                                             OFFSET(get<T>, {0x2F0, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.UIKitContextMenuAnchor.HandleGetUserMenuContent
	// UUserWidget* HandleGetUserMenuContent();                                                                                 // [0x96ae9e4] Final|Native|Private 
	// Function /Script/FortniteUI.UIKitContextMenuAnchor.BP_OnMenuSpawned
	// void BP_OnMenuSpawned(UUserWidget* Widget);                                                                              // [0x1d9241c] Event|Public|BlueprintEvent 
};

/// Class /Script/FortniteUI.UIKitDialogBase
/// Size: 0x0000 (0x000400 - 0x000400)
class UUIKitDialogBase : public UCommonActivatableWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1024;

public:
};

/// Class /Script/FortniteUI.FortCTAButton
/// Size: 0x0010 (0x0014A0 - 0x0014B0)
class UFortCTAButton : public UUIKitModularButton
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 5296;

public:
	DMember(bool)                                      bAutoUpdateFromInputAction                                  OFFSET(get<bool>, {0x14A8, 1, 0, 0})
	DMember(bool)                                      bUseNaturalNavigation                                       OFFSET(get<bool>, {0x14A9, 1, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortCTAButton.SetUseNaturalNavigation
	// void SetUseNaturalNavigation(bool bInUseNaturalNavigation);                                                              // [0x96b1d04] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortCTAButton.SetText
	// void SetText(FText& ButtonText);                                                                                         // [0x1f051f4] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/FortniteUI.FortCTAButton.SetSecondaryText
	// void SetSecondaryText(FText& ButtonSecondaryText);                                                                       // [0x1f053a8] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/FortniteUI.FortCTAButton.SetRequiresHold
	// void SetRequiresHold(bool bInRequiresHold);                                                                              // [0x96b0fc0] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortCTAButton.SetAutoUpdateFromInputAction
	// void SetAutoUpdateFromInputAction(bool bInAutoUpdateFromInputAction);                                                    // [0x96b0028] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortCTAButton.GetRequiresHold
	// bool GetRequiresHold();                                                                                                  // [0x96ae5d4] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortCTAButton.GetRequiredHoldTime
	// float GetRequiredHoldTime();                                                                                             // [0x7d955bc] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortCTAButton.BP_SetText
	// void BP_SetText(FText& Text);                                                                                            // [0x1d9241c] Event|Protected|HasOutParms|BlueprintEvent 
	// Function /Script/FortniteUI.FortCTAButton.BP_SetSecondaryText
	// void BP_SetSecondaryText(FText& Text);                                                                                   // [0x1d9241c] Event|Protected|HasOutParms|BlueprintEvent 
	// Function /Script/FortniteUI.FortCTAButton.BP_OnInputActionUpdated
	// void BP_OnInputActionUpdated();                                                                                          // [0x1d9241c] Event|Protected|BlueprintEvent 
};

/// Class /Script/FortniteUI.UIKitEditableText
/// Size: 0x0000 (0x0004E0 - 0x0004E0)
class UUIKitEditableText : public UEditableText
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1248;

public:


	/// Functions
	// Function /Script/FortniteUI.UIKitEditableText.SetMobileFontSizeMultiplier
	// void SetMobileFontSizeMultiplier(float InMobileFontSizeMultiplier);                                                      // [0x9402694] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.UIKitEditableText.GetMobileFontSizeMultiplier
	// float GetMobileFontSizeMultiplier();                                                                                     // [0x94009f0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.UIKitEditableText.GetDynamicFontMaterial
	// UMaterialInstanceDynamic* GetDynamicFontMaterial();                                                                      // [0x322ae44] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/FortniteUI.UIKitContextMenuButtonViewModel
/// Size: 0x0050 (0x000088 - 0x0000D8)
class UUIKitContextMenuButtonViewModel : public UUIKitSelectableButtonViewModel
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 216;

public:
};

/// Class /Script/FortniteUI.UIKitContextMenuViewModel
/// Size: 0x0010 (0x000068 - 0x000078)
class UUIKitContextMenuViewModel : public UMVVMViewModelBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 120;

public:
	CMember(TArray<UUIKitSelectableButtonViewModel*>)  Buttons                                                     OFFSET(get<T>, {0x68, 16, 0, 0})
};

/// Class /Script/FortniteUI.UIKitDialogButtonViewModel
/// Size: 0x0048 (0x000068 - 0x0000B0)
class UUIKitDialogButtonViewModel : public UMVVMViewModelBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 176;

public:
	SMember(FText)                                     Text                                                        OFFSET(getStruct<T>, {0x68, 24, 0, 0})
	CMember(EFortDialogResult)                         ActionType                                                  OFFSET(get<T>, {0x80, 1, 0, 0})
	CMember(TWeakObjectPtr<UDataTable*>)               DataTable                                                   OFFSET(get<T>, {0x88, 32, 0, 0})
	SMember(FName)                                     InputAction                                                 OFFSET(getStruct<T>, {0xA8, 4, 0, 0})
};

/// Class /Script/FortniteUI.UIKitDialogViewModel
/// Size: 0x0068 (0x000068 - 0x0000D0)
class UUIKitDialogViewModel : public UMVVMViewModelBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 208;

public:
	SMember(FText)                                     DialogTitle                                                 OFFSET(getStruct<T>, {0x78, 24, 0, 0})
	SMember(FText)                                     DialogInfoText                                              OFFSET(getStruct<T>, {0x90, 24, 0, 0})
	CMember(UTexture2D*)                               DialogImage                                                 OFFSET(get<T>, {0xA8, 8, 0, 0})
	CMember(TArray<UUIKitDialogButtonViewModel*>)      Buttons                                                     OFFSET(get<T>, {0xB0, 16, 0, 0})
	DMember(float)                                     DisplayTime                                                 OFFSET(get<float>, {0xC0, 4, 0, 0})
	CMember(USoundBase*)                               ShowSound                                                   OFFSET(get<T>, {0xC8, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.UIKitDialogViewModel.SendResult
	// void SendResult(EFortDialogResult Result, FName ResultName);                                                             // [0x96aff64] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/FortniteUI.UIKitItemCardViewModel
/// Size: 0x0028 (0x000068 - 0x000090)
class UUIKitItemCardViewModel : public UMVVMViewModelBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 144;

public:
	CMember(TWeakObjectPtr<UTexture2D*>)               ItemImage                                                   OFFSET(get<T>, {0x68, 32, 0, 0})
	DMember(bool)                                      bIsEnhanced                                                 OFFSET(get<bool>, {0x88, 1, 1, 0})
	DMember(bool)                                      bIsEquipped                                                 OFFSET(get<bool>, {0x88, 1, 1, 1})
	DMember(bool)                                      bIsLocked                                                   OFFSET(get<bool>, {0x88, 1, 1, 2})
	DMember(bool)                                      bIsFavorite                                                 OFFSET(get<bool>, {0x88, 1, 1, 3})
	DMember(bool)                                      bIsArchived                                                 OFFSET(get<bool>, {0x88, 1, 1, 4})
};

/// Class /Script/FortniteUI.FortLetoLayoutBorder
/// Size: 0x0008 (0x0002E8 - 0x0002F0)
class UFortLetoLayoutBorder : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 752;

public:
	CMember(UCommonTextBlock*)                         Text_PlayerName                                             OFFSET(get<T>, {0x2E8, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortLetoLayoutBorder.UpdateBorderWidth
	// void UpdateBorderWidth(float HalfBorderWidth);                                                                           // [0x1d9241c] Event|Protected|BlueprintEvent 
};

/// Class /Script/FortniteUI.FortRootViewportLayout
/// Size: 0x0138 (0x0002E8 - 0x000420)
class UFortRootViewportLayout : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1056;

public:
	CMember(UClass*)                                   WebPurchaseScreenWidgetClass                                OFFSET(get<T>, {0x308, 8, 0, 0})
	CMember(UFortWebPurchaseScreen*)                   WebPurchaseWidget_RuntimeSpawned                            OFFSET(get<T>, {0x310, 8, 0, 0})
	CMember(UClass*)                                   MVVMDialogWidgetClass                                       OFFSET(get<T>, {0x318, 8, 0, 0})
	CMember(UFortUINotificationManager*)               NotificationManager                                         OFFSET(get<T>, {0x320, 8, 0, 0})
	CMember(TArray<FFortDialogDescription_NUI>)        ConfirmationQueue                                           OFFSET(get<T>, {0x328, 16, 0, 0})
	CMember(UFortUIStateWidget_NUI*)                   CurrentLegacyStateWidget                                    OFFSET(get<T>, {0x348, 8, 0, 0})
	CMember(UClass*)                                   LetoLayoutBorderClass                                       OFFSET(get<T>, {0x358, 8, 0, 0})
	CMember(TArray<FPluginUIStateWidgetEntry>)         PluginUIStateWidgetEntries                                  OFFSET(get<T>, {0x360, 16, 0, 0})
	CMember(UFortUIStateWidgetBase*)                   CurrentStateWidget                                          OFFSET(get<T>, {0x3C0, 8, 0, 0})
	CMember(USizeBox*)                                 StateContentBox                                             OFFSET(get<T>, {0x3C8, 8, 0, 0})
	CMember(UCommonActivatableWidgetQueue*)            WidgetQueue_ModalContent                                    OFFSET(get<T>, {0x3D0, 8, 0, 0})
	CMember(UAthenaProgressModal*)                     AthenaProgressModal                                         OFFSET(get<T>, {0x3D8, 8, 0, 0})
	CMember(UOverlay*)                                 Overlay_Dialog                                              OFFSET(get<T>, {0x3E0, 8, 0, 0})
	CMember(UFortConfirmationWindow*)                  ConfirmationWindow_ConfirmationWidget                       OFFSET(get<T>, {0x3E8, 8, 0, 0})
	CMember(UFortErrorWindow*)                         ErrorWindow_Errors                                          OFFSET(get<T>, {0x3F0, 8, 0, 0})
	CMember(UAthenaProgressModal*)                     ProgressModal_ControllerDisconnected                        OFFSET(get<T>, {0x3F8, 8, 0, 0})
	CMember(UFortRestartClientModal*)                  RestartModal                                                OFFSET(get<T>, {0x400, 8, 0, 0})
	CMember(UFortPinModal*)                            PinModal                                                    OFFSET(get<T>, {0x408, 8, 0, 0})
	CMember(UFortToastDisplayArea*)                    ToastDisplayArea_ToastHandler                               OFFSET(get<T>, {0x410, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortRootViewportLayout.PurchasingWidgetDisplayCallback
	// void PurchasingWidgetDisplayCallback(UWidget* WebWidget, FString OfferId);                                               // [0x96af764] Final|Native|Protected 
	// Function /Script/FortniteUI.FortRootViewportLayout.PurchasingWidgetDismissedCallback
	// void PurchasingWidgetDismissedCallback();                                                                                // [0x96af750] Final|Native|Protected 
	// Function /Script/FortniteUI.FortRootViewportLayout.HandleControllerConnectionChanged
	// void HandleControllerConnectionChanged(bool bConnected);                                                                 // [0x96ae850] Final|Native|Private 
};

/// Class /Script/FortniteUI.FortRootViewportLayout_Athena
/// Size: 0x0018 (0x000420 - 0x000438)
class UFortRootViewportLayout_Athena : public UFortRootViewportLayout
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1080;

public:
	SMember(FDataTableRowHandle)                       LetoToggleDormancyAction                                    OFFSET(getStruct<T>, {0x420, 16, 0, 0})
};

/// Class /Script/FortniteUI.FortUIDirector
/// Size: 0x0038 (0x000058 - 0x000090)
class UFortUIDirector : public UFortUIDirectorSubsystemBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 144;

public:
	CMember(TArray<FLoadedUIManagerEntry>)             LoadedManagerClassesBySubgame                               OFFSET(get<T>, {0x58, 16, 0, 0})
	CMember(UFortUIManager*)                           CurrentManager                                              OFFSET(get<T>, {0x68, 8, 0, 0})
};

/// Class /Script/FortniteUI.FortUIManager
/// Size: 0x01E8 (0x000028 - 0x000210)
class UFortUIManager : public UObject
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 528;

public:
	CMember(TWeakObjectPtr<UClass*>)                   LayoutClass                                                 OFFSET(get<T>, {0x30, 32, 0, 0})
	DMember(bool)                                      bUseLegacyInputSystem                                       OFFSET(get<bool>, {0x50, 1, 0, 0})
	CMember(TArray<FFortRootViewportLayoutInfo>)       RootViewportLayouts                                         OFFSET(get<T>, {0x58, 16, 0, 0})
	CMember(TWeakObjectPtr<UClass*>)                   UIManagerClass                                              OFFSET(get<T>, {0x70, 32, 0, 0})
};

/// Class /Script/FortniteUI.FortUIManagerWidget_NUI
/// Size: 0x0118 (0x0002E8 - 0x000400)
class UFortUIManagerWidget_NUI : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1024;

public:
	CMember(UCommonActivatablePanelLegacy*)            CurrentModalWidget                                          OFFSET(get<T>, {0x2F0, 8, 0, 0})
	CMember(TArray<UCommonActivatablePanelLegacy*>)    ModalPanelQueue                                             OFFSET(get<T>, {0x2F8, 16, 0, 0})
	CMember(UClass*)                                   PlayerBannedScreen                                          OFFSET(get<T>, {0x308, 8, 0, 0})
	CMember(UFortUIStateWidget_NUI*)                   CurrentStateWidget                                          OFFSET(get<T>, {0x310, 8, 0, 0})
	CMember(UFortUINotificationManager*)               NotificationManager                                         OFFSET(get<T>, {0x318, 8, 0, 0})
	CMember(TMap<UClass*, UUserWidget*>)               TypedWidgetCache                                            OFFSET(get<T>, {0x320, 80, 0, 0})
	CMember(TArray<FFortDialogDescription_NUI>)        ConfirmationQueue                                           OFFSET(get<T>, {0x370, 16, 0, 0})
	CMember(UNamedSlot*)                               StateContentLayer                                           OFFSET(get<T>, {0x3C8, 8, 0, 0})
	CMember(UNamedSlot*)                               ModalLayer                                                  OFFSET(get<T>, {0x3D0, 8, 0, 0})
	CMember(UFortErrorWindow*)                         ErrorWindow_Errors                                          OFFSET(get<T>, {0x3D8, 8, 0, 0})
	CMember(UFortRestartClientModal*)                  RestartModal                                                OFFSET(get<T>, {0x3E0, 8, 0, 0})
	CMember(UFortPinModal*)                            PinModal                                                    OFFSET(get<T>, {0x3E8, 8, 0, 0})
	CMember(UFortConfirmationWindow*)                  ConfirmationWindow_ConfirmationWidget                       OFFSET(get<T>, {0x3F0, 8, 0, 0})
	CMember(UFortProgressModal*)                       ProgressModal_Progress                                      OFFSET(get<T>, {0x3F8, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortUIManagerWidget_NUI.UpdateStateWidgetContent
	// void UpdateStateWidgetContent(UFortUIStateWidget_NUI* StateWidget);                                                      // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortUIManagerWidget_NUI.RequestClearConfirmationLayer
	// void RequestClearConfirmationLayer();                                                                                    // [0x96afe44] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortUIManagerWidget_NUI.OnStateStarted
	// void OnStateStarted();                                                                                                   // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortUIManagerWidget_NUI.OnStateEnded
	// void OnStateEnded();                                                                                                     // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortUIManagerWidget_NUI.OnModalQueueEmptied
	// void OnModalQueueEmptied();                                                                                              // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortUIManagerWidget_NUI.NativeClearLayers
	// void NativeClearLayers();                                                                                                // [0x96aed2c] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.FortUIManagerWidget_NUI.KillConfirmationDialog
	// void KillConfirmationDialog(UObject* WorldContextObject);                                                                // [0x96aecb4] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortUIManagerWidget_NUI.IsStateContentChildShowing
	// bool IsStateContentChildShowing();                                                                                       // [0x96aec94] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortUIManagerWidget_NUI.IsShowingModalsConfirmationsErrors
	// bool IsShowingModalsConfirmationsErrors();                                                                               // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.FortUIManagerWidget_NUI.HandleErrorWindowDeactivated
	// void HandleErrorWindowDeactivated(UCommonActivatablePanelLegacy* RemovedPanel);                                          // [0x96ae964] Final|Native|Private 
	// Function /Script/FortniteUI.FortUIManagerWidget_NUI.HandleDeactivatedModal
	// void HandleDeactivatedModal(UCommonActivatablePanelLegacy* DeactivatedPanel);                                            // [0x96ae8e4] Final|Native|Private 
	// Function /Script/FortniteUI.FortUIManagerWidget_NUI.HandleConfirmationWindowDeactivated
	// void HandleConfirmationWindowDeactivated(UCommonActivatablePanelLegacy* DeactivatedPanel);                               // [0x96ae7d0] Final|Native|Private 
	// Function /Script/FortniteUI.FortUIManagerWidget_NUI.GetUINotificationQueue
	// UFortUINotificationQueue* GetUINotificationQueue(UObject* WorldContextObject, EFortNotificationQueueType QueueType);     // [0x96ae6f0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortUIManagerWidget_NUI.GetUIManagerWidget
	// UFortUIManagerWidget_NUI* GetUIManagerWidget(UObject* WorldContextObject);                                               // [0x96ae5f0] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortUIManagerWidget_NUI.CreateNotification
	// UFortUINotification* CreateNotification(UClass* UINotificationClass);                                                    // [0x96adc64] Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortUIManagerWidget_NUI._BPGetCurrentUIState
	// EFortUIState _BPGetCurrentUIState();                                                                                     // [0x96b2b7c] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/FortniteUI.FortUIManagerWidget_Campaign
/// Size: 0x0028 (0x000400 - 0x000428)
class UFortUIManagerWidget_Campaign : public UFortUIManagerWidget_NUI
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1064;

public:
	CMember(UFortUINavigationManager*)                 NavigationManager                                           OFFSET(get<T>, {0x410, 8, 0, 0})
	CMember(UTalkingHead*)                             TalkingHead                                                 OFFSET(get<T>, {0x418, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortUIManagerWidget_Campaign.GetUINavigationManager
	// UFortUINavigationManager* GetUINavigationManager(UObject* WorldContextObject);                                           // [0x96ae670] Final|Native|Static|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortUIManagerWidget_Campaign.GetNavigationManager
	// UFortUINavigationManager* GetNavigationManager();                                                                        // [0x931bba0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortUIManagerWidget_Campaign.ForceInvalidUIStateUntilNextCinematic
	// void ForceInvalidUIStateUntilNextCinematic();                                                                            // [0x96ae51c] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/FortniteUI.FortUIManager_Athena
/// Size: 0x0020 (0x000210 - 0x000230)
class UFortUIManager_Athena : public UFortUIManager
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 560;

public:
	CMember(UClass*)                                   LetoHudOverlayClass                                         OFFSET(get<T>, {0x208, 8, 0, 0})
	CMember(ULetoHudOverlay*)                          LetoHudOverlay                                              OFFSET(get<T>, {0x210, 8, 0, 0})
	DMember(float)                                     SidekickScreenWidthRatio                                    OFFSET(get<float>, {0x218, 4, 0, 0})
};

/// Class /Script/FortniteUI.FortUIManager_Campaign
/// Size: 0x0010 (0x000210 - 0x000220)
class UFortUIManager_Campaign : public UFortUIManager
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 544;

public:
	CMember(TArray<FFortUIManager_Campaign_Player>)    InterfaceStack                                              OFFSET(get<T>, {0x208, 16, 0, 0})
};

/// Class /Script/FortniteUI.FortUIManager_STW
/// Size: 0x0010 (0x000210 - 0x000220)
class UFortUIManager_STW : public UFortUIManager
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 544;

public:
};

/// Class /Script/FortniteUI.FortUIStateWidget_JoinServer
/// Size: 0x0028 (0x0005B0 - 0x0005D8)
class UFortUIStateWidget_JoinServer : public UFortUIStateWidget_NUI
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1496;

public:
	CMember(UCommonWidgetStackLegacy*)                 Stack_MainContent                                           OFFSET(get<T>, {0x5B0, 8, 0, 0})
	SMember(FDataTableRowHandle)                       TutorialCompleteStatHandle                                  OFFSET(getStruct<T>, {0x5B8, 16, 0, 0})
	CMember(UClass*)                                   RejoinWindowClass                                           OFFSET(get<T>, {0x5C8, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortUIStateWidget_JoinServer.OnShowTutorialDialog
	// void OnShowTutorialDialog();                                                                                             // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortUIStateWidget_JoinServer.HandleMatchmakingStateChange
	// void HandleMatchmakingStateChange(TEnumAsByte<EMatchmakingState> OldState, TEnumAsByte<EMatchmakingState> NewState);     // [0x96ddcd8] Final|Native|Private 
	// Function /Script/FortniteUI.FortUIStateWidget_JoinServer.HandleMatchmakingComplete
	// void HandleMatchmakingComplete(EMatchmakingCompleteResult MatchmakingResult);                                            // [0x96ddbfc] Final|Native|Private 
	// Function /Script/FortniteUI.FortUIStateWidget_JoinServer.HandleLobbyTimeUpdated
	// void HandleLobbyTimeUpdated(int32_t TimeRemaining);                                                                      // [0x96ddb7c] Final|Native|Private 
	// Function /Script/FortniteUI.FortUIStateWidget_JoinServer.HandleLobbyDisconnected
	// void HandleLobbyDisconnected();                                                                                          // [0x96ddb68] Final|Native|Private 
};

/// Class /Script/FortniteUI.FortUIStateWidget_Login
/// Size: 0x0108 (0x000418 - 0x000520)
class UFortUIStateWidget_Login : public UFortUIStateWidgetBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1312;

public:
	CMember(UCommonButtonLegacy*)                      Button_Cancel                                               OFFSET(get<T>, {0x4A8, 8, 0, 0})
	CMember(UUserWidget*)                              ActionBar_Bottom                                            OFFSET(get<T>, {0x4B0, 8, 0, 0})
	CMember(UCommonActivatableWidgetSwitcher*)         Switcher_ScreenContents                                     OFFSET(get<T>, {0x4B8, 8, 0, 0})
	CMember(UFortSafeZoneEditor*)                      Editor_SafeZone                                             OFFSET(get<T>, {0x4C0, 8, 0, 0})
	CMember(UFortLoginStatus*)                         Status_LoginInfo                                            OFFSET(get<T>, {0x4D0, 8, 0, 0})
	CMember(UFortSplashScreenWidget*)                  Splash_Screen                                               OFFSET(get<T>, {0x4E0, 8, 0, 0})
	CMember(UFortLoginInteractions*)                   Login_Interactions                                          OFFSET(get<T>, {0x4F0, 8, 0, 0})
	CMember(UHealthWarningScreen*)                     HealthWarningScreen_HealthInfo                              OFFSET(get<T>, {0x500, 8, 0, 0})
	CMember(UFortQualityLevelSelectScreen*)            QualityLevelSelectScreen_SelectInfo                         OFFSET(get<T>, {0x510, 8, 0, 0})
	DMember(bool)                                      bShowQuitButtonOnXbox                                       OFFSET(get<bool>, {0x51C, 1, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortUIStateWidget_Login.SetKeyArtVisibility
	// void SetKeyArtVisibility(int32_t NewActiveWidgetIndex);                                                                  // [0x1d9241c] Event|Protected|BlueprintEvent 
};

/// Class /Script/FortniteUI.FortUIStateWidget_SubgameSelect
/// Size: 0x0008 (0x0005B0 - 0x0005B8)
class UFortUIStateWidget_SubgameSelect : public UFortUIStateWidget_NUI
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1464;

public:
};

/// Class /Script/FortniteUI.FortUIManager_Startup
/// Size: 0x0000 (0x000210 - 0x000210)
class UFortUIManager_Startup : public UFortUIManager
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 528;

public:
};

/// Class /Script/FortniteUI.FortVariantEditorWidgetBase
/// Size: 0x00D8 (0x0002E8 - 0x0003C0)
class UFortVariantEditorWidgetBase : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 960;

public:
	CMember(UWidget*)                                  LogicalOuter                                                OFFSET(get<T>, {0x2E8, 8, 0, 0})
};

/// Class /Script/FortniteUI.FortFloatSliderVariantPicker
/// Size: 0x0030 (0x0003C0 - 0x0003F0)
class UFortFloatSliderVariantPicker : public UFortVariantEditorWidgetBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1008;

public:
	DMember(float)                                     CommitDelay                                                 OFFSET(get<float>, {0x3C0, 4, 0, 0})
	CMember(UFortCosmeticFloatSliderVariant*)          FloatVariant                                                OFFSET(get<T>, {0x3C8, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_VariantName                                            OFFSET(get<T>, {0x3D0, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_Value                                                  OFFSET(get<T>, {0x3D8, 8, 0, 0})
	CMember(UAnalogSlider*)                            Slider_Value                                                OFFSET(get<T>, {0x3E0, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortFloatSliderVariantPicker.OnUpdateValue
	// void OnUpdateValue(float NormalizedValue, bool bIsLocked);                                                               // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortFloatSliderVariantPicker.HandleSliderValueChanged
	// void HandleSliderValueChanged(float Value);                                                                              // [0x96de758] Final|Native|Protected 
};

/// Class /Script/FortniteUI.FortVariantEntryBox
/// Size: 0x0160 (0x000260 - 0x0003C0)
class UFortVariantEntryBox : public UDynamicEntryBox
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 960;

public:
	CMember(UAthenaCosmeticAccountItem*)               CurrentItem                                                 OFFSET(get<T>, {0x260, 8, 0, 0})
	CMember(UAthenaCosmeticItemDefinition*)            CurrentItemDef                                              OFFSET(get<T>, {0x268, 8, 0, 0})
	CMember(TArray<FMcpVariantChannelInfo>)            CurrentItemVariants                                         OFFSET(get<T>, {0x270, 16, 0, 0})
	CMember(TMap<FGameplayTag, UFortVariantEditorWidgetBase*>) ChannelWidgets                                      OFFSET(get<T>, {0x280, 80, 0, 0})
};

/// Class /Script/FortniteUI.FortVariantTileSelector
/// Size: 0x0020 (0x0003C0 - 0x0003E0)
class UFortVariantTileSelector : public UFortVariantEditorWidgetBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 992;

public:
	CMember(UCommonTileView*)                          TileView_VariantOptions                                     OFFSET(get<T>, {0x3C0, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_VariantName                                            OFFSET(get<T>, {0x3C8, 8, 0, 0})
	CMember(UVariantObject*)                           CurrentSelectedVariant                                      OFFSET(get<T>, {0x3D0, 8, 0, 0})
	DMember(bool)                                      bHandleMouseButtonDownEvent                                 OFFSET(get<bool>, {0x3D8, 1, 0, 0})
};

/// Class /Script/FortniteUI.FortVariantItemTexturePicker
/// Size: 0x00F0 (0x0003E0 - 0x0004D0)
class UFortVariantItemTexturePicker : public UFortVariantTileSelector
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1232;

public:
	CMember(UAthenaCosmeticItemDefinition*)            CachedItemDef                                               OFFSET(get<T>, {0x3E0, 8, 0, 0})
	CMember(UFortCosmeticVariant*)                     CachedCosmeticVariant                                       OFFSET(get<T>, {0x400, 8, 0, 0})
	CMember(TArray<UFortItemDefinition*>)              AdditionalPreviewStyles                                     OFFSET(get<T>, {0x408, 16, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortVariantItemTexturePicker.OnToggleAllItemsArchivedMessage
	// void OnToggleAllItemsArchivedMessage(bool bDisplay);                                                                     // [0x1d9241c] Event|Protected|BlueprintEvent 
};

/// Class /Script/FortniteUI.FortVariantNumericalPicker
/// Size: 0x0048 (0x0003C0 - 0x000408)
class UFortVariantNumericalPicker : public UFortVariantEditorWidgetBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1032;

public:
	DMember(int32_t)                                   MinNum                                                      OFFSET(get<int32_t>, {0x3C0, 4, 0, 0})
	DMember(int32_t)                                   MaxNum                                                      OFFSET(get<int32_t>, {0x3C4, 4, 0, 0})
	DMember(int32_t)                                   NumericDelta                                                OFFSET(get<int32_t>, {0x3C8, 4, 0, 0})
	DMember(int32_t)                                   CurrentNumber                                               OFFSET(get<int32_t>, {0x3CC, 4, 0, 0})
	CMember(UFortCosmeticNumericalVariant*)            NumericalVariant                                            OFFSET(get<T>, {0x3D0, 8, 0, 0})
	CMember(UCommonButtonLegacy*)                      Button_ZeroDigitUp                                          OFFSET(get<T>, {0x3D8, 8, 0, 0})
	CMember(UCommonButtonLegacy*)                      Button_ZeroDigitDown                                        OFFSET(get<T>, {0x3E0, 8, 0, 0})
	CMember(UCommonButtonLegacy*)                      Button_TenDigitUp                                           OFFSET(get<T>, {0x3E8, 8, 0, 0})
	CMember(UCommonButtonLegacy*)                      Button_TenDigitDown                                         OFFSET(get<T>, {0x3F0, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_NumericalValue                                         OFFSET(get<T>, {0x3F8, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_VariantName                                            OFFSET(get<T>, {0x400, 8, 0, 0})
};

/// Class /Script/FortniteUI.FortVariantFilterTab
/// Size: 0x0090 (0x0014E0 - 0x001570)
class UFortVariantFilterTab : public UCommonButtonLegacy
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 5488;

public:
	SMember(FAthenaVariantFilterTabInfo)               TabInfo                                                     OFFSET(getStruct<T>, {0x14E0, 112, 0, 0})
	CMember(UFortLazyImage*)                           LazyImage_Icon                                              OFFSET(get<T>, {0x1560, 8, 0, 0})
	CMember(UCommonTextBlock*)                         TextBlock_Label                                             OFFSET(get<T>, {0x1568, 8, 0, 0})
};

/// Class /Script/FortniteUI.FortVariantPicker
/// Size: 0x01C0 (0x000400 - 0x0005C0)
class UFortVariantPicker : public UCommonActivatableWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1472;

public:
	DMember(bool)                                      bShowCapeRestriction                                        OFFSET(get<bool>, {0x400, 1, 0, 0})
	CMember(UAthenaVariantPickerConfig*)               ConfigurationData                                           OFFSET(get<T>, {0x408, 8, 0, 0})
	SMember(FDataTableRowHandle)                       PrimaryTabLeftAction                                        OFFSET(getStruct<T>, {0x410, 16, 0, 0})
	SMember(FDataTableRowHandle)                       PrimaryTabRightAction                                       OFFSET(getStruct<T>, {0x420, 16, 0, 0})
	SMember(FDataTableRowHandle)                       SecondaryTabLeftAction                                      OFFSET(getStruct<T>, {0x430, 16, 0, 0})
	SMember(FDataTableRowHandle)                       SecondaryTabRightAction                                     OFFSET(getStruct<T>, {0x440, 16, 0, 0})
	CMember(UScrollBox*)                               ScrollBox_Variants                                          OFFSET(get<T>, {0x450, 8, 0, 0})
	CMember(UFortVariantEntryBox*)                     EntryBox_VariantOptions                                     OFFSET(get<T>, {0x458, 8, 0, 0})
	CMember(UFortVariantEntryBox*)                     EntryBox_VariantOptions_NoScroll                            OFFSET(get<T>, {0x460, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_NoCapes                                                OFFSET(get<T>, {0x468, 8, 0, 0})
	CMember(UWidget*)                                  Container_Tabs                                              OFFSET(get<T>, {0x470, 8, 0, 0})
	CMember(UHorizontalBox*)                           HBox_PrimaryTabNav                                          OFFSET(get<T>, {0x478, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_PrimaryFilter                                          OFFSET(get<T>, {0x480, 8, 0, 0})
	CMember(UDynamicEntryBox*)                         EntryBox_PrimaryTabs                                        OFFSET(get<T>, {0x488, 8, 0, 0})
	CMember(UCommonActionWidget*)                      ActionWidget_PrimaryTabLeft                                 OFFSET(get<T>, {0x490, 8, 0, 0})
	CMember(UCommonActionWidget*)                      ActionWidget_PrimaryTabRight                                OFFSET(get<T>, {0x498, 8, 0, 0})
	CMember(UCommonButtonGroupLegacy*)                 PrimaryTabButtonGroup                                       OFFSET(get<T>, {0x4A0, 8, 0, 0})
	CMember(UWidget*)                                  Container_SecondaryTabs                                     OFFSET(get<T>, {0x4A8, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_SecondaryFilter                                        OFFSET(get<T>, {0x4B0, 8, 0, 0})
	CMember(UDynamicEntryBox*)                         EntryBox_SecondaryTabs                                      OFFSET(get<T>, {0x4B8, 8, 0, 0})
	CMember(UCommonActionWidget*)                      ActionWidget_SecondaryTabLeft                               OFFSET(get<T>, {0x4C0, 8, 0, 0})
	CMember(UCommonActionWidget*)                      ActionWidget_SecondaryTabRight                              OFFSET(get<T>, {0x4C8, 8, 0, 0})
	CMember(UCommonButtonGroupLegacy*)                 SecondaryTabButtonGroup                                     OFFSET(get<T>, {0x4D0, 8, 0, 0})
	SMember(FFortVariantFilterContext)                 FilterContext                                               OFFSET(getStruct<T>, {0x4D8, 48, 0, 0})
	CMember(UAthenaCosmeticItemDefinition*)            CustomizingItemDef                                          OFFSET(get<T>, {0x508, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortVariantPicker.InitFromCosmeticItemDef
	// void InitFromCosmeticItemDef(UAthenaCosmeticItemDefinition* InCosmeticItemDef);                                          // [0x96de92c] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortVariantPicker.InitFromCosmeticItem
	// void InitFromCosmeticItem(UAthenaCosmeticAccountItem* InCosmeticItem);                                                   // [0x96de8ac] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortVariantPicker.HandleSecondaryTabSelectionChanged
	// void HandleSecondaryTabSelectionChanged(UCommonButtonLegacy* TabButton, int32_t TabIdx);                                 // [0x96de668] Final|Native|Private 
	// Function /Script/FortniteUI.FortVariantPicker.HandlePrimaryTabSelectionChanged
	// void HandlePrimaryTabSelectionChanged(UCommonButtonLegacy* TabButton, int32_t TabIdx);                                   // [0x96dddc4] Final|Native|Private 
	// Function /Script/FortniteUI.FortVariantPicker.Campaign_HandleSecondaryTabRight
	// void Campaign_HandleSecondaryTabRight(bool& bPassThrough);                                                               // [0x96dac30] Final|Native|Private|HasOutParms 
	// Function /Script/FortniteUI.FortVariantPicker.Campaign_HandleSecondaryTabLeft
	// void Campaign_HandleSecondaryTabLeft(bool& bPassThrough);                                                                // [0x96dabac] Final|Native|Private|HasOutParms 
	// Function /Script/FortniteUI.FortVariantPicker.Campaign_HandlePrimaryTabRight
	// void Campaign_HandlePrimaryTabRight(bool& bPassThrough);                                                                 // [0x96dab28] Final|Native|Private|HasOutParms 
	// Function /Script/FortniteUI.FortVariantPicker.Campaign_HandlePrimaryTabLeft
	// void Campaign_HandlePrimaryTabLeft(bool& bPassThrough);                                                                  // [0x96daaa4] Final|Native|Private|HasOutParms 
};

/// Class /Script/FortniteUI.VariantObject
/// Size: 0x0050 (0x000028 - 0x000078)
class UVariantObject : public UObject
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 120;

public:
	SMember(FGameplayTag)                              VariantChannel                                              OFFSET(getStruct<T>, {0x28, 4, 0, 0})
	SMember(FGameplayTag)                              VariantTag                                                  OFFSET(getStruct<T>, {0x2C, 4, 0, 0})
	SMember(FString)                                   VariantCustomData                                           OFFSET(getStruct<T>, {0x30, 16, 0, 0})
	DMember(bool)                                      bOwned                                                      OFFSET(get<bool>, {0x40, 1, 0, 0})
	CMember(UAthenaCosmeticItemDefinition*)            CosmeticDef                                                 OFFSET(get<T>, {0x48, 8, 0, 0})
};

/// Class /Script/FortniteUI.FortRichColorVariantListObject
/// Size: 0x0018 (0x000078 - 0x000090)
class UFortRichColorVariantListObject : public UVariantObject
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 144;

public:
	SMember(FText)                                     ColorName                                                   OFFSET(getStruct<T>, {0x78, 24, 0, 0})
};

/// Class /Script/FortniteUI.FortVariantSelector
/// Size: 0x0028 (0x0003C0 - 0x0003E8)
class UFortVariantSelector : public UFortVariantEditorWidgetBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1000;

public:
	CMember(UDynamicEntryBox*)                         EntryBox_VariantOptions                                     OFFSET(get<T>, {0x3C0, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_VariantName                                            OFFSET(get<T>, {0x3C8, 8, 0, 0})
	CMember(UVariantObject*)                           CurrentSelectedVariant                                      OFFSET(get<T>, {0x3D0, 8, 0, 0})
	CMember(UCommonButtonGroupLegacy*)                 Tile_ButtonGroup                                            OFFSET(get<T>, {0x3D8, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortVariantSelector.HandleItemSelected
	// void HandleItemSelected(UCommonButtonLegacy* AssociatedButton, int32_t ButtonIndex);                                     // [0x96ddaa4] Final|Native|Protected 
	// Function /Script/FortniteUI.FortVariantSelector.HandleItemHovered
	// void HandleItemHovered(UCommonButtonLegacy* AssociatedButton, int32_t ButtonIndex);                                      // [0x96dd9c0] Final|Native|Protected 
};

/// Class /Script/FortniteUI.FortVariantRichColorPicker
/// Size: 0x0020 (0x0003E8 - 0x000408)
class UFortVariantRichColorPicker : public UFortVariantSelector
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1032;

public:
	CMember(UFortCosmeticRichColorVariant*)            CachedCosmeticVariant                                       OFFSET(get<T>, {0x3E8, 8, 0, 0})
	CMember(UAthenaCosmeticItemDefinition*)            ItemDef                                                     OFFSET(get<T>, {0x3F0, 8, 0, 0})
	CMember(TArray<UCustomColorSwatch*>)               ColorSwatches                                               OFFSET(get<T>, {0x3F8, 16, 0, 0})
};

/// Class /Script/FortniteUI.FortVariantTileButton
/// Size: 0x00A0 (0x0014E0 - 0x001580)
class UFortVariantTileButton : public UCommonButtonLegacy
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 5504;

public:
	SMember(FLinearColor)                              LockedTintColor                                             OFFSET(getStruct<T>, {0x14F0, 16, 0, 0})
	SMember(FName)                                     IconParamName                                               OFFSET(getStruct<T>, {0x1500, 4, 0, 0})
	CMember(TWeakObjectPtr<UMaterialInstance*>)        VariantMateral                                              OFFSET(get<T>, {0x1508, 32, 0, 0})
	CMember(TWeakObjectPtr<UTexture2D*>)               ExplicitlyNoneIcon                                          OFFSET(get<T>, {0x1528, 32, 0, 0})
	CMember(UImage*)                                   Image_VariantDisplay                                        OFFSET(get<T>, {0x1548, 8, 0, 0})
	CMember(UImage*)                                   Image_Locked                                                OFFSET(get<T>, {0x1550, 8, 0, 0})
	CMember(UOverlay*)                                 Overlay_Conflict                                            OFFSET(get<T>, {0x1558, 8, 0, 0})
	CMember(UImage*)                                   Image_Active                                                OFFSET(get<T>, {0x1560, 8, 0, 0})
	CMember(UVariantObject*)                           AssociatedVariant                                           OFFSET(get<T>, {0x1568, 8, 0, 0})
	CMember(UFortApplyVarianceToInterfaceMaterialFlow*) MaterialVarianceFlowUI                                     OFFSET(get<T>, {0x1570, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortVariantTileButton.OnSetEquippedState
	// void OnSetEquippedState(bool bIsEquiped);                                                                                // [0x1d9241c] Event|Protected|BlueprintEvent 
};

/// Class /Script/FortniteUI.FortItemShopOfferGroupVM
/// Size: 0x0070 (0x000068 - 0x0000D8)
class UFortItemShopOfferGroupVM : public UMVVMViewModelBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 216;

public:
	SMember(FString)                                   OfferGroupId                                                OFFSET(getStruct<T>, {0x68, 16, 0, 0})
	CMember(TArray<UFortItemShopOfferVM*>)             Offers                                                      OFFSET(get<T>, {0x78, 16, 0, 0})
	SMember(FFortItemShopLayout)                       OwningLayout                                                OFFSET(getStruct<T>, {0x88, 32, 0, 0})
	DMember(int32_t)                                   CurrentStackRank                                            OFFSET(get<int32_t>, {0xA8, 4, 0, 0})
	CMember(EFortOfferSeenLevel)                       SeenLevel                                                   OFFSET(get<T>, {0xAC, 1, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortItemShopOfferGroupVM.HasOffers
	// bool HasOffers();                                                                                                        // [0x96de890] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortItemShopOfferGroupVM.GetUpdatedAnalyticsData
	// FString GetUpdatedAnalyticsData();                                                                                       // [0x96dd980] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortItemShopOfferGroupVM.GetConcatenatedLayout
	// FString GetConcatenatedLayout();                                                                                         // [0x96db564] Final|Native|Protected|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/FortniteUI.FortItemShopOfferVM
/// Size: 0x0178 (0x000068 - 0x0001E0)
class UFortItemShopOfferVM : public UMVVMViewModelBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 480;

public:
	SMember(FString)                                   OfferId                                                     OFFSET(getStruct<T>, {0x68, 16, 0, 0})
	SMember(FText)                                     ShortName                                                   OFFSET(getStruct<T>, {0x78, 24, 0, 0})
	SMember(FText)                                     ShortDescription                                            OFFSET(getStruct<T>, {0x90, 24, 0, 0})
	DMember(int32_t)                                   Price                                                       OFFSET(get<int32_t>, {0xA8, 4, 0, 0})
	DMember(int32_t)                                   RegularPrice                                                OFFSET(get<int32_t>, {0xAC, 4, 0, 0})
	CMember(EItemShopCurrency)                         CurrencyType                                                OFFSET(get<T>, {0xB0, 1, 0, 0})
	SMember(FString)                                   CurrencySubType                                             OFFSET(getStruct<T>, {0xB8, 16, 0, 0})
	CMember(EItemShopTileSize)                         TileSize                                                    OFFSET(get<T>, {0xC8, 1, 0, 0})
	CMember(EViolatorIntensity)                        ViolatorIntensity                                           OFFSET(get<T>, {0xC9, 1, 0, 0})
	SMember(FText)                                     ViolatorText                                                OFFSET(getStruct<T>, {0xD0, 24, 0, 0})
	SMember(FString)                                   DisplayAssetPath                                            OFFSET(getStruct<T>, {0xE8, 16, 0, 0})
	CMember(TArray<FItemQuantity>)                     GrantedItems                                                OFFSET(get<T>, {0xF8, 16, 0, 0})
	DMember(int32_t)                                   MtxQuantity                                                 OFFSET(get<int32_t>, {0x108, 4, 0, 0})
	CMember(TArray<FText>)                             TagTexts                                                    OFFSET(get<T>, {0x110, 16, 0, 0})
	DMember(bool)                                      bOwned                                                      OFFSET(get<bool>, {0x120, 1, 0, 0})
	DMember(bool)                                      bCanUndoPurchase                                            OFFSET(get<bool>, {0x121, 1, 0, 0})
	DMember(bool)                                      bSuppressRegularPrice                                       OFFSET(get<bool>, {0x122, 1, 0, 0})
	SMember(FString)                                   OverrideParentOfferTrackingId                               OFFSET(getStruct<T>, {0x128, 16, 0, 0})
	CMember(TArray<FString>)                           Categories                                                  OFFSET(get<T>, {0x138, 16, 0, 0})
	DMember(int32_t)                                   QuantityRemaining                                           OFFSET(get<int32_t>, {0x148, 4, 0, 0})
	DMember(int32_t)                                   SortPriority                                                OFFSET(get<int32_t>, {0x14C, 4, 0, 0})
	DMember(int32_t)                                   MaxLevel                                                    OFFSET(get<int32_t>, {0x150, 4, 0, 0})
	DMember(bool)                                      bIsSubscriptionOffer                                        OFFSET(get<bool>, {0x154, 1, 0, 0})
	DMember(bool)                                      bIsProgressiveCosmeticOffer                                 OFFSET(get<bool>, {0x155, 1, 0, 0})
	DMember(bool)                                      bShouldShowBattlePassPurchase                               OFFSET(get<bool>, {0x156, 1, 0, 0})
	SMember(FString)                                   LayoutId                                                    OFFSET(getStruct<T>, {0x158, 16, 0, 0})
	CMember(UAthenaItemShopOfferInfo*)                 OfferInfo                                                   OFFSET(get<T>, {0x168, 8, 0, 0})
	CMember(TArray<FPurchasedItemInfo>)                CachedRefundedItems                                         OFFSET(get<T>, {0x170, 16, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortItemShopOfferVM.UndoPurchase
	// void UndoPurchase(FDelegateProperty& OnUndoPurchaseCompleteCallback);                                                    // [0x96df790] Final|Native|Public|HasOutParms|BlueprintCallable|Const 
	// Function /Script/FortniteUI.FortItemShopOfferVM.ShouldLoadSubscriptionImagesFromCMS
	// bool ShouldLoadSubscriptionImagesFromCMS();                                                                              // [0x96df58c] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortItemShopOfferVM.PurchaseOffer
	// EOfferPurchaseError PurchaseOffer(int32_t PriceIndex, FDelegateProperty& OnPurchaseCompleteCallback);                    // [0x96df390] Final|Native|Public|HasOutParms|BlueprintCallable|Const 
	// Function /Script/FortniteUI.FortItemShopOfferVM.OnUndoPurchaseComplete__DelegateSignature
	// void OnUndoPurchaseComplete__DelegateSignature(bool bSuccess, TArray<FPurchasedItemInfo>& RefundedItems, FString PurchaseId, int32_t MtxReturned); // [0x1d9241c] Public|Delegate|HasOutParms 
	// Function /Script/FortniteUI.FortItemShopOfferVM.OnPresentationsLoaded__DelegateSignature
	// void OnPresentationsLoaded__DelegateSignature(TArray<UObject*>& LoadedPresentations);                                    // [0x1d9241c] Public|Delegate|HasOutParms 
	// Function /Script/FortniteUI.FortItemShopOfferVM.NeedsPurchaseConfirmationMessage
	// bool NeedsPurchaseConfirmationMessage(FText& OutCustomConfirmationMessage);                                              // [0x96df204] Final|Native|Public|HasOutParms|BlueprintCallable|Const 
	// Function /Script/FortniteUI.FortItemShopOfferVM.LoadPresentationsFromSubscriptionCMS
	// bool LoadPresentationsFromSubscriptionCMS(EMcpSubscriptionState SubscriptionState, FDelegateProperty& OnLoadedCallback); // [0x96df0a8] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/FortniteUI.FortItemShopOfferVM.LoadPresentationsFromDisplayAssetPath
	// bool LoadPresentationsFromDisplayAssetPath(FString InDisplayAssetPath, FDelegateProperty& OnLoadedCallback);             // [0x96de9ac] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/FortniteUI.FortItemShopOfferVM.HasMultiplePrices
	// bool HasMultiplePrices();                                                                                                // [0x96de858] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortItemShopOfferVM.HandleRealMoneyPurchaseComplete
	// void HandleRealMoneyPurchaseComplete(bool bSuccess, TArray<FPurchasedItemInfo>& PurchasedItems);                         // [0x96ddf74] Final|Native|Private|HasOutParms 
	// Function /Script/FortniteUI.FortItemShopOfferVM.GetOfferTrackingId
	// FString GetOfferTrackingId();                                                                                            // [0x96dcb58] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortItemShopOfferVM.GetItemDefFromTemplateId
	// UFortAccountItemDefinition* GetItemDefFromTemplateId(FString TemplateId);                                                // [0x96db74c] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortItemShopOfferVM.GetDisplayAssetName
	// FString GetDisplayAssetName();                                                                                           // [0x96db5a4] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortItemShopOfferVM.CanPurchaseOffer
	// EOfferPurchaseError CanPurchaseOffer(int32_t PriceIndex);                                                                // [0x96dacb4] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortItemShopOfferVM.CancelLoadingPresentations
	// void CancelLoadingPresentations();                                                                                       // [0x96dad40] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/FortniteUI.FortItemShopSectionVM
/// Size: 0x00B0 (0x000068 - 0x000118)
class UFortItemShopSectionVM : public UMVVMViewModelBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 280;

public:
	SMember(FString)                                   SectionId                                                   OFFSET(getStruct<T>, {0x68, 16, 0, 0})
	SMember(FText)                                     DisplayName                                                 OFFSET(getStruct<T>, {0x78, 24, 0, 0})
	SMember(FString)                                   OwningSectionId                                             OFFSET(getStruct<T>, {0x90, 16, 0, 0})
	CMember(TArray<UFortItemShopSectionVM*>)           Subsections                                                 OFFSET(get<T>, {0xA0, 16, 0, 0})
	CMember(TArray<UFortItemShopOfferGroupVM*>)        OfferGroups                                                 OFFSET(get<T>, {0xB0, 16, 0, 0})
	SMember(FFortItemShopCMSBackground)                Background                                                  OFFSET(getStruct<T>, {0xC0, 32, 0, 0})
	DMember(int32_t)                                   CurrentStackRank                                            OFFSET(get<int32_t>, {0xE0, 4, 0, 0})
	CMember(EFortOfferSeenLevel)                       SeenLevel                                                   OFFSET(get<T>, {0xE4, 1, 0, 0})
	CMember(TArray<UFortItemShopOfferGroupVM*>)        AllOfferGroupsWithOffers                                    OFFSET(get<T>, {0xE8, 16, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortItemShopSectionVM.HasOffers
	// bool HasOffers();                                                                                                        // [0x78fc368] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/FortniteUI.FortItemShopVM
/// Size: 0x0138 (0x000068 - 0x0001A0)
class UFortItemShopVM : public UMVVMViewModelBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 416;

public:
	CMember(TArray<UFortItemShopSectionVM*>)           Sections                                                    OFFSET(get<T>, {0x68, 16, 0, 0})
	CMember(TArray<UFortItemShopSectionVM*>)           SectionsWithOffers                                          OFFSET(get<T>, {0x78, 16, 0, 0})
	CMember(TArray<UFortItemShopOfferGroupVM*>)        AllOfferGroupsWithOffers                                    OFFSET(get<T>, {0x88, 16, 0, 0})
	SMember(FString)                                   FeaturedOfferId                                             OFFSET(getStruct<T>, {0x98, 16, 0, 0})
	SMember(FFortItemShopLayout)                       FeaturedLayout                                              OFFSET(getStruct<T>, {0xA8, 32, 0, 0})
	SMember(FString)                                   PreviewedItemTemplateId                                     OFFSET(getStruct<T>, {0xC8, 16, 0, 0})
	SMember(FString)                                   AffiliateName                                               OFFSET(getStruct<T>, {0xD8, 16, 0, 0})
	SMember(FTimespan)                                 ShopRefreshTimespan                                         OFFSET(getStruct<T>, {0xE8, 8, 0, 0})
	DMember(bool)                                      bCatalogRefreshing                                          OFFSET(get<bool>, {0xF0, 1, 0, 0})
	CMember(UFortSubscriptionVM*)                      SubscriptionVM                                              OFFSET(get<T>, {0xF8, 8, 0, 0})
	CMember(TArray<TWeakObjectPtr>)                    MonitorForUpdatesRequesters                                 OFFSET(get<T>, {0x100, 16, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortItemShopVM.UpdateContentOrdering
	// void UpdateContentOrdering();                                                                                            // [0x96df834] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortItemShopVM.StopMonitoringForUpdates
	// void StopMonitoringForUpdates(UObject* RequestingObject);                                                                // [0x96df6f4] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortItemShopVM.StartMonitoringForUpdates
	// void StartMonitoringForUpdates(UObject* RequestingObject);                                                               // [0x96df674] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortItemShopVM.ShouldShowNavPromptBelowNav
	// bool ShouldShowNavPromptBelowNav();                                                                                      // [0x96df600] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortItemShopVM.SetHasSeenItemShop
	// void SetHasSeenItemShop(bool bHasSeen);                                                                                  // [0x96df4f8] Final|Native|Public|BlueprintCallable|Const 
	// Function /Script/FortniteUI.FortItemShopVM.OnBackgroundLoaded__DelegateSignature
	// void OnBackgroundLoaded__DelegateSignature(UObject* LoadedBackground);                                                   // [0x1d9241c] Public|Delegate      
	// Function /Script/FortniteUI.FortItemShopVM.MPItemShopPhase2Enabled
	// bool MPItemShopPhase2Enabled();                                                                                          // [0x96df190] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortItemShopVM.LoadBackground
	// bool LoadBackground(FFortItemShopCMSBackground& Background, FDelegateProperty& OnLoadedCallback);                        // [0x301f11c] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/FortniteUI.FortItemShopVM.IsItemPreviewEnabled
	// bool IsItemPreviewEnabled();                                                                                             // [0x2a8ced4] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortItemShopVM.GetSubsection
	// UFortItemShopSectionVM* GetSubsection(FString SubsectionId, UFortItemShopSectionVM* ParentSection);                      // [0x96dd254] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortItemShopVM.GetSection
	// UFortItemShopSectionVM* GetSection(FString SectionId);                                                                   // [0x96dcba4] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortItemShopVM.GetPreferredBackgroundForLayout
	// FFortItemShopCMSBackground GetPreferredBackgroundForLayout(FFortItemShopLayout& InLayout);                               // [0x2ee84c8] Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortItemShopVM.GetOfferGroupWithOffer
	// UFortItemShopOfferGroupVM* GetOfferGroupWithOffer(FString OfferId);                                                      // [0x96dc4a8] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortItemShopVM.GetOfferFromId
	// UFortItemShopOfferVM* GetOfferFromId(FString OfferId);                                                                   // [0x96dbdf8] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortItemShopVM.GetHasSeenItemShop
	// bool GetHasSeenItemShop();                                                                                               // [0x96db70c] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortItemShopVM.GetFirstOfferVMFromLayout
	// UFortItemShopOfferVM* GetFirstOfferVMFromLayout(FFortItemShopLayout& InLayout);                                          // [0x96db5e4] Final|Native|Public|HasOutParms|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortItemShopVM.FindOfferByTrackingId
	// UFortItemShopOfferVM* FindOfferByTrackingId(FString OfferTrackingId);                                                    // [0x96dae9c] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortItemShopVM.ClearItemShopBang
	// void ClearItemShopBang();                                                                                                // [0x96dae00] Final|Native|Public|BlueprintCallable|Const 
};

/// Class /Script/FortniteUI.FortItemSelectionVM
/// Size: 0x0018 (0x000068 - 0x000080)
class UFortItemSelectionVM : public UMVVMViewModelBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 128;

public:
	CMember(UFortItemVM*)                              HoveredItem                                                 OFFSET(get<T>, {0x68, 8, 0, 0})
	CMember(UFortItemVM*)                              SelectedItem                                                OFFSET(get<T>, {0x70, 8, 0, 0})
	DMember(bool)                                      bPreviewOnHover                                             OFFSET(get<bool>, {0x78, 1, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortItemSelectionVM.Reset
	// void Reset();                                                                                                            // [0x96df4b0] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortItemSelectionVM.GetPreviewItem
	// UFortItemVM* GetPreviewItem();                                                                                           // [0x96dcb80] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
	// Function /Script/FortniteUI.FortItemSelectionVM.ClearSelectedItem
	// void ClearSelectedItem(UFortItemVM* CurrentSelectedItem);                                                                // [0x96dae14] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortItemSelectionVM.ClearHoveredItem
	// void ClearHoveredItem(UFortItemVM* CurrentHoveredItem);                                                                  // [0x96dad7c] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/FortniteUI.FortItemVM
/// Size: 0x0048 (0x000068 - 0x0000B0)
class UFortItemVM : public UMVVMViewModelBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 176;

public:
	DMember(int32_t)                                   SlotIndex                                                   OFFSET(get<int32_t>, {0xA8, 4, 0, 0})
	DMember(bool)                                      bIsFavorite                                                 OFFSET(get<bool>, {0xAC, 1, 0, 0})
};

/// Class /Script/FortniteUI.FortLoadoutsVM
/// Size: 0x0028 (0x000068 - 0x000090)
class UFortLoadoutsVM : public UMVVMViewModelBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 144;

public:
	SMember(FText)                                     ActiveLoadoutName                                           OFFSET(getStruct<T>, {0x68, 24, 0, 0})
	DMember(bool)                                      bIsModified                                                 OFFSET(get<bool>, {0x80, 1, 0, 0})
	DMember(bool)                                      bCanEnableRandomization                                     OFFSET(get<bool>, {0x81, 1, 0, 0})
	DMember(bool)                                      bIsRandomEnabled                                            OFFSET(get<bool>, {0x82, 1, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortLoadoutsVM.ToggleRandomEnabled
	// void ToggleRandomEnabled();                                                                                              // [0x96df774] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortLoadoutsVM.ResetToCurrentLoadout
	// void ResetToCurrentLoadout();                                                                                            // [0x96df4e4] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortLoadoutsVM.QuickSaveCurrentLoadout
	// void QuickSaveCurrentLoadout();                                                                                          // [0x96df488] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortLoadoutsVM.GetHasActiveLoadout
	// bool GetHasActiveLoadout();                                                                                              // [0x33989c0] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/FortniteUI.FortLockerCategoryVM
/// Size: 0x0020 (0x000068 - 0x000088)
class UFortLockerCategoryVM : public UMVVMViewModelBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 136;

public:
	CMember(UFortItemVM*)                              EquippedItem                                                OFFSET(get<T>, {0x70, 8, 0, 0})
	DMember(int32_t)                                   NewItemsInCategoryCount                                     OFFSET(get<int32_t>, {0x78, 4, 0, 0})
	DMember(int32_t)                                   SlotIndex                                                   OFFSET(get<int32_t>, {0x7C, 4, 0, 0})
	CMember(EAthenaCustomizationCategory)              CategoryType                                                OFFSET(get<T>, {0x80, 1, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortLockerCategoryVM.GetAreAnyItemsNew
	// bool GetAreAnyItemsNew();                                                                                                // [0x96db54c] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/FortniteUI.FortLockerCategoryGroupVM
/// Size: 0x0018 (0x000068 - 0x000080)
class UFortLockerCategoryGroupVM : public UMVVMViewModelBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 128;

public:
	CMember(TArray<UFortLockerCategoryVM*>)            CategoryItems                                               OFFSET(get<T>, {0x68, 16, 0, 0})
	DMember(int32_t)                                   NewItemsInCategoryGroupCount                                OFFSET(get<int32_t>, {0x78, 4, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortLockerCategoryGroupVM.GetAreAnyItemsNew
	// bool GetAreAnyItemsNew();                                                                                                // [0x96db54c] Final|Native|Public|BlueprintCallable|BlueprintPure|Const 
};

/// Class /Script/FortniteUI.FortLockerVM
/// Size: 0x0048 (0x000068 - 0x0000B0)
class UFortLockerVM : public UMVVMViewModelBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 176;

public:
	CMember(TArray<UFortLockerCategoryGroupVM*>)       CategoryGroups                                              OFFSET(get<T>, {0x68, 16, 0, 0})
	DMember(bool)                                      bAreAnyItemsNew                                             OFFSET(get<bool>, {0x78, 1, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortLockerVM.RandomizeAllSlots
	// void RandomizeAllSlots();                                                                                                // [0x96df49c] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortLockerVM.ClearAllSlots
	// void ClearAllSlots();                                                                                                    // [0x96dad68] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortLockerVM.ClearAllNewItemFlags
	// void ClearAllNewItemFlags();                                                                                             // [0x96dad54] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/FortniteUI.FortSubscriptionVM
/// Size: 0x0010 (0x000068 - 0x000078)
class UFortSubscriptionVM : public UMVVMViewModelBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 120;

public:
	CMember(EMcpSubscriptionState)                     SubscriptionState                                           OFFSET(get<T>, {0x68, 1, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortSubscriptionVM.UpdateSubscriptionData
	// void UpdateSubscriptionData();                                                                                           // [0x96df848] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/FortniteUI.WeaponOverheatWidget
/// Size: 0x0010 (0x000328 - 0x000338)
class UWeaponOverheatWidget : public UFortHUDElementWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 824;

public:
	CMember(UImage*)                                   OverheatProgressImage                                       OFFSET(get<T>, {0x328, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.WeaponOverheatWidget.OnWeaponUnequipped
	// void OnWeaponUnequipped();                                                                                               // [0x96df37c] Final|Native|Protected 
	// Function /Script/FortniteUI.WeaponOverheatWidget.OnWeaponEquipped
	// void OnWeaponEquipped(AFortWeapon* CurrentWeapon, AFortWeapon* PrevWeapon);                                              // [0x96df2c0] Final|Native|Protected 
	// Function /Script/FortniteUI.WeaponOverheatWidget.OnPawnChanged
	// void OnPawnChanged();                                                                                                    // [0x96df2ac] Final|Native|Protected 
};

/// Class /Script/FortniteUI.FortAutoRunNotificationWidget
/// Size: 0x0010 (0x0002E8 - 0x0002F8)
class UFortAutoRunNotificationWidget : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 760;

public:
	DMember(float)                                     TimeToShowWidget                                            OFFSET(get<float>, {0x2E8, 4, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortAutoRunNotificationWidget.OnAutoRunEnabled
	// void OnAutoRunEnabled(bool bAutoRunEnabled);                                                                             // [0x1d9241c] Event|Protected|BlueprintEvent 
};

/// Class /Script/FortniteUI.FortChatPanel
/// Size: 0x0020 (0x000570 - 0x000590)
class UFortChatPanel : public UFortActivatablePanel
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1424;

public:
	CMember(UFortChatContainer*)                       ChatContainer                                               OFFSET(get<T>, {0x578, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortChatPanel.OnWidgetIsOnFocusedPathChanged
	// void OnWidgetIsOnFocusedPathChanged(bool bOnFocusPath);                                                                  // [0x1d9241c] Event|Public|BlueprintEvent 
};

/// Class /Script/FortniteUI.FortComboBox
/// Size: 0x0008 (0x0002E8 - 0x0002F0)
class UFortComboBox : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 752;

public:
	CMember(UComboBoxString*)                          ComboBox                                                    OFFSET(get<T>, {0x2E8, 8, 0, 0})
};

/// Class /Script/FortniteUI.FortContentOnDemand
/// Size: 0x0098 (0x000328 - 0x0003C0)
class UFortContentOnDemand : public UFortHUDElementWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 960;

public:
	DMember(float)                                     ReEnableSettingDelay                                        OFFSET(get<float>, {0x338, 4, 0, 0})
	DMember(bool)                                      bEnabled                                                    OFFSET(get<bool>, {0x348, 1, 0, 0})
	DMember(bool)                                      bWidgetEnabled                                              OFFSET(get<bool>, {0x349, 1, 0, 0})
	DMember(int64_t)                                   LastReminder                                                OFFSET(get<int64_t>, {0x350, 8, 0, 0})
	SMember(FTimespan)                                 TimespanToRemind                                            OFFSET(getStruct<T>, {0x358, 8, 0, 0})
	DMember(bool)                                      bSendErrorReports                                           OFFSET(get<bool>, {0x360, 1, 0, 0})
	DMember(bool)                                      bSendOutOfMemoryErrorReports                                OFFSET(get<bool>, {0x361, 1, 0, 0})
	CMember(TArray<EFortGameFeature>)                  GameFeaturesToListenFor_Config                              OFFSET(get<T>, {0x368, 16, 0, 0})
	CMember(TArray<EFortGameFeature>)                  GameFeaturesToListenFor                                     OFFSET(get<T>, {0x378, 16, 0, 0})
	CMember(TArray<EFortGameFeature>)                  OptionalGameFeaturesToListenFor_Config                      OFFSET(get<T>, {0x388, 16, 0, 0})
	CMember(TArray<EFortGameFeature>)                  OptionalGameFeaturesToListenFor                             OFFSET(get<T>, {0x398, 16, 0, 0})
	CMember(TArray<TWeakObjectPtr>)                    ActiveCosmeticDownloads                                     OFFSET(get<T>, {0x3A8, 16, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortContentOnDemand.OnUpdatedState
	// void OnUpdatedState(int32_t NumActiveDownloads, int32_t NumErrors);                                                      // [0x1d9241c] Event|Protected|BlueprintEvent 
};

/// Class /Script/FortniteUI.FortDataDownloadBar
/// Size: 0x0080 (0x000328 - 0x0003A8)
class UFortDataDownloadBar : public UFortHUDElementWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 936;

public:
	DMember(bool)                                      bWidthCustomScaling                                         OFFSET(get<bool>, {0x338, 1, 0, 0})
	CMember(UWidget*)                                  Container                                                   OFFSET(get<T>, {0x340, 8, 0, 0})
	DMember(float)                                     BarWidthPercentage                                          OFFSET(get<float>, {0x348, 4, 0, 0})
	DMember(float)                                     UpdateScalingRateInSeconds                                  OFFSET(get<float>, {0x34C, 4, 0, 0})
	DMember(float)                                     UpdateEstimatedTimeLeftRateInSeconds                        OFFSET(get<float>, {0x350, 4, 0, 0})
	DMember(bool)                                      bBarExpanded                                                OFFSET(get<bool>, {0x354, 1, 0, 0})
	DMember(bool)                                      bProgressDisplayPaused                                      OFFSET(get<bool>, {0x355, 1, 0, 0})
	CMember(USizeBox*)                                 BarSizeBox                                                  OFFSET(get<T>, {0x358, 8, 0, 0})
	CMember(UImage*)                                   BarProgressionImage                                         OFFSET(get<T>, {0x360, 8, 0, 0})
	CMember(UCommonTextBlock*)                         BarPercentageNumber                                         OFFSET(get<T>, {0x368, 8, 0, 0})
	CMember(UCommonTextBlock*)                         StatusText                                                  OFFSET(get<T>, {0x370, 8, 0, 0})
	CMember(UCommonTextBlock*)                         BarErrorText                                                OFFSET(get<T>, {0x378, 8, 0, 0})
	CMember(UFortEventDateTimeTextBlock*)              RemainingTimeEstimateText                                   OFFSET(get<T>, {0x380, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortDataDownloadBar.SetStatusText
	// void SetStatusText(FText& StatusText);                                                                                   // [0x96eef28] Final|Native|Public|HasOutParms|BlueprintCallable 
	// Function /Script/FortniteUI.FortDataDownloadBar.SetRemainingTimeEstimate
	// void SetRemainingTimeEstimate(FTimespan& RemainingTime);                                                                 // [0x96eede4] Final|Native|Public|HasOutParms|HasDefaults|BlueprintCallable 
	// Function /Script/FortniteUI.FortDataDownloadBar.SetProgress
	// void SetProgress(float Progress);                                                                                        // [0x96eed64] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortDataDownloadBar.OnStatusTextChanged
	// void OnStatusTextChanged();                                                                                              // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortDataDownloadBar.OnExpandClose
	// void OnExpandClose(bool IsExpanded);                                                                                     // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortDataDownloadBar.OnDownloadCompleted
	// void OnDownloadCompleted();                                                                                              // [0x1d9241c] Event|Protected|BlueprintCallable|BlueprintEvent 
	// Function /Script/FortniteUI.FortDataDownloadBar.ExpandClose
	// void ExpandClose();                                                                                                      // [0x96ee2bc] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortDataDownloadBar.DisplayErrorAnimation
	// void DisplayErrorAnimation(bool ErrorState);                                                                             // [0x1d9241c] Event|Public|BlueprintCallable|BlueprintEvent 
};

/// Class /Script/FortniteUI.FortDynamicEntryBox
/// Size: 0x0038 (0x000260 - 0x000298)
class UFortDynamicEntryBox : public UDynamicEntryBox
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 664;

public:
	DMember(int32_t)                                   MaximumEntries                                              OFFSET(get<int32_t>, {0x260, 4, 0, 0})
	CMember(EDynamicEntryPatternDirection)             PatternDirection                                            OFFSET(get<T>, {0x264, 1, 0, 0})
	CMember(TArray<float>)                             RenderOpacityPattern                                        OFFSET(get<T>, {0x268, 16, 0, 0})
	CMember(TArray<FWidgetTransform>)                  RenderTransformPattern                                      OFFSET(get<T>, {0x278, 16, 0, 0})
	CMember(TArray<FVector2D>)                         RenderTransformPivotPattern                                 OFFSET(get<T>, {0x288, 16, 0, 0})
};

/// Class /Script/FortniteUI.FortExtensionWidgetContainer
/// Size: 0x0148 (0x0002C0 - 0x000408)
class UFortExtensionWidgetContainer : public UUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1032;

public:
	CMember(EUIExtensionSlot)                          ExtensionSlot                                               OFFSET(get<T>, {0x400, 1, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortExtensionWidgetContainer.OnExtensionWidgetCreated
	// void OnExtensionWidgetCreated(UUserWidget* InUserWidget);                                                                // [0x1d9241c] Event|Public|BlueprintEvent 
};

/// Class /Script/FortniteUI.FortInputField
/// Size: 0x0008 (0x0002E8 - 0x0002F0)
class UFortInputField : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 752;

public:
	CMember(UEditableText*)                            EditableTextWidget                                          OFFSET(get<T>, {0x2E8, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortInputField.SetHintText
	// void SetHintText(FText& HintText);                                                                                       // [0x1d9241c] Event|Public|HasOutParms|BlueprintEvent 
	// Function /Script/FortniteUI.FortInputField.SetErrorText
	// void SetErrorText(FText& ErrorText);                                                                                     // [0x1d9241c] Event|Public|HasOutParms|BlueprintEvent 
	// Function /Script/FortniteUI.FortInputField.SetEditableText
	// void SetEditableText(FText& EditableText);                                                                               // [0x1d9241c] Event|Public|HasOutParms|BlueprintEvent 
};

/// Class /Script/FortniteUI.FortItemDownloadIndicator
/// Size: 0x0028 (0x0002E8 - 0x000310)
class UFortItemDownloadIndicator : public UCommonUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 784;

public:
	CMember(UImage*)                                   Image_DownloadSpinner                                       OFFSET(get<T>, {0x300, 8, 0, 0})
	CMember(UFortAccountItemDefinition*)               CurrentDisplayedItem                                        OFFSET(get<T>, {0x308, 8, 0, 0})
};

/// Class /Script/FortniteUI.FortLetoWatermark
/// Size: 0x0000 (0x0002C0 - 0x0002C0)
class UFortLetoWatermark : public UUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 704;

public:
};

/// Class /Script/FortniteUI.FortReticleExtensionContainer
/// Size: 0x0048 (0x000408 - 0x000450)
class UFortReticleExtensionContainer : public UFortExtensionWidgetContainer
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1104;

public:
	CMember(TArray<UFortWeaponReticleExtensionData*>)  WeaponReticleExtensionDatas                                 OFFSET(get<T>, {0x408, 16, 0, 0})
	CMember(UFortWeaponReticleExtensionWidgetBase*)    CurrentCustomReticleExtension                               OFFSET(get<T>, {0x418, 8, 0, 0})
	CMember(TArray<UFortWeaponReticleExtensionWidgetBase*>) RecentReticleExtensions                                OFFSET(get<T>, {0x420, 16, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortReticleExtensionContainer.OnReticleExtensionWidgetRemoved
	// void OnReticleExtensionWidgetRemoved(UUserWidget* Widget);                                                               // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.FortReticleExtensionContainer.OnReticleExtensionWidgetCreated
	// void OnReticleExtensionWidgetCreated(UUserWidget* Widget);                                                               // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.FortReticleExtensionContainer.HandleWeaponEquipped
	// void HandleWeaponEquipped(AFortWeapon* NewWeapon, AFortWeapon* PrevWeapon);                                              // [0x96ee4c0] Final|Native|Public  
	// Function /Script/FortniteUI.FortReticleExtensionContainer.HandleLocalPlayerDied
	// void HandleLocalPlayerDied(FFortPlayerDeathReport& DeathReport);                                                         // [0x96ee3ac] Final|Native|Public|HasOutParms 
};

/// Class /Script/FortniteUI.FortSZAwareImage
/// Size: 0x0010 (0x0002B0 - 0x0002C0)
class UFortSZAwareImage : public UImage
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 704;

public:
	DMember(bool)                                      AnchorLeft                                                  OFFSET(get<bool>, {0x2B0, 1, 0, 0})
	DMember(bool)                                      AnchorRight                                                 OFFSET(get<bool>, {0x2B1, 1, 0, 0})
	DMember(bool)                                      AnchorTop                                                   OFFSET(get<bool>, {0x2B2, 1, 0, 0})
	DMember(bool)                                      AnchorBottom                                                OFFSET(get<bool>, {0x2B3, 1, 0, 0})
};

/// Class /Script/FortniteUI.FortTabButton
/// Size: 0x0030 (0x001490 - 0x0014C0)
class UFortTabButton : public UCommonButtonBase
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 5312;

public:
	CMember(UCommonLazyImage*)                         LazyImage_Icon                                              OFFSET(get<T>, {0x1498, 8, 0, 0})
	CMember(UCommonTextBlock*)                         Text_Title                                                  OFFSET(get<T>, {0x14A0, 8, 0, 0})
	SMember(FVector2D)                                 ImageSize_Mobile                                            OFFSET(getStruct<T>, {0x14A8, 16, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortTabButton.SetTabLabelInfo_Implementation
	// void SetTabLabelInfo_Implementation(FFortTabButtonLabelInfo& TabLabelInfo);                                              // [0x96eefc4] RequiredAPI|Native|Protected|HasOutParms 
};

/// Class /Script/FortniteUI.FortVisualAttachment
/// Size: 0x0020 (0x0001C8 - 0x0001E8)
class UFortVisualAttachment : public USizeBox
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 488;

public:
	SMember(FVector2D)                                 ContentAnchor                                               OFFSET(getStruct<T>, {0x1C8, 16, 0, 0})
};

/// Class /Script/FortniteUI.FortSimpleFeaturedYellowButton
/// Size: 0x0020 (0x0014E0 - 0x001500)
class UFortSimpleFeaturedYellowButton : public UCommonButtonLegacy
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 5376;

public:
	DMember(int32_t)                                   FontSize                                                    OFFSET(get<int32_t>, {0x14E0, 4, 0, 0})
	SMember(FMargin)                                   PaddingOverrideMargin                                       OFFSET(getStruct<T>, {0x14E4, 16, 0, 0})
	DMember(float)                                     DelayShine                                                  OFFSET(get<float>, {0x14F4, 4, 0, 0})
	DMember(bool)                                      bFontSizeOverride                                           OFFSET(get<bool>, {0x14F8, 1, 0, 0})
	DMember(bool)                                      bPaddingOverride                                            OFFSET(get<bool>, {0x14F9, 1, 0, 0})
	DMember(bool)                                      bUseShineSwipe                                              OFFSET(get<bool>, {0x14FA, 1, 0, 0})
	DMember(bool)                                      bShearText                                                  OFFSET(get<bool>, {0x14FB, 1, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortSimpleFeaturedYellowButton.SetText
	// void SetText(FText& NewText);                                                                                            // [0x1d9241c] Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
	// Function /Script/FortniteUI.FortSimpleFeaturedYellowButton.RefreshUI
	// void RefreshUI();                                                                                                        // [0x1d9241c] Event|Protected|BlueprintCallable|BlueprintEvent 
	// Function /Script/FortniteUI.FortSimpleFeaturedYellowButton.ChangeSecondaryText
	// void ChangeSecondaryText(FText& NewText);                                                                                // [0x1d9241c] Event|Public|HasOutParms|BlueprintCallable|BlueprintEvent 
};

/// Class /Script/FortniteUI.FortLevelSequencerControlScreenBase
/// Size: 0x0010 (0x000400 - 0x000410)
class UFortLevelSequencerControlScreenBase : public UCommonActivatableWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1040;

public:
	SMember(FName)                                     DefaultLevelSequencerTag                                    OFFSET(getStruct<T>, {0x400, 4, 0, 0})
	CMember(ALevelSequenceActor*)                      AssociatedLevelSequenceActor                                OFFSET(get<T>, {0x408, 8, 0, 0})
};

/// Class /Script/FortniteUI.PurchaseChoiceRequesterInterface
/// Size: 0x0000 (0x000028 - 0x000028)
class UPurchaseChoiceRequesterInterface : public UInterface
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 40;

public:
};

/// Class /Script/FortniteUI.FortAthenaTutorialBaseInteraction
/// Size: 0x0018 (0x0002C0 - 0x0002D8)
class UFortAthenaTutorialBaseInteraction : public UUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 728;

public:
};

/// Class /Script/FortniteUI.FortAthenaTutorialButton
/// Size: 0x0010 (0x0002D8 - 0x0002E8)
class UFortAthenaTutorialButton : public UFortAthenaTutorialBaseInteraction
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 744;

public:
	CMember(ETutorialButtonInteractionType)            InteractionType                                             OFFSET(get<T>, {0x2D8, 1, 0, 0})
	CMember(UCommonButtonLegacy*)                      Button_Tutorial                                             OFFSET(get<T>, {0x2E0, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortAthenaTutorialButton.OnTutorialButtonPressed
	// void OnTutorialButtonPressed();                                                                                          // [0x96ee680] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortAthenaTutorialButton.OnTutorialButtonClicked
	// void OnTutorialButtonClicked();                                                                                          // [0x96ee66c] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/FortniteUI.FortAthenaTutorialHUD
/// Size: 0x00A0 (0x000400 - 0x0004A0)
class UFortAthenaTutorialHUD : public UCommonActivatableWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1184;

public:
	CMember(TArray<FGameplayTag>)                      HighlightTagArray                                           OFFSET(get<T>, {0x418, 16, 0, 0})
	CMember(AFortAthenaTutorialManager*)               TutorialManager                                             OFFSET(get<T>, {0x440, 8, 0, 0})
	CMember(AActor*)                                   CurrentTrackedActor                                         OFFSET(get<T>, {0x448, 8, 0, 0})
	CMember(UOverlay*)                                 Overlay_TutorialScreen                                      OFFSET(get<T>, {0x458, 8, 0, 0})
	CMember(UCommonButtonLegacy*)                      Athena_Tutorial_Skip_Mobile                                 OFFSET(get<T>, {0x460, 8, 0, 0})
	CMember(UFortAthenaTutorialTargetCounter*)         Athena_Tutorial_TargetCounter                               OFFSET(get<T>, {0x468, 8, 0, 0})
	CMember(UFortAthenaTutorialProgressBar*)           Athena_Tutorial_ProgressBar                                 OFFSET(get<T>, {0x470, 8, 0, 0})
	CMember(UFortAthenaTutorialScreen*)                Athena_Tutorial_ModalPopup                                  OFFSET(get<T>, {0x478, 8, 0, 0})
	CMember(UFortAthenaTutorialTextPrompt*)            TextPrompt_Tutorial                                         OFFSET(get<T>, {0x480, 8, 0, 0})
	CMember(UOverlay*)                                 Overlay_Finger                                              OFFSET(get<T>, {0x488, 8, 0, 0})
	CMember(UOverlay*)                                 Overlay_Gradient                                            OFFSET(get<T>, {0x490, 8, 0, 0})
	CMember(UUserWidget*)                              Widget_EasyInteractFinger                                   OFFSET(get<T>, {0x498, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortAthenaTutorialHUD.PlayFingerPointingAnimation
	// void PlayFingerPointingAnimation();                                                                                      // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortAthenaTutorialHUD.DragToTurnEnabled
	// void DragToTurnEnabled();                                                                                                // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortAthenaTutorialHUD.CompletedEnabled
	// void CompletedEnabled();                                                                                                 // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortAthenaTutorialHUD.BroadcastSkipMenuOpened
	// void BroadcastSkipMenuOpened();                                                                                          // [0x96ee1e0] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/FortniteUI.FortAthenaTutorialHUDContainer
/// Size: 0x0058 (0x000370 - 0x0003C8)
class UFortAthenaTutorialHUDContainer : public UBacchusHUDElement
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 968;

public:
	CMember(UFortAthenaTutorialScreen*)                CurrentScreen                                               OFFSET(get<T>, {0x370, 8, 0, 0})
	CMember(AFortAthenaTutorialManager*)               TutorialManager                                             OFFSET(get<T>, {0x378, 8, 0, 0})
	CMember(UFortAthenaTutorialHUD*)                   TutorialHUD                                                 OFFSET(get<T>, {0x380, 8, 0, 0})
	CMember(TWeakObjectPtr<UClass*>)                   TutorialHUDWidgetSoftClass                                  OFFSET(get<T>, {0x390, 32, 0, 0})
	CMember(UOverlay*)                                 Overlay_TutorialHUD                                         OFFSET(get<T>, {0x3B0, 8, 0, 0})
	CMember(UFortAthenaTutorialScreenData*)            TutorialScreenData                                          OFFSET(get<T>, {0x3B8, 8, 0, 0})
	DMember(int32_t)                                   CurrentTutorialStep                                         OFFSET(get<int32_t>, {0x3C0, 4, 0, 0})
	DMember(int32_t)                                   CurrentTutorialSubstep                                      OFFSET(get<int32_t>, {0x3C4, 4, 0, 0})
};

/// Class /Script/FortniteUI.FortAthenaTutorialProgressBar
/// Size: 0x0000 (0x0002C0 - 0x0002C0)
class UFortAthenaTutorialProgressBar : public UUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 704;

public:
};

/// Class /Script/FortniteUI.FortAthenaTutorialScreen
/// Size: 0x00D8 (0x0002C0 - 0x000398)
class UFortAthenaTutorialScreen : public UUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 920;

public:
	DMember(bool)                                      bLimitedDisplayDuration                                     OFFSET(get<bool>, {0x2C0, 1, 0, 0})
	DMember(float)                                     DisplayDuration                                             OFFSET(get<float>, {0x2C4, 4, 0, 0})
	CMember(TArray<FName>)                             InputAction_NameArray                                       OFFSET(get<T>, {0x2C8, 16, 0, 0})
	CMember(TArray<FName>)                             GamepadInputAction_NameArray                                OFFSET(get<T>, {0x2D8, 16, 0, 0})
	SMember(FDataTableRowHandle)                       DataTableRow                                                OFFSET(getStruct<T>, {0x2E8, 16, 0, 0})
	CMember(UFortAthenaTutorialBaseInteraction*)       Interaction_TutorialStep                                    OFFSET(get<T>, {0x370, 8, 0, 0})
	CMember(UFortAthenaTutorialBaseInteraction*)       InteractionRegular_TutorialStep                             OFFSET(get<T>, {0x378, 8, 0, 0})
	CMember(UUserWidget*)                              MoveableHighlight                                           OFFSET(get<T>, {0x380, 8, 0, 0})
	CMember(UUserWidget*)                              MoveableHighlight_Regular                                   OFFSET(get<T>, {0x388, 8, 0, 0})
	CMember(UCommonWidgetSwitcherLegacy*)              Switcher                                                    OFFSET(get<T>, {0x390, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortAthenaTutorialScreen.UpdateInputDisplay
	// void UpdateInputDisplay(ECommonInputType CurrentInputType);                                                              // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.FortAthenaTutorialScreen.SkipGuidedTutorial
	// void SkipGuidedTutorial();                                                                                               // [0x931e5fc] Final|Native|Public|BlueprintCallable 
	// Function /Script/FortniteUI.FortAthenaTutorialScreen.SetupInputActionNames
	// void SetupInputActionNames(TArray<FName>& Names);                                                                        // [0x1d9241c] Event|Public|HasOutParms|BlueprintEvent 
	// Function /Script/FortniteUI.FortAthenaTutorialScreen.OnTutorialProgressUpdated
	// void OnTutorialProgressUpdated(int32_t CurrentPhase);                                                                    // [0x1d9241c] Event|Public|BlueprintEvent 
	// Function /Script/FortniteUI.FortAthenaTutorialScreen.BroadcastTutorialPopupCanceled
	// void BroadcastTutorialPopupCanceled();                                                                                   // [0x96ee1fc] Final|Native|Public|BlueprintCallable 
};

/// Class /Script/FortniteUI.FortAthenaTutorialSkipPopupElement
/// Size: 0x00F0 (0x0002C0 - 0x0003B0)
class UFortAthenaTutorialSkipPopupElement : public UUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 944;

public:
	SMember(FSlateBrush)                               StepIconSlateBrush                                          OFFSET(getStruct<T>, {0x2C0, 192, 0, 0})
	SMember(FText)                                     StepDescription                                             OFFSET(getStruct<T>, {0x380, 24, 0, 0})
	CMember(UCommonTextBlock*)                         Step_TextBlock                                              OFFSET(get<T>, {0x398, 8, 0, 0})
	CMember(UImage*)                                   Step_ImageIcon                                              OFFSET(get<T>, {0x3A0, 8, 0, 0})
	CMember(UImage*)                                   Checkmark_Image                                             OFFSET(get<T>, {0x3A8, 8, 0, 0})
};

/// Class /Script/FortniteUI.FortAthenaTutorialSwipeZone
/// Size: 0x0020 (0x0002D8 - 0x0002F8)
class UFortAthenaTutorialSwipeZone : public UFortAthenaTutorialBaseInteraction
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 760;

public:
};

/// Class /Script/FortniteUI.FortAthenaTutorialTargetCounter
/// Size: 0x0000 (0x0002C0 - 0x0002C0)
class UFortAthenaTutorialTargetCounter : public UUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 704;

public:
};

/// Class /Script/FortniteUI.FortAthenaTutorialTextPrompt
/// Size: 0x01C8 (0x0002C0 - 0x000488)
class UFortAthenaTutorialTextPrompt : public UUserWidget
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1160;

public:
	SMember(FText)                                     TextToDisplay                                               OFFSET(getStruct<T>, {0x2C0, 24, 0, 0})
	SMember(FText)                                     GamepadTextToDisplay                                        OFFSET(getStruct<T>, {0x2D8, 24, 0, 0})
	CMember(TArray<UFortKeybindWidget*>)               Array_FortKeybindWidget                                     OFFSET(get<T>, {0x3F0, 16, 0, 0})
	CMember(URichTextBlock*)                           RichText_TopPrompt                                          OFFSET(get<T>, {0x418, 8, 0, 0})
	CMember(URichTextBlock*)                           RichText_BottomPrompt                                       OFFSET(get<T>, {0x420, 8, 0, 0})
	CMember(URichTextBlock*)                           RichText_ExtraInputPrompt                                   OFFSET(get<T>, {0x428, 8, 0, 0})
	CMember(UCommonActionWidget*)                      ActionWidget_InputFeedback                                  OFFSET(get<T>, {0x430, 8, 0, 0})
	CMember(UFortKeybindWidget*)                       Action_KeybindWidget                                        OFFSET(get<T>, {0x438, 8, 0, 0})
	CMember(UFortKeybindWidget*)                       Action_KeybindWidget1                                       OFFSET(get<T>, {0x440, 8, 0, 0})
	CMember(UFortKeybindWidget*)                       Action_KeybindWidget2                                       OFFSET(get<T>, {0x448, 8, 0, 0})
	CMember(UFortKeybindWidget*)                       Action_KeybindWidget3                                       OFFSET(get<T>, {0x450, 8, 0, 0})
	CMember(UFortKeybindWidget*)                       Action_KeybindWidget4                                       OFFSET(get<T>, {0x458, 8, 0, 0})
	CMember(UUserWidget*)                              Tutorial_NextButton_Input                                   OFFSET(get<T>, {0x460, 8, 0, 0})
	CMember(UOverlay*)                                 Overlay_AllWidgets                                          OFFSET(get<T>, {0x468, 8, 0, 0})
	CMember(UOverlay*)                                 Overlay_ActionWidgets                                       OFFSET(get<T>, {0x470, 8, 0, 0})
	CMember(UOverlay*)                                 Overlay_KeybindWidgets                                      OFFSET(get<T>, {0x478, 8, 0, 0})
	CMember(UOverlay*)                                 Overlay_ExtraText                                           OFFSET(get<T>, {0x480, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortAthenaTutorialTextPrompt.NextButtonPressed
	// void NextButtonPressed();                                                                                                // [0x96ee1e0] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.FortAthenaTutorialTextPrompt.DisplayTarget
	// void DisplayTarget();                                                                                                    // [0x1339cf4] Native|Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortAthenaTutorialTextPrompt.DisplayNextButton
	// void DisplayNextButton();                                                                                                // [0x8c92878] Native|Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortAthenaTutorialTextPrompt.ActivateTextPrompt
	// void ActivateTextPrompt();                                                                                               // [0x1a6975c] Native|Event|Protected|BlueprintEvent 
};

/// Class /Script/FortniteUI.FortHUDShutdownTimerInterface
/// Size: 0x0000 (0x000028 - 0x000028)
class UFortHUDShutdownTimerInterface : public UInterface
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 40;

public:
};

/// Class /Script/FortniteUI.FortUIStateWidget_CampaignFrontendLegacy
/// Size: 0x0050 (0x0005B0 - 0x000600)
class UFortUIStateWidget_CampaignFrontendLegacy : public UFortUIStateWidget_NUI
{ 
	friend MDKHandler;
	static inline constexpr uint64_t __MDKClassSize = 1536;

public:
	SMember(FMulticastInlineDelegate)                  OnCrossplayWidgetClosed                                     OFFSET(getStruct<T>, {0x5B0, 16, 0, 0})
	CMember(UCommonWidgetStackLegacy*)                 MainContentStack                                            OFFSET(get<T>, {0x5C0, 8, 0, 0})
	CMember(UClass*)                                   ItemReceivedScreenClass                                     OFFSET(get<T>, {0x5C8, 8, 0, 0})
	CMember(UFortGiftBoxItem*)                         NextGiftBox                                                 OFFSET(get<T>, {0x5D0, 8, 0, 0})


	/// Functions
	// Function /Script/FortniteUI.FortUIStateWidget_CampaignFrontendLegacy.TryMFAModal
	// void TryMFAModal(UClass* BPClass);                                                                                       // [0x96ef0a4] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.FortUIStateWidget_CampaignFrontendLegacy.SocialBanModalCheck
	// void SocialBanModalCheck();                                                                                              // [0x96ef090] Final|Native|Private|BlueprintCallable 
	// Function /Script/FortniteUI.FortUIStateWidget_CampaignFrontendLegacy.ShowInitialCrossplayDialog
	// bool ShowInitialCrossplayDialog();                                                                                       // [0x96ef06c] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.FortUIStateWidget_CampaignFrontendLegacy.QueueSurvivorSquadsAutoSlottedNotification
	// void QueueSurvivorSquadsAutoSlottedNotification();                                                                       // [0x96eebb4] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.FortUIStateWidget_CampaignFrontendLegacy.OnStoreStateChangedBP
	// void OnStoreStateChangedBP(EFortStoreState NewStoreState);                                                               // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortUIStateWidget_CampaignFrontendLegacy.OnMatchmakingV2Changed
	// void OnMatchmakingV2Changed(bool matchmakingActive);                                                                     // [0x1d9241c] Event|Protected|BlueprintEvent 
	// Function /Script/FortniteUI.FortUIStateWidget_CampaignFrontendLegacy.IsOkToCheckForGifts
	// bool IsOkToCheckForGifts(bool& bTemporary);                                                                              // [0x96ee5ac] Final|Native|Protected|HasOutParms|BlueprintCallable 
	// Function /Script/FortniteUI.FortUIStateWidget_CampaignFrontendLegacy.HandleStoreStateChanged
	// void HandleStoreStateChanged(EFortStoreState NewStoreState);                                                             // [0x96ee440] Final|Native|Private 
	// Function /Script/FortniteUI.FortUIStateWidget_CampaignFrontendLegacy.HandleGiftingComplete
	// void HandleGiftingComplete();                                                                                            // [0x96ee398] Final|Native|Private 
	// Function /Script/FortniteUI.FortUIStateWidget_CampaignFrontendLegacy.HandleGiftBoxRemoved
	// void HandleGiftBoxRemoved(bool bSuccess);                                                                                // [0x96ee318] Final|Native|Private 
	// Function /Script/FortniteUI.FortUIStateWidget_CampaignFrontendLegacy.CheckForGifts
	// bool CheckForGifts();                                                                                                    // [0x96ee218] Final|Native|Protected|BlueprintCallable 
	// Function /Script/FortniteUI.FortUIStateWidget_CampaignFrontendLegacy.AttemptToOpenBattlePassTabForNewSeason
	// bool AttemptToOpenBattlePassTabForNewSeason();                                                                           // [0x2a1f97c] Final|Native|Protected|BlueprintCallable 
};

/// Struct /Script/FortniteUI.FrontendLobbyData
/// Size: 0x0078 (0x000000 - 0x000078)
class FFrontendLobbyData : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 120;

public:
	CMember(TWeakObjectPtr<UTexture*>)                 Texture                                                     OFFSET(get<T>, {0x0, 32, 0, 0})
	CMember(TWeakObjectPtr<UMaterialInstance*>)        Material                                                    OFFSET(get<T>, {0x20, 32, 0, 0})
	CMember(TWeakObjectPtr<UMaterialInstance*>)        PreBlurMaterial                                             OFFSET(get<T>, {0x40, 32, 0, 0})
	CMember(TArray<FFrontendLobbyFXData>)              SpawnFXList                                                 OFFSET(get<T>, {0x60, 16, 0, 0})
	DMember(float)                                     FadeGrid                                                    OFFSET(get<float>, {0x70, 4, 0, 0})
	DMember(float)                                     FadeFloorToBlack                                            OFFSET(get<float>, {0x74, 4, 0, 0})
};

/// Struct /Script/FortniteUI.FrontendLobbyFXData
/// Size: 0x0080 (0x000000 - 0x000080)
class FFrontendLobbyFXData : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 128;

public:
	SMember(FTransform)                                Location                                                    OFFSET(getStruct<T>, {0x0, 96, 0, 0})
	CMember(TWeakObjectPtr<UNiagaraSystem*>)           NiagaraFX                                                   OFFSET(get<T>, {0x60, 32, 0, 0})
};

/// Struct /Script/FortniteUI.GridSortKey
/// Size: 0x0018 (0x000000 - 0x000018)
class FGridSortKey : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 24;

public:
	DMember(float)                                     Number                                                      OFFSET(get<float>, {0x0, 4, 0, 0})
	SMember(FString)                                   String                                                      OFFSET(getStruct<T>, {0x8, 16, 0, 0})
};

/// Struct /Script/FortniteUI.FortFocusedBuildingInfo
/// Size: 0x0048 (0x000000 - 0x000048)
class FFortFocusedBuildingInfo : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 72;

public:
	DMember(bool)                                      bIsInteractable                                             OFFSET(get<bool>, {0x0, 1, 0, 0})
	DMember(bool)                                      bCanBePlayerEdited                                          OFFSET(get<bool>, {0x1, 1, 0, 0})
	SMember(FVector)                                   IndicatorRelativeLocation                                   OFFSET(getStruct<T>, {0x8, 24, 0, 0})
	CMember(EFortBuildingHealthDisplayRule)            HealthDisplayRule                                           OFFSET(get<T>, {0x20, 1, 0, 0})
	DMember(float)                                     MaxHealth                                                   OFFSET(get<float>, {0x24, 4, 0, 0})
	DMember(bool)                                      bIsAnyTrapAttached                                          OFFSET(get<bool>, {0x28, 1, 0, 0})
	DMember(bool)                                      bIsTrapAttachedFacingPlayer                                 OFFSET(get<bool>, {0x29, 1, 0, 0})
	DMember(bool)                                      bIsPreviewTrapAttached                                      OFFSET(get<bool>, {0x2A, 1, 0, 0})
	DMember(float)                                     AttachedTrapMaxDurability                                   OFFSET(get<float>, {0x2C, 4, 0, 0})
	CMember(EFortBuildingInteraction)                  InteractionType                                             OFFSET(get<T>, {0x30, 1, 0, 0})
	DMember(int32_t)                                   InteractionCost                                             OFFSET(get<int32_t>, {0x34, 4, 0, 0})
	CMember(TEnumAsByte<EFortResourceType>)            BuildingMaterial                                            OFFSET(get<T>, {0x38, 1, 0, 0})
	SMember(FName)                                     QuickEditClass                                              OFFSET(getStruct<T>, {0x3C, 4, 0, 0})
	DMember(bool)                                      bIsPlayerBuilt                                              OFFSET(get<bool>, {0x40, 1, 0, 0})
};

/// Struct /Script/FortniteUI.FortHUDState
/// Size: 0x0004 (0x000000 - 0x000004)
class FFortHUDState : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 4;

public:
	DMember(bool)                                      bInBuildMode                                                OFFSET(get<bool>, {0x0, 1, 1, 0})
	DMember(bool)                                      bInCombatMode                                               OFFSET(get<bool>, {0x0, 1, 1, 1})
	DMember(bool)                                      bInEditMode                                                 OFFSET(get<bool>, {0x0, 1, 1, 2})
	DMember(bool)                                      bInCreativeMode                                             OFFSET(get<bool>, {0x0, 1, 1, 3})
	DMember(bool)                                      bIsParachuteOpen                                            OFFSET(get<bool>, {0x0, 1, 1, 4})
	DMember(bool)                                      bIsFreeFalling                                              OFFSET(get<bool>, {0x0, 1, 1, 5})
	DMember(bool)                                      bInLockedBus                                                OFFSET(get<bool>, {0x0, 1, 1, 6})
	DMember(bool)                                      bInUnlockedBus                                              OFFSET(get<bool>, {0x0, 1, 1, 7})
	DMember(bool)                                      bOnTargeting                                                OFFSET(get<bool>, {0x1, 1, 1, 0})
	DMember(bool)                                      bOnUsingScopeTargeting                                      OFFSET(get<bool>, {0x1, 1, 1, 1})
	DMember(bool)                                      bOnCanTarget                                                OFFSET(get<bool>, {0x1, 1, 1, 2})
	DMember(bool)                                      bOnCanUseScopeTargeting                                     OFFSET(get<bool>, {0x1, 1, 1, 3})
	DMember(bool)                                      bOnCanUseSecondaryAbility                                   OFFSET(get<bool>, {0x1, 1, 1, 4})
	DMember(bool)                                      bCanOpenChute                                               OFFSET(get<bool>, {0x1, 1, 1, 5})
	DMember(bool)                                      bCrouching                                                  OFFSET(get<bool>, {0x1, 1, 1, 6})
	DMember(bool)                                      bDBNO                                                       OFFSET(get<bool>, {0x1, 1, 1, 7})
	DMember(bool)                                      bIsControllingRCPawn                                        OFFSET(get<bool>, {0x2, 1, 1, 0})
	DMember(bool)                                      bIsInVehicle                                                OFFSET(get<bool>, {0x2, 1, 1, 1})
	DMember(bool)                                      bIsDrivingVehicle                                           OFFSET(get<bool>, {0x2, 1, 1, 2})
	DMember(bool)                                      bCanSwapSeats                                               OFFSET(get<bool>, {0x2, 1, 1, 3})
	DMember(bool)                                      bIsCarryingDBNO                                             OFFSET(get<bool>, {0x2, 1, 1, 4})
	DMember(bool)                                      bIsCarryingHeldObject                                       OFFSET(get<bool>, {0x2, 1, 1, 5})
	DMember(bool)                                      bIsZiplining                                                OFFSET(get<bool>, {0x2, 1, 1, 6})
	DMember(bool)                                      bIsCreativeFlying                                           OFFSET(get<bool>, {0x2, 1, 1, 7})
	DMember(bool)                                      bImprovedDBNO                                               OFFSET(get<bool>, {0x3, 1, 1, 0})
};

/// Struct /Script/FortniteUI.UINavigationData
/// Size: 0x0028 (0x000000 - 0x000028)
class FUINavigationData : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 40;

public:
	SMember(FText)                                     DisplayName                                                 OFFSET(getStruct<T>, {0x0, 24, 0, 0})
	CMember(UObject*)                                  ObjectData                                                  OFFSET(get<T>, {0x18, 8, 0, 0})
	SMember(FName)                                     IdData                                                      OFFSET(getStruct<T>, {0x20, 4, 0, 0})
	DMember(int32_t)                                   IntData                                                     OFFSET(get<int32_t>, {0x24, 4, 0, 0})
};

/// Struct /Script/FortniteUI.FortTabButtonLabelInfo
/// Size: 0x00F0 (0x000000 - 0x0000F0)
class FFortTabButtonLabelInfo : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 240;

public:
	SMember(FText)                                     DisplayName                                                 OFFSET(getStruct<T>, {0x0, 24, 0, 0})
	SMember(FSlateBrush)                               IconBrush                                                   OFFSET(getStruct<T>, {0x20, 192, 0, 0})
	SMember(FFortPrioritizedWidgetData)                PriorityData                                                OFFSET(getStruct<T>, {0xE0, 2, 0, 0})
};

/// Struct /Script/FortniteUI.FortPrioritizedWidgetData
/// Size: 0x0002 (0x000000 - 0x000002)
class FFortPrioritizedWidgetData : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 2;

public:
	CMember(EFortPrioritizedWidgetPriority)            Priority                                                    OFFSET(get<T>, {0x0, 1, 0, 0})
	CMember(EFortPrioritizedWidgetContestedBehavior)   WhenContesting                                              OFFSET(get<T>, {0x1, 1, 0, 0})
};

/// Struct /Script/FortniteUI.FortAthenaItemManagementInventoryFilterTabLabelInfo
/// Size: 0x0030 (0x0000F0 - 0x000120)
class FFortAthenaItemManagementInventoryFilterTabLabelInfo : public FFortTabButtonLabelInfo
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 288;

public:
	SMember(FName)                                     FilterTabNameId                                             OFFSET(getStruct<T>, {0xE8, 4, 0, 0})
	DMember(bool)                                      bAllowEmptySlotItem                                         OFFSET(get<bool>, {0xEC, 1, 0, 0})
	SMember(FText)                                     EmptyFilterDisplay                                          OFFSET(getStruct<T>, {0xF0, 24, 0, 0})
	SMember(FText)                                     EmptyArchivedFilterDisplay                                  OFFSET(getStruct<T>, {0x108, 24, 0, 0})
};

/// Struct /Script/FortniteUI.AthenaWinnerInfo
/// Size: 0x0020 (0x000000 - 0x000020)
class FAthenaWinnerInfo : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 32;

public:
	SMember(FString)                                   BigNameWinnerName                                           OFFSET(getStruct<T>, {0x0, 16, 0, 0})
	CMember(TArray<FString>)                           WinnerNames                                                 OFFSET(get<T>, {0x10, 16, 0, 0})
};

/// Struct /Script/FortniteUI.FortPostGameScreenConfig
/// Size: 0x0008 (0x000000 - 0x000008)
class FFortPostGameScreenConfig : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 8;

public:
	CMember(EPostGameClickCatcherMode)                 ClickCatcherState                                           OFFSET(get<T>, {0x0, 1, 0, 0})
	CMember(EPostGameHUDMode)                          PostGameHUDMode                                             OFFSET(get<T>, {0x1, 1, 0, 0})
	DMember(bool)                                      bSohwCinematicBars                                          OFFSET(get<bool>, {0x2, 1, 0, 0})
	DMember(bool)                                      bShowPlacementOverlay                                       OFFSET(get<bool>, {0x3, 1, 0, 0})
	DMember(bool)                                      bIsContainerSafeZoneEnabled                                 OFFSET(get<bool>, {0x4, 1, 0, 0})
	DMember(bool)                                      bShowSpectatingPlayerName                                   OFFSET(get<bool>, {0x5, 1, 0, 0})
	DMember(bool)                                      bPutPawnInStasis                                            OFFSET(get<bool>, {0x6, 1, 0, 0})
	DMember(bool)                                      bAllowEmotesInStasis                                        OFFSET(get<bool>, {0x7, 1, 0, 0})
};

/// Struct /Script/FortniteUI.FortUIStatStyle
/// Size: 0x0100 (0x000000 - 0x000100)
class FFortUIStatStyle : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 256;

public:
	SMember(FText)                                     Name                                                        OFFSET(getStruct<T>, {0x0, 24, 0, 0})
	SMember(FText)                                     HighestText                                                 OFFSET(getStruct<T>, {0x18, 24, 0, 0})
	SMember(FSlateBrush)                               Icon                                                        OFFSET(getStruct<T>, {0x30, 192, 0, 0})
	CMember(ECommonNumericType)                        NumericType                                                 OFFSET(get<T>, {0xF0, 1, 0, 0})
	DMember(float)                                     MinimalNotableValue                                         OFFSET(get<float>, {0xF4, 4, 0, 0})
};

/// Struct /Script/FortniteUI.PrimaryContentSetup
/// Size: 0x0003 (0x000000 - 0x000003)
class FPrimaryContentSetup : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 3;

public:
	DMember(bool)                                      bShowBottomBar                                              OFFSET(get<bool>, {0x0, 1, 0, 0})
	DMember(bool)                                      bShowChatWidget                                             OFFSET(get<bool>, {0x1, 1, 0, 0})
	DMember(bool)                                      bShowTopBar                                                 OFFSET(get<bool>, {0x2, 1, 0, 0})
};

/// Struct /Script/FortniteUI.FortTabListRegistrationInfo
/// Size: 0x0120 (0x000000 - 0x000120)
class FFortTabListRegistrationInfo : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 288;

public:
	SMember(FName)                                     TabNameID                                                   OFFSET(getStruct<T>, {0x0, 4, 0, 0})
	DMember(bool)                                      bHidden                                                     OFFSET(get<bool>, {0x4, 1, 0, 0})
	DMember(bool)                                      bAllowedInZone                                              OFFSET(get<bool>, {0x5, 1, 0, 0})
	SMember(FFortTabButtonLabelInfo)                   TabLabelInfo                                                OFFSET(getStruct<T>, {0x10, 240, 0, 0})
	CMember(UClass*)                                   TabButtonType                                               OFFSET(get<T>, {0x100, 8, 0, 0})
	CMember(UClass*)                                   TabContentType                                              OFFSET(get<T>, {0x108, 8, 0, 0})
	CMember(UWidget*)                                  CreatedTabContentWidget                                     OFFSET(get<T>, {0x110, 8, 0, 0})
};

/// Struct /Script/FortniteUI.FortBackendVersion
/// Size: 0x0098 (0x000000 - 0x000098)
class FFortBackendVersion : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 152;

public:
};

/// Struct /Script/FortniteUI.FortUIFeatureStruct
/// Size: 0x0018 (0x000000 - 0x000018)
class FFortUIFeatureStruct : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 24;

public:
	CMember(EFortUIFeatureState)                       CurrentState                                                OFFSET(get<T>, {0x0, 1, 0, 0})
	CMember(EFortUIFeatureState)                       ForcedState                                                 OFFSET(get<T>, {0x1, 1, 0, 0})
	CMember(EFortUIFeatureStateReason)                 ForcedStateReason                                           OFFSET(get<T>, {0x2, 1, 0, 0})
	SMember(FMulticastInlineDelegate)                  ChangeDelegate                                              OFFSET(getStruct<T>, {0x8, 16, 0, 0})
};

/// Struct /Script/FortniteUI.FortAttributeModifierDisplayData
/// Size: 0x0150 (0x000000 - 0x000150)
class FFortAttributeModifierDisplayData : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 336;

public:
	SMember(FGameplayAttribute)                        Attribute                                                   OFFSET(getStruct<T>, {0x0, 56, 0, 0})
	DMember(float)                                     Value                                                       OFFSET(get<float>, {0x38, 4, 0, 0})
	CMember(TEnumAsByte<EGameplayModOp>)               ModifierType                                                OFFSET(get<T>, {0x3C, 1, 0, 0})
	SMember(FGameplayTagRequirements)                  SourceTags                                                  OFFSET(getStruct<T>, {0x40, 136, 0, 0})
	SMember(FGameplayTagRequirements)                  TargetTags                                                  OFFSET(getStruct<T>, {0xC8, 136, 0, 0})
};

/// Struct /Script/FortniteUI.FortReceivedItemLootInfo
/// Size: 0x00C8 (0x000000 - 0x0000C8)
class FFortReceivedItemLootInfo : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 200;

public:
	SMember(FFortItemHeaderInformation)                HeaderInformation                                           OFFSET(getStruct<T>, {0x0, 144, 0, 0})
	CMember(UFortItem*)                                SourceItemInstance                                          OFFSET(get<T>, {0x90, 8, 0, 0})
	CMember(UFortItem*)                                GeneratedItemInstance                                       OFFSET(get<T>, {0x98, 8, 0, 0})
	CMember(UFortItemDefinition*)                      ItemDef                                                     OFFSET(get<T>, {0xA0, 8, 0, 0})
	SMember(FString)                                   TemplateId                                                  OFFSET(getStruct<T>, {0xA8, 16, 0, 0})
	DMember(int32_t)                                   Quantity                                                    OFFSET(get<int32_t>, {0xB8, 4, 0, 0})
};

/// Struct /Script/FortniteUI.FortItemShopLayout
/// Size: 0x0020 (0x000000 - 0x000020)
class FFortItemShopLayout : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 32;

public:
	SMember(FString)                                   SectionId                                                   OFFSET(getStruct<T>, {0x0, 16, 0, 0})
	SMember(FString)                                   SubsectionId                                                OFFSET(getStruct<T>, {0x10, 16, 0, 0})
};

/// Struct /Script/FortniteUI.FortItemShopCMSBackground
/// Size: 0x0020 (0x000000 - 0x000020)
class FFortItemShopCMSBackground : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 32;

public:
	SMember(FString)                                   CustomTexture                                               OFFSET(getStruct<T>, {0x0, 16, 0, 0})
	SMember(FString)                                   CookedAssetKey                                              OFFSET(getStruct<T>, {0x10, 16, 0, 0})
};

/// Struct /Script/FortniteUI.FortSettingsFilterState
/// Size: 0x03B8 (0x000000 - 0x0003B8)
class FFortSettingsFilterState : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 952;

public:
	DMember(bool)                                      bIncludeDisabled                                            OFFSET(get<bool>, {0x0, 1, 0, 0})
	DMember(bool)                                      bIncludeHidden                                              OFFSET(get<bool>, {0x1, 1, 0, 0})
	DMember(bool)                                      bIncludeResetable                                           OFFSET(get<bool>, {0x2, 1, 0, 0})
	DMember(bool)                                      bIncludeNestedPages                                         OFFSET(get<bool>, {0x3, 1, 0, 0})
	CMember(TArray<UFortSetting*>)                     SettingRootList                                             OFFSET(get<T>, {0x398, 16, 0, 0})
	CMember(TArray<UFortSetting*>)                     SettingWhiteList                                            OFFSET(get<T>, {0x3A8, 16, 0, 0})
};

/// Struct /Script/FortniteUI.FortSimpleWidgetAnimations
/// Size: 0x0030 (0x000000 - 0x000030)
class FFortSimpleWidgetAnimations : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 48;

public:
	SMember(FName)                                     Name                                                        OFFSET(getStruct<T>, {0x0, 4, 0, 0})
	DMember(bool)                                      bIsEnabled                                                  OFFSET(get<bool>, {0x4, 1, 0, 0})
	CMember(TArray<FFortSimpleWidgetAnimation>)        Targets                                                     OFFSET(get<T>, {0x8, 16, 0, 0})
	SMember(FMulticastInlineDelegate)                  OnAnimationsFinished                                        OFFSET(getStruct<T>, {0x18, 16, 0, 0})
};

/// Struct /Script/FortniteUI.FortSimpleWidgetAnimation
/// Size: 0x0068 (0x000000 - 0x000068)
class FFortSimpleWidgetAnimation : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 104;

public:
	SMember(FName)                                     TargetName                                                  OFFSET(getStruct<T>, {0x0, 4, 0, 0})
	CMember(UCurveVector*)                             Translation                                                 OFFSET(get<T>, {0x8, 8, 0, 0})
	CMember(UCurveVector*)                             Scale                                                       OFFSET(get<T>, {0x10, 8, 0, 0})
	CMember(UCurveFloat*)                              Alpha                                                       OFFSET(get<T>, {0x18, 8, 0, 0})
	DMember(bool)                                      bResetOnFinish                                              OFFSET(get<bool>, {0x20, 1, 0, 0})
	DMember(bool)                                      bShouldAnimateTranslation                                   OFFSET(get<bool>, {0x21, 1, 0, 0})
	DMember(bool)                                      bShouldAnimateScale                                         OFFSET(get<bool>, {0x22, 1, 0, 0})
	DMember(bool)                                      bShouldAnimateAlpha                                         OFFSET(get<bool>, {0x23, 1, 0, 0})
	CMember(TWeakObjectPtr<UWorld*>)                   WeakWorld                                                   OFFSET(get<T>, {0x30, 8, 0, 0})
};

/// Struct /Script/FortniteUI.CardPackOffer
/// Size: 0x0078 (0x000000 - 0x000078)
class FCardPackOffer : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 120;

public:
	SMember(FText)                                     Title                                                       OFFSET(getStruct<T>, {0x0, 24, 0, 0})
	SMember(FText)                                     Description                                                 OFFSET(getStruct<T>, {0x18, 24, 0, 0})
	DMember(int32_t)                                   MtxPrice                                                    OFFSET(get<int32_t>, {0x30, 4, 0, 0})
	CMember(TEnumAsByte<ECatalogSaleType>)             SaleType                                                    OFFSET(get<T>, {0x34, 1, 0, 0})
	SMember(FText)                                     SaleText                                                    OFFSET(getStruct<T>, {0x38, 24, 0, 0})
	DMember(int32_t)                                   Price                                                       OFFSET(get<int32_t>, {0x50, 4, 0, 0})
	DMember(int32_t)                                   RegularPrice                                                OFFSET(get<int32_t>, {0x54, 4, 0, 0})
	CMember(UFortAccountItemDefinition*)               CurrencyType                                                OFFSET(get<T>, {0x58, 8, 0, 0})
	DMember(int32_t)                                   QuantityRemaining                                           OFFSET(get<int32_t>, {0x60, 4, 0, 0})
	DMember(bool)                                      bTimedOffer                                                 OFFSET(get<bool>, {0x64, 1, 0, 0})
};

/// Struct /Script/FortniteUI.TimerDisplayData
/// Size: 0x0038 (0x000000 - 0x000038)
class FTimerDisplayData : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 56;

public:
	SMember(FLinearColor)                              BrushColor                                                  OFFSET(getStruct<T>, {0x0, 16, 0, 0})
	SMember(FText)                                     TimeRemainingDisplayText                                    OFFSET(getStruct<T>, {0x10, 24, 0, 0})
	SMember(FLinearColor)                              TextColor                                                   OFFSET(getStruct<T>, {0x28, 16, 0, 0})
};

/// Struct /Script/FortniteUI.AthenaInventoryDropStackSizeRow
/// Size: 0x0028 (0x000008 - 0x000030)
class FAthenaInventoryDropStackSizeRow : public FTableRowBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 48;

public:
	SMember(FGameplayTagContainer)                     ItemTags                                                    OFFSET(getStruct<T>, {0x8, 32, 0, 0})
	DMember(int32_t)                                   StackSize                                                   OFFSET(get<int32_t>, {0x28, 4, 0, 0})
};

/// Struct /Script/FortniteUI.StatBound
/// Size: 0x0008 (0x000000 - 0x000008)
class FStatBound : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 8;

public:
	DMember(float)                                     Minimum                                                     OFFSET(get<float>, {0x0, 4, 0, 0})
	DMember(float)                                     Maximum                                                     OFFSET(get<float>, {0x4, 4, 0, 0})
};

/// Struct /Script/FortniteUI.AthenaInventoryItemStatBoundsRow
/// Size: 0x0040 (0x000008 - 0x000048)
class FAthenaInventoryItemStatBoundsRow : public FTableRowBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 72;

public:
	SMember(FGameplayTagContainer)                     ItemTags                                                    OFFSET(getStruct<T>, {0x8, 32, 0, 0})
	SMember(FStatBound)                                Damage                                                      OFFSET(getStruct<T>, {0x28, 8, 0, 0})
	SMember(FStatBound)                                FireRate                                                    OFFSET(getStruct<T>, {0x30, 8, 0, 0})
	SMember(FStatBound)                                MagazineSize                                                OFFSET(getStruct<T>, {0x38, 8, 0, 0})
	SMember(FStatBound)                                ReloadTime                                                  OFFSET(getStruct<T>, {0x40, 8, 0, 0})
};

/// Struct /Script/FortniteUI.AthenaItemShopReloadMtxInfo
/// Size: 0x0080 (0x000000 - 0x000080)
class FAthenaItemShopReloadMtxInfo : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 128;

public:
	CMember(TArray<FName>)                             StaticStorefrontNames                                       OFFSET(get<T>, {0x0, 16, 0, 0})
	CMember(TArray<FName>)                             DynamicStorefrontNames                                      OFFSET(get<T>, {0x10, 16, 0, 0})
	SMember(FName)                                     IncrementalStorefrontName                                   OFFSET(getStruct<T>, {0x20, 4, 0, 0})
	SMember(FString)                                   DynamicOtherOptionOfferId                                   OFFSET(getStruct<T>, {0x28, 16, 0, 0})
	DMember(int32_t)                                   MaxMtxQuantityToShowDynamicReloadMtx                        OFFSET(get<int32_t>, {0x38, 4, 0, 0})
	CMember(TWeakObjectPtr<UClass*>)                   StaticReloadMtxScreenClass                                  OFFSET(get<T>, {0x40, 32, 0, 0})
	CMember(TWeakObjectPtr<UClass*>)                   DynamicReloadMtxScreenClass                                 OFFSET(get<T>, {0x60, 32, 0, 0})
};

/// Struct /Script/FortniteUI.AthenaMapScreenContainerTabInfo
/// Size: 0x0048 (0x000000 - 0x000048)
class FAthenaMapScreenContainerTabInfo : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 72;

public:
	SMember(FText)                                     TabTitle                                                    OFFSET(getStruct<T>, {0x0, 24, 0, 0})
	CMember(TWeakObjectPtr<UObject*>)                  TabIcon                                                     OFFSET(get<T>, {0x18, 32, 0, 0})
	DMember(int32_t)                                   Order                                                       OFFSET(get<int32_t>, {0x38, 4, 0, 0})
	DMember(bool)                                      bDefaultFrontendActiveTab                                   OFFSET(get<bool>, {0x3C, 1, 0, 0})
	DMember(bool)                                      bDefaultInGameActiveTab                                     OFFSET(get<bool>, {0x3D, 1, 0, 0})
	DMember(bool)                                      bShowPlayerProfile                                          OFFSET(get<bool>, {0x3E, 1, 0, 0})
	SMember(FName)                                     TabID                                                       OFFSET(getStruct<T>, {0x40, 4, 0, 0})
};

/// Struct /Script/FortniteUI.AthenaPostMatchScreenContainerTabInfo
/// Size: 0x0048 (0x000000 - 0x000048)
class FAthenaPostMatchScreenContainerTabInfo : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 72;

public:
	SMember(FText)                                     TabTitle                                                    OFFSET(getStruct<T>, {0x0, 24, 0, 0})
	CMember(TWeakObjectPtr<UObject*>)                  TabIcon                                                     OFFSET(get<T>, {0x18, 32, 0, 0})
	DMember(int32_t)                                   Order                                                       OFFSET(get<int32_t>, {0x38, 4, 0, 0})
	DMember(bool)                                      bDefaultInGameActiveTab                                     OFFSET(get<bool>, {0x3C, 1, 0, 0})
	SMember(FName)                                     AutoAdvanceToTabID                                          OFFSET(getStruct<T>, {0x40, 4, 0, 0})
	SMember(FName)                                     TabID                                                       OFFSET(getStruct<T>, {0x44, 4, 0, 0})
};

/// Struct /Script/FortniteUI.AthenaReplayBrowserRowData
/// Size: 0x0040 (0x000000 - 0x000040)
class FAthenaReplayBrowserRowData : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 64;

public:
	SMember(FString)                                   Name                                                        OFFSET(getStruct<T>, {0x0, 16, 0, 0})
	SMember(FDateTime)                                 Date                                                        OFFSET(getStruct<T>, {0x10, 8, 0, 0})
	DMember(float)                                     Length                                                      OFFSET(get<float>, {0x18, 4, 0, 0})
	DMember(int32_t)                                   Rank                                                        OFFSET(get<int32_t>, {0x1C, 4, 0, 0})
	DMember(int32_t)                                   NumPlayers                                                  OFFSET(get<int32_t>, {0x20, 4, 0, 0})
	DMember(int32_t)                                   Eliminations                                                OFFSET(get<int32_t>, {0x24, 4, 0, 0})
	DMember(int32_t)                                   DownloadModulesCount                                        OFFSET(get<int32_t>, {0x28, 4, 0, 0})
};

/// Struct /Script/FortniteUI.AthenaVariantFilterTabInfo
/// Size: 0x0070 (0x000000 - 0x000070)
class FAthenaVariantFilterTabInfo : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 112;

public:
	CMember(TWeakObjectPtr<UObject*>)                  Icon                                                        OFFSET(get<T>, {0x0, 32, 0, 0})
	SMember(FText)                                     Label                                                       OFFSET(getStruct<T>, {0x20, 24, 0, 0})
	SMember(FGameplayTagContainer)                     IncludedVariantChannels                                     OFFSET(getStruct<T>, {0x38, 32, 0, 0})
	CMember(TArray<FMcpVariantChannelInfo>)            ForcedVariantSelections                                     OFFSET(get<T>, {0x58, 16, 0, 0})
	DMember(float)                                     ZoomLevel                                                   OFFSET(get<float>, {0x68, 4, 0, 0})
	DMember(bool)                                      bDisableScrollBox                                           OFFSET(get<bool>, {0x6C, 1, 0, 0})
};

/// Struct /Script/FortniteUI.AthenaVariantFilterTabInfo_Primary
/// Size: 0x0080 (0x000000 - 0x000080)
class FAthenaVariantFilterTabInfo_Primary : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 128;

public:
	SMember(FAthenaVariantFilterTabInfo)               PrimaryTab                                                  OFFSET(getStruct<T>, {0x0, 112, 0, 0})
	CMember(TArray<FAthenaVariantFilterTabInfo>)       SubTabs                                                     OFFSET(get<T>, {0x70, 16, 0, 0})
};

/// Struct /Script/FortniteUI.AthenaVariantFilterSet
/// Size: 0x0010 (0x000000 - 0x000010)
class FAthenaVariantFilterSet : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 16;

public:
	CMember(TArray<FAthenaVariantFilterTabInfo_Primary>) PrimaryTabs                                               OFFSET(get<T>, {0x0, 16, 0, 0})
};

/// Struct /Script/FortniteUI.CreativeContentBrowserRemoveItemDefinitionMessage
/// Size: 0x0010 (0x000000 - 0x000010)
class FCreativeContentBrowserRemoveItemDefinitionMessage : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 16;

public:
	CMember(TArray<UFortItemDefinition*>)              ItemDefinitionsToRemove                                     OFFSET(get<T>, {0x0, 16, 0, 0})
};

/// Struct /Script/FortniteUI.CreativeContentBrowserTabInitializer
/// Size: 0x0040 (0x000000 - 0x000040)
class FCreativeContentBrowserTabInitializer : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 64;

public:
	SMember(FText)                                     TabLabel                                                    OFFSET(getStruct<T>, {0x0, 24, 0, 0})
	CMember(TWeakObjectPtr<UClass*>)                   CreativeContentBrowserTabClass                              OFFSET(get<T>, {0x18, 32, 0, 0})
	CMember(UCreativeContentBrowserTab_CreationCondition*) CreationCondition                                       OFFSET(get<T>, {0x38, 8, 0, 0})
};

/// Struct /Script/FortniteUI.MotdVideo
/// Size: 0x0028 (0x000000 - 0x000028)
class FMotdVideo : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 40;

public:
	SMember(FString)                                   UID                                                         OFFSET(getStruct<T>, {0x0, 16, 0, 0})
	SMember(FString)                                   VideoString                                                 OFFSET(getStruct<T>, {0x10, 16, 0, 0})
	DMember(bool)                                      bAutoPlay                                                   OFFSET(get<bool>, {0x20, 1, 0, 0})
	DMember(bool)                                      bStreamingEnabled                                           OFFSET(get<bool>, {0x21, 1, 0, 0})
};

/// Struct /Script/FortniteUI.MotdImage
/// Size: 0x0018 (0x000000 - 0x000018)
class FMotdImage : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 24;

public:
	SMember(FString)                                   URL                                                         OFFSET(getStruct<T>, {0x0, 16, 0, 0})
	DMember(int32_t)                                   Width                                                       OFFSET(get<int32_t>, {0x10, 4, 0, 0})
	DMember(int32_t)                                   Height                                                      OFFSET(get<int32_t>, {0x14, 4, 0, 0})
};

/// Struct /Script/FortniteUI.MotdButton
/// Size: 0x0028 (0x000000 - 0x000028)
class FMotdButton : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 40;

public:
	SMember(FText)                                     Text                                                        OFFSET(getStruct<T>, {0x0, 24, 0, 0})
	CMember(EMotdButtonStyle)                          style                                                       OFFSET(get<T>, {0x18, 1, 0, 0})
	CMember(UMotdActionBase*)                          Action                                                      OFFSET(get<T>, {0x20, 8, 0, 0})
};

/// Struct /Script/FortniteUI.MotdBackground
/// Size: 0x0040 (0x000000 - 0x000040)
class FMotdBackground : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 64;

public:
	CMember(TArray<FMotdImage>)                        Images                                                      OFFSET(get<T>, {0x0, 16, 0, 0})
};

/// Struct /Script/FortniteUI.CreativeDeviceSubscription
/// Size: 0x0070 (0x000000 - 0x000070)
class FCreativeDeviceSubscription : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 112;

public:
	DMember(int32_t)                                   DestinationDeviceGUID                                       OFFSET(get<int32_t>, {0x0, 4, 0, 0})
	DMember(bool)                                      bIsEvent                                                    OFFSET(get<bool>, {0x4, 1, 0, 0})
	SMember(FText)                                     SourceSubscriptionDisplayName                               OFFSET(getStruct<T>, {0x8, 24, 0, 0})
	SMember(FText)                                     DestinationDeviceDisplayName                                OFFSET(getStruct<T>, {0x20, 24, 0, 0})
	SMember(FText)                                     DestinationSubscriptionDisplayName                          OFFSET(getStruct<T>, {0x38, 24, 0, 0})
	CMember(TWeakObjectPtr<AActor*>)                   ActorPtr                                                    OFFSET(get<T>, {0x50, 32, 0, 0})
};

/// Struct /Script/FortniteUI.FortItemCard_PowerRatingBlock_Configuration
/// Size: 0x0140 (0x000000 - 0x000140)
class FFortItemCard_PowerRatingBlock_Configuration : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 320;

public:
	SMember(FSlateBrush)                               MoonbeamBorderBrush                                         OFFSET(getStruct<T>, {0x10, 192, 0, 0})
	SMember(FMargin)                                   MoonbeamBorderExteriorPadding                               OFFSET(getStruct<T>, {0xD0, 16, 0, 0})
	SMember(FMargin)                                   MoonbeamBorderPadding                                       OFFSET(getStruct<T>, {0xE0, 16, 0, 0})
	SMember(FMargin)                                   CustomRatingInternalPadding                                 OFFSET(getStruct<T>, {0xF0, 16, 0, 0})
	SMember(FVector2D)                                 CustomRatingIconSize                                        OFFSET(getStruct<T>, {0x100, 16, 0, 0})
	CMember(TWeakObjectPtr<UClass*>)                   CustomRatingTextStyle                                       OFFSET(get<T>, {0x110, 32, 0, 0})
	SMember(FVector2D)                                 ComparisonIndicatorSize                                     OFFSET(getStruct<T>, {0x130, 16, 0, 0})
};

/// Struct /Script/FortniteUI.FortItemCard_PowerRatingBlock_PersonnelAndSchematics_Configuration
/// Size: 0x01C0 (0x000140 - 0x000300)
class FFortItemCard_PowerRatingBlock_PersonnelAndSchematics_Configuration : public FFortItemCard_PowerRatingBlock_Configuration
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 768;

public:
	SMember(FSlateBrush)                               PersonnelPowerRatingIconBrush                               OFFSET(getStruct<T>, {0x140, 192, 0, 0})
	CMember(TWeakObjectPtr<UClass*>)                   PersonnelPowerRatingTextStyle                               OFFSET(get<T>, {0x200, 32, 0, 0})
	SMember(FSlateBrush)                               SchematicPowerRatingIconBrush                               OFFSET(getStruct<T>, {0x220, 192, 0, 0})
	CMember(TWeakObjectPtr<UClass*>)                   SchematicPowerRatingTextStyle                               OFFSET(get<T>, {0x2E0, 32, 0, 0})
};

/// Struct /Script/FortniteUI.FortItemCard_PowerRatingBlock_ItemInstance_Configuration
/// Size: 0x00E0 (0x000140 - 0x000220)
class FFortItemCard_PowerRatingBlock_ItemInstance_Configuration : public FFortItemCard_PowerRatingBlock_Configuration
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 544;

public:
	SMember(FSlateBrush)                               PowerRatingIconBrush                                        OFFSET(getStruct<T>, {0x140, 192, 0, 0})
	CMember(TWeakObjectPtr<UClass*>)                   PowerRatingTextStyle                                        OFFSET(get<T>, {0x200, 32, 0, 0})
};

/// Struct /Script/FortniteUI.FortItemCard_StackCountBlock_Configuration
/// Size: 0x0028 (0x000000 - 0x000028)
class FFortItemCard_StackCountBlock_Configuration : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 40;

public:
	DMember(bool)                                      bShowShorthandStackCount                                    OFFSET(get<bool>, {0x0, 1, 0, 0})
	CMember(TWeakObjectPtr<UClass*>)                   TextStyle                                                   OFFSET(get<T>, {0x8, 32, 0, 0})
};

/// Struct /Script/FortniteUI.FortItemCard_NameplateBorder_Configuration
/// Size: 0x00D0 (0x000000 - 0x0000D0)
class FFortItemCard_NameplateBorder_Configuration : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 208;

public:
	SMember(FMargin)                                   Padding                                                     OFFSET(getStruct<T>, {0x0, 16, 0, 0})
	SMember(FSlateBrush)                               Brush                                                       OFFSET(getStruct<T>, {0x10, 192, 0, 0})
};

/// Struct /Script/FortniteUI.FortItemCard_DefenderWeaponTypeIcon_Configuration
/// Size: 0x0010 (0x000000 - 0x000010)
class FFortItemCard_DefenderWeaponTypeIcon_Configuration : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 16;

public:
	SMember(FVector2D)                                 IconConstraints                                             OFFSET(getStruct<T>, {0x0, 16, 0, 0})
};

/// Struct /Script/FortniteUI.FortItemCard_DetailAreaBorder_Configuration
/// Size: 0x0014 (0x000000 - 0x000014)
class FFortItemCard_DetailAreaBorder_Configuration : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 20;

public:
	DMember(float)                                     MinimumHeight                                               OFFSET(get<float>, {0x0, 4, 0, 0})
	SMember(FMargin)                                   Padding                                                     OFFSET(getStruct<T>, {0x4, 16, 0, 0})
};

/// Struct /Script/FortniteUI.FortItemCard_TierMeter_Configuration
/// Size: 0x0018 (0x000000 - 0x000018)
class FFortItemCard_TierMeter_Configuration : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 24;

public:
	SMember(FVector2D)                                 PipSize                                                     OFFSET(getStruct<T>, {0x0, 16, 0, 0})
	DMember(float)                                     InterPipPadding                                             OFFSET(get<float>, {0x10, 4, 0, 0})
};

/// Struct /Script/FortniteUI.FortItemCard_LevelMeter_Configuration
/// Size: 0x0014 (0x000000 - 0x000014)
class FFortItemCard_LevelMeter_Configuration : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 20;

public:
	DMember(float)                                     MeterThickness                                              OFFSET(get<float>, {0x0, 4, 0, 0})
	SMember(FMargin)                                   MeterPadding                                                OFFSET(getStruct<T>, {0x4, 16, 0, 0})
};

/// Struct /Script/FortniteUI.FortItemCard_DurabilityMeter_Configuration
/// Size: 0x0014 (0x000000 - 0x000014)
class FFortItemCard_DurabilityMeter_Configuration : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 20;

public:
	DMember(float)                                     MeterThickness                                              OFFSET(get<float>, {0x0, 4, 0, 0})
	SMember(FMargin)                                   MeterPadding                                                OFFSET(getStruct<T>, {0x4, 16, 0, 0})
};

/// Struct /Script/FortniteUI.FortItemCard_XL_PersonnelAndSchematics_Configuration
/// Size: 0x0510 (0x000000 - 0x000510)
class FFortItemCard_XL_PersonnelAndSchematics_Configuration : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 1296;

public:
	SMember(FMargin)                                   BackgroundPadding                                           OFFSET(getStruct<T>, {0x0, 16, 0, 0})
	SMember(FFortItemCard_PowerRatingBlock_PersonnelAndSchematics_Configuration) PowerRatingBlock                  OFFSET(getStruct<T>, {0x10, 768, 0, 0})
	SMember(FVector2D)                                 BookmarkImageSize                                           OFFSET(getStruct<T>, {0x310, 16, 0, 0})
	SMember(FFortItemCard_NameplateBorder_Configuration) Nameplate                                                 OFFSET(getStruct<T>, {0x320, 208, 0, 0})
	CMember(TWeakObjectPtr<UClass*>)                   ItemNameTextStyle                                           OFFSET(get<T>, {0x3F0, 32, 0, 0})
	SMember(FVector2D)                                 LeadSurvivorTypeIconSize                                    OFFSET(getStruct<T>, {0x410, 16, 0, 0})
	SMember(FVector2D)                                 FirstIconSlotSize                                           OFFSET(getStruct<T>, {0x420, 16, 0, 0})
	DMember(float)                                     PaddingBetweenIconSlots                                     OFFSET(get<float>, {0x430, 4, 0, 0})
	SMember(FVector2D)                                 SecondIconSlotSize                                          OFFSET(getStruct<T>, {0x438, 16, 0, 0})
	SMember(FFortItemCard_DefenderWeaponTypeIcon_Configuration) DefenderWeaponTypeIcon                             OFFSET(getStruct<T>, {0x448, 16, 0, 0})
	SMember(FFortItemCard_DetailAreaBorder_Configuration) DetailAreaBorder                                         OFFSET(getStruct<T>, {0x458, 20, 0, 0})
	DMember(float)                                     RarityNameTextLeftPadding                                   OFFSET(get<float>, {0x46C, 4, 0, 0})
	CMember(TWeakObjectPtr<UClass*>)                   RarityNameTextStyle                                         OFFSET(get<T>, {0x470, 32, 0, 0})
	DMember(float)                                     ClassIconImageLeftPadding                                   OFFSET(get<float>, {0x490, 4, 0, 0})
	SMember(FVector2D)                                 ClassIconSize                                               OFFSET(getStruct<T>, {0x498, 16, 0, 0})
	DMember(float)                                     PaddingBetweenClassIconAndName                              OFFSET(get<float>, {0x4A8, 4, 0, 0})
	CMember(TWeakObjectPtr<UClass*>)                   ClassNameTextStyle                                          OFFSET(get<T>, {0x4B0, 32, 0, 0})
	DMember(float)                                     TierMeterLeftPadding                                        OFFSET(get<float>, {0x4D0, 4, 0, 0})
	SMember(FFortItemCard_TierMeter_Configuration)     TierMeter                                                   OFFSET(getStruct<T>, {0x4D8, 24, 0, 0})
	SMember(FMargin)                                   IconSlotOverNameplatePadding                                OFFSET(getStruct<T>, {0x4F0, 16, 0, 0})
	SMember(FVector2D)                                 IconSlotOverNameplateSize                                   OFFSET(getStruct<T>, {0x500, 16, 0, 0})
};

/// Struct /Script/FortniteUI.FortItemCard_XL_ItemInstance_Configuration
/// Size: 0x02F0 (0x000000 - 0x0002F0)
class FFortItemCard_XL_ItemInstance_Configuration : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 752;

public:
	SMember(FMargin)                                   BackgroundPadding                                           OFFSET(getStruct<T>, {0x0, 16, 0, 0})
	SMember(FMargin)                                   PowerRatingBlockPadding                                     OFFSET(getStruct<T>, {0x10, 16, 0, 0})
	SMember(FFortItemCard_PowerRatingBlock_ItemInstance_Configuration) PowerRatingBlock                            OFFSET(getStruct<T>, {0x20, 544, 0, 0})
	SMember(FVector2D)                                 BookmarkImageSize                                           OFFSET(getStruct<T>, {0x240, 16, 0, 0})
	SMember(FFortItemCard_StackCountBlock_Configuration) StackCountBlock                                           OFFSET(getStruct<T>, {0x250, 40, 0, 0})
	SMember(FMargin)                                   TraitBoxPadding                                             OFFSET(getStruct<T>, {0x278, 16, 0, 0})
	SMember(FVector2D)                                 FirstTraitSize                                              OFFSET(getStruct<T>, {0x288, 16, 0, 0})
	DMember(float)                                     PaddingBetweenTraitIcons                                    OFFSET(get<float>, {0x298, 4, 0, 0})
	SMember(FVector2D)                                 SecondTraitSize                                             OFFSET(getStruct<T>, {0x2A0, 16, 0, 0})
	SMember(FMargin)                                   TierMeterPadding                                            OFFSET(getStruct<T>, {0x2B0, 16, 0, 0})
	SMember(FFortItemCard_TierMeter_Configuration)     TierMeter                                                   OFFSET(getStruct<T>, {0x2C0, 24, 0, 0})
	SMember(FFortItemCard_DurabilityMeter_Configuration) DurabilityMeter                                           OFFSET(getStruct<T>, {0x2D8, 20, 0, 0})
};

/// Struct /Script/FortniteUI.FortItemCard_XL_TransformKey_Configuration
/// Size: 0x0048 (0x000000 - 0x000048)
class FFortItemCard_XL_TransformKey_Configuration : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 72;

public:
	SMember(FMargin)                                   BackgroundPadding                                           OFFSET(getStruct<T>, {0x0, 16, 0, 0})
	SMember(FFortItemCard_StackCountBlock_Configuration) StackCountBlock                                           OFFSET(getStruct<T>, {0x10, 40, 0, 0})
	SMember(FVector2D)                                 TransformKeyIconSize                                        OFFSET(getStruct<T>, {0x38, 16, 0, 0})
};

/// Struct /Script/FortniteUI.FortItemCard_L_PersonnelAndSchematics_Configuration
/// Size: 0x0490 (0x000000 - 0x000490)
class FFortItemCard_L_PersonnelAndSchematics_Configuration : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 1168;

public:
	SMember(FMargin)                                   BackgroundPadding                                           OFFSET(getStruct<T>, {0x0, 16, 0, 0})
	SMember(FFortItemCard_PowerRatingBlock_PersonnelAndSchematics_Configuration) PowerRatingBlock                  OFFSET(getStruct<T>, {0x10, 768, 0, 0})
	SMember(FVector2D)                                 BookmarkImageSize                                           OFFSET(getStruct<T>, {0x310, 16, 0, 0})
	SMember(FFortItemCard_NameplateBorder_Configuration) Nameplate                                                 OFFSET(getStruct<T>, {0x320, 208, 0, 0})
	SMember(FVector2D)                                 ClassIconSize                                               OFFSET(getStruct<T>, {0x3F0, 16, 0, 0})
	SMember(FVector2D)                                 LeadSurvivorTypeIconSize                                    OFFSET(getStruct<T>, {0x400, 16, 0, 0})
	SMember(FVector2D)                                 FirstIconSlotSize                                           OFFSET(getStruct<T>, {0x410, 16, 0, 0})
	DMember(float)                                     PaddingBetweenIconSlots                                     OFFSET(get<float>, {0x420, 4, 0, 0})
	SMember(FVector2D)                                 SecondIconSlotSize                                          OFFSET(getStruct<T>, {0x428, 16, 0, 0})
	SMember(FFortItemCard_DefenderWeaponTypeIcon_Configuration) DefenderWeaponTypeIcon                             OFFSET(getStruct<T>, {0x438, 16, 0, 0})
	SMember(FFortItemCard_DetailAreaBorder_Configuration) DetailAreaBorder                                         OFFSET(getStruct<T>, {0x448, 20, 0, 0})
	SMember(FFortItemCard_LevelMeter_Configuration)    LevelMeter                                                  OFFSET(getStruct<T>, {0x45C, 20, 0, 0})
	DMember(float)                                     TierMeterLeftPadding                                        OFFSET(get<float>, {0x470, 4, 0, 0})
	SMember(FFortItemCard_TierMeter_Configuration)     TierMeter                                                   OFFSET(getStruct<T>, {0x478, 24, 0, 0})
};

/// Struct /Script/FortniteUI.FortItemCard_L_ItemInstance_Configuration
/// Size: 0x02F0 (0x000000 - 0x0002F0)
class FFortItemCard_L_ItemInstance_Configuration : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 752;

public:
	SMember(FMargin)                                   BackgroundPadding                                           OFFSET(getStruct<T>, {0x0, 16, 0, 0})
	SMember(FMargin)                                   PowerRatingBlockPadding                                     OFFSET(getStruct<T>, {0x10, 16, 0, 0})
	SMember(FFortItemCard_PowerRatingBlock_ItemInstance_Configuration) PowerRatingBlock                            OFFSET(getStruct<T>, {0x20, 544, 0, 0})
	SMember(FVector2D)                                 BookmarkImageSize                                           OFFSET(getStruct<T>, {0x240, 16, 0, 0})
	SMember(FFortItemCard_StackCountBlock_Configuration) StackCountBlock                                           OFFSET(getStruct<T>, {0x250, 40, 0, 0})
	SMember(FMargin)                                   TraitBoxPadding                                             OFFSET(getStruct<T>, {0x278, 16, 0, 0})
	SMember(FVector2D)                                 FirstTraitSize                                              OFFSET(getStruct<T>, {0x288, 16, 0, 0})
	DMember(float)                                     PaddingBetweenTraitIcons                                    OFFSET(get<float>, {0x298, 4, 0, 0})
	SMember(FVector2D)                                 SecondTraitSize                                             OFFSET(getStruct<T>, {0x2A0, 16, 0, 0})
	SMember(FMargin)                                   TierMeterPadding                                            OFFSET(getStruct<T>, {0x2B0, 16, 0, 0})
	SMember(FFortItemCard_TierMeter_Configuration)     TierMeter                                                   OFFSET(getStruct<T>, {0x2C0, 24, 0, 0})
	SMember(FFortItemCard_DurabilityMeter_Configuration) DurabilityMeter                                           OFFSET(getStruct<T>, {0x2D8, 20, 0, 0})
};

/// Struct /Script/FortniteUI.FortItemCard_L_TransformKey_Configuration
/// Size: 0x0048 (0x000000 - 0x000048)
class FFortItemCard_L_TransformKey_Configuration : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 72;

public:
	SMember(FMargin)                                   BackgroundPadding                                           OFFSET(getStruct<T>, {0x0, 16, 0, 0})
	SMember(FFortItemCard_StackCountBlock_Configuration) StackCountBlock                                           OFFSET(getStruct<T>, {0x10, 40, 0, 0})
	SMember(FVector2D)                                 TransformKeyIconSize                                        OFFSET(getStruct<T>, {0x38, 16, 0, 0})
};

/// Struct /Script/FortniteUI.FortItemCard_M_PersonnelAndSchematics_Configuration
/// Size: 0x0490 (0x000000 - 0x000490)
class FFortItemCard_M_PersonnelAndSchematics_Configuration : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 1168;

public:
	SMember(FMargin)                                   BackgroundPadding                                           OFFSET(getStruct<T>, {0x0, 16, 0, 0})
	SMember(FFortItemCard_PowerRatingBlock_PersonnelAndSchematics_Configuration) PowerRatingBlock                  OFFSET(getStruct<T>, {0x10, 768, 0, 0})
	SMember(FVector2D)                                 BookmarkImageSize                                           OFFSET(getStruct<T>, {0x310, 16, 0, 0})
	SMember(FFortItemCard_NameplateBorder_Configuration) Nameplate                                                 OFFSET(getStruct<T>, {0x320, 208, 0, 0})
	SMember(FVector2D)                                 ClassIconSize                                               OFFSET(getStruct<T>, {0x3F0, 16, 0, 0})
	SMember(FVector2D)                                 LeadSurvivorTypeIconSize                                    OFFSET(getStruct<T>, {0x400, 16, 0, 0})
	SMember(FVector2D)                                 FirstIconSlotSize                                           OFFSET(getStruct<T>, {0x410, 16, 0, 0})
	DMember(float)                                     PaddingBetweenIconSlots                                     OFFSET(get<float>, {0x420, 4, 0, 0})
	SMember(FVector2D)                                 SecondIconSlotSize                                          OFFSET(getStruct<T>, {0x428, 16, 0, 0})
	SMember(FFortItemCard_DefenderWeaponTypeIcon_Configuration) DefenderWeaponTypeIcon                             OFFSET(getStruct<T>, {0x438, 16, 0, 0})
	SMember(FFortItemCard_DetailAreaBorder_Configuration) DetailAreaBorder                                         OFFSET(getStruct<T>, {0x448, 20, 0, 0})
	SMember(FFortItemCard_LevelMeter_Configuration)    LevelMeter                                                  OFFSET(getStruct<T>, {0x45C, 20, 0, 0})
	DMember(float)                                     TierMeterLeftPadding                                        OFFSET(get<float>, {0x470, 4, 0, 0})
	SMember(FFortItemCard_TierMeter_Configuration)     TierMeter                                                   OFFSET(getStruct<T>, {0x478, 24, 0, 0})
};

/// Struct /Script/FortniteUI.FortItemCard_M_ItemInstance_Configuration
/// Size: 0x02F0 (0x000000 - 0x0002F0)
class FFortItemCard_M_ItemInstance_Configuration : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 752;

public:
	SMember(FMargin)                                   BackgroundPadding                                           OFFSET(getStruct<T>, {0x0, 16, 0, 0})
	SMember(FMargin)                                   PowerRatingBlockPadding                                     OFFSET(getStruct<T>, {0x10, 16, 0, 0})
	SMember(FFortItemCard_PowerRatingBlock_ItemInstance_Configuration) PowerRatingBlock                            OFFSET(getStruct<T>, {0x20, 544, 0, 0})
	SMember(FVector2D)                                 BookmarkImageSize                                           OFFSET(getStruct<T>, {0x240, 16, 0, 0})
	SMember(FFortItemCard_StackCountBlock_Configuration) StackCountBlock                                           OFFSET(getStruct<T>, {0x250, 40, 0, 0})
	SMember(FMargin)                                   TraitBoxPadding                                             OFFSET(getStruct<T>, {0x278, 16, 0, 0})
	SMember(FVector2D)                                 FirstTraitSize                                              OFFSET(getStruct<T>, {0x288, 16, 0, 0})
	DMember(float)                                     PaddingBetweenTraitIcons                                    OFFSET(get<float>, {0x298, 4, 0, 0})
	SMember(FVector2D)                                 SecondTraitSize                                             OFFSET(getStruct<T>, {0x2A0, 16, 0, 0})
	SMember(FMargin)                                   TierMeterPadding                                            OFFSET(getStruct<T>, {0x2B0, 16, 0, 0})
	SMember(FFortItemCard_TierMeter_Configuration)     TierMeter                                                   OFFSET(getStruct<T>, {0x2C0, 24, 0, 0})
	SMember(FFortItemCard_DurabilityMeter_Configuration) DurabilityMeter                                           OFFSET(getStruct<T>, {0x2D8, 20, 0, 0})
};

/// Struct /Script/FortniteUI.FortItemCard_M_TransformKey_Configuration
/// Size: 0x0048 (0x000000 - 0x000048)
class FFortItemCard_M_TransformKey_Configuration : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 72;

public:
	SMember(FMargin)                                   BackgroundPadding                                           OFFSET(getStruct<T>, {0x0, 16, 0, 0})
	SMember(FFortItemCard_StackCountBlock_Configuration) StackCountBlock                                           OFFSET(getStruct<T>, {0x10, 40, 0, 0})
	SMember(FVector2D)                                 TransformKeyIconSize                                        OFFSET(getStruct<T>, {0x38, 16, 0, 0})
};

/// Struct /Script/FortniteUI.FortItemCard_S_PersonnelAndSchematics_Configuration
/// Size: 0x0490 (0x000000 - 0x000490)
class FFortItemCard_S_PersonnelAndSchematics_Configuration : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 1168;

public:
	SMember(FMargin)                                   BackgroundPadding                                           OFFSET(getStruct<T>, {0x0, 16, 0, 0})
	SMember(FFortItemCard_PowerRatingBlock_PersonnelAndSchematics_Configuration) PowerRatingBlock                  OFFSET(getStruct<T>, {0x10, 768, 0, 0})
	SMember(FVector2D)                                 BookmarkImageSize                                           OFFSET(getStruct<T>, {0x310, 16, 0, 0})
	SMember(FFortItemCard_NameplateBorder_Configuration) Nameplate                                                 OFFSET(getStruct<T>, {0x320, 208, 0, 0})
	SMember(FVector2D)                                 ClassIconSize                                               OFFSET(getStruct<T>, {0x3F0, 16, 0, 0})
	SMember(FVector2D)                                 LeadSurvivorTypeIconSize                                    OFFSET(getStruct<T>, {0x400, 16, 0, 0})
	SMember(FVector2D)                                 FirstIconSlotSize                                           OFFSET(getStruct<T>, {0x410, 16, 0, 0})
	DMember(float)                                     PaddingBetweenIconSlots                                     OFFSET(get<float>, {0x420, 4, 0, 0})
	SMember(FVector2D)                                 SecondIconSlotSize                                          OFFSET(getStruct<T>, {0x428, 16, 0, 0})
	SMember(FFortItemCard_DefenderWeaponTypeIcon_Configuration) DefenderWeaponTypeIcon                             OFFSET(getStruct<T>, {0x438, 16, 0, 0})
	SMember(FFortItemCard_DetailAreaBorder_Configuration) DetailAreaBorder                                         OFFSET(getStruct<T>, {0x448, 20, 0, 0})
	SMember(FFortItemCard_LevelMeter_Configuration)    LevelMeter                                                  OFFSET(getStruct<T>, {0x45C, 20, 0, 0})
	DMember(float)                                     TierMeterLeftPadding                                        OFFSET(get<float>, {0x470, 4, 0, 0})
	SMember(FFortItemCard_TierMeter_Configuration)     TierMeter                                                   OFFSET(getStruct<T>, {0x478, 24, 0, 0})
};

/// Struct /Script/FortniteUI.FortItemCard_S_ItemInstance_Configuration
/// Size: 0x02E0 (0x000000 - 0x0002E0)
class FFortItemCard_S_ItemInstance_Configuration : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 736;

public:
	SMember(FMargin)                                   BackgroundPadding                                           OFFSET(getStruct<T>, {0x0, 16, 0, 0})
	SMember(FMargin)                                   PowerRatingBlockPadding                                     OFFSET(getStruct<T>, {0x10, 16, 0, 0})
	SMember(FFortItemCard_PowerRatingBlock_ItemInstance_Configuration) PowerRatingBlock                            OFFSET(getStruct<T>, {0x20, 544, 0, 0})
	SMember(FVector2D)                                 BookmarkImageSize                                           OFFSET(getStruct<T>, {0x240, 16, 0, 0})
	SMember(FFortItemCard_StackCountBlock_Configuration) StackCountBlock                                           OFFSET(getStruct<T>, {0x250, 40, 0, 0})
	SMember(FMargin)                                   TraitBoxPadding                                             OFFSET(getStruct<T>, {0x278, 16, 0, 0})
	SMember(FVector2D)                                 FirstTraitSize                                              OFFSET(getStruct<T>, {0x288, 16, 0, 0})
	SMember(FMargin)                                   TierMeterPadding                                            OFFSET(getStruct<T>, {0x298, 16, 0, 0})
	SMember(FFortItemCard_TierMeter_Configuration)     TierMeter                                                   OFFSET(getStruct<T>, {0x2A8, 24, 0, 0})
	SMember(FFortItemCard_DurabilityMeter_Configuration) DurabilityMeter                                           OFFSET(getStruct<T>, {0x2C0, 20, 0, 0})
};

/// Struct /Script/FortniteUI.FortItemCard_S_TransformKey_Configuration
/// Size: 0x0048 (0x000000 - 0x000048)
class FFortItemCard_S_TransformKey_Configuration : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 72;

public:
	SMember(FMargin)                                   BackgroundPadding                                           OFFSET(getStruct<T>, {0x0, 16, 0, 0})
	SMember(FFortItemCard_StackCountBlock_Configuration) StackCountBlock                                           OFFSET(getStruct<T>, {0x10, 40, 0, 0})
	SMember(FVector2D)                                 TransformKeyIconSize                                        OFFSET(getStruct<T>, {0x38, 16, 0, 0})
};

/// Struct /Script/FortniteUI.FortItemCard_XS_PersonnelAndSchematics_Configuration
/// Size: 0x0048 (0x000000 - 0x000048)
class FFortItemCard_XS_PersonnelAndSchematics_Configuration : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 72;

public:
	SMember(FMargin)                                   BackgroundPadding                                           OFFSET(getStruct<T>, {0x0, 16, 0, 0})
	SMember(FVector2D)                                 BookmarkImageSize                                           OFFSET(getStruct<T>, {0x10, 16, 0, 0})
	SMember(FFortItemCard_DetailAreaBorder_Configuration) DetailAreaBorder                                         OFFSET(getStruct<T>, {0x20, 20, 0, 0})
	SMember(FVector2D)                                 AvailableUpgradeIconSize                                    OFFSET(getStruct<T>, {0x38, 16, 0, 0})
};

/// Struct /Script/FortniteUI.FortItemCard_XS_ItemInstance_Configuration
/// Size: 0x02B0 (0x000000 - 0x0002B0)
class FFortItemCard_XS_ItemInstance_Configuration : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 688;

public:
	SMember(FMargin)                                   BackgroundPadding                                           OFFSET(getStruct<T>, {0x0, 16, 0, 0})
	SMember(FMargin)                                   PowerRatingBlockPadding                                     OFFSET(getStruct<T>, {0x10, 16, 0, 0})
	SMember(FFortItemCard_PowerRatingBlock_ItemInstance_Configuration) PowerRatingBlock                            OFFSET(getStruct<T>, {0x20, 544, 0, 0})
	SMember(FVector2D)                                 BookmarkImageSize                                           OFFSET(getStruct<T>, {0x240, 16, 0, 0})
	SMember(FMargin)                                   TraitBoxPadding                                             OFFSET(getStruct<T>, {0x250, 16, 0, 0})
	SMember(FVector2D)                                 FirstTraitSize                                              OFFSET(getStruct<T>, {0x260, 16, 0, 0})
	SMember(FFortItemCard_StackCountBlock_Configuration) StackCountBlock                                           OFFSET(getStruct<T>, {0x270, 40, 0, 0})
	SMember(FFortItemCard_DurabilityMeter_Configuration) DurabilityMeter                                           OFFSET(getStruct<T>, {0x298, 20, 0, 0})
};

/// Struct /Script/FortniteUI.FortItemCard_XS_TransformKey_Configuration
/// Size: 0x0048 (0x000000 - 0x000048)
class FFortItemCard_XS_TransformKey_Configuration : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 72;

public:
	SMember(FMargin)                                   BackgroundPadding                                           OFFSET(getStruct<T>, {0x0, 16, 0, 0})
	SMember(FFortItemCard_StackCountBlock_Configuration) StackCountBlock                                           OFFSET(getStruct<T>, {0x10, 40, 0, 0})
	SMember(FVector2D)                                 TransformKeyIconSize                                        OFFSET(getStruct<T>, {0x38, 16, 0, 0})
};

/// Struct /Script/FortniteUI.FortItemCard_XXS_ItemInstance_Configuration
/// Size: 0x0028 (0x000000 - 0x000028)
class FFortItemCard_XXS_ItemInstance_Configuration : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 40;

public:
	SMember(FFortItemCard_StackCountBlock_Configuration) StackCountBlock                                           OFFSET(getStruct<T>, {0x0, 40, 0, 0})
};

/// Struct /Script/FortniteUI.FortItemManagementInventoryFilterTabLabelInfo
/// Size: 0x0000 (0x0000F0 - 0x0000F0)
class FFortItemManagementInventoryFilterTabLabelInfo : public FFortTabButtonLabelInfo
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 240;

public:
};

/// Struct /Script/FortniteUI.QuickbarEquipSlotIndicesConfig
/// Size: 0x0010 (0x000000 - 0x000010)
class FQuickbarEquipSlotIndicesConfig : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 16;

public:
	CMember(TArray<int32_t>)                           EquipSlotIndices                                            OFFSET(get<T>, {0x0, 16, 0, 0})
};

/// Struct /Script/FortniteUI.GameSelectionButtonInfo
/// Size: 0x0030 (0x000000 - 0x000030)
class FGameSelectionButtonInfo : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 48;

public:
	SMember(FText)                                     PrimaryText                                                 OFFSET(getStruct<T>, {0x0, 24, 0, 0})
	SMember(FText)                                     SecondaryText                                               OFFSET(getStruct<T>, {0x18, 24, 0, 0})
};

/// Struct /Script/FortniteUI.QueriedResultIconAssignment
/// Size: 0x0018 (0x000000 - 0x000018)
class FQueriedResultIconAssignment : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 24;

public:
	CMember(UPaperSprite*)                             SpriteToUse                                                 OFFSET(get<T>, {0x0, 8, 0, 0})
	CMember(TArray<UFortMobileButtonBehaviorComponent_IconPicker*>) QueriedIconComponents                          OFFSET(get<T>, {0x8, 16, 0, 0})
};

/// Struct /Script/FortniteUI.QueriedResultVisibilityAssignment
/// Size: 0x0018 (0x000000 - 0x000018)
class FQueriedResultVisibilityAssignment : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 24;

public:
	CMember(ESlateVisibility)                          VisibilityToAssign                                          OFFSET(get<T>, {0x0, 1, 0, 0})
	CMember(TArray<UFortMobileButtonBehaviorComponent_Visibility*>) QueriedVisibilityComponents                    OFFSET(get<T>, {0x8, 16, 0, 0})
};

/// Struct /Script/FortniteUI.TagFilterOverride
/// Size: 0x0048 (0x000000 - 0x000048)
class FTagFilterOverride : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 72;

public:
	SMember(FGameplayTagContainer)                     OverridingTags                                              OFFSET(getStruct<T>, {0x0, 32, 0, 0})
	CMember(ETagComparisonType)                        ComparisonTypeToOverride                                    OFFSET(get<T>, {0x20, 1, 0, 0})
	SMember(FGameplayTagContainer)                     TagsToFilterOut                                             OFFSET(getStruct<T>, {0x28, 32, 0, 0})
};

/// Struct /Script/FortniteUI.TagVisibility
/// Size: 0x0028 (0x000000 - 0x000028)
class FTagVisibility : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 40;

public:
	SMember(FGameplayTagContainer)                     Tags                                                        OFFSET(getStruct<T>, {0x0, 32, 0, 0})
	CMember(ETagComparisonType)                        ComparisonType                                              OFFSET(get<T>, {0x20, 1, 0, 0})
	CMember(ESlateVisibility)                          Visibility                                                  OFFSET(get<T>, {0x21, 1, 0, 0})
};

/// Struct /Script/FortniteUI.IconPicker
/// Size: 0x0030 (0x000000 - 0x000030)
class FIconPicker : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 48;

public:
	SMember(FGameplayTagContainer)                     Tags                                                        OFFSET(getStruct<T>, {0x0, 32, 0, 0})
	CMember(ETagComparisonType)                        ComparisonType                                              OFFSET(get<T>, {0x20, 1, 0, 0})
	CMember(UPaperSprite*)                             Sprite                                                      OFFSET(get<T>, {0x28, 8, 0, 0})
};

/// Struct /Script/FortniteUI.TagColor
/// Size: 0x0028 (0x000000 - 0x000028)
class FTagColor : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 40;

public:
	SMember(FGameplayTagContainer)                     Tags                                                        OFFSET(getStruct<T>, {0x0, 32, 0, 0})
	CMember(ETagComparisonType)                        ComparisonType                                              OFFSET(get<T>, {0x20, 1, 0, 0})
	SMember(FColor)                                    Color                                                       OFFSET(getStruct<T>, {0x24, 4, 0, 0})
};

/// Struct /Script/FortniteUI.FortModalContainerSizeEntry
/// Size: 0x001C (0x000000 - 0x00001C)
class FFortModalContainerSizeEntry : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 28;

public:
	DMember(float)                                     AbsoluteWidth                                               OFFSET(get<float>, {0x0, 4, 0, 0})
	DMember(float)                                     TopPercent                                                  OFFSET(get<float>, {0x4, 4, 0, 0})
	DMember(float)                                     MiddlePercent                                               OFFSET(get<float>, {0x8, 4, 0, 0})
	DMember(float)                                     BottomPercent                                               OFFSET(get<float>, {0xC, 4, 0, 0})
	DMember(float)                                     VerticalPadding                                             OFFSET(get<float>, {0x10, 4, 0, 0})
	DMember(float)                                     HorizontalPadding                                           OFFSET(get<float>, {0x14, 4, 0, 0})
	DMember(float)                                     ContentPadding                                              OFFSET(get<float>, {0x18, 4, 0, 0})
};

/// Struct /Script/FortniteUI.FortUIPerkTier
/// Size: 0x0018 (0x000000 - 0x000018)
class FFortUIPerkTier : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 24;

public:
	CMember(UFortHeroSpecialization*)                  HeroSpecialization                                          OFFSET(get<T>, {0x0, 8, 0, 0})
	CMember(UFortHero*)                                CurrentHero                                                 OFFSET(get<T>, {0x8, 8, 0, 0})
	CMember(EFortItemTier)                             Tier                                                        OFFSET(get<T>, {0x10, 1, 0, 0})
	DMember(bool)                                      bIsUpgrade                                                  OFFSET(get<bool>, {0x11, 1, 0, 0})
	DMember(bool)                                      bIsEvolution                                                OFFSET(get<bool>, {0x12, 1, 0, 0})
};

/// Struct /Script/FortniteUI.FortUIPerk
/// Size: 0x0088 (0x000000 - 0x000088)
class FFortUIPerk : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 136;

public:
	SMember(FFortSpecializationSlot)                   SpecializationSlot                                          OFFSET(getStruct<T>, {0x0, 120, 0, 0})
	CMember(UFortHero*)                                Hero                                                        OFFSET(get<T>, {0x78, 8, 0, 0})
	CMember(EFortItemTier)                             Tier                                                        OFFSET(get<T>, {0x80, 1, 0, 0})
	CMember(EFortSupportBonusType)                     SupportBonusType                                            OFFSET(get<T>, {0x81, 1, 0, 0})
	DMember(bool)                                      bIsTierPerk                                                 OFFSET(get<bool>, {0x82, 1, 0, 0})
	DMember(bool)                                      bIsUpgrade                                                  OFFSET(get<bool>, {0x83, 1, 0, 0})
	DMember(bool)                                      bIsEvolution                                                OFFSET(get<bool>, {0x84, 1, 0, 0})
	DMember(bool)                                      bIsEvolutionBranch                                          OFFSET(get<bool>, {0x85, 1, 0, 0})
};

/// Struct /Script/FortniteUI.FortPlayerSurveyCMSCustomTextReplacement
/// Size: 0x0020 (0x000000 - 0x000020)
class FFortPlayerSurveyCMSCustomTextReplacement : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 32;

public:
	SMember(FString)                                   TextReplacementTag                                          OFFSET(getStruct<T>, {0x0, 16, 0, 0})
	CMember(TArray<FFortPlayerSurveyLocalizableText>)  TextReplacementValues                                       OFFSET(get<T>, {0x10, 16, 0, 0})
};

/// Struct /Script/FortniteUI.FortPlayerSurveyLocalizableText
/// Size: 0x0020 (0x000000 - 0x000020)
class FFortPlayerSurveyLocalizableText : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 32;

public:
	SMember(FString)                                   TextID                                                      OFFSET(getStruct<T>, {0x0, 16, 0, 0})
	SMember(FString)                                   LocalizedText                                               OFFSET(getStruct<T>, {0x10, 16, 0, 0})
};

/// Struct /Script/FortniteUI.FortPlayerSurveyCMSQuestion
/// Size: 0x0050 (0x000000 - 0x000050)
class FFortPlayerSurveyCMSQuestion : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 80;

public:
	SMember(FFortPlayerSurveyLocalizableText)          QuestionText                                                OFFSET(getStruct<T>, {0x0, 32, 0, 0})
	SMember(FString)                                   Type                                                        OFFSET(getStruct<T>, {0x20, 16, 0, 0})
	DMember(uint32_t)                                  NumberOfOptions                                             OFFSET(get<uint32_t>, {0x30, 4, 0, 0})
	CMember(TArray<FFortPlayerSurveyLocalizableText>)  Responses                                                   OFFSET(get<T>, {0x38, 16, 0, 0})
	DMember(bool)                                      bRandomizeResponseOrder                                     OFFSET(get<bool>, {0x48, 1, 0, 0})
};

/// Struct /Script/FortniteUI.FortPlayerSurveyCMSFrequentlyAskedQuestion
/// Size: 0x0060 (0x000000 - 0x000060)
class FFortPlayerSurveyCMSFrequentlyAskedQuestion : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 96;

public:
	SMember(FString)                                   FrequentlyAskedQuestionID                                   OFFSET(getStruct<T>, {0x0, 16, 0, 0})
	SMember(FFortPlayerSurveyCMSQuestion)              Question                                                    OFFSET(getStruct<T>, {0x10, 80, 0, 0})
};

/// Struct /Script/FortniteUI.FortPlayerSurveyCMSFrequentlyAskedQuestionID
/// Size: 0x0010 (0x000000 - 0x000010)
class FFortPlayerSurveyCMSFrequentlyAskedQuestionID : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 16;

public:
	SMember(FString)                                   ID                                                          OFFSET(getStruct<T>, {0x0, 16, 0, 0})
};

/// Struct /Script/FortniteUI.FortPlayerSurveyCMSQuestionContainer
/// Size: 0x0060 (0x000000 - 0x000060)
class FFortPlayerSurveyCMSQuestionContainer : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 96;

public:
	SMember(FFortPlayerSurveyCMSFrequentlyAskedQuestionID) FrequentlyAskedQuestionID                               OFFSET(getStruct<T>, {0x0, 16, 0, 0})
	SMember(FFortPlayerSurveyCMSQuestion)              Question                                                    OFFSET(getStruct<T>, {0x10, 80, 0, 0})
};

/// Struct /Script/FortniteUI.FortPlayerSurveyCMSCondition
/// Size: 0x0050 (0x000000 - 0x000050)
class FFortPlayerSurveyCMSCondition : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 80;

public:
	SMember(FString)                                   Type                                                        OFFSET(getStruct<T>, {0x0, 16, 0, 0})
	SMember(FString)                                   Operation                                                   OFFSET(getStruct<T>, {0x10, 16, 0, 0})
	SMember(FString)                                   ComparisonValue                                             OFFSET(getStruct<T>, {0x20, 16, 0, 0})
	CMember(TArray<FString>)                           ConditionInfo                                               OFFSET(get<T>, {0x30, 16, 0, 0})
	CMember(TArray<FJsonObjectWrapper>)                ChildConditions                                             OFFSET(get<T>, {0x40, 16, 0, 0})
};

/// Struct /Script/FortniteUI.FortPlayerSurveyCMSConditionGroup
/// Size: 0x0020 (0x000000 - 0x000020)
class FFortPlayerSurveyCMSConditionGroup : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 32;

public:
	SMember(FString)                                   ConditionGroupID                                            OFFSET(getStruct<T>, {0x0, 16, 0, 0})
	CMember(TArray<FFortPlayerSurveyCMSCondition>)     Conditions                                                  OFFSET(get<T>, {0x10, 16, 0, 0})
};

/// Struct /Script/FortniteUI.FortPlayerSurveyCMSSurvey
/// Size: 0x0078 (0x000000 - 0x000078)
class FFortPlayerSurveyCMSSurvey : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 120;

public:
	SMember(FString)                                   SurveyID                                                    OFFSET(getStruct<T>, {0x0, 16, 0, 0})
	CMember(TArray<FString>)                           SurveyTags                                                  OFFSET(get<T>, {0x10, 16, 0, 0})
	SMember(FString)                                   Title                                                       OFFSET(getStruct<T>, {0x20, 16, 0, 0})
	CMember(TArray<FString>)                           ConditionGroupIDs                                           OFFSET(get<T>, {0x30, 16, 0, 0})
	CMember(TArray<FFortPlayerSurveyCMSCondition>)     Conditions                                                  OFFSET(get<T>, {0x40, 16, 0, 0})
	CMember(TArray<FFortPlayerSurveyCMSQuestionContainer>) Questions                                               OFFSET(get<T>, {0x50, 16, 0, 0})
	CMember(TArray<FFortPlayerSurveyCMSCustomTextReplacement>) TextReplacementOverrides                            OFFSET(get<T>, {0x60, 16, 0, 0})
	DMember(bool)                                      bRandomizeQuestionOrder                                     OFFSET(get<bool>, {0x70, 1, 0, 0})
};

/// Struct /Script/FortniteUI.FortPlayerSurveyCMSData
/// Size: 0x0058 (0x000000 - 0x000058)
class FFortPlayerSurveyCMSData : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 88;

public:
	CMember(TArray<FFortPlayerSurveyCMSConditionGroup>) ConditionGroups                                            OFFSET(get<T>, {0x0, 16, 0, 0})
	CMember(TArray<FFortPlayerSurveyCMSFrequentlyAskedQuestion>) FrequentlyAskedQuestions                          OFFSET(get<T>, {0x10, 16, 0, 0})
	CMember(TArray<FFortPlayerSurveyCMSCustomTextReplacement>) CustomTextReplacements                              OFFSET(get<T>, {0x20, 16, 0, 0})
	CMember(TArray<FFortPlayerSurveyCMSCustomTextReplacement>) WhitelistedTextReplacements                         OFFSET(get<T>, {0x30, 16, 0, 0})
	CMember(TArray<FFortPlayerSurveyCMSSurvey>)        Surveys                                                     OFFSET(get<T>, {0x40, 16, 0, 0})
	DMember(bool)                                      bSurveysEnabled                                             OFFSET(get<bool>, {0x50, 1, 0, 0})
};

/// Struct /Script/FortniteUI.FortRichTextDecoratorExtension
/// Size: 0x0030 (0x000000 - 0x000030)
class FFortRichTextDecoratorExtension : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 48;

public:
	CMember(TWeakObjectPtr<UClass*>)                   TargetClass                                                 OFFSET(get<T>, {0x0, 32, 0, 0})
	CMember(TArray<UClass*>)                           Decorators                                                  OFFSET(get<T>, {0x20, 16, 0, 0})
};

/// Struct /Script/FortniteUI.SqueegeeStyleParams
/// Size: 0x0030 (0x000000 - 0x000030)
class FSqueegeeStyleParams : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 48;

public:
	SMember(FVector2D)                                 IconSize                                                    OFFSET(getStruct<T>, {0x0, 16, 0, 0})
	SMember(FVector2D)                                 IconSkewSize                                                OFFSET(getStruct<T>, {0x10, 16, 0, 0})
	DMember(int32_t)                                   FontSize                                                    OFFSET(get<int32_t>, {0x20, 4, 0, 0})
	DMember(float)                                     PaddingSize                                                 OFFSET(get<float>, {0x24, 4, 0, 0})
	DMember(bool)                                      bShowDetails                                                OFFSET(get<bool>, {0x28, 1, 0, 0})
};

/// Struct /Script/FortniteUI.SqueegeeData
/// Size: 0x0018 (0x000000 - 0x000018)
class FSqueegeeData : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 24;

public:
	CMember(ESqueegeeDataTypes)                        DataType                                                    OFFSET(get<T>, {0x0, 1, 0, 0})
};

/// Struct /Script/FortniteUI.FortUIPickerTrapSortScores
/// Size: 0x0014 (0x000000 - 0x000014)
class FFortUIPickerTrapSortScores : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 20;

public:
	DMember(float)                                     UniqueTrapBonus                                             OFFSET(get<float>, {0x0, 4, 0, 0})
	DMember(float)                                     SlottedBonus                                                OFFSET(get<float>, {0x4, 4, 0, 0})
	DMember(float)                                     FavoriteBonus                                               OFFSET(get<float>, {0x8, 4, 0, 0})
	DMember(float)                                     MaxTrackedTrapBonusTime                                     OFFSET(get<float>, {0xC, 4, 0, 0})
	DMember(float)                                     TrackedTrapBonusMultiplier                                  OFFSET(get<float>, {0x10, 4, 0, 0})
};

/// Struct /Script/FortniteUI.FortUIPickerTrapSortModifier
/// Size: 0x0050 (0x000008 - 0x000058)
class FFortUIPickerTrapSortModifier : public FTableRowBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 88;

public:
	SMember(FGameplayTagQuery)                         ItemTagQuery                                                OFFSET(getStruct<T>, {0x8, 72, 0, 0})
	DMember(float)                                     ScoreBonus                                                  OFFSET(get<float>, {0x50, 4, 0, 0})
};

/// Struct /Script/FortniteUI.ExternalDynamicTabParams
/// Size: 0x0170 (0x000000 - 0x000170)
class FExternalDynamicTabParams : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 368;

public:
	CMember(TWeakObjectPtr<UClass*>)                   TabScreenClass                                              OFFSET(get<T>, {0x0, 32, 0, 0})
	SMember(FFortTopBarTabButtonInfo)                  TabButtonInfo                                               OFFSET(getStruct<T>, {0x20, 320, 0, 0})
	DMember(bool)                                      bIsMobileOverride                                           OFFSET(get<bool>, {0x160, 1, 0, 0})
};

/// Struct /Script/FortniteUI.FortTopBarTabButtonInfo
/// Size: 0x0140 (0x000000 - 0x000140)
class FFortTopBarTabButtonInfo : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 320;

public:
	SMember(FName)                                     TabID                                                       OFFSET(getStruct<T>, {0x0, 4, 0, 0})
	SMember(FString)                                   CalendarEventName                                           OFFSET(getStruct<T>, {0x8, 16, 0, 0})
	SMember(FText)                                     DisplayName                                                 OFFSET(getStruct<T>, {0x18, 24, 0, 0})
	SMember(FSlateBrush)                               IconBrush                                                   OFFSET(getStruct<T>, {0x30, 192, 0, 0})
	CMember(EFortUIFeature)                            LinkedUIFeature                                             OFFSET(get<T>, {0xF0, 1, 0, 0})
	CMember(EFortBangType)                             BangType                                                    OFFSET(get<T>, {0xF1, 1, 0, 0})
	DMember(int32_t)                                   SortOrder                                                   OFFSET(get<int32_t>, {0xF4, 4, 0, 0})
	DMember(bool)                                      bForceImage                                                 OFFSET(get<bool>, {0xF8, 1, 0, 0})
	DMember(bool)                                      bPrimaryPlayerOnly                                          OFFSET(get<bool>, {0xF9, 1, 0, 0})
	DMember(bool)                                      bInteractAnalytic                                           OFFSET(get<bool>, {0xFA, 1, 0, 0})
	CMember(TWeakObjectPtr<UClass*>)                   OverrideTabWidget                                           OFFSET(get<T>, {0x100, 32, 0, 0})
	CMember(TArray<TWeakObjectPtr>)                    PersistentTabObjects                                        OFFSET(get<T>, {0x120, 16, 0, 0})
	DMember(bool)                                      bIsDynamicTab                                               OFFSET(get<bool>, {0x130, 1, 0, 0})
	CMember(EFortTopBarTabButtonGroup)                 ButtonGroup                                                 OFFSET(get<T>, {0x131, 1, 0, 0})
};

/// Struct /Script/FortniteUI.FrontendDisabledTabs
/// Size: 0x0020 (0x000000 - 0x000020)
class FFrontendDisabledTabs : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 32;

public:
	CMember(TArray<FName>)                             DisabledTabNames                                            OFFSET(get<T>, {0x0, 16, 0, 0})
	CMember(TArray<FName>)                             HiddenTabNames                                              OFFSET(get<T>, {0x10, 16, 0, 0})
};

/// Struct /Script/FortniteUI.UIStateTag
/// Size: 0x0000 (0x000004 - 0x000004)
class FUIStateTag : public FUITag
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 4;

public:
};

/// Struct /Script/FortniteUI.UIStateTag_FortStartup
/// Size: 0x0000 (0x000004 - 0x000004)
class FUIStateTag_FortStartup : public FUIStateTag
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 4;

public:
};

/// Struct /Script/FortniteUI.UIStateTag_Athena
/// Size: 0x0000 (0x000004 - 0x000004)
class FUIStateTag_Athena : public FUIStateTag
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 4;

public:
};

/// Struct /Script/FortniteUI.UIStateTag_STW
/// Size: 0x0000 (0x000004 - 0x000004)
class FUIStateTag_STW : public FUIStateTag
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 4;

public:
};

/// Struct /Script/FortniteUI.FortUIStyleWindowButtons
/// Size: 0x0EC0 (0x000000 - 0x000EC0)
class FFortUIStyleWindowButtons : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 3776;

public:
	SMember(FButtonStyle)                              Close                                                       OFFSET(getStruct<T>, {0x0, 944, 0, 0})
	SMember(FButtonStyle)                              Minimize                                                    OFFSET(getStruct<T>, {0x3B0, 944, 0, 0})
	SMember(FButtonStyle)                              Maximize                                                    OFFSET(getStruct<T>, {0x760, 944, 0, 0})
	SMember(FButtonStyle)                              Restore                                                     OFFSET(getStruct<T>, {0xB10, 944, 0, 0})
};

/// Struct /Script/FortniteUI.FortUIStyleDefinition
/// Size: 0x0EC0 (0x000000 - 0x000EC0)
class FFortUIStyleDefinition : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 3776;

public:
	SMember(FFortUIStyleWindowButtons)                 WindowButtons                                               OFFSET(getStruct<T>, {0x0, 3776, 0, 0})
};

/// Struct /Script/FortniteUI.FortUITutorialData
/// Size: 0x0050 (0x000008 - 0x000058)
class FFortUITutorialData : public FTableRowBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 88;

public:
	SMember(FName)                                     TutorialWidgetName                                          OFFSET(getStruct<T>, {0x8, 4, 0, 0})
	SMember(FText)                                     Title                                                       OFFSET(getStruct<T>, {0x10, 24, 0, 0})
	SMember(FString)                                   DevComment                                                  OFFSET(getStruct<T>, {0x28, 16, 0, 0})
	CMember(TArray<FText>)                             Descriptions                                                OFFSET(get<T>, {0x38, 16, 0, 0})
	CMember(TArray<TWeakObjectPtr>)                    PreviewImages                                               OFFSET(get<T>, {0x48, 16, 0, 0})
};

/// Struct /Script/FortniteUI.FortToastDisplayInfo
/// Size: 0x0058 (0x000000 - 0x000058)
class FFortToastDisplayInfo : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 88;

public:
	SMember(FText)                                     Header                                                      OFFSET(getStruct<T>, {0x0, 24, 0, 0})
	SMember(FText)                                     Body                                                        OFFSET(getStruct<T>, {0x18, 24, 0, 0})
	CMember(TWeakObjectPtr<UTexture2D*>)               Image                                                       OFFSET(get<T>, {0x30, 32, 0, 0})
	CMember(EFortToastType)                            Type                                                        OFFSET(get<T>, {0x50, 1, 0, 0})
};

/// Struct /Script/FortniteUI.FortErrorInfo
/// Size: 0x0070 (0x000000 - 0x000070)
class FFortErrorInfo : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 112;

public:
	SMember(FText)                                     Operation                                                   OFFSET(getStruct<T>, {0x0, 24, 0, 0})
	SMember(FText)                                     ErrorMessage                                                OFFSET(getStruct<T>, {0x18, 24, 0, 0})
	SMember(FString)                                   ErrorCode                                                   OFFSET(getStruct<T>, {0x30, 16, 0, 0})
	CMember(EFortErrorSeverity)                        ErrorSeverity                                               OFFSET(get<T>, {0x40, 1, 0, 0})
	SMember(FText)                                     ContinueButtonText                                          OFFSET(getStruct<T>, {0x48, 24, 0, 0})
};

/// Struct /Script/FortniteUI.FortDisplayModifier
/// Size: 0x0038 (0x000000 - 0x000038)
class FFortDisplayModifier : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 56;

public:
	SMember(FText)                                     Label                                                       OFFSET(getStruct<T>, {0x0, 24, 0, 0})
	SMember(FText)                                     Value                                                       OFFSET(getStruct<T>, {0x18, 24, 0, 0})
	CMember(EFortStatValueDisplayType)                 DisplayType                                                 OFFSET(get<T>, {0x30, 1, 0, 0})
	CMember(EFortBuffState)                            BuffState                                                   OFFSET(get<T>, {0x31, 1, 0, 0})
};

/// Struct /Script/FortniteUI.FortDisplayAttribute
/// Size: 0x0088 (0x000000 - 0x000088)
class FFortDisplayAttribute : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 136;

public:
	SMember(FGameplayAttribute)                        Attribute                                                   OFFSET(getStruct<T>, {0x0, 56, 0, 0})
	SMember(FText)                                     Label                                                       OFFSET(getStruct<T>, {0x38, 24, 0, 0})
	SMember(FText)                                     Value                                                       OFFSET(getStruct<T>, {0x50, 24, 0, 0})
	SMember(FText)                                     HoverText                                                   OFFSET(getStruct<T>, {0x68, 24, 0, 0})
	DMember(float)                                     NumericValue                                                OFFSET(get<float>, {0x80, 4, 0, 0})
	CMember(EFortStatValueDisplayType)                 DisplayType                                                 OFFSET(get<T>, {0x84, 1, 0, 0})
	CMember(EFortBuffState)                            BuffState                                                   OFFSET(get<T>, {0x85, 1, 0, 0})
	CMember(EFortClampState)                           ClampState                                                  OFFSET(get<T>, {0x86, 1, 0, 0})
	CMember(EFortComparisonType)                       ComparisonType                                              OFFSET(get<T>, {0x87, 1, 0, 0})
};

/// Struct /Script/FortniteUI.FortSquadIconData
/// Size: 0x0488 (0x000008 - 0x000490)
class FFortSquadIconData : public FTableRowBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 1168;

public:
	SMember(FFortMultiSizeBrush)                       Brush                                                       OFFSET(getStruct<T>, {0x10, 1152, 0, 0})
};

/// Struct /Script/FortniteUI.FortHealthyGamingData
/// Size: 0x0088 (0x000008 - 0x000090)
class FFortHealthyGamingData : public FTableRowBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 144;

public:
	DMember(float)                                     HealthWarningToastInterval                                  OFFSET(get<float>, {0x8, 4, 0, 0})
	SMember(FText)                                     HealthWarningToastDescriptionFormat                         OFFSET(getStruct<T>, {0x10, 24, 0, 0})
	SMember(FText)                                     HealthWarningScreenText                                     OFFSET(getStruct<T>, {0x28, 24, 0, 0})
	SMember(FText)                                     GameplayRestrictionText                                     OFFSET(getStruct<T>, {0x40, 24, 0, 0})
	DMember(float)                                     GameplayRestrictionWarningTimeOffset                        OFFSET(get<float>, {0x58, 4, 0, 0})
	SMember(FText)                                     AntiAddictionTotalDescriptionFormat                         OFFSET(getStruct<T>, {0x60, 24, 0, 0})
	DMember(bool)                                      bUsePlayerTimeLimitSystem                                   OFFSET(get<bool>, {0x78, 1, 0, 0})
	CMember(TArray<TWeakObjectPtr>)                    RatingIcons                                                 OFFSET(get<T>, {0x80, 16, 0, 0})
};

/// Struct /Script/FortniteUI.MatchmakingUIOverride
/// Size: 0x0060 (0x000000 - 0x000060)
class FMatchmakingUIOverride : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 96;

public:
	CMember(TWeakObjectPtr<UClass*>)                   SoftMatchmakingOptionsClass                                 OFFSET(get<T>, {0x0, 32, 0, 0})
	CMember(TWeakObjectPtr<UClass*>)                   SoftMatchmakingOptionsClassV2                               OFFSET(get<T>, {0x20, 32, 0, 0})
	CMember(TWeakObjectPtr<UClass*>)                   SoftLobbyMatchmakingWidgetClass                             OFFSET(get<T>, {0x40, 32, 0, 0})
};

/// Struct /Script/FortniteUI.MobileEnhancedInputData
/// Size: 0x0028 (0x000000 - 0x000028)
class FMobileEnhancedInputData : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 40;

public:
	CMember(UInputAction*)                             InputAction                                                 OFFSET(get<T>, {0x0, 8, 0, 0})
	CMember(TArray<UInputModifier*>)                   Modifiers                                                   OFFSET(get<T>, {0x8, 16, 0, 0})
	CMember(TArray<UInputTrigger*>)                    Triggers                                                    OFFSET(get<T>, {0x18, 16, 0, 0})
};

/// Struct /Script/FortniteUI.AthenaStyleMissionData
/// Size: 0x0028 (0x000000 - 0x000028)
class FAthenaStyleMissionData : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 40;

public:
	CMember(UFortVariantTokenType*)                    StyleDefinition                                             OFFSET(get<T>, {0x0, 8, 0, 0})
	CMember(TArray<UFortVariantTokenType*>)            OptionalAdditionalStyleDefinitions                          OFFSET(get<T>, {0x8, 16, 0, 0})
	CMember(UFortQuestItemDefinition*)                 Mission                                                     OFFSET(get<T>, {0x18, 8, 0, 0})
	CMember(UAnimationAsset*)                          OverrideIdleAnimation                                       OFFSET(get<T>, {0x20, 8, 0, 0})
};

/// Struct /Script/FortniteUI.AthenaSpatialStyleCharacterData
/// Size: 0x0030 (0x000000 - 0x000030)
class FAthenaSpatialStyleCharacterData : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 48;

public:
	CMember(UAthenaCharacterItemDefinition*)           Character                                                   OFFSET(get<T>, {0x0, 8, 0, 0})
	CMember(TArray<FAthenaStyleMissionData>)           Styles                                                      OFFSET(get<T>, {0x8, 16, 0, 0})
	CMember(TArray<ESpatialStyleCharacterUnlockPrerequisite>) CharacterPrerequisites                               OFFSET(get<T>, {0x18, 16, 0, 0})
	CMember(UAnimationAsset*)                          CharacterIdleAnimation                                      OFFSET(get<T>, {0x28, 8, 0, 0})
};

/// Struct /Script/FortniteUI.UIKitBlockTiming
/// Size: 0x002C (0x000000 - 0x00002C)
class FUIKitBlockTiming : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 44;

public:
	DMember(float)                                     Hovering                                                    OFFSET(get<float>, {0x0, 4, 0, 0})
	DMember(float)                                     Unhovering                                                  OFFSET(get<float>, {0x4, 4, 0, 0})
	DMember(float)                                     Focusing                                                    OFFSET(get<float>, {0x8, 4, 0, 0})
	DMember(float)                                     Unfocusing                                                  OFFSET(get<float>, {0xC, 4, 0, 0})
	DMember(float)                                     Pressing                                                    OFFSET(get<float>, {0x10, 4, 0, 0})
	DMember(float)                                     Releasing                                                   OFFSET(get<float>, {0x14, 4, 0, 0})
	DMember(float)                                     Disabling                                                   OFFSET(get<float>, {0x18, 4, 0, 0})
	DMember(float)                                     Enabling                                                    OFFSET(get<float>, {0x1C, 4, 0, 0})
	DMember(float)                                     Selecting                                                   OFFSET(get<float>, {0x20, 4, 0, 0})
	DMember(float)                                     DeselectingIdle                                             OFFSET(get<float>, {0x24, 4, 0, 0})
	DMember(float)                                     DeselectingFocused                                          OFFSET(get<float>, {0x28, 4, 0, 0})
};

/// Struct /Script/FortniteUI.VideoWidgetConfig
/// Size: 0x0098 (0x000000 - 0x000098)
class FVideoWidgetConfig : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 152;

public:
	CMember(UFortStreamMediaSource*)                   StreamingMediaSource                                        OFFSET(get<T>, {0x0, 8, 0, 0})
	SMember(FName)                                     VideoString                                                 OFFSET(getStruct<T>, {0x8, 4, 0, 0})
	SMember(FName)                                     VideoDisplayDataID                                          OFFSET(getStruct<T>, {0xC, 4, 0, 0})
	SMember(FName)                                     FallbackVideoID                                             OFFSET(getStruct<T>, {0x10, 4, 0, 0})
	DMember(bool)                                      bCheckAutoPlay                                              OFFSET(get<bool>, {0x14, 1, 0, 0})
	DMember(bool)                                      bForceAutoPlay                                              OFFSET(get<bool>, {0x15, 1, 0, 0})
	DMember(bool)                                      bStreamingEnabled                                           OFFSET(get<bool>, {0x16, 1, 0, 0})
	SMember(FString)                                   VideoUID                                                    OFFSET(getStruct<T>, {0x18, 16, 0, 0})
	DMember(bool)                                      bShouldBeModal                                              OFFSET(get<bool>, {0x28, 1, 0, 0})
	DMember(bool)                                      bUseSkipBoundaries                                          OFFSET(get<bool>, {0x29, 1, 0, 0})
	DMember(bool)                                      bHoldToSkip                                                 OFFSET(get<bool>, {0x2A, 1, 0, 0})
	DMember(bool)                                      bFadeFromColor                                              OFFSET(get<bool>, {0x2B, 1, 0, 0})
	DMember(bool)                                      bEndFadeFromColor                                           OFFSET(get<bool>, {0x2C, 1, 0, 0})
	DMember(bool)                                      bFadeUpToColor                                              OFFSET(get<bool>, {0x2D, 1, 0, 0})
	DMember(bool)                                      bAllowSkipping                                              OFFSET(get<bool>, {0x2E, 1, 0, 0})
	SMember(FString)                                   MimeType                                                    OFFSET(getStruct<T>, {0x30, 16, 0, 0})
	SMember(FString)                                   VideoURL                                                    OFFSET(getStruct<T>, {0x40, 16, 0, 0})
	DMember(bool)                                      bEnableLooping                                              OFFSET(get<bool>, {0x50, 1, 0, 0})
	DMember(bool)                                      bAutoClose                                                  OFFSET(get<bool>, {0x51, 1, 0, 0})
	DMember(bool)                                      bHideControls                                               OFFSET(get<bool>, {0x52, 1, 0, 0})
	DMember(bool)                                      bHideBackground                                             OFFSET(get<bool>, {0x53, 1, 0, 0})
	DMember(bool)                                      bHideBackgroundUntilVideoDetected                           OFFSET(get<bool>, {0x54, 1, 0, 0})
	DMember(bool)                                      bStartMTTransparent                                         OFFSET(get<bool>, {0x55, 1, 0, 0})
	CMember(USoundMix*)                                SoundMixOverride                                            OFFSET(get<T>, {0x58, 8, 0, 0})
	DMember(bool)                                      bOverrideSoundMix                                           OFFSET(get<bool>, {0x60, 1, 0, 0})
	CMember(USoundClass*)                              SoundClassOverride                                          OFFSET(get<T>, {0x68, 8, 0, 0})
	DMember(bool)                                      bControlWorldRendering                                      OFFSET(get<bool>, {0x70, 1, 0, 0})
	DMember(bool)                                      bControlShaderPipelineCacheBatching                         OFFSET(get<bool>, {0x71, 1, 0, 0})
	DMember(bool)                                      bDisablePiP                                                 OFFSET(get<bool>, {0x72, 1, 0, 0})
	DMember(float)                                     PartySyncStartTime                                          OFFSET(get<float>, {0x74, 4, 0, 0})
	DMember(bool)                                      bDisableCursor                                              OFFSET(get<bool>, {0x78, 1, 0, 0})
	DMember(bool)                                      bDisableStreamLimitsFromWidget                              OFFSET(get<bool>, {0x79, 1, 0, 0})
	DMember(bool)                                      bStartHidden                                                OFFSET(get<bool>, {0x7A, 1, 0, 0})
	DMember(bool)                                      bAudioOnlyHandlingFromMetadata                              OFFSET(get<bool>, {0x7B, 1, 0, 0})
	DMember(bool)                                      bTreatAudioOnlyAsColorFades                                 OFFSET(get<bool>, {0x7C, 1, 0, 0})
	DMember(bool)                                      bEnableDebugCommands                                        OFFSET(get<bool>, {0x7D, 1, 0, 0})
	SMember(FLinearColor)                              FadeColor                                                   OFFSET(getStruct<T>, {0x80, 16, 0, 0})
	DMember(bool)                                      bPrePostRollNoAudioMix                                      OFFSET(get<bool>, {0x90, 1, 0, 0})
};

/// Struct /Script/FortniteUI.AthenaCollectionScreenContainerTabInfo
/// Size: 0x0078 (0x000000 - 0x000078)
class FAthenaCollectionScreenContainerTabInfo : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 120;

public:
	SMember(FText)                                     TabTitle                                                    OFFSET(getStruct<T>, {0x0, 24, 0, 0})
	CMember(TWeakObjectPtr<UObject*>)                  TabIcon                                                     OFFSET(get<T>, {0x18, 32, 0, 0})
	CMember(TWeakObjectPtr<UClass*>)                   TabClass                                                    OFFSET(get<T>, {0x38, 32, 0, 0})
	SMember(FGameplayTagContainer)                     TabCategoryTags                                             OFFSET(getStruct<T>, {0x58, 32, 0, 0})
};

/// Struct /Script/FortniteUI.MutatorAddedWidgets
/// Size: 0x0010 (0x000000 - 0x000010)
class FMutatorAddedWidgets : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 16;

public:
};

/// Struct /Script/FortniteUI.AthenaCustomizationParams
/// Size: 0x0008 (0x000000 - 0x000008)
class FAthenaCustomizationParams : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 8;

public:
	CMember(EAthenaCustomizationCategory)              category                                                    OFFSET(get<T>, {0x0, 1, 0, 0})
	DMember(int32_t)                                   CategorySubslotIndex                                        OFFSET(get<int32_t>, {0x4, 4, 0, 0})
};

/// Struct /Script/FortniteUI.AthenaPlaylistLeaderboardData
/// Size: 0x0068 (0x000000 - 0x000068)
class FAthenaPlaylistLeaderboardData : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 104;

public:
	SMember(FName)                                     StatId                                                      OFFSET(getStruct<T>, {0x0, 4, 0, 0})
	SMember(FText)                                     StatDisplayName                                             OFFSET(getStruct<T>, {0x8, 24, 0, 0})
	SMember(FText)                                     TabDisplayName                                              OFFSET(getStruct<T>, {0x20, 24, 0, 0})
	SMember(FText)                                     RowDisplayName                                              OFFSET(getStruct<T>, {0x38, 24, 0, 0})
	SMember(FString)                                   BaseGameplayTag                                             OFFSET(getStruct<T>, {0x50, 16, 0, 0})
	DMember(bool)                                      bIsGlobal                                                   OFFSET(get<bool>, {0x60, 1, 0, 0})
};

/// Struct /Script/FortniteUI.AthenaLeaderboardData
/// Size: 0x0038 (0x000008 - 0x000040)
class FAthenaLeaderboardData : public FTableRowBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 64;

public:
	CMember(EFortAthenaPlaylist)                       Playlist                                                    OFFSET(get<T>, {0x8, 1, 0, 0})
	SMember(FName)                                     PlaylistName                                                OFFSET(getStruct<T>, {0xC, 4, 0, 0})
	CMember(ECommonInputType)                          InputType                                                   OFFSET(get<T>, {0x10, 1, 0, 0})
	CMember(TArray<FAthenaPlaylistLeaderboardData>)    Stats                                                       OFFSET(get<T>, {0x18, 16, 0, 0})
	DMember(bool)                                      bExcludePlaylistNames                                       OFFSET(get<bool>, {0x28, 1, 0, 0})
	CMember(TArray<FString>)                           PlaylistNames                                               OFFSET(get<T>, {0x30, 16, 0, 0})
};

/// Struct /Script/FortniteUI.PlaylistFilter
/// Size: 0x0010 (0x000000 - 0x000010)
class FPlaylistFilter : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 16;

public:
	CMember(UDataTable*)                               PlaylistsData                                               OFFSET(get<T>, {0x0, 8, 0, 0})
};

/// Struct /Script/FortniteUI.LeaderboardFilter
/// Size: 0x0008 (0x000010 - 0x000018)
class FLeaderboardFilter : public FPlaylistFilter
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 24;

public:
};

/// Struct /Script/FortniteUI.FortResurrectionUIData
/// Size: 0x0003 (0x000000 - 0x000003)
class FFortResurrectionUIData : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 3;

public:
	DMember(bool)                                      bResurrectionChipAvailable                                  OFFSET(get<bool>, {0x0, 1, 0, 0})
	DMember(bool)                                      bResurrectionChipPickedUp                                   OFFSET(get<bool>, {0x1, 1, 0, 0})
	DMember(bool)                                      bResurrectionChipRebooting                                  OFFSET(get<bool>, {0x2, 1, 0, 0})
};

/// Struct /Script/FortniteUI.MarkerLargeIndicatorType
/// Size: 0x0018 (0x000000 - 0x000018)
class FMarkerLargeIndicatorType : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 24;

public:
	CMember(UMaterialInterface*)                       MarkerMaterial                                              OFFSET(get<T>, {0x0, 8, 0, 0})
	SMember(FVector2D)                                 ImageSize                                                   OFFSET(getStruct<T>, {0x8, 16, 0, 0})
};

/// Struct /Script/FortniteUI.AthenaTeamCountSlotData
/// Size: 0x0038 (0x000000 - 0x000038)
class FAthenaTeamCountSlotData : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 56;

public:
	SMember(FText)                                     TeamNameText                                                OFFSET(getStruct<T>, {0x0, 24, 0, 0})
	SMember(FText)                                     TeamCountText                                               OFFSET(getStruct<T>, {0x18, 24, 0, 0})
	DMember(bool)                                      bIsMyTeam                                                   OFFSET(get<bool>, {0x30, 1, 0, 0})
};

/// Struct /Script/FortniteUI.WinConditionPlacementData
/// Size: 0x0014 (0x000000 - 0x000014)
class FWinConditionPlacementData : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 20;

public:
	SMember(FMargin)                                   Padding                                                     OFFSET(getStruct<T>, {0x0, 16, 0, 0})
	CMember(TEnumAsByte<EHorizontalAlignment>)         HorizontalAlignment                                         OFFSET(get<T>, {0x10, 1, 0, 0})
	CMember(TEnumAsByte<EVerticalAlignment>)           VerticalAlignment                                           OFFSET(get<T>, {0x11, 1, 0, 0})
};

/// Struct /Script/FortniteUI.WinConditionPlacementDataMapWrapper
/// Size: 0x0050 (0x000000 - 0x000050)
class FWinConditionPlacementDataMapWrapper : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 80;

public:
	CMember(TMap<EHUDMessagePlacement, FWinConditionPlacementData>) Data                                           OFFSET(get<T>, {0x0, 80, 0, 0})
};

/// Struct /Script/FortniteUI.GlyphUpdateTransition
/// Size: 0x000C (0x000000 - 0x00000C)
class FGlyphUpdateTransition : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 12;

public:
	DMember(int32_t)                                   Count                                                       OFFSET(get<int32_t>, {0x0, 4, 0, 0})
	DMember(float)                                     MinTimeOffset                                               OFFSET(get<float>, {0x4, 4, 0, 0})
	DMember(float)                                     MaxTimeOffset                                               OFFSET(get<float>, {0x8, 4, 0, 0})
};

/// Struct /Script/FortniteUI.GlyphAllUpdateTransitions
/// Size: 0x0018 (0x000000 - 0x000018)
class FGlyphAllUpdateTransitions : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 24;

public:
};

/// Struct /Script/FortniteUI.AthenaChallengeListVisualOptions
/// Size: 0x000C (0x000000 - 0x00000C)
class FAthenaChallengeListVisualOptions : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 12;

public:
	DMember(bool)                                      bHideHeaders                                                OFFSET(get<bool>, {0x0, 1, 0, 0})
	DMember(bool)                                      bHideCompletionRewards                                      OFFSET(get<bool>, {0x1, 1, 0, 0})
	DMember(bool)                                      bHideQuestRewards                                           OFFSET(get<bool>, {0x2, 1, 0, 0})
	DMember(bool)                                      bUseCompactActionInfo                                       OFFSET(get<bool>, {0x3, 1, 0, 0})
	DMember(bool)                                      bHideLockedQuests                                           OFFSET(get<bool>, {0x4, 1, 0, 0})
	DMember(bool)                                      bHideCompletedQuests                                        OFFSET(get<bool>, {0x5, 1, 0, 0})
	DMember(bool)                                      bShowOnlyCurentBundleLevelChallenges                        OFFSET(get<bool>, {0x6, 1, 0, 0})
	DMember(bool)                                      bSortCompletedToEnd                                         OFFSET(get<bool>, {0x7, 1, 0, 0})
	DMember(int32_t)                                   PreviewBundleLevel                                          OFFSET(get<int32_t>, {0x8, 4, 0, 0})
};

/// Struct /Script/FortniteUI.QuestEntryVisualData
/// Size: 0x0010 (0x000000 - 0x000010)
class FQuestEntryVisualData : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 16;

public:
	CMember(UClass*)                                   EntryClass                                                  OFFSET(get<T>, {0x0, 8, 0, 0})
	DMember(int32_t)                                   PreAllocationCount                                          OFFSET(get<int32_t>, {0x8, 4, 0, 0})
};

/// Struct /Script/FortniteUI.QuestRecapData
/// Size: 0x0014 (0x000000 - 0x000014)
class FQuestRecapData : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 20;

public:
	CMember(TWeakObjectPtr<UFortQuestItem*>)           QuestItem                                                   OFFSET(get<T>, {0x0, 8, 0, 0})
	DMember(int32_t)                                   LastKnownMcpValue                                           OFFSET(get<int32_t>, {0x8, 4, 0, 0})
	DMember(int32_t)                                   AchivedCount                                                OFFSET(get<int32_t>, {0xC, 4, 0, 0})
	DMember(int32_t)                                   RequiredCount                                               OFFSET(get<int32_t>, {0x10, 4, 0, 0})
};

/// Struct /Script/FortniteUI.AthenaFeatTimelineDisplayData
/// Size: 0x0040 (0x000008 - 0x000048)
class FAthenaFeatTimelineDisplayData : public FTableRowBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 72;

public:
	SMember(FGameplayTag)                              FeatChallengeBundleTag                                      OFFSET(getStruct<T>, {0x8, 4, 0, 0})
	SMember(FText)                                     SeasonText                                                  OFFSET(getStruct<T>, {0x10, 24, 0, 0})
	SMember(FLinearColor)                              Color1                                                      OFFSET(getStruct<T>, {0x28, 16, 0, 0})
	SMember(FLinearColor)                              Color2                                                      OFFSET(getStruct<T>, {0x38, 16, 0, 0})
};

/// Struct /Script/FortniteUI.LevelEffectsData
/// Size: 0x0048 (0x000000 - 0x000048)
class FLevelEffectsData : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 72;

public:
	DMember(int32_t)                                   MinPlayerLevel                                              OFFSET(get<int32_t>, {0x0, 4, 0, 0})
	SMember(FLinearColor)                              ContentColor                                                OFFSET(getStruct<T>, {0x4, 16, 0, 0})
	SMember(FLinearColor)                              OutlineColor                                                OFFSET(getStruct<T>, {0x14, 16, 0, 0})
	CMember(TWeakObjectPtr<UObject*>)                  FlameDisplayObject                                          OFFSET(get<T>, {0x28, 32, 0, 0})
};

/// Struct /Script/FortniteUI.FortEmotePickerCategory
/// Size: 0x0028 (0x000000 - 0x000028)
class FFortEmotePickerCategory : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 40;

public:
};

/// Struct /Script/FortniteUI.FortEmotePickerSubCategoryIdentifier
/// Size: 0x0020 (0x000000 - 0x000020)
class FFortEmotePickerSubCategoryIdentifier : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 32;

public:
	SMember(FGameplayTag)                              tag                                                         OFFSET(getStruct<T>, {0x0, 4, 0, 0})
	SMember(FText)                                     Name                                                        OFFSET(getStruct<T>, {0x8, 24, 0, 0})
};

/// Struct /Script/FortniteUI.GenericAction
/// Size: 0x0028 (0x000000 - 0x000028)
class FGenericAction : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 40;

public:
};

/// Struct /Script/FortniteUI.SquadComsNPCCommandEntry
/// Size: 0x00F0 (0x000000 - 0x0000F0)
class FSquadComsNPCCommandEntry : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 240;

public:
	SMember(FText)                                     Label                                                       OFFSET(getStruct<T>, {0x0, 24, 0, 0})
	SMember(FSlateBrush)                               Brush                                                       OFFSET(getStruct<T>, {0x20, 192, 0, 0})
	CMember(PingCommandType)                           CommandType                                                 OFFSET(get<T>, {0xE0, 1, 0, 0})
	CMember(USoundBase*)                               ConfirmSound                                                OFFSET(get<T>, {0xE8, 8, 0, 0})
};

/// Struct /Script/FortniteUI.SquadComsQuickChatEntry
/// Size: 0x00F0 (0x000000 - 0x0000F0)
class FSquadComsQuickChatEntry : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 240;

public:
	SMember(FText)                                     Label                                                       OFFSET(getStruct<T>, {0x0, 24, 0, 0})
	SMember(FSlateBrush)                               Brush                                                       OFFSET(getStruct<T>, {0x20, 192, 0, 0})
	CMember(EFortWorldMarkerType)                      MarkerType                                                  OFFSET(get<T>, {0xE0, 1, 0, 0})
};

/// Struct /Script/FortniteUI.FortSquadComsPickerCategory
/// Size: 0x0028 (0x000000 - 0x000028)
class FFortSquadComsPickerCategory : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 40;

public:
};

/// Struct /Script/FortniteUI.FortSquadComsPickerSubCategoryIdentifier
/// Size: 0x0020 (0x000000 - 0x000020)
class FFortSquadComsPickerSubCategoryIdentifier : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 32;

public:
	SMember(FGameplayTag)                              tag                                                         OFFSET(getStruct<T>, {0x0, 4, 0, 0})
	SMember(FText)                                     Name                                                        OFFSET(getStruct<T>, {0x8, 24, 0, 0})
};

/// Struct /Script/FortniteUI.AthenaItemShopSectionData
/// Size: 0x0050 (0x000000 - 0x000050)
class FAthenaItemShopSectionData : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 80;

public:
};

/// Struct /Script/FortniteUI.BarrierObjectState
/// Size: 0x0010 (0x000000 - 0x000010)
class FBarrierObjectState : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 16;

public:
	CMember(AAthenaBarrierObjective*)                  ObjectiveActor                                              OFFSET(get<T>, {0x0, 8, 0, 0})
	DMember(char)                                      TeamNum                                                     OFFSET(get<char>, {0x8, 1, 0, 0})
	CMember(EBarrierFoodTeam)                          FoodTeam                                                    OFFSET(get<T>, {0x9, 1, 0, 0})
	CMember(EBarrierObjectiveDamageState)              DamageState                                                 OFFSET(get<T>, {0xA, 1, 0, 0})
};

/// Struct /Script/FortniteUI.BattleLabDisplayData
/// Size: 0x0060 (0x000000 - 0x000060)
class FBattleLabDisplayData : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 96;

public:
	SMember(FText)                                     TitleText                                                   OFFSET(getStruct<T>, {0x0, 24, 0, 0})
	SMember(FText)                                     DescriptionText                                             OFFSET(getStruct<T>, {0x18, 24, 0, 0})
	CMember(EBattleLabAlertType)                       AlertType                                                   OFFSET(get<T>, {0x30, 1, 0, 0})
	DMember(int32_t)                                   RewardCount                                                 OFFSET(get<int32_t>, {0x34, 4, 0, 0})
	DMember(int32_t)                                   RewardCountTotal                                            OFFSET(get<int32_t>, {0x38, 4, 0, 0})
	CMember(TWeakObjectPtr<UTexture2D*>)               MainIconTexture                                             OFFSET(get<T>, {0x40, 32, 0, 0})
};

/// Struct /Script/FortniteUI.AthenaBossHealthData
/// Size: 0x0030 (0x000000 - 0x000030)
class FAthenaBossHealthData : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 48;

public:
	DMember(bool)                                      bVisible                                                    OFFSET(get<bool>, {0x0, 1, 0, 0})
	DMember(bool)                                      bShowShields                                                OFFSET(get<bool>, {0x1, 1, 0, 0})
	SMember(FText)                                     Name                                                        OFFSET(getStruct<T>, {0x8, 24, 0, 0})
	DMember(int32_t)                                   Health                                                      OFFSET(get<int32_t>, {0x20, 4, 0, 0})
	DMember(int32_t)                                   HealthMax                                                   OFFSET(get<int32_t>, {0x24, 4, 0, 0})
	DMember(int32_t)                                   Shields                                                     OFFSET(get<int32_t>, {0x28, 4, 0, 0})
	DMember(int32_t)                                   ShieldsMax                                                  OFFSET(get<int32_t>, {0x2C, 4, 0, 0})
};

/// Struct /Script/FortniteUI.CobaltPlayerPortraitIndexInfo
/// Size: 0x0010 (0x000000 - 0x000010)
class FCobaltPlayerPortraitIndexInfo : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 16;

public:
	CMember(TArray<int32_t>)                           PortraitIndexArray                                          OFFSET(get<T>, {0x0, 16, 0, 0})
};

/// Struct /Script/FortniteUI.SurvivalObjectiveIconData
/// Size: 0x000C (0x000000 - 0x00000C)
class FSurvivalObjectiveIconData : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 12;

public:
	DMember(int32_t)                                   IconIndex                                                   OFFSET(get<int32_t>, {0x0, 4, 0, 0})
	CMember(ESurvivalObjectiveIconState)               IconState                                                   OFFSET(get<T>, {0x4, 1, 0, 0})
	CMember(ESurvivalObjectiveIconState)               PrevIconState                                               OFFSET(get<T>, {0x5, 1, 0, 0})
	SMember(FName)                                     SpecialActorID                                              OFFSET(getStruct<T>, {0x8, 4, 0, 0})
};

/// Struct /Script/FortniteUI.SurvivalObjectiveText
/// Size: 0x0010 (0x000000 - 0x000010)
class FSurvivalObjectiveText : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 16;

public:
	CMember(TArray<FString>)                           SafezoneStateText                                           OFFSET(get<T>, {0x0, 16, 0, 0})
};

/// Struct /Script/FortniteUI.DiscoCaptureUIData
/// Size: 0x0040 (0x000000 - 0x000040)
class FDiscoCaptureUIData : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 64;

public:
	CMember(EDiscoCaptureUIState)                      CurrDisplayState                                            OFFSET(get<T>, {0x0, 1, 0, 0})
	CMember(AAthenaCapturePoint*)                      CapturePoint                                                OFFSET(get<T>, {0x8, 8, 0, 0})
	CMember(AFortPlayerPawnAthena*)                    CurrPawn                                                    OFFSET(get<T>, {0x10, 8, 0, 0})
	CMember(UMaterialInstanceDynamic*)                 CurrMID                                                     OFFSET(get<T>, {0x18, 8, 0, 0})
	DMember(float)                                     FillAmount                                                  OFFSET(get<float>, {0x20, 4, 0, 0})
	SMember(FText)                                     DisplayText                                                 OFFSET(getStruct<T>, {0x28, 24, 0, 0})
};

/// Struct /Script/FortniteUI.DiscoCaptureIconData
/// Size: 0x0010 (0x000000 - 0x000010)
class FDiscoCaptureIconData : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 16;

public:
	CMember(EDiscoCaptureIconState)                    CurrIconState                                               OFFSET(get<T>, {0x0, 1, 0, 0})
	CMember(EDiscoCaptureProgressState)                CurrProgressState                                           OFFSET(get<T>, {0x1, 1, 0, 0})
	DMember(float)                                     CurrCapturePercent                                          OFFSET(get<float>, {0x4, 4, 0, 0})
	CMember(AAthenaCapturePoint*)                      CapturePoint                                                OFFSET(get<T>, {0x8, 8, 0, 0})
};

/// Struct /Script/FortniteUI.DiscoTeamScoreData
/// Size: 0x0020 (0x000000 - 0x000020)
class FDiscoTeamScoreData : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 32;

public:
	SMember(FText)                                     CurrScoreText                                               OFFSET(getStruct<T>, {0x0, 24, 0, 0})
	DMember(float)                                     CurrScorePercent                                            OFFSET(get<float>, {0x18, 4, 0, 0})
	DMember(int32_t)                                   CurrScore                                                   OFFSET(get<int32_t>, {0x1C, 4, 0, 0})
};

/// Struct /Script/FortniteUI.GGCenterDisplayEntry
/// Size: 0x0017 (0x000001 - 0x000018)
class FGGCenterDisplayEntry : public FFortChangeMonitoringStruct
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 24;

public:
	CMember(UFortWeaponItemDefinition*)                WeaponAt                                                    OFFSET(get<T>, {0x8, 8, 0, 0})
	DMember(int32_t)                                   PlayersAtWeapon                                             OFFSET(get<int32_t>, {0x10, 4, 0, 0})
	DMember(bool)                                      bIsEnabled                                                  OFFSET(get<bool>, {0x14, 1, 0, 0})
	DMember(bool)                                      bShowHarvestingTool                                         OFFSET(get<bool>, {0x15, 1, 0, 0})
};

/// Struct /Script/FortniteUI.HeistBlingIconData
/// Size: 0x0008 (0x000000 - 0x000008)
class FHeistBlingIconData : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 8;

public:
	DMember(int32_t)                                   IconIndex                                                   OFFSET(get<int32_t>, {0x0, 4, 0, 0})
	CMember(EHeistBlingIconState)                      IconState                                                   OFFSET(get<T>, {0x4, 1, 0, 0})
	CMember(EHeistBlingIconState)                      PrevIconState                                               OFFSET(get<T>, {0x5, 1, 0, 0})
};

/// Struct /Script/FortniteUI.HeistExitCraftIconData
/// Size: 0x0010 (0x000000 - 0x000010)
class FHeistExitCraftIconData : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 16;

public:
	DMember(int32_t)                                   IconIndex                                                   OFFSET(get<int32_t>, {0x0, 4, 0, 0})
	CMember(EHeistExitCraftIconState)                  IconState                                                   OFFSET(get<T>, {0x4, 1, 0, 0})
	CMember(EHeistExitCraftIconState)                  PrevIconState                                               OFFSET(get<T>, {0x5, 1, 0, 0})
	DMember(int32_t)                                   SecondsUntilIncoming                                        OFFSET(get<int32_t>, {0x8, 4, 0, 0})
	DMember(bool)                                      bTeamHasBling                                               OFFSET(get<bool>, {0xC, 1, 0, 0})
};

/// Struct /Script/FortniteUI.FortCountdownSounds
/// Size: 0x0020 (0x000000 - 0x000020)
class FFortCountdownSounds : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 32;

public:
	CMember(USoundBase*)                               sound                                                       OFFSET(get<T>, {0x0, 8, 0, 0})
	DMember(int32_t)                                   StartTime                                                   OFFSET(get<int32_t>, {0x8, 4, 0, 0})
	DMember(int32_t)                                   StopTime                                                    OFFSET(get<int32_t>, {0xC, 4, 0, 0})
	DMember(float)                                     FadeOutTime                                                 OFFSET(get<float>, {0x10, 4, 0, 0})
	DMember(bool)                                      bPlayed                                                     OFFSET(get<bool>, {0x14, 1, 0, 0})
	CMember(UAudioComponent*)                          PlayInstance                                                OFFSET(get<T>, {0x18, 8, 0, 0})
};

/// Struct /Script/FortniteUI.PerkPipData
/// Size: 0x0010 (0x000000 - 0x000010)
class FPerkPipData : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 16;

public:
	CMember(UFortAccoladeItemDefinition*)              AccoladeItemDef                                             OFFSET(get<T>, {0x0, 8, 0, 0})
	DMember(int32_t)                                   NumOfPips                                                   OFFSET(get<int32_t>, {0x8, 4, 0, 0})
};

/// Struct /Script/FortniteUI.SoundThreshold
/// Size: 0x0010 (0x000000 - 0x000010)
class FSoundThreshold : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 16;

public:
	CMember(USoundCue*)                                SoundCue                                                    OFFSET(get<T>, {0x0, 8, 0, 0})
	DMember(float)                                     Threshold                                                   OFFSET(get<float>, {0x8, 4, 0, 0})
};

/// Struct /Script/FortniteUI.TDMTeamScoreData
/// Size: 0x0020 (0x000000 - 0x000020)
class FTDMTeamScoreData : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 32;

public:
	SMember(FText)                                     CurrScoreText                                               OFFSET(getStruct<T>, {0x0, 24, 0, 0})
	DMember(float)                                     CurrScorePercent                                            OFFSET(get<float>, {0x18, 4, 0, 0})
	DMember(int32_t)                                   CurrScore                                                   OFFSET(get<int32_t>, {0x1C, 4, 0, 0})
};

/// Struct /Script/FortniteUI.WaxPlacementData
/// Size: 0x0020 (0x000000 - 0x000020)
class FWaxPlacementData : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 32;

public:
	DMember(int32_t)                                   Placement                                                   OFFSET(get<int32_t>, {0x0, 4, 0, 0})
	SMember(FString)                                   PlayerName                                                  OFFSET(getStruct<T>, {0x8, 16, 0, 0})
	DMember(int32_t)                                   CoinCount                                                   OFFSET(get<int32_t>, {0x18, 4, 0, 0})
	DMember(bool)                                      bIsPlayer                                                   OFFSET(get<bool>, {0x1C, 1, 0, 0})
};

/// Struct /Script/FortniteUI.GoalsPageCategoryTabData
/// Size: 0x0028 (0x000000 - 0x000028)
class FGoalsPageCategoryTabData : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 40;

public:
	CMember(UObject*)                                  TabDisplayAsset                                             OFFSET(get<T>, {0x0, 8, 0, 0})
	SMember(FText)                                     DisplayName                                                 OFFSET(getStruct<T>, {0x8, 24, 0, 0})
	SMember(FGameplayTag)                              IncludeTag                                                  OFFSET(getStruct<T>, {0x20, 4, 0, 0})
};

/// Struct /Script/FortniteUI.SelectedChallengesData
/// Size: 0x0020 (0x000000 - 0x000020)
class FSelectedChallengesData : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 32;

public:
	DMember(bool)                                      bIsCompleted                                                OFFSET(get<bool>, {0x10, 1, 0, 0})
	DMember(bool)                                      bIsLocked                                                   OFFSET(get<bool>, {0x11, 1, 0, 0})
	DMember(bool)                                      bHasIconOverride                                            OFFSET(get<bool>, {0x12, 1, 0, 0})
	DMember(float)                                     Progress                                                    OFFSET(get<float>, {0x14, 4, 0, 0})
	DMember(int32_t)                                   NumObjectivesCompleted                                      OFFSET(get<int32_t>, {0x18, 4, 0, 0})
	DMember(int32_t)                                   NumObjectives                                               OFFSET(get<int32_t>, {0x1C, 4, 0, 0})
};

/// Struct /Script/FortniteUI.DisabledQuestData
/// Size: 0x0010 (0x000000 - 0x000010)
class FDisabledQuestData : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 16;

public:
	SMember(FString)                                   Name                                                        OFFSET(getStruct<T>, {0x0, 16, 0, 0})
};

/// Struct /Script/FortniteUI.StatGroupData
/// Size: 0x00F0 (0x000000 - 0x0000F0)
class FStatGroupData : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 240;

public:
	SMember(FText)                                     GroupName                                                   OFFSET(getStruct<T>, {0x0, 24, 0, 0})
	SMember(FSlateBrush)                               Group                                                       OFFSET(getStruct<T>, {0x20, 192, 0, 0})
	DMember(float)                                     Value                                                       OFFSET(get<float>, {0xE0, 4, 0, 0})
	DMember(float)                                     ChartValue                                                  OFFSET(get<float>, {0xE4, 4, 0, 0})
	DMember(float)                                     ChartOrigionalValue                                         OFFSET(get<float>, {0xE8, 4, 0, 0})
};

/// Struct /Script/FortniteUI.AthenaTeamDisplayInfo
/// Size: 0x0078 (0x000000 - 0x000078)
class FAthenaTeamDisplayInfo : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 120;

public:
	CMember(TWeakObjectPtr<UObject*>)                  Icon                                                        OFFSET(get<T>, {0x0, 32, 0, 0})
	CMember(TWeakObjectPtr<UObject*>)                  Ribbon                                                      OFFSET(get<T>, {0x20, 32, 0, 0})
	SMember(FText)                                     Name                                                        OFFSET(getStruct<T>, {0x40, 24, 0, 0})
	SMember(FLinearColor)                              TextColor                                                   OFFSET(getStruct<T>, {0x58, 16, 0, 0})
	SMember(FLinearColor)                              PedestalColor                                               OFFSET(getStruct<T>, {0x68, 16, 0, 0})
};

/// Struct /Script/FortniteUI.ActionBindingIconPicker
/// Size: 0x0018 (0x000000 - 0x000018)
class FActionBindingIconPicker : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 24;

public:
	CMember(TArray<FName>)                             ActionNames                                                 OFFSET(get<T>, {0x0, 16, 0, 0})
	CMember(UPaperSprite*)                             Sprite                                                      OFFSET(get<T>, {0x10, 8, 0, 0})
};

/// Struct /Script/FortniteUI.ActionBindingVisibility
/// Size: 0x0018 (0x000000 - 0x000018)
class FActionBindingVisibility : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 24;

public:
	CMember(TArray<FName>)                             ActionNames                                                 OFFSET(get<T>, {0x0, 16, 0, 0})
	CMember(EActionBindingComparisonType)              ComparisonType                                              OFFSET(get<T>, {0x10, 1, 0, 0})
	CMember(ESlateVisibility)                          Visibility                                                  OFFSET(get<T>, {0x11, 1, 0, 0})
};

/// Struct /Script/FortniteUI.GameplayMessageVisibility
/// Size: 0x0008 (0x000000 - 0x000008)
class FGameplayMessageVisibility : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 8;

public:
	SMember(FEventMessageTag)                          EventMessageTag                                             OFFSET(getStruct<T>, {0x0, 4, 0, 0})
	CMember(ESlateVisibility)                          MessageReceivedVisibility                                   OFFSET(get<T>, {0x4, 1, 0, 0})
	CMember(ESlateVisibility)                          MessageStateClearedVisibility                               OFFSET(get<T>, {0x5, 1, 0, 0})
};

/// Struct /Script/FortniteUI.HUDWidgetRegistryEntry
/// Size: 0x0048 (0x000000 - 0x000048)
class FHUDWidgetRegistryEntry : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 72;

public:
	SMember(FGameplayTag)                              HUDWidgetTag                                                OFFSET(getStruct<T>, {0x0, 4, 0, 0})
	DMember(bool)                                      bIsMandatory                                                OFFSET(get<bool>, {0x4, 1, 0, 0})
	DMember(float)                                     MandatoryOnScreenPercent                                    OFFSET(get<float>, {0x8, 4, 0, 0})
	DMember(int32_t)                                   MaximumAmountOfInstances                                    OFFSET(get<int32_t>, {0xC, 4, 0, 0})
	DMember(int32_t)                                   ZOrder                                                      OFFSET(get<int32_t>, {0x10, 4, 0, 0})
	DMember(bool)                                      bHasDynamicUIUniqueID                                       OFFSET(get<bool>, {0x14, 1, 0, 0})
	SMember(FName)                                     DynamicUIUniqueID                                           OFFSET(getStruct<T>, {0x18, 4, 0, 0})
	CMember(UClass*)                                   HUDWidgetClass                                              OFFSET(get<T>, {0x20, 8, 0, 0})
	CMember(UClass*)                                   HUDWidgetProxyClass                                         OFFSET(get<T>, {0x28, 8, 0, 0})
	CMember(UClass*)                                   HUDWidgetPreviewClass                                       OFFSET(get<T>, {0x30, 8, 0, 0})
	CMember(TArray<UFortMobileHUDWidgetCustomPropertyModel*>) CustomPropertyModels                                 OFFSET(get<T>, {0x38, 16, 0, 0})
};

/// Struct /Script/FortniteUI.HUDWidgetBehaviorRegistryEntry
/// Size: 0x0010 (0x000000 - 0x000010)
class FHUDWidgetBehaviorRegistryEntry : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 16;

public:
	SMember(FGameplayTag)                              HUDWidgetBehaviorTag                                        OFFSET(getStruct<T>, {0x0, 4, 0, 0})
	SMember(FGameplayTag)                              HUDWidgetOverrideTag                                        OFFSET(getStruct<T>, {0x4, 4, 0, 0})
	CMember(UClass*)                                   HUDWidgetBehaviorClass                                      OFFSET(get<T>, {0x8, 8, 0, 0})
};

/// Struct /Script/FortniteUI.HUDWidgetSchemaInitializer
/// Size: 0x0010 (0x000000 - 0x000010)
class FHUDWidgetSchemaInitializer : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 16;

public:
};

/// Struct /Script/FortniteUI.HUDWidgetBehaviorExtensionsRegistryEntry
/// Size: 0x0018 (0x000000 - 0x000018)
class FHUDWidgetBehaviorExtensionsRegistryEntry : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 24;

public:
	SMember(FGameplayTag)                              HUDWidgetBehaviorTag                                        OFFSET(getStruct<T>, {0x0, 4, 0, 0})
	CMember(TArray<UClass*>)                           HUDWidgetBehaviorExtensions                                 OFFSET(get<T>, {0x8, 16, 0, 0})
};

/// Struct /Script/FortniteUI.HUDWidgetException
/// Size: 0x0020 (0x000000 - 0x000020)
class FHUDWidgetException : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 32;

public:
	SMember(FHUDWidgetBehaviorRegistryEntry)           HUDWidgetBehaviorRegistryEntry                              OFFSET(getStruct<T>, {0x0, 16, 0, 0})
	SMember(FString)                                   CVarEnabler                                                 OFFSET(getStruct<T>, {0x10, 16, 0, 0})
};

/// Struct /Script/FortniteUI.TouchInteractionIconOverride
/// Size: 0x0028 (0x000000 - 0x000028)
class FTouchInteractionIconOverride : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 40;

public:
	CMember(TWeakObjectPtr<UTexture2D*>)               IconOverride                                                OFFSET(get<T>, {0x0, 32, 0, 0})
	DMember(float)                                     IconScale                                                   OFFSET(get<float>, {0x20, 4, 0, 0})
};

/// Struct /Script/FortniteUI.ButtonInteractionPair
/// Size: 0x0010 (0x000000 - 0x000010)
class FButtonInteractionPair : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 16;

public:
	CMember(AActor*)                                   TrackedInteraction                                          OFFSET(get<T>, {0x0, 8, 0, 0})
	CMember(UFortTouchInteractionButton*)              TrackedButton                                               OFFSET(get<T>, {0x8, 8, 0, 0})
};

/// Struct /Script/FortniteUI.UserAction
/// Size: 0x0018 (0x000000 - 0x000018)
class FUserAction : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 24;

public:
	SMember(FString)                                   ActionName                                                  OFFSET(getStruct<T>, {0x8, 16, 0, 0})
};

/// Struct /Script/FortniteUI.UserGenericAction
/// Size: 0x0040 (0x000018 - 0x000058)
class FUserGenericAction : public FUserAction
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 88;

public:
	SMember(FFortMobileHUDProfileBase)                 ActiveProfile                                               OFFSET(getStruct<T>, {0x18, 64, 0, 0})
};

/// Struct /Script/FortniteUI.UserRenameAction
/// Size: 0x0020 (0x000018 - 0x000038)
class FUserRenameAction : public FUserAction
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 56;

public:
	SMember(FString)                                   PreviousName                                                OFFSET(getStruct<T>, {0x18, 16, 0, 0})
	SMember(FString)                                   NewName                                                     OFFSET(getStruct<T>, {0x28, 16, 0, 0})
};

/// Struct /Script/FortniteUI.UserSelectProfileAction
/// Size: 0x0080 (0x000018 - 0x000098)
class FUserSelectProfileAction : public FUserAction
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 152;

public:
	SMember(FFortMobileHUDProfileBase)                 PreviousProfile                                             OFFSET(getStruct<T>, {0x18, 64, 0, 0})
	SMember(FFortMobileHUDProfileBase)                 NewProfile                                                  OFFSET(getStruct<T>, {0x58, 64, 0, 0})
};

/// Struct /Script/FortniteUI.HUDLayoutToolV2_ButtonStateColor
/// Size: 0x0038 (0x000000 - 0x000038)
class FHUDLayoutToolV2_ButtonStateColor : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 56;

public:
	SMember(FSlateColor)                               TextColor                                                   OFFSET(getStruct<T>, {0x0, 20, 0, 0})
	SMember(FLinearColor)                              IconColor                                                   OFFSET(getStruct<T>, {0x14, 16, 0, 0})
	SMember(FLinearColor)                              BackgroundColor                                             OFFSET(getStruct<T>, {0x24, 16, 0, 0})
	DMember(float)                                     IconAngle                                                   OFFSET(get<float>, {0x34, 4, 0, 0})
};

/// Struct /Script/FortniteUI.LinkAcrossNumericalIndicatorActionSymbol
/// Size: 0x0030 (0x000000 - 0x000030)
class FLinkAcrossNumericalIndicatorActionSymbol : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 48;

public:
	CMember(ENumericalIndicatorActionType)             ActionType                                                  OFFSET(get<T>, {0x0, 1, 0, 0})
	SMember(FText)                                     ActionSymbol                                                OFFSET(getStruct<T>, {0x8, 24, 0, 0})
	SMember(FLinearColor)                              ActionColor                                                 OFFSET(getStruct<T>, {0x20, 16, 0, 0})
};

/// Struct /Script/FortniteUI.SimpleActionMessages
/// Size: 0x0038 (0x000000 - 0x000038)
class FSimpleActionMessages : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 56;

public:
	CMember(ELinkAcrossSimpleAction)                   SimpleActionType                                            OFFSET(get<T>, {0x0, 1, 0, 0})
	SMember(FText)                                     SimpleActionTitle                                           OFFSET(getStruct<T>, {0x8, 24, 0, 0})
	SMember(FText)                                     SimpleActionBody                                            OFFSET(getStruct<T>, {0x20, 24, 0, 0})
};

/// Struct /Script/FortniteUI.HUDLayoutToolV2_PopupContent
/// Size: 0x0068 (0x000000 - 0x000068)
class FHUDLayoutToolV2_PopupContent : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 104;

public:
	CMember(EHUDLayoutToolPopupType)                   PopupType                                                   OFFSET(get<T>, {0x0, 1, 0, 0})
	SMember(FText)                                     TitleText                                                   OFFSET(getStruct<T>, {0x8, 24, 0, 0})
	SMember(FText)                                     DescriptionText                                             OFFSET(getStruct<T>, {0x20, 24, 0, 0})
	SMember(FText)                                     ButtonConfirmText                                           OFFSET(getStruct<T>, {0x38, 24, 0, 0})
	SMember(FText)                                     ButtonCancelText                                            OFFSET(getStruct<T>, {0x50, 24, 0, 0})
};

/// Struct /Script/FortniteUI.QuickbarProxySlotIconContainer
/// Size: 0x0010 (0x000000 - 0x000010)
class FQuickbarProxySlotIconContainer : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 16;

public:
	CMember(TArray<UPaperSprite*>)                     SlotIcons                                                   OFFSET(get<T>, {0x0, 16, 0, 0})
};

/// Struct /Script/FortniteUI.HUDLayoutToolV2_TextInputPopupContent
/// Size: 0x0068 (0x000000 - 0x000068)
class FHUDLayoutToolV2_TextInputPopupContent : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 104;

public:
	CMember(EHUDLayoutToolTextInputPopupType)          PopupType                                                   OFFSET(get<T>, {0x0, 1, 0, 0})
	SMember(FText)                                     TitleText                                                   OFFSET(getStruct<T>, {0x8, 24, 0, 0})
	SMember(FText)                                     DescriptionText                                             OFFSET(getStruct<T>, {0x20, 24, 0, 0})
	SMember(FText)                                     ButtonConfirmText                                           OFFSET(getStruct<T>, {0x38, 24, 0, 0})
	SMember(FText)                                     ButtonCancelText                                            OFFSET(getStruct<T>, {0x50, 24, 0, 0})
};

/// Struct /Script/FortniteUI.HUDLayoutToolV2_ToastNotificationContent
/// Size: 0x0038 (0x000000 - 0x000038)
class FHUDLayoutToolV2_ToastNotificationContent : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 56;

public:
	CMember(EHUDLayoutToolToasterType)                 ToasterType                                                 OFFSET(get<T>, {0x0, 1, 0, 0})
	SMember(FText)                                     TitleText                                                   OFFSET(getStruct<T>, {0x8, 24, 0, 0})
	SMember(FText)                                     DescriptionText                                             OFFSET(getStruct<T>, {0x20, 24, 0, 0})
};

/// Struct /Script/FortniteUI.FortMobileContextFilter
/// Size: 0x0040 (0x000000 - 0x000040)
class FFortMobileContextFilter : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 64;

public:
	SMember(FGameplayTagContainer)                     ShownInContexts                                             OFFSET(getStruct<T>, {0x0, 32, 0, 0})
	SMember(FGameplayTagContainer)                     HiddenInContexts                                            OFFSET(getStruct<T>, {0x20, 32, 0, 0})
};

/// Struct /Script/FortniteUI.FortMobileHUDContextLayout
/// Size: 0x0020 (0x000000 - 0x000020)
class FFortMobileHUDContextLayout : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 32;

public:
	CMember(UFortMobileHUDContextModel*)               HUDContextModel                                             OFFSET(get<T>, {0x10, 8, 0, 0})
};

/// Struct /Script/FortniteUI.FortMobileHUDContextModelExtension
/// Size: 0x0028 (0x000000 - 0x000028)
class FFortMobileHUDContextModelExtension : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 40;

public:
	SMember(FGameplayTag)                              ContextLayoutTag                                            OFFSET(getStruct<T>, {0x0, 4, 0, 0})
	SMember(FGameplayTagContainer)                     UseableHUDWidgetTags                                        OFFSET(getStruct<T>, {0x8, 32, 0, 0})
};

/// Struct /Script/FortniteUI.FortMobileHUDLayoutProfile
/// Size: 0x0040 (0x000000 - 0x000040)
class FFortMobileHUDLayoutProfile : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 64;

public:
	SMember(FText)                                     ProfileName                                                 OFFSET(getStruct<T>, {0x0, 24, 0, 0})
	CMember(TArray<FFortMobileHUDContextLayout>)       ContextLayouts                                              OFFSET(get<T>, {0x18, 16, 0, 0})
};

/// Struct /Script/FortniteUI.FortMobileHUDWidgetLayout
/// Size: 0x0058 (0x000000 - 0x000058)
class FFortMobileHUDWidgetLayout : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 88;

public:
	SMember(FAnchorData)                               LayoutData                                                  OFFSET(getStruct<T>, {0x0, 64, 0, 0})
	DMember(int32_t)                                   ZOrder                                                      OFFSET(get<int32_t>, {0x40, 4, 0, 0})
};

/// Struct /Script/FortniteUI.NPCServiceWidgetData
/// Size: 0x0058 (0x000000 - 0x000058)
class FNPCServiceWidgetData : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 88;

public:
	SMember(FNPCServiceData)                           ServiceData                                                 OFFSET(getStruct<T>, {0x0, 56, 0, 0})
	CMember(UFortResourceItemDefinition*)              CostResource                                                OFFSET(get<T>, {0x38, 8, 0, 0})
	DMember(int32_t)                                   CostAmountMin                                               OFFSET(get<int32_t>, {0x40, 4, 0, 0})
	DMember(int32_t)                                   CostAmountMax                                               OFFSET(get<int32_t>, {0x44, 4, 0, 0})
	DMember(bool)                                      bIsLocked                                                   OFFSET(get<bool>, {0x48, 1, 0, 0})
	DMember(int32_t)                                   MinRequiredBenefitLevel                                     OFFSET(get<int32_t>, {0x4C, 4, 0, 0})
	DMember(int32_t)                                   Priority                                                    OFFSET(get<int32_t>, {0x50, 4, 0, 0})
};

/// Struct /Script/FortniteUI.NPCServiceData
/// Size: 0x0038 (0x000000 - 0x000038)
class FNPCServiceData : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 56;

public:
	SMember(FText)                                     Name                                                        OFFSET(getStruct<T>, {0x0, 24, 0, 0})
	CMember(TWeakObjectPtr<UObject*>)                  Icon                                                        OFFSET(get<T>, {0x18, 32, 0, 0})
};

/// Struct /Script/FortniteUI.NPCServiceDataRow
/// Size: 0x0060 (0x000008 - 0x000068)
class FNPCServiceDataRow : public FTableRowBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 104;

public:
	SMember(FGameplayTagContainer)                     ServiceTags                                                 OFFSET(getStruct<T>, {0x8, 32, 0, 0})
	SMember(FName)                                     PricingKey                                                  OFFSET(getStruct<T>, {0x28, 4, 0, 0})
	SMember(FNPCServiceData)                           ServiceData                                                 OFFSET(getStruct<T>, {0x30, 56, 0, 0})
};

/// Struct /Script/FortniteUI.NPCSpecializationDataRow
/// Size: 0x0040 (0x000008 - 0x000048)
class FNPCSpecializationDataRow : public FTableRowBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 72;

public:
	SMember(FName)                                     PricingKey                                                  OFFSET(getStruct<T>, {0x8, 4, 0, 0})
	SMember(FNPCServiceData)                           ServiceData                                                 OFFSET(getStruct<T>, {0x10, 56, 0, 0})
};

/// Struct /Script/FortniteUI.FortMaterialProgressBarSectionStyle
/// Size: 0x0030 (0x000000 - 0x000030)
class FFortMaterialProgressBarSectionStyle : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 48;

public:
	DMember(bool)                                      bGradientBar                                                OFFSET(get<bool>, {0x0, 1, 0, 0})
	SMember(FName)                                     BarParamName                                                OFFSET(getStruct<T>, {0x4, 4, 0, 0})
	SMember(FName)                                     BarColorOneParamName                                        OFFSET(getStruct<T>, {0x8, 4, 0, 0})
	SMember(FName)                                     BarColorTwoParamName                                        OFFSET(getStruct<T>, {0xC, 4, 0, 0})
	SMember(FLinearColor)                              BarColorOne                                                 OFFSET(getStruct<T>, {0x10, 16, 0, 0})
	SMember(FLinearColor)                              BarColorTwo                                                 OFFSET(getStruct<T>, {0x20, 16, 0, 0})
};

/// Struct /Script/FortniteUI.FortMaterialProgressBarSectionInfo
/// Size: 0x0034 (0x000000 - 0x000034)
class FFortMaterialProgressBarSectionInfo : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 52;

public:
	SMember(FFortMaterialProgressBarSectionStyle)      SectionStyle                                                OFFSET(getStruct<T>, {0x0, 48, 0, 0})
	DMember(float)                                     Percent                                                     OFFSET(get<float>, {0x30, 4, 0, 0})
};

/// Struct /Script/FortniteUI.AthenaSubscriptionProgressiveInfo
/// Size: 0x0028 (0x000000 - 0x000028)
class FAthenaSubscriptionProgressiveInfo : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 40;

public:
	CMember(TArray<FText>)                             InfoModalEntries                                            OFFSET(get<T>, {0x0, 16, 0, 0})
	SMember(FText)                                     NewStagesUnlockFinePrint                                    OFFSET(getStruct<T>, {0x10, 24, 0, 0})
};

/// Struct /Script/FortniteUI.SubscriptionModalInfo
/// Size: 0x0038 (0x000000 - 0x000038)
class FSubscriptionModalInfo : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 56;

public:
	SMember(FString)                                   ModalId                                                     OFFSET(getStruct<T>, {0x0, 16, 0, 0})
	CMember(EAppStore)                                 PlatformId                                                  OFFSET(get<T>, {0x10, 1, 0, 0})
	CMember(TArray<FText>)                             Entries                                                     OFFSET(get<T>, {0x18, 16, 0, 0})
	SMember(FString)                                   QrCodeImage                                                 OFFSET(getStruct<T>, {0x28, 16, 0, 0})
};

/// Struct /Script/FortniteUI.SubscriptionModals
/// Size: 0x0010 (0x000000 - 0x000010)
class FSubscriptionModals : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 16;

public:
	CMember(TArray<FSubscriptionModalInfo>)            Modals                                                      OFFSET(get<T>, {0x0, 16, 0, 0})
};

/// Struct /Script/FortniteUI.CrewTileImages
/// Size: 0x0020 (0x000000 - 0x000020)
class FCrewTileImages : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 32;

public:
	SMember(FString)                                   TileImageURL                                                OFFSET(getStruct<T>, {0x0, 16, 0, 0})
	SMember(FString)                                   NextTileImageURL                                            OFFSET(getStruct<T>, {0x10, 16, 0, 0})
};

/// Struct /Script/FortniteUI.BattlePassPurchaseData
/// Size: 0x00A0 (0x000000 - 0x0000A0)
class FBattlePassPurchaseData : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 160;

public:
	SMember(FString)                                   BattlePassPurchaseBackgroundURL                             OFFSET(getStruct<T>, {0x0, 16, 0, 0})
	SMember(FText)                                     BattlePassPurchaseDisclaimer                                OFFSET(getStruct<T>, {0x10, 24, 0, 0})
	SMember(FText)                                     BattlePassScreenDisclaimer                                  OFFSET(getStruct<T>, {0x28, 24, 0, 0})
	SMember(FText)                                     BattlePassPurchaseLevelDisclaimer                           OFFSET(getStruct<T>, {0x40, 24, 0, 0})
	SMember(FText)                                     BattlePassPurchaseDescription                               OFFSET(getStruct<T>, {0x58, 24, 0, 0})
	SMember(FString)                                   BattlePassPurchaseConfirmBackgroundURL                      OFFSET(getStruct<T>, {0x70, 16, 0, 0})
	SMember(FCrewTileImages)                           BattlePassTileImages                                        OFFSET(getStruct<T>, {0x80, 32, 0, 0})
};

/// Struct /Script/FortniteUI.CrewDefaultData
/// Size: 0x0040 (0x000000 - 0x000040)
class FCrewDefaultData : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 64;

public:
	SMember(FText)                                     Title                                                       OFFSET(getStruct<T>, {0x0, 24, 0, 0})
	SMember(FText)                                     Description                                                 OFFSET(getStruct<T>, {0x18, 24, 0, 0})
	SMember(FString)                                   BackgroundURL                                               OFFSET(getStruct<T>, {0x30, 16, 0, 0})
};

/// Struct /Script/FortniteUI.CrewTileDetailsData
/// Size: 0x0058 (0x000000 - 0x000058)
class FCrewTileDetailsData : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 88;

public:
	SMember(FString)                                   TileImageURL                                                OFFSET(getStruct<T>, {0x0, 16, 0, 0})
	SMember(FText)                                     Title                                                       OFFSET(getStruct<T>, {0x10, 24, 0, 0})
	SMember(FText)                                     Description                                                 OFFSET(getStruct<T>, {0x28, 24, 0, 0})
	CMember(ECrewDetailsTag)                           tag                                                         OFFSET(get<T>, {0x40, 1, 0, 0})
	SMember(FString)                                   BackgroundImageURL                                          OFFSET(getStruct<T>, {0x48, 16, 0, 0})
};

/// Struct /Script/FortniteUI.CrewTileDataBasic
/// Size: 0x0080 (0x000000 - 0x000080)
class FCrewTileDataBasic : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 128;

public:
	CMember(ECrewTileType)                             TileType                                                    OFFSET(get<T>, {0x8, 1, 0, 0})
	SMember(FText)                                     TileLabel                                                   OFFSET(getStruct<T>, {0x10, 24, 0, 0})
	SMember(FCrewTileDetailsData)                      Details                                                     OFFSET(getStruct<T>, {0x28, 88, 0, 0})
};

/// Struct /Script/FortniteUI.CrewTileDataBattlePass
/// Size: 0x0000 (0x000080 - 0x000080)
class FCrewTileDataBattlePass : public FCrewTileDataBasic
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 128;

public:
};

/// Struct /Script/FortniteUI.CrewTileDataCrewPack
/// Size: 0x0080 (0x000080 - 0x000100)
class FCrewTileDataCrewPack : public FCrewTileDataBasic
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 256;

public:
	CMember(TArray<FString>)                           CrewPackItems                                               OFFSET(get<T>, {0x80, 16, 0, 0})
	DMember(bool)                                      bHasNextCrewPackDetails                                     OFFSET(get<bool>, {0x90, 1, 0, 0})
	SMember(FCrewTileDetailsData)                      NextDetails                                                 OFFSET(getStruct<T>, {0x98, 88, 0, 0})
	CMember(TArray<FString>)                           NextCrewPackItems                                           OFFSET(get<T>, {0xF0, 16, 0, 0})
};

/// Struct /Script/FortniteUI.CrewTileDataProgressiveCosmetic
/// Size: 0x0000 (0x000080 - 0x000080)
class FCrewTileDataProgressiveCosmetic : public FCrewTileDataBasic
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 128;

public:
};

/// Struct /Script/FortniteUI.CrewBenefits
/// Size: 0x0020 (0x000000 - 0x000020)
class FCrewBenefits : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 32;

public:
};

/// Struct /Script/FortniteUI.CrewSubscriptionStateModal
/// Size: 0x0018 (0x000000 - 0x000018)
class FCrewSubscriptionStateModal : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 24;

public:
	CMember(EMcpSubscriptionState)                     SubscriptionState                                           OFFSET(get<T>, {0x0, 1, 0, 0})
	CMember(TArray<FText>)                             BulletPoints                                                OFFSET(get<T>, {0x8, 16, 0, 0})
};

/// Struct /Script/FortniteUI.CrewPlatformAndCountriesPair
/// Size: 0x0018 (0x000000 - 0x000018)
class FCrewPlatformAndCountriesPair : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 24;

public:
	CMember(EAppStore)                                 SubscriptionPlatform                                        OFFSET(get<T>, {0x0, 1, 0, 0})
	SMember(FString)                                   CountryCodes                                                OFFSET(getStruct<T>, {0x8, 16, 0, 0})
};

/// Struct /Script/FortniteUI.CrewTableRow
/// Size: 0x0018 (0x000000 - 0x000018)
class FCrewTableRow : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 24;

public:
	CMember(TArray<FText>)                             RowData                                                     OFFSET(get<T>, {0x0, 16, 0, 0})
	DMember(bool)                                      bIsHeaderRow                                                OFFSET(get<bool>, {0x10, 1, 0, 0})
};

/// Struct /Script/FortniteUI.CrewPlatformTable
/// Size: 0x0018 (0x000000 - 0x000018)
class FCrewPlatformTable : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 24;

public:
	CMember(EAppStore)                                 SubscriptionPlatform                                        OFFSET(get<T>, {0x0, 1, 0, 0})
	CMember(TArray<FCrewTableRow>)                     TableRows                                                   OFFSET(get<T>, {0x8, 16, 0, 0})
};

/// Struct /Script/FortniteUI.CrewPlatformAndCountriesNotificationModal
/// Size: 0x0150 (0x000000 - 0x000150)
class FCrewPlatformAndCountriesNotificationModal : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 336;

public:
	SMember(FString)                                   NotificationId                                              OFFSET(getStruct<T>, {0x0, 16, 0, 0})
	CMember(TArray<FCrewPlatformAndCountriesPair>)     ValidPlatformAndCountriesPairs                              OFFSET(get<T>, {0x10, 16, 0, 0})
	SMember(FText)                                     Title                                                       OFFSET(getStruct<T>, {0x20, 24, 0, 0})
	SMember(FText)                                     DefaultBodyText                                             OFFSET(getStruct<T>, {0x38, 24, 0, 0})
	SMember(FText)                                     BodyTextIfSubscriptionCanceled                              OFFSET(getStruct<T>, {0x50, 24, 0, 0})
	SMember(FText)                                     BodyTextIfNoBodyTable                                       OFFSET(getStruct<T>, {0x68, 24, 0, 0})
	SMember(FText)                                     BodyTextIfNoBodyTableAndSubscriptionCanceled                OFFSET(getStruct<T>, {0x80, 24, 0, 0})
	SMember(FDateTime)                                 EffectiveDate                                               OFFSET(getStruct<T>, {0x98, 8, 0, 0})
	CMember(TArray<FCrewPlatformTable>)                PlatformSpecificBodyTables                                  OFFSET(get<T>, {0xA0, 16, 0, 0})
	SMember(FText)                                     CheckboxText                                                OFFSET(getStruct<T>, {0xB0, 24, 0, 0})
	SMember(FText)                                     DefaultConfirmButtonText                                    OFFSET(getStruct<T>, {0xC8, 24, 0, 0})
	SMember(FText)                                     ConfirmButtonTextIfSubscriptionCanceled                     OFFSET(getStruct<T>, {0xE0, 24, 0, 0})
	SMember(FText)                                     CancelSubscriptionButtonText                                OFFSET(getStruct<T>, {0xF8, 24, 0, 0})
	SMember(FText)                                     MoreInfoText                                                OFFSET(getStruct<T>, {0x110, 24, 0, 0})
	SMember(FText)                                     MoreInfoUrl                                                 OFFSET(getStruct<T>, {0x128, 24, 0, 0})
	SMember(FDateTime)                                 NotificationStartDate                                       OFFSET(getStruct<T>, {0x140, 8, 0, 0})
	SMember(FDateTime)                                 NotificationEndDate                                         OFFSET(getStruct<T>, {0x148, 8, 0, 0})
};

/// Struct /Script/FortniteUI.CrewModals
/// Size: 0x0020 (0x000000 - 0x000020)
class FCrewModals : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 32;

public:
	CMember(TArray<FCrewSubscriptionStateModal>)       CancellationInfoErrorStateModals                            OFFSET(get<T>, {0x0, 16, 0, 0})
	CMember(TArray<FCrewPlatformAndCountriesNotificationModal>) PlatformAndCountriesNotificationModals             OFFSET(get<T>, {0x10, 16, 0, 0})
};

/// Struct /Script/FortniteUI.CrewItemShopTileData
/// Size: 0x0060 (0x000000 - 0x000060)
class FCrewItemShopTileData : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 96;

public:
	SMember(FText)                                     ViolatorText                                                OFFSET(getStruct<T>, {0x0, 24, 0, 0})
	CMember(EViolatorIntensity)                        ViolatorIntensity                                           OFFSET(get<T>, {0x18, 1, 0, 0})
	SMember(FText)                                     NextViolatorText                                            OFFSET(getStruct<T>, {0x20, 24, 0, 0})
	CMember(EViolatorIntensity)                        NextViolatorIntensity                                       OFFSET(get<T>, {0x38, 1, 0, 0})
	SMember(FCrewTileImages)                           ItemShopTileImages                                          OFFSET(getStruct<T>, {0x40, 32, 0, 0})
};

/// Struct /Script/FortniteUI.CrewItemShopTileEntry
/// Size: 0x0068 (0x000000 - 0x000068)
class FCrewItemShopTileEntry : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 104;

public:
	CMember(ECrewItemShopTileType)                     TileType                                                    OFFSET(get<T>, {0x0, 1, 0, 0})
	SMember(FCrewItemShopTileData)                     TileData                                                    OFFSET(getStruct<T>, {0x8, 96, 0, 0})
};

/// Struct /Script/FortniteUI.CrewItemShopData
/// Size: 0x0010 (0x000000 - 0x000010)
class FCrewItemShopData : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 16;

public:
	CMember(TArray<FCrewItemShopTileEntry>)            TileEntries                                                 OFFSET(get<T>, {0x0, 16, 0, 0})
};

/// Struct /Script/FortniteUI.CrewScreenData
/// Size: 0x0140 (0x000000 - 0x000140)
class FCrewScreenData : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 320;

public:
	SMember(FText)                                     CrewDisclaimer                                              OFFSET(getStruct<T>, {0x0, 24, 0, 0})
	SMember(FCrewDefaultData)                          DefaultData                                                 OFFSET(getStruct<T>, {0x18, 64, 0, 0})
	SMember(FCrewBenefits)                             Benefits                                                    OFFSET(getStruct<T>, {0x58, 32, 0, 0})
	SMember(FCrewModals)                               CrewModals                                                  OFFSET(getStruct<T>, {0x78, 32, 0, 0})
	SMember(FCrewItemShopData)                         ItemShopData                                                OFFSET(getStruct<T>, {0x98, 16, 0, 0})
	SMember(FCrewItemShopTileData)                     ItemShopTileData                                            OFFSET(getStruct<T>, {0xA8, 96, 0, 0})
	SMember(FAthenaSubscriptionProgressiveInfo)        ProgressiveInfo                                             OFFSET(getStruct<T>, {0x108, 40, 0, 0})
	SMember(FSubscriptionModals)                       SubModals                                                   OFFSET(getStruct<T>, {0x130, 16, 0, 0})
};

/// Struct /Script/FortniteUI.ImageRef
/// Size: 0x0018 (0x000000 - 0x000018)
class FImageRef : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 24;

public:
	DMember(int32_t)                                   Width                                                       OFFSET(get<int32_t>, {0x0, 4, 0, 0})
	DMember(int32_t)                                   Height                                                      OFFSET(get<int32_t>, {0x4, 4, 0, 0})
	SMember(FString)                                   URL                                                         OFFSET(getStruct<T>, {0x8, 16, 0, 0})
};

/// Struct /Script/FortniteUI.AthenaMOTDBase
/// Size: 0x00E0 (0x000000 - 0x0000E0)
class FAthenaMOTDBase : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 224;

public:
	CMember(EAthenaNewsEntryType)                      EntryType                                                   OFFSET(get<T>, {0x8, 1, 0, 0})
	SMember(FString)                                   Title                                                       OFFSET(getStruct<T>, {0x10, 16, 0, 0})
	SMember(FString)                                   Body                                                        OFFSET(getStruct<T>, {0x20, 16, 0, 0})
	CMember(TArray<FImageRef>)                         Images                                                      OFFSET(get<T>, {0x30, 16, 0, 0})
	CMember(TArray<FImageRef>)                         TileImages                                                  OFFSET(get<T>, {0x40, 16, 0, 0})
	SMember(FColor)                                    CustomDarkColor                                             OFFSET(getStruct<T>, {0x50, 4, 0, 0})
	SMember(FColor)                                    CustomLightColor                                            OFFSET(getStruct<T>, {0x54, 4, 0, 0})
	SMember(FString)                                   AdSpace                                                     OFFSET(getStruct<T>, {0x58, 16, 0, 0})
	SMember(FString)                                   TabTitleOverride                                            OFFSET(getStruct<T>, {0x68, 16, 0, 0})
	SMember(FString)                                   ButtonTextOverride                                          OFFSET(getStruct<T>, {0x78, 16, 0, 0})
	DMember(bool)                                      bHasCustomColor                                             OFFSET(get<bool>, {0x88, 1, 0, 0})
	DMember(bool)                                      bIsFtueMotd                                                 OFFSET(get<bool>, {0x89, 1, 0, 0})
};

/// Struct /Script/FortniteUI.SmallNewsMOTD
/// Size: 0x0000 (0x0000E0 - 0x0000E0)
class FSmallNewsMOTD : public FAthenaMOTDBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 224;

public:
};

/// Struct /Script/FortniteUI.ItemMOTD
/// Size: 0x0018 (0x0000E0 - 0x0000F8)
class FItemMOTD : public FAthenaMOTDBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 248;

public:
};

/// Struct /Script/FortniteUI.NavigateToTabMOTD
/// Size: 0x0018 (0x0000E0 - 0x0000F8)
class FNavigateToTabMOTD : public FAthenaMOTDBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 248;

public:
};

/// Struct /Script/FortniteUI.SettingsMOTD
/// Size: 0x0020 (0x0000E0 - 0x000100)
class FSettingsMOTD : public FAthenaMOTDBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 256;

public:
};

/// Struct /Script/FortniteUI.ChallengeMOTD
/// Size: 0x0010 (0x0000E0 - 0x0000F0)
class FChallengeMOTD : public FAthenaMOTDBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 240;

public:
};

/// Struct /Script/FortniteUI.WebsiteMOTD
/// Size: 0x0020 (0x0000E0 - 0x000100)
class FWebsiteMOTD : public FAthenaMOTDBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 256;

public:
};

/// Struct /Script/FortniteUI.SpatialScreenMOTD
/// Size: 0x0010 (0x0000E0 - 0x0000F0)
class FSpatialScreenMOTD : public FAthenaMOTDBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 240;

public:
};

/// Struct /Script/FortniteUI.NavigateToBattlePassSubPageMOTD
/// Size: 0x0028 (0x0000E0 - 0x000108)
class FNavigateToBattlePassSubPageMOTD : public FAthenaMOTDBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 264;

public:
};

/// Struct /Script/FortniteUI.CreativeMOTD
/// Size: 0x0030 (0x0000E0 - 0x000110)
class FCreativeMOTD : public FAthenaMOTDBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 272;

public:
};

/// Struct /Script/FortniteUI.NavigateToSubscriptionSubPageMOTD
/// Size: 0x0008 (0x0000E0 - 0x0000E8)
class FNavigateToSubscriptionSubPageMOTD : public FAthenaMOTDBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 232;

public:
};

/// Struct /Script/FortniteUI.NavigateToSocialMenuMOTD
/// Size: 0x0008 (0x0000E0 - 0x0000E8)
class FNavigateToSocialMenuMOTD : public FAthenaMOTDBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 232;

public:
};

/// Struct /Script/FortniteUI.NavigateToSocialTagsSubPageMOTD
/// Size: 0x0000 (0x0000E0 - 0x0000E0)
class FNavigateToSocialTagsSubPageMOTD : public FAthenaMOTDBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 224;

public:
};

/// Struct /Script/FortniteUI.NavigateToRebootRallySubPageMOTD
/// Size: 0x0000 (0x0000E0 - 0x0000E0)
class FNavigateToRebootRallySubPageMOTD : public FAthenaMOTDBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 224;

public:
};

/// Struct /Script/FortniteUI.EventMOTD
/// Size: 0x0008 (0x0000E0 - 0x0000E8)
class FEventMOTD : public FAthenaMOTDBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 232;

public:
};

/// Struct /Script/FortniteUI.DiscoveryMOTD
/// Size: 0x0020 (0x0000E0 - 0x000100)
class FDiscoveryMOTD : public FAthenaMOTDBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 256;

public:
};

/// Struct /Script/FortniteUI.NavigateToCompetitiveSubPageMOTD
/// Size: 0x0010 (0x0000E0 - 0x0000F0)
class FNavigateToCompetitiveSubPageMOTD : public FAthenaMOTDBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 240;

public:
};

/// Struct /Script/FortniteUI.NavigateToMapSubPageMOTD
/// Size: 0x0008 (0x0000E0 - 0x0000E8)
class FNavigateToMapSubPageMOTD : public FAthenaMOTDBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 232;

public:
};

/// Struct /Script/FortniteUI.NavigateToHabaneroSubPageMOTD
/// Size: 0x0000 (0x0000E0 - 0x0000E0)
class FNavigateToHabaneroSubPageMOTD : public FAthenaMOTDBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 224;

public:
};

/// Struct /Script/FortniteUI.AthenaMessageEntry
/// Size: 0x0050 (0x000000 - 0x000050)
class FAthenaMessageEntry : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 80;

public:
	SMember(FString)                                   Title                                                       OFFSET(getStruct<T>, {0x0, 16, 0, 0})
	SMember(FString)                                   Body                                                        OFFSET(getStruct<T>, {0x10, 16, 0, 0})
	SMember(FString)                                   Image                                                       OFFSET(getStruct<T>, {0x20, 16, 0, 0})
	SMember(FString)                                   Type                                                        OFFSET(getStruct<T>, {0x30, 16, 0, 0})
	SMember(FString)                                   AdSpace                                                     OFFSET(getStruct<T>, {0x40, 16, 0, 0})
};

/// Struct /Script/FortniteUI.AthenaEmergencyNotice
/// Size: 0x0040 (0x000000 - 0x000040)
class FAthenaEmergencyNotice : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 64;

public:
	SMember(FString)                                   Title                                                       OFFSET(getStruct<T>, {0x0, 16, 0, 0})
	SMember(FString)                                   Body                                                        OFFSET(getStruct<T>, {0x10, 16, 0, 0})
};

/// Struct /Script/FortniteUI.AthenaSpectatorUITeamEntry
/// Size: 0x0020 (0x000000 - 0x000020)
class FAthenaSpectatorUITeamEntry : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 32;

public:
};

/// Struct /Script/FortniteUI.ShowdownTournamentData
/// Size: 0x01F8 (0x000000 - 0x0001F8)
class FShowdownTournamentData : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 504;

public:
	SMember(FString)                                   Tournament_Display_Id                                       OFFSET(getStruct<T>, {0x0, 16, 0, 0})
	SMember(FText)                                     Title_Line                                                  OFFSET(getStruct<T>, {0x10, 24, 0, 0})
	SMember(FText)                                     Title_Line1                                                 OFFSET(getStruct<T>, {0x28, 24, 0, 0})
	SMember(FText)                                     Schedule_Info                                               OFFSET(getStruct<T>, {0x40, 24, 0, 0})
	SMember(FString)                                   Poster_Front_Image                                          OFFSET(getStruct<T>, {0x58, 16, 0, 0})
	SMember(FString)                                   Poster_Back_Image                                           OFFSET(getStruct<T>, {0x68, 16, 0, 0})
	SMember(FText)                                     Flavor_Description                                          OFFSET(getStruct<T>, {0x78, 24, 0, 0})
	SMember(FText)                                     Details_Description                                         OFFSET(getStruct<T>, {0x90, 24, 0, 0})
	SMember(FText)                                     Short_Format_Title                                          OFFSET(getStruct<T>, {0xA8, 24, 0, 0})
	SMember(FText)                                     Long_Format_Title                                           OFFSET(getStruct<T>, {0xC0, 24, 0, 0})
	SMember(FText)                                     Background_Title                                            OFFSET(getStruct<T>, {0xD8, 24, 0, 0})
	DMember(int32_t)                                   Pin_Score_Requirement                                       OFFSET(get<int32_t>, {0xF0, 4, 0, 0})
	SMember(FText)                                     Pin_Earned_Text                                             OFFSET(getStruct<T>, {0xF8, 24, 0, 0})
	SMember(FLinearColor)                              base_color                                                  OFFSET(getStruct<T>, {0x110, 16, 0, 0})
	SMember(FLinearColor)                              Primary_Color                                               OFFSET(getStruct<T>, {0x120, 16, 0, 0})
	SMember(FLinearColor)                              Secondary_Color                                             OFFSET(getStruct<T>, {0x130, 16, 0, 0})
	SMember(FLinearColor)                              Highlight_Color                                             OFFSET(getStruct<T>, {0x140, 16, 0, 0})
	SMember(FLinearColor)                              Title_Color                                                 OFFSET(getStruct<T>, {0x150, 16, 0, 0})
	SMember(FLinearColor)                              Shadow_Color                                                OFFSET(getStruct<T>, {0x160, 16, 0, 0})
	SMember(FLinearColor)                              Background_Left_Color                                       OFFSET(getStruct<T>, {0x170, 16, 0, 0})
	SMember(FLinearColor)                              Background_Right_Color                                      OFFSET(getStruct<T>, {0x180, 16, 0, 0})
	SMember(FLinearColor)                              Background_Text_Color                                       OFFSET(getStruct<T>, {0x190, 16, 0, 0})
	SMember(FLinearColor)                              Poster_Fade_Color                                           OFFSET(getStruct<T>, {0x1A0, 16, 0, 0})
	SMember(FString)                                   Playlist_Tile_Image                                         OFFSET(getStruct<T>, {0x1B0, 16, 0, 0})
	SMember(FString)                                   Loading_Screen_Image                                        OFFSET(getStruct<T>, {0x1C0, 16, 0, 0})
	SMember(FString)                                   Style_Info_Id                                               OFFSET(getStruct<T>, {0x1D0, 16, 0, 0})
	SMember(FString)                                   Alert_Text                                                  OFFSET(getStruct<T>, {0x1E0, 16, 0, 0})
	CMember(EFortTournamentAlertType)                  AlertType                                                   OFFSET(get<T>, {0x1F0, 1, 0, 0})
};

/// Struct /Script/FortniteUI.ShowdownTournamentJsonObject
/// Size: 0x0010 (0x000000 - 0x000010)
class FShowdownTournamentJsonObject : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 16;

public:
	CMember(TArray<FShowdownTournamentData>)           Tournaments                                                 OFFSET(get<T>, {0x0, 16, 0, 0})
};

/// Struct /Script/FortniteUI.ShowdownTournamentSource
/// Size: 0x0030 (0x000000 - 0x000030)
class FShowdownTournamentSource : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 48;

public:
	SMember(FShowdownTournamentJsonObject)             Tournament_Info                                             OFFSET(getStruct<T>, {0x0, 16, 0, 0})
	SMember(FString)                                   _title                                                      OFFSET(getStruct<T>, {0x10, 16, 0, 0})
	SMember(FString)                                   _locale                                                     OFFSET(getStruct<T>, {0x20, 16, 0, 0})
};

/// Struct /Script/FortniteUI.FortShowdownScoringRuleDisplayInfo
/// Size: 0x0078 (0x000000 - 0x000078)
class FFortShowdownScoringRuleDisplayInfo : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 120;

public:
	SMember(FName)                                     Name                                                        OFFSET(getStruct<T>, {0x0, 4, 0, 0})
	SMember(FText)                                     Description                                                 OFFSET(getStruct<T>, {0x8, 24, 0, 0})
	SMember(FText)                                     PosterDescription                                           OFFSET(getStruct<T>, {0x20, 24, 0, 0})
	SMember(FText)                                     PosterIntervalDescription                                   OFFSET(getStruct<T>, {0x38, 24, 0, 0})
	CMember(TWeakObjectPtr<UTexture2D*>)               Icon                                                        OFFSET(get<T>, {0x50, 32, 0, 0})
	DMember(bool)                                      bShowScoreToastNotifications                                OFFSET(get<bool>, {0x70, 1, 0, 0})
};

/// Struct /Script/FortniteUI.SubgameDisplayData
/// Size: 0x0098 (0x000000 - 0x000098)
class FSubgameDisplayData : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 152;

public:
	SMember(FText)                                     Title                                                       OFFSET(getStruct<T>, {0x0, 24, 0, 0})
	SMember(FText)                                     Description                                                 OFFSET(getStruct<T>, {0x18, 24, 0, 0})
	SMember(FText)                                     SpecialMessage                                              OFFSET(getStruct<T>, {0x30, 24, 0, 0})
	SMember(FText)                                     StandardMessageLine1                                        OFFSET(getStruct<T>, {0x48, 24, 0, 0})
	SMember(FText)                                     StandardMessageLine2                                        OFFSET(getStruct<T>, {0x60, 24, 0, 0})
	SMember(FString)                                   Image                                                       OFFSET(getStruct<T>, {0x78, 16, 0, 0})
	SMember(FLinearColor)                              Color                                                       OFFSET(getStruct<T>, {0x88, 16, 0, 0})
};

/// Struct /Script/FortniteUI.SubgameScreenSource
/// Size: 0x01E8 (0x000000 - 0x0001E8)
class FSubgameScreenSource : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 488;

public:
	SMember(FString)                                   _title                                                      OFFSET(getStruct<T>, {0x0, 16, 0, 0})
	SMember(FString)                                   __locale                                                    OFFSET(getStruct<T>, {0x10, 16, 0, 0})
	SMember(FSubgameDisplayData)                       Creative                                                    OFFSET(getStruct<T>, {0x20, 152, 0, 0})
	SMember(FSubgameDisplayData)                       SaveTheWorld                                                OFFSET(getStruct<T>, {0xB8, 152, 0, 0})
	SMember(FSubgameDisplayData)                       BattleRoyale                                                OFFSET(getStruct<T>, {0x150, 152, 0, 0})
};

/// Struct /Script/FortniteUI.CreativeAdData
/// Size: 0x0068 (0x000000 - 0x000068)
class FCreativeAdData : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 104;

public:
	SMember(FString)                                   Header                                                      OFFSET(getStruct<T>, {0x0, 16, 0, 0})
	SMember(FString)                                   Sub_Header                                                  OFFSET(getStruct<T>, {0x10, 16, 0, 0})
	SMember(FString)                                   Description                                                 OFFSET(getStruct<T>, {0x20, 16, 0, 0})
	SMember(FString)                                   Creator_Name                                                OFFSET(getStruct<T>, {0x30, 16, 0, 0})
	SMember(FString)                                   Island_Code                                                 OFFSET(getStruct<T>, {0x40, 16, 0, 0})
	CMember(EFortCreativeAdType)                       Ad_Type                                                     OFFSET(get<T>, {0x50, 1, 0, 0})
	CMember(EFortCreativeAdColorPreset)                Ad_Color_Preset                                             OFFSET(get<T>, {0x51, 1, 0, 0})
	SMember(FString)                                   Image                                                       OFFSET(getStruct<T>, {0x58, 16, 0, 0})
};

/// Struct /Script/FortniteUI.CreativeAdJsonObject
/// Size: 0x0010 (0x000000 - 0x000010)
class FCreativeAdJsonObject : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 16;

public:
	CMember(TArray<FCreativeAdData>)                   Ads                                                         OFFSET(get<T>, {0x0, 16, 0, 0})
};

/// Struct /Script/FortniteUI.CreativeAdSource
/// Size: 0x0030 (0x000000 - 0x000030)
class FCreativeAdSource : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 48;

public:
	SMember(FString)                                   _title                                                      OFFSET(getStruct<T>, {0x0, 16, 0, 0})
	SMember(FString)                                   __locale                                                    OFFSET(getStruct<T>, {0x10, 16, 0, 0})
	SMember(FCreativeAdJsonObject)                     Ad_Info                                                     OFFSET(getStruct<T>, {0x20, 16, 0, 0})
};

/// Struct /Script/FortniteUI.DynamicBackground
/// Size: 0x0048 (0x000000 - 0x000048)
class FDynamicBackground : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 72;

public:
	SMember(FString)                                   _title                                                      OFFSET(getStruct<T>, {0x0, 16, 0, 0})
	SMember(FString)                                   __locale                                                    OFFSET(getStruct<T>, {0x10, 16, 0, 0})
	CMember(EDynamicBackgroudKey)                      Key                                                         OFFSET(get<T>, {0x20, 1, 0, 0})
	SMember(FString)                                   BackgroundImage                                             OFFSET(getStruct<T>, {0x28, 16, 0, 0})
	SMember(FString)                                   Stage                                                       OFFSET(getStruct<T>, {0x38, 16, 0, 0})
};

/// Struct /Script/FortniteUI.DynamicBackgrounds
/// Size: 0x0010 (0x000000 - 0x000010)
class FDynamicBackgrounds : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 16;

public:
	CMember(TArray<FDynamicBackground>)                Backgrounds                                                 OFFSET(get<T>, {0x0, 16, 0, 0})
};

/// Struct /Script/FortniteUI.DynamicBackgroundsSource
/// Size: 0x0040 (0x000000 - 0x000040)
class FDynamicBackgroundsSource : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 64;

public:
	SMember(FString)                                   _title                                                      OFFSET(getStruct<T>, {0x0, 16, 0, 0})
	SMember(FString)                                   __locale                                                    OFFSET(getStruct<T>, {0x10, 16, 0, 0})
	SMember(FString)                                   LastModified                                                OFFSET(getStruct<T>, {0x20, 16, 0, 0})
	SMember(FDynamicBackgrounds)                       Backgrounds                                                 OFFSET(getStruct<T>, {0x30, 16, 0, 0})
};

/// Struct /Script/FortniteUI.CmsJsonMessages
/// Size: 0x0268 (0x000000 - 0x000268)
class FCmsJsonMessages : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 616;

public:
	SMember(FString)                                   _title                                                      OFFSET(getStruct<T>, {0x0, 16, 0, 0})
	SMember(FString)                                   _locale                                                     OFFSET(getStruct<T>, {0x10, 16, 0, 0})
	SMember(FShowdownTournamentSource)                 TournamentInformation                                       OFFSET(getStruct<T>, {0x20, 48, 0, 0})
	SMember(FSubgameScreenSource)                      SubGameInfo                                                 OFFSET(getStruct<T>, {0x50, 488, 0, 0})
	SMember(FCreativeAdSource)                         CreativeAds                                                 OFFSET(getStruct<T>, {0x238, 48, 0, 0})
};

/// Struct /Script/FortniteUI.AthenaShopCarouselItem
/// Size: 0x0068 (0x000000 - 0x000068)
class FAthenaShopCarouselItem : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 104;

public:
	SMember(FText)                                     PreviewTitle                                                OFFSET(getStruct<T>, {0x0, 24, 0, 0})
	SMember(FText)                                     FullTitle                                                   OFFSET(getStruct<T>, {0x18, 24, 0, 0})
	SMember(FString)                                   TileImage                                                   OFFSET(getStruct<T>, {0x30, 16, 0, 0})
	SMember(FString)                                   VideoString                                                 OFFSET(getStruct<T>, {0x40, 16, 0, 0})
	SMember(FString)                                   OfferId                                                     OFFSET(getStruct<T>, {0x50, 16, 0, 0})
	DMember(int32_t)                                   LandingPriority                                             OFFSET(get<int32_t>, {0x60, 4, 0, 0})
	CMember(EItemShopNavigationAction)                 Action                                                      OFFSET(get<T>, {0x64, 1, 0, 0})
	DMember(bool)                                      bHidden                                                     OFFSET(get<bool>, {0x65, 1, 0, 0})
};

/// Struct /Script/FortniteUI.AthenaShopSection
/// Size: 0x0088 (0x000000 - 0x000088)
class FAthenaShopSection : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 136;

public:
	SMember(FName)                                     SectionId                                                   OFFSET(getStruct<T>, {0x0, 4, 0, 0})
	SMember(FText)                                     SectionDisplayName                                          OFFSET(getStruct<T>, {0x8, 24, 0, 0})
	DMember(bool)                                      bSortOffersByOwnership                                      OFFSET(get<bool>, {0x20, 1, 0, 0})
	DMember(bool)                                      bShowIneligibleOffers                                       OFFSET(get<bool>, {0x21, 1, 0, 0})
	DMember(bool)                                      bShowIneligibleOffersIfGiftable                             OFFSET(get<bool>, {0x22, 1, 0, 0})
	DMember(bool)                                      bShowTimer                                                  OFFSET(get<bool>, {0x23, 1, 0, 0})
	DMember(bool)                                      bEnableToastNotification                                    OFFSET(get<bool>, {0x24, 1, 0, 0})
	DMember(int32_t)                                   LandingPriority                                             OFFSET(get<int32_t>, {0x28, 4, 0, 0})
	SMember(FDynamicBackground)                        SectionBackground                                           OFFSET(getStruct<T>, {0x30, 72, 0, 0})
	DMember(bool)                                      bHidden                                                     OFFSET(get<bool>, {0x78, 1, 0, 0})
	SMember(FDateTime)                                 DateToResetItemShopLanding                                  OFFSET(getStruct<T>, {0x80, 8, 0, 0})
};

/// Struct /Script/FortniteUI.PlatformPurchaseMessaging
/// Size: 0x0010 (0x000000 - 0x000010)
class FPlatformPurchaseMessaging : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 16;

public:
	SMember(FPlatformPurchaseErrorCodeMessages)        ErrorCodeMessages                                           OFFSET(getStruct<T>, {0x0, 16, 0, 0})
};

/// Struct /Script/FortniteUI.PlatformPurchaseErrorCodeMessages
/// Size: 0x0010 (0x000000 - 0x000010)
class FPlatformPurchaseErrorCodeMessages : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 16;

public:
	CMember(TArray<FPlatformPurchaseErrorCodeMessage>) ErrorCodeMessageList                                        OFFSET(get<T>, {0x0, 16, 0, 0})
};

/// Struct /Script/FortniteUI.PlatformPurchaseErrorCodeMessage
/// Size: 0x0038 (0x000000 - 0x000038)
class FPlatformPurchaseErrorCodeMessage : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 56;

public:
	SMember(FString)                                   ErrorCode                                                   OFFSET(getStruct<T>, {0x0, 16, 0, 0})
	SMember(FText)                                     Title                                                       OFFSET(getStruct<T>, {0x10, 24, 0, 0})
	CMember(TArray<FText>)                             Messages                                                    OFFSET(get<T>, {0x28, 16, 0, 0})
};

/// Struct /Script/FortniteUI.AthenaShopSpecialOffer
/// Size: 0x00A0 (0x000000 - 0x0000A0)
class FAthenaShopSpecialOffer : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 160;

public:
	DMember(bool)                                      bSpecialOfferEnabled                                        OFFSET(get<bool>, {0x0, 1, 0, 0})
	SMember(FVideoWidgetConfig)                        SpecialOfferVideo                                           OFFSET(getStruct<T>, {0x8, 152, 0, 0})
};

/// Struct /Script/FortniteUI.SocialEventJSON
/// Size: 0x0028 (0x000000 - 0x000028)
class FSocialEventJSON : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 40;

public:
	DMember(int32_t)                                   event_id                                                    OFFSET(get<int32_t>, {0x0, 4, 0, 0})
	SMember(FText)                                     Title                                                       OFFSET(getStruct<T>, {0x8, 24, 0, 0})
	SMember(FDateTime)                                 starts_at_utc                                               OFFSET(getStruct<T>, {0x20, 8, 0, 0})
};

/// Struct /Script/FortniteUI.SocialEventsJsonObject
/// Size: 0x0010 (0x000000 - 0x000010)
class FSocialEventsJsonObject : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 16;

public:
	CMember(TArray<FSocialEventJSON>)                  Events                                                      OFFSET(get<T>, {0x0, 16, 0, 0})
};

/// Struct /Script/FortniteUI.SocialEventsSource
/// Size: 0x0040 (0x000000 - 0x000040)
class FSocialEventsSource : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 64;

public:
	SMember(FString)                                   _title                                                      OFFSET(getStruct<T>, {0x0, 16, 0, 0})
	SMember(FString)                                   __locale                                                    OFFSET(getStruct<T>, {0x10, 16, 0, 0})
	SMember(FString)                                   LastModified                                                OFFSET(getStruct<T>, {0x20, 16, 0, 0})
	SMember(FSocialEventsJsonObject)                   SocialEvents                                                OFFSET(getStruct<T>, {0x30, 16, 0, 0})
};

/// Struct /Script/FortniteUI.FortActivityImageCache
/// Size: 0x0018 (0x000000 - 0x000018)
class FFortActivityImageCache : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 24;

public:
};

/// Struct /Script/FortniteUI.FortActivityImageRequest
/// Size: 0x0010 (0x000000 - 0x000010)
class FFortActivityImageRequest : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 16;

public:
	CMember(TArray<UFortGameActivity*>)                GameActivities                                              OFFSET(get<T>, {0x0, 16, 0, 0})
};

/// Struct /Script/FortniteUI.FortActivityCompressedImageCache
/// Size: 0x0018 (0x000000 - 0x000018)
class FFortActivityCompressedImageCache : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 24;

public:
	CMember(TArray<char>)                              CompressedImage                                             OFFSET(get<T>, {0x0, 16, 0, 0})
};

/// Struct /Script/FortniteUI.FortActivityImagePayload
/// Size: 0x0038 (0x000000 - 0x000038)
class FFortActivityImagePayload : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 56;

public:
};

/// Struct /Script/FortniteUI.FortMissionRewardInfo
/// Size: 0x00F0 (0x000000 - 0x0000F0)
class FFortMissionRewardInfo : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 240;

public:
	SMember(FSlateBrush)                               Icon                                                        OFFSET(getStruct<T>, {0x0, 192, 0, 0})
	SMember(FText)                                     DisplayName                                                 OFFSET(getStruct<T>, {0xC0, 24, 0, 0})
	CMember(UFortItem*)                                Item                                                        OFFSET(get<T>, {0xD8, 8, 0, 0})
	DMember(bool)                                      bIsMissionAlertReward                                       OFFSET(get<bool>, {0xE0, 1, 0, 0})
};

/// Struct /Script/FortniteUI.FortMissionDetails
/// Size: 0x0168 (0x000000 - 0x000168)
class FFortMissionDetails : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 360;

public:
	CMember(EFortTheaterMapTileType)                   TileType                                                    OFFSET(get<T>, {0x0, 1, 0, 0})
	SMember(FText)                                     TheaterDisplayName                                          OFFSET(getStruct<T>, {0x8, 24, 0, 0})
	SMember(FText)                                     MissionName                                                 OFFSET(getStruct<T>, {0x20, 24, 0, 0})
	SMember(FText)                                     MissionDescription                                          OFFSET(getStruct<T>, {0x38, 24, 0, 0})
	DMember(bool)                                      bIsGroupContent                                             OFFSET(get<bool>, {0x50, 1, 0, 0})
	CMember(UFortMissionGenerator*)                    MissionDefinition                                           OFFSET(get<T>, {0x58, 8, 0, 0})
	SMember(FText)                                     ZoneName                                                    OFFSET(getStruct<T>, {0x60, 24, 0, 0})
	SMember(FText)                                     ZoneDescription                                             OFFSET(getStruct<T>, {0x78, 24, 0, 0})
	SMember(FText)                                     RegionThemeName                                             OFFSET(getStruct<T>, {0x90, 24, 0, 0})
	CMember(TWeakObjectPtr<USlateBrushAsset*>)         RegionThemeIcon                                             OFFSET(get<T>, {0xA8, 32, 0, 0})
	SMember(FText)                                     DifficultyName                                              OFFSET(getStruct<T>, {0xC8, 24, 0, 0})
	CMember(TArray<FFortMissionRewardInfo>)            MissionRewards                                              OFFSET(get<T>, {0xE0, 16, 0, 0})
	SMember(FTimespan)                                 AvailableTime                                               OFFSET(getStruct<T>, {0xF0, 8, 0, 0})
	CMember(ERatingsEnforcementType)                   RatingsEnforcement                                          OFFSET(get<T>, {0xF8, 1, 0, 0})
	DMember(int32_t)                                   RequiredBaseRating                                          OFFSET(get<int32_t>, {0xFC, 4, 0, 0})
	DMember(int32_t)                                   RecommendedBaseRating                                       OFFSET(get<int32_t>, {0x100, 4, 0, 0})
	DMember(int32_t)                                   MaxBaseRating                                               OFFSET(get<int32_t>, {0x104, 4, 0, 0})
	DMember(int32_t)                                   ContentDifficultyLevel                                      OFFSET(get<int32_t>, {0x108, 4, 0, 0})
	DMember(bool)                                      bIsOnboarding                                               OFFSET(get<bool>, {0x10C, 1, 0, 0})
	DMember(int32_t)                                   LootLevel                                                   OFFSET(get<int32_t>, {0x110, 4, 0, 0})
	DMember(bool)                                      bOverrideConningText                                        OFFSET(get<bool>, {0x114, 1, 0, 0})
	SMember(FText)                                     ConningOverrideText                                         OFFSET(getStruct<T>, {0x118, 24, 0, 0})
	SMember(FString)                                   TheaterUniqueId                                             OFFSET(getStruct<T>, {0x130, 16, 0, 0})
	CMember(UFortCloudSaveItemDefinition*)             AssociatedCloudSaveItemDefinition                           OFFSET(get<T>, {0x140, 8, 0, 0})
	CMember(TArray<UFortGameplayModifierItemDefinition*>) GameplayModifiers                                        OFFSET(get<T>, {0x148, 16, 0, 0})
	CMember(TArray<FText>)                             Objectives                                                  OFFSET(get<T>, {0x158, 16, 0, 0})
};

/// Struct /Script/FortniteUI.UnlockableVariantPreviewInfo
/// Size: 0x0028 (0x000000 - 0x000028)
class FUnlockableVariantPreviewInfo : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 40;

public:
	DMember(bool)                                      bIsValid                                                    OFFSET(get<bool>, {0x0, 1, 0, 0})
	DMember(int32_t)                                   SetNumber                                                   OFFSET(get<int32_t>, {0x4, 4, 0, 0})
	DMember(int32_t)                                   SetCount                                                    OFFSET(get<int32_t>, {0x8, 4, 0, 0})
	SMember(FText)                                     UnlockCondition                                             OFFSET(getStruct<T>, {0x10, 24, 0, 0})
};

/// Struct /Script/FortniteUI.FortFrontEndFeatureStruct
/// Size: 0x0018 (0x000000 - 0x000018)
class FFortFrontEndFeatureStruct : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 24;

public:
	CMember(EFortFrontEndFeatureState)                 CurrentState                                                OFFSET(get<T>, {0x0, 1, 0, 0})
	CMember(EFortFrontEndFeatureState)                 ForcedState                                                 OFFSET(get<T>, {0x1, 1, 0, 0})
	CMember(EFortFrontEndFeatureStateReason)           ForcedStateReason                                           OFFSET(get<T>, {0x2, 1, 0, 0})
	SMember(FMulticastInlineDelegate)                  ChangeDelegate                                              OFFSET(getStruct<T>, {0x8, 16, 0, 0})
};

/// Struct /Script/FortniteUI.ViewVaultItemsParams
/// Size: 0x0018 (0x000000 - 0x000018)
class FViewVaultItemsParams : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 24;

public:
	CMember(TArray<UFortItemDefinition*>)              ItemsToView                                                 OFFSET(get<T>, {0x0, 16, 0, 0})
};

/// Struct /Script/FortniteUI.FortBasicMissionInfo
/// Size: 0x04F0 (0x000000 - 0x0004F0)
class FFortBasicMissionInfo : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 1264;

public:
	SMember(FText)                                     MissionName                                                 OFFSET(getStruct<T>, {0x0, 24, 0, 0})
	SMember(FFortMultiSizeBrush)                       MissionIcons                                                OFFSET(getStruct<T>, {0x20, 1152, 0, 0})
	SMember(FText)                                     TheaterName                                                 OFFSET(getStruct<T>, {0x4A0, 24, 0, 0})
	SMember(FText)                                     DifficultyName                                              OFFSET(getStruct<T>, {0x4B8, 24, 0, 0})
	CMember(UMediaSource*)                             EndOfMissionMediaSource                                     OFFSET(get<T>, {0x4D0, 8, 0, 0})
	CMember(UMediaSource*)                             EndOfMissionMediaSourceStreamed                             OFFSET(get<T>, {0x4D8, 8, 0, 0})
	DMember(bool)                                      bSkipEndOfMissionVideo                                      OFFSET(get<bool>, {0x4E0, 1, 0, 0})
	DMember(bool)                                      bIsGroupContent                                             OFFSET(get<bool>, {0x4E1, 1, 0, 0})
};

/// Struct /Script/FortniteUI.FortItemDelta
/// Size: 0x0010 (0x000000 - 0x000010)
class FFortItemDelta : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 16;

public:
	CMember(UFortItemDefinition*)                      ItemDefinition                                              OFFSET(get<T>, {0x0, 8, 0, 0})
	DMember(int32_t)                                   BaseAmount                                                  OFFSET(get<int32_t>, {0x8, 4, 0, 0})
	DMember(int32_t)                                   DeltaAmount                                                 OFFSET(get<int32_t>, {0xC, 4, 0, 0})
};

/// Struct /Script/FortniteUI.FortItemListFilter
/// Size: 0x0018 (0x000000 - 0x000018)
class FFortItemListFilter : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 24;

public:
	SMember(FString)                                   SearchText                                                  OFFSET(getStruct<T>, {0x0, 16, 0, 0})
	CMember(EFortInventoryFilter)                      FilterType                                                  OFFSET(get<T>, {0x10, 1, 0, 0})
	DMember(bool)                                      bInStorageVault                                             OFFSET(get<bool>, {0x11, 1, 0, 0})
	DMember(bool)                                      bIncludeVaultOverflow                                       OFFSET(get<bool>, {0x12, 1, 0, 0})
};

/// Struct /Script/FortniteUI.FortPickerTemporaryWheelItem
/// Size: 0x0020 (0x000000 - 0x000020)
class FFortPickerTemporaryWheelItem : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 32;

public:
	SMember(FText)                                     LabelOverride                                               OFFSET(getStruct<T>, {0x0, 24, 0, 0})
	CMember(UFortItemDefinition*)                      Item                                                        OFFSET(get<T>, {0x18, 8, 0, 0})
};

/// Struct /Script/FortniteUI.FortPickerTemporaryWheel
/// Size: 0x0030 (0x000000 - 0x000030)
class FFortPickerTemporaryWheel : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 48;

public:
	CMember(TArray<FFortPickerTemporaryWheelItem>)     Items                                                       OFFSET(get<T>, {0x20, 16, 0, 0})
};

/// Struct /Script/FortniteUI.TrackedTrapTimeAndCount
/// Size: 0x0008 (0x000000 - 0x000008)
class FTrackedTrapTimeAndCount : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 8;

public:
};

/// Struct /Script/FortniteUI.StoreCallout
/// Size: 0x00A0 (0x000000 - 0x0000A0)
class FStoreCallout : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 160;

public:
	SMember(FFortToastDisplayInfo)                     ToastDisplayInfo                                            OFFSET(getStruct<T>, {0x0, 88, 0, 0})
	SMember(FText)                                     ItemName                                                    OFFSET(getStruct<T>, {0x58, 24, 0, 0})
	SMember(FText)                                     ItemSet                                                     OFFSET(getStruct<T>, {0x70, 24, 0, 0})
	SMember(FString)                                   OfferDisplayAssetPath                                       OFFSET(getStruct<T>, {0x88, 16, 0, 0})
	SMember(FName)                                     LayoutId                                                    OFFSET(getStruct<T>, {0x98, 4, 0, 0})
};

/// Struct /Script/FortniteUI.Card
/// Size: 0x0018 (0x000000 - 0x000018)
class FCard : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 24;

public:
	DMember(int32_t)                                   QuantityReceived                                            OFFSET(get<int32_t>, {0x0, 4, 0, 0})
	CMember(UFortItem*)                                Item                                                        OFFSET(get<T>, {0x8, 8, 0, 0})
	CMember(EPauseType)                                PauseType                                                   OFFSET(get<T>, {0x10, 1, 0, 0})
};

/// Struct /Script/FortniteUI.OpenedCardPack
/// Size: 0x0010 (0x000000 - 0x000010)
class FOpenedCardPack : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 16;

public:
	CMember(UFortCardPackItemDefinition*)              CardPackDefinition                                          OFFSET(get<T>, {0x0, 8, 0, 0})
	DMember(int32_t)                                   DisplayLevel                                                OFFSET(get<int32_t>, {0x8, 4, 0, 0})
};

/// Struct /Script/FortniteUI.CoreGamerRankingInfo
/// Size: 0x0028 (0x000000 - 0x000028)
class FCoreGamerRankingInfo : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 40;

public:
	DMember(int32_t)                                   Score                                                       OFFSET(get<int32_t>, {0x0, 4, 0, 0})
	SMember(FText)                                     Name                                                        OFFSET(getStruct<T>, {0x8, 24, 0, 0})
};

/// Struct /Script/FortniteUI.CreativeDeviceInfo
/// Size: 0x0060 (0x000000 - 0x000060)
class FCreativeDeviceInfo : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 96;

public:
	DMember(int32_t)                                   DeviceTrackingGUID                                          OFFSET(get<int32_t>, {0x0, 4, 0, 0})
	CMember(TWeakObjectPtr<AActor*>)                   ActorPtr                                                    OFFSET(get<T>, {0x8, 32, 0, 0})
	SMember(FString)                                   DisplayName                                                 OFFSET(getStruct<T>, {0x28, 16, 0, 0})
	CMember(TArray<FCreativeDeviceSubscription>)       OutgoingEvents                                              OFFSET(get<T>, {0x38, 16, 0, 0})
	CMember(TArray<FCreativeDeviceSubscription>)       CalledFunctions                                             OFFSET(get<T>, {0x48, 16, 0, 0})
	DMember(int32_t)                                   NumBoundEvents                                              OFFSET(get<int32_t>, {0x58, 4, 0, 0})
	DMember(int32_t)                                   NumBoundFunctions                                           OFFSET(get<int32_t>, {0x5C, 4, 0, 0})
};

/// Struct /Script/FortniteUI.CreativeDeviceCached
/// Size: 0x0040 (0x000000 - 0x000040)
class FCreativeDeviceCached : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 64;

public:
	SMember(FText)                                     DisplayName                                                 OFFSET(getStruct<T>, {0x0, 24, 0, 0})
	DMember(int32_t)                                   NumBoundEvents                                              OFFSET(get<int32_t>, {0x18, 4, 0, 0})
	DMember(int32_t)                                   NumBoundFunctions                                           OFFSET(get<int32_t>, {0x1C, 4, 0, 0})
	CMember(TWeakObjectPtr<AActor*>)                   ActorPtr                                                    OFFSET(get<T>, {0x20, 32, 0, 0})
};

/// Struct /Script/FortniteUI.CachedIslandsGroup
/// Size: 0x0028 (0x000000 - 0x000028)
class FCachedIslandsGroup : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 40;

public:
	CMember(TArray<UFortCreativeIslandLink*>)          IslandLinks                                                 OFFSET(get<T>, {0x0, 16, 0, 0})
};

/// Struct /Script/FortniteUI.StyleButtonReference
/// Size: 0x0018 (0x000000 - 0x000018)
class FStyleButtonReference : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 24;

public:
	CMember(UCommonButtonBase*)                        Button                                                      OFFSET(get<T>, {0x0, 8, 0, 0})
};

/// Struct /Script/FortniteUI.FortCreativeServerDisplayOption
/// Size: 0x0030 (0x000008 - 0x000038)
class FFortCreativeServerDisplayOption : public FTableRowBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 56;

public:
	CMember(TWeakObjectPtr<UTexture*>)                 Image                                                       OFFSET(get<T>, {0x8, 32, 0, 0})
	SMember(FLinearColor)                              Color                                                       OFFSET(getStruct<T>, {0x28, 16, 0, 0})
};

/// Struct /Script/FortniteUI.CreativeContentBrowserAddItemDefinitionMessage
/// Size: 0x0010 (0x000000 - 0x000010)
class FCreativeContentBrowserAddItemDefinitionMessage : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 16;

public:
	CMember(TArray<UFortItemDefinition*>)              ItemDefinitionsToAdd                                        OFFSET(get<T>, {0x0, 16, 0, 0})
};

/// Struct /Script/FortniteUI.FortActivityScaleFontData
/// Size: 0x0008 (0x000000 - 0x000008)
class FFortActivityScaleFontData : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 8;

public:
	DMember(int32_t)                                   CharacterCountStart                                         OFFSET(get<int32_t>, {0x0, 4, 0, 0})
	DMember(int32_t)                                   FontSize                                                    OFFSET(get<int32_t>, {0x4, 4, 0, 0})
};

/// Struct /Script/FortniteUI.CachedSurfaceData
/// Size: 0x0020 (0x000000 - 0x000020)
class FCachedSurfaceData : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 32;

public:
	CMember(TArray<UFortCreativeDiscoveryActivityProvider*>) CachedDataProviders                                   OFFSET(get<T>, {0x8, 16, 0, 0})
	DMember(bool)                                      bIsDirty                                                    OFFSET(get<bool>, {0x18, 1, 0, 0})
};

/// Struct /Script/FortniteUI.FortLeaderboardRequestIds
/// Size: 0x0020 (0x000000 - 0x000020)
class FFortLeaderboardRequestIds : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 32;

public:
};

/// Struct /Script/FortniteUI.FortStateStyle
/// Size: 0x04A0 (0x000000 - 0x0004A0)
class FFortStateStyle : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 1184;

public:
	SMember(FFortMultiSizeBrush)                       Brush                                                       OFFSET(getStruct<T>, {0x0, 1152, 0, 0})
	SMember(FLinearColor)                              PrimaryColor                                                OFFSET(getStruct<T>, {0x480, 16, 0, 0})
	SMember(FLinearColor)                              SecondaryColor                                              OFFSET(getStruct<T>, {0x490, 16, 0, 0})
};

/// Struct /Script/FortniteUI.ItemListCategoryArray
/// Size: 0x0018 (0x000000 - 0x000018)
class FItemListCategoryArray : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 24;

public:
	CMember(TArray<FFortItemEntry>)                    ItemList                                                    OFFSET(get<T>, {0x0, 16, 0, 0})
	SMember(FName)                                     CategoryID                                                  OFFSET(getStruct<T>, {0x10, 4, 0, 0})
};

/// Struct /Script/FortniteUI.FortCreativeItemListCategoryData
/// Size: 0x0008 (0x000008 - 0x000010)
class FFortCreativeItemListCategoryData : public FTableRowBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 16;

public:
	CMember(ECreativeItemCategory)                     category                                                    OFFSET(get<T>, {0x8, 1, 0, 0})
	CMember(EFortItemCardSize)                         CardSize                                                    OFFSET(get<T>, {0x9, 1, 0, 0})
	DMember(bool)                                      bCollapseCardBorderPad                                      OFFSET(get<bool>, {0xA, 1, 0, 0})
	DMember(bool)                                      bUseLegacyItemDetailsPanel                                  OFFSET(get<bool>, {0xB, 1, 0, 0})
};

/// Struct /Script/FortniteUI.FortItemListOptionBucket
/// Size: 0x0020 (0x000000 - 0x000020)
class FFortItemListOptionBucket : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 32;

public:
	DMember(int32_t)                                   ItemIndex                                                   OFFSET(get<int32_t>, {0x8, 4, 0, 0})
	CMember(TArray<UFortItemListOptionProxy*>)         ItemOptionData                                              OFFSET(get<T>, {0x10, 16, 0, 0})
};

/// Struct /Script/FortniteUI.FortWeightedObject
/// Size: 0x0010 (0x000000 - 0x000010)
class FFortWeightedObject : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 16;

public:
	CMember(UObject*)                                  Object                                                      OFFSET(get<T>, {0x0, 8, 0, 0})
	DMember(int32_t)                                   Weight                                                      OFFSET(get<int32_t>, {0x8, 4, 0, 0})
};

/// Struct /Script/FortniteUI.ContextPosition
/// Size: 0x0020 (0x000000 - 0x000020)
class FContextPosition : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 32;

public:
	CMember(EContextPositionPlatform)                  Platform                                                    OFFSET(get<T>, {0x0, 1, 0, 0})
	SMember(FVector2D)                                 Position                                                    OFFSET(getStruct<T>, {0x8, 16, 0, 0})
	CMember(TEnumAsByte<EHorizontalAlignment>)         HorizontalAlignment                                         OFFSET(get<T>, {0x18, 1, 0, 0})
	CMember(TEnumAsByte<EVerticalAlignment>)           VerticalAlignment                                           OFFSET(get<T>, {0x19, 1, 0, 0})
};

/// Struct /Script/FortniteUI.DirectProgressUpdateData
/// Size: 0x0018 (0x000000 - 0x000018)
class FDirectProgressUpdateData : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 24;

public:
	DMember(float)                                     ProgressPercent                                             OFFSET(get<float>, {0x0, 4, 0, 0})
	CMember(UFortItemDefinition*)                      ItemDef                                                     OFFSET(get<T>, {0x8, 8, 0, 0})
	CMember(AFortPlayerPawn*)                          OwningPawn                                                  OFFSET(get<T>, {0x10, 8, 0, 0})
};

/// Struct /Script/FortniteUI.MeasuredText
/// Size: 0x0030 (0x000000 - 0x000030)
class FMeasuredText : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 48;

public:
};

/// Struct /Script/FortniteUI.RadialOptionData
/// Size: 0x0100 (0x000000 - 0x000100)
class FRadialOptionData : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 256;

public:
	SMember(FText)                                     Label                                                       OFFSET(getStruct<T>, {0x0, 24, 0, 0})
	SMember(FSlateBrush)                               Brush                                                       OFFSET(getStruct<T>, {0x20, 192, 0, 0})
	CMember(TWeakObjectPtr<UTexture2D*>)               SoftIcon                                                    OFFSET(get<T>, {0xE0, 32, 0, 0})
};

/// Struct /Script/FortniteUI.BuildingCategoryOptionData
/// Size: 0x0010 (0x000100 - 0x000110)
class FBuildingCategoryOptionData : public FRadialOptionData
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 272;

public:
	CMember(TEnumAsByte<EFortBuildingType>)            BuildingType                                                OFFSET(get<T>, {0x100, 1, 0, 0})
};

/// Struct /Script/FortniteUI.BuildingOptionData
/// Size: 0x0020 (0x000100 - 0x000120)
class FBuildingOptionData : public FRadialOptionData
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 288;

public:
	SMember(FString)                                   ClassSuffix                                                 OFFSET(getStruct<T>, {0x100, 16, 0, 0})
	DMember(bool)                                      ClassMirrored                                               OFFSET(get<bool>, {0x110, 1, 0, 0})
};

/// Struct /Script/FortniteUI.ItemCategoryOptionData
/// Size: 0x0020 (0x000100 - 0x000120)
class FItemCategoryOptionData : public FRadialOptionData
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 288;

public:
	SMember(FString)                                   TemplatePrefix                                              OFFSET(getStruct<T>, {0x100, 16, 0, 0})
	CMember(TEnumAsByte<EBuildingAttachmentType>)      BuildingAttachmentType                                      OFFSET(get<T>, {0x110, 1, 0, 0})
};

/// Struct /Script/FortniteUI.ChatOptionData
/// Size: 0x0020 (0x000100 - 0x000120)
class FChatOptionData : public FRadialOptionData
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 288;

public:
	SMember(FText)                                     ChatText                                                    OFFSET(getStruct<T>, {0x100, 24, 0, 0})
};

/// Struct /Script/FortniteUI.SquadChatOptionData
/// Size: 0x0020 (0x000100 - 0x000120)
class FSquadChatOptionData : public FRadialOptionData
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 288;

public:
	SMember(FText)                                     ChatText                                                    OFFSET(getStruct<T>, {0x100, 24, 0, 0})
};

/// Struct /Script/FortniteUI.MapNoteOptionData
/// Size: 0x0020 (0x000100 - 0x000120)
class FMapNoteOptionData : public FRadialOptionData
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 288;

public:
	SMember(FText)                                     MapNoteText                                                 OFFSET(getStruct<T>, {0x100, 24, 0, 0})
};

/// Struct /Script/FortniteUI.EmoteOptionData
/// Size: 0x0010 (0x000100 - 0x000110)
class FEmoteOptionData : public FRadialOptionData
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 272;

public:
	SMember(FName)                                     EmoteCommand                                                OFFSET(getStruct<T>, {0x100, 4, 0, 0})
};

/// Struct /Script/FortniteUI.ItemDefOptionData
/// Size: 0x0010 (0x000100 - 0x000110)
class FItemDefOptionData : public FRadialOptionData
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 272;

public:
	CMember(UObject*)                                  ItemDef                                                     OFFSET(get<T>, {0x100, 8, 0, 0})
};

/// Struct /Script/FortniteUI.SquadQuickChatOptionData
/// Size: 0x0020 (0x000100 - 0x000120)
class FSquadQuickChatOptionData : public FRadialOptionData
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 288;

public:
	SMember(FAthenaQuickChatActiveEntry)               ChatEntry                                                   OFFSET(getStruct<T>, {0x100, 20, 0, 0})
	DMember(bool)                                      bEnabled                                                    OFFSET(get<bool>, {0x114, 1, 0, 0})
};

/// Struct /Script/FortniteUI.FortRichTextStyleData
/// Size: 0x0328 (0x000008 - 0x000330)
class FFortRichTextStyleData : public FTableRowBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 816;

public:
	SMember(FTextBlockStyle)                           TextStyle                                                   OFFSET(getStruct<T>, {0x10, 784, 0, 0})
	DMember(bool)                                      bHyperlinkStyle                                             OFFSET(get<bool>, {0x320, 1, 0, 0})
};

/// Struct /Script/FortniteUI.PotentialSpectatorTarget
/// Size: 0x0010 (0x000000 - 0x000010)
class FPotentialSpectatorTarget : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 16;

public:
	DMember(int32_t)                                   Rank                                                        OFFSET(get<int32_t>, {0x0, 4, 0, 0})
	CMember(TWeakObjectPtr<AFortPlayerStateAthena*>)   PlayerState                                                 OFFSET(get<T>, {0x4, 8, 0, 0})
	DMember(bool)                                      bCurrentViewTarget                                          OFFSET(get<bool>, {0xC, 1, 0, 0})
};

/// Struct /Script/FortniteUI.StandaloneItemShopTabInfo
/// Size: 0x0038 (0x000000 - 0x000038)
class FStandaloneItemShopTabInfo : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 56;

public:
	SMember(FText)                                     TabTitle                                                    OFFSET(getStruct<T>, {0x0, 24, 0, 0})
	SMember(FName)                                     TabNameID                                                   OFFSET(getStruct<T>, {0x18, 4, 0, 0})
	CMember(UObject*)                                  TabIcon                                                     OFFSET(get<T>, {0x20, 8, 0, 0})
	CMember(UCommonActivatableWidget*)                 TabWidget                                                   OFFSET(get<T>, {0x28, 8, 0, 0})
	CMember(EFortUIFeature)                            UIFeature                                                   OFFSET(get<T>, {0x30, 1, 0, 0})
};

/// Struct /Script/FortniteUI.OnVirtualJoysticksTouchStartedData
/// Size: 0x0078 (0x000000 - 0x000078)
class FOnVirtualJoysticksTouchStartedData : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 120;

public:
};

/// Struct /Script/FortniteUI.OnVirtualJoysticksTouchMovedData
/// Size: 0x0078 (0x000000 - 0x000078)
class FOnVirtualJoysticksTouchMovedData : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 120;

public:
};

/// Struct /Script/FortniteUI.OnVirtualJoysticksTouchEndedData
/// Size: 0x0078 (0x000000 - 0x000078)
class FOnVirtualJoysticksTouchEndedData : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 120;

public:
};

/// Struct /Script/FortniteUI.TouchMove
/// Size: 0x0018 (0x000000 - 0x000018)
class FTouchMove : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 24;

public:
};

/// Struct /Script/FortniteUI.StateWidgetEntry
/// Size: 0x0028 (0x000000 - 0x000028)
class FStateWidgetEntry : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 40;

public:
	CMember(TWeakObjectPtr<UClass*>)                   Class                                                       OFFSET(get<T>, {0x0, 32, 0, 0})
	CMember(EFortNamedBundle)                          Bundle                                                      OFFSET(get<T>, {0x20, 1, 0, 0})
};

/// Struct /Script/FortniteUI.UINavigationEntry
/// Size: 0x0040 (0x000000 - 0x000040)
class FUINavigationEntry : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 64;

public:
	SMember(FUINavigationData)                         Data                                                        OFFSET(getStruct<T>, {0x0, 40, 0, 0})
	SMember(FDelegateProperty)                         NavigateToDelegate                                          OFFSET(getStruct<T>, {0x28, 12, 0, 0})
	SMember(FDelegateProperty)                         NavigateFromDelegate                                        OFFSET(getStruct<T>, {0x34, 12, 0, 0})
};

/// Struct /Script/FortniteUI.FortUINavigationOperation
/// Size: 0x0028 (0x000000 - 0x000028)
class FFortUINavigationOperation : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 40;

public:
	CMember(EFortUINavigationOp)                       Operation                                                   OFFSET(get<T>, {0x0, 1, 0, 0})
	SMember(FName)                                     SquadId                                                     OFFSET(getStruct<T>, {0x4, 4, 0, 0})
	DMember(int32_t)                                   SquadSlotIndex                                              OFFSET(get<int32_t>, {0x8, 4, 0, 0})
	SMember(FName)                                     PageId                                                      OFFSET(getStruct<T>, {0xC, 4, 0, 0})
	SMember(FName)                                     NodeId                                                      OFFSET(getStruct<T>, {0x10, 4, 0, 0})
	CMember(UFortItem*)                                Item                                                        OFFSET(get<T>, {0x18, 8, 0, 0})
	CMember(EFortUIFeature)                            Feature                                                     OFFSET(get<T>, {0x20, 1, 0, 0})
	CMember(EFortFrontendInventoryFilter)              ItemManagementFilter                                        OFFSET(get<T>, {0x21, 1, 0, 0})
};

/// Struct /Script/FortniteUI.FortUINavigationRequest
/// Size: 0x0010 (0x000000 - 0x000010)
class FFortUINavigationRequest : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 16;

public:
	CMember(TArray<FFortUINavigationOperation>)        Operations                                                  OFFSET(get<T>, {0x0, 16, 0, 0})
};

/// Struct /Script/FortniteUI.VaultVariantOverrideOption
/// Size: 0x0020 (0x000000 - 0x000020)
class FVaultVariantOverrideOption : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 32;

public:
	SMember(FGameplayTag)                              VariantChannelOverride                                      OFFSET(getStruct<T>, {0x0, 4, 0, 0})
	SMember(FGameplayTag)                              VariantTagOverride                                          OFFSET(getStruct<T>, {0x4, 4, 0, 0})
	SMember(FString)                                   CustomDataPayload                                           OFFSET(getStruct<T>, {0x8, 16, 0, 0})
	CMember(UFortItemDefinition*)                      OptionalItemVariantIsUsedFor                                OFFSET(get<T>, {0x18, 8, 0, 0})
};

/// Struct /Script/FortniteUI.ItemPreviewSettings
/// Size: 0x00B0 (0x000000 - 0x0000B0)
class FItemPreviewSettings : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 176;

public:
	CMember(UFortAccountItemDefinition*)               ItemToView                                                  OFFSET(get<T>, {0x0, 8, 0, 0})
	DMember(int32_t)                                   SubslotIndex                                                OFFSET(get<int32_t>, {0x8, 4, 0, 0})
	SMember(FGameplayTagContainer)                     PreviewExcludedTags                                         OFFSET(getStruct<T>, {0x10, 32, 0, 0})
	DMember(int32_t)                                   ItemVariantPreviewIndex                                     OFFSET(get<int32_t>, {0x30, 4, 0, 0})
	DMember(bool)                                      bHasEtherealBackground                                      OFFSET(get<bool>, {0x80, 1, 0, 0})
	CMember(TArray<FVaultVariantOverrideOption>)       VariantOverrides                                            OFFSET(get<T>, {0x90, 16, 0, 0})
	CMember(UFortItem*)                                SourceItemInstance                                          OFFSET(get<T>, {0xA0, 8, 0, 0})
};

/// Struct /Script/FortniteUI.SceneTransitionOptions
/// Size: 0x0002 (0x000000 - 0x000002)
class FSceneTransitionOptions : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 2;

public:
	CMember(ESceneTransitionType)                      TRANSITION                                                  OFFSET(get<T>, {0x0, 1, 0, 0})
	DMember(bool)                                      bKeepInputRotation                                          OFFSET(get<bool>, {0x1, 1, 0, 0})
};

/// Struct /Script/FortniteUI.InterpolatedTransitionCamera
/// Size: 0x0070 (0x000000 - 0x000070)
class FInterpolatedTransitionCamera : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 112;

public:
	SMember(FTransform)                                CameraTransform                                             OFFSET(getStruct<T>, {0x0, 96, 0, 0})
	DMember(float)                                     FieldOfView                                                 OFFSET(get<float>, {0x60, 4, 0, 0})
};

/// Struct /Script/FortniteUI.CachedComponentMaterials
/// Size: 0x0018 (0x000000 - 0x000018)
class FCachedComponentMaterials : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 24;

public:
	CMember(TArray<UMaterialInterface*>)               OriginalMaterials                                           OFFSET(get<T>, {0x8, 16, 0, 0})
};

/// Struct /Script/FortniteUI.PlatformPrefixIcon
/// Size: 0x0018 (0x000000 - 0x000018)
class FPlatformPrefixIcon : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 24;

public:
	SMember(FString)                                   Platform                                                    OFFSET(getStruct<T>, {0x0, 16, 0, 0})
	CMember(UTexture2D*)                               PrefixIcon                                                  OFFSET(get<T>, {0x10, 8, 0, 0})
};

/// Struct /Script/FortniteUI.PlatformPrefixIconList
/// Size: 0x0010 (0x000000 - 0x000010)
class FPlatformPrefixIconList : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 16;

public:
	CMember(TArray<FPlatformPrefixIcon>)               PlatformPrefixIcons                                         OFFSET(get<T>, {0x0, 16, 0, 0})
};

/// Struct /Script/FortniteUI.FortUserListHeaderInfo
/// Size: 0x0018 (0x000000 - 0x000018)
class FFortUserListHeaderInfo : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 24;

public:
};

/// Struct /Script/FortniteUI.OptionsReleaseInfo
/// Size: 0x0008 (0x000000 - 0x000008)
class FOptionsReleaseInfo : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 8;

public:
	CMember(ESettingType)                              SettingType                                                 OFFSET(get<T>, {0x0, 1, 0, 0})
	DMember(int32_t)                                   ReleaseVersion                                              OFFSET(get<int32_t>, {0x4, 4, 0, 0})
};

/// Struct /Script/FortniteUI.RarityArray
/// Size: 0x0010 (0x000000 - 0x000010)
class FRarityArray : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 16;

public:
	CMember(TArray<UFortItemDefinition*>)              Items                                                       OFFSET(get<T>, {0x0, 16, 0, 0})
};

/// Struct /Script/FortniteUI.FortActionBeingUnbound
/// Size: 0x0008 (0x000000 - 0x000008)
class FFortActionBeingUnbound : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 8;

public:
	SMember(FName)                                     ActionName                                                  OFFSET(getStruct<T>, {0x0, 4, 0, 0})
	DMember(int32_t)                                   InputIndex                                                  OFFSET(get<int32_t>, {0x4, 4, 0, 0})
};

/// Struct /Script/FortniteUI.AthenaSpatialCustomizationCategoryGroup
/// Size: 0x0010 (0x000000 - 0x000010)
class FAthenaSpatialCustomizationCategoryGroup : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 16;

public:
	CMember(TArray<UAthenaSpatialCustomizationCategoryEntry*>) CategoryEntryList                                   OFFSET(get<T>, {0x0, 16, 0, 0})
};

/// Struct /Script/FortniteUI.SpatialCustomizationCategoryStateData
/// Size: 0x0030 (0x000000 - 0x000030)
class FSpatialCustomizationCategoryStateData : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 48;

public:
	CMember(ESpatialCustomizationCategoryState)        State                                                       OFFSET(get<T>, {0x0, 1, 0, 0})
	SMember(FLinearColor)                              Color                                                       OFFSET(getStruct<T>, {0x4, 16, 0, 0})
	SMember(FText)                                     CategorySelectionHeaderText                                 OFFSET(getStruct<T>, {0x18, 24, 0, 0})
};

/// Struct /Script/FortniteUI.OfferPopUpData
/// Size: 0x0018 (0x000008 - 0x000020)
class FOfferPopUpData : public FTableRowBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 32;

public:
	SMember(FText)                                     FormatedText                                                OFFSET(getStruct<T>, {0x8, 24, 0, 0})
};

/// Struct /Script/FortniteUI.FortPhoenixSeasonDisplayInfoMapRow
/// Size: 0x0018 (0x000008 - 0x000020)
class FFortPhoenixSeasonDisplayInfoMapRow : public FTableRowBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 32;

public:
	SMember(FString)                                   EventFlagName                                               OFFSET(getStruct<T>, {0x8, 16, 0, 0})
	CMember(UFortPhoenixSeasonDisplayInfo*)            DisplayInfo                                                 OFFSET(get<T>, {0x18, 8, 0, 0})
};

/// Struct /Script/FortniteUI.FortPhoenixLevelProgressionRewards
/// Size: 0x0020 (0x000000 - 0x000020)
class FFortPhoenixLevelProgressionRewards : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 32;

public:
	DMember(int32_t)                                   NextRewardLevel                                             OFFSET(get<int32_t>, {0x0, 4, 0, 0})
	SMember(FFortItemQuantityPair)                     NextReward                                                  OFFSET(getStruct<T>, {0x4, 12, 0, 0})
	DMember(int32_t)                                   NextMajorRewardLevel                                        OFFSET(get<int32_t>, {0x10, 4, 0, 0})
	SMember(FFortItemQuantityPair)                     NextMajorReward                                             OFFSET(getStruct<T>, {0x14, 12, 0, 0})
};

/// Struct /Script/FortniteUI.TagStateWidgetEntry
/// Size: 0x0028 (0x000000 - 0x000028)
class FTagStateWidgetEntry : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 40;

public:
	CMember(TWeakObjectPtr<UClass*>)                   Class                                                       OFFSET(get<T>, {0x0, 32, 0, 0})
	CMember(EFortNamedBundle)                          Bundle                                                      OFFSET(get<T>, {0x20, 1, 0, 0})
};

/// Struct /Script/FortniteUI.NotificationWidgetClass
/// Size: 0x0020 (0x000000 - 0x000020)
class FNotificationWidgetClass : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 32;

public:
	CMember(UClass*)                                   NotificationWidgetClass                                     OFFSET(get<T>, {0x0, 8, 0, 0})
	DMember(int32_t)                                   InitialPoolSize                                             OFFSET(get<int32_t>, {0x8, 4, 0, 0})
	DMember(bool)                                      bCanIncreasePoolSizeAtRunTime                               OFFSET(get<bool>, {0xC, 1, 0, 0})
	CMember(TArray<UFortNotificationEntry*>)           WidgetPool                                                  OFFSET(get<T>, {0x10, 16, 0, 0})
};

/// Struct /Script/FortniteUI.PickupStreamEntry
/// Size: 0x0018 (0x000000 - 0x000018)
class FPickupStreamEntry : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 24;

public:
	CMember(UUserWidget*)                              PickupWidget                                                OFFSET(get<T>, {0x0, 8, 0, 0})
};

/// Struct /Script/FortniteUI.FortSwipeDetector
/// Size: 0x0090 (0x000000 - 0x000090)
class FFortSwipeDetector : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 144;

public:
	SMember(FVector2D)                                 SwipeThreshold                                              OFFSET(getStruct<T>, {0x0, 16, 0, 0})
};

/// Struct /Script/FortniteUI.AthenaRewardTracker
/// Size: 0x0014 (0x000000 - 0x000014)
class FAthenaRewardTracker : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 20;

public:
};

/// Struct /Script/FortniteUI.ItemPresentationRestrictionData
/// Size: 0x0038 (0x000000 - 0x000038)
class FItemPresentationRestrictionData : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 56;

public:
	SMember(FText)                                     HeaderText                                                  OFFSET(getStruct<T>, {0x0, 24, 0, 0})
	CMember(TWeakObjectPtr<UObject*>)                  Icon                                                        OFFSET(get<T>, {0x18, 32, 0, 0})
};

/// Struct /Script/FortniteUI.CurrencyDataWithGiftBox
/// Size: 0x0010 (0x000000 - 0x000010)
class FCurrencyDataWithGiftBox : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 16;

public:
	CMember(TArray<FCurrencyData>)                     GiftBoxCurrencyData                                         OFFSET(get<T>, {0x0, 16, 0, 0})
};

/// Struct /Script/FortniteUI.FortItemFilterDefinition
/// Size: 0x0060 (0x000000 - 0x000060)
class FFortItemFilterDefinition : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 96;

public:
	CMember(TArray<EFortItemType>)                     ItemTypeFilters                                             OFFSET(get<T>, {0x0, 16, 0, 0})
	DMember(bool)                                      bRequiresItemDetails                                        OFFSET(get<bool>, {0x50, 1, 0, 0})
};

/// Struct /Script/FortniteUI.FortItemListViewConfig
/// Size: 0x00C0 (0x000000 - 0x0000C0)
class FFortItemListViewConfig : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 192;

public:
};

/// Struct /Script/FortniteUI.FortItemSorterDefinition
/// Size: 0x0050 (0x000000 - 0x000050)
class FFortItemSorterDefinition : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 80;

public:
};

/// Struct /Script/FortniteUI.FortItemEntryPreviewData
/// Size: 0x0008 (0x000000 - 0x000008)
class FFortItemEntryPreviewData : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 8;

public:
	DMember(int32_t)                                   Quantity                                                    OFFSET(get<int32_t>, {0x0, 4, 0, 0})
	CMember(EFortItemInspectionMode)                   InspectMode                                                 OFFSET(get<T>, {0x4, 1, 0, 0})
};

/// Struct /Script/FortniteUI.VideoConfig_Mono
/// Size: 0x0058 (0x000000 - 0x000058)
class FVideoConfig_Mono : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 88;

public:
	CMember(UFortStreamMediaSource*)                   StreamingMediaSource                                        OFFSET(get<T>, {0x0, 8, 0, 0})
	SMember(FName)                                     VideoString                                                 OFFSET(getStruct<T>, {0x8, 4, 0, 0})
	SMember(FName)                                     StreamingVideoID                                            OFFSET(getStruct<T>, {0xC, 4, 0, 0})
	SMember(FName)                                     FallbackVideoID                                             OFFSET(getStruct<T>, {0x10, 4, 0, 0})
	SMember(FString)                                   ProdLinkID                                                  OFFSET(getStruct<T>, {0x18, 16, 0, 0})
	SMember(FString)                                   GamedevLinkID                                               OFFSET(getStruct<T>, {0x28, 16, 0, 0})
	DMember(bool)                                      bIsAutoPlay                                                 OFFSET(get<bool>, {0x38, 1, 0, 0})
	DMember(bool)                                      bForceAutoPlay                                              OFFSET(get<bool>, {0x39, 1, 0, 0})
	DMember(bool)                                      bStreamingEnabled                                           OFFSET(get<bool>, {0x3A, 1, 0, 0})
	SMember(FString)                                   VideoUID                                                    OFFSET(getStruct<T>, {0x40, 16, 0, 0})
	DMember(bool)                                      bShouldBeModal                                              OFFSET(get<bool>, {0x50, 1, 0, 0})
	DMember(bool)                                      bUseSkipBoundaries                                          OFFSET(get<bool>, {0x51, 1, 0, 0})
	DMember(bool)                                      bKairosPlayer                                               OFFSET(get<bool>, {0x52, 1, 0, 0})
	DMember(bool)                                      bHoldToSkip                                                 OFFSET(get<bool>, {0x53, 1, 0, 0})
};

/// Struct /Script/FortniteUI.FortVideoInfo
/// Size: 0x0030 (0x000000 - 0x000030)
class FFortVideoInfo : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 48;

public:
	SMember(FName)                                     ID                                                          OFFSET(getStruct<T>, {0x0, 4, 0, 0})
	CMember(UTexture2D*)                               PreviewImage                                                OFFSET(get<T>, {0x8, 8, 0, 0})
	CMember(UMediaSource*)                             VideoSource                                                 OFFSET(get<T>, {0x10, 8, 0, 0})
	CMember(ULocalizedOverlays*)                       SubtitleOverlays                                            OFFSET(get<T>, {0x18, 8, 0, 0})
	SMember(FName)                                     QuestObjectiveName                                          OFFSET(getStruct<T>, {0x20, 4, 0, 0})
	SMember(FPrimaryAssetId)                           RequiredActiveQuest                                         OFFSET(getStruct<T>, {0x24, 8, 0, 0})
};

/// Struct /Script/FortniteUI.FortConfirmationButtonInfo
/// Size: 0x0010 (0x000000 - 0x000010)
class FFortConfirmationButtonInfo : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 16;

public:
	CMember(UCommonButtonBase*)                        Button                                                      OFFSET(get<T>, {0x0, 8, 0, 0})
};

/// Struct /Script/FortniteUI.ReviewYourSettingsData
/// Size: 0x0040 (0x000000 - 0x000040)
class FReviewYourSettingsData : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 64;

public:
	SMember(FText)                                     Title                                                       OFFSET(getStruct<T>, {0x0, 24, 0, 0})
	SMember(FText)                                     Description                                                 OFFSET(getStruct<T>, {0x18, 24, 0, 0})
	CMember(TArray<UFortSetting*>)                     Settings                                                    OFFSET(get<T>, {0x30, 16, 0, 0})
};

/// Struct /Script/FortniteUI.FortMtxDetailsAttribute
/// Size: 0x0030 (0x000000 - 0x000030)
class FFortMtxDetailsAttribute : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 48;

public:
	SMember(FText)                                     Name                                                        OFFSET(getStruct<T>, {0x0, 24, 0, 0})
	SMember(FText)                                     Value                                                       OFFSET(getStruct<T>, {0x18, 24, 0, 0})
};

/// Struct /Script/FortniteUI.FortMtxDescriptionAndDetails
/// Size: 0x0028 (0x000000 - 0x000028)
class FFortMtxDescriptionAndDetails : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 40;

public:
	SMember(FText)                                     ShortDescription                                            OFFSET(getStruct<T>, {0x0, 24, 0, 0})
	CMember(TArray<FFortMtxDetailsAttribute>)          AssociatedDetailsAttributes                                 OFFSET(get<T>, {0x18, 16, 0, 0})
};

/// Struct /Script/FortniteUI.FortMtxGradient
/// Size: 0x0020 (0x000000 - 0x000020)
class FFortMtxGradient : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 32;

public:
	SMember(FLinearColor)                              Start                                                       OFFSET(getStruct<T>, {0x0, 16, 0, 0})
	SMember(FLinearColor)                              Stop                                                        OFFSET(getStruct<T>, {0x10, 16, 0, 0})
};

/// Struct /Script/FortniteUI.FortItemShopCMSStackRank
/// Size: 0x0010 (0x000000 - 0x000010)
class FFortItemShopCMSStackRank : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 16;

public:
	SMember(FDateTime)                                 StartDate                                                   OFFSET(getStruct<T>, {0x0, 8, 0, 0})
	DMember(int32_t)                                   StackRankValue                                              OFFSET(get<int32_t>, {0x8, 4, 0, 0})
	CMember(EFortItemShopContentType)                  ContentType                                                 OFFSET(get<T>, {0xC, 1, 0, 0})
};

/// Struct /Script/FortniteUI.FortItemShopCMSOfferGroup
/// Size: 0x0020 (0x000000 - 0x000020)
class FFortItemShopCMSOfferGroup : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 32;

public:
	SMember(FString)                                   OfferGroupId                                                OFFSET(getStruct<T>, {0x0, 16, 0, 0})
	CMember(TArray<FFortItemShopCMSStackRank>)         StackRanks                                                  OFFSET(get<T>, {0x10, 16, 0, 0})
};

/// Struct /Script/FortniteUI.FortItemShopCMSSectionMetadata
/// Size: 0x0060 (0x000000 - 0x000060)
class FFortItemShopCMSSectionMetadata : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 96;

public:
	SMember(FString)                                   ShowIneligibleOffers                                        OFFSET(getStruct<T>, {0x0, 16, 0, 0})
	CMember(TArray<FJsonObjectWrapper>)                Subsections                                                 OFFSET(get<T>, {0x10, 16, 0, 0})
	CMember(TArray<FFortItemShopCMSOfferGroup>)        OfferGroups                                                 OFFSET(get<T>, {0x20, 16, 0, 0})
	SMember(FFortItemShopCMSBackground)                Background                                                  OFFSET(getStruct<T>, {0x30, 32, 0, 0})
	CMember(TArray<FFortItemShopCMSStackRank>)         StackRanks                                                  OFFSET(get<T>, {0x50, 16, 0, 0})
};

/// Struct /Script/FortniteUI.FortItemShopCMSSection
/// Size: 0x0080 (0x000000 - 0x000080)
class FFortItemShopCMSSection : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 128;

public:
	SMember(FString)                                   SectionId                                                   OFFSET(getStruct<T>, {0x0, 16, 0, 0})
	SMember(FString)                                   DisplayName                                                 OFFSET(getStruct<T>, {0x10, 16, 0, 0})
	SMember(FFortItemShopCMSSectionMetadata)           MetaData                                                    OFFSET(getStruct<T>, {0x20, 96, 0, 0})
};

/// Struct /Script/FortniteUI.FortItemShopCMSData
/// Size: 0x0010 (0x000000 - 0x000010)
class FFortItemShopCMSData : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 16;

public:
	CMember(TArray<FFortItemShopCMSSection>)           Sections                                                    OFFSET(get<T>, {0x0, 16, 0, 0})
};

/// Struct /Script/FortniteUI.FortFeedbackDropdownCategoryHotfix_Add
/// Size: 0x0008 (0x000000 - 0x000008)
class FFortFeedbackDropdownCategoryHotfix_Add : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 8;

public:
	SMember(FName)                                     ParentInternalName                                          OFFSET(getStruct<T>, {0x0, 4, 0, 0})
	SMember(FName)                                     InternalName                                                OFFSET(getStruct<T>, {0x4, 4, 0, 0})
};

/// Struct /Script/FortniteUI.FortFeedbackDropdownCategoryHotfix_Modify
/// Size: 0x0008 (0x000000 - 0x000008)
class FFortFeedbackDropdownCategoryHotfix_Modify : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 8;

public:
	SMember(FName)                                     InternalName                                                OFFSET(getStruct<T>, {0x0, 4, 0, 0})
	DMember(bool)                                      bAddFlag                                                    OFFSET(get<bool>, {0x4, 1, 0, 0})
	CMember(EFortPlayerFeedbackFlags)                  Flag                                                        OFFSET(get<T>, {0x5, 1, 0, 0})
};

/// Struct /Script/FortniteUI.TrackCategoryUI
/// Size: 0x0048 (0x000000 - 0x000048)
class FTrackCategoryUI : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 72;

public:
	SMember(FTrackCategory)                            TrackData                                                   OFFSET(getStruct<T>, {0x0, 64, 0, 0})
	DMember(int32_t)                                   LastSelectedIndex                                           OFFSET(get<int32_t>, {0x40, 4, 0, 0})
};

/// Struct /Script/FortniteUI.BattlePassPageData
/// Size: 0x0008 (0x000000 - 0x000008)
class FBattlePassPageData : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 8;

public:
};

/// Struct /Script/FortniteUI.PreviewRewardData
/// Size: 0x0060 (0x000000 - 0x000060)
class FPreviewRewardData : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 96;

public:
};

/// Struct /Script/FortniteUI.PreviewUnlockRewardData
/// Size: 0x0030 (0x000000 - 0x000030)
class FPreviewUnlockRewardData : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 48;

public:
	DMember(int32_t)                                   Currency                                                    OFFSET(get<int32_t>, {0x0, 4, 0, 0})
	DMember(int32_t)                                   NumAdditionalRewards                                        OFFSET(get<int32_t>, {0x4, 4, 0, 0})
	DMember(int32_t)                                   TotalRewards                                                OFFSET(get<int32_t>, {0x8, 4, 0, 0})
	DMember(int32_t)                                   NumCharacters                                               OFFSET(get<int32_t>, {0xC, 4, 0, 0})
	CMember(TArray<FPreviewRewardData>)                Characters                                                  OFFSET(get<T>, {0x10, 16, 0, 0})
	CMember(TArray<FPreviewRewardData>)                AdditionalRewards                                           OFFSET(get<T>, {0x20, 16, 0, 0})
};

/// Struct /Script/FortniteUI.PreviewUnlockData
/// Size: 0x00B0 (0x000000 - 0x0000B0)
class FPreviewUnlockData : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 176;

public:
	SMember(FPreviewUnlockRewardData)                  InstantRewards                                              OFFSET(getStruct<T>, {0x0, 48, 0, 0})
	SMember(FPreviewUnlockRewardData)                  EarnedRewards                                               OFFSET(getStruct<T>, {0x30, 48, 0, 0})
	SMember(FText)                                     ChapterNumberText                                           OFFSET(getStruct<T>, {0x60, 24, 0, 0})
	SMember(FText)                                     SeasonNumberText                                            OFFSET(getStruct<T>, {0x78, 24, 0, 0})
	SMember(FText)                                     SummaryText                                                 OFFSET(getStruct<T>, {0x90, 24, 0, 0})
	DMember(bool)                                      bPaysForSelf                                                OFFSET(get<bool>, {0xA8, 1, 0, 0})
};

/// Struct /Script/FortniteUI.BattlePassCharacterPreviewDisplayData
/// Size: 0x0010 (0x000000 - 0x000010)
class FBattlePassCharacterPreviewDisplayData : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 16;

public:
	CMember(UAthenaCharacterItemDefinition*)           CharacterItemDef                                            OFFSET(get<T>, {0x0, 8, 0, 0})
	CMember(UMaterialInstance*)                        PreviewMaterial                                             OFFSET(get<T>, {0x8, 8, 0, 0})
};

/// Struct /Script/FortniteUI.BattlePassShowRewardParams
/// Size: 0x0010 (0x000000 - 0x000010)
class FBattlePassShowRewardParams : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 16;

public:
};

/// Struct /Script/FortniteUI.CycledItemPreviewSettings
/// Size: 0x00B8 (0x000000 - 0x0000B8)
class FCycledItemPreviewSettings : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 184;

public:
};

/// Struct /Script/FortniteUI.FortBattlePassVideoAnnotation
/// Size: 0x0028 (0x000000 - 0x000028)
class FFortBattlePassVideoAnnotation : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 40;

public:
	DMember(float)                                     StartTime                                                   OFFSET(get<float>, {0x0, 4, 0, 0})
	DMember(float)                                     EndTime                                                     OFFSET(get<float>, {0x4, 4, 0, 0})
	SMember(FVector2D)                                 ScreenPosition                                              OFFSET(getStruct<T>, {0x8, 16, 0, 0})
	DMember(int32_t)                                   EntryAngle                                                  OFFSET(get<int32_t>, {0x18, 4, 0, 0})
	DMember(float)                                     EntryMagnitude                                              OFFSET(get<float>, {0x1C, 4, 0, 0})
	CMember(UFortItemDefinition*)                      RewardItemDefinition                                        OFFSET(get<T>, {0x20, 8, 0, 0})
};

/// Struct /Script/FortniteUI.FortSettingClassExtensions
/// Size: 0x0010 (0x000000 - 0x000010)
class FFortSettingClassExtensions : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 16;

public:
	CMember(TArray<TWeakObjectPtr>)                    Extensions                                                  OFFSET(get<T>, {0x0, 16, 0, 0})
};

/// Struct /Script/FortniteUI.FortSettingNameExtensions
/// Size: 0x0018 (0x000000 - 0x000018)
class FFortSettingNameExtensions : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 24;

public:
	DMember(bool)                                      bIncludeClassDefaultExtensions                              OFFSET(get<bool>, {0x0, 1, 0, 0})
	CMember(TArray<TWeakObjectPtr>)                    Extensions                                                  OFFSET(get<T>, {0x8, 16, 0, 0})
};

/// Struct /Script/FortniteUI.CheatMenuEntry
/// Size: 0x0040 (0x000000 - 0x000040)
class FCheatMenuEntry : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 64;

public:
	SMember(FString)                                   DevName                                                     OFFSET(getStruct<T>, {0x0, 16, 0, 0})
	SMember(FString)                                   DisplayName                                                 OFFSET(getStruct<T>, {0x10, 16, 0, 0})
	SMember(FString)                                   RichText                                                    OFFSET(getStruct<T>, {0x20, 16, 0, 0})
	CMember(TArray<FString>)                           ConsoleCommands                                             OFFSET(get<T>, {0x30, 16, 0, 0})
};

/// Struct /Script/FortniteUI.CheatMenuSection
/// Size: 0x0048 (0x000000 - 0x000048)
class FCheatMenuSection : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 72;

public:
	SMember(FString)                                   DevName                                                     OFFSET(getStruct<T>, {0x0, 16, 0, 0})
	SMember(FString)                                   DisplayName                                                 OFFSET(getStruct<T>, {0x10, 16, 0, 0})
	SMember(FString)                                   MinVersion                                                  OFFSET(getStruct<T>, {0x20, 16, 0, 0})
	CMember(TArray<FCheatMenuEntry>)                   Entries                                                     OFFSET(get<T>, {0x30, 16, 0, 0})
	DMember(bool)                                      bExpanded                                                   OFFSET(get<bool>, {0x40, 1, 0, 0})
};

/// Struct /Script/FortniteUI.FortShowdownEventBestResultsSummary
/// Size: 0x001C (0x000000 - 0x00001C)
class FFortShowdownEventBestResultsSummary : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 28;

public:
	DMember(int32_t)                                   TotalScore                                                  OFFSET(get<int32_t>, {0x0, 4, 0, 0})
	DMember(int32_t)                                   MatchesPlayed                                               OFFSET(get<int32_t>, {0x4, 4, 0, 0})
	DMember(int32_t)                                   NumVictoryRoyales                                           OFFSET(get<int32_t>, {0x8, 4, 0, 0})
	DMember(int32_t)                                   PlacementPoints                                             OFFSET(get<int32_t>, {0xC, 4, 0, 0})
	DMember(int32_t)                                   EliminationPoints                                           OFFSET(get<int32_t>, {0x10, 4, 0, 0})
	DMember(int32_t)                                   EntryFeePoints                                              OFFSET(get<int32_t>, {0x14, 4, 0, 0})
	DMember(bool)                                      bIsValidSummary                                             OFFSET(get<bool>, {0x18, 1, 0, 0})
};

/// Struct /Script/FortniteUI.FortTournamentDisplayInfo
/// Size: 0x01C8 (0x000008 - 0x0001D0)
class FFortTournamentDisplayInfo : public FTableRowBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 464;

public:
	SMember(FText)                                     TitleLine1                                                  OFFSET(getStruct<T>, {0x8, 24, 0, 0})
	SMember(FText)                                     TitleLine2                                                  OFFSET(getStruct<T>, {0x20, 24, 0, 0})
	SMember(FText)                                     ScheduleInfo                                                OFFSET(getStruct<T>, {0x38, 24, 0, 0})
	SMember(FText)                                     FlavorDescription                                           OFFSET(getStruct<T>, {0x50, 24, 0, 0})
	SMember(FText)                                     DetailsDescription                                          OFFSET(getStruct<T>, {0x68, 24, 0, 0})
	SMember(FText)                                     ShortFormatTitle                                            OFFSET(getStruct<T>, {0x80, 24, 0, 0})
	SMember(FText)                                     LongFormatTitle                                             OFFSET(getStruct<T>, {0x98, 24, 0, 0})
	SMember(FText)                                     BackgroundTitle                                             OFFSET(getStruct<T>, {0xB0, 24, 0, 0})
	DMember(int32_t)                                   PinScoreRequirement                                         OFFSET(get<int32_t>, {0xC8, 4, 0, 0})
	SMember(FText)                                     PinEarnedText                                               OFFSET(getStruct<T>, {0xD0, 24, 0, 0})
	SMember(FLinearColor)                              BaseColor                                                   OFFSET(getStruct<T>, {0xE8, 16, 0, 0})
	SMember(FLinearColor)                              PrimaryColor                                                OFFSET(getStruct<T>, {0xF8, 16, 0, 0})
	SMember(FLinearColor)                              SecondaryColor                                              OFFSET(getStruct<T>, {0x108, 16, 0, 0})
	SMember(FLinearColor)                              HighlightColor                                              OFFSET(getStruct<T>, {0x118, 16, 0, 0})
	SMember(FLinearColor)                              TitleColor                                                  OFFSET(getStruct<T>, {0x128, 16, 0, 0})
	SMember(FLinearColor)                              ShadowColor                                                 OFFSET(getStruct<T>, {0x138, 16, 0, 0})
	SMember(FLinearColor)                              BackgroundLeftColor                                         OFFSET(getStruct<T>, {0x148, 16, 0, 0})
	SMember(FLinearColor)                              BackgroundRightColor                                        OFFSET(getStruct<T>, {0x158, 16, 0, 0})
	SMember(FLinearColor)                              BackgroundTextColor                                         OFFSET(getStruct<T>, {0x168, 16, 0, 0})
	SMember(FLinearColor)                              PosterFadeColor                                             OFFSET(getStruct<T>, {0x178, 16, 0, 0})
	SMember(FText)                                     AlertText                                                   OFFSET(getStruct<T>, {0x188, 24, 0, 0})
	SMember(FText)                                     SeriesPointLeaderboardName                                  OFFSET(getStruct<T>, {0x1A0, 24, 0, 0})
	CMember(EFortTournamentAlertType)                  AlertType                                                   OFFSET(get<T>, {0x1B8, 1, 0, 0})
	CMember(TArray<FText>)                             RoundDisplayNames                                           OFFSET(get<T>, {0x1C0, 16, 0, 0})
};

/// Struct /Script/FortniteUI.FortEventStyleInfo
/// Size: 0x00A0 (0x000008 - 0x0000A8)
class FFortEventStyleInfo : public FTableRowBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 168;

public:
	SMember(FLinearColor)                              BaseColor                                                   OFFSET(getStruct<T>, {0x8, 16, 0, 0})
	SMember(FLinearColor)                              PrimaryColor                                                OFFSET(getStruct<T>, {0x18, 16, 0, 0})
	SMember(FLinearColor)                              SecondaryColor                                              OFFSET(getStruct<T>, {0x28, 16, 0, 0})
	SMember(FLinearColor)                              HighlightColor                                              OFFSET(getStruct<T>, {0x38, 16, 0, 0})
	SMember(FLinearColor)                              TitleColor                                                  OFFSET(getStruct<T>, {0x48, 16, 0, 0})
	SMember(FLinearColor)                              ShadowColor                                                 OFFSET(getStruct<T>, {0x58, 16, 0, 0})
	SMember(FLinearColor)                              BackgroundLeftColor                                         OFFSET(getStruct<T>, {0x68, 16, 0, 0})
	SMember(FLinearColor)                              BackgroundRightColor                                        OFFSET(getStruct<T>, {0x78, 16, 0, 0})
	SMember(FLinearColor)                              BackgroundTextColor                                         OFFSET(getStruct<T>, {0x88, 16, 0, 0})
	SMember(FLinearColor)                              PosterFadeColor                                             OFFSET(getStruct<T>, {0x98, 16, 0, 0})
};

/// Struct /Script/FortniteUI.BundledItemInfo
/// Size: 0x0018 (0x000000 - 0x000018)
class FBundledItemInfo : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 24;

public:
	SMember(FString)                                   TemplateId                                                  OFFSET(getStruct<T>, {0x0, 16, 0, 0})
	DMember(int32_t)                                   Quantity                                                    OFFSET(get<int32_t>, {0x10, 4, 0, 0})
	DMember(bool)                                      bOwned                                                      OFFSET(get<bool>, {0x14, 1, 0, 0})
};

/// Struct /Script/FortniteUI.FortHeroNamesData
/// Size: 0x0030 (0x000008 - 0x000038)
class FFortHeroNamesData : public FTableRowBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 56;

public:
	SMember(FString)                                   FirstName                                                   OFFSET(getStruct<T>, {0x8, 16, 0, 0})
	SMember(FString)                                   NickName                                                    OFFSET(getStruct<T>, {0x18, 16, 0, 0})
	SMember(FString)                                   LastName                                                    OFFSET(getStruct<T>, {0x28, 16, 0, 0})
};

/// Struct /Script/FortniteUI.FortUIXpInfo
/// Size: 0x002C (0x000000 - 0x00002C)
class FFortUIXpInfo : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 44;

public:
	DMember(int32_t)                                   InitialLevel                                                OFFSET(get<int32_t>, {0x0, 4, 0, 0})
	DMember(int32_t)                                   InitialDisplayXp                                            OFFSET(get<int32_t>, {0x4, 4, 0, 0})
	SMember(FFortExperienceDelta)                      ChangeInXp                                                  OFFSET(getStruct<T>, {0x8, 36, 0, 0})
};

/// Struct /Script/FortniteUI.FortWeaponBoardDisplaySlot
/// Size: 0x0090 (0x000000 - 0x000090)
class FFortWeaponBoardDisplaySlot : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 144;

public:
	SMember(FGameplayTag)                              RequiredTag                                                 OFFSET(getStruct<T>, {0x0, 4, 0, 0})
	SMember(FTransform)                                MeshRelativeTransform                                       OFFSET(getStruct<T>, {0x10, 96, 0, 0})
	SMember(FVector)                                   LocalOffsetMultiplier                                       OFFSET(getStruct<T>, {0x70, 24, 0, 0})
};

/// Struct /Script/FortniteUI.FortWeaponBoardDisplaySlotItem
/// Size: 0x00A0 (0x000000 - 0x0000A0)
class FFortWeaponBoardDisplaySlotItem : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 160;

public:
	SMember(FFortWeaponBoardDisplaySlot)               DisplaySlot                                                 OFFSET(getStruct<T>, {0x0, 144, 0, 0})
};

/// Struct /Script/FortniteUI.ProgressiveStageItemInfo
/// Size: 0x0068 (0x000000 - 0x000068)
class FProgressiveStageItemInfo : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 104;

public:
	CMember(TArray<UFortItemDefinition*>)              RewardTokens                                                OFFSET(get<T>, {0x0, 16, 0, 0})
	SMember(FText)                                     OverrideName                                                OFFSET(getStruct<T>, {0x20, 24, 0, 0})
	CMember(TWeakObjectPtr<UMaterialInterface*>)       TileMaterial                                                OFFSET(get<T>, {0x38, 32, 0, 0})
	DMember(bool)                                      bHidden                                                     OFFSET(get<bool>, {0x58, 1, 0, 0})
	DMember(bool)                                      bAllowPreviewStyles                                         OFFSET(get<bool>, {0x59, 1, 0, 0})
	DMember(bool)                                      bIsLocked                                                   OFFSET(get<bool>, {0x5A, 1, 0, 0})
	DMember(int32_t)                                   AdditionalMonthsRequired                                    OFFSET(get<int32_t>, {0x5C, 4, 0, 0})
	DMember(int32_t)                                   StageIndex                                                  OFFSET(get<int32_t>, {0x60, 4, 0, 0})
};

/// Struct /Script/FortniteUI.ProgressiveSetInfo
/// Size: 0x0060 (0x000000 - 0x000060)
class FProgressiveSetInfo : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 96;

public:
	SMember(FText)                                     SetName                                                     OFFSET(getStruct<T>, {0x0, 24, 0, 0})
	CMember(TWeakObjectPtr<UMaterialInterface*>)       TileMaterial                                                OFFSET(get<T>, {0x18, 32, 0, 0})
	CMember(EProgressiveSetProgress)                   SetProgress                                                 OFFSET(get<T>, {0x38, 1, 0, 0})
	DMember(int32_t)                                   UnlockedStagesCount                                         OFFSET(get<int32_t>, {0x3C, 4, 0, 0})
	DMember(int32_t)                                   TotalStagesCount                                            OFFSET(get<int32_t>, {0x40, 4, 0, 0})
};

/// Struct /Script/FortniteUI.RewardsDataIds
/// Size: 0x0020 (0x000000 - 0x000020)
class FRewardsDataIds : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 32;

public:
	CMember(TArray<UFortTournamentPayoutThresholdEntry*>) ThresholdEntries                                         OFFSET(get<T>, {0x0, 16, 0, 0})
};

/// Struct /Script/FortniteUI.FortAthenaTutorialHighlightInfo
/// Size: 0x0040 (0x000000 - 0x000040)
class FFortAthenaTutorialHighlightInfo : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 64;

public:
	SMember(FGameplayTag)                              WidgetToHighlight                                           OFFSET(getStruct<T>, {0x0, 4, 0, 0})
	SMember(FGameplayTag)                              ItemHighlightTag                                            OFFSET(getStruct<T>, {0x4, 4, 0, 0})
	SMember(FMargin)                                   HighlightMargin                                             OFFSET(getStruct<T>, {0x8, 16, 0, 0})
	CMember(TWeakObjectPtr<UClass*>)                   HighlightWidgetOverride                                     OFFSET(get<T>, {0x18, 32, 0, 0})
	DMember(bool)                                      bIsLegacyHighlight                                          OFFSET(get<bool>, {0x38, 1, 0, 0})
};

/// Struct /Script/FortniteUI.FortAthenaTutorialScreenInfo
/// Size: 0x0100 (0x000000 - 0x000100)
class FFortAthenaTutorialScreenInfo : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 256;

public:
	CMember(EFortAthenaTutorialSubstep)                Substep                                                     OFFSET(get<T>, {0x0, 1, 0, 0})
	SMember(FVector2D)                                 TextPromptPosition                                          OFFSET(getStruct<T>, {0x8, 16, 0, 0})
	SMember(FVector2D)                                 TextPromptPosition_AthenaHUD                                OFFSET(getStruct<T>, {0x18, 16, 0, 0})
	SMember(FAnchors)                                  TextPromptAnchors                                           OFFSET(getStruct<T>, {0x28, 32, 0, 0})
	SMember(FAnchors)                                  TextPromptAnchors_AthenaHUD                                 OFFSET(getStruct<T>, {0x48, 32, 0, 0})
	SMember(FText)                                     TextPromptText_Touch                                        OFFSET(getStruct<T>, {0x68, 24, 0, 0})
	SMember(FText)                                     TextPromptText_Gamepad                                      OFFSET(getStruct<T>, {0x80, 24, 0, 0})
	SMember(FText)                                     TextPromptText_TouchLegacy                                  OFFSET(getStruct<T>, {0x98, 24, 0, 0})
	SMember(FDataTableRowHandle)                       ActionWidget_DataTableRow                                   OFFSET(getStruct<T>, {0xB0, 16, 0, 0})
	CMember(TArray<FName>)                             KeybindWidget_NameArray                                     OFFSET(get<T>, {0xC0, 16, 0, 0})
	CMember(TArray<FName>)                             KeybindWidget_GamepadNameArray                              OFFSET(get<T>, {0xD0, 16, 0, 0})
	DMember(bool)                                      ForceSingleInputKeybind                                     OFFSET(get<bool>, {0xE0, 1, 0, 0})
	CMember(TArray<FFortAthenaTutorialHighlightInfo>)  HighlightInfo                                               OFFSET(get<T>, {0xE8, 16, 0, 0})
	DMember(bool)                                      DisplayNextButton                                           OFFSET(get<bool>, {0xF8, 1, 0, 0})
	DMember(bool)                                      DisplayTextPromptTarget                                     OFFSET(get<bool>, {0xF9, 1, 0, 0})
	CMember(EFortAthenaTutorialScreenExtraWidget)      ExtraWidget                                                 OFFSET(get<T>, {0xFA, 1, 0, 0})
};

/// Struct /Script/FortniteUI.FortAthenaTutorialStepInfo
/// Size: 0x0018 (0x000000 - 0x000018)
class FFortAthenaTutorialStepInfo : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 24;

public:
	CMember(EFortAthenaTutorialStep)                   TutorialStep                                                OFFSET(get<T>, {0x0, 1, 0, 0})
	CMember(TArray<FFortAthenaTutorialScreenInfo>)     StepScreenInfo                                              OFFSET(get<T>, {0x8, 16, 0, 0})
};

/// Struct /Script/FortniteUI.FortAthenaTutorialStandaloneStepInfo
/// Size: 0x0108 (0x000000 - 0x000108)
class FFortAthenaTutorialStandaloneStepInfo : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 264;

public:
	CMember(EFortAthenaTutorial_StandaloneStep)        StandaloneStep                                              OFFSET(get<T>, {0x0, 1, 0, 0})
	SMember(FFortAthenaTutorialScreenInfo)             StepScreenInfo                                              OFFSET(getStruct<T>, {0x8, 256, 0, 0})
};

/// Struct /Script/FortniteUI.FortAthenaStandaloneTutorialStepInfo
/// Size: 0x0010 (0x000000 - 0x000010)
class FFortAthenaStandaloneTutorialStepInfo : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 16;

public:
	CMember(TArray<FFortAthenaTutorialScreenInfo>)     StepScreenInfo                                              OFFSET(get<T>, {0x0, 16, 0, 0})
};

/// Struct /Script/FortniteUI.UIKitContextMenuActionInfo
/// Size: 0x0050 (0x000000 - 0x000050)
class FUIKitContextMenuActionInfo : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 80;

public:
	SMember(FText)                                     DisplayName                                                 OFFSET(getStruct<T>, {0x0, 24, 0, 0})
	CMember(TWeakObjectPtr<UTexture2D*>)               IconTexture                                                 OFFSET(get<T>, {0x18, 32, 0, 0})
	DMember(int32_t)                                   SortPriority                                                OFFSET(get<int32_t>, {0x38, 4, 0, 0})
	DMember(bool)                                      bIsAvailable                                                OFFSET(get<bool>, {0x3C, 1, 0, 0})
	SMember(FDelegateProperty)                         InteractionDelegate                                         OFFSET(getStruct<T>, {0x40, 12, 0, 0})
};

/// Struct /Script/FortniteUI.PluginUIStateWidgetEntry
/// Size: 0x0028 (0x000000 - 0x000028)
class FPluginUIStateWidgetEntry : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 40;

public:
	SMember(FName)                                     EntryName                                                   OFFSET(getStruct<T>, {0x0, 4, 0, 0})
	CMember(TWeakObjectPtr<UClass*>)                   WidgetClass                                                 OFFSET(get<T>, {0x8, 32, 0, 0})
};

/// Struct /Script/FortniteUI.LoadedUIManagerEntry
/// Size: 0x0020 (0x000000 - 0x000020)
class FLoadedUIManagerEntry : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 32;

public:
	CMember(UClass*)                                   UIManagerClass                                              OFFSET(get<T>, {0x18, 8, 0, 0})
};

/// Struct /Script/FortniteUI.RegisteredUIManagerEntry
/// Size: 0x0028 (0x000000 - 0x000028)
class FRegisteredUIManagerEntry : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 40;

public:
	CMember(TWeakObjectPtr<UClass*>)                   UIManagerClass                                              OFFSET(get<T>, {0x8, 32, 0, 0})
};

/// Struct /Script/FortniteUI.FortRootViewportLayoutInfo
/// Size: 0x0018 (0x000000 - 0x000018)
class FFortRootViewportLayoutInfo : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 24;

public:
	CMember(TWeakObjectPtr<UFortLocalPlayer*>)         LocalPlayer                                                 OFFSET(get<T>, {0x0, 8, 0, 0})
	CMember(UUserWidget*)                              RootLayout                                                  OFFSET(get<T>, {0x8, 8, 0, 0})
};

/// Struct /Script/FortniteUI.FortUIManager_Campaign_Player
/// Size: 0x0018 (0x000000 - 0x000018)
class FFortUIManager_Campaign_Player : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 24;

public:
	CMember(UFortLocalPlayer*)                         Player                                                      OFFSET(get<T>, {0x0, 8, 0, 0})
	CMember(TScriptInterface<Class>)                   Manager                                                     OFFSET(get<T>, {0x8, 16, 0, 0})
};

/// Struct /Script/FortniteUI.FortVariantFilterContext
/// Size: 0x0030 (0x000000 - 0x000030)
class FFortVariantFilterContext : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 48;

public:
};

/// Struct /Script/FortniteUI.OfferGroupAnalyticsData
/// Size: 0x0010 (0x000000 - 0x000010)
class FOfferGroupAnalyticsData : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 16;

public:
	CMember(TArray<FString>)                           mcpAssetNames                                               OFFSET(get<T>, {0x0, 16, 0, 0})
};

/// Struct /Script/FortniteUI.ContentPushState
/// Size: 0x0003 (0x000000 - 0x000003)
class FContentPushState : public MDKBase
{ 
	friend MDKHandler;
	friend MDKBase;
	static inline constexpr uint64_t __MDKClassSize = 3;

public:
	DMember(bool)                                      bHideHeader                                                 OFFSET(get<bool>, {0x0, 1, 0, 0})
	DMember(bool)                                      bHideFooter                                                 OFFSET(get<bool>, {0x1, 1, 0, 0})
	DMember(bool)                                      bHideChatWidget                                             OFFSET(get<bool>, {0x2, 1, 0, 0})
};

/// Enum /Script/FortniteUI.EBackgroundSource
/// Size: 0x04
enum EBackgroundSource : uint8_t
{
	EBackgroundSource__CMS0                                                          = 0,
	EBackgroundSource__LobbyData1                                                    = 1,
	EBackgroundSource__URL2                                                          = 2,
	EBackgroundSource__EBackgroundSource_MAX3                                        = 3
};

/// Enum /Script/FortniteUI.EFortUIFeature
/// Size: 0x70
enum EFortUIFeature : uint8_t
{
	EFortUIFeature__ShowHome0                                                        = 0,
	EFortUIFeature__ShowPlay1                                                        = 1,
	EFortUIFeature__ShowCommand2                                                     = 2,
	EFortUIFeature__ShowHeros3                                                       = 3,
	EFortUIFeature__ShowSquads4                                                      = 4,
	EFortUIFeature__ShowArmory5                                                      = 5,
	EFortUIFeature__ShowLocker6                                                      = 6,
	EFortUIFeature__ShowSkillTree7                                                   = 7,
	EFortUIFeature__ShowStore8                                                       = 8,
	EFortUIFeature__ShowQuests9                                                      = 9,
	EFortUIFeature__ShowMainStore10                                                  = 10,
	EFortUIFeature__ShowContextHelpMenu11                                            = 11,
	EFortUIFeature__ShowCampaign12                                                   = 12,
	EFortUIFeature__ShowActiveBoost13                                                = 13,
	EFortUIFeature__ShowJournal14                                                    = 14,
	EFortUIFeature__ShowPartyBar15                                                   = 15,
	EFortUIFeature__ShowChatWindow16                                                 = 16,
	EFortUIFeature__ShowFriendsMenu17                                                = 17,
	EFortUIFeature__ShowObjectives18                                                 = 18,
	EFortUIFeature__ShowRatingIconsInTopbar19                                        = 19,
	EFortUIFeature__ShowAntiAddictionMessage20                                       = 20,
	EFortUIFeature__ShowMinorShutdownMessage21                                       = 21,
	EFortUIFeature__ShowHealthWarningScreen22                                        = 22,
	EFortUIFeature__ShowSimplifiedHUD23                                              = 23,
	EFortUIFeature__LargeHeaderFooterButtons24                                       = 24,
	EFortUIFeature__ShowAthenaFavoriting25                                           = 25,
	EFortUIFeature__ShowAthenaItemRandomization26                                    = 26,
	EFortUIFeature__ShowAthenaQuests27                                               = 27,
	EFortUIFeature__ShowBattlePass28                                                 = 28,
	EFortUIFeature__ShowNewBattlePass29                                              = 29,
	EFortUIFeature__ShowDynamicBattlePass30                                          = 30,
	EFortUIFeature__ShowBattlePassFAQ31                                              = 31,
	EFortUIFeature__ShowReplays32                                                    = 32,
	EFortUIFeature__ShowProfileStatsUI33                                             = 33,
	EFortUIFeature__ShowAthenaItemShop34                                             = 34,
	EFortUIFeature__ShowMultiProductItemShop35                                       = 35,
	EFortUIFeature__ShowShowdown36                                                   = 36,
	EFortUIFeature__SpecialEventsStart37                                             = 37,
	EFortUIFeature__ShowSpecialEvent38                                               = 38,
	EFortUIFeature__ShowWinterfest39                                                 = 39,
	EFortUIFeature__SpecialEventsEnd40                                               = 40,
	EFortUIFeature__ShowSpatialUI41                                                  = 41,
	EFortUIFeature__ShowSocial42                                                     = 42,
	EFortUIFeature__ShowAccountBoosts43                                              = 43,
	EFortUIFeature__ShowCustomerSupport44                                            = 44,
	EFortUIFeature__ShowGlobalChat45                                                 = 45,
	EFortUIFeature__ShowEULA46                                                       = 46,
	EFortUIFeature__ShowEndOfZoneCinematic47                                         = 47,
	EFortUIFeature__ShowOnboardingCinematics48                                       = 48,
	EFortUIFeature__ShowFounderBannerIcons49                                         = 49,
	EFortUIFeature__ShowCurrentRegionInLobby50                                       = 50,
	EFortUIFeature__ShowPrerollLlamas51                                              = 51,
	EFortUIFeature__EnableFoundersDailyRewards52                                     = 52,
	EFortUIFeature__EnableMatchmakingRegionSetting53                                 = 53,
	EFortUIFeature__EnableLanguageSetting54                                          = 54,
	EFortUIFeature__EnableFriendCodeSetting55                                        = 55,
	EFortUIFeature__EnableEarlyAccessLoadingScreenBanner56                           = 56,
	EFortUIFeature__EnableAlterationModifications57                                  = 57,
	EFortUIFeature__EnableSchematicRarityUpgrade58                                   = 58,
	EFortUIFeature__EnableMissionActivationVote59                                    = 59,
	EFortUIFeature__EnableLtmRetrieveTheData60                                       = 60,
	EFortUIFeature__EnableUpgradesVideos61                                           = 61,
	EFortUIFeature__ShowPreviewTestTab62                                             = 62,
	EFortUIFeature__ShowDMCustomization63                                            = 63,
	EFortUIFeature__ShowDMModes64                                                    = 64,
	EFortUIFeature__EnableSearchTabInTopNavigationBar65                              = 65,
	EFortUIFeature__EnableDiscoverTabInTopNavigationBar66                            = 66,
	EFortUIFeature__EnableLibraryTabInTopNavigationBar67                             = 67,
	EFortUIFeature__Max_None68                                                       = 68,
	EFortUIFeature__EFortUIFeature_MAX69                                             = 69
};

/// Enum /Script/FortniteUI.EFortFrontEndFeatureStateReason
/// Size: 0x08
enum EFortFrontEndFeatureStateReason : uint8_t
{
	EFortFrontEndFeatureStateReason__Default0                                        = 0,
	EFortFrontEndFeatureStateReason__NoHeroes1                                       = 1,
	EFortFrontEndFeatureStateReason__Tutorial2                                       = 2,
	EFortFrontEndFeatureStateReason__BROnly3                                         = 3,
	EFortFrontEndFeatureStateReason__NoPlayerController4                             = 4,
	EFortFrontEndFeatureStateReason__UnexpectedFeature5                              = 5,
	EFortFrontEndFeatureStateReason__Invalid6                                        = 6,
	EFortFrontEndFeatureStateReason__EFortFrontEndFeatureStateReason_MAX7            = 7
};

/// Enum /Script/FortniteUI.EFortFrontEndFeatureState
/// Size: 0x05
enum EFortFrontEndFeatureState : uint8_t
{
	EFortFrontEndFeatureState__Enabled0                                              = 0,
	EFortFrontEndFeatureState__Disabled1                                             = 1,
	EFortFrontEndFeatureState__Hidden2                                               = 2,
	EFortFrontEndFeatureState__Invalid3                                              = 3,
	EFortFrontEndFeatureState__EFortFrontEndFeatureState_MAX4                        = 4
};

/// Enum /Script/FortniteUI.EFortFrontEndFeature
/// Size: 0x12
enum EFortFrontEndFeature : uint8_t
{
	EFortFrontEndFeature__ShowHomeBase0                                              = 0,
	EFortFrontEndFeature__ShowHeroList1                                              = 1,
	EFortFrontEndFeature__ShowVault2                                                 = 2,
	EFortFrontEndFeature__ShowStore3                                                 = 3,
	EFortFrontEndFeature__PlayZone4                                                  = 4,
	EFortFrontEndFeature__ShowHeroSelect5                                            = 5,
	EFortFrontEndFeature__RecruitHero6                                               = 6,
	EFortFrontEndFeature__ShowHomeBaseOverview7                                      = 7,
	EFortFrontEndFeature__STWArmory_Transform8                                       = 8,
	EFortFrontEndFeature__STWArmory_CollectionBook9                                  = 9,
	EFortFrontEndFeature__MAX_None10                                                 = 10,
	EFortFrontEndFeature__EFortFrontEndFeature_MAX11                                 = 11
};

/// Enum /Script/FortniteUI.EFortItemCooldownType
/// Size: 0x09
enum EFortItemCooldownType : uint8_t
{
	EFortItemCooldownType__None0                                                     = 0,
	EFortItemCooldownType__AmmoRegeneration1                                         = 1,
	EFortItemCooldownType__ItemActivation2                                           = 2,
	EFortItemCooldownType__WeaponReloading3                                          = 3,
	EFortItemCooldownType__Death4                                                    = 4,
	EFortItemCooldownType__AthenaWeaponFireCooldown5                                 = 5,
	EFortItemCooldownType__AbilitySetActivateByInputAbility6                         = 6,
	EFortItemCooldownType__DirectProgressUpdate7                                     = 7,
	EFortItemCooldownType__EFortItemCooldownType_MAX8                                = 8
};

/// Enum /Script/FortniteUI.EFortContentBrowserQuickbarState
/// Size: 0x05
enum EFortContentBrowserQuickbarState : uint8_t
{
	EFortContentBrowserQuickbarState__Disabled0                                      = 0,
	EFortContentBrowserQuickbarState__Creative1                                      = 1,
	EFortContentBrowserQuickbarState__Primary2                                       = 2,
	EFortContentBrowserQuickbarState__Trap3                                          = 3,
	EFortContentBrowserQuickbarState__EFortContentBrowserQuickbarState_MAX4          = 4
};

/// Enum /Script/FortniteUI.EFortBuildingInteraction
/// Size: 0x09
enum EFortBuildingInteraction : uint8_t
{
	EFortBuildingInteraction__None0                                                  = 0,
	EFortBuildingInteraction__Build1                                                 = 1,
	EFortBuildingInteraction__Repair2                                                = 2,
	EFortBuildingInteraction__Upgrade3                                               = 3,
	EFortBuildingInteraction__Edit4                                                  = 4,
	EFortBuildingInteraction__BeingModified5                                         = 5,
	EFortBuildingInteraction__ConfirmEdit6                                           = 6,
	EFortBuildingInteraction__Creative7                                              = 7,
	EFortBuildingInteraction__EFortBuildingInteraction_MAX8                          = 8
};

/// Enum /Script/FortniteUI.EFortBuildingHealthDisplayRule
/// Size: 0x04
enum EFortBuildingHealthDisplayRule : uint8_t
{
	EFortBuildingHealthDisplayRule__Never0                                           = 0,
	EFortBuildingHealthDisplayRule__Allowed1                                         = 1,
	EFortBuildingHealthDisplayRule__Always2                                          = 2,
	EFortBuildingHealthDisplayRule__EFortBuildingHealthDisplayRule_MAX3              = 3
};

/// Enum /Script/FortniteUI.EFortHitPointModificationReason
/// Size: 0x07
enum EFortHitPointModificationReason : uint8_t
{
	EFortHitPointModificationReason__Invalid0                                        = 0,
	EFortHitPointModificationReason__InitalSet1                                      = 1,
	EFortHitPointModificationReason__AutoRegen2                                      = 2,
	EFortHitPointModificationReason__ItemRegen3                                      = 3,
	EFortHitPointModificationReason__DamageOverTime4                                 = 4,
	EFortHitPointModificationReason__DamageReceived5                                 = 5,
	EFortHitPointModificationReason__EFortHitPointModificationReason_MAX6            = 6
};

/// Enum /Script/FortniteUI.EFortStoreState
/// Size: 0x20
enum EFortStoreState : uint8_t
{
	EFortStoreState__Error0                                                          = 0,
	EFortStoreState__Closed1                                                         = 1,
	EFortStoreState__CardPackStore2                                                  = 2,
	EFortStoreState__CurrencyStore3                                                  = 3,
	EFortStoreState__WebPayment4                                                     = 4,
	EFortStoreState__PurchaseOpen5                                                   = 5,
	EFortStoreState__PackOpen6                                                       = 6,
	EFortStoreState__CardEnter7                                                      = 7,
	EFortStoreState__CardBackReveal8                                                 = 8,
	EFortStoreState__CardFlip9                                                       = 9,
	EFortStoreState__CardFrontReveal10                                               = 10,
	EFortStoreState__CardExit11                                                      = 11,
	EFortStoreState__SummaryAdd12                                                    = 12,
	EFortStoreState__PackDestroy13                                                   = 13,
	EFortStoreState__Summary14                                                       = 14,
	EFortStoreState__PresentChoice15                                                 = 15,
	EFortStoreState__ChoiceMade16                                                    = 16,
	EFortStoreState__SummaryAddTransition17                                          = 17,
	EFortStoreState__MAX_None18                                                      = 18,
	EFortStoreState__EFortStoreState_MAX19                                           = 19
};

/// Enum /Script/FortniteUI.EFortUIFeatureStateReason
/// Size: 0x10
enum EFortUIFeatureStateReason : uint8_t
{
	EFortUIFeatureStateReason__Default0                                              = 0,
	EFortUIFeatureStateReason__Tutorial1                                             = 1,
	EFortUIFeatureStateReason__ContentInstall2                                       = 2,
	EFortUIFeatureStateReason__AccountRestrictions3                                  = 3,
	EFortUIFeatureStateReason__Platform4                                             = 4,
	EFortUIFeatureStateReason__SeasonOrEventNotActive5                               = 5,
	EFortUIFeatureStateReason__NoPlayerController6                                   = 6,
	EFortUIFeatureStateReason__UnexpectedFeature7                                    = 7,
	EFortUIFeatureStateReason__Invalid8                                              = 8,
	EFortUIFeatureStateReason__EFortUIFeatureStateReason_MAX9                        = 9
};

/// Enum /Script/FortniteUI.EFortUIFeatureState
/// Size: 0x05
enum EFortUIFeatureState : uint8_t
{
	EFortUIFeatureState__Enabled0                                                    = 0,
	EFortUIFeatureState__Disabled1                                                   = 1,
	EFortUIFeatureState__Hidden2                                                     = 2,
	EFortUIFeatureState__Invalid3                                                    = 3,
	EFortUIFeatureState__EFortUIFeatureState_MAX4                                    = 4
};

/// Enum /Script/FortniteUI.EFortPrioritizedWidgetContestedBehavior
/// Size: 0x03
enum EFortPrioritizedWidgetContestedBehavior : uint8_t
{
	EFortPrioritizedWidgetContestedBehavior__QueueBehind0                            = 0,
	EFortPrioritizedWidgetContestedBehavior__StompOther1                             = 1,
	EFortPrioritizedWidgetContestedBehavior__EFortPrioritizedWidgetContestedBehavior_MAX2 = 2
};

/// Enum /Script/FortniteUI.EFortPrioritizedWidgetPriority
/// Size: 0x08
enum EFortPrioritizedWidgetPriority : uint8_t
{
	EFortPrioritizedWidgetPriority__Priority0                                        = 0,
	EFortPrioritizedWidgetPriority__Priority1                                        = 1,
	EFortPrioritizedWidgetPriority__Priority2                                        = 2,
	EFortPrioritizedWidgetPriority__Priority3                                        = 3,
	EFortPrioritizedWidgetPriority__Priority4                                        = 4,
	EFortPrioritizedWidgetPriority__Priority5                                        = 5,
	EFortPrioritizedWidgetPriority__NumberOfPrios6                                   = 6,
	EFortPrioritizedWidgetPriority__EFortPrioritizedWidgetPriority_MAX7              = 7
};

/// Enum /Script/FortniteUI.EPostGameHUDMode
/// Size: 0x05
enum EPostGameHUDMode : uint8_t
{
	EPostGameHUDMode__None0                                                          = 0,
	EPostGameHUDMode__AllHidden1                                                     = 1,
	EPostGameHUDMode__Spectating2                                                    = 2,
	EPostGameHUDMode__AllHiddenExceptXP3                                             = 3,
	EPostGameHUDMode__EPostGameHUDMode_MAX4                                          = 4
};

/// Enum /Script/FortniteUI.EPostGameClickCatcherMode
/// Size: 0x05
enum EPostGameClickCatcherMode : uint8_t
{
	EPostGameClickCatcherMode__Catch_None0                                           = 0,
	EPostGameClickCatcherMode__Catch_MobileOnly1                                     = 1,
	EPostGameClickCatcherMode__Catch_MouseOnly2                                      = 2,
	EPostGameClickCatcherMode__Catch_All3                                            = 3,
	EPostGameClickCatcherMode__Catch_MAX4                                            = 4
};

/// Enum /Script/FortniteUI.EInputPriority
/// Size: 0x08
enum EInputPriority : uint8_t
{
	EInputPriority__Normal0                                                          = 0,
	EInputPriority__Menu1                                                            = 1,
	EInputPriority__Chat2                                                            = 2,
	EInputPriority__Modal3                                                           = 3,
	EInputPriority__Confirmation4                                                    = 4,
	EInputPriority__Error5                                                           = 5,
	EInputPriority__HUD6                                                             = 6,
	EInputPriority__EInputPriority_MAX7                                              = 7
};

/// Enum /Script/FortniteUI.DateFormat
/// Size: 0x06
enum DateFormat : uint8_t
{
	CountdownTextual0                                                                = 0,
	CountdownNumeric1                                                                = 1,
	CountdownNumUnder12Hours2                                                        = 2,
	Date3                                                                            = 3,
	CountdownNumericDilatable4                                                       = 4,
	DateFormat_MAX5                                                                  = 5
};

/// Enum /Script/FortniteUI.EFlagStatus
/// Size: 0x03
enum EFlagStatus : uint8_t
{
	EFlagStatus__FlagPresent0                                                        = 0,
	EFlagStatus__FlagNotPresent1                                                     = 1,
	EFlagStatus__EFlagStatus_MAX2                                                    = 2
};

/// Enum /Script/FortniteUI.EFortInputMode
/// Size: 0x04
enum EFortInputMode : uint8_t
{
	EFortInputMode__Frontend0                                                        = 0,
	EFortInputMode__InGame1                                                          = 1,
	EFortInputMode__InGameCursor2                                                    = 2,
	EFortInputMode__EFortInputMode_MAX3                                              = 3
};

/// Enum /Script/FortniteUI.EFortUrlType
/// Size: 0x05
enum EFortUrlType : uint8_t
{
	EFortUrlType__NormalWebLink0                                                     = 0,
	EFortUrlType__AccountCreationLink1                                               = 1,
	EFortUrlType__HelpLink2                                                          = 2,
	EFortUrlType__EULALink3                                                          = 3,
	EFortUrlType__EFortUrlType_MAX4                                                  = 4
};

/// Enum /Script/FortniteUI.EGridSortKind
/// Size: 0x06
enum EGridSortKind : uint8_t
{
	EGridSortKind__None0                                                             = 0,
	EGridSortKind__ByNumber1                                                         = 1,
	EGridSortKind__ByString2                                                         = 2,
	EGridSortKind__ByNumberThenString3                                               = 3,
	EGridSortKind__ByStringThenNumber4                                               = 4,
	EGridSortKind__EGridSortKind_MAX5                                                = 5
};

/// Enum /Script/FortniteUI.EViolatorIntensity
/// Size: 0x04
enum EViolatorIntensity : uint8_t
{
	EViolatorIntensity__Low0                                                         = 0,
	EViolatorIntensity__Medium1                                                      = 1,
	EViolatorIntensity__High2                                                        = 2,
	EViolatorIntensity__EViolatorIntensity_MAX3                                      = 3
};

/// Enum /Script/FortniteUI.EItemShopTileSize
/// Size: 0x06
enum EItemShopTileSize : uint8_t
{
	EItemShopTileSize__Mini0                                                         = 0,
	EItemShopTileSize__Small1                                                        = 1,
	EItemShopTileSize__Normal2                                                       = 2,
	EItemShopTileSize__DoubleWide3                                                   = 3,
	EItemShopTileSize__TripleWide4                                                   = 4,
	EItemShopTileSize__Max5                                                          = 5
};

/// Enum /Script/FortniteUI.EItemShopCurrency
/// Size: 0x03
enum EItemShopCurrency : uint8_t
{
	EItemShopCurrency__VBucks0                                                       = 0,
	EItemShopCurrency__RealMoney1                                                    = 1,
	EItemShopCurrency__EItemShopCurrency_MAX2                                        = 2
};

/// Enum /Script/FortniteUI.EFortItemCardSize
/// Size: 0x10
enum EFortItemCardSize : uint8_t
{
	EFortItemCardSize__XXS0                                                          = 0,
	EFortItemCardSize__XS1                                                           = 1,
	EFortItemCardSize__Wide_S2                                                       = 2,
	EFortItemCardSize__S3                                                            = 3,
	EFortItemCardSize__M4                                                            = 4,
	EFortItemCardSize__L5                                                            = 5,
	EFortItemCardSize__Wide_L6                                                       = 6,
	EFortItemCardSize__XL7                                                           = 7,
	EFortItemCardSize__XXL8                                                          = 8,
	EFortItemCardSize__EFortItemCardSize_MAX9                                        = 9
};

/// Enum /Script/FortniteUI.EFortPlayerPowerRatingType
/// Size: 0x05
enum EFortPlayerPowerRatingType : uint8_t
{
	EFortPlayerPowerRatingType__Auto0                                                = 0,
	EFortPlayerPowerRatingType__Campaign1                                            = 1,
	EFortPlayerPowerRatingType__Phoenix2                                             = 2,
	EFortPlayerPowerRatingType__Max_None3                                            = 3,
	EFortPlayerPowerRatingType__EFortPlayerPowerRatingType_MAX4                      = 4
};

/// Enum /Script/FortniteUI.EActivatePanelOption
/// Size: 0x04
enum EActivatePanelOption : uint8_t
{
	EActivatePanelOption__Show0                                                      = 0,
	EActivatePanelOption__Hide1                                                      = 1,
	EActivatePanelOption__PlatformDefault2                                           = 2,
	EActivatePanelOption__EActivatePanelOption_MAX3                                  = 3
};

/// Enum /Script/FortniteUI.EFortUISpecialEvents
/// Size: 0x03
enum EFortUISpecialEvents : uint8_t
{
	NoEvent0                                                                         = 0,
	FritTemp1                                                                        = 1,
	EFortUISpecialEvents_MAX2                                                        = 2
};

/// Enum /Script/FortniteUI.ECountdownDisplay
/// Size: 0x05
enum ECountdownDisplay : uint8_t
{
	ECountdownDisplay__EventEndTime0                                                 = 0,
	ECountdownDisplay__ChallengeUnlockTime1                                          = 1,
	ECountdownDisplay__ChallengeBundleUnlockTime2                                    = 2,
	ECountdownDisplay__UnlockAlreadySet3                                             = 3,
	ECountdownDisplay__MAX4                                                          = 4
};

/// Enum /Script/FortniteUI.EAthenaEventMatchInfoSortMethod
/// Size: 0x04
enum EAthenaEventMatchInfoSortMethod : uint8_t
{
	EAthenaEventMatchInfoSortMethod__Eliminations0                                   = 0,
	EAthenaEventMatchInfoSortMethod__Place1                                          = 1,
	EAthenaEventMatchInfoSortMethod__Count2                                          = 2,
	EAthenaEventMatchInfoSortMethod__EAthenaEventMatchInfoSortMethod_MAX3            = 3
};

/// Enum /Script/FortniteUI.EFrontendVisibilityMode
/// Size: 0x08
enum EFrontendVisibilityMode : uint8_t
{
	EFrontendVisibilityMode__Normal0                                                 = 0,
	EFrontendVisibilityMode__HideTopTabsOnly1                                        = 1,
	EFrontendVisibilityMode__HideTopTabsOnlyWithoutBottomBar2                        = 2,
	EFrontendVisibilityMode__OnlyBottom3                                             = 3,
	EFrontendVisibilityMode__OnlyTop4                                                = 4,
	EFrontendVisibilityMode__OnlyTitleBar5                                           = 5,
	EFrontendVisibilityMode__Empty6                                                  = 6,
	EFrontendVisibilityMode__EFrontendVisibilityMode_MAX7                            = 7
};

/// Enum /Script/FortniteUI.EBattlePassInputs
/// Size: 0x13
enum EBattlePassInputs : uint8_t
{
	EBattlePassInputs__Back0                                                         = 0,
	EBattlePassInputs__ViewItem1                                                     = 1,
	EBattlePassInputs__PreviewAction2                                                = 2,
	EBattlePassInputs__ReplayTrailer3                                                = 3,
	EBattlePassInputs__ShowAbout4                                                    = 4,
	EBattlePassInputs__BulkBuyRewards5                                               = 5,
	EBattlePassInputs__PageComplete6                                                 = 6,
	EBattlePassInputs__ShowAboutCustomization7                                       = 7,
	EBattlePassInputs__GiftBattlePass8                                               = 8,
	EBattlePassInputs__SwipeLeft9                                                    = 9,
	EBattlePassInputs__SwipeRight10                                                  = 10,
	EBattlePassInputs__COUNT11                                                       = 11,
	EBattlePassInputs__EBattlePassInputs_MAX12                                       = 12
};

/// Enum /Script/FortniteUI.EFortDonutIdleGameObject
/// Size: 0x10
enum EFortDonutIdleGameObject : uint8_t
{
	UnsetObject0                                                                     = 0,
	Tree1                                                                            = 1,
	Mound2                                                                           = 2,
	SmallMound3                                                                      = 3,
	JumpPad4                                                                         = 4,
	Torch5                                                                           = 5,
	PeelMonster6                                                                     = 6,
	Chimichanga7                                                                     = 7,
	Arm8                                                                             = 8,
	EFortDonutIdleGameObject_MAX9                                                    = 9
};

/// Enum /Script/FortniteUI.EMotdButtonStyle
/// Size: 0x03
enum EMotdButtonStyle : uint8_t
{
	EMotdButtonStyle__Main0                                                          = 0,
	EMotdButtonStyle__Secondary1                                                     = 1,
	EMotdButtonStyle__EMotdButtonStyle_MAX2                                          = 2
};

/// Enum /Script/FortniteUI.EActivityImageLoadingState
/// Size: 0x05
enum EActivityImageLoadingState : uint8_t
{
	EActivityImageLoadingState__Unset0                                               = 0,
	EActivityImageLoadingState__Loading1                                             = 1,
	EActivityImageLoadingState__Loaded2                                              = 2,
	EActivityImageLoadingState__Error3                                               = 3,
	EActivityImageLoadingState__Max4                                                 = 4
};

/// Enum /Script/FortniteUI.EFortAthenaSurvivorTierBadgeSize
/// Size: 0x04
enum EFortAthenaSurvivorTierBadgeSize : uint8_t
{
	EFortAthenaSurvivorTierBadgeSize__Small0                                         = 0,
	EFortAthenaSurvivorTierBadgeSize__Large1                                         = 1,
	EFortAthenaSurvivorTierBadgeSize__Count2                                         = 2,
	EFortAthenaSurvivorTierBadgeSize__EFortAthenaSurvivorTierBadgeSize_MAX3          = 3
};

/// Enum /Script/FortniteUI.ECabinEmailViewState
/// Size: 0x05
enum ECabinEmailViewState : uint8_t
{
	ECabinEmailViewState__Initial0                                                   = 0,
	ECabinEmailViewState__Sending1                                                   = 1,
	ECabinEmailViewState__Sent2                                                      = 2,
	ECabinEmailViewState__SendFailed3                                                = 3,
	ECabinEmailViewState__ECabinEmailViewState_MAX4                                  = 4
};

/// Enum /Script/FortniteUI.EColorPickerType
/// Size: 0x04
enum EColorPickerType : uint8_t
{
	EColorPickerType__Swatches0                                                      = 0,
	EColorPickerType__CustomColor1                                                   = 1,
	EColorPickerType__Both2                                                          = 2,
	EColorPickerType__EColorPickerType_MAX3                                          = 3
};

/// Enum /Script/FortniteUI.EColorPickerColorRepresentation
/// Size: 0x04
enum EColorPickerColorRepresentation : uint8_t
{
	EColorPickerColorRepresentation__HSV0                                            = 0,
	EColorPickerColorRepresentation__RGB1                                            = 1,
	EColorPickerColorRepresentation__Max_NONE2                                       = 2,
	EColorPickerColorRepresentation__EColorPickerColorRepresentation_MAX3            = 3
};

/// Enum /Script/FortniteUI.EFortCreativeItemType
/// Size: 0x06
enum EFortCreativeItemType : uint8_t
{
	EFortCreativeItemType__Chest0                                                    = 0,
	EFortCreativeItemType__Item1                                                     = 1,
	EFortCreativeItemType__Collection2                                               = 2,
	EFortCreativeItemType__SubItems3                                                 = 3,
	EFortCreativeItemType__NoCreativeItems4                                          = 4,
	EFortCreativeItemType__EFortCreativeItemType_MAX5                                = 5
};

/// Enum /Script/FortniteUI.EButtonAction
/// Size: 0x04
enum EButtonAction : uint8_t
{
	EButtonAction__NextTile0                                                         = 0,
	EButtonAction__PreviousTile1                                                     = 1,
	EButtonAction__Close2                                                            = 2,
	EButtonAction__EButtonAction_MAX3                                                = 3
};

/// Enum /Script/FortniteUI.EFortItemManagementMode
/// Size: 0x04
enum EFortItemManagementMode : uint8_t
{
	EFortItemManagementMode__Details0                                                = 0,
	EFortItemManagementMode__Comparison1                                             = 1,
	EFortItemManagementMode__Mulch2                                                  = 2,
	EFortItemManagementMode__EFortItemManagementMode_MAX3                            = 3
};

/// Enum /Script/FortniteUI.ETagComparisonType
/// Size: 0x06
enum ETagComparisonType : uint8_t
{
	ETagComparisonType__HasAny0                                                      = 0,
	ETagComparisonType__HasAll1                                                      = 1,
	ETagComparisonType__HasNone2                                                     = 2,
	ETagComparisonType__HasAnyExact3                                                 = 3,
	ETagComparisonType__HasAllExact4                                                 = 4,
	ETagComparisonType__ETagComparisonType_MAX5                                      = 5
};

/// Enum /Script/FortniteUI.EFortMtxStoreOfferType
/// Size: 0x05
enum EFortMtxStoreOfferType : uint8_t
{
	EFortMtxStoreOfferType__FoundersPack0                                            = 0,
	EFortMtxStoreOfferType__CurrencyPack1                                            = 1,
	EFortMtxStoreOfferType__Unknown2                                                 = 2,
	EFortMtxStoreOfferType__Max_None3                                                = 3,
	EFortMtxStoreOfferType__EFortMtxStoreOfferType_MAX4                              = 4
};

/// Enum /Script/FortniteUI.EPresenceIndicatorState
/// Size: 0x05
enum EPresenceIndicatorState : uint8_t
{
	EPresenceIndicatorState__Online0                                                 = 0,
	EPresenceIndicatorState__Away1                                                   = 1,
	EPresenceIndicatorState__Offline2                                                = 2,
	EPresenceIndicatorState__Blocked3                                                = 3,
	EPresenceIndicatorState__EPresenceIndicatorState_MAX4                            = 4
};

/// Enum /Script/FortniteUI.ESettingType
/// Size: 0x162
enum ESettingType : uint8_t
{
	ESettingType__None0                                                              = 0,
	ESettingType__Header1                                                            = 1,
	ESettingType__WindowMode2                                                        = 2,
	ESettingType__DisplayResolution3                                                 = 3,
	ESettingType__FrameRateLimit4                                                    = 4,
	ESettingType__VideoQuality5                                                      = 5,
	ESettingType__ThreeDResolution6                                                  = 6,
	ESettingType__ViewDistance7                                                      = 7,
	ESettingType__Shadows8                                                           = 8,
	ESettingType__AntiAliasing9                                                      = 9,
	ESettingType__Textures10                                                         = 10,
	ESettingType__Effects11                                                          = 11,
	ESettingType__PostProcessing12                                                   = 12,
	ESettingType__VSync13                                                            = 13,
	ESettingType__MotionBlur14                                                       = 14,
	ESettingType__ShowGrass15                                                        = 15,
	ESettingType__MobileFPSType16                                                    = 16,
	ESettingType__ShowFPS17                                                          = 17,
	ESettingType__AllowLowPower18                                                    = 18,
	ESettingType__AllowVideoPlayback19                                               = 19,
	ESettingType__AllowDynamicResolution20                                           = 20,
	ESettingType__Disabled_AllowMultithreadedRendering21                             = 21,
	ESettingType__RenderingAPI22                                                     = 22,
	ESettingType__UseGPUCrashDebugging23                                             = 23,
	ESettingType__RegionHeader24                                                     = 24,
	ESettingType__Language25                                                         = 25,
	ESettingType__Region26                                                           = 26,
	ESettingType__MouseSensitivityYaw27                                              = 27,
	ESettingType__MouseSensitivityPitch28                                            = 28,
	ESettingType__MouseSensitivityMultiplierForAircraft29                            = 29,
	ESettingType__TouchDragSensitivity30                                             = 30,
	ESettingType__ControllerLookSensitivityYaw31                                     = 31,
	ESettingType__ControllerLookSensitivityPitch32                                   = 32,
	ESettingType__MouseTargetingMultiplier33                                         = 33,
	ESettingType__MouseScopedMultiplier34                                            = 34,
	ESettingType__GamepadTargetingMultiplier35                                       = 35,
	ESettingType__GamepadScopedMultiplier36                                          = 36,
	ESettingType__GamepadBuildingMultiplier37                                        = 37,
	ESettingType__GamepadEditModeMultiplier38                                        = 38,
	ESettingType__TouchLookAccelerationMultiplier39                                  = 39,
	ESettingType__TouchDragTargetingSensitivity40                                    = 40,
	ESettingType__TouchDragScopedSensitivity41                                       = 41,
	ESettingType__TouchBuildingMultiplier42                                          = 42,
	ESettingType__TouchEditModeMultiplier43                                          = 43,
	ESettingType__TouchVerticalSensitivity44                                         = 44,
	ESettingType__InvertPitch45                                                      = 45,
	ESettingType__InvertYaw46                                                        = 46,
	ESettingType__InvertPitchForMotion47                                             = 47,
	ESettingType__InvertPitchForAircraftPrimary48                                    = 48,
	ESettingType__InvertPitchForAircraftSecondary49                                  = 49,
	ESettingType__InvertYawForMotion50                                               = 50,
	ESettingType__GyroEnabled51                                                      = 51,
	ESettingType__GyroYawAxis52                                                      = 52,
	ESettingType__GyroSensitivity53                                                  = 53,
	ESettingType__GyroTargetingSensitivity54                                         = 54,
	ESettingType__GyroScopedSensitivity55                                            = 55,
	ESettingType__GyroHarvestingToolSensitivity56                                    = 56,
	ESettingType__SafeZone57                                                         = 57,
	ESettingType__AnonymousMode58                                                    = 58,
	ESettingType__AnonymousCharacterMode59                                           = 59,
	ESettingType__HideOtherPlayerNames60                                             = 60,
	ESettingType__HiddenMatchmakingDelay61                                           = 61,
	ESettingType__AutoJoinGameVoiceChannel62                                         = 62,
	ESettingType__ShowVoiceIndicators63                                              = 63,
	ESettingType__HUDScale64                                                         = 64,
	ESettingType__ShowViewerCount65                                                  = 65,
	ESettingType__FirstPersonCamera66                                                = 66,
	ESettingType__PeripheralLighting67                                               = 67,
	ESettingType__PingPlaceDangerMarkerWhenTargeting68                               = 68,
	ESettingType__ShowGlobalChat69                                                   = 69,
	ESettingType__ConsoleUnlockedFPS70                                               = 70,
	ESettingType__ToggleDoubleTapAutorun71                                           = 71,
	ESettingType__AutorunLockZonePreference72                                        = 72,
	ESettingType__ToggleSprint73                                                     = 73,
	ESettingType__SprintByDefault74                                                  = 74,
	ESettingType__SprintCancelsReload75                                              = 75,
	ESettingType__TapInteract76                                                      = 76,
	ESettingType__InWorldInteract77                                                  = 77,
	ESettingType__ToggleTargeting78                                                  = 78,
	ESettingType__HoldToSwapPickup79                                                 = 79,
	ESettingType__AutoEquipBetterItems80                                             = 80,
	ESettingType__EquipFirstBuildingPieceWhenSwappingQuickbars81                     = 81,
	ESettingType__EquipFirstBuildingPieceWhenSwappingQuickbarsAthena82               = 82,
	ESettingType__DisablePreEditsWhenPlacingBuilding83                               = 83,
	ESettingType__AimAssist84                                                        = 84,
	ESettingType__EditModeAimAssist85                                                = 85,
	ESettingType__TouchEdit86                                                        = 86,
	ESettingType__EditConfirmOnRelease87                                             = 87,
	ESettingType__QuickEdit88                                                        = 88,
	ESettingType__TurboBuild89                                                       = 89,
	ESettingType__CreativeTurboDelete90                                              = 90,
	ESettingType__AutoChangeMaterial91                                               = 91,
	ESettingType__GamepadAutoRun92                                                   = 92,
	ESettingType__CrossplayPreference93                                              = 93,
	ESettingType__AutoOpenDoors94                                                    = 94,
	ESettingType__AutoPickupWeapons95                                                = 95,
	ESettingType__AutoPickupWeaponsConsolePC96                                       = 96,
	ESettingType__AutoSortConsumablesToRight97                                       = 97,
	ESettingType__EnableTryBuildOnFocus98                                            = 98,
	ESettingType__EditButtonHoldTime99                                               = 99,
	ESettingType__SlideButtonHoldTime100                                             = 100,
	ESettingType__AccessoriesHeader101                                               = 101,
	ESettingType__ForceFeedback102                                                   = 102,
	ESettingType__ContextTutorial103                                                 = 103,
	ESettingType__ReplayRecording104                                                 = 104,
	ESettingType__ReplayRecordingLargeTeams105                                       = 105,
	ESettingType__ReplayRecordingCreativeMode106                                     = 106,
	ESettingType__UsePowerSavingMode107                                              = 107,
	ESettingType__ShadowPlayHighlights108                                            = 108,
	ESettingType__ShowTemperature109                                                 = 109,
	ESettingType__BuildingPossession110                                              = 110,
	ESettingType__GammaValue111                                                      = 111,
	ESettingType__MasterVolume112                                                    = 112,
	ESettingType__MusicVolume113                                                     = 113,
	ESettingType__SoundFXVolume114                                                   = 114,
	ESettingType__DialogVolume115                                                    = 115,
	ESettingType__VoiceChatVolume116                                                 = 116,
	ESettingType__CinematicsVolume117                                                = 117,
	ESettingType__Subtitles118                                                       = 118,
	ESettingType__Quality119                                                         = 119,
	ESettingType__VoiceChat120                                                       = 120,
	ESettingType__PushToTalk121                                                      = 121,
	ESettingType__ProximityVoiceChat122                                              = 122,
	ESettingType__VoiceChatInputDevice123                                            = 123,
	ESettingType__VoiceChatOutputDevice124                                           = 124,
	ESettingType__AllowBackgroundAudio125                                            = 125,
	ESettingType__ColorBlindMode126                                                  = 126,
	ESettingType__ColorBlindStrength127                                              = 127,
	ESettingType__IgnoreGamepadInput128                                              = 128,
	ESettingType__LockPrimaryInputMethodToMouse129                                   = 129,
	ESettingType__EnableRudderControl130                                             = 130,
	ESettingType__RudderDeadZone131                                                  = 131,
	ESettingType__RudderMaxThrottle132                                               = 132,
	ESettingType__VisualizeSoundEffects133                                           = 133,
	ESettingType__VisualizeSoundEffectsHeader134                                     = 134,
	ESettingType__MoveStickDeadZone135                                               = 135,
	ESettingType__LookStickDeadZone136                                               = 136,
	ESettingType__LookSensitivityPreset137                                           = 137,
	ESettingType__LookSensitivityPresetAds138                                        = 138,
	ESettingType__LookBuildModeMultiplier139                                         = 139,
	ESettingType__LookEditModeMultiplier140                                          = 140,
	ESettingType__UseAdvancedOptions141                                              = 141,
	ESettingType__LookHorizontalSpeed142                                             = 142,
	ESettingType__LookVerticalSpeed143                                               = 143,
	ESettingType__LookHorizontalSpeedAds144                                          = 144,
	ESettingType__LookVerticalSpeedAds145                                            = 145,
	ESettingType__LookHorizontalBoostSpeed146                                        = 146,
	ESettingType__LookVerticalBoostSpeed147                                          = 147,
	ESettingType__LookBoostAccelerationTime148                                       = 148,
	ESettingType__LookHorizontalBoostSpeedAds149                                     = 149,
	ESettingType__LookVerticalBoostSpeedAds150                                       = 150,
	ESettingType__LookBoostAccelerationTimeAds151                                    = 151,
	ESettingType__InstantBoostWhenBuilding152                                        = 152,
	ESettingType__LookEaseTime153                                                    = 153,
	ESettingType__LookInputCurve154                                                  = 154,
	ESettingType__AimAssistStrength155                                               = 155,
	ESettingType__UseLegacyControls156                                               = 156,
	ESettingType__PlayerSurveysAllowed157                                            = 157,
	ESettingType__LocalNotifications158                                              = 158,
	ESettingType__FireMode159                                                        = 159,
	ESettingType__COUNT160                                                           = 160,
	ESettingType__ESettingType_MAX161                                                = 161
};

/// Enum /Script/FortniteUI.EFortPerksWidgetState
/// Size: 0x04
enum EFortPerksWidgetState : uint8_t
{
	EFortPerksWidgetState__Normal0                                                   = 0,
	EFortPerksWidgetState__Upgrade1                                                  = 1,
	EFortPerksWidgetState__Evolution2                                                = 2,
	EFortPerksWidgetState__EFortPerksWidgetState_MAX3                                = 3
};

/// Enum /Script/FortniteUI.EFortPlayerSurveyQuestionType
/// Size: 0x04
enum EFortPlayerSurveyQuestionType : uint8_t
{
	EFortPlayerSurveyQuestionType__SingleChoice0                                     = 0,
	EFortPlayerSurveyQuestionType__MultipleChoice1                                   = 1,
	EFortPlayerSurveyQuestionType__Rating2                                           = 2,
	EFortPlayerSurveyQuestionType__EFortPlayerSurveyQuestionType_MAX3                = 3
};

/// Enum /Script/FortniteUI.EFortPlayerSurveyResponseChoiceType
/// Size: 0x03
enum EFortPlayerSurveyResponseChoiceType : uint8_t
{
	CheckBox0                                                                        = 0,
	Radio1                                                                           = 1,
	EFortPlayerSurveyResponseChoiceType_MAX2                                         = 2
};

/// Enum /Script/FortniteUI.EFortServerBrowserAction
/// Size: 0x07
enum EFortServerBrowserAction : uint8_t
{
	EFortServerBrowserAction__BattleLabServerCreate0                                 = 0,
	EFortServerBrowserAction__PlaygroundServerCreate1                                = 1,
	EFortServerBrowserAction__CreativeServerCreate2                                  = 2,
	EFortServerBrowserAction__Play3                                                  = 3,
	EFortServerBrowserAction__CreativeIslandCode4                                    = 4,
	EFortServerBrowserAction__CreativeDiscovery5                                     = 5,
	EFortServerBrowserAction__EFortServerBrowserAction_MAX6                          = 6
};

/// Enum /Script/FortniteUI.EFortSettingGameVisibility
/// Size: 0x04
enum EFortSettingGameVisibility : uint8_t
{
	EFortSettingGameVisibility__None0                                                = 0,
	EFortSettingGameVisibility__Campaign1                                            = 1,
	EFortSettingGameVisibility__Athena2                                              = 2,
	EFortSettingGameVisibility__EFortSettingGameVisibility_MAX3                      = 3
};

/// Enum /Script/FortniteUI.EFortSidebarSpecialNavType
/// Size: 0x05
enum EFortSidebarSpecialNavType : uint8_t
{
	EFortSidebarSpecialNavType__None0                                                = 0,
	EFortSidebarSpecialNavType__GoPrevious1                                          = 1,
	EFortSidebarSpecialNavType__GoRebootRally2                                       = 2,
	EFortSidebarSpecialNavType__GoPartyUp3                                           = 3,
	EFortSidebarSpecialNavType__EFortSidebarSpecialNavType_MAX4                      = 4
};

/// Enum /Script/FortniteUI.EReferFriendOrigin
/// Size: 0x03
enum EReferFriendOrigin : uint8_t
{
	EReferFriendOrigin__AddFriend0                                                   = 0,
	EReferFriendOrigin__PartyUp1                                                     = 1,
	EReferFriendOrigin__EReferFriendOrigin_MAX2                                      = 2
};

/// Enum /Script/FortniteUI.ELocalUserOnlineStatus
/// Size: 0x07
enum ELocalUserOnlineStatus : uint8_t
{
	ELocalUserOnlineStatus__Online0                                                  = 0,
	ELocalUserOnlineStatus__Offline1                                                 = 1,
	ELocalUserOnlineStatus__Away2                                                    = 2,
	ELocalUserOnlineStatus__ExtendedAway3                                            = 3,
	ELocalUserOnlineStatus__DoNotDisturb4                                            = 4,
	ELocalUserOnlineStatus__Chat5                                                    = 5,
	ELocalUserOnlineStatus__ELocalUserOnlineStatus_MAX6                              = 6
};

/// Enum /Script/FortniteUI.ELfgState
/// Size: 0x15
enum ELfgState : uint8_t
{
	ELfgState__NoResults0                                                            = 0,
	ELfgState__Shuffling1                                                            = 1,
	ELfgState__NoSocialTagsAdded2                                                    = 2,
	ELfgState__LfgOff3                                                               = 3,
	ELfgState__LfgUnavailable4                                                       = 4,
	ELfgState__LfgOffNoSocialTags5                                                   = 5,
	ELfgState__NoSocialTagsSelected6                                                 = 6,
	ELfgState__NoFriendsSuggestLFG7                                                  = 7,
	ELfgState__RebootInvitePlayerButton8                                             = 8,
	ELfgState__RebootInviteAllRallied9                                               = 9,
	ELfgState__ChangeTagsButton10                                                    = 10,
	ELfgState__ApplyButton11                                                         = 11,
	ELfgState__ShuffleButton12                                                       = 12,
	ELfgState__LfgOffSocialBan13                                                     = 13,
	ELfgState__ELfgState_MAX14                                                       = 14
};

/// Enum /Script/FortniteUI.EMultiFriendAction
/// Size: 0x02
enum EMultiFriendAction : uint8_t
{
	EMultiFriendAction__AcceptFriendRequest0                                         = 0,
	EMultiFriendAction__EMultiFriendAction_MAX1                                      = 1
};

/// Enum /Script/FortniteUI.EFortSquadSlottingRestrictionReason
/// Size: 0x06
enum EFortSquadSlottingRestrictionReason : uint8_t
{
	EFortSquadSlottingRestrictionReason__ItemIsInInventoryOverflow0                  = 0,
	EFortSquadSlottingRestrictionReason__MandatorySlotWouldBeEmptied1                = 1,
	EFortSquadSlottingRestrictionReason__ItemIsOnActiveExpedition2                   = 2,
	EFortSquadSlottingRestrictionReason__HeroRequiresMissingGameplayTag3             = 3,
	EFortSquadSlottingRestrictionReason__HeroAlreadyEquippedInLoadout4               = 4,
	EFortSquadSlottingRestrictionReason__EFortSquadSlottingRestrictionReason_MAX5    = 5
};

/// Enum /Script/FortniteUI.ESqueegeeWidgetInjection
/// Size: 0x09
enum ESqueegeeWidgetInjection : uint8_t
{
	ESqueegeeWidgetInjection__None0                                                  = 0,
	ESqueegeeWidgetInjection__RatingTag1                                             = 1,
	ESqueegeeWidgetInjection__RatingCard2                                            = 2,
	ESqueegeeWidgetInjection__GameModeInfo3                                          = 3,
	ESqueegeeWidgetInjection__PinModalInfo4                                          = 4,
	ESqueegeeWidgetInjection__ManagementScreen5                                      = 5,
	ESqueegeeWidgetInjection__ParentalControlsModal6                                 = 6,
	ESqueegeeWidgetInjection__LockIcon7                                              = 7,
	ESqueegeeWidgetInjection__ESqueegeeWidgetInjection_MAX8                          = 8
};

/// Enum /Script/FortniteUI.ESqueegeeText
/// Size: 0x10
enum ESqueegeeText : uint8_t
{
	ESqueegeeText__LobbyGameModeAction0                                              = 0,
	ESqueegeeText__LobbyGameModeActionCabined1                                       = 1,
	ESqueegeeText__GameModeInfoAction2                                               = 2,
	ESqueegeeText__GameModeDetailsDisplayAction3                                     = 3,
	ESqueegeeText__OptionSettingName4                                                = 4,
	ESqueegeeText__OptionSettingDescription5                                         = 5,
	ESqueegeeText__ActionSettingName6                                                = 6,
	ESqueegeeText__ActionSettingDescription7                                         = 7,
	ESqueegeeText__SidebarButton8                                                    = 8,
	ESqueegeeText__ESqueegeeText_MAX9                                                = 9
};

/// Enum /Script/FortniteUI.ESqueegeeDataTypes
/// Size: 0x04
enum ESqueegeeDataTypes : uint8_t
{
	ESqueegeeDataTypes__GameActivity0                                                = 0,
	ESqueegeeDataTypes__Weapons1                                                     = 1,
	ESqueegeeDataTypes__None2                                                        = 2,
	ESqueegeeDataTypes__ESqueegeeDataTypes_MAX3                                      = 3
};

/// Enum /Script/FortniteUI.EFortToastType
/// Size: 0x04
enum EFortToastType : uint8_t
{
	EFortToastType__Default0                                                         = 0,
	EFortToastType__Subdued1                                                         = 1,
	EFortToastType__Impactful2                                                       = 2,
	EFortToastType__EFortToastType_MAX3                                              = 3
};

/// Enum /Script/FortniteUI.EFortUIState
/// Size: 0x14
enum EFortUIState : uint8_t
{
	EFortUIState__Invalid0                                                           = 0,
	EFortUIState__Login1                                                             = 1,
	EFortUIState__JoinServer2                                                        = 2,
	EFortUIState__SubgameSelect3                                                     = 3,
	EFortUIState__FrontEnd4                                                          = 4,
	EFortUIState__InGame_Custom5                                                     = 5,
	EFortUIState__UNUSED6                                                            = 6,
	EFortUIState__InGame_STW7                                                        = 7,
	EFortUIState__Cinematic8                                                         = 8,
	EFortUIState__InGame_BR9                                                         = 9,
	EFortUIState__AthenaSpectator10                                                  = 10,
	EFortUIState__Replay11                                                           = 11,
	EFortUIState__InGame_STW_Custom12                                                = 12,
	EFortUIState__MAX13                                                              = 13
};

/// Enum /Script/FortniteUI.EFortInventoryContext
/// Size: 0x05
enum EFortInventoryContext : uint8_t
{
	EFortInventoryContext__Game0                                                     = 0,
	EFortInventoryContext__Lobby1                                                    = 1,
	EFortInventoryContext__FrontEnd2                                                 = 2,
	EFortInventoryContext__Pickup3                                                   = 3,
	EFortInventoryContext__EFortInventoryContext_MAX4                                = 4
};

/// Enum /Script/FortniteUI.ENotificationResult
/// Size: 0x04
enum ENotificationResult : uint8_t
{
	ENotificationResult__Confirmed0                                                  = 0,
	ENotificationResult__Declined1                                                   = 1,
	ENotificationResult__Unknown2                                                    = 2,
	ENotificationResult__ENotificationResult_MAX3                                    = 3
};

/// Enum /Script/FortniteUI.ENotificationType
/// Size: 0x03
enum ENotificationType : uint8_t
{
	ENotificationType__Basic0                                                        = 0,
	ENotificationType__Friends1                                                      = 1,
	ENotificationType__ENotificationType_MAX2                                        = 2
};

/// Enum /Script/FortniteUI.EModalContainerSize
/// Size: 0x05
enum EModalContainerSize : uint8_t
{
	EModalContainerSize__ExtraSmall0                                                 = 0,
	EModalContainerSize__Small1                                                      = 1,
	EModalContainerSize__Medium2                                                     = 2,
	EModalContainerSize__Large3                                                      = 3,
	EModalContainerSize__Max4                                                        = 4
};

/// Enum /Script/FortniteUI.EFortSocialPanelType
/// Size: 0x03
enum EFortSocialPanelType : uint8_t
{
	EFortSocialPanelType__Join0                                                      = 0,
	EFortSocialPanelType__Invite1                                                    = 1,
	EFortSocialPanelType__Max2                                                       = 2
};

/// Enum /Script/FortniteUI.EFortSocialPanelTab
/// Size: 0x04
enum EFortSocialPanelTab : uint8_t
{
	EFortSocialPanelTab__PartyInvitations0                                           = 0,
	EFortSocialPanelTab__Friends1                                                    = 1,
	EFortSocialPanelTab__RecentPlayers2                                              = 2,
	EFortSocialPanelTab__Max3                                                        = 3
};

/// Enum /Script/FortniteUI.EFortBangSize
/// Size: 0x07
enum EFortBangSize : uint8_t
{
	EFortBangSize__XXS0                                                              = 0,
	EFortBangSize__XS1                                                               = 1,
	EFortBangSize__S2                                                                = 2,
	EFortBangSize__M3                                                                = 3,
	EFortBangSize__L4                                                                = 4,
	EFortBangSize__XL5                                                               = 5,
	EFortBangSize__EFortBangSize_MAX6                                                = 6
};

/// Enum /Script/FortniteUI.EFortTutorialGlowType
/// Size: 0x04
enum EFortTutorialGlowType : uint8_t
{
	EFortTutorialGlowType__None0                                                     = 0,
	EFortTutorialGlowType__Look1                                                     = 1,
	EFortTutorialGlowType__Click2                                                    = 2,
	EFortTutorialGlowType__EFortTutorialGlowType_MAX3                                = 3
};

/// Enum /Script/FortniteUI.EFortAnimSpeed
/// Size: 0x04
enum EFortAnimSpeed : uint8_t
{
	EFortAnimSpeed__Instant0                                                         = 0,
	EFortAnimSpeed__Fast1                                                            = 1,
	EFortAnimSpeed__Normal2                                                          = 2,
	EFortAnimSpeed__EFortAnimSpeed_MAX3                                              = 3
};

/// Enum /Script/FortniteUI.EFortStatValueDisplayType
/// Size: 0x07
enum EFortStatValueDisplayType : uint8_t
{
	EFortStatValueDisplayType__BasicPaired0                                          = 0,
	EFortStatValueDisplayType__BasicSingle1                                          = 1,
	EFortStatValueDisplayType__Unique2                                               = 2,
	EFortStatValueDisplayType__ElementalFire3                                        = 3,
	EFortStatValueDisplayType__ElementalIce4                                         = 4,
	EFortStatValueDisplayType__ElementalElectric5                                    = 5,
	EFortStatValueDisplayType__EFortStatValueDisplayType_MAX6                        = 6
};

/// Enum /Script/FortniteUI.EFortBuffState
/// Size: 0x04
enum EFortBuffState : uint8_t
{
	EFortBuffState__NoChange0                                                        = 0,
	EFortBuffState__Better1                                                          = 1,
	EFortBuffState__Worse2                                                           = 2,
	EFortBuffState__EFortBuffState_MAX3                                              = 3
};

/// Enum /Script/FortniteUI.EFortClampState
/// Size: 0x04
enum EFortClampState : uint8_t
{
	EFortClampState__NoClamp0                                                        = 0,
	EFortClampState__MinClamp1                                                       = 1,
	EFortClampState__MaxClamp2                                                       = 2,
	EFortClampState__EFortClampState_MAX3                                            = 3
};

/// Enum /Script/FortniteUI.EFortComparisonType
/// Size: 0x05
enum EFortComparisonType : uint8_t
{
	EFortComparisonType__None0                                                       = 0,
	EFortComparisonType__HigherValue1                                                = 1,
	EFortComparisonType__LowerValue2                                                 = 2,
	EFortComparisonType__Upgrade3                                                    = 3,
	EFortComparisonType__EFortComparisonType_MAX4                                    = 4
};

/// Enum /Script/FortniteUI.EPlayerReportReasons
/// Size: 0x19
enum EPlayerReportReasons : uint8_t
{
	EPlayerReportReasons__None0                                                      = 0,
	EPlayerReportReasons__Communication1                                             = 1,
	EPlayerReportReasons__Offensive2                                                 = 2,
	EPlayerReportReasons__AFK3                                                       = 3,
	EPlayerReportReasons__IgnoringObjective4                                         = 4,
	EPlayerReportReasons__Harassment5                                                = 5,
	EPlayerReportReasons__Exploiting6                                                = 6,
	EPlayerReportReasons__TradeScam7                                                 = 7,
	EPlayerReportReasons__CommunicationsAbuse8                                       = 8,
	EPlayerReportReasons__OffensiveName9                                             = 9,
	EPlayerReportReasons__TeamingUpWithEnemies10                                     = 10,
	EPlayerReportReasons__InappropriateContent11                                     = 11,
	EPlayerReportReasons__ExploitingOrHacking12                                      = 12,
	EPlayerReportReasons__Harassment_Threatening13                                   = 13,
	EPlayerReportReasons__Harassment_Annoying14                                      = 14,
	EPlayerReportReasons__Harassment_Selling15                                       = 15,
	EPlayerReportReasons__Harassment_Verbal16                                        = 16,
	EPlayerReportReasons__Harassment_GameBehavior17                                  = 17,
	EPlayerReportReasons__EPlayerReportReasons_MAX18                                 = 18
};

/// Enum /Script/FortniteUI.ESubscriptionContentTab
/// Size: 0x03
enum ESubscriptionContentTab : uint8_t
{
	ESubscriptionContentTab__SubscriptionManagementScreen0                           = 0,
	ESubscriptionContentTab__ProgressiveItemScreen1                                  = 1,
	ESubscriptionContentTab__ESubscriptionContentTab_MAX2                            = 2
};

/// Enum /Script/FortniteUI.EItemShopNavigationAction
/// Size: 0x04
enum EItemShopNavigationAction : uint8_t
{
	EItemShopNavigationAction__None0                                                 = 0,
	EItemShopNavigationAction__ShowOfferDetails1                                     = 1,
	EItemShopNavigationAction__NavigateToOffer2                                      = 2,
	EItemShopNavigationAction__EItemShopNavigationAction_MAX3                        = 3
};

/// Enum /Script/FortniteUI.EFortViewModelsDestructionType
/// Size: 0x03
enum EFortViewModelsDestructionType : uint8_t
{
	EFortViewModelsDestructionType__AfterLastUsage0                                  = 0,
	EFortViewModelsDestructionType__Manual1                                          = 1,
	EFortViewModelsDestructionType__EFortViewModelsDestructionType_MAX2              = 2
};

/// Enum /Script/FortniteUI.EMotdGovernanceEventType
/// Size: 0x03
enum EMotdGovernanceEventType : uint8_t
{
	EMotdGovernanceEventType__impression0                                            = 0,
	EMotdGovernanceEventType__view1                                                  = 1,
	EMotdGovernanceEventType__EMotdGovernanceEventType_MAX2                          = 2
};

/// Enum /Script/FortniteUI.EResponseActions
/// Size: 0x06
enum EResponseActions : uint8_t
{
	EResponseActions__Seen0                                                          = 0,
	EResponseActions__LeftFrontend1                                                  = 1,
	EResponseActions__LogOut2                                                        = 2,
	EResponseActions__Refreshed3                                                     = 3,
	EResponseActions__ContentCleared4                                                = 4,
	EResponseActions__EResponseActions_MAX5                                          = 5
};

/// Enum /Script/FortniteUI.ESpatialStyleCharacterUnlockPrerequisite
/// Size: 0x03
enum ESpatialStyleCharacterUnlockPrerequisite : uint8_t
{
	ESpatialStyleCharacterUnlockPrerequisite__BattlepassPurchase0                    = 0,
	ESpatialStyleCharacterUnlockPrerequisite__BattlepassLevel1                       = 1,
	ESpatialStyleCharacterUnlockPrerequisite__ESpatialStyleCharacterUnlockPrerequisite_MAX2 = 2
};

/// Enum /Script/FortniteUI.EFortSubscriptionContentInterfaceCloseReason
/// Size: 0x03
enum EFortSubscriptionContentInterfaceCloseReason : uint8_t
{
	EFortSubscriptionContentInterfaceCloseReason__Normal0                            = 0,
	EFortSubscriptionContentInterfaceCloseReason__SubscriptionPurchased1             = 1,
	EFortSubscriptionContentInterfaceCloseReason__EFortSubscriptionContentInterfaceCloseReason_MAX2 = 2
};

/// Enum /Script/FortniteUI.EUIKitBlockVisualState
/// Size: 0x13
enum EUIKitBlockVisualState : uint8_t
{
	EUIKitBlockVisualState__Invalid0                                                 = 0,
	EUIKitBlockVisualState__Hovered1                                                 = 1,
	EUIKitBlockVisualState__Unhovered2                                               = 2,
	EUIKitBlockVisualState__Focused3                                                 = 3,
	EUIKitBlockVisualState__Unfocused4                                               = 4,
	EUIKitBlockVisualState__Pressed5                                                 = 5,
	EUIKitBlockVisualState__Released6                                                = 6,
	EUIKitBlockVisualState__Disabled7                                                = 7,
	EUIKitBlockVisualState__Enabled8                                                 = 8,
	EUIKitBlockVisualState__Selected9                                                = 9,
	EUIKitBlockVisualState__DeselectedIdle10                                         = 10,
	EUIKitBlockVisualState__DeselectedFocused11                                      = 11,
	EUIKitBlockVisualState__EUIKitBlockVisualState_MAX12                             = 12
};

/// Enum /Script/FortniteUI.EUIKitBlockInstantTransitionState
/// Size: 0x08
enum EUIKitBlockInstantTransitionState : uint8_t
{
	EUIKitBlockInstantTransitionState__Invalid0                                      = 0,
	EUIKitBlockInstantTransitionState__InstantEnabled1                               = 1,
	EUIKitBlockInstantTransitionState__InstantDisabled2                              = 2,
	EUIKitBlockInstantTransitionState__InstantSelected3                              = 3,
	EUIKitBlockInstantTransitionState__InstantDeselected4                            = 4,
	EUIKitBlockInstantTransitionState__InstantLocked5                                = 5,
	EUIKitBlockInstantTransitionState__InstantUnlocked6                              = 6,
	EUIKitBlockInstantTransitionState__EUIKitBlockInstantTransitionState_MAX7        = 7
};

/// Enum /Script/FortniteUI.EFortServerItemIneligibleReason
/// Size: 0x08
enum EFortServerItemIneligibleReason : uint8_t
{
	EFortServerItemIneligibleReason__None0                                           = 0,
	EFortServerItemIneligibleReason__PartyTooBig1                                    = 1,
	EFortServerItemIneligibleReason__PartyTooSmall2                                  = 2,
	EFortServerItemIneligibleReason__NotPartyLeader3                                 = 3,
	EFortServerItemIneligibleReason__MatchmakingAlready4                             = 4,
	EFortServerItemIneligibleReason__NotSupportedByLeto5                             = 5,
	EFortServerItemIneligibleReason__InvalidData6                                    = 6,
	EFortServerItemIneligibleReason__EFortServerItemIneligibleReason_MAX7            = 7
};

/// Enum /Script/FortniteUI.EAvailableSquadSlotsListEntryState
/// Size: 0x03
enum EAvailableSquadSlotsListEntryState : uint8_t
{
	EAvailableSquadSlotsListEntryState__Detailed0                                    = 0,
	EAvailableSquadSlotsListEntryState__Simplified1                                  = 1,
	EAvailableSquadSlotsListEntryState__EAvailableSquadSlotsListEntryState_MAX2      = 2
};

/// Enum /Script/FortniteUI.EAthenaConfirmationResult
/// Size: 0x05
enum EAthenaConfirmationResult : uint8_t
{
	EAthenaConfirmationResult__Confirmed0                                            = 0,
	EAthenaConfirmationResult__Declined1                                             = 1,
	EAthenaConfirmationResult__Canceled2                                             = 2,
	EAthenaConfirmationResult__Max_NONE3                                             = 3,
	EAthenaConfirmationResult__EAthenaConfirmationResult_MAX4                        = 4
};

/// Enum /Script/FortniteUI.EEquippedWeaponDisplay
/// Size: 0x06
enum EEquippedWeaponDisplay : uint8_t
{
	EEquippedWeaponDisplay__None0                                                    = 0,
	EEquippedWeaponDisplay__Resource1                                                = 1,
	EEquippedWeaponDisplay__Magazine2                                                = 2,
	EEquippedWeaponDisplay__Utility3                                                 = 3,
	EEquippedWeaponDisplay__Chargeable4                                              = 4,
	EEquippedWeaponDisplay__EEquippedWeaponDisplay_MAX5                              = 5
};

/// Enum /Script/FortniteUI.EAthenaPlayerActionAlert
/// Size: 0x06
enum EAthenaPlayerActionAlert : uint8_t
{
	EAthenaPlayerActionAlert__PlayerDown0                                            = 0,
	EAthenaPlayerActionAlert__PlayerKill1                                            = 1,
	EAthenaPlayerActionAlert__EnteredStorm2                                          = 2,
	EAthenaPlayerActionAlert__NewZebulonDrone3                                       = 3,
	EAthenaPlayerActionAlert__NewZebulonDroneYou4                                    = 4,
	EAthenaPlayerActionAlert__EAthenaPlayerActionAlert_MAX5                          = 5
};

/// Enum /Script/FortniteUI.ELockerScreenState
/// Size: 0x04
enum ELockerScreenState : uint8_t
{
	ELockerScreenState__Equipping0                                                   = 0,
	ELockerScreenState__Archiving1                                                   = 1,
	ELockerScreenState__Unarchiving2                                                 = 2,
	ELockerScreenState__ELockerScreenState_MAX3                                      = 3
};

/// Enum /Script/FortniteUI.EFortAthenaPlaylist
/// Size: 0x04
enum EFortAthenaPlaylist : uint8_t
{
	EFortAthenaPlaylist__AthenaSolo0                                                 = 0,
	EFortAthenaPlaylist__AthenaDuo1                                                  = 1,
	EFortAthenaPlaylist__AthenaSquad2                                                = 2,
	EFortAthenaPlaylist__EFortAthenaPlaylist_MAX3                                    = 3
};

/// Enum /Script/FortniteUI.EAthenaLockerInfoRestrictionWarning
/// Size: 0x06
enum EAthenaLockerInfoRestrictionWarning : uint8_t
{
	EAthenaLockerInfoRestrictionWarning__UnsatisfiedExclusiveItem0                   = 0,
	EAthenaLockerInfoRestrictionWarning__LockedEmote1                                = 1,
	EAthenaLockerInfoRestrictionWarning__CosmeticRestriction2                        = 2,
	EAthenaLockerInfoRestrictionWarning__AllItemsAreArchived3                        = 3,
	EAthenaLockerInfoRestrictionWarning__Unknown4                                    = 4,
	EAthenaLockerInfoRestrictionWarning__EAthenaLockerInfoRestrictionWarning_MAX5    = 5
};

/// Enum /Script/FortniteUI.EFortMarkerActions
/// Size: 0x05
enum EFortMarkerActions : uint8_t
{
	EFortMarkerActions__None0                                                        = 0,
	EFortMarkerActions__Cancel1                                                      = 1,
	EFortMarkerActions__Confirm2                                                     = 2,
	EFortMarkerActions__CancelAndReturnNPC3                                          = 3,
	EFortMarkerActions__EFortMarkerActions_MAX4                                      = 4
};

/// Enum /Script/FortniteUI.EHealthBarType
/// Size: 0x08
enum EHealthBarType : uint8_t
{
	EHealthBarType__Health0                                                          = 0,
	EHealthBarType__Shield1                                                          = 1,
	EHealthBarType__Overshield2                                                      = 2,
	EHealthBarType__Armor3                                                           = 3,
	EHealthBarType__Stamina4                                                         = 4,
	EHealthBarType__VehicleHealth5                                                   = 5,
	EHealthBarType__SignalInStorm6                                                   = 6,
	EHealthBarType__EHealthBarType_MAX7                                              = 7
};

/// Enum /Script/FortniteUI.EBPStatus
/// Size: 0x03
enum EBPStatus : uint8_t
{
	EBPStatus__UnpurchasedBP0                                                        = 0,
	EBPStatus__PurchasedBP1                                                          = 1,
	EBPStatus__EBPStatus_MAX2                                                        = 2
};

/// Enum /Script/FortniteUI.EAthenaSquadListUpdateType
/// Size: 0x04
enum EAthenaSquadListUpdateType : uint8_t
{
	EAthenaSquadListUpdateType__None0                                                = 0,
	EAthenaSquadListUpdateType__CanResurrect1                                        = 1,
	EAthenaSquadListUpdateType__FindResurrectChip2                                   = 2,
	EAthenaSquadListUpdateType__EAthenaSquadListUpdateType_MAX3                      = 3
};

/// Enum /Script/FortniteUI.ERespawnUIState
/// Size: 0x04
enum ERespawnUIState : uint8_t
{
	ERespawnUIState__Hidden0                                                         = 0,
	ERespawnUIState__ShowRespawnEnabled1                                             = 1,
	ERespawnUIState__ShowRespawnDisabled2                                            = 2,
	ERespawnUIState__ERespawnUIState_MAX3                                            = 3
};

/// Enum /Script/FortniteUI.EStormSurgeThresholdType
/// Size: 0x05
enum EStormSurgeThresholdType : uint8_t
{
	EStormSurgeThresholdType__None0                                                  = 0,
	EStormSurgeThresholdType__Above1                                                 = 1,
	EStormSurgeThresholdType__Below2                                                 = 2,
	EStormSurgeThresholdType__Equal3                                                 = 3,
	EStormSurgeThresholdType__EStormSurgeThresholdType_MAX4                          = 4
};

/// Enum /Script/FortniteUI.EWinConditionParentType
/// Size: 0x04
enum EWinConditionParentType : uint8_t
{
	EWinConditionParentType__None0                                                   = 0,
	EWinConditionParentType__Desktop1                                                = 1,
	EWinConditionParentType__Mobile2                                                 = 2,
	EWinConditionParentType__EWinConditionParentType_MAX3                            = 3
};

/// Enum /Script/FortniteUI.EChallengeListSection
/// Size: 0x07
enum EChallengeListSection : uint8_t
{
	EChallengeListSection__SpecialOffers0                                            = 0,
	EChallengeListSection__CompletionRewards1                                        = 1,
	EChallengeListSection__AllChallenges2                                            = 2,
	EChallengeListSection__FreeChallenges3                                           = 3,
	EChallengeListSection__PaidChallenges4                                           = 4,
	EChallengeListSection__Objectives5                                               = 5,
	EChallengeListSection__EChallengeListSection_MAX6                                = 6
};

/// Enum /Script/FortniteUI.EChallengeListEntryType
/// Size: 0x10
enum EChallengeListEntryType : uint8_t
{
	EChallengeListEntryType__DisabledHeader0                                         = 0,
	EChallengeListEntryType__GoalCard1                                               = 1,
	EChallengeListEntryType__Header2                                                 = 2,
	EChallengeListEntryType__Normal3                                                 = 3,
	EChallengeListEntryType__PartyUp4                                                = 4,
	EChallengeListEntryType__LockedQuest5                                            = 5,
	EChallengeListEntryType__AllQuestsComplete6                                      = 6,
	EChallengeListEntryType__CustomMessage7                                          = 7,
	EChallengeListEntryType__Count8                                                  = 8,
	EChallengeListEntryType__EChallengeListEntryType_MAX9                            = 9
};

/// Enum /Script/FortniteUI.EEndOfMatchQuestCategoryType
/// Size: 0x03
enum EEndOfMatchQuestCategoryType : uint8_t
{
	EEndOfMatchQuestCategoryType__Completed0                                         = 0,
	EEndOfMatchQuestCategoryType__InProgress1                                        = 1,
	EEndOfMatchQuestCategoryType__EEndOfMatchQuestCategoryType_MAX2                  = 2
};

/// Enum /Script/FortniteUI.ELocationEntryState
/// Size: 0x04
enum ELocationEntryState : uint8_t
{
	ELocationEntryState__Found0                                                      = 0,
	ELocationEntryState__NotFound1                                                   = 1,
	ELocationEntryState__Unused2                                                     = 2,
	ELocationEntryState__ELocationEntryState_MAX3                                    = 3
};

/// Enum /Script/FortniteUI.EFortCosmeticLoadoutScreenMode
/// Size: 0x03
enum EFortCosmeticLoadoutScreenMode : uint8_t
{
	EFortCosmeticLoadoutScreenMode__Browse0                                          = 0,
	EFortCosmeticLoadoutScreenMode__Save1                                            = 1,
	EFortCosmeticLoadoutScreenMode__EFortCosmeticLoadoutScreenMode_MAX2              = 2
};

/// Enum /Script/FortniteUI.EFortNameLoadoutPopupType
/// Size: 0x04
enum EFortNameLoadoutPopupType : uint8_t
{
	EFortNameLoadoutPopupType__Rename0                                               = 0,
	EFortNameLoadoutPopupType__Overwrite1                                            = 1,
	EFortNameLoadoutPopupType__SaveNew2                                              = 2,
	EFortNameLoadoutPopupType__EFortNameLoadoutPopupType_MAX3                        = 3
};

/// Enum /Script/FortniteUI.EAthenaGameFeatureStatus
/// Size: 0x04
enum EAthenaGameFeatureStatus : uint8_t
{
	EAthenaGameFeatureStatus__InProgress0                                            = 0,
	EAthenaGameFeatureStatus__ProgressPaused1                                        = 1,
	EAthenaGameFeatureStatus__ErrorOccured2                                          = 2,
	EAthenaGameFeatureStatus__EAthenaGameFeatureStatus_MAX3                          = 3
};

/// Enum /Script/FortniteUI.EMinigameActivityWidgetStatFormat
/// Size: 0x06
enum EMinigameActivityWidgetStatFormat : uint8_t
{
	EMinigameActivityWidgetStatFormat__Score0                                        = 0,
	EMinigameActivityWidgetStatFormat__Time1                                         = 1,
	EMinigameActivityWidgetStatFormat__AddTime2                                      = 2,
	EMinigameActivityWidgetStatFormat__Distance3                                     = 3,
	EMinigameActivityWidgetStatFormat__Laps4                                         = 4,
	EMinigameActivityWidgetStatFormat__EMinigameActivityWidgetStatFormat_MAX5        = 5
};

/// Enum /Script/FortniteUI.EHabaneroProgressError
/// Size: 0x17
enum EHabaneroProgressError : uint8_t
{
	EHabaneroProgressError__None0                                                    = 0,
	EHabaneroProgressError__MissingHabaneroComponent1                                = 1,
	EHabaneroProgressError__HabaneroComponentSocialUserNotBound2                     = 2,
	EHabaneroProgressError__HabaneroComponentUnableToQueryProgress3                  = 3,
	EHabaneroProgressError__EmptyRankType4                                           = 4,
	EHabaneroProgressError__InitialProgressMapInvalid5                               = 5,
	EHabaneroProgressError__CurrentProgressMapInvalid6                               = 6,
	EHabaneroProgressError__InvalidCurrentTrack7                                     = 7,
	EHabaneroProgressError__InitialProgressEntryNotFound8                            = 8,
	EHabaneroProgressError__CurrentProgressEntryNotFound9                            = 9,
	EHabaneroProgressError__GameModeNotFound10                                       = 10,
	EHabaneroProgressError__CurrentTierLessThanZero11                                = 11,
	EHabaneroProgressError__NotEnoughTiersForInitialTier12                           = 12,
	EHabaneroProgressError__NotEnoughTiersForCurrentTier13                           = 13,
	EHabaneroProgressError__FailedToFindUnrankedTier14                               = 14,
	EHabaneroProgressError__UnknownError15                                           = 15,
	EHabaneroProgressError__EHabaneroProgressError_MAX16                             = 16
};

/// Enum /Script/FortniteUI.EPostGameScreenContinueBehavior
/// Size: 0x03
enum EPostGameScreenContinueBehavior : uint8_t
{
	EPostGameScreenContinueBehavior__Next0                                           = 0,
	EPostGameScreenContinueBehavior__Previous1                                       = 1,
	EPostGameScreenContinueBehavior__EPostGameScreenContinueBehavior_MAX2            = 2
};

/// Enum /Script/FortniteUI.EPostGamePlacement
/// Size: 0x05
enum EPostGamePlacement : uint8_t
{
	EPostGamePlacement__Win0                                                         = 0,
	EPostGamePlacement__Lose1                                                        = 1,
	EPostGamePlacement__Tie2                                                         = 2,
	EPostGamePlacement__NoPlacement3                                                 = 3,
	EPostGamePlacement__EPostGamePlacement_MAX4                                      = 4
};

/// Enum /Script/FortniteUI.EBattleLabAlertType
/// Size: 0x04
enum EBattleLabAlertType : uint8_t
{
	EBattleLabAlertType__QuestComplete0                                              = 0,
	EBattleLabAlertType__QuestGranted1                                               = 1,
	EBattleLabAlertType__Reward2                                                     = 2,
	EBattleLabAlertType__EBattleLabAlertType_MAX3                                    = 3
};

/// Enum /Script/FortniteUI.ECobaltStatusTeam
/// Size: 0x03
enum ECobaltStatusTeam : uint8_t
{
	ECobaltStatusTeam__Ally0                                                         = 0,
	ECobaltStatusTeam__Enemy1                                                        = 1,
	ECobaltStatusTeam__MAX2                                                          = 255
};

/// Enum /Script/FortniteUI.EBracketNodeState
/// Size: 0x04
enum EBracketNodeState : uint8_t
{
	EBracketNodeState__LocalTeam0                                                    = 0,
	EBracketNodeState__EnemyTeam1                                                    = 1,
	EBracketNodeState__Neutral2                                                      = 2,
	EBracketNodeState__EBracketNodeState_MAX3                                        = 3
};

/// Enum /Script/FortniteUI.ESurvivalObjectiveIconState
/// Size: 0x04
enum ESurvivalObjectiveIconState : uint8_t
{
	ESurvivalObjectiveIconState__None0                                               = 0,
	ESurvivalObjectiveIconState__Spawned1                                            = 1,
	ESurvivalObjectiveIconState__Destroyed2                                          = 2,
	ESurvivalObjectiveIconState__ESurvivalObjectiveIconState_MAX3                    = 3
};

/// Enum /Script/FortniteUI.EDiscoCaptureUIState
/// Size: 0x06
enum EDiscoCaptureUIState : uint8_t
{
	EDiscoCaptureUIState__None0                                                      = 0,
	EDiscoCaptureUIState__Hidden1                                                    = 1,
	EDiscoCaptureUIState__Dance2                                                     = 2,
	EDiscoCaptureUIState__Capturing3                                                 = 3,
	EDiscoCaptureUIState__Contested4                                                 = 4,
	EDiscoCaptureUIState__EDiscoCaptureUIState_MAX5                                  = 5
};

/// Enum /Script/FortniteUI.EDiscoCaptureIconState
/// Size: 0x06
enum EDiscoCaptureIconState : uint8_t
{
	EDiscoCaptureIconState__None0                                                    = 0,
	EDiscoCaptureIconState__Hidden1                                                  = 1,
	EDiscoCaptureIconState__Neutral2                                                 = 2,
	EDiscoCaptureIconState__AllyCaptured3                                            = 3,
	EDiscoCaptureIconState__EnemyCaptured4                                           = 4,
	EDiscoCaptureIconState__EDiscoCaptureIconState_MAX5                              = 5
};

/// Enum /Script/FortniteUI.EDiscoCaptureProgressState
/// Size: 0x04
enum EDiscoCaptureProgressState : uint8_t
{
	EDiscoCaptureProgressState__None0                                                = 0,
	EDiscoCaptureProgressState__AllyProgress1                                        = 1,
	EDiscoCaptureProgressState__EnemyProgress2                                       = 2,
	EDiscoCaptureProgressState__EDiscoCaptureProgressState_MAX3                      = 3
};

/// Enum /Script/FortniteUI.EDiscoScoreProgressTypes
/// Size: 0x07
enum EDiscoScoreProgressTypes : uint8_t
{
	EDiscoScoreProgressTypes__None0                                                  = 0,
	EDiscoScoreProgressTypes__ProgressSoundMild1                                     = 1,
	EDiscoScoreProgressTypes__ProgressSoundMedium2                                   = 2,
	EDiscoScoreProgressTypes__ProgressSoundStrong3                                   = 3,
	EDiscoScoreProgressTypes__CountdownSoundNormal4                                  = 4,
	EDiscoScoreProgressTypes__CountdownSoundStrong5                                  = 5,
	EDiscoScoreProgressTypes__EDiscoScoreProgressTypes_MAX6                          = 6
};

/// Enum /Script/FortniteUI.EHeistExitCraftUIState
/// Size: 0x05
enum EHeistExitCraftUIState : uint8_t
{
	EHeistExitCraftUIState__None0                                                    = 0,
	EHeistExitCraftUIState__OnTheWay1                                                = 1,
	EHeistExitCraftUIState__Incoming2                                                = 2,
	EHeistExitCraftUIState__Arrived3                                                 = 3,
	EHeistExitCraftUIState__EHeistExitCraftUIState_MAX4                              = 4
};

/// Enum /Script/FortniteUI.EHeistBlingIconState
/// Size: 0x06
enum EHeistBlingIconState : uint8_t
{
	EHeistBlingIconState__None0                                                      = 0,
	EHeistBlingIconState__SupplyDrop1                                                = 1,
	EHeistBlingIconState__PickupItem2                                                = 2,
	EHeistBlingIconState__CarriedEnemy3                                              = 3,
	EHeistBlingIconState__CarriedAlly4                                               = 4,
	EHeistBlingIconState__EHeistBlingIconState_MAX5                                  = 5
};

/// Enum /Script/FortniteUI.EHeistExitCraftIconState
/// Size: 0x05
enum EHeistExitCraftIconState : uint8_t
{
	EHeistExitCraftIconState__None0                                                  = 0,
	EHeistExitCraftIconState__Incoming1                                              = 1,
	EHeistExitCraftIconState__Spawned2                                               = 2,
	EHeistExitCraftIconState__Exited3                                                = 3,
	EHeistExitCraftIconState__EHeistExitCraftIconState_MAX4                          = 4
};

/// Enum /Script/FortniteUI.EMinigameCaptureObjectiveIconState
/// Size: 0x03
enum EMinigameCaptureObjectiveIconState : uint8_t
{
	EMinigameCaptureObjectiveIconState__NotCaptured0                                 = 0,
	EMinigameCaptureObjectiveIconState__Captured1                                    = 1,
	EMinigameCaptureObjectiveIconState__EMinigameCaptureObjectiveIconState_MAX2      = 2
};

/// Enum /Script/FortniteUI.ETDMScoreProgressTypes
/// Size: 0x07
enum ETDMScoreProgressTypes : uint8_t
{
	ETDMScoreProgressTypes__None0                                                    = 0,
	ETDMScoreProgressTypes__ProgressSoundMild1                                       = 1,
	ETDMScoreProgressTypes__ProgressSoundMedium2                                     = 2,
	ETDMScoreProgressTypes__ProgressSoundStrong3                                     = 3,
	ETDMScoreProgressTypes__CountdownSoundNormal4                                    = 4,
	ETDMScoreProgressTypes__CountdownSoundStrong5                                    = 5,
	ETDMScoreProgressTypes__ETDMScoreProgressTypes_MAX6                              = 6
};

/// Enum /Script/FortniteUI.EQuestCategoryButtonTimerState
/// Size: 0x05
enum EQuestCategoryButtonTimerState : uint8_t
{
	EQuestCategoryButtonTimerState__Countdown0                                       = 0,
	EQuestCategoryButtonTimerState__Custom1                                          = 1,
	EQuestCategoryButtonTimerState__Disabled2                                        = 2,
	EQuestCategoryButtonTimerState__None3                                            = 3,
	EQuestCategoryButtonTimerState__EQuestCategoryButtonTimerState_MAX4              = 4
};

/// Enum /Script/FortniteUI.EComboSlotType
/// Size: 0x06
enum EComboSlotType : uint8_t
{
	EComboSlotType__Primary0                                                         = 0,
	EComboSlotType__Secondary1                                                       = 1,
	EComboSlotType__Combo2                                                           = 2,
	EComboSlotType__Creative3                                                        = 3,
	EComboSlotType__COUNT4                                                           = 4,
	EComboSlotType__EComboSlotType_MAX5                                              = 5
};

/// Enum /Script/FortniteUI.EBacchusSignalQuality
/// Size: 0x05
enum EBacchusSignalQuality : uint8_t
{
	EBacchusSignalQuality__None0                                                     = 0,
	EBacchusSignalQuality__Low1                                                      = 1,
	EBacchusSignalQuality__Medium2                                                   = 2,
	EBacchusSignalQuality__High3                                                     = 3,
	EBacchusSignalQuality__EBacchusSignalQuality_MAX4                                = 4
};

/// Enum /Script/FortniteUI.ECooldownTrackingType
/// Size: 0x04
enum ECooldownTrackingType : uint8_t
{
	ECooldownTrackingType__Cue0                                                      = 0,
	ECooldownTrackingType__AbilityCooldownTags1                                      = 1,
	ECooldownTrackingType__COUNT2                                                    = 2,
	ECooldownTrackingType__ECooldownTrackingType_MAX3                                = 3
};

/// Enum /Script/FortniteUI.EFortPrioritizedWidgetInterruptedBehavior
/// Size: 0x03
enum EFortPrioritizedWidgetInterruptedBehavior : uint8_t
{
	EFortPrioritizedWidgetInterruptedBehavior__RemainInQueue0                        = 0,
	EFortPrioritizedWidgetInterruptedBehavior__Drop1                                 = 1,
	EFortPrioritizedWidgetInterruptedBehavior__EFortPrioritizedWidgetInterruptedBehavior_MAX2 = 2
};

/// Enum /Script/FortniteUI.EAthenaSpectatorNameplateDistanceState
/// Size: 0x04
enum EAthenaSpectatorNameplateDistanceState : uint8_t
{
	EAthenaSpectatorNameplateDistanceState__Near0                                    = 0,
	EAthenaSpectatorNameplateDistanceState__MidDistance1                             = 1,
	EAthenaSpectatorNameplateDistanceState__FurtherThanMaxDistance2                  = 2,
	EAthenaSpectatorNameplateDistanceState__EAthenaSpectatorNameplateDistanceState_MAX3 = 3
};

/// Enum /Script/FortniteUI.EAthenaSpectatorNameplateDetailState
/// Size: 0x05
enum EAthenaSpectatorNameplateDetailState : uint8_t
{
	EAthenaSpectatorNameplateDetailState__High0                                      = 0,
	EAthenaSpectatorNameplateDetailState__Low1                                       = 1,
	EAthenaSpectatorNameplateDetailState__Arrow2                                     = 2,
	EAthenaSpectatorNameplateDetailState__Off3                                       = 3,
	EAthenaSpectatorNameplateDetailState__EAthenaSpectatorNameplateDetailState_MAX4  = 4
};

/// Enum /Script/FortniteUI.EBattleMapTimelineWidgetState
/// Size: 0x08
enum EBattleMapTimelineWidgetState : uint8_t
{
	EBattleMapTimelineWidgetState__None0                                             = 0,
	EBattleMapTimelineWidgetState__HasNext1                                          = 1,
	EBattleMapTimelineWidgetState__HasPrevious2                                      = 2,
	EBattleMapTimelineWidgetState__IsInReplay3                                       = 4,
	EBattleMapTimelineWidgetState__CanBeScrubbed4                                    = 8,
	EBattleMapTimelineWidgetState__IsStreaming5                                      = 16,
	EBattleMapTimelineWidgetState__Invalid6                                          = 32,
	EBattleMapTimelineWidgetState__EBattleMapTimelineWidgetState_MAX7                = 33
};

/// Enum /Script/FortniteUI.ESpectatorBuildCountType
/// Size: 0x06
enum ESpectatorBuildCountType : uint8_t
{
	ESpectatorBuildCountType__BuildCount0                                            = 0,
	ESpectatorBuildCountType__Wood1                                                  = 1,
	ESpectatorBuildCountType__Stone2                                                 = 2,
	ESpectatorBuildCountType__Metal3                                                 = 3,
	ESpectatorBuildCountType__Gold4                                                  = 4,
	ESpectatorBuildCountType__ESpectatorBuildCountType_MAX5                          = 5
};

/// Enum /Script/FortniteUI.ESpectatorLeaderboardEntryType
/// Size: 0x05
enum ESpectatorLeaderboardEntryType : uint8_t
{
	ESpectatorLeaderboardEntryType__ScoreWithEndScore0                               = 0,
	ESpectatorLeaderboardEntryType__NoEndScore1                                      = 1,
	ESpectatorLeaderboardEntryType__Time2                                            = 2,
	ESpectatorLeaderboardEntryType__Invalid3                                         = 3,
	ESpectatorLeaderboardEntryType__ESpectatorLeaderboardEntryType_MAX4              = 4
};

/// Enum /Script/FortniteUI.ESpectatorMapPlayerListState
/// Size: 0x04
enum ESpectatorMapPlayerListState : uint8_t
{
	ESpectatorMapPlayerListState__Default0                                           = 0,
	ESpectatorMapPlayerListState__Irrelevant1                                        = 1,
	ESpectatorMapPlayerListState__Eliminated2                                        = 2,
	ESpectatorMapPlayerListState__ESpectatorMapPlayerListState_MAX3                  = 3
};

/// Enum /Script/FortniteUI.ESpectatorPlayerListSortMethod
/// Size: 0x07
enum ESpectatorPlayerListSortMethod : uint8_t
{
	ESpectatorPlayerListSortMethod__SquadId0                                         = 0,
	ESpectatorPlayerListSortMethod__PlayerName1                                      = 1,
	ESpectatorPlayerListSortMethod__Eliminations2                                    = 2,
	ESpectatorPlayerListSortMethod__EventScore3                                      = 3,
	ESpectatorPlayerListSortMethod__State4                                           = 4,
	ESpectatorPlayerListSortMethod__Count5                                           = 5,
	ESpectatorPlayerListSortMethod__ESpectatorPlayerListSortMethod_MAX6              = 6
};

/// Enum /Script/FortniteUI.EOptionalFlowSteps
/// Size: 0x29
enum EOptionalFlowSteps : uint8_t
{
	EOptionalFlowSteps__TryShowMobileGuidedTutorial0                                 = 0,
	EOptionalFlowSteps__TryPlaySeasonTrailer1                                        = 1,
	EOptionalFlowSteps__TryPlayBattlePassTrailer2                                    = 2,
	EOptionalFlowSteps__TryShowMOTDs3                                                = 3,
	EOptionalFlowSteps__TryShowNormalBanModal4                                       = 4,
	EOptionalFlowSteps__TryShowSocialBanModal5                                       = 5,
	EOptionalFlowSteps__TryShowMFAModal6                                             = 6,
	EOptionalFlowSteps__TryShowCrossplayDialog7                                      = 7,
	EOptionalFlowSteps__TryShowSocialImport8                                         = 8,
	EOptionalFlowSteps__TryShowSurveys9                                              = 9,
	EOptionalFlowSteps__TryShowFireModeModal10                                       = 10,
	EOptionalFlowSteps__TryShowBadMatchPopup11                                       = 11,
	EOptionalFlowSteps__TryShowMobileInGameAppRating12                               = 12,
	EOptionalFlowSteps__TryShowSamsungSensorWarning13                                = 13,
	EOptionalFlowSteps__TryShowBattlePassPurchaseScreen14                            = 14,
	EOptionalFlowSteps__TryShowMultipleSubscriptionsAlert15                          = 15,
	EOptionalFlowSteps__TryPushGiftingScreen16                                       = 16,
	EOptionalFlowSteps__TryPushMessagingScreen17                                     = 17,
	EOptionalFlowSteps__TryGoToBattlePassTab18                                       = 18,
	EOptionalFlowSteps__TryShowRefundTokenNotification19                             = 19,
	EOptionalFlowSteps__TryShowPriceChangeAcknowledgeNotification20                  = 20,
	EOptionalFlowSteps__TryShowFireModeSelectionReminderModal21                      = 21,
	EOptionalFlowSteps__TryShowSettingsChangeAcknowledgementScreen22                 = 22,
	EOptionalFlowSteps__TryShowMatchmaking23                                         = 23,
	EOptionalFlowSteps__TryShowEnterCabinModeScreen24                                = 24,
	EOptionalFlowSteps__TryShowHabaneroIntroModal25                                  = 25,
	EOptionalFlowSteps__TryShowContentGatingIntroModal26                             = 26,
	EOptionalFlowSteps__TryShowResolutionChangeModal27                               = 27,
	EOptionalFlowSteps__EOptionalFlowSteps_MAX28                                     = 28
};

/// Enum /Script/FortniteUI.EFuelTankState
/// Size: 0x04
enum EFuelTankState : uint8_t
{
	EFuelTankState__Empty0                                                           = 0,
	EFuelTankState__LowFuel1                                                         = 1,
	EFuelTankState__RegularFuel2                                                     = 2,
	EFuelTankState__EFuelTankState_MAX3                                              = 3
};

/// Enum /Script/FortniteUI.EActionBindingComparisonType
/// Size: 0x04
enum EActionBindingComparisonType : uint8_t
{
	EActionBindingComparisonType__NoneBound0                                         = 0,
	EActionBindingComparisonType__AnyBound1                                          = 1,
	EActionBindingComparisonType__AllBound2                                          = 2,
	EActionBindingComparisonType__EActionBindingComparisonType_MAX3                  = 3
};

/// Enum /Script/FortniteUI.ENumericalIndicatorActionType
/// Size: 0x04
enum ENumericalIndicatorActionType : uint8_t
{
	ENumericalIndicatorActionType__Adding0                                           = 0,
	ENumericalIndicatorActionType__Removing1                                         = 1,
	ENumericalIndicatorActionType__Nothing2                                          = 2,
	ENumericalIndicatorActionType__ENumericalIndicatorActionType_MAX3                = 3
};

/// Enum /Script/FortniteUI.ELinkAcrossSimpleAction
/// Size: 0x05
enum ELinkAcrossSimpleAction : uint8_t
{
	ELinkAcrossSimpleAction__AddToAll0                                               = 0,
	ELinkAcrossSimpleAction__RemovedFromAll1                                         = 1,
	ELinkAcrossSimpleAction__Custom2                                                 = 2,
	ELinkAcrossSimpleAction__Nothing3                                                = 3,
	ELinkAcrossSimpleAction__ELinkAcrossSimpleAction_MAX4                            = 4
};

/// Enum /Script/FortniteUI.EHUDLayoutToolPopupType
/// Size: 0x03
enum EHUDLayoutToolPopupType : uint8_t
{
	EHUDLayoutToolPopupType__Warning0                                                = 0,
	EHUDLayoutToolPopupType__Generic1                                                = 1,
	EHUDLayoutToolPopupType__EHUDLayoutToolPopupType_MAX2                            = 2
};

/// Enum /Script/FortniteUI.EHUDLayoutToolTextInputPopupType
/// Size: 0x03
enum EHUDLayoutToolTextInputPopupType : uint8_t
{
	EHUDLayoutToolTextInputPopupType__Rename0                                        = 0,
	EHUDLayoutToolTextInputPopupType__ImportLayoutID1                                = 1,
	EHUDLayoutToolTextInputPopupType__EHUDLayoutToolTextInputPopupType_MAX2          = 2
};

/// Enum /Script/FortniteUI.EHUDLayoutToolToasterType
/// Size: 0x05
enum EHUDLayoutToolToasterType : uint8_t
{
	EHUDLayoutToolToasterType__Success0                                              = 0,
	EHUDLayoutToolToasterType__Failure1                                              = 1,
	EHUDLayoutToolToasterType__LocalFailure2                                         = 2,
	EHUDLayoutToolToasterType__CloudFailure3                                         = 3,
	EHUDLayoutToolToasterType__EHUDLayoutToolToasterType_MAX4                        = 4
};

/// Enum /Script/FortniteUI.EContextLayoutAccessLevel
/// Size: 0x03
enum EContextLayoutAccessLevel : uint8_t
{
	EContextLayoutAccessLevel__Editable0                                             = 0,
	EContextLayoutAccessLevel__Hidden1                                               = 1,
	EContextLayoutAccessLevel__EContextLayoutAccessLevel_MAX2                        = 2
};

/// Enum /Script/FortniteUI.EFortMaterialProgressBarSection
/// Size: 0x06
enum EFortMaterialProgressBarSection : uint8_t
{
	EFortMaterialProgressBarSection__Primary0                                        = 0,
	EFortMaterialProgressBarSection__Secondary1                                      = 1,
	EFortMaterialProgressBarSection__Tertiary2                                       = 2,
	EFortMaterialProgressBarSection__Negative3                                       = 3,
	EFortMaterialProgressBarSection__MAX_PROGRESS_BAR_SECTIONS4                      = 4,
	EFortMaterialProgressBarSection__EFortMaterialProgressBarSection_MAX5            = 5
};

/// Enum /Script/FortniteUI.EFortMaterialProgressBarSectionColorNumber
/// Size: 0x03
enum EFortMaterialProgressBarSectionColorNumber : uint8_t
{
	EFortMaterialProgressBarSectionColorNumber__Color10                              = 0,
	EFortMaterialProgressBarSectionColorNumber__Color21                              = 1,
	EFortMaterialProgressBarSectionColorNumber__EFortMaterialProgressBarSectionColorNumber_MAX2 = 2
};

/// Enum /Script/FortniteUI.EFortMaterialProgressBarSectionOverflowBehavior
/// Size: 0x03
enum EFortMaterialProgressBarSectionOverflowBehavior : uint8_t
{
	EFortMaterialProgressBarSectionOverflowBehavior__PreserveValues0                 = 0,
	EFortMaterialProgressBarSectionOverflowBehavior__ReverseCollapse1                = 1,
	EFortMaterialProgressBarSectionOverflowBehavior__EFortMaterialProgressBarSectionOverflowBehavior_MAX2 = 2
};

/// Enum /Script/FortniteUI.ECrewDetailsTag
/// Size: 0x07
enum ECrewDetailsTag : uint8_t
{
	ECrewDetailsTag__SeasonLaunchBenefit0                                            = 0,
	ECrewDetailsTag__MonthlyBenefit1                                                 = 1,
	ECrewDetailsTag__CrewMonthBenefit2                                               = 2,
	ECrewDetailsTag__AvailableUntilBenefit3                                          = 3,
	ECrewDetailsTag__MonthlySubscription4                                            = 4,
	ECrewDetailsTag__None5                                                           = 5,
	ECrewDetailsTag__ECrewDetailsTag_MAX6                                            = 6
};

/// Enum /Script/FortniteUI.ECrewTileType
/// Size: 0x06
enum ECrewTileType : uint8_t
{
	ECrewTileType__None0                                                             = 0,
	ECrewTileType__Basic1                                                            = 1,
	ECrewTileType__BattlePass2                                                       = 2,
	ECrewTileType__CrewPack3                                                         = 3,
	ECrewTileType__ProgressiveCosmetic4                                              = 4,
	ECrewTileType__ECrewTileType_MAX5                                                = 5
};

/// Enum /Script/FortniteUI.ECrewItemShopTileType
/// Size: 0x04
enum ECrewItemShopTileType : uint8_t
{
	ECrewItemShopTileType__None0                                                     = 0,
	ECrewItemShopTileType__Subscription1                                             = 1,
	ECrewItemShopTileType__ProgressiveCosmetic2                                      = 2,
	ECrewItemShopTileType__ECrewItemShopTileType_MAX3                                = 3
};

/// Enum /Script/FortniteUI.EAthenaNewsEntryType
/// Size: 0x24
enum EAthenaNewsEntryType : uint8_t
{
	EAthenaNewsEntryType__Text0                                                      = 0,
	EAthenaNewsEntryType__Item1                                                      = 1,
	EAthenaNewsEntryType__Website2                                                   = 2,
	EAthenaNewsEntryType__NavigateToTab3                                             = 3,
	EAthenaNewsEntryType__Challenge4                                                 = 4,
	EAthenaNewsEntryType__Setting5                                                   = 5,
	EAthenaNewsEntryType__SpatialScreen6                                             = 6,
	EAthenaNewsEntryType__SmallNews7                                                 = 7,
	EAthenaNewsEntryType__NavigateToBattlePassSubPage8                               = 8,
	EAthenaNewsEntryType__Creative9                                                  = 9,
	EAthenaNewsEntryType__NavigateToSubscriptionSubPage10                            = 10,
	EAthenaNewsEntryType__ProgressiveItemLearnMore11                                 = 11,
	EAthenaNewsEntryType__ProgressiveItemReminder12                                  = 12,
	EAthenaNewsEntryType__ProgressiveItemClaimRewards13                              = 13,
	EAthenaNewsEntryType__Event14                                                    = 14,
	EAthenaNewsEntryType__Discovery15                                                = 15,
	EAthenaNewsEntryType__NavigateToCompetitiveSubPage16                             = 16,
	EAthenaNewsEntryType__NavigateToSocialMenu17                                     = 17,
	EAthenaNewsEntryType__NavigateToSocialTagsSubPage18                              = 18,
	EAthenaNewsEntryType__NavigateToRebootRallySubPage19                             = 19,
	EAthenaNewsEntryType__NavigateToMapSubPage20                                     = 20,
	EAthenaNewsEntryType__NavigateToHabaneroSubPage21                                = 21,
	EAthenaNewsEntryType__Invalid22                                                  = 22,
	EAthenaNewsEntryType__EAthenaNewsEntryType_MAX23                                 = 23
};

/// Enum /Script/FortniteUI.EAthenaNewsStyle
/// Size: 0x04
enum EAthenaNewsStyle : uint8_t
{
	EAthenaNewsStyle__None0                                                          = 0,
	EAthenaNewsStyle__SpecialEvent1                                                  = 1,
	EAthenaNewsStyle__SpecialEvent22                                                 = 2,
	EAthenaNewsStyle__EAthenaNewsStyle_MAX3                                          = 3
};

/// Enum /Script/FortniteUI.EBuildingFocusType
/// Size: 0x05
enum EBuildingFocusType : uint8_t
{
	EBuildingFocusType__Contextual0                                                  = 0,
	EBuildingFocusType__Interactable1                                                = 1,
	EBuildingFocusType__Normal2                                                      = 2,
	EBuildingFocusType__Count3                                                       = 3,
	EBuildingFocusType__EBuildingFocusType_MAX4                                      = 4
};

/// Enum /Script/FortniteUI.EVaultItemLimitStatus
/// Size: 0x05
enum EVaultItemLimitStatus : uint8_t
{
	EVaultItemLimitStatus__WellBelowCapacity0                                        = 0,
	EVaultItemLimitStatus__NearCapacity1                                             = 1,
	EVaultItemLimitStatus__AtCapacity2                                               = 2,
	EVaultItemLimitStatus__OverCapacity3                                             = 3,
	EVaultItemLimitStatus__EVaultItemLimitStatus_MAX4                                = 4
};

/// Enum /Script/FortniteUI.EItemRecyclingRestrictionReason
/// Size: 0x08
enum EItemRecyclingRestrictionReason : uint8_t
{
	EItemRecyclingRestrictionReason__InnatelyUnrecyclable0                           = 0,
	EItemRecyclingRestrictionReason__IsSlottedGroundOperative1                       = 1,
	EItemRecyclingRestrictionReason__MissingCatalyst2                                = 2,
	EItemRecyclingRestrictionReason__ItemOutOnExpedition3                            = 3,
	EItemRecyclingRestrictionReason__InUseByCrafting4                                = 4,
	EItemRecyclingRestrictionReason__MulchingNotAllowed5                             = 5,
	EItemRecyclingRestrictionReason__IsSlottedAttributeWorker6                       = 6,
	EItemRecyclingRestrictionReason__EItemRecyclingRestrictionReason_MAX7            = 7
};

/// Enum /Script/FortniteUI.EItemRecyclingWarning
/// Size: 0x04
enum EItemRecyclingWarning : uint8_t
{
	EItemRecyclingWarning__HighLevel0                                                = 0,
	EItemRecyclingWarning__HighRarity1                                               = 1,
	EItemRecyclingWarning__CanSlotInCollectionBook2                                  = 2,
	EItemRecyclingWarning__EItemRecyclingWarning_MAX3                                = 3
};

/// Enum /Script/FortniteUI.EConversionControlKeyRequest
/// Size: 0x04
enum EConversionControlKeyRequest : uint8_t
{
	EConversionControlKeyRequest__AllKeys0                                           = 0,
	EConversionControlKeyRequest__NonConsumableKeys1                                 = 1,
	EConversionControlKeyRequest__ConsumableKeys2                                    = 2,
	EConversionControlKeyRequest__EConversionControlKeyRequest_MAX3                  = 3
};

/// Enum /Script/FortniteUI.ECardPackPurchaseError
/// Size: 0x06
enum ECardPackPurchaseError : uint8_t
{
	ECardPackPurchaseError__PendingServerConfirmation0                               = 0,
	ECardPackPurchaseError__CannotAffordItem1                                        = 1,
	ECardPackPurchaseError__NoneLeft2                                                = 2,
	ECardPackPurchaseError__PurchaseAlreadyPending3                                  = 3,
	ECardPackPurchaseError__NoConnection4                                            = 4,
	ECardPackPurchaseError__ECardPackPurchaseError_MAX5                              = 5
};

/// Enum /Script/FortniteUI.EPauseType
/// Size: 0x05
enum EPauseType : uint8_t
{
	EPauseType__NoPause0                                                             = 0,
	EPauseType__Rare1                                                                = 1,
	EPauseType__New2                                                                 = 2,
	EPauseType__NewAndRare3                                                          = 3,
	EPauseType__EPauseType_MAX4                                                      = 4
};

/// Enum /Script/FortniteUI.EShowChannelDetails
/// Size: 0x04
enum EShowChannelDetails : uint8_t
{
	EShowChannelDetails__FromMinigameSettings0                                       = 0,
	EShowChannelDetails__ForceShow1                                                  = 1,
	EShowChannelDetails__ForceHide2                                                  = 2,
	EShowChannelDetails__EShowChannelDetails_MAX3                                    = 3
};

/// Enum /Script/FortniteUI.EFortCreativeIslandLinkCategory
/// Size: 0x05
enum EFortCreativeIslandLinkCategory : uint8_t
{
	EFortCreativeIslandLinkCategory__Default0                                        = 0,
	EFortCreativeIslandLinkCategory__Favorite1                                       = 1,
	EFortCreativeIslandLinkCategory__Published2                                      = 2,
	EFortCreativeIslandLinkCategory__Recent3                                         = 3,
	EFortCreativeIslandLinkCategory__EFortCreativeIslandLinkCategory_MAX4            = 4
};

/// Enum /Script/FortniteUI.EFortCreativeIslandSelectTabType
/// Size: 0x03
enum EFortCreativeIslandSelectTabType : uint8_t
{
	EFortCreativeIslandSelectTabType__IslandCode0                                    = 0,
	EFortCreativeIslandSelectTabType__ListView1                                      = 1,
	EFortCreativeIslandSelectTabType__EFortCreativeIslandSelectTabType_MAX2          = 2
};

/// Enum /Script/FortniteUI.ECreativePublishError
/// Size: 0x07
enum ECreativePublishError : uint8_t
{
	ECreativePublishError__None0                                                     = 0,
	ECreativePublishError__RateLimited1                                              = 1,
	ECreativePublishError__PlotOverBudget2                                           = 2,
	ECreativePublishError__LinkCodeInvalid3                                          = 3,
	ECreativePublishError__SanitizationFiltered4                                     = 4,
	ECreativePublishError__Other5                                                    = 5,
	ECreativePublishError__ECreativePublishError_MAX6                                = 6
};

/// Enum /Script/FortniteUI.EConfirmDialogType
/// Size: 0x04
enum EConfirmDialogType : uint8_t
{
	EConfirmDialogType__CancelChanges0                                               = 0,
	EConfirmDialogType__CharLimitExceeded1                                           = 1,
	EConfirmDialogType__MarkupWarning2                                               = 2,
	EConfirmDialogType__EConfirmDialogType_MAX3                                      = 3
};

/// Enum /Script/FortniteUI.EButtonContext
/// Size: 0x04
enum EButtonContext : uint8_t
{
	EButtonContext__NoButtonSelected0                                                = 0,
	EButtonContext__ButtonSelected1                                                  = 1,
	EButtonContext__StylingButtons2                                                  = 2,
	EButtonContext__EButtonContext_MAX3                                              = 3
};

/// Enum /Script/FortniteUI.EFortCreativeServerPrivacySetting
/// Size: 0x04
enum EFortCreativeServerPrivacySetting : uint8_t
{
	EFortCreativeServerPrivacySetting__Unknown0                                      = 0,
	EFortCreativeServerPrivacySetting__Private1                                      = 1,
	EFortCreativeServerPrivacySetting__Public2                                       = 2,
	EFortCreativeServerPrivacySetting__EFortCreativeServerPrivacySetting_MAX3        = 3
};

/// Enum /Script/FortniteUI.EFortActivityBrowserTagType
/// Size: 0x08
enum EFortActivityBrowserTagType : uint8_t
{
	EFortActivityBrowserTagType__Default0                                            = 0,
	EFortActivityBrowserTagType__EpicOriginal1                                       = 1,
	EFortActivityBrowserTagType__SquadSize2                                          = 2,
	EFortActivityBrowserTagType__MaxPlayers3                                         = 3,
	EFortActivityBrowserTagType__XP4                                                 = 4,
	EFortActivityBrowserTagType__PurchaseRequired5                                   = 5,
	EFortActivityBrowserTagType__DownloadRequired6                                   = 6,
	EFortActivityBrowserTagType__EFortActivityBrowserTagType_MAX7                    = 7
};

/// Enum /Script/FortniteUI.EFortActivityDetailsModalExitPath
/// Size: 0x07
enum EFortActivityDetailsModalExitPath : uint8_t
{
	EFortActivityDetailsModalExitPath__Undefined0                                    = 0,
	EFortActivityDetailsModalExitPath__Discover1                                     = 1,
	EFortActivityDetailsModalExitPath__Lobby2                                        = 2,
	EFortActivityDetailsModalExitPath__Creator3                                      = 3,
	EFortActivityDetailsModalExitPath__Attributions4                                 = 4,
	EFortActivityDetailsModalExitPath__MAX_NUM5                                      = 5,
	EFortActivityDetailsModalExitPath__EFortActivityDetailsModalExitPath_MAX6        = 6
};

/// Enum /Script/FortniteUI.ELeaderboardDisplayType
/// Size: 0x03
enum ELeaderboardDisplayType : uint8_t
{
	ELeaderboardDisplayType__Default0                                                = 0,
	ELeaderboardDisplayType__Extra1                                                  = 1,
	ELeaderboardDisplayType__ELeaderboardDisplayType_MAX2                            = 2
};

/// Enum /Script/FortniteUI.EHabaneroDisplayState
/// Size: 0x04
enum EHabaneroDisplayState : uint8_t
{
	EHabaneroDisplayState__Solo0                                                     = 0,
	EHabaneroDisplayState__Party1                                                    = 1,
	EHabaneroDisplayState__Hidden2                                                   = 2,
	EHabaneroDisplayState__EHabaneroDisplayState_MAX3                                = 3
};

/// Enum /Script/FortniteUI.EChatMessageOrigin
/// Size: 0x05
enum EChatMessageOrigin : uint8_t
{
	EChatMessageOrigin__Local0                                                       = 0,
	EChatMessageOrigin__Remote1                                                      = 1,
	EChatMessageOrigin__System2                                                      = 2,
	EChatMessageOrigin__Unknown3                                                     = 3,
	EChatMessageOrigin__EChatMessageOrigin_MAX4                                      = 4
};

/// Enum /Script/FortniteUI.ECenterPopupMessageStateEnum
/// Size: 0x03
enum ECenterPopupMessageStateEnum : uint8_t
{
	ECenterPopupMessageStateEnum__NotVisible0                                        = 0,
	ECenterPopupMessageStateEnum__WaitingForOutpostOwner1                            = 1,
	ECenterPopupMessageStateEnum__ECenterPopupMessageStateEnum_MAX2                  = 2
};

/// Enum /Script/FortniteUI.EContextPositionPlatform
/// Size: 0x03
enum EContextPositionPlatform : uint8_t
{
	EContextPositionPlatform__NonMobile0                                             = 0,
	EContextPositionPlatform__Mobile1                                                = 1,
	EContextPositionPlatform__EContextPositionPlatform_MAX2                          = 2
};

/// Enum /Script/FortniteUI.EFortKeybindForcedHoldStatus
/// Size: 0x04
enum EFortKeybindForcedHoldStatus : uint8_t
{
	EFortKeybindForcedHoldStatus__NoForcedHold0                                      = 0,
	EFortKeybindForcedHoldStatus__ForcedHold1                                        = 1,
	EFortKeybindForcedHoldStatus__NeverShowHold2                                     = 2,
	EFortKeybindForcedHoldStatus__EFortKeybindForcedHoldStatus_MAX3                  = 3
};

/// Enum /Script/FortniteUI.EFortLegacySlateWidget
/// Size: 0x03
enum EFortLegacySlateWidget : uint8_t
{
	EFortLegacySlateWidget__None0                                                    = 0,
	EFortLegacySlateWidget__Minimap1                                                 = 1,
	EFortLegacySlateWidget__MAX2                                                     = 2
};

/// Enum /Script/FortniteUI.EFortModifiedStatus
/// Size: 0x04
enum EFortModifiedStatus : uint8_t
{
	EFortModifiedStatus__IsDefault0                                                  = 0,
	EFortModifiedStatus__IsModified1                                                 = 1,
	EFortModifiedStatus__Unsupported2                                                = 2,
	EFortModifiedStatus__EFortModifiedStatus_MAX3                                    = 3
};

/// Enum /Script/FortniteUI.EModalContainerSlot
/// Size: 0x05
enum EModalContainerSlot : uint8_t
{
	EModalContainerSlot__Top0                                                        = 0,
	EModalContainerSlot__Middle1                                                     = 1,
	EModalContainerSlot__Bottom2                                                     = 2,
	EModalContainerSlot__Background3                                                 = 3,
	EModalContainerSlot__Max4                                                        = 4
};

/// Enum /Script/FortniteUI.EPinGrantState
/// Size: 0x05
enum EPinGrantState : uint8_t
{
	EPinGrantState__Initial0                                                         = 0,
	EPinGrantState__Error1                                                           = 1,
	EPinGrantState__Downloading2                                                     = 2,
	EPinGrantState__Granted3                                                         = 3,
	EPinGrantState__EPinGrantState_MAX4                                              = 4
};

/// Enum /Script/FortniteUI.ERedeemCodeFailureReason
/// Size: 0x06
enum ERedeemCodeFailureReason : uint8_t
{
	ERedeemCodeFailureReason__InvalidCode0                                           = 0,
	ERedeemCodeFailureReason__CodeAlreadyUsed1                                       = 1,
	ERedeemCodeFailureReason__AlreadyHasAccess2                                      = 2,
	ERedeemCodeFailureReason__FailedToGetItem3                                       = 3,
	ERedeemCodeFailureReason__Unknown4                                               = 4,
	ERedeemCodeFailureReason__ERedeemCodeFailureReason_MAX5                          = 5
};

/// Enum /Script/FortniteUI.EFortRewardItemType
/// Size: 0x05
enum EFortRewardItemType : uint8_t
{
	EFortRewardItemType__RewardedBadges0                                             = 0,
	EFortRewardItemType__MissedBadges1                                               = 1,
	EFortRewardItemType__RewardedItems2                                              = 2,
	EFortRewardItemType__RewardedAccountItems3                                       = 3,
	EFortRewardItemType__EFortRewardItemType_MAX4                                    = 4
};

/// Enum /Script/FortniteUI.EFortTouchControlRegion
/// Size: 0x05
enum EFortTouchControlRegion : uint8_t
{
	EFortTouchControlRegion__MovePlayer0                                             = 0,
	EFortTouchControlRegion__RotateCamera1                                           = 1,
	EFortTouchControlRegion__NoRegion2                                               = 2,
	EFortTouchControlRegion__COUNT3                                                  = 3,
	EFortTouchControlRegion__EFortTouchControlRegion_MAX4                            = 4
};

/// Enum /Script/FortniteUI.EFortControlType
/// Size: 0x05
enum EFortControlType : uint8_t
{
	EFortControlType__None0                                                          = 0,
	EFortControlType__CameraAndMovement1                                             = 1,
	EFortControlType__Picking2                                                       = 2,
	EFortControlType__COUNT3                                                         = 3,
	EFortControlType__EFortControlType_MAX4                                          = 4
};

/// Enum /Script/FortniteUI.ETouchState
/// Size: 0x06
enum ETouchState : uint8_t
{
	ETouchState__None0                                                               = 0,
	ETouchState__WaitingForStart1                                                    = 1,
	ETouchState__Started2                                                            = 2,
	ETouchState__Active3                                                             = 3,
	ETouchState__COUNT4                                                              = 4,
	ETouchState__ETouchState_MAX5                                                    = 5
};

/// Enum /Script/FortniteUI.EFortNamedBundle
/// Size: 0x10
enum EFortNamedBundle : uint8_t
{
	EFortNamedBundle__Menu0                                                          = 0,
	EFortNamedBundle__MenuCampaign1                                                  = 1,
	EFortNamedBundle__MenuAthena2                                                    = 2,
	EFortNamedBundle__Zone3                                                          = 3,
	EFortNamedBundle__ZoneCampaign4                                                  = 4,
	EFortNamedBundle__ZoneAthena5                                                    = 5,
	EFortNamedBundle__Client6                                                        = 6,
	EFortNamedBundle__ClientCampaign7                                                = 7,
	EFortNamedBundle__ClientAthena8                                                  = 8,
	EFortNamedBundle__EFortNamedBundle_MAX9                                          = 9
};

/// Enum /Script/FortniteUI.EFortUINavigationOp
/// Size: 0x10
enum EFortUINavigationOp : uint8_t
{
	EFortUINavigationOp__PopContentStack0                                            = 0,
	EFortUINavigationOp__FeatureSwitch1                                              = 1,
	EFortUINavigationOp__NavigateToSkillTree2                                        = 2,
	EFortUINavigationOp__NavigateToSquadSlot3                                        = 3,
	EFortUINavigationOp__NavigateToQuest4                                            = 4,
	EFortUINavigationOp__NavigateToItemManagement5                                   = 5,
	EFortUINavigationOp__NavigateToExpeditions6                                      = 6,
	EFortUINavigationOp__NavigateToCollectionBook7                                   = 7,
	EFortUINavigationOp__None8                                                       = 8,
	EFortUINavigationOp__EFortUINavigationOp_MAX9                                    = 9
};

/// Enum /Script/FortniteUI.EForcedIntroTextDisplayState
/// Size: 0x08
enum EForcedIntroTextDisplayState : uint8_t
{
	EForcedIntroTextDisplayState__Initialized0                                       = 0,
	EForcedIntroTextDisplayState__WaitingForPlaylistPlugin1                          = 1,
	EForcedIntroTextDisplayState__WaitingForMatchmakingStartTime2                    = 2,
	EForcedIntroTextDisplayState__InitialDelay3                                      = 3,
	EForcedIntroTextDisplayState__Matchmaking4                                       = 4,
	EForcedIntroTextDisplayState__Success5                                           = 5,
	EForcedIntroTextDisplayState__Failure6                                           = 6,
	EForcedIntroTextDisplayState__EForcedIntroTextDisplayState_MAX7                  = 7
};

/// Enum /Script/FortniteUI.EFortAthenaRewardState
/// Size: 0x06
enum EFortAthenaRewardState : uint8_t
{
	EFortAthenaRewardState__LevelAchieved0                                           = 0,
	EFortAthenaRewardState__Claimed1                                                 = 1,
	EFortAthenaRewardState__ForceLocked2                                             = 2,
	EFortAthenaRewardState__Owned3                                                   = 3,
	EFortAthenaRewardState__Max_None4                                                = 4,
	EFortAthenaRewardState__EFortAthenaRewardState_MAX5                              = 5
};

/// Enum /Script/FortniteUI.EFortFortMobileShareButtonOS
/// Size: 0x03
enum EFortFortMobileShareButtonOS : uint8_t
{
	EFortFortMobileShareButtonOS__Android0                                           = 0,
	EFortFortMobileShareButtonOS__iOS1                                               = 1,
	EFortFortMobileShareButtonOS__EFortFortMobileShareButtonOS_MAX2                  = 2
};

/// Enum /Script/FortniteUI.EItemPreviewRestrictionMode
/// Size: 0x03
enum EItemPreviewRestrictionMode : uint8_t
{
	EItemPreviewRestrictionMode__AlwaysShowTargetCosmetic0                           = 0,
	EItemPreviewRestrictionMode__HideTargetCosmetic1                                 = 1,
	EItemPreviewRestrictionMode__EItemPreviewRestrictionMode_MAX2                    = 2
};

/// Enum /Script/FortniteUI.ESceneTransitionType
/// Size: 0x04
enum ESceneTransitionType : uint8_t
{
	ESceneTransitionType__NoTransition0                                              = 0,
	ESceneTransitionType__Clockwise1                                                 = 1,
	ESceneTransitionType__CounterClockwise2                                          = 2,
	ESceneTransitionType__ESceneTransitionType_MAX3                                  = 3
};

/// Enum /Script/FortniteUI.EShareButtonType
/// Size: 0x04
enum EShareButtonType : uint8_t
{
	EShareButtonType__IOS0                                                           = 0,
	EShareButtonType__Android1                                                       = 1,
	EShareButtonType__Generic2                                                       = 2,
	EShareButtonType__EShareButtonType_MAX3                                          = 3
};

/// Enum /Script/FortniteUI.EFortSidebarButtonType
/// Size: 0x08
enum EFortSidebarButtonType : uint8_t
{
	EFortSidebarButtonType__PartyUp0                                                 = 0,
	EFortSidebarButtonType__FindFriends1                                             = 1,
	EFortSidebarButtonType__VoiceChat2                                               = 2,
	EFortSidebarButtonType__Settings3                                                = 3,
	EFortSidebarButtonType__YourProfile4                                             = 4,
	EFortSidebarButtonType__Tags5                                                    = 5,
	EFortSidebarButtonType__Exit6                                                    = 6,
	EFortSidebarButtonType__EFortSidebarButtonType_MAX7                              = 7
};

/// Enum /Script/FortniteUI.ESidebarExitActions
/// Size: 0x06
enum ESidebarExitActions : uint8_t
{
	ESidebarExitActions__None0                                                       = 0,
	ESidebarExitActions__LeaveExperience1                                            = 1,
	ESidebarExitActions__AthenaLeaveAction2                                          = 2,
	ESidebarExitActions__LogOut3                                                     = 3,
	ESidebarExitActions__QuitGame4                                                   = 4,
	ESidebarExitActions__ESidebarExitActions_MAX5                                    = 5
};

/// Enum /Script/FortniteUI.ESidebarExitConfirmationNavBehavior
/// Size: 0x08
enum ESidebarExitConfirmationNavBehavior : uint8_t
{
	ESidebarExitConfirmationNavBehavior__None0                                       = 0,
	ESidebarExitConfirmationNavBehavior__ButtonYesFocus1                             = 1,
	ESidebarExitConfirmationNavBehavior__ButtonYesSelection2                         = 2,
	ESidebarExitConfirmationNavBehavior__ButtonYesFocusSelection3                    = 3,
	ESidebarExitConfirmationNavBehavior__ButtonNoFocus4                              = 4,
	ESidebarExitConfirmationNavBehavior__ButtonNoSelection5                          = 5,
	ESidebarExitConfirmationNavBehavior__ButtonNoFocusSelection6                     = 6,
	ESidebarExitConfirmationNavBehavior__ESidebarExitConfirmationNavBehavior_MAX7    = 7
};

/// Enum /Script/FortniteUI.ESocialTutorialType
/// Size: 0x10
enum ESocialTutorialType : uint8_t
{
	ESocialTutorialType__None0                                                       = 0,
	ESocialTutorialType__TagsEditor1                                                 = 1,
	ESocialTutorialType__LookingForParty2                                            = 2,
	ESocialTutorialType__LikeIsland3                                                 = 3,
	ESocialTutorialType__RebootRallyUsers4                                           = 4,
	ESocialTutorialType__KWSSidebarSupervisedSettings5                               = 5,
	ESocialTutorialType__KWSVoiceChannelPanelSupervisedSettings6                     = 6,
	ESocialTutorialType__ContentRatingSettings7                                      = 7,
	ESocialTutorialType__ContentUnlockedSettings8                                    = 8,
	ESocialTutorialType__ESocialTutorialType_MAX9                                    = 9
};

/// Enum /Script/FortniteUI.EFortSidebarSocialInteractionArrow
/// Size: 0x06
enum EFortSidebarSocialInteractionArrow : uint8_t
{
	EFortSidebarSocialInteractionArrow__None0                                        = 0,
	EFortSidebarSocialInteractionArrow__Up1                                          = 1,
	EFortSidebarSocialInteractionArrow__Down2                                        = 2,
	EFortSidebarSocialInteractionArrow__Left3                                        = 3,
	EFortSidebarSocialInteractionArrow__Right4                                       = 4,
	EFortSidebarSocialInteractionArrow__EFortSidebarSocialInteractionArrow_MAX5      = 5
};

/// Enum /Script/FortniteUI.ESocialImportPanelType
/// Size: 0x03
enum ESocialImportPanelType : uint8_t
{
	ESocialImportPanelType__Athena0                                                  = 0,
	ESocialImportPanelType__SaveTheWorld1                                            = 1,
	ESocialImportPanelType__ESocialImportPanelType_MAX2                              = 2
};

/// Enum /Script/FortniteUI.EFriendLinkShareButtonType
/// Size: 0x04
enum EFriendLinkShareButtonType : uint8_t
{
	EFriendLinkShareButtonType__IOS0                                                 = 0,
	EFriendLinkShareButtonType__Android1                                             = 1,
	EFriendLinkShareButtonType__Generic2                                             = 2,
	EFriendLinkShareButtonType__EFriendLinkShareButtonType_MAX3                      = 3
};

/// Enum /Script/FortniteUI.ESidebarState
/// Size: 0x04
enum ESidebarState : uint8_t
{
	ESidebarState__TabButtons0                                                       = 0,
	ESidebarState__UserListPanels1                                                   = 1,
	ESidebarState__ExitPopup2                                                        = 2,
	ESidebarState__ESidebarState_MAX3                                                = 3
};

/// Enum /Script/FortniteUI.EListHeaderType
/// Size: 0x23
enum EListHeaderType : uint8_t
{
	EListHeaderType__TeamMember0                                                     = 0,
	EListHeaderType__PartyMember1                                                    = 1,
	EListHeaderType__JoinableParty2                                                  = 2,
	EListHeaderType__PlatformOnlineFriend3                                           = 3,
	EListHeaderType__McpOnlineFriend4                                                = 4,
	EListHeaderType__OfflineFriend5                                                  = 5,
	EListHeaderType__Blocked6                                                        = 6,
	EListHeaderType__FriendInvite7                                                   = 7,
	EListHeaderType__SuggestedFriend8                                                = 8,
	EListHeaderType__RecentPlayer9                                                   = 9,
	EListHeaderType__SearchResults10                                                 = 10,
	EListHeaderType__JoinRequests11                                                  = 11,
	EListHeaderType__LfgFilter12                                                     = 12,
	EListHeaderType__LfgPlayers13                                                    = 13,
	EListHeaderType__LfgInvites14                                                    = 14,
	EListHeaderType__RebootPlayers15                                                 = 15,
	EListHeaderType__GameVoice16                                                     = 16,
	EListHeaderType__PartyVoice17                                                    = 17,
	EListHeaderType__PlatformVoice18                                                 = 18,
	EListHeaderType__AwayFriend19                                                    = 19,
	EListHeaderType__Hidden20                                                        = 20,
	EListHeaderType__Invalid21                                                       = 21,
	EListHeaderType__EListHeaderType_MAX22                                           = 22
};

/// Enum /Script/FortniteUI.ESocialTagListHighlightPolicy
/// Size: 0x05
enum ESocialTagListHighlightPolicy : uint8_t
{
	ESocialTagListHighlightPolicy__All0                                              = 0,
	ESocialTagListHighlightPolicy__TagList1                                          = 1,
	ESocialTagListHighlightPolicy__LocalUser2                                        = 2,
	ESocialTagListHighlightPolicy__FullColor3                                        = 3,
	ESocialTagListHighlightPolicy__ESocialTagListHighlightPolicy_MAX4                = 4
};

/// Enum /Script/FortniteUI.ESocialTagCategory
/// Size: 0x06
enum ESocialTagCategory : uint8_t
{
	ESocialTagCategory__GameModes0                                                   = 0,
	ESocialTagCategory__Mood1                                                        = 1,
	ESocialTagCategory__Utility2                                                     = 2,
	ESocialTagCategory__Competitive3                                                 = 3,
	ESocialTagCategory__Other4                                                       = 4,
	ESocialTagCategory__ESocialTagCategory_MAX5                                      = 5
};

/// Enum /Script/FortniteUI.EParentalControlsViewState
/// Size: 0x12
enum EParentalControlsViewState : uint8_t
{
	EParentalControlsViewState__Invalid0                                             = 0,
	EParentalControlsViewState__EnterPin1                                            = 1,
	EParentalControlsViewState__AskToEnableControls2                                 = 2,
	EParentalControlsViewState__VerifyEmail3                                         = 3,
	EParentalControlsViewState__SetupEmail4                                          = 4,
	EParentalControlsViewState__SetupPin5                                            = 5,
	EParentalControlsViewState__DisplaySettings6                                     = 6,
	EParentalControlsViewState__DisableParentalControls7                             = 7,
	EParentalControlsViewState__AskToReEnable8                                       = 8,
	EParentalControlsViewState__ReEnabling9                                          = 9,
	EParentalControlsViewState__CabinModeEmailChange10                               = 10,
	EParentalControlsViewState__EParentalControlsViewState_MAX11                     = 11
};

/// Enum /Script/FortniteUI.ESpatialCustomizationRoomState
/// Size: 0x04
enum ESpatialCustomizationRoomState : uint8_t
{
	ESpatialCustomizationRoomState__None0                                            = 0,
	ESpatialCustomizationRoomState__CategorySelection1                               = 1,
	ESpatialCustomizationRoomState__CustomizationSelection2                          = 2,
	ESpatialCustomizationRoomState__ESpatialCustomizationRoomState_MAX3              = 3
};

/// Enum /Script/FortniteUI.ESpatialCustomizationCategoryState
/// Size: 0x07
enum ESpatialCustomizationCategoryState : uint8_t
{
	ESpatialCustomizationCategoryState__LockedByBattlePass0                          = 0,
	ESpatialCustomizationCategoryState__LockedByChallenge1                           = 1,
	ESpatialCustomizationCategoryState__LockedByChallengeCompletion2                 = 2,
	ESpatialCustomizationCategoryState__UnlockAvailable3                             = 3,
	ESpatialCustomizationCategoryState__UnlockUsed4                                  = 4,
	ESpatialCustomizationCategoryState__Max_NONE5                                    = 5,
	ESpatialCustomizationCategoryState__ESpatialCustomizationCategoryState_MAX6      = 6
};

/// Enum /Script/FortniteUI.EFortTopBarTabButtonGroup
/// Size: 0x05
enum EFortTopBarTabButtonGroup : uint8_t
{
	EFortTopBarTabButtonGroup__Discover0                                             = 0,
	EFortTopBarTabButtonGroup__Core1                                                 = 1,
	EFortTopBarTabButtonGroup__Game2                                                 = 2,
	EFortTopBarTabButtonGroup__PinnedRight3                                          = 3,
	EFortTopBarTabButtonGroup__EFortTopBarTabButtonGroup_MAX4                        = 4
};

/// Enum /Script/FortniteUI.ETooltipAlignment
/// Size: 0x05
enum ETooltipAlignment : uint8_t
{
	ETooltipAlignment__Up0                                                           = 0,
	ETooltipAlignment__Down1                                                         = 1,
	ETooltipAlignment__Left2                                                         = 2,
	ETooltipAlignment__Right3                                                        = 3,
	ETooltipAlignment__ETooltipAlignment_MAX4                                        = 4
};

/// Enum /Script/FortniteUI.EFortNotificationEntryCompletionStatus
/// Size: 0x04
enum EFortNotificationEntryCompletionStatus : uint8_t
{
	EFortNotificationEntryCompletionStatus__New0                                     = 0,
	EFortNotificationEntryCompletionStatus__Active1                                  = 1,
	EFortNotificationEntryCompletionStatus__Completed2                               = 2,
	EFortNotificationEntryCompletionStatus__MAX3                                     = 3
};

/// Enum /Script/FortniteUI.EFortEarnedSubRewardType
/// Size: 0x03
enum EFortEarnedSubRewardType : uint8_t
{
	EFortEarnedSubRewardType__XP0                                                    = 0,
	EFortEarnedSubRewardType__Bars1                                                  = 1,
	EFortEarnedSubRewardType__EFortEarnedSubRewardType_MAX2                          = 2
};

/// Enum /Script/FortniteUI.EItemContextAction
/// Size: 0x06
enum EItemContextAction : uint8_t
{
	EItemContextAction__Equip0                                                       = 0,
	EItemContextAction__GoToBattlePassRewards1                                       = 1,
	EItemContextAction__GoToBattlePassCustomization2                                 = 2,
	EItemContextAction__GoToSpecialCollection3                                       = 3,
	EItemContextAction__Count4                                                       = 4,
	EItemContextAction__EItemContextAction_MAX5                                      = 5
};

/// Enum /Script/FortniteUI.EFortLoadoutCardType
/// Size: 0x05
enum EFortLoadoutCardType : uint8_t
{
	EFortLoadoutCardType__Items0                                                     = 0,
	EFortLoadoutCardType__AddTile1                                                   = 1,
	EFortLoadoutCardType__AddPreviewItems2                                           = 2,
	EFortLoadoutCardType__Blank3                                                     = 3,
	EFortLoadoutCardType__EFortLoadoutCardType_MAX4                                  = 4
};

/// Enum /Script/FortniteUI.EFortSupportPerkWidgetState
/// Size: 0x04
enum EFortSupportPerkWidgetState : uint8_t
{
	EFortSupportPerkWidgetState__Normal0                                             = 0,
	EFortSupportPerkWidgetState__Upgrade1                                            = 1,
	EFortSupportPerkWidgetState__Evolution2                                          = 2,
	EFortSupportPerkWidgetState__EFortSupportPerkWidgetState_MAX3                    = 3
};

/// Enum /Script/FortniteUI.EFortItemCountStyle
/// Size: 0x04
enum EFortItemCountStyle : uint8_t
{
	EFortItemCountStyle__StackCount0                                                 = 0,
	EFortItemCountStyle__OverrideCount1                                              = 1,
	EFortItemCountStyle__StackCountOverOverride2                                     = 2,
	EFortItemCountStyle__EFortItemCountStyle_MAX3                                    = 3
};

/// Enum /Script/FortniteUI.EPresentationMode
/// Size: 0x03
enum EPresentationMode : uint8_t
{
	EPresentationMode__ItemList0                                                     = 0,
	EPresentationMode__VariantList1                                                  = 1,
	EPresentationMode__EPresentationMode_MAX2                                        = 2
};

/// Enum /Script/FortniteUI.ELiveStreamStandaloneBlocked
/// Size: 0x02
enum ELiveStreamStandaloneBlocked : uint8_t
{
	ELiveStreamStandaloneBlocked__StreamInWorldActive0                               = 0,
	ELiveStreamStandaloneBlocked__ELiveStreamStandaloneBlocked_MAX1                  = 1
};

/// Enum /Script/FortniteUI.EMatchmakingInputSource
/// Size: 0x04
enum EMatchmakingInputSource : uint8_t
{
	EMatchmakingInputSource__Local0                                                  = 0,
	EMatchmakingInputSource__Remote1                                                 = 1,
	EMatchmakingInputSource__Pool2                                                   = 2,
	EMatchmakingInputSource__EMatchmakingInputSource_MAX3                            = 3
};

/// Enum /Script/FortniteUI.UFortActivatableVideoEvents
/// Size: 0x03
enum UFortActivatableVideoEvents : uint8_t
{
	UFortActivatableVideoEvents__Finished0                                           = 0,
	UFortActivatableVideoEvents__Skipped1                                            = 1,
	UFortActivatableVideoEvents__UFortActivatableVideoEvents_MAX2                    = 2
};

/// Enum /Script/FortniteUI.UFortActivatablePrePostRollStates
/// Size: 0x10
enum UFortActivatablePrePostRollStates : uint8_t
{
	UFortActivatablePrePostRollStates__None0                                         = 0,
	UFortActivatablePrePostRollStates__PreRoll1                                      = 1,
	UFortActivatablePrePostRollStates__PreRollComplete2                              = 2,
	UFortActivatablePrePostRollStates__PostRoll3                                     = 3,
	UFortActivatablePrePostRollStates__PostRollComplete4                             = 4,
	UFortActivatablePrePostRollStates__BeginningStepOne5                             = 5,
	UFortActivatablePrePostRollStates__BeginningStepTwo6                             = 6,
	UFortActivatablePrePostRollStates__Middle7                                       = 7,
	UFortActivatablePrePostRollStates__End8                                          = 8,
	UFortActivatablePrePostRollStates__UFortActivatablePrePostRollStates_MAX9        = 9
};

/// Enum /Script/FortniteUI.UFortActivatableVideoPanelEvents
/// Size: 0x03
enum UFortActivatableVideoPanelEvents : uint8_t
{
	UFortActivatableVideoPanelEvents__Finished0                                      = 0,
	UFortActivatableVideoPanelEvents__Skipped1                                       = 1,
	UFortActivatableVideoPanelEvents__UFortActivatableVideoPanelEvents_MAX2          = 2
};

/// Enum /Script/FortniteUI.EFortMissionActivationWidgetState
/// Size: 0x05
enum EFortMissionActivationWidgetState : uint8_t
{
	EFortMissionActivationWidgetState__Default0                                      = 0,
	EFortMissionActivationWidgetState__StartObjective1                               = 1,
	EFortMissionActivationWidgetState__IncreaseDifficulty2                           = 2,
	EFortMissionActivationWidgetState__Invalid3                                      = 3,
	EFortMissionActivationWidgetState__EFortMissionActivationWidgetState_MAX4        = 4
};

/// Enum /Script/FortniteUI.EFortMtxOfferDisplaySize
/// Size: 0x04
enum EFortMtxOfferDisplaySize : uint8_t
{
	EFortMtxOfferDisplaySize__Small0                                                 = 0,
	EFortMtxOfferDisplaySize__Medium1                                                = 1,
	EFortMtxOfferDisplaySize__Large2                                                 = 2,
	EFortMtxOfferDisplaySize__EFortMtxOfferDisplaySize_MAX3                          = 3
};

/// Enum /Script/FortniteUI.EFortItemShopContentType
/// Size: 0x03
enum EFortItemShopContentType : uint8_t
{
	EFortItemShopContentType__BattleRoyale0                                          = 0,
	EFortItemShopContentType__TestContentType1                                       = 1,
	EFortItemShopContentType__MAX2                                                   = 2
};

/// Enum /Script/FortniteUI.EFortItemShopShowIneligibleOffers
/// Size: 0x04
enum EFortItemShopShowIneligibleOffers : uint8_t
{
	EFortItemShopShowIneligibleOffers__Always0                                       = 0,
	EFortItemShopShowIneligibleOffers__OnlyGiftable1                                 = 1,
	EFortItemShopShowIneligibleOffers__Never2                                        = 2,
	EFortItemShopShowIneligibleOffers__EFortItemShopShowIneligibleOffers_MAX3        = 3
};

/// Enum /Script/FortniteUI.EChannelSpeakerStyle
/// Size: 0x04
enum EChannelSpeakerStyle : uint8_t
{
	EChannelSpeakerStyle__InGame0                                                    = 0,
	EChannelSpeakerStyle__InLobby1                                                   = 1,
	EChannelSpeakerStyle__OutOfClient2                                               = 2,
	EChannelSpeakerStyle__Max3                                                       = 3
};

/// Enum /Script/FortniteUI.EPlayerFeedbackSubmitState
/// Size: 0x05
enum EPlayerFeedbackSubmitState : uint8_t
{
	EPlayerFeedbackSubmitState__Start0                                               = 0,
	EPlayerFeedbackSubmitState__Submitting1                                          = 1,
	EPlayerFeedbackSubmitState__SubmitFailed2                                        = 2,
	EPlayerFeedbackSubmitState__SubmitSucceeded3                                     = 3,
	EPlayerFeedbackSubmitState__EPlayerFeedbackSubmitState_MAX4                      = 4
};

/// Enum /Script/FortniteUI.EPlayerFeedback_EpicQAState
/// Size: 0x05
enum EPlayerFeedback_EpicQAState : uint8_t
{
	EPlayerFeedback_EpicQAState__SignInPage0                                         = 0,
	EPlayerFeedback_EpicQAState__SigningInFailed1                                    = 1,
	EPlayerFeedback_EpicQAState__SigningIn2                                          = 2,
	EPlayerFeedback_EpicQAState__SelectBugComponent3                                 = 3,
	EPlayerFeedback_EpicQAState__EPlayerFeedback_MAX4                                = 4
};

/// Enum /Script/FortniteUI.EFortPlayerFeedbackFlags
/// Size: 0x08
enum EFortPlayerFeedbackFlags : uint8_t
{
	EFortPlayerFeedbackFlags__SubscreenFlow_ForceDisplayFreeText0                    = 0,
	EFortPlayerFeedbackFlags__SubscreenFlow_IncludeScreenshotSubscreen1              = 1,
	EFortPlayerFeedbackFlags__DoNotDisplay_SaveTheWorld2                             = 2,
	EFortPlayerFeedbackFlags__DoNotDisplay_Athena3                                   = 3,
	EFortPlayerFeedbackFlags__DoNotDisplay_Creative4                                 = 4,
	EFortPlayerFeedbackFlags__Submit_TryDisplayBlockUser5                            = 5,
	EFortPlayerFeedbackFlags__Submit_TryDisplayCommunityRulesURL6                    = 6,
	EFortPlayerFeedbackFlags__EFortPlayerFeedbackFlags_MAX7                          = 7
};

/// Enum /Script/FortniteUI.ESaveProfileForBanners
/// Size: 0x03
enum ESaveProfileForBanners : uint8_t
{
	ESaveProfileForBanners__SaveTheWorld0                                            = 0,
	ESaveProfileForBanners__BattleRoyale1                                            = 1,
	ESaveProfileForBanners__ESaveProfileForBanners_MAX2                              = 2
};

/// Enum /Script/FortniteUI.EFortRadialControllingStick
/// Size: 0x03
enum EFortRadialControllingStick : uint8_t
{
	EFortRadialControllingStick__Right0                                              = 0,
	EFortRadialControllingStick__Left1                                               = 1,
	EFortRadialControllingStick__EFortRadialControllingStick_MAX2                    = 2
};

/// Enum /Script/FortniteUI.ECardinalPoint
/// Size: 0x10
enum ECardinalPoint : uint8_t
{
	ECardinalPoint__E0                                                               = 0,
	ECardinalPoint__NE1                                                              = 1,
	ECardinalPoint__N2                                                               = 2,
	ECardinalPoint__NW3                                                              = 3,
	ECardinalPoint__W4                                                               = 4,
	ECardinalPoint__SW5                                                              = 5,
	ECardinalPoint__S6                                                               = 6,
	ECardinalPoint__SE7                                                              = 7,
	ECardinalPoint__None8                                                            = 8,
	ECardinalPoint__ECardinalPoint_MAX9                                              = 9
};

/// Enum /Script/FortniteUI.ERadialOrderingMode
/// Size: 0x05
enum ERadialOrderingMode : uint8_t
{
	ERadialOrderingMode__CounterClockwise0                                           = 0,
	ERadialOrderingMode__Clockwise1                                                  = 1,
	ERadialOrderingMode__Cardinal2                                                   = 2,
	ERadialOrderingMode__Custom3                                                     = 3,
	ERadialOrderingMode__ERadialOrderingMode_MAX4                                    = 4
};

/// Enum /Script/FortniteUI.EBattlePassPurchaseButtonLayout
/// Size: 0x04
enum EBattlePassPurchaseButtonLayout : uint8_t
{
	EBattlePassPurchaseButtonLayout__Normal0                                         = 0,
	EBattlePassPurchaseButtonLayout__Bundle1                                         = 1,
	EBattlePassPurchaseButtonLayout__Normal_PaysForSelf2                             = 2,
	EBattlePassPurchaseButtonLayout__EBattlePassPurchaseButtonLayout_MAX3            = 3
};

/// Enum /Script/FortniteUI.EBattlePassView
/// Size: 0x10
enum EBattlePassView : uint8_t
{
	EBattlePassView__None0                                                           = 0,
	EBattlePassView__LandingPage1                                                    = 1,
	EBattlePassView__RewardOverview2                                                 = 2,
	EBattlePassView__ItemDetails3                                                    = 3,
	EBattlePassView__BulkBuyRewards4                                                 = 4,
	EBattlePassView__CharacterCustomizer5                                            = 5,
	EBattlePassView__BonusRewards6                                                   = 6,
	EBattlePassView__Weekly7                                                         = 7,
	EBattlePassView__Quests8                                                         = 8,
	EBattlePassView__EBattlePassView_MAX9                                            = 9
};

/// Enum /Script/FortniteUI.EBattlePassFeatures
/// Size: 0x09
enum EBattlePassFeatures : uint8_t
{
	EBattlePassFeatures__None0                                                       = 0,
	EBattlePassFeatures__BuyBattlePass1                                              = 1,
	EBattlePassFeatures__GiftBattlePass2                                             = 2,
	EBattlePassFeatures__BuySubscription3                                            = 3,
	EBattlePassFeatures__ViewDetails4                                                = 4,
	EBattlePassFeatures__WatchVideo5                                                 = 5,
	EBattlePassFeatures__ShowAbout6                                                  = 6,
	EBattlePassFeatures__PurchaseResources7                                          = 7,
	EBattlePassFeatures__EBattlePassFeatures_MAX8                                    = 8
};

/// Enum /Script/FortniteUI.EBattlePassCurrencyType
/// Size: 0x04
enum EBattlePassCurrencyType : uint8_t
{
	EBattlePassCurrencyType__BattleStar0                                             = 0,
	EBattlePassCurrencyType__CustomSkin1                                             = 1,
	EBattlePassCurrencyType__TOTAL_CURRENCIES2                                       = 2,
	EBattlePassCurrencyType__EBattlePassCurrencyType_MAX3                            = 3
};

/// Enum /Script/FortniteUI.EBattlePassRewardPrerequisiteType
/// Size: 0x06
enum EBattlePassRewardPrerequisiteType : uint8_t
{
	EBattlePassRewardPrerequisiteType__RewardCount0                                  = 0,
	EBattlePassRewardPrerequisiteType__RequiredItems1                                = 1,
	EBattlePassRewardPrerequisiteType__Quest2                                        = 2,
	EBattlePassRewardPrerequisiteType__NeededLevels3                                 = 3,
	EBattlePassRewardPrerequisiteType__NONE4                                         = 4,
	EBattlePassRewardPrerequisiteType__EBattlePassRewardPrerequisiteType_MAX5        = 5
};

/// Enum /Script/FortniteUI.ERewardPageType
/// Size: 0x06
enum ERewardPageType : uint8_t
{
	ERewardPageType__Reward0                                                         = 0,
	ERewardPageType__Quest1                                                          = 1,
	ERewardPageType__Bonus2                                                          = 2,
	ERewardPageType__Customization3                                                  = 3,
	ERewardPageType__Weekly4                                                         = 4,
	ERewardPageType__MAX5                                                            = 5
};

/// Enum /Script/FortniteUI.EFortDateTimeStyle
/// Size: 0x06
enum EFortDateTimeStyle : uint8_t
{
	EFortDateTimeStyle__Default0                                                     = 0,
	EFortDateTimeStyle__Short1                                                       = 1,
	EFortDateTimeStyle__Medium2                                                      = 2,
	EFortDateTimeStyle__Long3                                                        = 3,
	EFortDateTimeStyle__Full4                                                        = 4,
	EFortDateTimeStyle__EFortDateTimeStyle_MAX5                                      = 5
};

/// Enum /Script/FortniteUI.EFortShowdownMatchType
/// Size: 0x05
enum EFortShowdownMatchType : uint8_t
{
	EFortShowdownMatchType__Unknown0                                                 = 0,
	EFortShowdownMatchType__Solo1                                                    = 1,
	EFortShowdownMatchType__Duos2                                                    = 2,
	EFortShowdownMatchType__Squads3                                                  = 3,
	EFortShowdownMatchType__EFortShowdownMatchType_MAX4                              = 4
};

/// Enum /Script/FortniteUI.EFortShowdownEventState
/// Size: 0x12
enum EFortShowdownEventState : uint8_t
{
	EFortShowdownEventState__Unknown0                                                = 0,
	EFortShowdownEventState__FutureTBD1                                              = 1,
	EFortShowdownEventState__FutureScheduled2                                        = 2,
	EFortShowdownEventState__FutureNext3                                             = 3,
	EFortShowdownEventState__Live4                                                   = 4,
	EFortShowdownEventState__LiveParticipating5                                      = 5,
	EFortShowdownEventState__LiveNotParticipating6                                   = 6,
	EFortShowdownEventState__Completed7                                              = 7,
	EFortShowdownEventState__CompletedParticipated8                                  = 8,
	EFortShowdownEventState__CompletedNotPartipated9                                 = 9,
	EFortShowdownEventState__Cancelled10                                             = 10,
	EFortShowdownEventState__EFortShowdownEventState_MAX11                           = 11
};

/// Enum /Script/FortniteUI.EFortEventWindowEligibility
/// Size: 0x05
enum EFortEventWindowEligibility : uint8_t
{
	EFortEventWindowEligibility__Unknown0                                            = 0,
	EFortEventWindowEligibility__Public1                                             = 1,
	EFortEventWindowEligibility__Private2                                            = 2,
	EFortEventWindowEligibility__Locked3                                             = 3,
	EFortEventWindowEligibility__EFortEventWindowEligibility_MAX4                    = 4
};

/// Enum /Script/FortniteUI.EFortShowdownPinState
/// Size: 0x04
enum EFortShowdownPinState : uint8_t
{
	EFortShowdownPinState__None0                                                     = 0,
	EFortShowdownPinState__Locked1                                                   = 1,
	EFortShowdownPinState__Unlocked2                                                 = 2,
	EFortShowdownPinState__EFortShowdownPinState_MAX3                                = 3
};

/// Enum /Script/FortniteUI.EFortAlterationWidgetState
/// Size: 0x04
enum EFortAlterationWidgetState : uint8_t
{
	EFortAlterationWidgetState__Normal0                                              = 0,
	EFortAlterationWidgetState__Upgrade1                                             = 1,
	EFortAlterationWidgetState__Evolution2                                           = 2,
	EFortAlterationWidgetState__EFortAlterationWidgetState_MAX3                      = 3
};

/// Enum /Script/FortniteUI.EFortDefenderSlotType
/// Size: 0x04
enum EFortDefenderSlotType : uint8_t
{
	EFortDefenderSlotType__Invalid0                                                  = 0,
	EFortDefenderSlotType__Defender1                                                 = 1,
	EFortDefenderSlotType__Weapon2                                                   = 2,
	EFortDefenderSlotType__EFortDefenderSlotType_MAX3                                = 3
};

/// Enum /Script/FortniteUI.ESubgameLoadFromCMS
/// Size: 0x03
enum ESubgameLoadFromCMS : uint8_t
{
	ESubgameLoadFromCMS__DoNotLoadFromCMS0                                           = 0,
	ESubgameLoadFromCMS__LoadImageFromCMS1                                           = 1,
	ESubgameLoadFromCMS__ESubgameLoadFromCMS_MAX2                                    = 2
};

/// Enum /Script/FortniteUI.ESubgameTileType
/// Size: 0x04
enum ESubgameTileType : uint8_t
{
	ESubgameTileType__Campaign0                                                      = 0,
	ESubgameTileType__Athena1                                                        = 1,
	ESubgameTileType__Creative2                                                      = 2,
	ESubgameTileType__ESubgameTileType_MAX3                                          = 3
};

/// Enum /Script/FortniteUI.EProgressiveSetProgress
/// Size: 0x05
enum EProgressiveSetProgress : uint8_t
{
	EProgressiveSetProgress__NoProgress0                                             = 0,
	EProgressiveSetProgress__PartialProgress1                                        = 1,
	EProgressiveSetProgress__Completed2                                              = 2,
	EProgressiveSetProgress__Expired3                                                = 3,
	EProgressiveSetProgress__EProgressiveSetProgress_MAX4                            = 4
};

/// Enum /Script/FortniteUI.ESubscriptionCancellability
/// Size: 0x04
enum ESubscriptionCancellability : uint8_t
{
	ESubscriptionCancellability__NotCancellable0                                     = 0,
	ESubscriptionCancellability__CancellabeOnPlatform1                               = 1,
	ESubscriptionCancellability__CancellableAnywhere2                                = 2,
	ESubscriptionCancellability__ESubscriptionCancellability_MAX3                    = 3
};

/// Enum /Script/FortniteUI.EFortMemberConnectionState
/// Size: 0x05
enum EFortMemberConnectionState : uint8_t
{
	EFortMemberConnectionState__Open0                                                = 0,
	EFortMemberConnectionState__Connecting1                                          = 1,
	EFortMemberConnectionState__Connected2                                           = 2,
	EFortMemberConnectionState__Invalid3                                             = 3,
	EFortMemberConnectionState__EFortMemberConnectionState_MAX4                      = 4
};

/// Enum /Script/FortniteUI.ETournmentPosterViolatorState
/// Size: 0x05
enum ETournmentPosterViolatorState : uint8_t
{
	ETournmentPosterViolatorState__Hidden0                                           = 0,
	ETournmentPosterViolatorState__Live1                                             = 1,
	ETournmentPosterViolatorState__Countdown2                                        = 2,
	ETournmentPosterViolatorState__Info3                                             = 3,
	ETournmentPosterViolatorState__ETournmentPosterViolatorState_MAX4                = 4
};

/// Enum /Script/FortniteUI.EFortAthenaTutorialStep
/// Size: 0x14
enum EFortAthenaTutorialStep : uint8_t
{
	EFortAthenaTutorialStep__Look0                                                   = 0,
	EFortAthenaTutorialStep__Move1                                                   = 1,
	EFortAthenaTutorialStep__Harvest2                                                = 2,
	EFortAthenaTutorialStep__Clamber3                                                = 3,
	EFortAthenaTutorialStep__Pickup4                                                 = 4,
	EFortAthenaTutorialStep__Shoot5                                                  = 5,
	EFortAthenaTutorialStep__Ambush6                                                 = 6,
	EFortAthenaTutorialStep__Heal7                                                   = 7,
	EFortAthenaTutorialStep__Build8                                                  = 8,
	EFortAthenaTutorialStep__Chest9                                                  = 9,
	EFortAthenaTutorialStep__Scoping10                                               = 10,
	EFortAthenaTutorialStep__Completed11                                             = 11,
	EFortAthenaTutorialStep__Count12                                                 = 12,
	EFortAthenaTutorialStep__EFortAthenaTutorialStep_MAX13                           = 13
};

/// Enum /Script/FortniteUI.EFortAthenaTutorialSubstep
/// Size: 0x41
enum EFortAthenaTutorialSubstep : uint8_t
{
	EFortAthenaTutorialSubstep__ScreenSwipeToLook0                                   = 0,
	EFortAthenaTutorialSubstep__ScreenFindMarker1                                    = 1,
	EFortAthenaTutorialSubstep__ScreenUseLeftStick2                                  = 2,
	EFortAthenaTutorialSubstep__ScreenMoveToBuilding3                                = 3,
	EFortAthenaTutorialSubstep__ScreenJump4                                          = 4,
	EFortAthenaTutorialSubstep__ScreenCrouch5                                        = 5,
	EFortAthenaTutorialSubstep__ScreenReachMarker6                                   = 6,
	EFortAthenaTutorialSubstep__ScreenUsePickaxe7                                    = 7,
	EFortAthenaTutorialSubstep__ScreenReachClamber8                                  = 8,
	EFortAthenaTutorialSubstep__ScreenClamber9                                       = 9,
	EFortAthenaTutorialSubstep__ScreenReachPickUp10                                  = 10,
	EFortAthenaTutorialSubstep__ScreenPickUpItems11                                  = 11,
	EFortAthenaTutorialSubstep__ScreenEquipItem12                                    = 12,
	EFortAthenaTutorialSubstep__ScreenShootTargets13                                 = 13,
	EFortAthenaTutorialSubstep__ScreenReload14                                       = 14,
	EFortAthenaTutorialSubstep__ScreenReachLocation15                                = 15,
	EFortAthenaTutorialSubstep__ScreenDefendYourself16                               = 16,
	EFortAthenaTutorialSubstep__ScreenHealthAlert17                                  = 17,
	EFortAthenaTutorialSubstep__ScreenDestroyEnemies18                               = 18,
	EFortAthenaTutorialSubstep__ScreenCollectLoot19                                  = 19,
	EFortAthenaTutorialSubstep__ScreenUseMedkit20                                    = 20,
	EFortAthenaTutorialSubstep__ScreenUseShield21                                    = 21,
	EFortAthenaTutorialSubstep__ScreenShieldInfo22                                   = 22,
	EFortAthenaTutorialSubstep__ScreenLookForChest23                                 = 23,
	EFortAthenaTutorialSubstep__ScreenChestFound24                                   = 24,
	EFortAthenaTutorialSubstep__ScreenSelectBuildMode25                              = 25,
	EFortAthenaTutorialSubstep__ScreenShowMaterials26                                = 26,
	EFortAthenaTutorialSubstep__ScreenShowBuildPieces27                              = 27,
	EFortAthenaTutorialSubstep__ScreenSelectStairs28                                 = 28,
	EFortAthenaTutorialSubstep__ScreenPlaceStairs29                                  = 29,
	EFortAthenaTutorialSubstep__ScreenReachChest30                                   = 30,
	EFortAthenaTutorialSubstep__ScreenExitBuildMode31                                = 31,
	EFortAthenaTutorialSubstep__ScreenLootChest32                                    = 32,
	EFortAthenaTutorialSubstep__ScreenCollectLootChest33                             = 33,
	EFortAthenaTutorialSubstep__ScreenEquipRifle34                                   = 34,
	EFortAthenaTutorialSubstep__ScreenUseScope35                                     = 35,
	EFortAthenaTutorialSubstep__ScreenShootTargetsScoping36                          = 36,
	EFortAthenaTutorialSubstep__ScreenCompleted37                                    = 37,
	EFortAthenaTutorialSubstep__HealingInterrupted38                                 = 38,
	EFortAthenaTutorialSubstep__Count39                                              = 39,
	EFortAthenaTutorialSubstep__EFortAthenaTutorialSubstep_MAX40                     = 40
};

/// Enum /Script/FortniteUI.EFortAthenaTutorialScreenExtraWidget
/// Size: 0x05
enum EFortAthenaTutorialScreenExtraWidget : uint8_t
{
	EFortAthenaTutorialScreenExtraWidget__None0                                      = 0,
	EFortAthenaTutorialScreenExtraWidget__DragToTurn1                                = 1,
	EFortAthenaTutorialScreenExtraWidget__Completed2                                 = 2,
	EFortAthenaTutorialScreenExtraWidget__Count3                                     = 3,
	EFortAthenaTutorialScreenExtraWidget__EFortAthenaTutorialScreenExtraWidget_MAX4  = 4
};

/// Enum /Script/FortniteUI.ELetoDisplayMode
/// Size: 0x04
enum ELetoDisplayMode : uint8_t
{
	ELetoDisplayMode__PrimaryOnly0                                                   = 0,
	ELetoDisplayMode__SingleToggle1                                                  = 1,
	ELetoDisplayMode__Simultaneous2                                                  = 2,
	ELetoDisplayMode__ELetoDisplayMode_MAX3                                          = 3
};

/// Enum /Script/FortniteUI.EFortLoginDisplay
/// Size: 0x07
enum EFortLoginDisplay : uint8_t
{
	EFortLoginDisplay__LoginStatus0                                                  = 0,
	EFortLoginDisplay__SplashScreen1                                                 = 1,
	EFortLoginDisplay__SignIn2                                                       = 2,
	EFortLoginDisplay__SafeZoneEditor3                                               = 3,
	EFortLoginDisplay__HealthWarning4                                                = 4,
	EFortLoginDisplay__QualityPresetSelection5                                       = 5,
	EFortLoginDisplay__EFortLoginDisplay_MAX6                                        = 6
};

/// Enum /Script/FortniteUI.EDynamicEntryPatternDirection
/// Size: 0x03
enum EDynamicEntryPatternDirection : uint8_t
{
	EDynamicEntryPatternDirection__FirstToLast0                                      = 0,
	EDynamicEntryPatternDirection__LastToFirst1                                      = 1,
	EDynamicEntryPatternDirection__EDynamicEntryPatternDirection_MAX2                = 2
};

/// Enum /Script/FortniteUI.ETutorialButtonInteractionType
/// Size: 0x03
enum ETutorialButtonInteractionType : uint8_t
{
	ETutorialButtonInteractionType__Click0                                           = 0,
	ETutorialButtonInteractionType__Press1                                           = 1,
	ETutorialButtonInteractionType__ETutorialButtonInteractionType_MAX2              = 2
};

/// Enum /Script/FortniteUI.EHighlightType
/// Size: 0x04
enum EHighlightType : uint8_t
{
	EHighlightType__ESquareHighlight0                                                = 0,
	EHighlightType__ECircleHighlight_Big1                                            = 1,
	EHighlightType__ECircleHighlight_Small2                                          = 2,
	EHighlightType__EHighlightType_MAX3                                              = 3
};

